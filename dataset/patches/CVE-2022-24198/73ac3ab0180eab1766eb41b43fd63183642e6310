From 73ac3ab0180eab1766eb41b43fd63183642e6310 Mon Sep 17 00:00:00 2001
From: comqdhb <d.h.bowes@lancaster.ac.uk>
Date: Tue, 22 Jun 2021 09:45:44 +0100
Subject: [PATCH] Patch for dealing with badly formed pdfs made on an ipad

While reading a pdf annotated on an iPad, the dictionary was created with a String "Name" and not a token.Name.  If we accept a String as a valid name, the reader can continue.

Makes me think that there should be a way of continuing if an err occurs.
---
 kernel/src/main/java/com/itextpdf/kernel/pdf/PdfReader.java | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/kernel/src/main/java/com/itextpdf/kernel/pdf/PdfReader.java b/kernel/src/main/java/com/itextpdf/kernel/pdf/PdfReader.java
index 85aa1f65db..bb869e89f6 100644
--- a/kernel/src/main/java/com/itextpdf/kernel/pdf/PdfReader.java
+++ b/kernel/src/main/java/com/itextpdf/kernel/pdf/PdfReader.java
@@ -923,7 +923,8 @@ protected PdfDictionary readDictionary(boolean objStm) throws IOException {
             tokens.nextValidToken();
             if (tokens.getTokenType() == PdfTokenizer.TokenType.EndDic)
                 break;
-            if (tokens.getTokenType() != PdfTokenizer.TokenType.Name)
+            //following needed for a pdf created with ipad where the dictionary started with a String not a name
+            if (tokens.getTokenType() != PdfTokenizer.TokenType.Name && tokens.getTokenType()!=PdfTokenizer.TokenType.String)
                 tokens.throwError(PdfException.DictionaryKey1IsNotAName, tokens.getStringValue());
             PdfName name = readPdfName(true);
             PdfObject obj = readObject(true, objStm);
