From 21d2bc3cffeefab6c41627da469fce35ed7760e6 Mon Sep 17 00:00:00 2001
From: Andreas Beeker <kiwiwings@apache.org>
Date: Sun, 7 Dec 2014 14:34:19 +0000
Subject: [PATCH] #57272 - deadlock on corrupted PPT file + some refactoring in
 HSLFSlideShow, which will be necessary for cryptoapi support

git-svn-id: https://svn.apache.org/repos/asf/poi/trunk@1643680 13f79535-47bb-0310-9956-ffa450edef68
---
 .../org/apache/poi/hslf/HSLFSlideShow.java    | 115 +++++++++++-------
 .../apache/poi/hslf/usermodel/TestBugs.java   |  15 +++
 .../57272_corrupted_usereditatom.ppt          | Bin 0 -> 72192 bytes
 3 files changed, 85 insertions(+), 45 deletions(-)
 create mode 100644 test-data/slideshow/57272_corrupted_usereditatom.ppt

diff --git a/src/scratchpad/src/org/apache/poi/hslf/HSLFSlideShow.java b/src/scratchpad/src/org/apache/poi/hslf/HSLFSlideShow.java
index 420bd383f65..8669caf2cd1 100644
--- a/src/scratchpad/src/org/apache/poi/hslf/HSLFSlideShow.java
+++ b/src/scratchpad/src/org/apache/poi/hslf/HSLFSlideShow.java
@@ -20,16 +20,16 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 import java.io.ByteArrayInputStream;
 import java.io.ByteArrayOutputStream;
 import java.io.FileInputStream;
-import java.io.FileNotFoundException;
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.OutputStream;
 import java.util.ArrayList;
-import java.util.Arrays;
 import java.util.HashMap;
 import java.util.Hashtable;
 import java.util.List;
 import java.util.Map;
+import java.util.NavigableMap;
+import java.util.TreeMap;
 
 import org.apache.poi.POIDocument;
 import org.apache.poi.hslf.exceptions.CorruptPowerPointFileException;
@@ -81,7 +81,7 @@ public final class HSLFSlideShow extends POIDocument {
 
     // Embedded objects stored in storage records in the document stream, lazily populated.
     private ObjectData[] _objects;
-
+    
     /**
 	 * Returns the underlying POIFSFileSystem for the document
 	 *  that is open.
@@ -195,6 +195,9 @@ public HSLFSlideShow(DirectoryNode dir) throws IOException
 		// Look for any other streams
 		readOtherStreams();
 	}
+	
+	
+	
 	/**
 	 * Constructs a new, empty, Powerpoint document.
 	 */
@@ -269,41 +272,67 @@ private void buildRecords()
         _records = read(_docstream, (int)currentUser.getCurrentEditOffset());
 	}
 
-    private Record[] read(byte[] docstream, int usrOffset){
-        ArrayList<Integer> lst = new ArrayList<Integer>();
-        HashMap<Integer,Integer> offset2id = new HashMap<Integer,Integer>();
+	private Record[] read(byte[] docstream, int usrOffset){
+        //sort found records by offset.
+        //(it is not necessary but SlideShow.findMostRecentCoreRecords() expects them sorted)
+	    NavigableMap<Integer,Record> records = new TreeMap<Integer,Record>(); // offset -> record
+        Map<Integer,Integer> persistIds = new HashMap<Integer,Integer>(); // offset -> persistId
+        initRecordOffsets(docstream, usrOffset, records, persistIds);
+        
+        for (Map.Entry<Integer,Record> entry : records.entrySet()) {
+            Integer offset = entry.getKey();
+            Record record = entry.getValue();
+            Integer persistId = persistIds.get(offset);
+            if (record == null) {
+                // all plain records have been already added,
+                // only new records need to be decrypted (tbd #35897)
+                record = Record.buildRecordAtOffset(docstream, offset);
+                entry.setValue(record);
+            }
+            
+            if (record instanceof PersistRecord) {
+                ((PersistRecord)record).setPersistId(persistId);
+            }            
+        }
+        
+        return records.values().toArray(new Record[records.size()]);
+    }
+
+    private void initRecordOffsets(byte[] docstream, int usrOffset, NavigableMap<Integer,Record> recordMap, Map<Integer,Integer> offset2id) {
         while (usrOffset != 0){
             UserEditAtom usr = (UserEditAtom) Record.buildRecordAtOffset(docstream, usrOffset);
-            lst.add(usrOffset);
+            recordMap.put(usrOffset, usr);
+            
             int psrOffset = usr.getPersistPointersOffset();
-
             PersistPtrHolder ptr = (PersistPtrHolder)Record.buildRecordAtOffset(docstream, psrOffset);
-            lst.add(psrOffset);
-            Hashtable<Integer,Integer> entries = ptr.getSlideLocationsLookup();
-            for(Integer id : entries.keySet()) {
-                Integer offset = entries.get(id);
-                lst.add(offset);
+            recordMap.put(psrOffset, ptr);
+            
+            for(Map.Entry<Integer,Integer> entry : ptr.getSlideLocationsLookup().entrySet()) {
+                Integer offset = entry.getValue();
+                Integer id = entry.getKey();
+                recordMap.put(offset, null); // reserve a slot for the record
                 offset2id.put(offset, id);
             }
-
+            
             usrOffset = usr.getLastUserEditAtomOffset();
-        }
-        //sort found records by offset.
-        //(it is not necessary but SlideShow.findMostRecentCoreRecords() expects them sorted)
-        Integer a[] = lst.toArray(new Integer[lst.size()]);
-        Arrays.sort(a);
-        Record[] rec = new Record[lst.size()];
-        for (int i = 0; i < a.length; i++) {
-            Integer offset = a[i];
-            rec[i] = Record.buildRecordAtOffset(docstream, offset.intValue());
-            if(rec[i] instanceof PersistRecord) {
-                PersistRecord psr = (PersistRecord)rec[i];
-                Integer id = offset2id.get(offset);
-                psr.setPersistId(id.intValue());
-            }
-        }
 
-        return rec;
+            // check for corrupted user edit atom and try to repair it
+            // if the next user edit atom offset is already known, we would go into an endless loop
+            if (usrOffset > 0 && recordMap.containsKey(usrOffset)) {
+                // a user edit atom is usually located 36 byte before the smallest known record offset 
+                usrOffset = recordMap.firstKey()-36;
+                // check that we really are located on a user edit atom
+                int ver_inst = LittleEndian.getUShort(docstream, usrOffset);
+                int type = LittleEndian.getUShort(docstream, usrOffset+2);
+                int len = LittleEndian.getInt(docstream, usrOffset+4);
+                if (ver_inst == 0 && type == 4085 && (len == 0x1C || len == 0x20)) {
+                    logger.log(POILogger.WARN, "Repairing invalid user edit atom");
+                    usr.setLastUserEditAtomOffset(usrOffset);
+                } else {
+                    throw new CorruptPowerPointFileException("Powerpoint document contains invalid user edit atom");
+                }
+            }
+        }       
     }
 
 	/**
@@ -324,34 +353,30 @@ private void readCurrentUserStream() {
 	private void readOtherStreams() {
 		// Currently, there aren't any
 	}
-
 	/**
 	 * Find and read in pictures contained in this presentation.
 	 * This is lazily called as and when we want to touch pictures.
 	 */
+    @SuppressWarnings("unused")
 	private void readPictures() throws IOException {
         _pictures = new ArrayList<PictureData>();
 
-		byte[] pictstream;
-
-		try {
-			DocumentEntry entry = (DocumentEntry)directory.getEntry("Pictures");
-			pictstream = new byte[entry.getSize()];
-			DocumentInputStream is = directory.createDocumentInputStream("Pictures");
-			is.read(pictstream);
-		} catch (FileNotFoundException e){
-			// Silently catch exceptions if the presentation doesn't
-			//  contain pictures - will use a null set instead
-			return;
-		}
+        // if the presentation doesn't contain pictures - will use a null set instead
+        if (!directory.hasEntry("Pictures")) return;
+        
+		DocumentEntry entry = (DocumentEntry)directory.getEntry("Pictures");
+		byte[] pictstream = new byte[entry.getSize()];
+		DocumentInputStream is = directory.createDocumentInputStream(entry);
+		is.read(pictstream);
+		is.close();
 
+		
         int pos = 0;
 		// An empty picture record (length 0) will take up 8 bytes
         while (pos <= (pictstream.length-8)) {
             int offset = pos;
-
+            
             // Image signature
-            @SuppressWarnings("unused")
             int signature = LittleEndian.getUShort(pictstream, pos);
             pos += LittleEndian.SHORT_SIZE;
             // Image type + 0xF018
diff --git a/src/scratchpad/testcases/org/apache/poi/hslf/usermodel/TestBugs.java b/src/scratchpad/testcases/org/apache/poi/hslf/usermodel/TestBugs.java
index c233077d385..4f5d7ae10b9 100644
--- a/src/scratchpad/testcases/org/apache/poi/hslf/usermodel/TestBugs.java
+++ b/src/scratchpad/testcases/org/apache/poi/hslf/usermodel/TestBugs.java
@@ -564,4 +564,19 @@ public void bug37625() throws IOException {
             inputStream.close();
         }
     }
+    
+    @Test
+    public void bug57272() throws Exception {
+        InputStream inputStream = new FileInputStream(_slTests.getFile("57272_corrupted_usereditatom.ppt"));
+        try {
+            SlideShow slideShow = new SlideShow(inputStream);
+            assertEquals(6, slideShow.getSlides().length);
+
+            SlideShow slideBack = HSLFTestDataSamples.writeOutAndReadBack(slideShow);
+            assertNotNull(slideBack);
+            assertEquals(6, slideBack.getSlides().length);
+        } finally {
+            inputStream.close();
+        }
+    }
 }
diff --git a/test-data/slideshow/57272_corrupted_usereditatom.ppt b/test-data/slideshow/57272_corrupted_usereditatom.ppt
new file mode 100644
index 0000000000000000000000000000000000000000..b811d6b043617ffe9e09cc2a609b3897d065786e
GIT binary patch
literal 72192
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

literal 0
HcmV?d00001

