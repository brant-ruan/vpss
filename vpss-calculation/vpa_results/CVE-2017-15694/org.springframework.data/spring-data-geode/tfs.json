{
  "2.0.9.RELEASE": [
    "<org.springframework.data.gemfire.client.PoolFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: boolean serialize(java.lang.Enum,java.io.DataOutput)>",
    "<org.springframework.data.gemfire.function.execution.RegionFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.function.execution.DefaultMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: org.apache.geode.cache.query.QueryService initQueryService(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: void potentiallyReRegisterThisSerializer()>",
    "<org.springframework.data.gemfire.client.ClientRegionFactoryBean: boolean isPoolResolvable(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: java.lang.Object fromData(java.io.DataInput)>",
    "<org.springframework.data.gemfire.function.execution.GroupMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: java.lang.Object convertToJson(java.lang.Object)>",
    "<org.springframework.data.gemfire.serialization.InstantiatorFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.client.ClientCacheFactoryBean: org.apache.geode.cache.client.Pool findPool(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: org.apache.geode.pdx.PdxInstance convertToPdx(java.lang.Object)>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.Pool lambda$getObject$8()>",
    "<org.springframework.data.gemfire.function.execution.AllMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.WiringInstantiator: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: java.lang.String lambda$eagerlyInitializePool$6(java.lang.String)>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.PoolFactory createPoolFactory()>",
    "<org.springframework.data.gemfire.function.execution.GroupMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>"
  ],
  "2.0.7.RELEASE": [
    "<org.springframework.data.gemfire.client.PoolFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: boolean serialize(java.lang.Enum,java.io.DataOutput)>",
    "<org.springframework.data.gemfire.function.execution.PoolServerFunctionExecution: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.function.execution.RegionFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.DefaultMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: org.apache.geode.cache.query.QueryService initQueryService(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: void potentiallyReRegisterThisSerializer()>",
    "<org.springframework.data.gemfire.client.ClientRegionFactoryBean: boolean isPoolResolvable(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: java.lang.Object fromData(java.io.DataInput)>",
    "<org.springframework.data.gemfire.function.execution.GroupMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: java.lang.Object convertToJson(java.lang.Object)>",
    "<org.springframework.data.gemfire.serialization.InstantiatorFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.client.ClientCacheFactoryBean: org.apache.geode.cache.client.Pool findPool(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: org.apache.geode.pdx.PdxInstance convertToPdx(java.lang.Object)>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.Pool lambda$getObject$8()>",
    "<org.springframework.data.gemfire.function.execution.AllMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.WiringInstantiator: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: java.lang.String lambda$eagerlyInitializePool$6(java.lang.String)>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.PoolFactory createPoolFactory()>",
    "<org.springframework.data.gemfire.function.execution.GroupMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>"
  ],
  "2.0.12.RELEASE": [
    "<org.springframework.data.gemfire.client.PoolFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: boolean serialize(java.lang.Enum,java.io.DataOutput)>",
    "<org.springframework.data.gemfire.function.execution.RegionFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.function.execution.DefaultMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: org.apache.geode.cache.query.QueryService initQueryService(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: void potentiallyReRegisterThisSerializer()>",
    "<org.springframework.data.gemfire.client.ClientRegionFactoryBean: boolean isPoolResolvable(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: java.lang.Object fromData(java.io.DataInput)>",
    "<org.springframework.data.gemfire.function.execution.GroupMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: java.lang.Object convertToJson(java.lang.Object)>",
    "<org.springframework.data.gemfire.serialization.InstantiatorFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.client.ClientCacheFactoryBean: org.apache.geode.cache.client.Pool findPool(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: org.apache.geode.pdx.PdxInstance convertToPdx(java.lang.Object)>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.Pool lambda$getObject$8()>",
    "<org.springframework.data.gemfire.function.execution.AllMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.WiringInstantiator: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: java.lang.String lambda$eagerlyInitializePool$6(java.lang.String)>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.PoolFactory createPoolFactory()>",
    "<org.springframework.data.gemfire.function.execution.GroupMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>"
  ],
  "2.0.6.RELEASE": [
    "<org.springframework.data.gemfire.client.PoolFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: boolean serialize(java.lang.Enum,java.io.DataOutput)>",
    "<org.springframework.data.gemfire.function.execution.PoolServerFunctionExecution: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.function.execution.RegionFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.DefaultMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: org.apache.geode.cache.query.QueryService initQueryService(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: void potentiallyReRegisterThisSerializer()>",
    "<org.springframework.data.gemfire.client.ClientRegionFactoryBean: boolean isPoolResolvable(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: java.lang.Object fromData(java.io.DataInput)>",
    "<org.springframework.data.gemfire.function.execution.GroupMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: java.lang.Object convertToJson(java.lang.Object)>",
    "<org.springframework.data.gemfire.serialization.InstantiatorFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.client.ClientCacheFactoryBean: org.apache.geode.cache.client.Pool findPool(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: org.apache.geode.pdx.PdxInstance convertToPdx(java.lang.Object)>",
    "<org.springframework.data.gemfire.function.execution.AllMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.WiringInstantiator: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: java.lang.String lambda$eagerlyInitializePool$6(java.lang.String)>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.PoolFactory createPoolFactory()>",
    "<org.springframework.data.gemfire.function.execution.GroupMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>"
  ],
  "2.0.4.RELEASE": [
    "<org.springframework.data.gemfire.client.PoolFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: boolean serialize(java.lang.Enum,java.io.DataOutput)>",
    "<org.springframework.data.gemfire.function.execution.PoolServerFunctionExecution: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.function.execution.RegionFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.DefaultMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: org.apache.geode.cache.query.QueryService initQueryService(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: void potentiallyReRegisterThisSerializer()>",
    "<org.springframework.data.gemfire.client.ClientRegionFactoryBean: boolean isPoolResolvable(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: java.lang.Object fromData(java.io.DataInput)>",
    "<org.springframework.data.gemfire.function.execution.GroupMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: java.lang.Object convertToJson(java.lang.Object)>",
    "<org.springframework.data.gemfire.serialization.InstantiatorFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.client.ClientCacheFactoryBean: org.apache.geode.cache.client.Pool findPool(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: org.apache.geode.pdx.PdxInstance convertToPdx(java.lang.Object)>",
    "<org.springframework.data.gemfire.function.execution.AllMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.WiringInstantiator: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: java.lang.String lambda$eagerlyInitializePool$6(java.lang.String)>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.PoolFactory createPoolFactory()>",
    "<org.springframework.data.gemfire.function.execution.GroupMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>"
  ],
  "2.0.14.RELEASE": [
    "<org.springframework.data.gemfire.client.PoolFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: boolean serialize(java.lang.Enum,java.io.DataOutput)>",
    "<org.springframework.data.gemfire.function.execution.RegionFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.function.execution.DefaultMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: org.apache.geode.cache.query.QueryService initQueryService(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: void potentiallyReRegisterThisSerializer()>",
    "<org.springframework.data.gemfire.client.ClientRegionFactoryBean: boolean isPoolResolvable(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: java.lang.Object fromData(java.io.DataInput)>",
    "<org.springframework.data.gemfire.function.execution.GroupMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: java.lang.Object convertToJson(java.lang.Object)>",
    "<org.springframework.data.gemfire.serialization.InstantiatorFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.client.ClientCacheFactoryBean: org.apache.geode.cache.client.Pool findPool(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: org.apache.geode.pdx.PdxInstance convertToPdx(java.lang.Object)>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.Pool lambda$getObject$8()>",
    "<org.springframework.data.gemfire.function.execution.AllMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.WiringInstantiator: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: java.lang.String lambda$eagerlyInitializePool$6(java.lang.String)>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.PoolFactory createPoolFactory()>",
    "<org.springframework.data.gemfire.function.execution.GroupMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>"
  ],
  "2.0.5.RELEASE": [
    "<org.springframework.data.gemfire.client.PoolFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: boolean serialize(java.lang.Enum,java.io.DataOutput)>",
    "<org.springframework.data.gemfire.function.execution.PoolServerFunctionExecution: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.function.execution.RegionFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.DefaultMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: org.apache.geode.cache.query.QueryService initQueryService(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: void potentiallyReRegisterThisSerializer()>",
    "<org.springframework.data.gemfire.client.ClientRegionFactoryBean: boolean isPoolResolvable(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: java.lang.Object fromData(java.io.DataInput)>",
    "<org.springframework.data.gemfire.function.execution.GroupMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: java.lang.Object convertToJson(java.lang.Object)>",
    "<org.springframework.data.gemfire.serialization.InstantiatorFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.client.ClientCacheFactoryBean: org.apache.geode.cache.client.Pool findPool(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: org.apache.geode.pdx.PdxInstance convertToPdx(java.lang.Object)>",
    "<org.springframework.data.gemfire.function.execution.AllMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.WiringInstantiator: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: java.lang.String lambda$eagerlyInitializePool$6(java.lang.String)>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.PoolFactory createPoolFactory()>",
    "<org.springframework.data.gemfire.function.execution.GroupMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>"
  ],
  "2.0.11.RELEASE": [
    "<org.springframework.data.gemfire.client.PoolFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: boolean serialize(java.lang.Enum,java.io.DataOutput)>",
    "<org.springframework.data.gemfire.function.execution.RegionFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.function.execution.DefaultMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: org.apache.geode.cache.query.QueryService initQueryService(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: void potentiallyReRegisterThisSerializer()>",
    "<org.springframework.data.gemfire.client.ClientRegionFactoryBean: boolean isPoolResolvable(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: java.lang.Object fromData(java.io.DataInput)>",
    "<org.springframework.data.gemfire.function.execution.GroupMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: java.lang.Object convertToJson(java.lang.Object)>",
    "<org.springframework.data.gemfire.serialization.InstantiatorFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.client.ClientCacheFactoryBean: org.apache.geode.cache.client.Pool findPool(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: org.apache.geode.pdx.PdxInstance convertToPdx(java.lang.Object)>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.Pool lambda$getObject$8()>",
    "<org.springframework.data.gemfire.function.execution.AllMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.WiringInstantiator: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: java.lang.String lambda$eagerlyInitializePool$6(java.lang.String)>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.PoolFactory createPoolFactory()>",
    "<org.springframework.data.gemfire.function.execution.GroupMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>"
  ],
  "2.0.8.RELEASE": [
    "<org.springframework.data.gemfire.client.PoolFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: boolean serialize(java.lang.Enum,java.io.DataOutput)>",
    "<org.springframework.data.gemfire.function.execution.RegionFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.function.execution.DefaultMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: org.apache.geode.cache.query.QueryService initQueryService(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: void potentiallyReRegisterThisSerializer()>",
    "<org.springframework.data.gemfire.client.ClientRegionFactoryBean: boolean isPoolResolvable(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: java.lang.Object fromData(java.io.DataInput)>",
    "<org.springframework.data.gemfire.function.execution.GroupMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: java.lang.Object convertToJson(java.lang.Object)>",
    "<org.springframework.data.gemfire.serialization.InstantiatorFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.client.ClientCacheFactoryBean: org.apache.geode.cache.client.Pool findPool(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: org.apache.geode.pdx.PdxInstance convertToPdx(java.lang.Object)>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.Pool lambda$getObject$8()>",
    "<org.springframework.data.gemfire.function.execution.AllMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.WiringInstantiator: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: java.lang.String lambda$eagerlyInitializePool$6(java.lang.String)>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.PoolFactory createPoolFactory()>",
    "<org.springframework.data.gemfire.function.execution.GroupMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>"
  ],
  "2.0.2.RELEASE": [
    "<org.springframework.data.gemfire.client.PoolFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: boolean serialize(java.lang.Enum,java.io.DataOutput)>",
    "<org.springframework.data.gemfire.function.execution.PoolServerFunctionExecution: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.function.execution.RegionFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.DefaultMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: org.apache.geode.cache.query.QueryService initQueryService(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: void potentiallyReRegisterThisSerializer()>",
    "<org.springframework.data.gemfire.client.ClientRegionFactoryBean: boolean isPoolResolvable(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: java.lang.Object fromData(java.io.DataInput)>",
    "<org.springframework.data.gemfire.function.execution.GroupMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: java.lang.Object convertPdxInstanceToJSONString(java.lang.Object)>",
    "<org.springframework.data.gemfire.serialization.InstantiatorFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.client.ClientCacheFactoryBean: org.apache.geode.cache.client.Pool findPool(java.lang.String)>",
    "<org.springframework.data.gemfire.function.execution.AllMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.WiringInstantiator: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: java.lang.String lambda$eagerlyInitializePool$6(java.lang.String)>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.PoolFactory createPoolFactory()>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: org.apache.geode.pdx.PdxInstance convertArgumentToPdxInstance(java.lang.Object)>",
    "<org.springframework.data.gemfire.function.execution.GroupMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>"
  ],
  "2.0.1.RELEASE": [
    "<org.springframework.data.gemfire.client.PoolFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: boolean serialize(java.lang.Enum,java.io.DataOutput)>",
    "<org.springframework.data.gemfire.function.execution.PoolServerFunctionExecution: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.function.execution.RegionFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.DefaultMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: org.apache.geode.cache.query.QueryService initQueryService(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: void potentiallyReRegisterThisSerializer()>",
    "<org.springframework.data.gemfire.client.ClientRegionFactoryBean: boolean isPoolResolvable(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: java.lang.Object fromData(java.io.DataInput)>",
    "<org.springframework.data.gemfire.function.execution.GroupMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: java.lang.Object convertPdxInstanceToJSONString(java.lang.Object)>",
    "<org.springframework.data.gemfire.serialization.InstantiatorFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.client.ClientCacheFactoryBean: org.apache.geode.cache.client.Pool findPool(java.lang.String)>",
    "<org.springframework.data.gemfire.function.execution.AllMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.WiringInstantiator: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: java.lang.String lambda$eagerlyInitializePool$6(java.lang.String)>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.PoolFactory createPoolFactory()>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: org.apache.geode.pdx.PdxInstance convertArgumentToPdxInstance(java.lang.Object)>",
    "<org.springframework.data.gemfire.function.execution.GroupMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>"
  ],
  "2.0.0.RELEASE": [
    "<org.springframework.data.gemfire.client.PoolFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: boolean serialize(java.lang.Enum,java.io.DataOutput)>",
    "<org.springframework.data.gemfire.function.execution.PoolServerFunctionExecution: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.function.execution.RegionFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.DefaultMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: org.apache.geode.cache.query.QueryService initQueryService(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: void potentiallyReRegisterThisSerializer()>",
    "<org.springframework.data.gemfire.client.ClientRegionFactoryBean: boolean isPoolResolvable(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: java.lang.Object fromData(java.io.DataInput)>",
    "<org.springframework.data.gemfire.function.execution.GroupMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: java.lang.Object convertPdxInstanceToJSONString(java.lang.Object)>",
    "<org.springframework.data.gemfire.serialization.InstantiatorFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.client.ClientCacheFactoryBean: org.apache.geode.cache.client.Pool findPool(java.lang.String)>",
    "<org.springframework.data.gemfire.function.execution.AllMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.WiringInstantiator: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: java.lang.String lambda$eagerlyInitializePool$6(java.lang.String)>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.PoolFactory createPoolFactory()>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: org.apache.geode.pdx.PdxInstance convertArgumentToPdxInstance(java.lang.Object)>",
    "<org.springframework.data.gemfire.function.execution.GroupMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>"
  ],
  "2.0.13.RELEASE": [
    "<org.springframework.data.gemfire.client.PoolFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: boolean serialize(java.lang.Enum,java.io.DataOutput)>",
    "<org.springframework.data.gemfire.function.execution.RegionFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.function.execution.DefaultMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: org.apache.geode.cache.query.QueryService initQueryService(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: void potentiallyReRegisterThisSerializer()>",
    "<org.springframework.data.gemfire.client.ClientRegionFactoryBean: boolean isPoolResolvable(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: java.lang.Object fromData(java.io.DataInput)>",
    "<org.springframework.data.gemfire.function.execution.GroupMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: java.lang.Object convertToJson(java.lang.Object)>",
    "<org.springframework.data.gemfire.serialization.InstantiatorFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.client.ClientCacheFactoryBean: org.apache.geode.cache.client.Pool findPool(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: org.apache.geode.pdx.PdxInstance convertToPdx(java.lang.Object)>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.Pool lambda$getObject$8()>",
    "<org.springframework.data.gemfire.function.execution.AllMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.WiringInstantiator: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: java.lang.String lambda$eagerlyInitializePool$6(java.lang.String)>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.PoolFactory createPoolFactory()>",
    "<org.springframework.data.gemfire.function.execution.GroupMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>"
  ],
  "2.0.10.RELEASE": [
    "<org.springframework.data.gemfire.client.PoolFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: boolean serialize(java.lang.Enum,java.io.DataOutput)>",
    "<org.springframework.data.gemfire.function.execution.RegionFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.function.execution.DefaultMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: org.apache.geode.cache.query.QueryService initQueryService(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: void potentiallyReRegisterThisSerializer()>",
    "<org.springframework.data.gemfire.client.ClientRegionFactoryBean: boolean isPoolResolvable(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: java.lang.Object fromData(java.io.DataInput)>",
    "<org.springframework.data.gemfire.function.execution.GroupMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: java.lang.Object convertToJson(java.lang.Object)>",
    "<org.springframework.data.gemfire.serialization.InstantiatorFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.client.ClientCacheFactoryBean: org.apache.geode.cache.client.Pool findPool(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: org.apache.geode.pdx.PdxInstance convertToPdx(java.lang.Object)>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.Pool lambda$getObject$8()>",
    "<org.springframework.data.gemfire.function.execution.AllMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.WiringInstantiator: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: java.lang.String lambda$eagerlyInitializePool$6(java.lang.String)>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.PoolFactory createPoolFactory()>",
    "<org.springframework.data.gemfire.function.execution.GroupMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>"
  ],
  "2.0.3.RELEASE": [
    "<org.springframework.data.gemfire.client.PoolFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: boolean serialize(java.lang.Enum,java.io.DataOutput)>",
    "<org.springframework.data.gemfire.function.execution.PoolServerFunctionExecution: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.function.execution.RegionFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.DefaultMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: org.apache.geode.cache.query.QueryService initQueryService(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: void potentiallyReRegisterThisSerializer()>",
    "<org.springframework.data.gemfire.client.ClientRegionFactoryBean: boolean isPoolResolvable(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: java.lang.Object fromData(java.io.DataInput)>",
    "<org.springframework.data.gemfire.function.execution.GroupMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: java.lang.Object convertPdxInstanceToJSONString(java.lang.Object)>",
    "<org.springframework.data.gemfire.serialization.InstantiatorFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.client.ClientCacheFactoryBean: org.apache.geode.cache.client.Pool findPool(java.lang.String)>",
    "<org.springframework.data.gemfire.function.execution.AllMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.WiringInstantiator: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: java.lang.String lambda$eagerlyInitializePool$6(java.lang.String)>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.PoolFactory createPoolFactory()>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: org.apache.geode.pdx.PdxInstance convertArgumentToPdxInstance(java.lang.Object)>",
    "<org.springframework.data.gemfire.function.execution.GroupMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>"
  ],
  "2.1.14.RELEASE": [
    "<org.springframework.data.gemfire.serialization.EnumSerializer: boolean serialize(java.lang.Enum,java.io.DataOutput)>",
    "<org.springframework.data.gemfire.function.execution.RegionFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.function.execution.DefaultMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: org.apache.geode.cache.query.QueryService initQueryService(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: void potentiallyReRegisterThisSerializer()>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: java.lang.Object fromData(java.io.DataInput)>",
    "<org.springframework.data.gemfire.function.execution.GroupMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: java.lang.Object convertToJson(java.lang.Object)>",
    "<org.springframework.data.gemfire.serialization.InstantiatorFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.client.ClientCacheFactoryBean: org.apache.geode.cache.client.Pool findPool(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: org.apache.geode.pdx.PdxInstance convertToPdx(java.lang.Object)>",
    "<org.springframework.data.gemfire.function.execution.AllMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.WiringInstantiator: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.client.ClientRegionFactoryBean: boolean eagerlyInitializePool(java.lang.String)>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: java.lang.String lambda$eagerlyInitializePool$6(java.lang.String)>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.PoolFactory createPoolFactory()>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.Pool find(java.lang.String)>",
    "<org.springframework.data.gemfire.function.execution.GroupMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>"
  ],
  "2.1.19.RELEASE": [
    "<org.springframework.data.gemfire.serialization.EnumSerializer: boolean serialize(java.lang.Enum,java.io.DataOutput)>",
    "<org.springframework.data.gemfire.function.execution.RegionFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.function.execution.DefaultMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: org.apache.geode.cache.query.QueryService initQueryService(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: void potentiallyReRegisterThisSerializer()>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: java.lang.Object fromData(java.io.DataInput)>",
    "<org.springframework.data.gemfire.function.execution.GroupMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: java.lang.Object convertToJson(java.lang.Object)>",
    "<org.springframework.data.gemfire.serialization.InstantiatorFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.client.ClientCacheFactoryBean: org.apache.geode.cache.client.Pool findPool(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: org.apache.geode.pdx.PdxInstance convertToPdx(java.lang.Object)>",
    "<org.springframework.data.gemfire.function.execution.AllMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.WiringInstantiator: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.client.ClientRegionFactoryBean: boolean eagerlyInitializePool(java.lang.String)>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: java.lang.String lambda$eagerlyInitializePool$6(java.lang.String)>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.PoolFactory createPoolFactory()>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.Pool find(java.lang.String)>",
    "<org.springframework.data.gemfire.function.execution.GroupMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>"
  ],
  "2.1.10.RELEASE": [
    "<org.springframework.data.gemfire.serialization.EnumSerializer: boolean serialize(java.lang.Enum,java.io.DataOutput)>",
    "<org.springframework.data.gemfire.function.execution.RegionFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.function.execution.DefaultMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: org.apache.geode.cache.query.QueryService initQueryService(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: void potentiallyReRegisterThisSerializer()>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: java.lang.Object fromData(java.io.DataInput)>",
    "<org.springframework.data.gemfire.function.execution.GroupMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: java.lang.Object convertToJson(java.lang.Object)>",
    "<org.springframework.data.gemfire.serialization.InstantiatorFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.client.ClientCacheFactoryBean: org.apache.geode.cache.client.Pool findPool(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: org.apache.geode.pdx.PdxInstance convertToPdx(java.lang.Object)>",
    "<org.springframework.data.gemfire.function.execution.AllMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.WiringInstantiator: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.client.ClientRegionFactoryBean: boolean eagerlyInitializePool(java.lang.String)>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: java.lang.String lambda$eagerlyInitializePool$6(java.lang.String)>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.PoolFactory createPoolFactory()>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.Pool find(java.lang.String)>",
    "<org.springframework.data.gemfire.function.execution.GroupMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>"
  ],
  "2.1.7.RELEASE": [
    "<org.springframework.data.gemfire.serialization.EnumSerializer: boolean serialize(java.lang.Enum,java.io.DataOutput)>",
    "<org.springframework.data.gemfire.function.execution.RegionFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.function.execution.DefaultMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: org.apache.geode.cache.query.QueryService initQueryService(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: void potentiallyReRegisterThisSerializer()>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: java.lang.Object fromData(java.io.DataInput)>",
    "<org.springframework.data.gemfire.function.execution.GroupMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: java.lang.Object convertToJson(java.lang.Object)>",
    "<org.springframework.data.gemfire.serialization.InstantiatorFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.client.ClientCacheFactoryBean: org.apache.geode.cache.client.Pool findPool(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: org.apache.geode.pdx.PdxInstance convertToPdx(java.lang.Object)>",
    "<org.springframework.data.gemfire.function.execution.AllMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.WiringInstantiator: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.client.ClientRegionFactoryBean: boolean eagerlyInitializePool(java.lang.String)>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: java.lang.String lambda$eagerlyInitializePool$6(java.lang.String)>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.PoolFactory createPoolFactory()>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.Pool find(java.lang.String)>",
    "<org.springframework.data.gemfire.function.execution.GroupMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>"
  ],
  "2.1.6.RELEASE": [
    "<org.springframework.data.gemfire.serialization.EnumSerializer: boolean serialize(java.lang.Enum,java.io.DataOutput)>",
    "<org.springframework.data.gemfire.function.execution.RegionFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.function.execution.DefaultMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: org.apache.geode.cache.query.QueryService initQueryService(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: void potentiallyReRegisterThisSerializer()>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: java.lang.Object fromData(java.io.DataInput)>",
    "<org.springframework.data.gemfire.function.execution.GroupMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: java.lang.Object convertToJson(java.lang.Object)>",
    "<org.springframework.data.gemfire.serialization.InstantiatorFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.client.ClientCacheFactoryBean: org.apache.geode.cache.client.Pool findPool(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: org.apache.geode.pdx.PdxInstance convertToPdx(java.lang.Object)>",
    "<org.springframework.data.gemfire.function.execution.AllMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.WiringInstantiator: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.client.ClientRegionFactoryBean: boolean eagerlyInitializePool(java.lang.String)>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: java.lang.String lambda$eagerlyInitializePool$6(java.lang.String)>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.PoolFactory createPoolFactory()>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.Pool find(java.lang.String)>",
    "<org.springframework.data.gemfire.function.execution.GroupMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>"
  ],
  "2.1.8.RELEASE": [
    "<org.springframework.data.gemfire.serialization.EnumSerializer: boolean serialize(java.lang.Enum,java.io.DataOutput)>",
    "<org.springframework.data.gemfire.function.execution.RegionFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.function.execution.DefaultMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: org.apache.geode.cache.query.QueryService initQueryService(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: void potentiallyReRegisterThisSerializer()>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: java.lang.Object fromData(java.io.DataInput)>",
    "<org.springframework.data.gemfire.function.execution.GroupMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: java.lang.Object convertToJson(java.lang.Object)>",
    "<org.springframework.data.gemfire.serialization.InstantiatorFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.client.ClientCacheFactoryBean: org.apache.geode.cache.client.Pool findPool(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: org.apache.geode.pdx.PdxInstance convertToPdx(java.lang.Object)>",
    "<org.springframework.data.gemfire.function.execution.AllMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.WiringInstantiator: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.client.ClientRegionFactoryBean: boolean eagerlyInitializePool(java.lang.String)>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: java.lang.String lambda$eagerlyInitializePool$6(java.lang.String)>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.PoolFactory createPoolFactory()>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.Pool find(java.lang.String)>",
    "<org.springframework.data.gemfire.function.execution.GroupMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>"
  ],
  "2.1.1.RELEASE": [
    "<org.springframework.data.gemfire.serialization.EnumSerializer: boolean serialize(java.lang.Enum,java.io.DataOutput)>",
    "<org.springframework.data.gemfire.function.execution.RegionFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.function.execution.DefaultMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: org.apache.geode.cache.query.QueryService initQueryService(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: void potentiallyReRegisterThisSerializer()>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: java.lang.Object fromData(java.io.DataInput)>",
    "<org.springframework.data.gemfire.function.execution.GroupMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: java.lang.Object convertToJson(java.lang.Object)>",
    "<org.springframework.data.gemfire.serialization.InstantiatorFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.client.ClientCacheFactoryBean: org.apache.geode.cache.client.Pool findPool(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: org.apache.geode.pdx.PdxInstance convertToPdx(java.lang.Object)>",
    "<org.springframework.data.gemfire.function.execution.AllMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.WiringInstantiator: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.client.ClientRegionFactoryBean: boolean eagerlyInitializePool(java.lang.String)>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: java.lang.String lambda$eagerlyInitializePool$6(java.lang.String)>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.PoolFactory createPoolFactory()>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.Pool find(java.lang.String)>",
    "<org.springframework.data.gemfire.function.execution.GroupMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>"
  ],
  "2.1.13.RELEASE": [
    "<org.springframework.data.gemfire.serialization.EnumSerializer: boolean serialize(java.lang.Enum,java.io.DataOutput)>",
    "<org.springframework.data.gemfire.function.execution.RegionFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.function.execution.DefaultMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: org.apache.geode.cache.query.QueryService initQueryService(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: void potentiallyReRegisterThisSerializer()>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: java.lang.Object fromData(java.io.DataInput)>",
    "<org.springframework.data.gemfire.function.execution.GroupMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: java.lang.Object convertToJson(java.lang.Object)>",
    "<org.springframework.data.gemfire.serialization.InstantiatorFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.client.ClientCacheFactoryBean: org.apache.geode.cache.client.Pool findPool(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: org.apache.geode.pdx.PdxInstance convertToPdx(java.lang.Object)>",
    "<org.springframework.data.gemfire.function.execution.AllMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.WiringInstantiator: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.client.ClientRegionFactoryBean: boolean eagerlyInitializePool(java.lang.String)>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: java.lang.String lambda$eagerlyInitializePool$6(java.lang.String)>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.PoolFactory createPoolFactory()>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.Pool find(java.lang.String)>",
    "<org.springframework.data.gemfire.function.execution.GroupMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>"
  ],
  "2.1.17.RELEASE": [
    "<org.springframework.data.gemfire.serialization.EnumSerializer: boolean serialize(java.lang.Enum,java.io.DataOutput)>",
    "<org.springframework.data.gemfire.function.execution.RegionFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.function.execution.DefaultMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: org.apache.geode.cache.query.QueryService initQueryService(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: void potentiallyReRegisterThisSerializer()>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: java.lang.Object fromData(java.io.DataInput)>",
    "<org.springframework.data.gemfire.function.execution.GroupMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: java.lang.Object convertToJson(java.lang.Object)>",
    "<org.springframework.data.gemfire.serialization.InstantiatorFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.client.ClientCacheFactoryBean: org.apache.geode.cache.client.Pool findPool(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: org.apache.geode.pdx.PdxInstance convertToPdx(java.lang.Object)>",
    "<org.springframework.data.gemfire.function.execution.AllMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.WiringInstantiator: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.client.ClientRegionFactoryBean: boolean eagerlyInitializePool(java.lang.String)>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: java.lang.String lambda$eagerlyInitializePool$6(java.lang.String)>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.PoolFactory createPoolFactory()>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.Pool find(java.lang.String)>",
    "<org.springframework.data.gemfire.function.execution.GroupMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>"
  ],
  "2.1.20.RELEASE": [
    "<org.springframework.data.gemfire.serialization.EnumSerializer: boolean serialize(java.lang.Enum,java.io.DataOutput)>",
    "<org.springframework.data.gemfire.function.execution.RegionFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.function.execution.DefaultMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: org.apache.geode.cache.query.QueryService initQueryService(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: void potentiallyReRegisterThisSerializer()>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: java.lang.Object fromData(java.io.DataInput)>",
    "<org.springframework.data.gemfire.function.execution.GroupMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: java.lang.Object convertToJson(java.lang.Object)>",
    "<org.springframework.data.gemfire.serialization.InstantiatorFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.client.ClientCacheFactoryBean: org.apache.geode.cache.client.Pool findPool(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: org.apache.geode.pdx.PdxInstance convertToPdx(java.lang.Object)>",
    "<org.springframework.data.gemfire.function.execution.AllMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.WiringInstantiator: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.client.ClientRegionFactoryBean: boolean eagerlyInitializePool(java.lang.String)>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: java.lang.String lambda$eagerlyInitializePool$6(java.lang.String)>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.PoolFactory createPoolFactory()>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.Pool find(java.lang.String)>",
    "<org.springframework.data.gemfire.function.execution.GroupMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>"
  ],
  "2.1.12.RELEASE": [
    "<org.springframework.data.gemfire.serialization.EnumSerializer: boolean serialize(java.lang.Enum,java.io.DataOutput)>",
    "<org.springframework.data.gemfire.function.execution.RegionFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.function.execution.DefaultMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: org.apache.geode.cache.query.QueryService initQueryService(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: void potentiallyReRegisterThisSerializer()>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: java.lang.Object fromData(java.io.DataInput)>",
    "<org.springframework.data.gemfire.function.execution.GroupMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: java.lang.Object convertToJson(java.lang.Object)>",
    "<org.springframework.data.gemfire.serialization.InstantiatorFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.client.ClientCacheFactoryBean: org.apache.geode.cache.client.Pool findPool(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: org.apache.geode.pdx.PdxInstance convertToPdx(java.lang.Object)>",
    "<org.springframework.data.gemfire.function.execution.AllMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.WiringInstantiator: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.client.ClientRegionFactoryBean: boolean eagerlyInitializePool(java.lang.String)>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: java.lang.String lambda$eagerlyInitializePool$6(java.lang.String)>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.PoolFactory createPoolFactory()>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.Pool find(java.lang.String)>",
    "<org.springframework.data.gemfire.function.execution.GroupMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>"
  ],
  "2.1.11.RELEASE": [
    "<org.springframework.data.gemfire.serialization.EnumSerializer: boolean serialize(java.lang.Enum,java.io.DataOutput)>",
    "<org.springframework.data.gemfire.function.execution.RegionFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.function.execution.DefaultMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: org.apache.geode.cache.query.QueryService initQueryService(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: void potentiallyReRegisterThisSerializer()>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: java.lang.Object fromData(java.io.DataInput)>",
    "<org.springframework.data.gemfire.function.execution.GroupMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: java.lang.Object convertToJson(java.lang.Object)>",
    "<org.springframework.data.gemfire.serialization.InstantiatorFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.client.ClientCacheFactoryBean: org.apache.geode.cache.client.Pool findPool(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: org.apache.geode.pdx.PdxInstance convertToPdx(java.lang.Object)>",
    "<org.springframework.data.gemfire.function.execution.AllMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.WiringInstantiator: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.client.ClientRegionFactoryBean: boolean eagerlyInitializePool(java.lang.String)>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: java.lang.String lambda$eagerlyInitializePool$6(java.lang.String)>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.PoolFactory createPoolFactory()>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.Pool find(java.lang.String)>",
    "<org.springframework.data.gemfire.function.execution.GroupMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>"
  ],
  "2.1.16.RELEASE": [
    "<org.springframework.data.gemfire.serialization.EnumSerializer: boolean serialize(java.lang.Enum,java.io.DataOutput)>",
    "<org.springframework.data.gemfire.function.execution.RegionFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.function.execution.DefaultMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: org.apache.geode.cache.query.QueryService initQueryService(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: void potentiallyReRegisterThisSerializer()>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: java.lang.Object fromData(java.io.DataInput)>",
    "<org.springframework.data.gemfire.function.execution.GroupMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: java.lang.Object convertToJson(java.lang.Object)>",
    "<org.springframework.data.gemfire.serialization.InstantiatorFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.client.ClientCacheFactoryBean: org.apache.geode.cache.client.Pool findPool(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: org.apache.geode.pdx.PdxInstance convertToPdx(java.lang.Object)>",
    "<org.springframework.data.gemfire.function.execution.AllMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.WiringInstantiator: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.client.ClientRegionFactoryBean: boolean eagerlyInitializePool(java.lang.String)>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: java.lang.String lambda$eagerlyInitializePool$6(java.lang.String)>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.PoolFactory createPoolFactory()>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.Pool find(java.lang.String)>",
    "<org.springframework.data.gemfire.function.execution.GroupMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>"
  ],
  "2.1.5.RELEASE": [
    "<org.springframework.data.gemfire.serialization.EnumSerializer: boolean serialize(java.lang.Enum,java.io.DataOutput)>",
    "<org.springframework.data.gemfire.function.execution.RegionFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.function.execution.DefaultMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: org.apache.geode.cache.query.QueryService initQueryService(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: void potentiallyReRegisterThisSerializer()>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: java.lang.Object fromData(java.io.DataInput)>",
    "<org.springframework.data.gemfire.function.execution.GroupMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: java.lang.Object convertToJson(java.lang.Object)>",
    "<org.springframework.data.gemfire.serialization.InstantiatorFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.client.ClientCacheFactoryBean: org.apache.geode.cache.client.Pool findPool(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: org.apache.geode.pdx.PdxInstance convertToPdx(java.lang.Object)>",
    "<org.springframework.data.gemfire.function.execution.AllMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.WiringInstantiator: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.client.ClientRegionFactoryBean: boolean eagerlyInitializePool(java.lang.String)>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: java.lang.String lambda$eagerlyInitializePool$6(java.lang.String)>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.PoolFactory createPoolFactory()>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.Pool find(java.lang.String)>",
    "<org.springframework.data.gemfire.function.execution.GroupMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>"
  ],
  "2.1.21.RELEASE": [
    "<org.springframework.data.gemfire.serialization.EnumSerializer: boolean serialize(java.lang.Enum,java.io.DataOutput)>",
    "<org.springframework.data.gemfire.function.execution.RegionFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.function.execution.DefaultMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: org.apache.geode.cache.query.QueryService initQueryService(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: void potentiallyReRegisterThisSerializer()>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: java.lang.Object fromData(java.io.DataInput)>",
    "<org.springframework.data.gemfire.function.execution.GroupMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: java.lang.Object convertToJson(java.lang.Object)>",
    "<org.springframework.data.gemfire.serialization.InstantiatorFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.client.ClientCacheFactoryBean: org.apache.geode.cache.client.Pool findPool(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: org.apache.geode.pdx.PdxInstance convertToPdx(java.lang.Object)>",
    "<org.springframework.data.gemfire.function.execution.AllMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.WiringInstantiator: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.client.ClientRegionFactoryBean: boolean eagerlyInitializePool(java.lang.String)>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: java.lang.String lambda$eagerlyInitializePool$6(java.lang.String)>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.PoolFactory createPoolFactory()>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.Pool find(java.lang.String)>",
    "<org.springframework.data.gemfire.function.execution.GroupMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>"
  ],
  "2.1.18.RELEASE": [
    "<org.springframework.data.gemfire.serialization.EnumSerializer: boolean serialize(java.lang.Enum,java.io.DataOutput)>",
    "<org.springframework.data.gemfire.function.execution.RegionFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.function.execution.DefaultMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: org.apache.geode.cache.query.QueryService initQueryService(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: void potentiallyReRegisterThisSerializer()>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: java.lang.Object fromData(java.io.DataInput)>",
    "<org.springframework.data.gemfire.function.execution.GroupMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: java.lang.Object convertToJson(java.lang.Object)>",
    "<org.springframework.data.gemfire.serialization.InstantiatorFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.client.ClientCacheFactoryBean: org.apache.geode.cache.client.Pool findPool(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: org.apache.geode.pdx.PdxInstance convertToPdx(java.lang.Object)>",
    "<org.springframework.data.gemfire.function.execution.AllMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.WiringInstantiator: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.client.ClientRegionFactoryBean: boolean eagerlyInitializePool(java.lang.String)>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: java.lang.String lambda$eagerlyInitializePool$6(java.lang.String)>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.PoolFactory createPoolFactory()>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.Pool find(java.lang.String)>",
    "<org.springframework.data.gemfire.function.execution.GroupMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>"
  ],
  "2.1.3.RELEASE": [
    "<org.springframework.data.gemfire.serialization.EnumSerializer: boolean serialize(java.lang.Enum,java.io.DataOutput)>",
    "<org.springframework.data.gemfire.function.execution.RegionFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.function.execution.DefaultMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: org.apache.geode.cache.query.QueryService initQueryService(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: void potentiallyReRegisterThisSerializer()>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: java.lang.Object fromData(java.io.DataInput)>",
    "<org.springframework.data.gemfire.function.execution.GroupMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: java.lang.Object convertToJson(java.lang.Object)>",
    "<org.springframework.data.gemfire.serialization.InstantiatorFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.client.ClientCacheFactoryBean: org.apache.geode.cache.client.Pool findPool(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: org.apache.geode.pdx.PdxInstance convertToPdx(java.lang.Object)>",
    "<org.springframework.data.gemfire.function.execution.AllMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.WiringInstantiator: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.client.ClientRegionFactoryBean: boolean eagerlyInitializePool(java.lang.String)>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: java.lang.String lambda$eagerlyInitializePool$6(java.lang.String)>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.PoolFactory createPoolFactory()>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.Pool find(java.lang.String)>",
    "<org.springframework.data.gemfire.function.execution.GroupMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>"
  ],
  "2.1.15.RELEASE": [
    "<org.springframework.data.gemfire.serialization.EnumSerializer: boolean serialize(java.lang.Enum,java.io.DataOutput)>",
    "<org.springframework.data.gemfire.function.execution.RegionFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.function.execution.DefaultMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: org.apache.geode.cache.query.QueryService initQueryService(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: void potentiallyReRegisterThisSerializer()>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: java.lang.Object fromData(java.io.DataInput)>",
    "<org.springframework.data.gemfire.function.execution.GroupMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: java.lang.Object convertToJson(java.lang.Object)>",
    "<org.springframework.data.gemfire.serialization.InstantiatorFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.client.ClientCacheFactoryBean: org.apache.geode.cache.client.Pool findPool(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: org.apache.geode.pdx.PdxInstance convertToPdx(java.lang.Object)>",
    "<org.springframework.data.gemfire.function.execution.AllMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.WiringInstantiator: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.client.ClientRegionFactoryBean: boolean eagerlyInitializePool(java.lang.String)>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: java.lang.String lambda$eagerlyInitializePool$6(java.lang.String)>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.PoolFactory createPoolFactory()>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.Pool find(java.lang.String)>",
    "<org.springframework.data.gemfire.function.execution.GroupMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>"
  ],
  "2.1.0.RELEASE": [
    "<org.springframework.data.gemfire.serialization.EnumSerializer: boolean serialize(java.lang.Enum,java.io.DataOutput)>",
    "<org.springframework.data.gemfire.function.execution.RegionFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.function.execution.DefaultMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: org.apache.geode.cache.query.QueryService initQueryService(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: void potentiallyReRegisterThisSerializer()>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: java.lang.Object fromData(java.io.DataInput)>",
    "<org.springframework.data.gemfire.function.execution.GroupMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: java.lang.Object convertToJson(java.lang.Object)>",
    "<org.springframework.data.gemfire.serialization.InstantiatorFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.client.ClientCacheFactoryBean: org.apache.geode.cache.client.Pool findPool(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: org.apache.geode.pdx.PdxInstance convertToPdx(java.lang.Object)>",
    "<org.springframework.data.gemfire.function.execution.AllMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.WiringInstantiator: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.client.ClientRegionFactoryBean: boolean eagerlyInitializePool(java.lang.String)>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: java.lang.String lambda$eagerlyInitializePool$6(java.lang.String)>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.PoolFactory createPoolFactory()>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.Pool find(java.lang.String)>",
    "<org.springframework.data.gemfire.function.execution.GroupMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>"
  ],
  "2.1.2.RELEASE": [
    "<org.springframework.data.gemfire.serialization.EnumSerializer: boolean serialize(java.lang.Enum,java.io.DataOutput)>",
    "<org.springframework.data.gemfire.function.execution.RegionFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.function.execution.DefaultMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: org.apache.geode.cache.query.QueryService initQueryService(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: void potentiallyReRegisterThisSerializer()>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: java.lang.Object fromData(java.io.DataInput)>",
    "<org.springframework.data.gemfire.function.execution.GroupMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: java.lang.Object convertToJson(java.lang.Object)>",
    "<org.springframework.data.gemfire.serialization.InstantiatorFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.client.ClientCacheFactoryBean: org.apache.geode.cache.client.Pool findPool(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: org.apache.geode.pdx.PdxInstance convertToPdx(java.lang.Object)>",
    "<org.springframework.data.gemfire.function.execution.AllMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.WiringInstantiator: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.client.ClientRegionFactoryBean: boolean eagerlyInitializePool(java.lang.String)>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: java.lang.String lambda$eagerlyInitializePool$6(java.lang.String)>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.PoolFactory createPoolFactory()>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.Pool find(java.lang.String)>",
    "<org.springframework.data.gemfire.function.execution.GroupMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>"
  ],
  "2.1.9.RELEASE": [
    "<org.springframework.data.gemfire.serialization.EnumSerializer: boolean serialize(java.lang.Enum,java.io.DataOutput)>",
    "<org.springframework.data.gemfire.function.execution.RegionFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.function.execution.DefaultMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: org.apache.geode.cache.query.QueryService initQueryService(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: void potentiallyReRegisterThisSerializer()>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: java.lang.Object fromData(java.io.DataInput)>",
    "<org.springframework.data.gemfire.function.execution.GroupMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: java.lang.Object convertToJson(java.lang.Object)>",
    "<org.springframework.data.gemfire.serialization.InstantiatorFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.client.ClientCacheFactoryBean: org.apache.geode.cache.client.Pool findPool(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: org.apache.geode.pdx.PdxInstance convertToPdx(java.lang.Object)>",
    "<org.springframework.data.gemfire.function.execution.AllMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.WiringInstantiator: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.client.ClientRegionFactoryBean: boolean eagerlyInitializePool(java.lang.String)>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: java.lang.String lambda$eagerlyInitializePool$6(java.lang.String)>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.PoolFactory createPoolFactory()>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.Pool find(java.lang.String)>",
    "<org.springframework.data.gemfire.function.execution.GroupMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>"
  ],
  "2.1.4.RELEASE": [
    "<org.springframework.data.gemfire.serialization.EnumSerializer: boolean serialize(java.lang.Enum,java.io.DataOutput)>",
    "<org.springframework.data.gemfire.function.execution.RegionFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.function.execution.DefaultMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServerFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: org.apache.geode.cache.query.QueryService initQueryService(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: void potentiallyReRegisterThisSerializer()>",
    "<org.springframework.data.gemfire.serialization.EnumSerializer: java.lang.Object fromData(java.io.DataInput)>",
    "<org.springframework.data.gemfire.function.execution.GroupMemberFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: java.lang.Object convertToJson(java.lang.Object)>",
    "<org.springframework.data.gemfire.serialization.InstantiatorFactoryBean: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.client.ClientCacheFactoryBean: org.apache.geode.cache.client.Pool findPool(java.lang.String)>",
    "<org.springframework.data.gemfire.serialization.json.JSONRegionAdvice: org.apache.geode.pdx.PdxInstance convertToPdx(java.lang.Object)>",
    "<org.springframework.data.gemfire.function.execution.AllMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>",
    "<org.springframework.data.gemfire.serialization.WiringInstantiator: void afterPropertiesSet()>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveNamedPool()>",
    "<org.springframework.data.gemfire.client.ClientRegionFactoryBean: boolean eagerlyInitializePool(java.lang.String)>",
    "<org.springframework.data.gemfire.function.execution.GemfireOnServersFunctionTemplate: org.apache.geode.cache.client.Pool resolveDefaultPool()>",
    "<org.springframework.data.gemfire.listener.ContinuousQueryListenerContainer: java.lang.String lambda$eagerlyInitializePool$6(java.lang.String)>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.PoolFactory createPoolFactory()>",
    "<org.springframework.data.gemfire.client.PoolFactoryBean: org.apache.geode.cache.client.Pool find(java.lang.String)>",
    "<org.springframework.data.gemfire.function.execution.GroupMembersFunctionExecution: org.apache.geode.cache.execute.Execution getExecution()>"
  ]
}