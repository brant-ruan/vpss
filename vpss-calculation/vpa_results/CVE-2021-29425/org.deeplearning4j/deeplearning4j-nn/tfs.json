{
  "1.0.0-beta3": [
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: void saveBestModel(org.deeplearning4j.nn.graph.ComputationGraph,double)>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: org.deeplearning4j.nn.graph.ComputationGraph getLatestModel()>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: org.deeplearning4j.nn.multilayer.MultiLayerNetwork getLatestModel()>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: void saveBestModel(org.deeplearning4j.nn.multilayer.MultiLayerNetwork,double)>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: void saveLatestModel(org.deeplearning4j.nn.graph.ComputationGraph,double)>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: org.deeplearning4j.nn.multilayer.MultiLayerNetwork getBestModel()>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: void saveLatestModel(org.deeplearning4j.nn.multilayer.MultiLayerNetwork,double)>",
    "<org.deeplearning4j.optimize.listeners.callbacks.ModelSavingCallback: void call(org.deeplearning4j.optimize.listeners.EvaluativeListener,org.deeplearning4j.nn.api.Model,long,org.nd4j.evaluation.IEvaluation[])>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: org.deeplearning4j.nn.graph.ComputationGraph getBestModel()>"
  ],
  "1.0.0-beta5": [
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: void saveBestModel(org.deeplearning4j.nn.graph.ComputationGraph,double)>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: org.deeplearning4j.nn.graph.ComputationGraph getLatestModel()>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: org.deeplearning4j.nn.multilayer.MultiLayerNetwork getLatestModel()>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: void saveBestModel(org.deeplearning4j.nn.multilayer.MultiLayerNetwork,double)>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: void saveLatestModel(org.deeplearning4j.nn.graph.ComputationGraph,double)>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: org.deeplearning4j.nn.multilayer.MultiLayerNetwork getBestModel()>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: void saveLatestModel(org.deeplearning4j.nn.multilayer.MultiLayerNetwork,double)>",
    "<org.deeplearning4j.optimize.listeners.callbacks.ModelSavingCallback: void call(org.deeplearning4j.optimize.listeners.EvaluativeListener,org.deeplearning4j.nn.api.Model,long,org.nd4j.evaluation.IEvaluation[])>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: org.deeplearning4j.nn.graph.ComputationGraph getBestModel()>"
  ],
  "1.0.0-M1": [
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: void saveBestModel(org.deeplearning4j.nn.graph.ComputationGraph,double)>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: org.deeplearning4j.nn.graph.ComputationGraph getLatestModel()>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: org.deeplearning4j.nn.multilayer.MultiLayerNetwork getLatestModel()>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: void saveBestModel(org.deeplearning4j.nn.multilayer.MultiLayerNetwork,double)>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: void saveLatestModel(org.deeplearning4j.nn.graph.ComputationGraph,double)>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: org.deeplearning4j.nn.multilayer.MultiLayerNetwork getBestModel()>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: void saveLatestModel(org.deeplearning4j.nn.multilayer.MultiLayerNetwork,double)>",
    "<org.deeplearning4j.optimize.listeners.callbacks.ModelSavingCallback: void call(org.deeplearning4j.optimize.listeners.EvaluativeListener,org.deeplearning4j.nn.api.Model,long,org.nd4j.evaluation.IEvaluation[])>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: org.deeplearning4j.nn.graph.ComputationGraph getBestModel()>"
  ],
  "1.0.0-beta6": [
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: void saveBestModel(org.deeplearning4j.nn.graph.ComputationGraph,double)>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: org.deeplearning4j.nn.graph.ComputationGraph getLatestModel()>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: org.deeplearning4j.nn.multilayer.MultiLayerNetwork getLatestModel()>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: void saveBestModel(org.deeplearning4j.nn.multilayer.MultiLayerNetwork,double)>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: void saveLatestModel(org.deeplearning4j.nn.graph.ComputationGraph,double)>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: org.deeplearning4j.nn.multilayer.MultiLayerNetwork getBestModel()>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: void saveLatestModel(org.deeplearning4j.nn.multilayer.MultiLayerNetwork,double)>",
    "<org.deeplearning4j.optimize.listeners.callbacks.ModelSavingCallback: void call(org.deeplearning4j.optimize.listeners.EvaluativeListener,org.deeplearning4j.nn.api.Model,long,org.nd4j.evaluation.IEvaluation[])>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: org.deeplearning4j.nn.graph.ComputationGraph getBestModel()>"
  ],
  "1.0.0-M1.1": [
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: void saveBestModel(org.deeplearning4j.nn.graph.ComputationGraph,double)>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: org.deeplearning4j.nn.graph.ComputationGraph getLatestModel()>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: org.deeplearning4j.nn.multilayer.MultiLayerNetwork getLatestModel()>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: void saveBestModel(org.deeplearning4j.nn.multilayer.MultiLayerNetwork,double)>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: void saveLatestModel(org.deeplearning4j.nn.graph.ComputationGraph,double)>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: org.deeplearning4j.nn.multilayer.MultiLayerNetwork getBestModel()>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: void saveLatestModel(org.deeplearning4j.nn.multilayer.MultiLayerNetwork,double)>",
    "<org.deeplearning4j.optimize.listeners.callbacks.ModelSavingCallback: void call(org.deeplearning4j.optimize.listeners.EvaluativeListener,org.deeplearning4j.nn.api.Model,long,org.nd4j.evaluation.IEvaluation[])>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: org.deeplearning4j.nn.graph.ComputationGraph getBestModel()>"
  ],
  "1.0.0-beta4": [
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: void saveBestModel(org.deeplearning4j.nn.graph.ComputationGraph,double)>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: org.deeplearning4j.nn.graph.ComputationGraph getLatestModel()>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: org.deeplearning4j.nn.multilayer.MultiLayerNetwork getLatestModel()>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: void saveBestModel(org.deeplearning4j.nn.multilayer.MultiLayerNetwork,double)>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: void saveLatestModel(org.deeplearning4j.nn.graph.ComputationGraph,double)>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: org.deeplearning4j.nn.multilayer.MultiLayerNetwork getBestModel()>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: void saveLatestModel(org.deeplearning4j.nn.multilayer.MultiLayerNetwork,double)>",
    "<org.deeplearning4j.optimize.listeners.callbacks.ModelSavingCallback: void call(org.deeplearning4j.optimize.listeners.EvaluativeListener,org.deeplearning4j.nn.api.Model,long,org.nd4j.evaluation.IEvaluation[])>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: org.deeplearning4j.nn.graph.ComputationGraph getBestModel()>"
  ],
  "1.0.0-beta2": [
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: org.deeplearning4j.nn.graph.ComputationGraph getLatestModel()>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: void saveBestModel(org.deeplearning4j.nn.graph.ComputationGraph,double)>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: org.deeplearning4j.nn.multilayer.MultiLayerNetwork getLatestModel()>",
    "<org.deeplearning4j.optimize.listeners.callbacks.ModelSavingCallback: void call(org.deeplearning4j.optimize.listeners.EvaluativeListener,org.deeplearning4j.nn.api.Model,long,org.deeplearning4j.eval.IEvaluation[])>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: void saveBestModel(org.deeplearning4j.nn.multilayer.MultiLayerNetwork,double)>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: void saveLatestModel(org.deeplearning4j.nn.graph.ComputationGraph,double)>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: org.deeplearning4j.nn.multilayer.MultiLayerNetwork getBestModel()>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: void saveLatestModel(org.deeplearning4j.nn.multilayer.MultiLayerNetwork,double)>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: org.deeplearning4j.nn.graph.ComputationGraph getBestModel()>"
  ],
  "1.0.0-beta7": [
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: void saveBestModel(org.deeplearning4j.nn.graph.ComputationGraph,double)>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: org.deeplearning4j.nn.graph.ComputationGraph getLatestModel()>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: org.deeplearning4j.nn.multilayer.MultiLayerNetwork getLatestModel()>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: void saveBestModel(org.deeplearning4j.nn.multilayer.MultiLayerNetwork,double)>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: void saveLatestModel(org.deeplearning4j.nn.graph.ComputationGraph,double)>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: org.deeplearning4j.nn.multilayer.MultiLayerNetwork getBestModel()>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: void saveLatestModel(org.deeplearning4j.nn.multilayer.MultiLayerNetwork,double)>",
    "<org.deeplearning4j.optimize.listeners.callbacks.ModelSavingCallback: void call(org.deeplearning4j.optimize.listeners.EvaluativeListener,org.deeplearning4j.nn.api.Model,long,org.nd4j.evaluation.IEvaluation[])>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: org.deeplearning4j.nn.graph.ComputationGraph getBestModel()>"
  ],
  "1.0.0-beta": [
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: org.deeplearning4j.nn.graph.ComputationGraph getLatestModel()>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: void saveBestModel(org.deeplearning4j.nn.graph.ComputationGraph,double)>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: org.deeplearning4j.nn.multilayer.MultiLayerNetwork getLatestModel()>",
    "<org.deeplearning4j.optimize.listeners.callbacks.ModelSavingCallback: void call(org.deeplearning4j.optimize.listeners.EvaluativeListener,org.deeplearning4j.nn.api.Model,long,org.deeplearning4j.eval.IEvaluation[])>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: void saveBestModel(org.deeplearning4j.nn.multilayer.MultiLayerNetwork,double)>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: void saveLatestModel(org.deeplearning4j.nn.graph.ComputationGraph,double)>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: org.deeplearning4j.nn.multilayer.MultiLayerNetwork getBestModel()>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: void saveLatestModel(org.deeplearning4j.nn.multilayer.MultiLayerNetwork,double)>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: org.deeplearning4j.nn.graph.ComputationGraph getBestModel()>"
  ],
  "0.9.0": [
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: org.deeplearning4j.nn.graph.ComputationGraph getLatestModel()>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: void saveBestModel(org.deeplearning4j.nn.graph.ComputationGraph,double)>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: org.deeplearning4j.nn.multilayer.MultiLayerNetwork getLatestModel()>",
    "<org.deeplearning4j.optimize.listeners.callbacks.ModelSavingCallback: void call(org.deeplearning4j.optimize.listeners.EvaluativeListener,org.deeplearning4j.nn.api.Model,long,org.deeplearning4j.eval.IEvaluation[])>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: void saveBestModel(org.deeplearning4j.nn.multilayer.MultiLayerNetwork,double)>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: void saveLatestModel(org.deeplearning4j.nn.graph.ComputationGraph,double)>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: org.deeplearning4j.nn.multilayer.MultiLayerNetwork getBestModel()>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: void saveLatestModel(org.deeplearning4j.nn.multilayer.MultiLayerNetwork,double)>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: org.deeplearning4j.nn.graph.ComputationGraph getBestModel()>"
  ],
  "0.9.1": [
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: org.deeplearning4j.nn.graph.ComputationGraph getLatestModel()>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: void saveBestModel(org.deeplearning4j.nn.graph.ComputationGraph,double)>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: org.deeplearning4j.nn.multilayer.MultiLayerNetwork getLatestModel()>",
    "<org.deeplearning4j.optimize.listeners.callbacks.ModelSavingCallback: void call(org.deeplearning4j.optimize.listeners.EvaluativeListener,org.deeplearning4j.nn.api.Model,long,org.deeplearning4j.eval.IEvaluation[])>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: void saveBestModel(org.deeplearning4j.nn.multilayer.MultiLayerNetwork,double)>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: void saveLatestModel(org.deeplearning4j.nn.graph.ComputationGraph,double)>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: org.deeplearning4j.nn.multilayer.MultiLayerNetwork getBestModel()>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: void saveLatestModel(org.deeplearning4j.nn.multilayer.MultiLayerNetwork,double)>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: org.deeplearning4j.nn.graph.ComputationGraph getBestModel()>"
  ],
  "0.8.0": [
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: void saveBestModel(org.deeplearning4j.nn.graph.ComputationGraph,double)>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: org.deeplearning4j.nn.graph.ComputationGraph getLatestModel()>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: org.deeplearning4j.nn.multilayer.MultiLayerNetwork getLatestModel()>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: void saveBestModel(org.deeplearning4j.nn.multilayer.MultiLayerNetwork,double)>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: void saveLatestModel(org.deeplearning4j.nn.graph.ComputationGraph,double)>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: org.deeplearning4j.nn.multilayer.MultiLayerNetwork getBestModel()>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: void saveLatestModel(org.deeplearning4j.nn.multilayer.MultiLayerNetwork,double)>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: org.deeplearning4j.nn.graph.ComputationGraph getBestModel()>"
  ],
  "1.0.0-alpha": [
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: org.deeplearning4j.nn.graph.ComputationGraph getLatestModel()>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: void saveBestModel(org.deeplearning4j.nn.graph.ComputationGraph,double)>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: org.deeplearning4j.nn.multilayer.MultiLayerNetwork getLatestModel()>",
    "<org.deeplearning4j.optimize.listeners.callbacks.ModelSavingCallback: void call(org.deeplearning4j.optimize.listeners.EvaluativeListener,org.deeplearning4j.nn.api.Model,long,org.deeplearning4j.eval.IEvaluation[])>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: void saveBestModel(org.deeplearning4j.nn.multilayer.MultiLayerNetwork,double)>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: void saveLatestModel(org.deeplearning4j.nn.graph.ComputationGraph,double)>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: org.deeplearning4j.nn.multilayer.MultiLayerNetwork getBestModel()>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileModelSaver: void saveLatestModel(org.deeplearning4j.nn.multilayer.MultiLayerNetwork,double)>",
    "<org.deeplearning4j.earlystopping.saver.LocalFileGraphSaver: org.deeplearning4j.nn.graph.ComputationGraph getBestModel()>"
  ]
}