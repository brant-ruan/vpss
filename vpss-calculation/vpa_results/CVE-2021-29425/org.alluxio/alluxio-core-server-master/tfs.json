{
  "1.6.1": [
    "<alluxio.master.file.meta.AsyncUfsAbsentPathCache: java.util.List getNestedPaths(alluxio.AlluxioURI,alluxio.master.file.meta.options.MountInfo)>",
    "<alluxio.master.file.meta.InodeTree: alluxio.master.file.meta.LockedInodePath lockFullInodePath(alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode)>",
    "<alluxio.master.file.PermissionChecker: void checkParentPermission(alluxio.security.authorization.Mode$Bits,alluxio.master.file.meta.LockedInodePath)>",
    "<alluxio.master.file.meta.LockedInodePath: void <init>(alluxio.AlluxioURI,java.util.List,alluxio.master.file.meta.InodeLockList,alluxio.master.file.meta.InodeTree$LockMode)>",
    "<alluxio.master.file.meta.InodeTree: alluxio.master.file.meta.LockedInodePath lockInodePath(alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode)>",
    "<alluxio.master.file.meta.InodeTree: boolean inodePathExists(alluxio.AlluxioURI)>",
    "<alluxio.master.file.meta.MountTable: void add(alluxio.AlluxioURI,alluxio.AlluxioURI,long,alluxio.master.file.options.MountOptions)>",
    "<alluxio.master.file.meta.InodeTree: alluxio.master.file.meta.InodePathPair lockInodePathPair(alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode,alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode)>",
    "<alluxio.master.file.meta.MountTable: java.lang.String getMountPoint(alluxio.AlluxioURI)>",
    "<alluxio.web.WebInterfaceBrowseServlet: void setPathDirectories(alluxio.AlluxioURI,javax.servlet.http.HttpServletRequest)>",
    "<alluxio.master.file.DefaultFileSystemMaster: void renameAndJournal(alluxio.master.file.meta.LockedInodePath,alluxio.master.file.meta.LockedInodePath,alluxio.master.file.options.RenameOptions,alluxio.master.journal.JournalContext)>"
  ],
  "1.8.2": [
    "<alluxio.master.file.meta.MountTable: boolean containsMountPoint(alluxio.AlluxioURI)>",
    "<alluxio.master.file.DefaultFileSystemMaster: boolean syncMetadata(alluxio.master.file.RpcContext,alluxio.master.file.meta.LockedInodePath,alluxio.master.file.meta.LockingScheme,alluxio.master.file.options.DescendantType)>",
    "<alluxio.master.file.DefaultPermissionChecker: void checkParentPermission(alluxio.security.authorization.Mode$Bits,alluxio.master.file.meta.LockedInodePath)>",
    "<alluxio.master.file.meta.AsyncUfsAbsentPathCache: java.util.List getNestedPaths(alluxio.AlluxioURI,int)>",
    "<alluxio.master.file.DefaultFileSystemMaster: void renameAndJournal(alluxio.master.file.RpcContext,alluxio.master.file.meta.LockedInodePath,alluxio.master.file.meta.LockedInodePath,alluxio.master.file.options.RenameOptions)>",
    "<alluxio.master.file.meta.InodeTree: alluxio.master.file.meta.LockedInodePath lockFullInodePath(alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode)>",
    "<alluxio.master.file.meta.LockedInodePath: void <init>(alluxio.AlluxioURI,alluxio.master.file.meta.InodeLockList,alluxio.master.file.meta.InodeTree$LockMode)>",
    "<alluxio.master.file.DefaultFileSystemMaster: void listStatusInternal(alluxio.master.file.meta.LockedInodePath,alluxio.master.audit.AuditContext,alluxio.master.file.options.DescendantType,java.util.List)>",
    "<alluxio.master.file.meta.InodeTree: alluxio.master.file.meta.LockedInodePath lockInodePath(alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode)>",
    "<alluxio.master.file.meta.InodeTree: boolean inodePathExists(alluxio.AlluxioURI)>",
    "<alluxio.master.file.meta.LockedInodePath: void <init>(alluxio.AlluxioURI,alluxio.master.file.meta.LockedInodePath,alluxio.master.file.meta.InodeLockList)>",
    "<alluxio.master.file.meta.MountTable: void add(alluxio.AlluxioURI,alluxio.AlluxioURI,long,alluxio.master.file.options.MountOptions)>",
    "<alluxio.master.file.meta.InodeTree: alluxio.master.file.meta.InodePathPair lockInodePathPair(alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode,alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode)>",
    "<alluxio.master.file.meta.InodeTree: alluxio.master.file.meta.InodeLockList lockDescendant(alluxio.master.file.meta.LockedInodePath,alluxio.master.file.meta.InodeTree$LockMode,alluxio.AlluxioURI)>",
    "<alluxio.master.file.meta.MountTable: java.lang.String getMountPoint(alluxio.AlluxioURI)>",
    "<alluxio.web.WebInterfaceBrowseServlet: void setPathDirectories(alluxio.AlluxioURI,javax.servlet.http.HttpServletRequest)>"
  ],
  "1.7.0": [
    "<alluxio.master.file.meta.AsyncUfsAbsentPathCache: java.util.List getNestedPaths(alluxio.AlluxioURI,int)>",
    "<alluxio.master.file.meta.InodeTree: alluxio.master.file.meta.LockedInodePath lockFullInodePath(alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode)>",
    "<alluxio.master.file.PermissionChecker: void checkParentPermission(alluxio.security.authorization.Mode$Bits,alluxio.master.file.meta.LockedInodePath)>",
    "<alluxio.master.file.meta.LockedInodePath: void <init>(alluxio.AlluxioURI,java.util.List,alluxio.master.file.meta.InodeLockList,alluxio.master.file.meta.InodeTree$LockMode)>",
    "<alluxio.master.file.meta.InodeTree: alluxio.master.file.meta.LockedInodePath lockInodePath(alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode)>",
    "<alluxio.master.file.meta.InodeTree: boolean inodePathExists(alluxio.AlluxioURI)>",
    "<alluxio.master.file.meta.MountTable: void add(alluxio.AlluxioURI,alluxio.AlluxioURI,long,alluxio.master.file.options.MountOptions)>",
    "<alluxio.master.file.meta.InodeTree: alluxio.master.file.meta.InodePathPair lockInodePathPair(alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode,alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode)>",
    "<alluxio.master.file.meta.MountTable: java.lang.String getMountPoint(alluxio.AlluxioURI)>",
    "<alluxio.web.WebInterfaceBrowseServlet: void setPathDirectories(alluxio.AlluxioURI,javax.servlet.http.HttpServletRequest)>",
    "<alluxio.master.file.DefaultFileSystemMaster: void renameAndJournal(alluxio.master.file.meta.LockedInodePath,alluxio.master.file.meta.LockedInodePath,alluxio.master.file.options.RenameOptions,alluxio.master.journal.JournalContext)>"
  ],
  "1.8.0": [
    "<alluxio.master.file.meta.MountTable: boolean containsMountPoint(alluxio.AlluxioURI)>",
    "<alluxio.master.file.DefaultFileSystemMaster: boolean syncMetadata(alluxio.master.file.RpcContext,alluxio.master.file.meta.LockedInodePath,alluxio.master.file.meta.LockingScheme,alluxio.master.file.options.DescendantType)>",
    "<alluxio.master.file.DefaultPermissionChecker: void checkParentPermission(alluxio.security.authorization.Mode$Bits,alluxio.master.file.meta.LockedInodePath)>",
    "<alluxio.master.file.meta.AsyncUfsAbsentPathCache: java.util.List getNestedPaths(alluxio.AlluxioURI,int)>",
    "<alluxio.master.file.DefaultFileSystemMaster: void renameAndJournal(alluxio.master.file.RpcContext,alluxio.master.file.meta.LockedInodePath,alluxio.master.file.meta.LockedInodePath,alluxio.master.file.options.RenameOptions)>",
    "<alluxio.master.file.meta.InodeTree: alluxio.master.file.meta.LockedInodePath lockFullInodePath(alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode)>",
    "<alluxio.master.file.meta.LockedInodePath: void <init>(alluxio.AlluxioURI,alluxio.master.file.meta.InodeLockList,alluxio.master.file.meta.InodeTree$LockMode)>",
    "<alluxio.master.file.DefaultFileSystemMaster: void listStatusInternal(alluxio.master.file.meta.LockedInodePath,alluxio.master.audit.AuditContext,alluxio.master.file.options.DescendantType,java.util.List)>",
    "<alluxio.master.file.meta.InodeTree: alluxio.master.file.meta.LockedInodePath lockInodePath(alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode)>",
    "<alluxio.master.file.meta.InodeTree: boolean inodePathExists(alluxio.AlluxioURI)>",
    "<alluxio.master.file.meta.LockedInodePath: void <init>(alluxio.AlluxioURI,alluxio.master.file.meta.LockedInodePath,alluxio.master.file.meta.InodeLockList)>",
    "<alluxio.master.file.meta.MountTable: void add(alluxio.AlluxioURI,alluxio.AlluxioURI,long,alluxio.master.file.options.MountOptions)>",
    "<alluxio.master.file.meta.InodeTree: alluxio.master.file.meta.InodePathPair lockInodePathPair(alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode,alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode)>",
    "<alluxio.master.file.meta.InodeTree: alluxio.master.file.meta.InodeLockList lockDescendant(alluxio.master.file.meta.LockedInodePath,alluxio.master.file.meta.InodeTree$LockMode,alluxio.AlluxioURI)>",
    "<alluxio.master.file.meta.MountTable: java.lang.String getMountPoint(alluxio.AlluxioURI)>",
    "<alluxio.web.WebInterfaceBrowseServlet: void setPathDirectories(alluxio.AlluxioURI,javax.servlet.http.HttpServletRequest)>"
  ],
  "1.6.0": [
    "<alluxio.master.file.meta.AsyncUfsAbsentPathCache: java.util.List getNestedPaths(alluxio.AlluxioURI,alluxio.master.file.meta.options.MountInfo)>",
    "<alluxio.master.file.meta.InodeTree: alluxio.master.file.meta.LockedInodePath lockFullInodePath(alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode)>",
    "<alluxio.master.file.PermissionChecker: void checkParentPermission(alluxio.security.authorization.Mode$Bits,alluxio.master.file.meta.LockedInodePath)>",
    "<alluxio.master.file.meta.LockedInodePath: void <init>(alluxio.AlluxioURI,java.util.List,alluxio.master.file.meta.InodeLockList,alluxio.master.file.meta.InodeTree$LockMode)>",
    "<alluxio.master.file.meta.InodeTree: alluxio.master.file.meta.LockedInodePath lockInodePath(alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode)>",
    "<alluxio.master.file.meta.InodeTree: boolean inodePathExists(alluxio.AlluxioURI)>",
    "<alluxio.master.file.meta.MountTable: void add(alluxio.AlluxioURI,alluxio.AlluxioURI,long,alluxio.master.file.options.MountOptions)>",
    "<alluxio.master.file.meta.InodeTree: alluxio.master.file.meta.InodePathPair lockInodePathPair(alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode,alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode)>",
    "<alluxio.master.file.meta.MountTable: java.lang.String getMountPoint(alluxio.AlluxioURI)>",
    "<alluxio.web.WebInterfaceBrowseServlet: void setPathDirectories(alluxio.AlluxioURI,javax.servlet.http.HttpServletRequest)>",
    "<alluxio.master.file.DefaultFileSystemMaster: void renameAndJournal(alluxio.master.file.meta.LockedInodePath,alluxio.master.file.meta.LockedInodePath,alluxio.master.file.options.RenameOptions,alluxio.master.journal.JournalContext)>"
  ],
  "1.5.0": [
    "<alluxio.master.file.meta.AsyncUfsAbsentPathCache: java.util.List getNestedPaths(alluxio.AlluxioURI,alluxio.master.file.meta.options.MountInfo)>",
    "<alluxio.master.file.meta.InodeTree: alluxio.master.file.meta.LockedInodePath lockFullInodePath(alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode)>",
    "<alluxio.master.file.PermissionChecker: void checkParentPermission(alluxio.security.authorization.Mode$Bits,alluxio.master.file.meta.LockedInodePath)>",
    "<alluxio.master.file.meta.LockedInodePath: void <init>(alluxio.AlluxioURI,java.util.List,alluxio.master.file.meta.InodeLockList,alluxio.master.file.meta.InodeTree$LockMode)>",
    "<alluxio.master.file.meta.InodeTree: alluxio.master.file.meta.LockedInodePath lockInodePath(alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode)>",
    "<alluxio.master.file.meta.InodeTree: boolean inodePathExists(alluxio.AlluxioURI)>",
    "<alluxio.master.file.meta.MountTable: void add(alluxio.AlluxioURI,alluxio.AlluxioURI,long,alluxio.master.file.options.MountOptions)>",
    "<alluxio.master.file.meta.InodeTree: alluxio.master.file.meta.InodePathPair lockInodePathPair(alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode,alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode)>",
    "<alluxio.master.file.meta.MountTable: java.lang.String getMountPoint(alluxio.AlluxioURI)>",
    "<alluxio.web.WebInterfaceBrowseServlet: void setPathDirectories(alluxio.AlluxioURI,javax.servlet.http.HttpServletRequest)>",
    "<alluxio.master.file.DefaultFileSystemMaster: void renameAndJournal(alluxio.master.file.meta.LockedInodePath,alluxio.master.file.meta.LockedInodePath,alluxio.master.file.options.RenameOptions,alluxio.master.journal.JournalContext)>"
  ],
  "1.8.1": [
    "<alluxio.master.file.meta.MountTable: boolean containsMountPoint(alluxio.AlluxioURI)>",
    "<alluxio.master.file.DefaultFileSystemMaster: boolean syncMetadata(alluxio.master.file.RpcContext,alluxio.master.file.meta.LockedInodePath,alluxio.master.file.meta.LockingScheme,alluxio.master.file.options.DescendantType)>",
    "<alluxio.master.file.DefaultPermissionChecker: void checkParentPermission(alluxio.security.authorization.Mode$Bits,alluxio.master.file.meta.LockedInodePath)>",
    "<alluxio.master.file.meta.AsyncUfsAbsentPathCache: java.util.List getNestedPaths(alluxio.AlluxioURI,int)>",
    "<alluxio.master.file.DefaultFileSystemMaster: void renameAndJournal(alluxio.master.file.RpcContext,alluxio.master.file.meta.LockedInodePath,alluxio.master.file.meta.LockedInodePath,alluxio.master.file.options.RenameOptions)>",
    "<alluxio.master.file.meta.InodeTree: alluxio.master.file.meta.LockedInodePath lockFullInodePath(alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode)>",
    "<alluxio.master.file.meta.LockedInodePath: void <init>(alluxio.AlluxioURI,alluxio.master.file.meta.InodeLockList,alluxio.master.file.meta.InodeTree$LockMode)>",
    "<alluxio.master.file.DefaultFileSystemMaster: void listStatusInternal(alluxio.master.file.meta.LockedInodePath,alluxio.master.audit.AuditContext,alluxio.master.file.options.DescendantType,java.util.List)>",
    "<alluxio.master.file.meta.InodeTree: alluxio.master.file.meta.LockedInodePath lockInodePath(alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode)>",
    "<alluxio.master.file.meta.InodeTree: boolean inodePathExists(alluxio.AlluxioURI)>",
    "<alluxio.master.file.meta.LockedInodePath: void <init>(alluxio.AlluxioURI,alluxio.master.file.meta.LockedInodePath,alluxio.master.file.meta.InodeLockList)>",
    "<alluxio.master.file.meta.MountTable: void add(alluxio.AlluxioURI,alluxio.AlluxioURI,long,alluxio.master.file.options.MountOptions)>",
    "<alluxio.master.file.meta.InodeTree: alluxio.master.file.meta.InodePathPair lockInodePathPair(alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode,alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode)>",
    "<alluxio.master.file.meta.InodeTree: alluxio.master.file.meta.InodeLockList lockDescendant(alluxio.master.file.meta.LockedInodePath,alluxio.master.file.meta.InodeTree$LockMode,alluxio.AlluxioURI)>",
    "<alluxio.master.file.meta.MountTable: java.lang.String getMountPoint(alluxio.AlluxioURI)>",
    "<alluxio.web.WebInterfaceBrowseServlet: void setPathDirectories(alluxio.AlluxioURI,javax.servlet.http.HttpServletRequest)>"
  ],
  "1.7.1": [
    "<alluxio.master.file.meta.MountTable: boolean containsMountPoint(alluxio.AlluxioURI)>",
    "<alluxio.master.file.meta.AsyncUfsAbsentPathCache: java.util.List getNestedPaths(alluxio.AlluxioURI,int)>",
    "<alluxio.master.file.meta.InodeTree: alluxio.master.file.meta.LockedInodePath lockFullInodePath(alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode)>",
    "<alluxio.master.file.PermissionChecker: void checkParentPermission(alluxio.security.authorization.Mode$Bits,alluxio.master.file.meta.LockedInodePath)>",
    "<alluxio.master.file.meta.LockedInodePath: void <init>(alluxio.AlluxioURI,java.util.List,alluxio.master.file.meta.InodeLockList,alluxio.master.file.meta.InodeTree$LockMode)>",
    "<alluxio.master.file.meta.InodeTree: alluxio.master.file.meta.LockedInodePath lockInodePath(alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode)>",
    "<alluxio.master.file.meta.InodeTree: boolean inodePathExists(alluxio.AlluxioURI)>",
    "<alluxio.master.file.meta.MountTable: void add(alluxio.AlluxioURI,alluxio.AlluxioURI,long,alluxio.master.file.options.MountOptions)>",
    "<alluxio.master.file.meta.InodeTree: alluxio.master.file.meta.InodePathPair lockInodePathPair(alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode,alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode)>",
    "<alluxio.master.file.meta.MountTable: java.lang.String getMountPoint(alluxio.AlluxioURI)>",
    "<alluxio.web.WebInterfaceBrowseServlet: void setPathDirectories(alluxio.AlluxioURI,javax.servlet.http.HttpServletRequest)>",
    "<alluxio.master.file.DefaultFileSystemMaster: void renameAndJournal(alluxio.master.file.meta.LockedInodePath,alluxio.master.file.meta.LockedInodePath,alluxio.master.file.options.RenameOptions,alluxio.master.journal.JournalContext)>"
  ]
}