{
  "1.2.0": [
    "<alluxio.master.file.FileSystemMaster: long renameAndJournal(alluxio.master.file.meta.LockedInodePath,alluxio.master.file.meta.LockedInodePath)>",
    "<alluxio.master.file.meta.InodeTree: alluxio.master.file.meta.LockedInodePath lockFullInodePath(alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode)>",
    "<alluxio.master.file.PermissionChecker: void checkParentPermission(alluxio.security.authorization.Mode$Bits,alluxio.master.file.meta.LockedInodePath)>",
    "<alluxio.master.file.meta.LockedInodePath: void <init>(alluxio.AlluxioURI,java.util.List,alluxio.master.file.meta.InodeLockList)>",
    "<alluxio.master.file.meta.InodeTree: alluxio.master.file.meta.LockedInodePath lockInodePath(alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode)>",
    "<alluxio.worker.block.BlockWorker: void createBlockFile(java.lang.String)>",
    "<alluxio.master.file.meta.InodeTree: boolean inodePathExists(alluxio.AlluxioURI)>",
    "<alluxio.master.file.meta.InodeTree: alluxio.master.file.meta.InodePathPair lockInodePathPair(alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode,alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode)>",
    "<alluxio.master.file.meta.MountTable: java.lang.String getMountPoint(alluxio.AlluxioURI)>",
    "<alluxio.web.WebInterfaceBrowseServlet: void setPathDirectories(alluxio.AlluxioURI,javax.servlet.http.HttpServletRequest)>",
    "<alluxio.master.file.meta.MountTable: void add(alluxio.AlluxioURI,alluxio.AlluxioURI,alluxio.master.file.options.MountOptions)>"
  ],
  "1.3.0": [
    "<alluxio.master.file.FileSystemMaster: long renameAndJournal(alluxio.master.file.meta.LockedInodePath,alluxio.master.file.meta.LockedInodePath)>",
    "<alluxio.master.file.meta.InodeTree: alluxio.master.file.meta.LockedInodePath lockFullInodePath(alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode)>",
    "<alluxio.master.file.PermissionChecker: void checkParentPermission(alluxio.security.authorization.Mode$Bits,alluxio.master.file.meta.LockedInodePath)>",
    "<alluxio.master.file.meta.LockedInodePath: void <init>(alluxio.AlluxioURI,java.util.List,alluxio.master.file.meta.InodeLockList)>",
    "<alluxio.master.file.meta.InodeTree: alluxio.master.file.meta.LockedInodePath lockInodePath(alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode)>",
    "<alluxio.master.file.meta.InodeTree: boolean inodePathExists(alluxio.AlluxioURI)>",
    "<alluxio.master.file.meta.InodeTree: alluxio.master.file.meta.InodePathPair lockInodePathPair(alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode,alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode)>",
    "<alluxio.master.file.meta.MountTable: java.lang.String getMountPoint(alluxio.AlluxioURI)>",
    "<alluxio.worker.block.DefaultBlockWorker: void createBlockFile(java.lang.String)>",
    "<alluxio.web.WebInterfaceBrowseServlet: void setPathDirectories(alluxio.AlluxioURI,javax.servlet.http.HttpServletRequest)>",
    "<alluxio.master.file.meta.MountTable: void add(alluxio.AlluxioURI,alluxio.AlluxioURI,alluxio.master.file.options.MountOptions)>"
  ],
  "1.0.0": [
    "<alluxio.master.file.PermissionChecker: void checkParentPermission(java.lang.String,java.util.List,alluxio.security.authorization.FileSystemAction,alluxio.AlluxioURI,java.util.List)>",
    "<alluxio.master.file.meta.InodeTree: alluxio.master.file.meta.Inode getInodeByPath(alluxio.AlluxioURI)>",
    "<alluxio.master.file.PermissionChecker: void checkOwner(java.lang.String,java.util.List,alluxio.AlluxioURI,java.util.List)>",
    "<alluxio.master.file.FileSystemMaster: void rename(alluxio.AlluxioURI,alluxio.AlluxioURI)>",
    "<alluxio.master.file.meta.InodeTree: alluxio.master.file.meta.InodeTree$CreatePathResult createPath(alluxio.AlluxioURI,alluxio.master.file.meta.options.CreatePathOptions)>",
    "<alluxio.master.file.PermissionChecker: void checkPermission(java.lang.String,java.util.List,alluxio.security.authorization.FileSystemAction,alluxio.AlluxioURI,java.util.List)>",
    "<alluxio.master.file.meta.MountTable: void add(alluxio.AlluxioURI,alluxio.AlluxioURI)>",
    "<alluxio.master.file.meta.MountTable: java.lang.String getMountPoint(alluxio.AlluxioURI)>",
    "<alluxio.worker.block.BlockWorker: void createBlockRemote(long,long,java.lang.String,long)>",
    "<alluxio.web.WebInterfaceBrowseServlet: void setPathDirectories(alluxio.AlluxioURI,javax.servlet.http.HttpServletRequest)>",
    "<alluxio.master.file.FileSystemMaster: java.util.List collectFileInfoList(alluxio.AlluxioURI)>",
    "<alluxio.master.file.FileSystemMaster: void checkPermission(alluxio.security.authorization.FileSystemAction,alluxio.AlluxioURI,boolean)>",
    "<alluxio.master.file.meta.InodeTree: java.util.List collectInodes(alluxio.AlluxioURI)>"
  ],
  "1.0.1": [
    "<alluxio.master.file.PermissionChecker: void checkParentPermission(java.lang.String,java.util.List,alluxio.security.authorization.FileSystemAction,alluxio.AlluxioURI,java.util.List)>",
    "<alluxio.master.file.meta.InodeTree: alluxio.master.file.meta.Inode getInodeByPath(alluxio.AlluxioURI)>",
    "<alluxio.master.file.PermissionChecker: void checkOwner(java.lang.String,java.util.List,alluxio.AlluxioURI,java.util.List)>",
    "<alluxio.worker.block.BlockWorker: void createBlockFile(java.lang.String)>",
    "<alluxio.master.file.FileSystemMaster: void rename(alluxio.AlluxioURI,alluxio.AlluxioURI)>",
    "<alluxio.master.file.meta.InodeTree: alluxio.master.file.meta.InodeTree$CreatePathResult createPath(alluxio.AlluxioURI,alluxio.master.file.meta.options.CreatePathOptions)>",
    "<alluxio.master.file.PermissionChecker: void checkPermission(java.lang.String,java.util.List,alluxio.security.authorization.FileSystemAction,alluxio.AlluxioURI,java.util.List)>",
    "<alluxio.master.file.meta.MountTable: void add(alluxio.AlluxioURI,alluxio.AlluxioURI)>",
    "<alluxio.master.file.meta.MountTable: java.lang.String getMountPoint(alluxio.AlluxioURI)>",
    "<alluxio.web.WebInterfaceBrowseServlet: void setPathDirectories(alluxio.AlluxioURI,javax.servlet.http.HttpServletRequest)>",
    "<alluxio.master.file.FileSystemMaster: java.util.List collectFileInfoList(alluxio.AlluxioURI)>",
    "<alluxio.master.file.FileSystemMaster: void checkPermission(alluxio.security.authorization.FileSystemAction,alluxio.AlluxioURI,boolean)>",
    "<alluxio.master.file.meta.InodeTree: java.util.List collectInodes(alluxio.AlluxioURI)>"
  ],
  "1.4.0": [
    "<alluxio.master.file.FileSystemMaster: long renameAndJournal(alluxio.master.file.meta.LockedInodePath,alluxio.master.file.meta.LockedInodePath)>",
    "<alluxio.master.file.meta.InodeTree: alluxio.master.file.meta.LockedInodePath lockFullInodePath(alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode)>",
    "<alluxio.master.file.PermissionChecker: void checkParentPermission(alluxio.security.authorization.Mode$Bits,alluxio.master.file.meta.LockedInodePath)>",
    "<alluxio.master.file.meta.LockedInodePath: void <init>(alluxio.AlluxioURI,java.util.List,alluxio.master.file.meta.InodeLockList)>",
    "<alluxio.master.file.meta.InodeTree: alluxio.master.file.meta.LockedInodePath lockInodePath(alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode)>",
    "<alluxio.master.file.meta.InodeTree: boolean inodePathExists(alluxio.AlluxioURI)>",
    "<alluxio.master.file.meta.InodeTree: alluxio.master.file.meta.InodePathPair lockInodePathPair(alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode,alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode)>",
    "<alluxio.master.file.meta.MountTable: java.lang.String getMountPoint(alluxio.AlluxioURI)>",
    "<alluxio.worker.block.DefaultBlockWorker: void createBlockFile(java.lang.String)>",
    "<alluxio.web.WebInterfaceBrowseServlet: void setPathDirectories(alluxio.AlluxioURI,javax.servlet.http.HttpServletRequest)>",
    "<alluxio.master.file.meta.MountTable: void add(alluxio.AlluxioURI,alluxio.AlluxioURI,alluxio.master.file.options.MountOptions)>"
  ],
  "1.1.0": [
    "<alluxio.master.file.FileSystemMaster: long renameAndJournal(alluxio.master.file.meta.LockedInodePath,alluxio.master.file.meta.LockedInodePath)>",
    "<alluxio.master.file.meta.InodeTree: alluxio.master.file.meta.LockedInodePath lockFullInodePath(alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode)>",
    "<alluxio.master.file.meta.LockedInodePath: void <init>(alluxio.AlluxioURI,java.util.List,alluxio.master.file.meta.InodeLockList)>",
    "<alluxio.master.file.meta.InodeTree: alluxio.master.file.meta.LockedInodePath lockInodePath(alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode)>",
    "<alluxio.worker.block.BlockWorker: void createBlockFile(java.lang.String)>",
    "<alluxio.master.file.meta.InodeTree: boolean inodePathExists(alluxio.AlluxioURI)>",
    "<alluxio.master.file.meta.InodeTree: alluxio.master.file.meta.InodePathPair lockInodePathPair(alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode,alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode)>",
    "<alluxio.master.file.meta.MountTable: java.lang.String getMountPoint(alluxio.AlluxioURI)>",
    "<alluxio.master.file.PermissionChecker: void checkParentPermission(alluxio.security.authorization.FileSystemAction,alluxio.master.file.meta.LockedInodePath)>",
    "<alluxio.web.WebInterfaceBrowseServlet: void setPathDirectories(alluxio.AlluxioURI,javax.servlet.http.HttpServletRequest)>",
    "<alluxio.master.file.meta.MountTable: void add(alluxio.AlluxioURI,alluxio.AlluxioURI,alluxio.master.file.options.MountOptions)>"
  ],
  "1.1.1": [
    "<alluxio.master.file.FileSystemMaster: long renameAndJournal(alluxio.master.file.meta.LockedInodePath,alluxio.master.file.meta.LockedInodePath)>",
    "<alluxio.master.file.meta.InodeTree: alluxio.master.file.meta.LockedInodePath lockFullInodePath(alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode)>",
    "<alluxio.master.file.meta.LockedInodePath: void <init>(alluxio.AlluxioURI,java.util.List,alluxio.master.file.meta.InodeLockList)>",
    "<alluxio.master.file.meta.InodeTree: alluxio.master.file.meta.LockedInodePath lockInodePath(alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode)>",
    "<alluxio.worker.block.BlockWorker: void createBlockFile(java.lang.String)>",
    "<alluxio.master.file.meta.InodeTree: boolean inodePathExists(alluxio.AlluxioURI)>",
    "<alluxio.master.file.meta.InodeTree: alluxio.master.file.meta.InodePathPair lockInodePathPair(alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode,alluxio.AlluxioURI,alluxio.master.file.meta.InodeTree$LockMode)>",
    "<alluxio.master.file.meta.MountTable: java.lang.String getMountPoint(alluxio.AlluxioURI)>",
    "<alluxio.master.file.PermissionChecker: void checkParentPermission(alluxio.security.authorization.FileSystemAction,alluxio.master.file.meta.LockedInodePath)>",
    "<alluxio.web.WebInterfaceBrowseServlet: void setPathDirectories(alluxio.AlluxioURI,javax.servlet.http.HttpServletRequest)>",
    "<alluxio.master.file.meta.MountTable: void add(alluxio.AlluxioURI,alluxio.AlluxioURI,alluxio.master.file.options.MountOptions)>"
  ]
}