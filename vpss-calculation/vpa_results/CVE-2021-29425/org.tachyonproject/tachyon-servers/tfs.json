{
  "0.7.0": [
    "<tachyon.master.MasterInfo: boolean renameInternal(int,tachyon.TachyonURI,long)>",
    "<tachyon.worker.block.BlockDataManager: void createBlockRemote(long,long,int,long)>",
    "<tachyon.master.MasterInfo: tachyon.master.Inode getInode(tachyon.TachyonURI)>",
    "<tachyon.master.MasterInfo: int createFileInternal(boolean,tachyon.TachyonURI,boolean,long,long)>",
    "<tachyon.web.WebInterfaceBrowseServlet: void setPathDirectories(tachyon.TachyonURI,javax.servlet.http.HttpServletRequest)>"
  ],
  "0.8.1": [
    "<tachyon.master.file.FileSystemMaster: boolean rename(long,tachyon.TachyonURI)>",
    "<tachyon.master.file.meta.InodeTree: tachyon.master.file.meta.InodeTree$CreatePathResult createPath(tachyon.TachyonURI,tachyon.master.file.meta.options.CreatePathOptions)>",
    "<tachyon.master.file.meta.MountTable: boolean add(tachyon.TachyonURI,tachyon.TachyonURI)>",
    "<tachyon.master.file.meta.MountTable: java.lang.String getMountPoint(tachyon.TachyonURI)>",
    "<tachyon.web.WebInterfaceBrowseServlet: void setPathDirectories(tachyon.TachyonURI,javax.servlet.http.HttpServletRequest)>",
    "<tachyon.worker.block.BlockDataManager: void createBlockRemote(long,long,int,long)>",
    "<tachyon.master.file.meta.InodeTree: tachyon.master.file.meta.Inode getInodeByPath(tachyon.TachyonURI)>"
  ],
  "0.8.2": [
    "<tachyon.master.file.FileSystemMaster: boolean rename(long,tachyon.TachyonURI)>",
    "<tachyon.master.file.meta.InodeTree: tachyon.master.file.meta.InodeTree$CreatePathResult createPath(tachyon.TachyonURI,tachyon.master.file.meta.options.CreatePathOptions)>",
    "<tachyon.master.file.meta.MountTable: boolean add(tachyon.TachyonURI,tachyon.TachyonURI)>",
    "<tachyon.master.file.meta.MountTable: java.lang.String getMountPoint(tachyon.TachyonURI)>",
    "<tachyon.web.WebInterfaceBrowseServlet: void setPathDirectories(tachyon.TachyonURI,javax.servlet.http.HttpServletRequest)>",
    "<tachyon.worker.block.BlockDataManager: void createBlockRemote(long,long,int,long)>",
    "<tachyon.master.file.meta.InodeTree: tachyon.master.file.meta.Inode getInodeByPath(tachyon.TachyonURI)>"
  ],
  "0.8.0": [
    "<tachyon.master.file.FileSystemMaster: boolean rename(long,tachyon.TachyonURI)>",
    "<tachyon.master.file.meta.InodeTree: tachyon.master.file.meta.InodeTree$CreatePathResult createPath(tachyon.TachyonURI,tachyon.master.file.meta.options.CreatePathOptions)>",
    "<tachyon.master.file.meta.MountTable: boolean add(tachyon.TachyonURI,tachyon.TachyonURI)>",
    "<tachyon.master.file.meta.MountTable: java.lang.String getMountPoint(tachyon.TachyonURI)>",
    "<tachyon.web.WebInterfaceBrowseServlet: void setPathDirectories(tachyon.TachyonURI,javax.servlet.http.HttpServletRequest)>",
    "<tachyon.worker.block.BlockDataManager: void createBlockRemote(long,long,int,long)>",
    "<tachyon.master.file.meta.InodeTree: tachyon.master.file.meta.Inode getInodeByPath(tachyon.TachyonURI)>"
  ],
  "0.7.1": [
    "<tachyon.master.MasterInfo: boolean renameInternal(int,tachyon.TachyonURI,long)>",
    "<tachyon.worker.block.BlockDataManager: void createBlockRemote(long,long,int,long)>",
    "<tachyon.master.MasterInfo: tachyon.master.Inode getInode(tachyon.TachyonURI)>",
    "<tachyon.master.MasterInfo: int createFileInternal(boolean,tachyon.TachyonURI,boolean,long,long)>",
    "<tachyon.web.WebInterfaceBrowseServlet: void setPathDirectories(tachyon.TachyonURI,javax.servlet.http.HttpServletRequest)>"
  ]
}