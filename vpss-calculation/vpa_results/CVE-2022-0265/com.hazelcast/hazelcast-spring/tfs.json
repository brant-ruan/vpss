{
  "5.1-BETA-1": [
    "<com.hazelcast.spring.HazelcastConfigBeanDefinitionParser$SpringXmlConfigBuilder: com.hazelcast.config.SplitBrainProtectionConfigBuilder handleRecentlyActiveSplitBrainProtection(java.lang.String,org.w3c.dom.Node,int)>",
    "<com.hazelcast.spring.cache.SpringHazelcastCachingProvider: javax.cache.CacheManager getCacheManager(java.lang.String,java.util.Properties)>",
    "<com.hazelcast.spring.HazelcastConfigBeanDefinitionParser$SpringXmlConfigBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition handleKeyStoreSecureStoreConfig(org.w3c.dom.Node)>",
    "<com.hazelcast.spring.cache.HazelcastCache: java.lang.Object lookup(java.lang.Object)>",
    "<com.hazelcast.spring.hibernate.RegionFactoryBeanDefinitionParser: org.springframework.beans.factory.support.AbstractBeanDefinition parseInternal(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)>",
    "<com.hazelcast.spring.AbstractHazelcastBeanDefinitionParser$SpringXmlBuilderHelper: java.lang.String getAttribute(org.w3c.dom.Node,java.lang.String)>",
    "<com.hazelcast.spring.AbstractHazelcastBeanDefinitionParser$SpringXmlBuilderHelper: java.lang.String getTextContent(org.w3c.dom.Node)>",
    "<com.hazelcast.spring.HazelcastConfigBeanDefinitionParser$SpringXmlConfigBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition handleVaultSecureStoreConfig(org.w3c.dom.Node)>",
    "<com.hazelcast.spring.HazelcastConfigBeanDefinitionParser$SpringXmlConfigBuilder: com.hazelcast.config.SplitBrainProtectionConfigBuilder handleProbabilisticSplitBrainProtection(java.lang.String,org.w3c.dom.Node,int)>",
    "<com.hazelcast.spring.HazelcastConfigBeanDefinitionParser$SpringXmlConfigBuilder: void handleEncryptionAtRest(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.w3c.dom.Node)>",
    "<com.hazelcast.spring.HazelcastConfigBeanDefinitionParser: void <clinit>()>",
    "<com.hazelcast.spring.AbstractHazelcastBeanDefinitionParser$SpringXmlBuilderHelper: void <init>()>",
    "<com.hazelcast.spring.cache.SpringHazelcastCachingProvider: javax.cache.CacheManager getCacheManager(com.hazelcast.core.HazelcastInstance,java.lang.String,java.util.Properties)>"
  ]
}