{
  "2.0.1": [
    "<org.umlg.sqlg.test.topology.TestTopologyMultipleGraphs: void testDeepEqualsAcrossSchema()>",
    "<org.umlg.sqlg.test.schema.TestLoadSchemaViaNotify: void testLoadSchemaForeignKeyInSchemaToPublic()>",
    "<org.umlg.sqlg.test.localdate.TestLocalDateArray: void testPeriodArray()>",
    "<org.umlg.sqlg.test.topology.TestSubSubPartition: void testVertexSubSubPartitionRange()>",
    "<org.umlg.sqlg.test.TestAllVertices: void testVertexIteratorWithIncorrectId()>",
    "<org.umlg.sqlg.test.topology.TestSubSubPartition: void testEdgeSubSubPartitionList()>",
    "<org.umlg.sqlg.test.localdate.TestLocalDate: void testPeriod()>",
    "<org.umlg.sqlg.test.localdate.TestLocalDateArray: void testPeriodArrayOnEdge()>",
    "<org.umlg.sqlg.test.datasource.TestDataSource: void before()>",
    "<org.umlg.sqlg.test.index.TestIndex: void testIndexExistSchema()>",
    "<org.umlg.sqlg.test.topology.TestTopologyDelete: void testDeleteGlobalUniqueIndex()>",
    "<org.umlg.sqlg.test.topology.TestPartitioning: void testReloadVertexLabelWithPartitions()>",
    "<org.umlg.sqlg.test.topology.TestTopologyUpgrade: void testUpgradeTypesWithMoreThanOneColumnOnEdgeArrays()>",
    "<org.umlg.sqlg.test.topology.TestTopologyMultipleGraphs: void testGratefulDeadAcrossGraphs()>",
    "<org.umlg.sqlg.test.schema.TestLoadSchemaViaNotify: void testLazyLoadTableViaVertexHas()>",
    "<org.umlg.sqlg.test.schema.TestLoadSchema: void loadForeignKeys()>",
    "<org.umlg.sqlg.test.topology.TestPartitioning: void testPartitionRangeInSchema()>",
    "<org.umlg.sqlg.test.TestLoadArrayProperties: void testLoadSchemaWithArrays()>",
    "<org.umlg.sqlg.test.schema.TestLoadSchemaViaNotify: void testLazyLoadTableViaEdgesHas()>",
    "<org.umlg.sqlg.test.index.TestIndex: void testMultipleIndexesOnLabel()>",
    "<org.umlg.sqlg.test.schema.TestSqlgSchema: void testSqlgSchemaExist()>",
    "<org.umlg.sqlg.test.topology.TestTopologyUpgrade: void testCustomIndexIgnored()>",
    "<org.umlg.sqlg.test.TestSetProperty: void testDateTimeProperties()>",
    "<org.umlg.sqlg.test.edges.TestForeignKeysAreOptional: void testForeignKeysOffHsqldb()>",
    "<org.umlg.sqlg.test.schema.TestLoadSchema: void testIdNotLoadedAsProperty()>",
    "<org.umlg.sqlg.test.schema.TestLoadSchema: void testLoadingLocalDateTime()>",
    "<org.umlg.sqlg.test.topology.TestTopologyDelete: void testDeleteEdgeLabel()>",
    "<org.umlg.sqlg.test.topology.TestPartitionMultipleGraphs: void testNotifyPartitionedEdgeLabel()>",
    "<org.umlg.sqlg.test.sharding.TestSharding: void testShardingEdge()>",
    "<org.umlg.sqlg.test.topology.TestTopologyUpgrade: void testUpgradeFloatArrays()>",
    "<org.umlg.sqlg.test.schema.TestLoadSchema: void testLoadSchemaWithByteArray()>",
    "<org.umlg.sqlg.test.localdate.TestLocalDate: void testLocalTime()>",
    "<org.umlg.sqlg.test.schema.TestCaptureSchemaTableEdges: void testLoadTableLabels()>",
    "<org.umlg.sqlg.test.localdate.TestLocalDateArray: void testLocalDateArray()>",
    "<org.umlg.sqlg.test.topology.TestTopologyUpgrade: void testNonEdgeNonVerticeTablesIgnored()>",
    "<org.umlg.sqlg.test.schema.TestLoadSchemaViaNotify: void testViaNotifyIsCommitted()>",
    "<org.umlg.sqlg.test.topology.TestValidateTopology: void testEdgeLabelDoesNotExist()>",
    "<org.umlg.sqlg.test.topology.TestTopologyUpgrade: void testUpgradeJson()>",
    "<org.umlg.sqlg.test.schema.TestLoadSchema: void testLoadSchemaWithSimilarForeignKeysAcrossSchemas()>",
    "<org.umlg.sqlg.test.topology.TestValidateTopology: void testVertexLabelDoesNotExist()>",
    "<org.umlg.sqlg.test.topology.TestTopologyUpgrade: void testUpgradeArrayTypesWithMoreThanOneColumn()>",
    "<org.umlg.sqlg.test.topology.TestTopologyUpgrade: void testUpgrade()>",
    "<org.umlg.sqlg.test.datasource.TestJNDIInitialization: void beforeClass()>",
    "<org.umlg.sqlg.test.schema.TestLoadSchema: void testLoadSchema()>",
    "<org.umlg.sqlg.test.index.TestIndex: void testLongIndexName()>",
    "<org.umlg.sqlg.test.topology.TestPartitioning: void testEdgeSubPartitioningList()>",
    "<org.umlg.sqlg.test.topology.TestTopologyDelete: void testDeleteEdgeIndex()>",
    "<org.umlg.sqlg.test.index.TestIndex: void testIndexOnEdge()>",
    "<org.umlg.sqlg.test.localdate.TestLocalDateArray: void testZonedDateTimeArray()>",
    "<org.umlg.sqlg.test.schema.TestMultipleThreadMultipleJvm: void testMultiThreadedSchemaCreation2()>",
    "<org.umlg.sqlg.test.index.TestIndexOnPartition: void testCreateIndexOnPartitionedVertexLabelBeforeCreatingPartitions()>",
    "<org.umlg.sqlg.test.localdate.TestLocalDateArray: void testZonedDateTimeArrayOnEdge()>",
    "<org.umlg.sqlg.test.localdate.TestLocalDate: void testLoadDateTypes()>",
    "<org.umlg.sqlg.test.edges.TestForeignKeysAreOptional: void testForeignKeysOnPostgres()>",
    "<org.umlg.sqlg.test.topology.TestTopologyUpgrade: void testUpgradeIndex()>",
    "<org.umlg.sqlg.test.topology.TestTopologyUpgrade: void testTopologyUpgradeForeignKey()>",
    "<org.umlg.sqlg.test.topology.TestValidateTopology: void testIndexDoesNotExist()>",
    "<org.umlg.sqlg.test.localdate.TestLocalDateArray: void testLocalDateArrayOnEdge()>",
    "<org.umlg.sqlg.test.topology.TestPartitioning: void testReloadVertexLabelWithSubPartitions()>",
    "<org.umlg.sqlg.test.schema.TestMultipleThreadMultipleJvm: void testConcurrentModificationException()>",
    "<org.umlg.sqlg.test.index.TestIndexOnPartition: void testCreateIndexOnPartitionedVertexLabelAfterCreatingPartitions()>",
    "<org.umlg.sqlg.test.edges.TestForeignKeysAreOptional: void testForeignKeysOnHsqldb()>",
    "<org.umlg.sqlg.test.topology.TestPartitionMultipleGraphs: void testNotifyPartitionedVertexLabel()>",
    "<org.umlg.sqlg.test.topology.TestTopologyUpgrade: void testUpgradeMultipleInOutEdges2()>",
    "<org.umlg.sqlg.test.sharding.TestSharding: void testShardingVertex()>",
    "<org.umlg.sqlg.test.topology.TestTopologyMultipleGraphs: void testDeepEqualsPublicSchema()>",
    "<org.umlg.sqlg.test.schema.TestLoadSchema: void testLoadPropertyColumnNames()>",
    "<org.umlg.sqlg.test.roles.TestReadOnlyRole: void testReadOnlyRoleOnSchemasVertexLabelAndEdgeLabel()>",
    "<org.umlg.sqlg.test.schema.TestMultipleThreadMultipleJvm: void testMultiThreadedLocking()>",
    "<org.umlg.sqlg.test.schema.TestLoadSchemaViaNotify: void testDistributedTopologyListener()>",
    "<org.umlg.sqlg.test.topology.TestValidateTopology: void testEdgeLabelPropertyDoesNotExist()>",
    "<org.umlg.sqlg.test.localdate.TestLocalDate: void testDuration()>",
    "<org.umlg.sqlg.test.topology.TestTopologyUpgrade: void testUpgradeTypesWithMoreThanOneColumn()>",
    "<org.umlg.sqlg.test.batch.TestBatch: void testBatchUpdateOfLabels()>",
    "<org.umlg.sqlg.test.topology.TestTopologyUpgrade: void testUpgradeTypesWithMoreThanOneColumnOnEdge()>",
    "<org.umlg.sqlg.test.schema.TestLoadSchema: void testMultipleInEdges()>",
    "<org.umlg.sqlg.test.topology.TestTopologyUpgrade: void testModernGraph()>",
    "<org.umlg.sqlg.test.schema.TestLoadSchema: void testLoadSchemaWithSimilarForeignKeysAcrossSchemasMultipleEdges()>",
    "<org.umlg.sqlg.test.topology.TestTopologyDeleteSpecific: void testRemoveSchemaWithCrossEdges()>",
    "<org.umlg.sqlg.test.repeatstep.NetAggregateTest: void before()>",
    "<org.umlg.sqlg.test.topology.TestTopologyDelete: void testDeleteEdgeProperty()>",
    "<org.umlg.sqlg.test.topology.TestTopologyDelete: void testDeleteVertexLabel()>",
    "<org.umlg.sqlg.test.localdate.TestLocalDateArray: void testLocalTimeArray()>",
    "<org.umlg.sqlg.test.index.TestIndexOnPartition: void testCreateIndexOnPartitionedEdgeLabelBeforeCreatingPartitions()>",
    "<org.umlg.sqlg.test.BaseTest: void before()>",
    "<org.umlg.sqlg.test.roles.TestReadOnlyRole: void testReadOnlyRoleOnPublicTable()>",
    "<org.umlg.sqlg.test.topology.TestTopologyUpgrade: void testUpgradeArrays()>",
    "<org.umlg.sqlg.test.schema.TestLoadSchemaViaNotify: void testLoadSchemaForeignKeyOutSchemaToPublic()>",
    "<org.umlg.sqlg.test.schema.TestLoadSchema: void testLoadingJson()>",
    "<org.umlg.sqlg.test.usersuppliedpk.topology.TestUserSuppliedPKTopology: void testEdgeNormal()>",
    "<org.umlg.sqlg.test.index.TestIndexOnPartition: void testCreateIndexOnSubPartitionedVertexLabelAfterCreatingPartitions()>",
    "<org.umlg.sqlg.test.topology.TestTopologyUpgrade: void multipleSchemas()>",
    "<org.umlg.sqlg.test.usersuppliedpk.topology.TestUserSuppliedPKTopology: void testEdgeCompositeIds()>",
    "<org.umlg.sqlg.test.topology.TestTopologyUpgrade: void testGratefulDeadDBUpgrade()>",
    "<org.umlg.sqlg.test.schema.TestLoadSchema: void testLoadSchemaSameTableDifferentSchema()>",
    "<org.umlg.sqlg.test.topology.TestSubSubPartition: void testEdgeSubSubPartitionRange()>",
    "<org.umlg.sqlg.test.schema.TestLoadSchemaViaNotify: void testLazyLoadTableViaVertexHasWithKey()>",
    "<org.umlg.sqlg.test.topology.TestValidateTopology: void testGlobalUniqueIndexExist()>",
    "<org.umlg.sqlg.test.edges.TestForeignKeysAreOptional: void testForeignKeysOffPostgres()>",
    "<org.umlg.sqlg.test.schema.TestLoadSchema: void testLoadingLocalDate()>",
    "<org.umlg.sqlg.test.index.TestIndexOnPartition: void testCreateIndexOnSubPartitionedVertexLabelBeforeCreatingPartitions()>",
    "<org.umlg.sqlg.test.topology.TestPartitioning: void testPartitionedEdgesList()>",
    "<org.umlg.sqlg.test.localdate.TestLocalDateArray: void testLocalDateTimeArrayOnEdge()>",
    "<org.umlg.sqlg.test.topology.TestPartitioning: void testReloadEdgeLabelWithSubPartitions()>",
    "<org.umlg.sqlg.test.topology.TestTopologyDelete: void testDeleteSchema()>",
    "<org.umlg.sqlg.test.TestLoadArrayProperties: void testLoadSchemaWithArraysWithoutFloat()>",
    "<org.umlg.sqlg.test.edges.TestEdgeCache: void testMultipleEdgesFromSameVertex()>",
    "<org.umlg.sqlg.test.topology.TestValidateTopology: void testVertexLabelPropertyDoesNotExist()>",
    "<org.umlg.sqlg.test.localdate.TestLocalDate: void testLocalDateTimeUpdate()>",
    "<org.umlg.sqlg.test.index.TestIndexOnPartition: void testCreateIndexOnPartitionedEdgeLabelAfterCreatingPartitions()>",
    "<org.umlg.sqlg.test.sharding.TestSharding: void testShardingDifferentInAndOut()>",
    "<org.umlg.sqlg.test.topology.TestTopologyUpgrade: void testUpdateLocalDateTimeAndZonedDateTime()>",
    "<org.umlg.sqlg.test.topology.TestPartitioning: void testReloadEdgeLabelWithNoPartitions()>",
    "<org.umlg.sqlg.test.topology.TestValidateTopology: void testSchemaDoesNotExist()>",
    "<org.umlg.sqlg.test.topology.TestTopologyDelete: void testDeleteEdgeRole(java.lang.String,java.lang.String)>",
    "<org.umlg.sqlg.test.schema.TestMultiThread: void lambda$testMultipleGraphs$4(java.lang.String)>",
    "<org.umlg.sqlg.test.topology.TestTopologyDelete: void testDeleteVertexIndex()>",
    "<org.umlg.sqlg.test.localdate.TestLocalDate: void testLocalDate()>",
    "<org.umlg.sqlg.test.topology.TestPartitioning: void testReloadEdgeLabelWithPartitions()>",
    "<org.umlg.sqlg.test.topology.TestTopologyMultipleGraphs: void testModernAcrossGraphs()>",
    "<org.umlg.sqlg.test.datasource.TestDataSource: void testQueryEmptyGraph()>",
    "<org.umlg.sqlg.test.topology.TestTopologyUpgrade: void testUpgradeJsonArrays()>",
    "<org.umlg.sqlg.test.schema.TestMultiThread: void testMultipleGraphsMultipleLabels()>",
    "<org.umlg.sqlg.test.schema.TestMultiThread: void lambda$testMultipleGraphsMultipleLabels$5(java.lang.String)>",
    "<org.umlg.sqlg.test.schema.TestMultipleThreadMultipleJvm: void testMultiThreadedVertexLabelCreation()>",
    "<org.umlg.sqlg.test.roles.TestReadOnlyRole: void testReadOnlyRoleOnSchema()>",
    "<org.umlg.sqlg.test.tp3.SqlgAbstractGraphProvider: void clear(org.apache.tinkerpop.gremlin.structure.Graph,org.apache.commons.configuration.Configuration)>",
    "<org.umlg.sqlg.test.schema.TestLoadSchema: void testLoadMultipleSchemas()>",
    "<org.umlg.sqlg.test.index.TestIndex: void testShortIndexName()>",
    "<org.umlg.sqlg.test.localdate.TestLocalDate: void testZonedDateTime()>",
    "<org.umlg.sqlg.test.topology.TestTopologyUpgrade: void testUpgradePropertiesAcrossSchema()>",
    "<org.umlg.sqlg.test.schema.TestLoadSchemaViaNotify: void testLazyLoadTableViaVertexHasWithKeyMissingColumn()>",
    "<org.umlg.sqlg.test.usersuppliedpk.topology.TestUserSuppliedPKTopology: void testVertexCompositeIds()>",
    "<org.umlg.sqlg.test.schema.TestLoadSchema: void testLoadingLocalTime()>",
    "<org.umlg.sqlg.test.schema.TestLoadSchemaViaNotify: void testGlobalUniqueIndexViaNotify()>",
    "<org.umlg.sqlg.test.schema.TestLoadSchema: void testLoadGlobalUniqueIndexes()>",
    "<org.umlg.sqlg.test.datasource.TestJNDIInitialization: void testLoadingDatasourceFromJndi()>",
    "<org.umlg.sqlg.test.schema.TestLoadSchema: void testLoadSchemaWithSimilarForeignKeysAcrossSchemasMultipleEdgesOtherWayAround()>",
    "<org.umlg.sqlg.test.schema.TestMultipleThreadMultipleJvm: void testMultiThreadedSchemaCreation()>",
    "<org.umlg.sqlg.test.topology.TestDeadLock: void lambda$testDeadlock1DifferentGraphs$5(org.apache.tinkerpop.gremlin.structure.Vertex,org.apache.tinkerpop.gremlin.structure.Vertex,java.lang.Object,java.lang.Object,java.util.concurrent.atomic.AtomicInteger)>",
    "<org.umlg.sqlg.test.schema.TestLoadSchemaViaNotify: void testLoadSchemaRemembersUncommittedSchemas()>",
    "<org.umlg.sqlg.test.localdate.TestLocalDateArray: void testDurationArray()>",
    "<org.umlg.sqlg.test.index.TestIndex: void testIndexExist()>",
    "<org.umlg.sqlg.test.topology.TestPartitioning: void testReloadVertexLabelWithNoPartitions()>",
    "<org.umlg.sqlg.test.schema.TestLoadSchemaViaNotify: void testLazyLoadTableViaEdgeCreation()>",
    "<org.umlg.sqlg.test.topology.TestPartitioning: void testPartitionedEdgesRange()>",
    "<org.umlg.sqlg.test.topology.TestTopologyUpgrade: void testUpgradeEdgeWithMultipleInOutLabelsAndAIndex()>",
    "<org.umlg.sqlg.test.localdate.TestLocalDate: void testLocalDateTime()>",
    "<org.umlg.sqlg.test.topology.TestPartitioning: void testEdgeSubPartitioningRange()>",
    "<org.umlg.sqlg.test.topology.TestTopologyUpgrade: void testUpgradeMultipleInOutEdges()>",
    "<org.umlg.sqlg.test.schema.TestLoadSchemaViaNotify: void testLoadSchemaEdge()>",
    "<org.umlg.sqlg.test.topology.TestPartitioning: void testPartitioningListSimple()>",
    "<org.umlg.sqlg.test.localdate.TestLocalDateArray: void testLocalTimeArrayOnEdge()>",
    "<org.umlg.sqlg.test.localdate.TestLocalDateArray: void testDurationArrayOnEdge()>",
    "<org.umlg.sqlg.test.topology.TestTopologyDeleteSpecific: void testSchemaDelete()>",
    "<org.umlg.sqlg.test.localdate.TestLocalDateArray: void testZonedDateTimeArray2()>",
    "<org.umlg.sqlg.test.schema.TestLoadSchemaViaNotify: void loadIndex()>",
    "<org.umlg.sqlg.test.localdate.TestLocalDateArray: void testLocalDateTimeArray()>",
    "<org.umlg.sqlg.test.topology.TestTopologyDelete: void testDeleteSchemaWithOtherEdges()>",
    "<org.umlg.sqlg.test.schema.TestLoadSchema: void testMultipleOutEdges()>",
    "<org.umlg.sqlg.test.topology.TestTopologyDelete: void testDeleteVertexProperty()>",
    "<org.umlg.sqlg.test.schema.TestMultiThread: void testMultipleGraphs()>"
  ]
}