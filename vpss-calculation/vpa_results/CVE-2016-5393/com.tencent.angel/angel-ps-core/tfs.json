{
  "2.4.0": [
    "<com.tencent.angel.master.AngelApplicationMaster: void writeAppState()>",
    "<com.tencent.angel.client.kubernetes.AngelKubernetesClient: void startPSServer()>",
    "<com.tencent.angel.utils.HdfsUtil: org.apache.hadoop.fs.Path[] getInputPaths(org.apache.hadoop.mapred.JobConf)>",
    "<com.tencent.angel.split.SplitClassification: void serialize(java.io.DataOutputStream)>",
    "<com.tencent.angel.ml.matrix.MatrixContext: void loadMatrixMetaFromFile(java.lang.String,java.lang.String,org.apache.hadoop.conf.Configuration)>",
    "<com.tencent.angel.utils.HdfsUtil: void removeIfEmpty(org.apache.hadoop.conf.Configuration,java.lang.String)>",
    "<com.tencent.angel.master.matrix.committer.AMModelLoader: java.util.Map split(com.tencent.angel.model.MatrixLoadContext,com.tencent.angel.model.ModelLoadContext)>",
    "<com.tencent.angel.client.AngelClient: void setOutputDirectory()>",
    "<com.tencent.angel.utils.HdfsUtil: void writeStorage(com.tencent.angel.worker.storage.DataBlock,com.tencent.angel.worker.task.TaskContext)>",
    "<com.tencent.angel.model.output.format.MatrixFormatImpl: com.tencent.angel.ml.math2.matrix.Matrix load(com.tencent.angel.model.MatrixLoadContext,org.apache.hadoop.conf.Configuration)>",
    "<com.tencent.angel.ml.matrix.psf.update.update.IncrementRowsParam: boolean useIntKey(com.tencent.angel.PartitionKey)>",
    "<com.tencent.angel.master.matrixmeta.AMMatrixMetaManager: java.util.List loadPartitionInfoFromHDFS(java.lang.String,com.tencent.angel.ml.matrix.MatrixContext,org.apache.hadoop.conf.Configuration)>",
    "<com.tencent.angel.client.AngelClient: void load(com.tencent.angel.model.ModelLoadContext)>",
    "<com.tencent.angel.master.yarn.util.AngelApps: void parseDistributedCacheArtifacts(org.apache.hadoop.conf.Configuration,java.util.Map,org.apache.hadoop.yarn.api.records.LocalResourceType,java.net.URI[],long[],long[],boolean[])>",
    "<com.tencent.angel.model.output.format.MatrixFormatImpl: void save(com.tencent.angel.ps.storage.matrix.ServerMatrix,com.tencent.angel.model.PSMatrixSaveContext,org.apache.hadoop.conf.Configuration)>",
    "<com.tencent.angel.master.AngelApplicationMaster: void cleanupStagingDir()>",
    "<com.tencent.angel.utils.HdfsUtil: void remove(org.apache.hadoop.conf.Configuration,java.lang.String)>",
    "<com.tencent.angel.master.data.DataSpliter: void <init>(com.tencent.angel.master.app.AMContext,java.util.Map)>",
    "<com.tencent.angel.kubernetesmanager.deploy.submit.KubernetesClientApplication: void run(org.apache.hadoop.conf.Configuration)>",
    "<com.tencent.angel.model.ModelTools: com.tencent.angel.ml.math2.matrix.Matrix loadToLocal(com.tencent.angel.model.MatrixLoadContext,org.apache.hadoop.conf.Configuration)>",
    "<com.tencent.angel.ps.server.data.WorkerPool: void <init>(com.tencent.angel.ps.PSContext,com.tencent.angel.ps.server.data.RunningContext)>",
    "<com.tencent.angel.master.AngelApplicationMaster: void initAndStart()>",
    "<com.tencent.angel.master.AngelKubernetesApplicationMaster: void cleanupStagingDir()>",
    "<com.tencent.angel.psagent.PSAgentContext: boolean syncClockEnable()>",
    "<com.tencent.angel.utils.SerdeUtils: org.apache.hadoop.mapred.InputSplit deSerilizeOldSplit(com.tencent.angel.split.SplitInfo,org.apache.hadoop.conf.Configuration)>",
    "<com.tencent.angel.utils.UGITools: org.apache.hadoop.security.UserGroupInformation getCurrentUser(org.apache.hadoop.conf.Configuration)>",
    "<com.tencent.angel.ps.ParameterServer: void main(java.lang.String[])>",
    "<com.tencent.angel.client.AngelClient: void setInputDirectory()>",
    "<com.tencent.angel.data.inputformat.BalanceInputFormat: boolean isSplitable(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)>",
    "<com.tencent.angel.utils.HdfsUtil: org.apache.hadoop.fs.Path[] getInputPaths(org.apache.hadoop.mapreduce.JobContext)>",
    "<com.tencent.angel.utils.SerdeUtils: org.apache.hadoop.mapreduce.InputSplit deSerilizeNewSplit(com.tencent.angel.split.SplitInfo,org.apache.hadoop.conf.Configuration)>",
    "<com.tencent.angel.client.yarn.AngelYarnClient: org.apache.hadoop.yarn.api.records.ApplicationSubmissionContext createApplicationSubmissionContext(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.security.Credentials,org.apache.hadoop.yarn.api.records.ApplicationId)>",
    "<com.tencent.angel.master.yarn.util.AngelApps: void addToClasspathIfNotJar(org.apache.hadoop.fs.Path[],java.net.URI[],org.apache.hadoop.conf.Configuration,java.util.Map,java.lang.String)>",
    "<com.tencent.angel.client.yarn.AngelYarnClient: void startPSServer()>",
    "<com.tencent.angel.master.data.DataSpliter: java.util.List generateSplitsUseNewAPI(org.apache.hadoop.conf.Configuration,int)>",
    "<com.tencent.angel.psagent.matrix.transport.MatrixTransportClient: void <init>()>",
    "<com.tencent.angel.data.inputformat.BalanceInputFormat: java.util.List listStatus0(org.apache.hadoop.conf.Configuration)>",
    "<com.tencent.angel.client.AngelClient: void movePredictResult()>",
    "<com.tencent.angel.master.AngelKubernetesApplicationMaster: void writeAppState()>",
    "<com.tencent.angel.ps.io.save.SnapshotDumper: org.apache.hadoop.fs.Path genTmpCheckpointPath(org.apache.hadoop.fs.Path)>",
    "<com.tencent.angel.master.matrix.committer.AMModelSaver: void combine(com.tencent.angel.model.ModelSaveContext,com.tencent.angel.model.ModelSaveResult)>",
    "<com.tencent.angel.split.SplitClassification: void deserialize(java.io.DataInputStream)>",
    "<com.tencent.angel.utils.HdfsUtil: java.util.List listStatus(org.apache.hadoop.mapreduce.JobContext)>",
    "<com.tencent.angel.utils.SerdeUtils: org.apache.hadoop.mapreduce.InputSplit deSerilizeNewSplit(java.lang.String,byte[],org.apache.hadoop.conf.Configuration)>",
    "<com.tencent.angel.master.yarn.util.ContainerContextUtils: org.apache.hadoop.yarn.api.records.ContainerLaunchContext createCommonContainerLaunchContext(com.tencent.angel.master.MasterService,java.util.Map,org.apache.hadoop.conf.Configuration,org.apache.hadoop.yarn.api.records.ApplicationId,org.apache.hadoop.security.Credentials)>",
    "<com.tencent.angel.master.matrix.committer.AMModelSaver: void clean(com.tencent.angel.model.ModelSaveContext)>",
    "<com.tencent.angel.utils.HdfsUtil: java.util.List listStatus(org.apache.hadoop.mapred.JobConf)>",
    "<com.tencent.angel.master.ps.ParameterServerManager: void <init>(com.tencent.angel.master.app.AMContext,java.util.Map)>",
    "<com.tencent.angel.master.matrix.committer.AMModelSaver: com.tencent.angel.master.matrix.committer.SaveResult getLoadPath(int)>",
    "<com.tencent.angel.master.AngelApplicationMaster: void clear()>",
    "<com.tencent.angel.ps.io.save.SnapshotDumper: void <init>(com.tencent.angel.ps.PSContext)>",
    "<com.tencent.angel.utils.SerdeUtils: com.tencent.angel.split.SplitInfo serilizeSplit(org.apache.hadoop.mapreduce.InputSplit,org.apache.hadoop.conf.Configuration)>",
    "<com.tencent.angel.client.AngelClient: com.tencent.angel.protobuf.generated.ClientMasterServiceProtos$GetJobReportResponse tryGetResponseFromFile(boolean)>",
    "<com.tencent.angel.master.AngelApplicationMaster: void cleanTmpOutputDir()>",
    "<com.tencent.angel.master.AngelApplicationMaster: void main(java.lang.String[])>",
    "<com.tencent.angel.utils.AngelRunJar: void setKerberos(org.apache.hadoop.conf.Configuration)>",
    "<com.tencent.angel.ml.matrix.MatrixContext: boolean matrixPathExist(java.lang.String,java.lang.String,org.apache.hadoop.conf.Configuration)>",
    "<com.tencent.angel.master.metrics.DistributeLog: void init()>",
    "<com.tencent.angel.psagent.matrix.transport.adapter.UserRequestAdapter: boolean useNewSplit(int,int,com.tencent.angel.ml.math2.vector.Vector)>",
    "<com.tencent.angel.master.AngelKubernetesApplicationMaster: void cleanTmpOutputDir()>",
    "<com.tencent.angel.client.yarn.ClientDistributedCacheManager: boolean isPublic(org.apache.hadoop.conf.Configuration,java.net.URI,java.util.Map)>",
    "<com.tencent.angel.model.output.format.MatrixFormatImpl: void load(com.tencent.angel.ps.storage.matrix.ServerMatrix,com.tencent.angel.model.PSMatrixLoadContext,org.apache.hadoop.conf.Configuration)>",
    "<com.tencent.angel.ps.ParameterServer: void initialize()>",
    "<com.tencent.angel.master.yarn.util.AngelApps: void setAngelFrameworkClasspath(java.util.Map,org.apache.hadoop.conf.Configuration)>",
    "<com.tencent.angel.client.AngelClient: void save(com.tencent.angel.model.ModelSaveContext)>",
    "<com.tencent.angel.ps.io.load.SnapshotRecover: org.apache.hadoop.fs.Path getSnapshotPath(int)>",
    "<com.tencent.angel.utils.SerdeUtils: org.apache.hadoop.mapred.InputSplit deSerilizeOldSplit(java.lang.String,byte[],org.apache.hadoop.conf.Configuration)>",
    "<com.tencent.angel.plugin.AngelServiceLoader$: void startServiceIfNeed(java.lang.Object,org.apache.hadoop.conf.Configuration)>",
    "<com.tencent.angel.master.matrix.committer.AMModelSaver: void <init>(com.tencent.angel.master.app.AMContext)>",
    "<com.tencent.angel.psagent.task.TaskContext: void <init>(int)>",
    "<com.tencent.angel.utils.SerdeUtils: com.tencent.angel.split.SplitClassification deSerilizeSplitProtos(java.util.List,org.apache.hadoop.conf.Configuration)>",
    "<com.tencent.angel.client.yarn.AngelYarnClient: org.apache.hadoop.fs.Path copyRemoteFiles(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration,short)>",
    "<com.tencent.angel.master.slowcheck.SlowChecker: void <init>(com.tencent.angel.master.app.AMContext)>",
    "<com.tencent.angel.worker.Worker: void main(java.lang.String[])>",
    "<com.tencent.angel.ps.io.save.SnapshotDumper: void checkpoint(java.util.List,int,boolean,boolean)>",
    "<com.tencent.angel.utils.SerdeUtils: com.tencent.angel.split.SplitInfo serilizeSplit(org.apache.hadoop.mapred.InputSplit,org.apache.hadoop.conf.Configuration)>",
    "<com.tencent.angel.worker.storage.DataBlockManager: void init()>",
    "<com.tencent.angel.master.AngelKubernetesApplicationMaster: void initAndStart()>"
  ]
}