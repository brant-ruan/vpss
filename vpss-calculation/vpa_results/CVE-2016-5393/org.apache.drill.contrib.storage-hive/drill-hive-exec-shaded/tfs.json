{
  "1.13.0": [
    "<hive.com.google.protobuf.UnknownFieldSet$Parser: hive.com.google.protobuf.UnknownFieldSet parsePartialFrom(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.fasterxml.jackson.databind.util.TokenBuffer$Parser: java.lang.String nextFieldName()>",
    "<hive.com.fasterxml.jackson.databind.ObjectMapper: hive.com.fasterxml.jackson.databind.JsonNode valueToTree(java.lang.Object)>",
    "<hive.com.google.protobuf.DescriptorProtos$FileDescriptorSet: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.org.apache.parquet.format.PageHeader: int hashCode()>",
    "<hive.com.fasterxml.jackson.databind.ObjectReader: java.lang.Object treeToValue(hive.com.fasterxml.jackson.core.TreeNode,java.lang.Class)>",
    "<hive.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void serialize(java.lang.Object,hive.com.fasterxml.jackson.core.JsonGenerator,hive.com.fasterxml.jackson.databind.SerializerProvider)>",
    "<hive.com.fasterxml.jackson.databind.deser.std.StdValueInstantiator: hive.com.fasterxml.jackson.databind.JsonMappingException wrapAsJsonMappingException(hive.com.fasterxml.jackson.databind.DeserializationContext,java.lang.Throwable)>",
    "<hive.com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Object createInstance(java.lang.Class,boolean)>",
    "<hive.org.apache.parquet.format.ColumnChunk: int hashCode()>",
    "<hive.com.google.common.collect.SingletonImmutableList: java.lang.String toString()>",
    "<hive.com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.google.common.collect.TreeMultiset: hive.com.google.common.collect.TreeMultiset$AvlNode firstNode()>",
    "<hive.com.google.common.collect.GeneralRange: boolean tooLow(java.lang.Object)>",
    "<hive.com.google.protobuf.DescriptorProtos$FieldDescriptorProto: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.org.apache.parquet.example.data.simple.SimpleGroup: java.lang.String toString(java.lang.String)>",
    "<hive.com.google.protobuf.DescriptorProtos$MethodOptions: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.google.common.base.Functions$ToStringFunction: java.lang.String apply(java.lang.Object)>",
    "<hive.com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class findClass(java.lang.String)>",
    "<hive.org.apache.parquet.format.DataPageHeader: int compareTo(hive.org.apache.parquet.format.DataPageHeader)>",
    "<hive.org.apache.parquet.format.FileMetaData: int compareTo(hive.org.apache.parquet.format.FileMetaData)>",
    "<hive.com.fasterxml.jackson.databind.ser.std.ToStringSerializer: void serialize(java.lang.Object,hive.com.fasterxml.jackson.core.JsonGenerator,hive.com.fasterxml.jackson.databind.SerializerProvider)>",
    "<hive.org.apache.parquet.format.DataPageHeader: int hashCode()>",
    "<hive.org.apache.parquet.hadoop.metadata.ParquetMetadata: void <clinit>()>",
    "<hive.com.fasterxml.jackson.databind.ser.std.StdKeySerializer: void serialize(java.lang.Object,hive.com.fasterxml.jackson.core.JsonGenerator,hive.com.fasterxml.jackson.databind.SerializerProvider)>",
    "<hive.com.fasterxml.jackson.databind.util.EnumResolver: hive.com.fasterxml.jackson.databind.util.EnumResolver constructUsingMethod(java.lang.Class,java.lang.reflect.Method)>",
    "<hive.org.apache.parquet.format.KeyValue: int hashCode()>",
    "<hive.com.fasterxml.jackson.databind.deser.SettableBeanProperty: void _throwAsIOE(hive.com.fasterxml.jackson.core.JsonParser,java.lang.Exception,java.lang.Object)>",
    "<hive.com.google.protobuf.DescriptorProtos$FileDescriptorProto: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator: java.lang.Object generateId(java.lang.Object)>",
    "<hive.org.apache.parquet.format.Statistics: int hashCode()>",
    "<hive.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(hive.com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>",
    "<hive.com.google.common.collect.SortedLists: int binarySearch(java.util.List,java.lang.Object,java.util.Comparator,hive.com.google.common.collect.SortedLists$KeyPresentBehavior,hive.com.google.common.collect.SortedLists$KeyAbsentBehavior)>",
    "<hive.com.fasterxml.jackson.databind.ser.std.ToStringSerializer: boolean isEmpty(hive.com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>",
    "<hive.com.google.common.collect.TreeMultiset$AvlNode: int count(java.util.Comparator,java.lang.Object)>",
    "<hive.org.apache.parquet.format.ColumnMetaData: int hashCode()>",
    "<hive.com.google.common.collect.TreeMultiset$AvlNode: hive.com.google.common.collect.TreeMultiset$AvlNode add(java.util.Comparator,java.lang.Object,int,int[])>",
    "<hive.com.google.common.collect.UsingToStringOrdering: int compare(java.lang.Object,java.lang.Object)>",
    "<hive.com.fasterxml.jackson.databind.deser.impl.InnerClassProperty: void deserializeAndSet(hive.com.fasterxml.jackson.core.JsonParser,hive.com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>",
    "<hive.com.google.protobuf.DescriptorProtos$FileOptions: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object treeToValue(hive.com.fasterxml.jackson.core.TreeNode,java.lang.Class)>",
    "<hive.com.fasterxml.jackson.databind.util.TokenBuffer$Parser: java.lang.String getText()>",
    "<hive.com.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,hive.com.fasterxml.jackson.core.JsonGenerator,hive.com.fasterxml.jackson.databind.SerializerProvider)>",
    "<hive.com.fasterxml.jackson.databind.deser.std.StringDeserializer: java.lang.String deserialize(hive.com.fasterxml.jackson.core.JsonParser,hive.com.fasterxml.jackson.databind.DeserializationContext)>",
    "<hive.com.google.common.collect.GeneralRange: void <init>(java.util.Comparator,boolean,java.lang.Object,hive.com.google.common.collect.BoundType,boolean,java.lang.Object,hive.com.google.common.collect.BoundType)>",
    "<hive.com.fasterxml.jackson.databind.introspect.BasicBeanDescription: java.lang.Object instantiateBean(boolean)>",
    "<hive.com.google.protobuf.DescriptorProtos$EnumValueOptions: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)>",
    "<hive.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void _serializeNull(hive.com.fasterxml.jackson.core.JsonGenerator)>",
    "<hive.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default: void serialize(java.lang.Object,hive.com.fasterxml.jackson.core.JsonGenerator,hive.com.fasterxml.jackson.databind.SerializerProvider)>",
    "<hive.com.google.protobuf.DescriptorProtos$UninterpretedOption: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.org.apache.parquet.format.PageEncodingStats: int compareTo(hive.org.apache.parquet.format.PageEncodingStats)>",
    "<hive.com.google.common.collect.ImmutableSortedSet: int unsafeCompare(java.util.Comparator,java.lang.Object,java.lang.Object)>",
    "<hive.com.google.protobuf.DynamicMessage$1: hive.com.google.protobuf.DynamicMessage parsePartialFrom(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.org.apache.parquet.format.ColumnMetaData: int compareTo(hive.org.apache.parquet.format.ColumnMetaData)>",
    "<hive.com.google.common.collect.SortedLists$KeyPresentBehavior$2: int resultIndex(java.util.Comparator,java.lang.Object,java.util.List,int)>",
    "<hive.com.fasterxml.jackson.databind.ser.BasicSerializerFactory: hive.com.fasterxml.jackson.databind.JsonSerializer findSerializerByLookup(hive.com.fasterxml.jackson.databind.JavaType,hive.com.fasterxml.jackson.databind.SerializationConfig,hive.com.fasterxml.jackson.databind.BeanDescription,boolean)>",
    "<hive.com.fasterxml.jackson.databind.DeserializationContext: hive.com.fasterxml.jackson.databind.JsonMappingException instantiationException(java.lang.Class,java.lang.Throwable)>",
    "<hive.com.google.protobuf.DescriptorProtos$ServiceOptions: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.org.apache.parquet.format.ColumnChunk: int compareTo(hive.org.apache.parquet.format.ColumnChunk)>",
    "<hive.org.apache.parquet.hadoop.metadata.ParquetMetadata: java.lang.String toJSON(hive.org.apache.parquet.hadoop.metadata.ParquetMetadata,shaded.parquet.org.codehaus.jackson.map.ObjectMapper)>",
    "<hive.com.google.common.collect.ImmutableSortedMap: void validateEntries(java.util.List,java.util.Comparator)>",
    "<hive.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.reflect.Constructor findConstructor(java.lang.Class,boolean)>",
    "<hive.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(hive.com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,hive.com.fasterxml.jackson.databind.JavaType)>",
    "<hive.org.apache.parquet.format.Statistics: int compareTo(hive.org.apache.parquet.format.Statistics)>",
    "<hive.com.google.common.collect.TreeMultiset$AvlNode: hive.com.google.common.collect.TreeMultiset$AvlNode setCount(java.util.Comparator,java.lang.Object,int,int[])>",
    "<hive.org.apache.parquet.hadoop.metadata.ParquetMetadata: hive.org.apache.parquet.hadoop.metadata.ParquetMetadata fromJSON(java.lang.String)>",
    "<hive.com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.org.apache.parquet.format.DataPageHeaderV2: int hashCode()>",
    "<hive.com.google.common.collect.TreeMultiset$AvlNode: hive.com.google.common.collect.TreeMultiset$AvlNode ceiling(java.util.Comparator,java.lang.Object)>",
    "<hive.com.fasterxml.jackson.databind.type.TypeParser: java.lang.Class findClass(java.lang.String,hive.com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer)>",
    "<hive.com.google.protobuf.DescriptorProtos$FieldOptions: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.fasterxml.jackson.databind.JsonMappingException: hive.com.fasterxml.jackson.databind.JsonMappingException fromUnexpectedIOE(java.io.IOException)>",
    "<hive.com.google.protobuf.DescriptorProtos$MethodDescriptorProto: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.org.apache.parquet.format.SchemaElement: int hashCode()>",
    "<hive.com.google.common.collect.TreeMultiset: int add(java.lang.Object,int)>",
    "<hive.com.google.common.collect.GeneralRange: boolean tooHigh(java.lang.Object)>",
    "<hive.com.google.common.collect.SortedLists$KeyPresentBehavior$3: int resultIndex(java.util.Comparator,java.lang.Object,java.util.List,int)>",
    "<hive.org.apache.parquet.format.DictionaryPageHeader: int compareTo(hive.org.apache.parquet.format.DictionaryPageHeader)>",
    "<hive.com.fasterxml.jackson.databind.deser.SettableAnyProperty$AnySetterReferring: void handleResolvedForwardReference(java.lang.Object,java.lang.Object)>",
    "<hive.com.fasterxml.jackson.databind.util.ClassUtil: void throwAsIAE(java.lang.Throwable)>",
    "<hive.org.apache.parquet.format.SchemaElement: int compareTo(hive.org.apache.parquet.format.SchemaElement)>",
    "<hive.org.apache.parquet.format.DataPageHeaderV2: int compareTo(hive.org.apache.parquet.format.DataPageHeaderV2)>",
    "<hive.com.google.protobuf.DescriptorProtos$ServiceDescriptorProto: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver: hive.com.fasterxml.jackson.databind.JavaType _typeFromId(java.lang.String,hive.com.fasterxml.jackson.databind.DatabindContext)>",
    "<hive.com.fasterxml.jackson.databind.util.TokenBuffer$Parser: hive.com.fasterxml.jackson.core.JsonToken nextToken()>",
    "<hive.com.google.protobuf.AbstractParser: hive.com.google.protobuf.MessageLite parsePartialDelimitedFrom(java.io.InputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: java.lang.Object deserializeKey(java.lang.String,hive.com.fasterxml.jackson.databind.DeserializationContext)>",
    "<hive.com.google.protobuf.DescriptorProtos$DescriptorProto: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(hive.com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,hive.com.fasterxml.jackson.databind.JavaType,hive.com.fasterxml.jackson.databind.JsonSerializer)>",
    "<hive.com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException: java.lang.String getMessage()>",
    "<hive.com.google.common.collect.ImmutableSortedSet: int sortAndUnique(java.util.Comparator,int,java.lang.Object[])>",
    "<hive.org.apache.parquet.format.RowGroup: int compareTo(hive.org.apache.parquet.format.RowGroup)>",
    "<hive.com.google.common.collect.ComparatorOrdering: int compare(java.lang.Object,java.lang.Object)>",
    "<hive.com.google.common.collect.TreeMultiset$AvlNode: hive.com.google.common.collect.TreeMultiset$AvlNode remove(java.util.Comparator,java.lang.Object,int,int[])>",
    "<hive.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$DelegatingKD: java.lang.Object deserializeKey(java.lang.String,hive.com.fasterxml.jackson.databind.DeserializationContext)>",
    "<hive.com.fasterxml.jackson.databind.MappingIterator: java.lang.Object next()>",
    "<hive.com.google.protobuf.DescriptorProtos$SourceCodeInfo: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.google.protobuf.DescriptorProtos$MessageOptions: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.fasterxml.jackson.databind.deser.SettableBeanProperty: java.io.IOException _throwAsIOE(hive.com.fasterxml.jackson.core.JsonParser,java.lang.Exception)>",
    "<hive.com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _convert(java.lang.Object,hive.com.fasterxml.jackson.databind.JavaType)>",
    "<hive.com.fasterxml.jackson.databind.ext.DOMSerializer: void <init>()>",
    "<hive.com.fasterxml.jackson.databind.deser.SettableAnyProperty: void _throwAsIOE(java.lang.Exception,java.lang.String,java.lang.Object)>",
    "<hive.com.google.common.collect.TreeMultiset: long aggregateBelowRange(hive.com.google.common.collect.TreeMultiset$Aggregate,hive.com.google.common.collect.TreeMultiset$AvlNode)>",
    "<hive.com.google.common.collect.ImmutableSortedMap$1: int compare(java.util.Map$Entry,java.util.Map$Entry)>",
    "<hive.com.fasterxml.jackson.databind.JsonMappingException: hive.com.fasterxml.jackson.databind.JsonMappingException wrapWithPath(java.lang.Throwable,hive.com.fasterxml.jackson.databind.JsonMappingException$Reference)>",
    "<hive.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Class findClass(java.lang.String)>",
    "<hive.org.apache.parquet.format.RowGroup: int hashCode()>",
    "<hive.com.google.protobuf.DescriptorProtos$EnumOptions: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializePolymorphic(hive.com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,hive.com.fasterxml.jackson.databind.JavaType,hive.com.fasterxml.jackson.databind.JsonSerializer,hive.com.fasterxml.jackson.databind.jsontype.TypeSerializer)>",
    "<hive.com.google.common.collect.TreeMultimap: java.util.Collection createCollection(java.lang.Object)>",
    "<hive.com.google.common.util.concurrent.Futures: java.lang.Object newFromConstructor(java.lang.reflect.Constructor,java.lang.Throwable)>",
    "<hive.com.google.protobuf.DescriptorProtos$EnumDescriptorProto: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.fasterxml.jackson.core.JsonLocation: java.lang.String toString()>",
    "<hive.com.google.common.collect.SingletonImmutableSet: java.lang.String toString()>",
    "<hive.org.apache.parquet.format.FileMetaData: int hashCode()>",
    "<hive.com.google.common.collect.TreeMultiset: long aggregateAboveRange(hive.com.google.common.collect.TreeMultiset$Aggregate,hive.com.google.common.collect.TreeMultiset$AvlNode)>",
    "<hive.com.fasterxml.jackson.databind.node.POJONode: java.lang.String asText()>",
    "<hive.org.apache.parquet.format.PageHeader: int compareTo(hive.org.apache.parquet.format.PageHeader)>",
    "<hive.com.fasterxml.jackson.databind.ext.DOMDeserializer: org.w3c.dom.Document parse(java.lang.String)>"
  ],
  "1.16.0": [
    "<hive.com.google.protobuf.UnknownFieldSet$Parser: hive.com.google.protobuf.UnknownFieldSet parsePartialFrom(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.fasterxml.jackson.core.json.UTF8DataInputJsonParser: byte[] getBinaryValue(hive.com.fasterxml.jackson.core.Base64Variant)>",
    "<hive.org.apache.avro.io.JsonDecoder: hive.org.apache.avro.io.parsing.Symbol doAction(hive.org.apache.avro.io.parsing.Symbol,hive.org.apache.avro.io.parsing.Symbol)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.util.ClassUtil: java.lang.Class findClass(java.lang.String)>",
    "<hive.shaded.parquet.org.apache.thrift.transport.TFileTransport: java.io.InputStream createInputStream()>",
    "<hive.com.fasterxml.jackson.databind.ObjectMapper: hive.com.fasterxml.jackson.databind.JsonNode valueToTree(java.lang.Object)>",
    "<hive.com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>",
    "<hive.com.google.protobuf.SmallSortedMap$Entry: boolean equals(java.lang.Object,java.lang.Object)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.deser.std.StdDeserializer: java.util.Date _parseDate(hive.shaded.parquet.org.codehaus.jackson.JsonParser,hive.shaded.parquet.org.codehaus.jackson.map.DeserializationContext)>",
    "<hive.com.google.common.collect.ImmutableListMultimap: void readObject(java.io.ObjectInputStream)>",
    "<hive.com.google.common.collect.ImmutableSetMultimap: void readObject(java.io.ObjectInputStream)>",
    "<hive.com.google.protobuf.DescriptorProtos$FileDescriptorSet: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.org.apache.parquet.format.PageHeader: int hashCode()>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ObjectMapper: hive.shaded.parquet.org.codehaus.jackson.JsonNode valueToTree(java.lang.Object)>",
    "<hive.org.apache.avro.io.JsonDecoder: int readInt()>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.deser.StdDeserializerProvider: hive.shaded.parquet.org.codehaus.jackson.map.JsonDeserializer _createAndCache2(hive.shaded.parquet.org.codehaus.jackson.map.DeserializationConfig,hive.shaded.parquet.org.codehaus.jackson.type.JavaType,hive.shaded.parquet.org.codehaus.jackson.map.BeanProperty)>",
    "<hive.com.fasterxml.jackson.databind.util.StdDateFormat: java.util.Date parseAsISO8601(java.lang.String,java.text.ParsePosition)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ext.JodaSerializers$JodaSerializer: java.lang.String printLocalDateTime(org.joda.time.ReadablePartial)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ext.JodaDeserializers$JodaDeserializer: org.joda.time.DateTime parseLocal(hive.shaded.parquet.org.codehaus.jackson.JsonParser)>",
    "<hive.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.Object deserialize(hive.com.fasterxml.jackson.core.JsonParser,hive.com.fasterxml.jackson.databind.DeserializationContext)>",
    "<hive.org.apache.avro.io.JsonDecoder: void skipString()>",
    "<hive.com.google.common.collect.SingletonImmutableBiMap: java.lang.Object get(java.lang.Object)>",
    "<hive.com.fasterxml.jackson.databind.node.TextNode: byte[] getBinaryValue(hive.com.fasterxml.jackson.core.Base64Variant)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ext.JodaSerializers$JodaSerializer: java.lang.String printLocalDate(org.joda.time.ReadablePartial)>",
    "<hive.org.apache.avro.Protocol: hive.org.apache.avro.Protocol parse(java.io.File)>",
    "<hive.com.google.common.collect.Sets: int hashCodeImpl(java.util.Set)>",
    "<hive.org.apache.avro.io.JsonDecoder: int readIndex()>",
    "<hive.com.fasterxml.jackson.databind.util.EnumResolver: hive.com.fasterxml.jackson.databind.util.EnumResolver constructUsingMethod(java.lang.Class,hive.com.fasterxml.jackson.databind.introspect.AnnotatedMember,hive.com.fasterxml.jackson.databind.AnnotationIntrospector)>",
    "<hive.com.google.protobuf.SmallSortedMap$Entry: int compareTo(hive.com.google.protobuf.SmallSortedMap$Entry)>",
    "<hive.com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Object createInstance(java.lang.Class,boolean)>",
    "<hive.org.apache.parquet.format.ColumnChunk: int hashCode()>",
    "<hive.com.fasterxml.jackson.databind.deser.BeanDeserializerFactory: hive.com.fasterxml.jackson.databind.JsonDeserializer buildBuilderBasedDeserializer(hive.com.fasterxml.jackson.databind.DeserializationContext,hive.com.fasterxml.jackson.databind.JavaType,hive.com.fasterxml.jackson.databind.BeanDescription)>",
    "<hive.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] getBinaryValue(hive.com.fasterxml.jackson.core.Base64Variant)>",
    "<hive.com.google.common.collect.RegularImmutableBiMap: void <init>(java.util.Collection)>",
    "<hive.com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.google.common.collect.SingletonImmutableList: java.lang.String toString()>",
    "<hive.com.fasterxml.jackson.core.base.ParserMinimalBase: void _decodeBase64(java.lang.String,hive.com.fasterxml.jackson.core.util.ByteArrayBuilder,hive.com.fasterxml.jackson.core.Base64Variant)>",
    "<hive.org.apache.avro.Schema$Parser: hive.org.apache.avro.Schema parse(java.io.File)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.MappingIterator: boolean hasNext()>",
    "<hive.shaded.parquet.org.apache.thrift.transport.TFileTransport: void seekToChunk(int)>",
    "<hive.org.apache.avro.generic.GenericData$Array: java.lang.String toString()>",
    "<hive.org.apache.avro.io.JsonDecoder: long skipArray()>",
    "<hive.com.google.common.collect.TreeMultiset: hive.com.google.common.collect.TreeMultiset$AvlNode firstNode()>",
    "<hive.com.google.common.collect.GeneralRange: boolean tooLow(java.lang.Object)>",
    "<hive.com.google.common.collect.Cut$AboveValue: int hashCode()>",
    "<hive.com.google.protobuf.DescriptorProtos$FieldDescriptorProto: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.org.apache.parquet.example.data.simple.SimpleGroup: java.lang.String toString(java.lang.String)>",
    "<hive.com.fasterxml.jackson.databind.util.ISO8601Utils: java.util.Date parse(java.lang.String,java.text.ParsePosition)>",
    "<hive.com.fasterxml.jackson.databind.SerializerProvider: hive.com.fasterxml.jackson.databind.JsonSerializer _createAndCacheUntypedSerializer(java.lang.Class)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ext.JodaDeserializers$PeriodDeserializer: org.joda.time.ReadablePeriod deserialize(hive.shaded.parquet.org.codehaus.jackson.JsonParser,hive.shaded.parquet.org.codehaus.jackson.map.DeserializationContext)>",
    "<hive.com.google.protobuf.DescriptorProtos$MethodOptions: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.google.common.base.Functions$ToStringFunction: java.lang.String apply(java.lang.Object)>",
    "<hive.com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class findClass(java.lang.String)>",
    "<hive.org.apache.parquet.format.DataPageHeader: int compareTo(hive.org.apache.parquet.format.DataPageHeader)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ser.BasicSerializerFactory: hive.shaded.parquet.org.codehaus.jackson.type.JavaType modifySecondaryTypesByAnnotation(hive.shaded.parquet.org.codehaus.jackson.map.SerializationConfig,hive.shaded.parquet.org.codehaus.jackson.map.introspect.Annotated,hive.shaded.parquet.org.codehaus.jackson.type.JavaType)>",
    "<hive.shaded.parquet.org.codehaus.jackson.impl.Utf8StreamParser: byte[] getBinaryValue(hive.shaded.parquet.org.codehaus.jackson.Base64Variant)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ser.BasicSerializerFactory: hive.shaded.parquet.org.codehaus.jackson.type.JavaType modifyTypeByAnnotation(hive.shaded.parquet.org.codehaus.jackson.map.SerializationConfig,hive.shaded.parquet.org.codehaus.jackson.map.introspect.Annotated,hive.shaded.parquet.org.codehaus.jackson.type.JavaType)>",
    "<hive.org.apache.parquet.format.FileMetaData: int compareTo(hive.org.apache.parquet.format.FileMetaData)>",
    "<hive.com.fasterxml.jackson.databind.deser.DeserializerCache: hive.com.fasterxml.jackson.databind.JsonDeserializer _createAndCache2(hive.com.fasterxml.jackson.databind.DeserializationContext,hive.com.fasterxml.jackson.databind.deser.DeserializerFactory,hive.com.fasterxml.jackson.databind.JavaType)>",
    "<hive.org.apache.parquet.format.DataPageHeader: int hashCode()>",
    "<hive.com.google.common.collect.ImmutableSet: hive.com.google.common.collect.ImmutableSet construct(int,java.lang.Object[])>",
    "<hive.com.google.common.collect.Range: int compareOrThrow(java.lang.Comparable,java.lang.Comparable)>",
    "<hive.org.apache.avro.generic.GenericData$EnumSymbol: boolean equals(java.lang.Object)>",
    "<hive.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: byte[] getBinaryValue(hive.com.fasterxml.jackson.core.Base64Variant)>",
    "<hive.org.apache.parquet.format.KeyValue: int hashCode()>",
    "<hive.org.apache.avro.Schema$Parser: hive.org.apache.avro.Schema parse(org.codehaus.jackson.JsonParser)>",
    "<hive.com.google.common.collect.LinkedHashMultimap$ValueSet: boolean contains(java.lang.Object)>",
    "<hive.com.google.common.collect.Iterators: boolean contains(java.util.Iterator,java.lang.Object)>",
    "<hive.shaded.parquet.org.apache.thrift.transport.TSaslTransport: void sendAndThrowMessage(hive.shaded.parquet.org.apache.thrift.transport.TSaslTransport$NegotiationStatus,java.lang.String)>",
    "<hive.com.google.protobuf.DescriptorProtos$FileDescriptorProto: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator: java.lang.Object generateId(java.lang.Object)>",
    "<hive.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: boolean includeFilterSuppressNulls(java.lang.Object)>",
    "<hive.shaded.parquet.org.apache.thrift.transport.TNonblockingServerSocket: void close()>",
    "<hive.org.apache.parquet.format.Statistics: int hashCode()>",
    "<hive.com.google.common.collect.SortedLists: int binarySearch(java.util.List,java.lang.Object,java.util.Comparator,hive.com.google.common.collect.SortedLists$KeyPresentBehavior,hive.com.google.common.collect.SortedLists$KeyAbsentBehavior)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.MappingIterator: java.lang.Object next()>",
    "<hive.com.google.common.collect.SingletonImmutableList: int indexOf(java.lang.Object)>",
    "<hive.com.google.common.collect.TreeMultiset$AvlNode: int count(java.util.Comparator,java.lang.Object)>",
    "<hive.org.apache.avro.Schema: org.codehaus.jackson.JsonNode parseJson(java.lang.String)>",
    "<hive.org.apache.parquet.format.ColumnMetaData: int hashCode()>",
    "<hive.com.google.common.collect.TreeMultiset$AvlNode: hive.com.google.common.collect.TreeMultiset$AvlNode add(java.util.Comparator,java.lang.Object,int,int[])>",
    "<hive.com.google.protobuf.AbstractMessage: int hashFields(int,java.util.Map)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.deser.SettableBeanProperty$InnerClassProperty: void deserializeAndSet(hive.shaded.parquet.org.codehaus.jackson.JsonParser,hive.shaded.parquet.org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>",
    "<hive.com.fasterxml.jackson.databind.deser.impl.InnerClassProperty: void deserializeAndSet(hive.com.fasterxml.jackson.core.JsonParser,hive.com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>",
    "<hive.com.google.protobuf.DescriptorProtos$FileOptions: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Object throwAsMappingException(hive.com.fasterxml.jackson.databind.DeserializationContext,java.io.IOException)>",
    "<hive.com.google.common.collect.SingletonImmutableBiMap: boolean containsValue(java.lang.Object)>",
    "<hive.com.google.common.collect.UsingToStringOrdering: int compare(java.lang.Object,java.lang.Object)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ext.DOMSerializer: void <init>()>",
    "<hive.com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object treeToValue(hive.com.fasterxml.jackson.core.TreeNode,java.lang.Class)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ext.JodaDeserializers$DateTimeDeserializer: org.joda.time.ReadableInstant deserialize(hive.shaded.parquet.org.codehaus.jackson.JsonParser,hive.shaded.parquet.org.codehaus.jackson.map.DeserializationContext)>",
    "<hive.com.google.common.collect.Multisets$AbstractEntry: int hashCode()>",
    "<hive.com.google.common.collect.RegularImmutableMap: void <init>(java.util.Map$Entry[])>",
    "<hive.org.apache.avro.Schema$RecordSchema: void fieldsToJson(hive.org.apache.avro.Schema$Names,org.codehaus.jackson.JsonGenerator)>",
    "<hive.com.google.common.collect.ReverseNaturalOrdering: int compare(java.lang.Comparable,java.lang.Comparable)>",
    "<hive.org.apache.avro.Protocol: hive.org.apache.avro.Protocol parse(java.io.InputStream)>",
    "<hive.com.google.common.base.Present: int hashCode()>",
    "<hive.com.google.common.base.Equivalence$Equals: int doHash(java.lang.Object)>",
    "<hive.com.google.common.collect.GeneralRange: void <init>(java.util.Comparator,boolean,java.lang.Object,hive.com.google.common.collect.BoundType,boolean,java.lang.Object,hive.com.google.common.collect.BoundType)>",
    "<hive.com.google.protobuf.SmallSortedMap$Entry: int hashCode()>",
    "<hive.org.apache.avro.generic.GenericData: java.lang.Object deepCopy(hive.org.apache.avro.Schema,java.lang.Object)>",
    "<hive.com.google.common.collect.HashBiMap: int hash(java.lang.Object)>",
    "<hive.com.fasterxml.jackson.databind.introspect.BasicBeanDescription: java.lang.Object instantiateBean(boolean)>",
    "<hive.com.google.protobuf.DescriptorProtos$EnumValueOptions: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)>",
    "<hive.com.google.common.collect.NaturalOrdering: int compare(java.lang.Comparable,java.lang.Comparable)>",
    "<hive.org.apache.avro.io.JsonDecoder: void readNull()>",
    "<hive.org.apache.avro.generic.GenericData: int compare(java.lang.Object,java.lang.Object,hive.org.apache.avro.Schema,boolean)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.deser.BasicDeserializerFactory: hive.shaded.parquet.org.codehaus.jackson.type.JavaType modifyTypeByAnnotation(hive.shaded.parquet.org.codehaus.jackson.map.DeserializationConfig,hive.shaded.parquet.org.codehaus.jackson.map.introspect.Annotated,hive.shaded.parquet.org.codehaus.jackson.type.JavaType,java.lang.String)>",
    "<hive.shaded.parquet.org.apache.thrift.TBaseHelper: int compareTo(java.lang.Comparable,java.lang.Comparable)>",
    "<hive.com.google.common.collect.SingletonImmutableList: boolean contains(java.lang.Object)>",
    "<hive.org.apache.avro.io.JsonDecoder: double readDouble()>",
    "<hive.com.google.protobuf.DescriptorProtos$UninterpretedOption: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.fasterxml.jackson.databind.ser.BeanSerializerFactory: hive.com.fasterxml.jackson.databind.JsonSerializer constructBeanSerializer(hive.com.fasterxml.jackson.databind.SerializerProvider,hive.com.fasterxml.jackson.databind.BeanDescription)>",
    "<hive.org.apache.avro.generic.GenericData: int hashCode(java.lang.Object,hive.org.apache.avro.Schema)>",
    "<hive.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.util.Date _parseDate(java.lang.String,hive.com.fasterxml.jackson.databind.DeserializationContext)>",
    "<hive.com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.org.apache.parquet.format.PageEncodingStats: int compareTo(hive.org.apache.parquet.format.PageEncodingStats)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ext.DOMDeserializer: org.w3c.dom.Document parse(java.lang.String)>",
    "<hive.com.google.common.collect.ImmutableSortedSet: int unsafeCompare(java.util.Comparator,java.lang.Object,java.lang.Object)>",
    "<hive.com.google.protobuf.DynamicMessage$1: hive.com.google.protobuf.DynamicMessage parsePartialFrom(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.google.common.collect.LinkedHashMultimap$ValueSet$1: void remove()>",
    "<hive.shaded.parquet.org.apache.thrift.transport.TFileTransport: int getNumChunks()>",
    "<hive.org.apache.parquet.format.ColumnMetaData: int compareTo(hive.org.apache.parquet.format.ColumnMetaData)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.deser.SettableAnyProperty: void _throwAsIOE(java.lang.Exception,java.lang.String,java.lang.Object)>",
    "<hive.com.google.common.collect.SortedLists$KeyPresentBehavior$2: int resultIndex(java.util.Comparator,java.lang.Object,java.util.List,int)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.deser.SettableBeanProperty: java.io.IOException _throwAsIOE(java.lang.Exception)>",
    "<hive.com.google.common.collect.AbstractMapEntry: int hashCode()>",
    "<hive.com.google.common.collect.RegularImmutableList: boolean equals(java.lang.Object)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ext.JodaDeserializers$LocalDateTimeDeserializer: org.joda.time.LocalDateTime deserialize(hive.shaded.parquet.org.codehaus.jackson.JsonParser,hive.shaded.parquet.org.codehaus.jackson.map.DeserializationContext)>",
    "<hive.org.apache.avro.Schema: void <clinit>()>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ext.JodaDeserializers$LocalDateDeserializer: org.joda.time.LocalDate deserialize(hive.shaded.parquet.org.codehaus.jackson.JsonParser,hive.shaded.parquet.org.codehaus.jackson.map.DeserializationContext)>",
    "<hive.org.apache.avro.io.JsonDecoder: boolean readBoolean()>",
    "<hive.com.google.common.collect.Cut$BelowValue: int hashCode()>",
    "<hive.com.google.common.collect.RegularContiguousSet: hive.com.google.common.collect.ContiguousSet intersection(hive.com.google.common.collect.ContiguousSet)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.deser.StdDeserializationContext: hive.shaded.parquet.org.codehaus.jackson.map.JsonMappingException instantiationException(java.lang.Class,java.lang.Throwable)>",
    "<hive.com.google.common.collect.SingletonImmutableBiMap: boolean containsKey(java.lang.Object)>",
    "<hive.org.apache.avro.io.JsonDecoder: long skipMap()>",
    "<hive.com.google.protobuf.DescriptorProtos$ServiceOptions: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.google.common.collect.LinkedHashMultimap$ValueSet: boolean add(java.lang.Object)>",
    "<hive.shaded.parquet.org.apache.thrift.transport.TFileTransport: int tailRead(java.io.InputStream,byte[],int,int,hive.shaded.parquet.org.apache.thrift.transport.TFileTransport$tailPolicy)>",
    "<hive.com.google.common.collect.ImmutableSet: boolean equals(java.lang.Object)>",
    "<hive.com.google.common.collect.ImmutableSortedMap: void validateEntries(java.util.List,java.util.Comparator)>",
    "<hive.org.apache.parquet.format.ColumnChunk: int compareTo(hive.org.apache.parquet.format.ColumnChunk)>",
    "<hive.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.reflect.Constructor findConstructor(java.lang.Class,boolean)>",
    "<hive.com.fasterxml.jackson.databind.deser.BeanDeserializerFactory: hive.com.fasterxml.jackson.databind.JsonDeserializer buildBeanDeserializer(hive.com.fasterxml.jackson.databind.DeserializationContext,hive.com.fasterxml.jackson.databind.JavaType,hive.com.fasterxml.jackson.databind.BeanDescription)>",
    "<hive.org.apache.parquet.format.Statistics: int compareTo(hive.org.apache.parquet.format.Statistics)>",
    "<hive.com.google.common.collect.TreeMultiset$AvlNode: hive.com.google.common.collect.TreeMultiset$AvlNode setCount(java.util.Comparator,java.lang.Object,int,int[])>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.util.ClassUtil: java.lang.reflect.Constructor findConstructor(java.lang.Class,boolean)>",
    "<hive.org.apache.avro.JsonProperties: void writeProps(org.codehaus.jackson.JsonGenerator)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.util.ClassUtil: java.lang.Object createInstance(java.lang.Class,boolean)>",
    "<hive.com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.org.apache.avro.SchemaBuilder: org.codehaus.jackson.JsonNode toJsonNode(java.lang.Object)>",
    "<hive.org.apache.parquet.format.DataPageHeaderV2: int hashCode()>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.introspect.BasicBeanDescription: java.lang.Object instantiateBean(boolean)>",
    "<hive.com.google.common.collect.TreeMultiset$AvlNode: hive.com.google.common.collect.TreeMultiset$AvlNode ceiling(java.util.Comparator,java.lang.Object)>",
    "<hive.com.fasterxml.jackson.databind.type.TypeParser: java.lang.Class findClass(java.lang.String,hive.com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer)>",
    "<hive.org.apache.parquet.hadoop.codec.CodecConfig: hive.org.apache.parquet.hadoop.metadata.CompressionCodecName getHadoopCompressionCodec()>",
    "<hive.com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector: hive.com.fasterxml.jackson.databind.JavaType refineSerializationType(hive.com.fasterxml.jackson.databind.cfg.MapperConfig,hive.com.fasterxml.jackson.databind.introspect.Annotated,hive.com.fasterxml.jackson.databind.JavaType)>",
    "<hive.com.google.protobuf.DescriptorProtos$FieldOptions: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.fasterxml.jackson.databind.JsonMappingException: hive.com.fasterxml.jackson.databind.JsonMappingException fromUnexpectedIOE(java.io.IOException)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ser.BasicSerializerFactory: hive.shaded.parquet.org.codehaus.jackson.map.JsonSerializer findSerializerByLookup(hive.shaded.parquet.org.codehaus.jackson.type.JavaType,hive.shaded.parquet.org.codehaus.jackson.map.SerializationConfig,hive.shaded.parquet.org.codehaus.jackson.map.introspect.BasicBeanDescription,hive.shaded.parquet.org.codehaus.jackson.map.BeanProperty,boolean)>",
    "<hive.com.google.common.collect.SingletonImmutableSet: int hashCode()>",
    "<hive.com.google.protobuf.DescriptorProtos$MethodDescriptorProto: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.org.apache.parquet.format.SchemaElement: int hashCode()>",
    "<hive.org.apache.avro.io.JsonDecoder: void skipBytes()>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ser.StdSerializerProvider: hive.shaded.parquet.org.codehaus.jackson.map.JsonSerializer _createAndCacheUntypedSerializer(hive.shaded.parquet.org.codehaus.jackson.type.JavaType,hive.shaded.parquet.org.codehaus.jackson.map.BeanProperty)>",
    "<hive.com.google.common.collect.TreeMultiset: int add(java.lang.Object,int)>",
    "<hive.com.google.common.collect.GeneralRange: boolean tooHigh(java.lang.Object)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.jsontype.impl.ClassNameIdResolver: hive.shaded.parquet.org.codehaus.jackson.type.JavaType typeFromId(java.lang.String)>",
    "<hive.com.google.protobuf.SmallSortedMap: int binarySearchInArray(java.lang.Comparable)>",
    "<hive.com.google.common.collect.SortedLists$KeyPresentBehavior$3: int resultIndex(java.util.Comparator,java.lang.Object,java.util.List,int)>",
    "<hive.org.apache.avro.io.JsonDecoder: hive.org.apache.avro.io.JsonDecoder configure(java.lang.String)>",
    "<hive.org.apache.parquet.format.DictionaryPageHeader: int compareTo(hive.org.apache.parquet.format.DictionaryPageHeader)>",
    "<hive.com.fasterxml.jackson.databind.util.ClassUtil: void throwAsIAE(java.lang.Throwable)>",
    "<hive.org.apache.parquet.format.SchemaElement: int compareTo(hive.org.apache.parquet.format.SchemaElement)>",
    "<hive.org.apache.parquet.format.DataPageHeaderV2: int compareTo(hive.org.apache.parquet.format.DataPageHeaderV2)>",
    "<hive.com.google.protobuf.DescriptorProtos$ServiceDescriptorProto: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.google.common.collect.SingletonImmutableSet: boolean equals(java.lang.Object)>",
    "<hive.com.google.protobuf.AbstractParser: hive.com.google.protobuf.MessageLite parsePartialDelimitedFrom(java.io.InputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector: hive.com.fasterxml.jackson.databind.JavaType refineDeserializationType(hive.com.fasterxml.jackson.databind.cfg.MapperConfig,hive.com.fasterxml.jackson.databind.introspect.Annotated,hive.com.fasterxml.jackson.databind.JavaType)>",
    "<hive.com.google.common.collect.RegularImmutableMap: java.lang.Object get(java.lang.Object)>",
    "<hive.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: java.lang.Object deserializeKey(java.lang.String,hive.com.fasterxml.jackson.databind.DeserializationContext)>",
    "<hive.com.google.common.collect.RegularImmutableSet: boolean contains(java.lang.Object)>",
    "<hive.com.fasterxml.jackson.databind.SerializerProvider: hive.com.fasterxml.jackson.databind.JsonSerializer _createAndCacheUntypedSerializer(hive.com.fasterxml.jackson.databind.JavaType)>",
    "<hive.shaded.parquet.org.codehaus.jackson.impl.ReaderBasedParser: byte[] getBinaryValue(hive.shaded.parquet.org.codehaus.jackson.Base64Variant)>",
    "<hive.org.apache.avro.Schema$Parser: hive.org.apache.avro.Schema parse(java.io.InputStream)>",
    "<hive.com.google.protobuf.DescriptorProtos$DescriptorProto: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.google.common.collect.SingletonImmutableList: boolean equals(java.lang.Object)>",
    "<hive.com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException: java.lang.String getMessage()>",
    "<hive.com.fasterxml.jackson.databind.deser.SettableAnyProperty: void _throwAsIOE(java.lang.Exception,java.lang.Object,java.lang.Object)>",
    "<hive.org.apache.avro.io.JsonDecoder: java.util.List getVaueAsTree(org.codehaus.jackson.JsonParser)>",
    "<hive.com.google.common.collect.ImmutableSortedSet: int sortAndUnique(java.util.Comparator,int,java.lang.Object[])>",
    "<hive.org.apache.parquet.format.RowGroup: int compareTo(hive.org.apache.parquet.format.RowGroup)>",
    "<hive.org.apache.avro.io.JsonDecoder: hive.org.apache.avro.io.JsonDecoder configure(java.io.InputStream)>",
    "<hive.com.google.common.collect.ComparatorOrdering: int compare(java.lang.Object,java.lang.Object)>",
    "<hive.com.google.common.collect.TreeMultiset$AvlNode: hive.com.google.common.collect.TreeMultiset$AvlNode remove(java.util.Comparator,java.lang.Object,int,int[])>",
    "<hive.com.google.common.collect.ImmutableSortedAsList: int indexOf(java.lang.Object)>",
    "<hive.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$DelegatingKD: java.lang.Object deserializeKey(java.lang.String,hive.com.fasterxml.jackson.databind.DeserializationContext)>",
    "<hive.com.fasterxml.jackson.databind.MappingIterator: java.lang.Object next()>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ObjectMapper: java.lang.Object _convert(java.lang.Object,hive.shaded.parquet.org.codehaus.jackson.type.JavaType)>",
    "<hive.com.google.protobuf.DescriptorProtos$SourceCodeInfo: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.google.protobuf.DescriptorProtos$MessageOptions: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.google.common.collect.SingletonImmutableList: int hashCode()>",
    "<hive.com.fasterxml.jackson.databind.deser.SettableBeanProperty: java.io.IOException _throwAsIOE(hive.com.fasterxml.jackson.core.JsonParser,java.lang.Exception)>",
    "<hive.com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _convert(java.lang.Object,hive.com.fasterxml.jackson.databind.JavaType)>",
    "<hive.com.fasterxml.jackson.databind.ext.DOMSerializer: void <init>()>",
    "<hive.com.google.common.base.Present: boolean equals(java.lang.Object)>",
    "<hive.com.google.common.collect.ImmutableMapEntrySet: boolean contains(java.lang.Object)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.util.ClassUtil: void throwAsIAE(java.lang.Throwable)>",
    "<hive.com.google.common.collect.TreeMultiset: long aggregateBelowRange(hive.com.google.common.collect.TreeMultiset$Aggregate,hive.com.google.common.collect.TreeMultiset$AvlNode)>",
    "<hive.shaded.parquet.org.apache.thrift.transport.TFileTransport: void close()>",
    "<hive.com.google.protobuf.LiteralByteString: boolean equals(java.lang.Object)>",
    "<hive.com.google.common.collect.ImmutableSortedMap$1: int compare(java.util.Map$Entry,java.util.Map$Entry)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ext.JodaSerializers$JodaSerializer: java.lang.String printLocalDate(org.joda.time.ReadableInstant)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.deser.std.StdValueInstantiator: hive.shaded.parquet.org.codehaus.jackson.map.JsonMappingException wrapException(java.lang.Throwable)>",
    "<hive.com.fasterxml.jackson.databind.JsonMappingException: hive.com.fasterxml.jackson.databind.JsonMappingException wrapWithPath(java.lang.Throwable,hive.com.fasterxml.jackson.databind.JsonMappingException$Reference)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.JsonMappingException: hive.shaded.parquet.org.codehaus.jackson.map.JsonMappingException wrapWithPath(java.lang.Throwable,hive.shaded.parquet.org.codehaus.jackson.map.JsonMappingException$Reference)>",
    "<hive.com.google.common.collect.Lists: int hashCodeImpl(java.util.List)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ser.StdSerializerProvider: hive.shaded.parquet.org.codehaus.jackson.map.JsonSerializer _createAndCacheUntypedSerializer(java.lang.Class,hive.shaded.parquet.org.codehaus.jackson.map.BeanProperty)>",
    "<hive.org.apache.parquet.format.RowGroup: int hashCode()>",
    "<hive.com.google.protobuf.SmallSortedMap$EntrySet: boolean contains(java.lang.Object)>",
    "<hive.org.apache.avro.Protocol: hive.org.apache.avro.Protocol parse(org.codehaus.jackson.JsonParser)>",
    "<hive.com.google.protobuf.DescriptorProtos$EnumOptions: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.google.common.collect.TreeMultimap: java.util.Collection createCollection(java.lang.Object)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.deser.SettableBeanProperty: void _throwAsIOE(java.lang.Exception,java.lang.Object)>",
    "<hive.com.google.common.util.concurrent.Futures: java.lang.Object newFromConstructor(java.lang.reflect.Constructor,java.lang.Throwable)>",
    "<hive.com.fasterxml.jackson.databind.DatabindContext: hive.com.fasterxml.jackson.databind.JavaType resolveSubType(hive.com.fasterxml.jackson.databind.JavaType,java.lang.String)>",
    "<hive.org.apache.avro.Protocol: hive.org.apache.avro.Protocol parse(java.lang.String)>",
    "<hive.org.apache.avro.io.JsonDecoder: int readEnum()>",
    "<hive.com.google.protobuf.DescriptorProtos$EnumDescriptorProto: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.org.apache.avro.io.JsonDecoder: float readFloat()>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ser.StdSerializerProvider: void _serializeValue(hive.shaded.parquet.org.codehaus.jackson.JsonGenerator,java.lang.Object,hive.shaded.parquet.org.codehaus.jackson.type.JavaType)>",
    "<hive.com.google.common.cache.RemovalNotification: int hashCode()>",
    "<hive.org.apache.avro.mapred.tether.TetherOutputService: void output(java.nio.ByteBuffer)>",
    "<hive.com.google.common.collect.SingletonImmutableSet: java.lang.String toString()>",
    "<hive.org.apache.parquet.format.FileMetaData: int hashCode()>",
    "<hive.com.google.common.collect.TreeMultiset: long aggregateAboveRange(hive.com.google.common.collect.TreeMultiset$Aggregate,hive.com.google.common.collect.TreeMultiset$AvlNode)>",
    "<hive.org.apache.avro.io.JsonDecoder: long readLong()>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ser.StdSerializerProvider: void _serializeValue(hive.shaded.parquet.org.codehaus.jackson.JsonGenerator,java.lang.Object)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.type.TypeParser: java.lang.Class findClass(java.lang.String,hive.shaded.parquet.org.codehaus.jackson.map.type.TypeParser$MyTokenizer)>",
    "<hive.com.google.common.collect.SingletonImmutableSet: boolean contains(java.lang.Object)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ext.JodaDeserializers$DateMidnightDeserializer: org.joda.time.DateMidnight deserialize(hive.shaded.parquet.org.codehaus.jackson.JsonParser,hive.shaded.parquet.org.codehaus.jackson.map.DeserializationContext)>",
    "<hive.org.apache.parquet.format.PageHeader: int compareTo(hive.org.apache.parquet.format.PageHeader)>",
    "<hive.org.apache.avro.generic.GenericData: void toString(java.lang.Object,java.lang.StringBuilder)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.deser.std.StdKeyDeserializer: java.lang.Object deserializeKey(java.lang.String,hive.shaded.parquet.org.codehaus.jackson.map.DeserializationContext)>",
    "<hive.com.fasterxml.jackson.databind.ext.DOMDeserializer: org.w3c.dom.Document parse(java.lang.String)>"
  ],
  "1.15.0": [
    "<hive.com.google.protobuf.UnknownFieldSet$Parser: hive.com.google.protobuf.UnknownFieldSet parsePartialFrom(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.fasterxml.jackson.core.json.UTF8DataInputJsonParser: byte[] getBinaryValue(hive.com.fasterxml.jackson.core.Base64Variant)>",
    "<hive.org.apache.avro.io.JsonDecoder: hive.org.apache.avro.io.parsing.Symbol doAction(hive.org.apache.avro.io.parsing.Symbol,hive.org.apache.avro.io.parsing.Symbol)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.util.ClassUtil: java.lang.Class findClass(java.lang.String)>",
    "<hive.shaded.parquet.org.apache.thrift.transport.TFileTransport: java.io.InputStream createInputStream()>",
    "<hive.com.fasterxml.jackson.databind.ObjectMapper: hive.com.fasterxml.jackson.databind.JsonNode valueToTree(java.lang.Object)>",
    "<hive.com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>",
    "<hive.com.google.protobuf.SmallSortedMap$Entry: boolean equals(java.lang.Object,java.lang.Object)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.deser.std.StdDeserializer: java.util.Date _parseDate(hive.shaded.parquet.org.codehaus.jackson.JsonParser,hive.shaded.parquet.org.codehaus.jackson.map.DeserializationContext)>",
    "<hive.com.google.common.collect.ImmutableListMultimap: void readObject(java.io.ObjectInputStream)>",
    "<hive.com.google.common.collect.ImmutableSetMultimap: void readObject(java.io.ObjectInputStream)>",
    "<hive.com.google.protobuf.DescriptorProtos$FileDescriptorSet: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.org.apache.parquet.format.PageHeader: int hashCode()>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ObjectMapper: hive.shaded.parquet.org.codehaus.jackson.JsonNode valueToTree(java.lang.Object)>",
    "<hive.org.apache.avro.io.JsonDecoder: int readInt()>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.deser.StdDeserializerProvider: hive.shaded.parquet.org.codehaus.jackson.map.JsonDeserializer _createAndCache2(hive.shaded.parquet.org.codehaus.jackson.map.DeserializationConfig,hive.shaded.parquet.org.codehaus.jackson.type.JavaType,hive.shaded.parquet.org.codehaus.jackson.map.BeanProperty)>",
    "<hive.com.fasterxml.jackson.databind.util.StdDateFormat: java.util.Date parseAsISO8601(java.lang.String,java.text.ParsePosition)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ext.JodaSerializers$JodaSerializer: java.lang.String printLocalDateTime(org.joda.time.ReadablePartial)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ext.JodaDeserializers$JodaDeserializer: org.joda.time.DateTime parseLocal(hive.shaded.parquet.org.codehaus.jackson.JsonParser)>",
    "<hive.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.Object deserialize(hive.com.fasterxml.jackson.core.JsonParser,hive.com.fasterxml.jackson.databind.DeserializationContext)>",
    "<hive.org.apache.avro.io.JsonDecoder: void skipString()>",
    "<hive.com.google.common.collect.SingletonImmutableBiMap: java.lang.Object get(java.lang.Object)>",
    "<hive.com.fasterxml.jackson.databind.node.TextNode: byte[] getBinaryValue(hive.com.fasterxml.jackson.core.Base64Variant)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ext.JodaSerializers$JodaSerializer: java.lang.String printLocalDate(org.joda.time.ReadablePartial)>",
    "<hive.org.apache.avro.Protocol: hive.org.apache.avro.Protocol parse(java.io.File)>",
    "<hive.com.google.common.collect.Sets: int hashCodeImpl(java.util.Set)>",
    "<hive.org.apache.avro.io.JsonDecoder: int readIndex()>",
    "<hive.com.fasterxml.jackson.databind.util.EnumResolver: hive.com.fasterxml.jackson.databind.util.EnumResolver constructUsingMethod(java.lang.Class,hive.com.fasterxml.jackson.databind.introspect.AnnotatedMember,hive.com.fasterxml.jackson.databind.AnnotationIntrospector)>",
    "<hive.com.google.protobuf.SmallSortedMap$Entry: int compareTo(hive.com.google.protobuf.SmallSortedMap$Entry)>",
    "<hive.com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Object createInstance(java.lang.Class,boolean)>",
    "<hive.org.apache.parquet.format.ColumnChunk: int hashCode()>",
    "<hive.com.fasterxml.jackson.databind.deser.BeanDeserializerFactory: hive.com.fasterxml.jackson.databind.JsonDeserializer buildBuilderBasedDeserializer(hive.com.fasterxml.jackson.databind.DeserializationContext,hive.com.fasterxml.jackson.databind.JavaType,hive.com.fasterxml.jackson.databind.BeanDescription)>",
    "<hive.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] getBinaryValue(hive.com.fasterxml.jackson.core.Base64Variant)>",
    "<hive.com.google.common.collect.RegularImmutableBiMap: void <init>(java.util.Collection)>",
    "<hive.com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.google.common.collect.SingletonImmutableList: java.lang.String toString()>",
    "<hive.com.fasterxml.jackson.core.base.ParserMinimalBase: void _decodeBase64(java.lang.String,hive.com.fasterxml.jackson.core.util.ByteArrayBuilder,hive.com.fasterxml.jackson.core.Base64Variant)>",
    "<hive.org.apache.avro.Schema$Parser: hive.org.apache.avro.Schema parse(java.io.File)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.MappingIterator: boolean hasNext()>",
    "<hive.shaded.parquet.org.apache.thrift.transport.TFileTransport: void seekToChunk(int)>",
    "<hive.org.apache.avro.generic.GenericData$Array: java.lang.String toString()>",
    "<hive.org.apache.avro.io.JsonDecoder: long skipArray()>",
    "<hive.com.google.common.collect.TreeMultiset: hive.com.google.common.collect.TreeMultiset$AvlNode firstNode()>",
    "<hive.com.google.common.collect.GeneralRange: boolean tooLow(java.lang.Object)>",
    "<hive.com.google.common.collect.Cut$AboveValue: int hashCode()>",
    "<hive.com.google.protobuf.DescriptorProtos$FieldDescriptorProto: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.org.apache.parquet.example.data.simple.SimpleGroup: java.lang.String toString(java.lang.String)>",
    "<hive.com.fasterxml.jackson.databind.util.ISO8601Utils: java.util.Date parse(java.lang.String,java.text.ParsePosition)>",
    "<hive.com.fasterxml.jackson.databind.SerializerProvider: hive.com.fasterxml.jackson.databind.JsonSerializer _createAndCacheUntypedSerializer(java.lang.Class)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ext.JodaDeserializers$PeriodDeserializer: org.joda.time.ReadablePeriod deserialize(hive.shaded.parquet.org.codehaus.jackson.JsonParser,hive.shaded.parquet.org.codehaus.jackson.map.DeserializationContext)>",
    "<hive.com.google.protobuf.DescriptorProtos$MethodOptions: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.google.common.base.Functions$ToStringFunction: java.lang.String apply(java.lang.Object)>",
    "<hive.com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class findClass(java.lang.String)>",
    "<hive.org.apache.parquet.format.DataPageHeader: int compareTo(hive.org.apache.parquet.format.DataPageHeader)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ser.BasicSerializerFactory: hive.shaded.parquet.org.codehaus.jackson.type.JavaType modifySecondaryTypesByAnnotation(hive.shaded.parquet.org.codehaus.jackson.map.SerializationConfig,hive.shaded.parquet.org.codehaus.jackson.map.introspect.Annotated,hive.shaded.parquet.org.codehaus.jackson.type.JavaType)>",
    "<hive.shaded.parquet.org.codehaus.jackson.impl.Utf8StreamParser: byte[] getBinaryValue(hive.shaded.parquet.org.codehaus.jackson.Base64Variant)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ser.BasicSerializerFactory: hive.shaded.parquet.org.codehaus.jackson.type.JavaType modifyTypeByAnnotation(hive.shaded.parquet.org.codehaus.jackson.map.SerializationConfig,hive.shaded.parquet.org.codehaus.jackson.map.introspect.Annotated,hive.shaded.parquet.org.codehaus.jackson.type.JavaType)>",
    "<hive.org.apache.parquet.format.FileMetaData: int compareTo(hive.org.apache.parquet.format.FileMetaData)>",
    "<hive.com.fasterxml.jackson.databind.deser.DeserializerCache: hive.com.fasterxml.jackson.databind.JsonDeserializer _createAndCache2(hive.com.fasterxml.jackson.databind.DeserializationContext,hive.com.fasterxml.jackson.databind.deser.DeserializerFactory,hive.com.fasterxml.jackson.databind.JavaType)>",
    "<hive.org.apache.parquet.format.DataPageHeader: int hashCode()>",
    "<hive.com.google.common.collect.ImmutableSet: hive.com.google.common.collect.ImmutableSet construct(int,java.lang.Object[])>",
    "<hive.com.google.common.collect.Range: int compareOrThrow(java.lang.Comparable,java.lang.Comparable)>",
    "<hive.org.apache.avro.generic.GenericData$EnumSymbol: boolean equals(java.lang.Object)>",
    "<hive.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: byte[] getBinaryValue(hive.com.fasterxml.jackson.core.Base64Variant)>",
    "<hive.org.apache.parquet.format.KeyValue: int hashCode()>",
    "<hive.org.apache.avro.Schema$Parser: hive.org.apache.avro.Schema parse(org.codehaus.jackson.JsonParser)>",
    "<hive.com.google.common.collect.LinkedHashMultimap$ValueSet: boolean contains(java.lang.Object)>",
    "<hive.com.google.common.collect.Iterators: boolean contains(java.util.Iterator,java.lang.Object)>",
    "<hive.shaded.parquet.org.apache.thrift.transport.TSaslTransport: void sendAndThrowMessage(hive.shaded.parquet.org.apache.thrift.transport.TSaslTransport$NegotiationStatus,java.lang.String)>",
    "<hive.com.google.protobuf.DescriptorProtos$FileDescriptorProto: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator: java.lang.Object generateId(java.lang.Object)>",
    "<hive.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: boolean includeFilterSuppressNulls(java.lang.Object)>",
    "<hive.shaded.parquet.org.apache.thrift.transport.TNonblockingServerSocket: void close()>",
    "<hive.org.apache.parquet.format.Statistics: int hashCode()>",
    "<hive.com.google.common.collect.SortedLists: int binarySearch(java.util.List,java.lang.Object,java.util.Comparator,hive.com.google.common.collect.SortedLists$KeyPresentBehavior,hive.com.google.common.collect.SortedLists$KeyAbsentBehavior)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.MappingIterator: java.lang.Object next()>",
    "<hive.com.google.common.collect.SingletonImmutableList: int indexOf(java.lang.Object)>",
    "<hive.com.google.common.collect.TreeMultiset$AvlNode: int count(java.util.Comparator,java.lang.Object)>",
    "<hive.org.apache.avro.Schema: org.codehaus.jackson.JsonNode parseJson(java.lang.String)>",
    "<hive.org.apache.parquet.format.ColumnMetaData: int hashCode()>",
    "<hive.com.google.common.collect.TreeMultiset$AvlNode: hive.com.google.common.collect.TreeMultiset$AvlNode add(java.util.Comparator,java.lang.Object,int,int[])>",
    "<hive.com.google.protobuf.AbstractMessage: int hashFields(int,java.util.Map)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.deser.SettableBeanProperty$InnerClassProperty: void deserializeAndSet(hive.shaded.parquet.org.codehaus.jackson.JsonParser,hive.shaded.parquet.org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>",
    "<hive.com.fasterxml.jackson.databind.deser.impl.InnerClassProperty: void deserializeAndSet(hive.com.fasterxml.jackson.core.JsonParser,hive.com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>",
    "<hive.com.google.protobuf.DescriptorProtos$FileOptions: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Object throwAsMappingException(hive.com.fasterxml.jackson.databind.DeserializationContext,java.io.IOException)>",
    "<hive.com.google.common.collect.SingletonImmutableBiMap: boolean containsValue(java.lang.Object)>",
    "<hive.com.google.common.collect.UsingToStringOrdering: int compare(java.lang.Object,java.lang.Object)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ext.DOMSerializer: void <init>()>",
    "<hive.com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object treeToValue(hive.com.fasterxml.jackson.core.TreeNode,java.lang.Class)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ext.JodaDeserializers$DateTimeDeserializer: org.joda.time.ReadableInstant deserialize(hive.shaded.parquet.org.codehaus.jackson.JsonParser,hive.shaded.parquet.org.codehaus.jackson.map.DeserializationContext)>",
    "<hive.com.google.common.collect.Multisets$AbstractEntry: int hashCode()>",
    "<hive.com.google.common.collect.RegularImmutableMap: void <init>(java.util.Map$Entry[])>",
    "<hive.org.apache.avro.Schema$RecordSchema: void fieldsToJson(hive.org.apache.avro.Schema$Names,org.codehaus.jackson.JsonGenerator)>",
    "<hive.com.google.common.collect.ReverseNaturalOrdering: int compare(java.lang.Comparable,java.lang.Comparable)>",
    "<hive.org.apache.avro.Protocol: hive.org.apache.avro.Protocol parse(java.io.InputStream)>",
    "<hive.com.google.common.base.Present: int hashCode()>",
    "<hive.com.google.common.base.Equivalence$Equals: int doHash(java.lang.Object)>",
    "<hive.com.google.common.collect.GeneralRange: void <init>(java.util.Comparator,boolean,java.lang.Object,hive.com.google.common.collect.BoundType,boolean,java.lang.Object,hive.com.google.common.collect.BoundType)>",
    "<hive.com.google.protobuf.SmallSortedMap$Entry: int hashCode()>",
    "<hive.org.apache.avro.generic.GenericData: java.lang.Object deepCopy(hive.org.apache.avro.Schema,java.lang.Object)>",
    "<hive.com.google.common.collect.HashBiMap: int hash(java.lang.Object)>",
    "<hive.com.fasterxml.jackson.databind.introspect.BasicBeanDescription: java.lang.Object instantiateBean(boolean)>",
    "<hive.com.google.protobuf.DescriptorProtos$EnumValueOptions: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)>",
    "<hive.com.google.common.collect.NaturalOrdering: int compare(java.lang.Comparable,java.lang.Comparable)>",
    "<hive.org.apache.avro.io.JsonDecoder: void readNull()>",
    "<hive.org.apache.avro.generic.GenericData: int compare(java.lang.Object,java.lang.Object,hive.org.apache.avro.Schema,boolean)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.deser.BasicDeserializerFactory: hive.shaded.parquet.org.codehaus.jackson.type.JavaType modifyTypeByAnnotation(hive.shaded.parquet.org.codehaus.jackson.map.DeserializationConfig,hive.shaded.parquet.org.codehaus.jackson.map.introspect.Annotated,hive.shaded.parquet.org.codehaus.jackson.type.JavaType,java.lang.String)>",
    "<hive.shaded.parquet.org.apache.thrift.TBaseHelper: int compareTo(java.lang.Comparable,java.lang.Comparable)>",
    "<hive.com.google.common.collect.SingletonImmutableList: boolean contains(java.lang.Object)>",
    "<hive.org.apache.avro.io.JsonDecoder: double readDouble()>",
    "<hive.com.google.protobuf.DescriptorProtos$UninterpretedOption: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.fasterxml.jackson.databind.ser.BeanSerializerFactory: hive.com.fasterxml.jackson.databind.JsonSerializer constructBeanSerializer(hive.com.fasterxml.jackson.databind.SerializerProvider,hive.com.fasterxml.jackson.databind.BeanDescription)>",
    "<hive.org.apache.avro.generic.GenericData: int hashCode(java.lang.Object,hive.org.apache.avro.Schema)>",
    "<hive.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.util.Date _parseDate(java.lang.String,hive.com.fasterxml.jackson.databind.DeserializationContext)>",
    "<hive.com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.org.apache.parquet.format.PageEncodingStats: int compareTo(hive.org.apache.parquet.format.PageEncodingStats)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ext.DOMDeserializer: org.w3c.dom.Document parse(java.lang.String)>",
    "<hive.com.google.common.collect.ImmutableSortedSet: int unsafeCompare(java.util.Comparator,java.lang.Object,java.lang.Object)>",
    "<hive.com.google.protobuf.DynamicMessage$1: hive.com.google.protobuf.DynamicMessage parsePartialFrom(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.google.common.collect.LinkedHashMultimap$ValueSet$1: void remove()>",
    "<hive.shaded.parquet.org.apache.thrift.transport.TFileTransport: int getNumChunks()>",
    "<hive.org.apache.parquet.format.ColumnMetaData: int compareTo(hive.org.apache.parquet.format.ColumnMetaData)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.deser.SettableAnyProperty: void _throwAsIOE(java.lang.Exception,java.lang.String,java.lang.Object)>",
    "<hive.com.google.common.collect.SortedLists$KeyPresentBehavior$2: int resultIndex(java.util.Comparator,java.lang.Object,java.util.List,int)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.deser.SettableBeanProperty: java.io.IOException _throwAsIOE(java.lang.Exception)>",
    "<hive.com.google.common.collect.AbstractMapEntry: int hashCode()>",
    "<hive.com.google.common.collect.RegularImmutableList: boolean equals(java.lang.Object)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ext.JodaDeserializers$LocalDateTimeDeserializer: org.joda.time.LocalDateTime deserialize(hive.shaded.parquet.org.codehaus.jackson.JsonParser,hive.shaded.parquet.org.codehaus.jackson.map.DeserializationContext)>",
    "<hive.org.apache.avro.Schema: void <clinit>()>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ext.JodaDeserializers$LocalDateDeserializer: org.joda.time.LocalDate deserialize(hive.shaded.parquet.org.codehaus.jackson.JsonParser,hive.shaded.parquet.org.codehaus.jackson.map.DeserializationContext)>",
    "<hive.org.apache.avro.io.JsonDecoder: boolean readBoolean()>",
    "<hive.com.google.common.collect.Cut$BelowValue: int hashCode()>",
    "<hive.com.google.common.collect.RegularContiguousSet: hive.com.google.common.collect.ContiguousSet intersection(hive.com.google.common.collect.ContiguousSet)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.deser.StdDeserializationContext: hive.shaded.parquet.org.codehaus.jackson.map.JsonMappingException instantiationException(java.lang.Class,java.lang.Throwable)>",
    "<hive.com.google.common.collect.SingletonImmutableBiMap: boolean containsKey(java.lang.Object)>",
    "<hive.org.apache.avro.io.JsonDecoder: long skipMap()>",
    "<hive.com.google.protobuf.DescriptorProtos$ServiceOptions: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.google.common.collect.LinkedHashMultimap$ValueSet: boolean add(java.lang.Object)>",
    "<hive.shaded.parquet.org.apache.thrift.transport.TFileTransport: int tailRead(java.io.InputStream,byte[],int,int,hive.shaded.parquet.org.apache.thrift.transport.TFileTransport$tailPolicy)>",
    "<hive.com.google.common.collect.ImmutableSet: boolean equals(java.lang.Object)>",
    "<hive.com.google.common.collect.ImmutableSortedMap: void validateEntries(java.util.List,java.util.Comparator)>",
    "<hive.org.apache.parquet.format.ColumnChunk: int compareTo(hive.org.apache.parquet.format.ColumnChunk)>",
    "<hive.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.reflect.Constructor findConstructor(java.lang.Class,boolean)>",
    "<hive.com.fasterxml.jackson.databind.deser.BeanDeserializerFactory: hive.com.fasterxml.jackson.databind.JsonDeserializer buildBeanDeserializer(hive.com.fasterxml.jackson.databind.DeserializationContext,hive.com.fasterxml.jackson.databind.JavaType,hive.com.fasterxml.jackson.databind.BeanDescription)>",
    "<hive.org.apache.parquet.format.Statistics: int compareTo(hive.org.apache.parquet.format.Statistics)>",
    "<hive.com.google.common.collect.TreeMultiset$AvlNode: hive.com.google.common.collect.TreeMultiset$AvlNode setCount(java.util.Comparator,java.lang.Object,int,int[])>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.util.ClassUtil: java.lang.reflect.Constructor findConstructor(java.lang.Class,boolean)>",
    "<hive.org.apache.avro.JsonProperties: void writeProps(org.codehaus.jackson.JsonGenerator)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.util.ClassUtil: java.lang.Object createInstance(java.lang.Class,boolean)>",
    "<hive.com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.org.apache.avro.SchemaBuilder: org.codehaus.jackson.JsonNode toJsonNode(java.lang.Object)>",
    "<hive.org.apache.parquet.format.DataPageHeaderV2: int hashCode()>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.introspect.BasicBeanDescription: java.lang.Object instantiateBean(boolean)>",
    "<hive.com.google.common.collect.TreeMultiset$AvlNode: hive.com.google.common.collect.TreeMultiset$AvlNode ceiling(java.util.Comparator,java.lang.Object)>",
    "<hive.com.fasterxml.jackson.databind.type.TypeParser: java.lang.Class findClass(java.lang.String,hive.com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer)>",
    "<hive.org.apache.parquet.hadoop.codec.CodecConfig: hive.org.apache.parquet.hadoop.metadata.CompressionCodecName getHadoopCompressionCodec()>",
    "<hive.com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector: hive.com.fasterxml.jackson.databind.JavaType refineSerializationType(hive.com.fasterxml.jackson.databind.cfg.MapperConfig,hive.com.fasterxml.jackson.databind.introspect.Annotated,hive.com.fasterxml.jackson.databind.JavaType)>",
    "<hive.com.google.protobuf.DescriptorProtos$FieldOptions: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.fasterxml.jackson.databind.JsonMappingException: hive.com.fasterxml.jackson.databind.JsonMappingException fromUnexpectedIOE(java.io.IOException)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ser.BasicSerializerFactory: hive.shaded.parquet.org.codehaus.jackson.map.JsonSerializer findSerializerByLookup(hive.shaded.parquet.org.codehaus.jackson.type.JavaType,hive.shaded.parquet.org.codehaus.jackson.map.SerializationConfig,hive.shaded.parquet.org.codehaus.jackson.map.introspect.BasicBeanDescription,hive.shaded.parquet.org.codehaus.jackson.map.BeanProperty,boolean)>",
    "<hive.com.google.common.collect.SingletonImmutableSet: int hashCode()>",
    "<hive.com.google.protobuf.DescriptorProtos$MethodDescriptorProto: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.org.apache.parquet.format.SchemaElement: int hashCode()>",
    "<hive.org.apache.avro.io.JsonDecoder: void skipBytes()>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ser.StdSerializerProvider: hive.shaded.parquet.org.codehaus.jackson.map.JsonSerializer _createAndCacheUntypedSerializer(hive.shaded.parquet.org.codehaus.jackson.type.JavaType,hive.shaded.parquet.org.codehaus.jackson.map.BeanProperty)>",
    "<hive.com.google.common.collect.TreeMultiset: int add(java.lang.Object,int)>",
    "<hive.com.google.common.collect.GeneralRange: boolean tooHigh(java.lang.Object)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.jsontype.impl.ClassNameIdResolver: hive.shaded.parquet.org.codehaus.jackson.type.JavaType typeFromId(java.lang.String)>",
    "<hive.com.google.protobuf.SmallSortedMap: int binarySearchInArray(java.lang.Comparable)>",
    "<hive.com.google.common.collect.SortedLists$KeyPresentBehavior$3: int resultIndex(java.util.Comparator,java.lang.Object,java.util.List,int)>",
    "<hive.org.apache.avro.io.JsonDecoder: hive.org.apache.avro.io.JsonDecoder configure(java.lang.String)>",
    "<hive.org.apache.parquet.format.DictionaryPageHeader: int compareTo(hive.org.apache.parquet.format.DictionaryPageHeader)>",
    "<hive.com.fasterxml.jackson.databind.util.ClassUtil: void throwAsIAE(java.lang.Throwable)>",
    "<hive.org.apache.parquet.format.SchemaElement: int compareTo(hive.org.apache.parquet.format.SchemaElement)>",
    "<hive.org.apache.parquet.format.DataPageHeaderV2: int compareTo(hive.org.apache.parquet.format.DataPageHeaderV2)>",
    "<hive.com.google.protobuf.DescriptorProtos$ServiceDescriptorProto: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.google.common.collect.SingletonImmutableSet: boolean equals(java.lang.Object)>",
    "<hive.com.google.protobuf.AbstractParser: hive.com.google.protobuf.MessageLite parsePartialDelimitedFrom(java.io.InputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector: hive.com.fasterxml.jackson.databind.JavaType refineDeserializationType(hive.com.fasterxml.jackson.databind.cfg.MapperConfig,hive.com.fasterxml.jackson.databind.introspect.Annotated,hive.com.fasterxml.jackson.databind.JavaType)>",
    "<hive.com.google.common.collect.RegularImmutableMap: java.lang.Object get(java.lang.Object)>",
    "<hive.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: java.lang.Object deserializeKey(java.lang.String,hive.com.fasterxml.jackson.databind.DeserializationContext)>",
    "<hive.com.google.common.collect.RegularImmutableSet: boolean contains(java.lang.Object)>",
    "<hive.com.fasterxml.jackson.databind.SerializerProvider: hive.com.fasterxml.jackson.databind.JsonSerializer _createAndCacheUntypedSerializer(hive.com.fasterxml.jackson.databind.JavaType)>",
    "<hive.shaded.parquet.org.codehaus.jackson.impl.ReaderBasedParser: byte[] getBinaryValue(hive.shaded.parquet.org.codehaus.jackson.Base64Variant)>",
    "<hive.org.apache.avro.Schema$Parser: hive.org.apache.avro.Schema parse(java.io.InputStream)>",
    "<hive.com.google.protobuf.DescriptorProtos$DescriptorProto: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.google.common.collect.SingletonImmutableList: boolean equals(java.lang.Object)>",
    "<hive.com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException: java.lang.String getMessage()>",
    "<hive.com.fasterxml.jackson.databind.deser.SettableAnyProperty: void _throwAsIOE(java.lang.Exception,java.lang.Object,java.lang.Object)>",
    "<hive.org.apache.avro.io.JsonDecoder: java.util.List getVaueAsTree(org.codehaus.jackson.JsonParser)>",
    "<hive.com.google.common.collect.ImmutableSortedSet: int sortAndUnique(java.util.Comparator,int,java.lang.Object[])>",
    "<hive.org.apache.parquet.format.RowGroup: int compareTo(hive.org.apache.parquet.format.RowGroup)>",
    "<hive.org.apache.avro.io.JsonDecoder: hive.org.apache.avro.io.JsonDecoder configure(java.io.InputStream)>",
    "<hive.com.google.common.collect.ComparatorOrdering: int compare(java.lang.Object,java.lang.Object)>",
    "<hive.com.google.common.collect.TreeMultiset$AvlNode: hive.com.google.common.collect.TreeMultiset$AvlNode remove(java.util.Comparator,java.lang.Object,int,int[])>",
    "<hive.com.google.common.collect.ImmutableSortedAsList: int indexOf(java.lang.Object)>",
    "<hive.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$DelegatingKD: java.lang.Object deserializeKey(java.lang.String,hive.com.fasterxml.jackson.databind.DeserializationContext)>",
    "<hive.com.fasterxml.jackson.databind.MappingIterator: java.lang.Object next()>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ObjectMapper: java.lang.Object _convert(java.lang.Object,hive.shaded.parquet.org.codehaus.jackson.type.JavaType)>",
    "<hive.com.google.protobuf.DescriptorProtos$SourceCodeInfo: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.google.protobuf.DescriptorProtos$MessageOptions: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.google.common.collect.SingletonImmutableList: int hashCode()>",
    "<hive.com.fasterxml.jackson.databind.deser.SettableBeanProperty: java.io.IOException _throwAsIOE(hive.com.fasterxml.jackson.core.JsonParser,java.lang.Exception)>",
    "<hive.com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _convert(java.lang.Object,hive.com.fasterxml.jackson.databind.JavaType)>",
    "<hive.com.fasterxml.jackson.databind.ext.DOMSerializer: void <init>()>",
    "<hive.com.google.common.base.Present: boolean equals(java.lang.Object)>",
    "<hive.com.google.common.collect.ImmutableMapEntrySet: boolean contains(java.lang.Object)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.util.ClassUtil: void throwAsIAE(java.lang.Throwable)>",
    "<hive.com.google.common.collect.TreeMultiset: long aggregateBelowRange(hive.com.google.common.collect.TreeMultiset$Aggregate,hive.com.google.common.collect.TreeMultiset$AvlNode)>",
    "<hive.shaded.parquet.org.apache.thrift.transport.TFileTransport: void close()>",
    "<hive.com.google.protobuf.LiteralByteString: boolean equals(java.lang.Object)>",
    "<hive.com.google.common.collect.ImmutableSortedMap$1: int compare(java.util.Map$Entry,java.util.Map$Entry)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ext.JodaSerializers$JodaSerializer: java.lang.String printLocalDate(org.joda.time.ReadableInstant)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.deser.std.StdValueInstantiator: hive.shaded.parquet.org.codehaus.jackson.map.JsonMappingException wrapException(java.lang.Throwable)>",
    "<hive.com.fasterxml.jackson.databind.JsonMappingException: hive.com.fasterxml.jackson.databind.JsonMappingException wrapWithPath(java.lang.Throwable,hive.com.fasterxml.jackson.databind.JsonMappingException$Reference)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.JsonMappingException: hive.shaded.parquet.org.codehaus.jackson.map.JsonMappingException wrapWithPath(java.lang.Throwable,hive.shaded.parquet.org.codehaus.jackson.map.JsonMappingException$Reference)>",
    "<hive.com.google.common.collect.Lists: int hashCodeImpl(java.util.List)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ser.StdSerializerProvider: hive.shaded.parquet.org.codehaus.jackson.map.JsonSerializer _createAndCacheUntypedSerializer(java.lang.Class,hive.shaded.parquet.org.codehaus.jackson.map.BeanProperty)>",
    "<hive.org.apache.parquet.format.RowGroup: int hashCode()>",
    "<hive.com.google.protobuf.SmallSortedMap$EntrySet: boolean contains(java.lang.Object)>",
    "<hive.org.apache.avro.Protocol: hive.org.apache.avro.Protocol parse(org.codehaus.jackson.JsonParser)>",
    "<hive.com.google.protobuf.DescriptorProtos$EnumOptions: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.google.common.collect.TreeMultimap: java.util.Collection createCollection(java.lang.Object)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.deser.SettableBeanProperty: void _throwAsIOE(java.lang.Exception,java.lang.Object)>",
    "<hive.com.google.common.util.concurrent.Futures: java.lang.Object newFromConstructor(java.lang.reflect.Constructor,java.lang.Throwable)>",
    "<hive.com.fasterxml.jackson.databind.DatabindContext: hive.com.fasterxml.jackson.databind.JavaType resolveSubType(hive.com.fasterxml.jackson.databind.JavaType,java.lang.String)>",
    "<hive.org.apache.avro.Protocol: hive.org.apache.avro.Protocol parse(java.lang.String)>",
    "<hive.org.apache.avro.io.JsonDecoder: int readEnum()>",
    "<hive.com.google.protobuf.DescriptorProtos$EnumDescriptorProto: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.org.apache.avro.io.JsonDecoder: float readFloat()>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ser.StdSerializerProvider: void _serializeValue(hive.shaded.parquet.org.codehaus.jackson.JsonGenerator,java.lang.Object,hive.shaded.parquet.org.codehaus.jackson.type.JavaType)>",
    "<hive.com.google.common.cache.RemovalNotification: int hashCode()>",
    "<hive.org.apache.avro.mapred.tether.TetherOutputService: void output(java.nio.ByteBuffer)>",
    "<hive.com.google.common.collect.SingletonImmutableSet: java.lang.String toString()>",
    "<hive.org.apache.parquet.format.FileMetaData: int hashCode()>",
    "<hive.com.google.common.collect.TreeMultiset: long aggregateAboveRange(hive.com.google.common.collect.TreeMultiset$Aggregate,hive.com.google.common.collect.TreeMultiset$AvlNode)>",
    "<hive.org.apache.avro.io.JsonDecoder: long readLong()>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ser.StdSerializerProvider: void _serializeValue(hive.shaded.parquet.org.codehaus.jackson.JsonGenerator,java.lang.Object)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.type.TypeParser: java.lang.Class findClass(java.lang.String,hive.shaded.parquet.org.codehaus.jackson.map.type.TypeParser$MyTokenizer)>",
    "<hive.com.google.common.collect.SingletonImmutableSet: boolean contains(java.lang.Object)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ext.JodaDeserializers$DateMidnightDeserializer: org.joda.time.DateMidnight deserialize(hive.shaded.parquet.org.codehaus.jackson.JsonParser,hive.shaded.parquet.org.codehaus.jackson.map.DeserializationContext)>",
    "<hive.org.apache.parquet.format.PageHeader: int compareTo(hive.org.apache.parquet.format.PageHeader)>",
    "<hive.org.apache.avro.generic.GenericData: void toString(java.lang.Object,java.lang.StringBuilder)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.deser.std.StdKeyDeserializer: java.lang.Object deserializeKey(java.lang.String,hive.shaded.parquet.org.codehaus.jackson.map.DeserializationContext)>",
    "<hive.com.fasterxml.jackson.databind.ext.DOMDeserializer: org.w3c.dom.Document parse(java.lang.String)>"
  ],
  "1.14.0": [
    "<hive.com.google.protobuf.UnknownFieldSet$Parser: hive.com.google.protobuf.UnknownFieldSet parsePartialFrom(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.fasterxml.jackson.core.json.UTF8DataInputJsonParser: byte[] getBinaryValue(hive.com.fasterxml.jackson.core.Base64Variant)>",
    "<hive.org.apache.avro.io.JsonDecoder: hive.org.apache.avro.io.parsing.Symbol doAction(hive.org.apache.avro.io.parsing.Symbol,hive.org.apache.avro.io.parsing.Symbol)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.util.ClassUtil: java.lang.Class findClass(java.lang.String)>",
    "<hive.shaded.parquet.org.apache.thrift.transport.TFileTransport: java.io.InputStream createInputStream()>",
    "<hive.com.fasterxml.jackson.databind.ObjectMapper: hive.com.fasterxml.jackson.databind.JsonNode valueToTree(java.lang.Object)>",
    "<hive.com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>",
    "<hive.com.google.protobuf.SmallSortedMap$Entry: boolean equals(java.lang.Object,java.lang.Object)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.deser.std.StdDeserializer: java.util.Date _parseDate(hive.shaded.parquet.org.codehaus.jackson.JsonParser,hive.shaded.parquet.org.codehaus.jackson.map.DeserializationContext)>",
    "<hive.com.google.common.collect.ImmutableListMultimap: void readObject(java.io.ObjectInputStream)>",
    "<hive.com.google.common.collect.ImmutableSetMultimap: void readObject(java.io.ObjectInputStream)>",
    "<hive.com.google.protobuf.DescriptorProtos$FileDescriptorSet: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.org.apache.parquet.format.PageHeader: int hashCode()>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ObjectMapper: hive.shaded.parquet.org.codehaus.jackson.JsonNode valueToTree(java.lang.Object)>",
    "<hive.org.apache.avro.io.JsonDecoder: int readInt()>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.deser.StdDeserializerProvider: hive.shaded.parquet.org.codehaus.jackson.map.JsonDeserializer _createAndCache2(hive.shaded.parquet.org.codehaus.jackson.map.DeserializationConfig,hive.shaded.parquet.org.codehaus.jackson.type.JavaType,hive.shaded.parquet.org.codehaus.jackson.map.BeanProperty)>",
    "<hive.com.fasterxml.jackson.databind.util.StdDateFormat: java.util.Date parseAsISO8601(java.lang.String,java.text.ParsePosition)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ext.JodaSerializers$JodaSerializer: java.lang.String printLocalDateTime(org.joda.time.ReadablePartial)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ext.JodaDeserializers$JodaDeserializer: org.joda.time.DateTime parseLocal(hive.shaded.parquet.org.codehaus.jackson.JsonParser)>",
    "<hive.com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.Object deserialize(hive.com.fasterxml.jackson.core.JsonParser,hive.com.fasterxml.jackson.databind.DeserializationContext)>",
    "<hive.org.apache.avro.io.JsonDecoder: void skipString()>",
    "<hive.com.google.common.collect.SingletonImmutableBiMap: java.lang.Object get(java.lang.Object)>",
    "<hive.com.fasterxml.jackson.databind.node.TextNode: byte[] getBinaryValue(hive.com.fasterxml.jackson.core.Base64Variant)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ext.JodaSerializers$JodaSerializer: java.lang.String printLocalDate(org.joda.time.ReadablePartial)>",
    "<hive.org.apache.avro.Protocol: hive.org.apache.avro.Protocol parse(java.io.File)>",
    "<hive.com.google.common.collect.Sets: int hashCodeImpl(java.util.Set)>",
    "<hive.org.apache.avro.io.JsonDecoder: int readIndex()>",
    "<hive.com.fasterxml.jackson.databind.util.EnumResolver: hive.com.fasterxml.jackson.databind.util.EnumResolver constructUsingMethod(java.lang.Class,hive.com.fasterxml.jackson.databind.introspect.AnnotatedMember,hive.com.fasterxml.jackson.databind.AnnotationIntrospector)>",
    "<hive.com.google.protobuf.SmallSortedMap$Entry: int compareTo(hive.com.google.protobuf.SmallSortedMap$Entry)>",
    "<hive.com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Object createInstance(java.lang.Class,boolean)>",
    "<hive.org.apache.parquet.format.ColumnChunk: int hashCode()>",
    "<hive.com.fasterxml.jackson.databind.deser.BeanDeserializerFactory: hive.com.fasterxml.jackson.databind.JsonDeserializer buildBuilderBasedDeserializer(hive.com.fasterxml.jackson.databind.DeserializationContext,hive.com.fasterxml.jackson.databind.JavaType,hive.com.fasterxml.jackson.databind.BeanDescription)>",
    "<hive.com.fasterxml.jackson.core.json.UTF8StreamJsonParser: byte[] getBinaryValue(hive.com.fasterxml.jackson.core.Base64Variant)>",
    "<hive.com.google.common.collect.RegularImmutableBiMap: void <init>(java.util.Collection)>",
    "<hive.com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.google.common.collect.SingletonImmutableList: java.lang.String toString()>",
    "<hive.com.fasterxml.jackson.core.base.ParserMinimalBase: void _decodeBase64(java.lang.String,hive.com.fasterxml.jackson.core.util.ByteArrayBuilder,hive.com.fasterxml.jackson.core.Base64Variant)>",
    "<hive.org.apache.avro.Schema$Parser: hive.org.apache.avro.Schema parse(java.io.File)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.MappingIterator: boolean hasNext()>",
    "<hive.shaded.parquet.org.apache.thrift.transport.TFileTransport: void seekToChunk(int)>",
    "<hive.org.apache.avro.generic.GenericData$Array: java.lang.String toString()>",
    "<hive.org.apache.avro.io.JsonDecoder: long skipArray()>",
    "<hive.com.google.common.collect.TreeMultiset: hive.com.google.common.collect.TreeMultiset$AvlNode firstNode()>",
    "<hive.com.google.common.collect.GeneralRange: boolean tooLow(java.lang.Object)>",
    "<hive.com.google.common.collect.Cut$AboveValue: int hashCode()>",
    "<hive.com.google.protobuf.DescriptorProtos$FieldDescriptorProto: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.org.apache.parquet.example.data.simple.SimpleGroup: java.lang.String toString(java.lang.String)>",
    "<hive.com.fasterxml.jackson.databind.util.ISO8601Utils: java.util.Date parse(java.lang.String,java.text.ParsePosition)>",
    "<hive.com.fasterxml.jackson.databind.SerializerProvider: hive.com.fasterxml.jackson.databind.JsonSerializer _createAndCacheUntypedSerializer(java.lang.Class)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ext.JodaDeserializers$PeriodDeserializer: org.joda.time.ReadablePeriod deserialize(hive.shaded.parquet.org.codehaus.jackson.JsonParser,hive.shaded.parquet.org.codehaus.jackson.map.DeserializationContext)>",
    "<hive.com.google.protobuf.DescriptorProtos$MethodOptions: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.google.common.base.Functions$ToStringFunction: java.lang.String apply(java.lang.Object)>",
    "<hive.com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class findClass(java.lang.String)>",
    "<hive.org.apache.parquet.format.DataPageHeader: int compareTo(hive.org.apache.parquet.format.DataPageHeader)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ser.BasicSerializerFactory: hive.shaded.parquet.org.codehaus.jackson.type.JavaType modifySecondaryTypesByAnnotation(hive.shaded.parquet.org.codehaus.jackson.map.SerializationConfig,hive.shaded.parquet.org.codehaus.jackson.map.introspect.Annotated,hive.shaded.parquet.org.codehaus.jackson.type.JavaType)>",
    "<hive.shaded.parquet.org.codehaus.jackson.impl.Utf8StreamParser: byte[] getBinaryValue(hive.shaded.parquet.org.codehaus.jackson.Base64Variant)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ser.BasicSerializerFactory: hive.shaded.parquet.org.codehaus.jackson.type.JavaType modifyTypeByAnnotation(hive.shaded.parquet.org.codehaus.jackson.map.SerializationConfig,hive.shaded.parquet.org.codehaus.jackson.map.introspect.Annotated,hive.shaded.parquet.org.codehaus.jackson.type.JavaType)>",
    "<hive.org.apache.parquet.format.FileMetaData: int compareTo(hive.org.apache.parquet.format.FileMetaData)>",
    "<hive.com.fasterxml.jackson.databind.deser.DeserializerCache: hive.com.fasterxml.jackson.databind.JsonDeserializer _createAndCache2(hive.com.fasterxml.jackson.databind.DeserializationContext,hive.com.fasterxml.jackson.databind.deser.DeserializerFactory,hive.com.fasterxml.jackson.databind.JavaType)>",
    "<hive.org.apache.parquet.format.DataPageHeader: int hashCode()>",
    "<hive.com.google.common.collect.ImmutableSet: hive.com.google.common.collect.ImmutableSet construct(int,java.lang.Object[])>",
    "<hive.com.google.common.collect.Range: int compareOrThrow(java.lang.Comparable,java.lang.Comparable)>",
    "<hive.org.apache.avro.generic.GenericData$EnumSymbol: boolean equals(java.lang.Object)>",
    "<hive.com.fasterxml.jackson.core.json.ReaderBasedJsonParser: byte[] getBinaryValue(hive.com.fasterxml.jackson.core.Base64Variant)>",
    "<hive.org.apache.parquet.format.KeyValue: int hashCode()>",
    "<hive.org.apache.avro.Schema$Parser: hive.org.apache.avro.Schema parse(org.codehaus.jackson.JsonParser)>",
    "<hive.com.google.common.collect.LinkedHashMultimap$ValueSet: boolean contains(java.lang.Object)>",
    "<hive.com.google.common.collect.Iterators: boolean contains(java.util.Iterator,java.lang.Object)>",
    "<hive.shaded.parquet.org.apache.thrift.transport.TSaslTransport: void sendAndThrowMessage(hive.shaded.parquet.org.apache.thrift.transport.TSaslTransport$NegotiationStatus,java.lang.String)>",
    "<hive.com.google.protobuf.DescriptorProtos$FileDescriptorProto: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator: java.lang.Object generateId(java.lang.Object)>",
    "<hive.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: boolean includeFilterSuppressNulls(java.lang.Object)>",
    "<hive.shaded.parquet.org.apache.thrift.transport.TNonblockingServerSocket: void close()>",
    "<hive.org.apache.parquet.format.Statistics: int hashCode()>",
    "<hive.com.google.common.collect.SortedLists: int binarySearch(java.util.List,java.lang.Object,java.util.Comparator,hive.com.google.common.collect.SortedLists$KeyPresentBehavior,hive.com.google.common.collect.SortedLists$KeyAbsentBehavior)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.MappingIterator: java.lang.Object next()>",
    "<hive.com.google.common.collect.SingletonImmutableList: int indexOf(java.lang.Object)>",
    "<hive.com.google.common.collect.TreeMultiset$AvlNode: int count(java.util.Comparator,java.lang.Object)>",
    "<hive.org.apache.avro.Schema: org.codehaus.jackson.JsonNode parseJson(java.lang.String)>",
    "<hive.org.apache.parquet.format.ColumnMetaData: int hashCode()>",
    "<hive.com.google.common.collect.TreeMultiset$AvlNode: hive.com.google.common.collect.TreeMultiset$AvlNode add(java.util.Comparator,java.lang.Object,int,int[])>",
    "<hive.com.google.protobuf.AbstractMessage: int hashFields(int,java.util.Map)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.deser.SettableBeanProperty$InnerClassProperty: void deserializeAndSet(hive.shaded.parquet.org.codehaus.jackson.JsonParser,hive.shaded.parquet.org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>",
    "<hive.com.fasterxml.jackson.databind.deser.impl.InnerClassProperty: void deserializeAndSet(hive.com.fasterxml.jackson.core.JsonParser,hive.com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>",
    "<hive.com.google.protobuf.DescriptorProtos$FileOptions: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Object throwAsMappingException(hive.com.fasterxml.jackson.databind.DeserializationContext,java.io.IOException)>",
    "<hive.com.google.common.collect.SingletonImmutableBiMap: boolean containsValue(java.lang.Object)>",
    "<hive.com.google.common.collect.UsingToStringOrdering: int compare(java.lang.Object,java.lang.Object)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ext.DOMSerializer: void <init>()>",
    "<hive.com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object treeToValue(hive.com.fasterxml.jackson.core.TreeNode,java.lang.Class)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ext.JodaDeserializers$DateTimeDeserializer: org.joda.time.ReadableInstant deserialize(hive.shaded.parquet.org.codehaus.jackson.JsonParser,hive.shaded.parquet.org.codehaus.jackson.map.DeserializationContext)>",
    "<hive.com.google.common.collect.Multisets$AbstractEntry: int hashCode()>",
    "<hive.com.google.common.collect.RegularImmutableMap: void <init>(java.util.Map$Entry[])>",
    "<hive.org.apache.avro.Schema$RecordSchema: void fieldsToJson(hive.org.apache.avro.Schema$Names,org.codehaus.jackson.JsonGenerator)>",
    "<hive.com.google.common.collect.ReverseNaturalOrdering: int compare(java.lang.Comparable,java.lang.Comparable)>",
    "<hive.org.apache.avro.Protocol: hive.org.apache.avro.Protocol parse(java.io.InputStream)>",
    "<hive.com.google.common.base.Present: int hashCode()>",
    "<hive.com.google.common.base.Equivalence$Equals: int doHash(java.lang.Object)>",
    "<hive.com.google.common.collect.GeneralRange: void <init>(java.util.Comparator,boolean,java.lang.Object,hive.com.google.common.collect.BoundType,boolean,java.lang.Object,hive.com.google.common.collect.BoundType)>",
    "<hive.com.google.protobuf.SmallSortedMap$Entry: int hashCode()>",
    "<hive.org.apache.avro.generic.GenericData: java.lang.Object deepCopy(hive.org.apache.avro.Schema,java.lang.Object)>",
    "<hive.com.google.common.collect.HashBiMap: int hash(java.lang.Object)>",
    "<hive.com.fasterxml.jackson.databind.introspect.BasicBeanDescription: java.lang.Object instantiateBean(boolean)>",
    "<hive.com.google.protobuf.DescriptorProtos$EnumValueOptions: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)>",
    "<hive.com.google.common.collect.NaturalOrdering: int compare(java.lang.Comparable,java.lang.Comparable)>",
    "<hive.org.apache.avro.io.JsonDecoder: void readNull()>",
    "<hive.org.apache.avro.generic.GenericData: int compare(java.lang.Object,java.lang.Object,hive.org.apache.avro.Schema,boolean)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.deser.BasicDeserializerFactory: hive.shaded.parquet.org.codehaus.jackson.type.JavaType modifyTypeByAnnotation(hive.shaded.parquet.org.codehaus.jackson.map.DeserializationConfig,hive.shaded.parquet.org.codehaus.jackson.map.introspect.Annotated,hive.shaded.parquet.org.codehaus.jackson.type.JavaType,java.lang.String)>",
    "<hive.shaded.parquet.org.apache.thrift.TBaseHelper: int compareTo(java.lang.Comparable,java.lang.Comparable)>",
    "<hive.com.google.common.collect.SingletonImmutableList: boolean contains(java.lang.Object)>",
    "<hive.org.apache.avro.io.JsonDecoder: double readDouble()>",
    "<hive.com.google.protobuf.DescriptorProtos$UninterpretedOption: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.fasterxml.jackson.databind.ser.BeanSerializerFactory: hive.com.fasterxml.jackson.databind.JsonSerializer constructBeanSerializer(hive.com.fasterxml.jackson.databind.SerializerProvider,hive.com.fasterxml.jackson.databind.BeanDescription)>",
    "<hive.org.apache.avro.generic.GenericData: int hashCode(java.lang.Object,hive.org.apache.avro.Schema)>",
    "<hive.com.fasterxml.jackson.databind.deser.std.StdDeserializer: java.util.Date _parseDate(java.lang.String,hive.com.fasterxml.jackson.databind.DeserializationContext)>",
    "<hive.com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.org.apache.parquet.format.PageEncodingStats: int compareTo(hive.org.apache.parquet.format.PageEncodingStats)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ext.DOMDeserializer: org.w3c.dom.Document parse(java.lang.String)>",
    "<hive.com.google.common.collect.ImmutableSortedSet: int unsafeCompare(java.util.Comparator,java.lang.Object,java.lang.Object)>",
    "<hive.com.google.protobuf.DynamicMessage$1: hive.com.google.protobuf.DynamicMessage parsePartialFrom(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.google.common.collect.LinkedHashMultimap$ValueSet$1: void remove()>",
    "<hive.shaded.parquet.org.apache.thrift.transport.TFileTransport: int getNumChunks()>",
    "<hive.org.apache.parquet.format.ColumnMetaData: int compareTo(hive.org.apache.parquet.format.ColumnMetaData)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.deser.SettableAnyProperty: void _throwAsIOE(java.lang.Exception,java.lang.String,java.lang.Object)>",
    "<hive.com.google.common.collect.SortedLists$KeyPresentBehavior$2: int resultIndex(java.util.Comparator,java.lang.Object,java.util.List,int)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.deser.SettableBeanProperty: java.io.IOException _throwAsIOE(java.lang.Exception)>",
    "<hive.com.google.common.collect.AbstractMapEntry: int hashCode()>",
    "<hive.com.google.common.collect.RegularImmutableList: boolean equals(java.lang.Object)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ext.JodaDeserializers$LocalDateTimeDeserializer: org.joda.time.LocalDateTime deserialize(hive.shaded.parquet.org.codehaus.jackson.JsonParser,hive.shaded.parquet.org.codehaus.jackson.map.DeserializationContext)>",
    "<hive.org.apache.avro.Schema: void <clinit>()>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ext.JodaDeserializers$LocalDateDeserializer: org.joda.time.LocalDate deserialize(hive.shaded.parquet.org.codehaus.jackson.JsonParser,hive.shaded.parquet.org.codehaus.jackson.map.DeserializationContext)>",
    "<hive.org.apache.avro.io.JsonDecoder: boolean readBoolean()>",
    "<hive.com.google.common.collect.Cut$BelowValue: int hashCode()>",
    "<hive.com.google.common.collect.RegularContiguousSet: hive.com.google.common.collect.ContiguousSet intersection(hive.com.google.common.collect.ContiguousSet)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.deser.StdDeserializationContext: hive.shaded.parquet.org.codehaus.jackson.map.JsonMappingException instantiationException(java.lang.Class,java.lang.Throwable)>",
    "<hive.com.google.common.collect.SingletonImmutableBiMap: boolean containsKey(java.lang.Object)>",
    "<hive.org.apache.avro.io.JsonDecoder: long skipMap()>",
    "<hive.com.google.protobuf.DescriptorProtos$ServiceOptions: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.google.common.collect.LinkedHashMultimap$ValueSet: boolean add(java.lang.Object)>",
    "<hive.shaded.parquet.org.apache.thrift.transport.TFileTransport: int tailRead(java.io.InputStream,byte[],int,int,hive.shaded.parquet.org.apache.thrift.transport.TFileTransport$tailPolicy)>",
    "<hive.com.google.common.collect.ImmutableSet: boolean equals(java.lang.Object)>",
    "<hive.com.google.common.collect.ImmutableSortedMap: void validateEntries(java.util.List,java.util.Comparator)>",
    "<hive.org.apache.parquet.format.ColumnChunk: int compareTo(hive.org.apache.parquet.format.ColumnChunk)>",
    "<hive.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.reflect.Constructor findConstructor(java.lang.Class,boolean)>",
    "<hive.com.fasterxml.jackson.databind.deser.BeanDeserializerFactory: hive.com.fasterxml.jackson.databind.JsonDeserializer buildBeanDeserializer(hive.com.fasterxml.jackson.databind.DeserializationContext,hive.com.fasterxml.jackson.databind.JavaType,hive.com.fasterxml.jackson.databind.BeanDescription)>",
    "<hive.org.apache.parquet.format.Statistics: int compareTo(hive.org.apache.parquet.format.Statistics)>",
    "<hive.com.google.common.collect.TreeMultiset$AvlNode: hive.com.google.common.collect.TreeMultiset$AvlNode setCount(java.util.Comparator,java.lang.Object,int,int[])>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.util.ClassUtil: java.lang.reflect.Constructor findConstructor(java.lang.Class,boolean)>",
    "<hive.org.apache.avro.JsonProperties: void writeProps(org.codehaus.jackson.JsonGenerator)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.util.ClassUtil: java.lang.Object createInstance(java.lang.Class,boolean)>",
    "<hive.com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.org.apache.avro.SchemaBuilder: org.codehaus.jackson.JsonNode toJsonNode(java.lang.Object)>",
    "<hive.org.apache.parquet.format.DataPageHeaderV2: int hashCode()>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.introspect.BasicBeanDescription: java.lang.Object instantiateBean(boolean)>",
    "<hive.com.google.common.collect.TreeMultiset$AvlNode: hive.com.google.common.collect.TreeMultiset$AvlNode ceiling(java.util.Comparator,java.lang.Object)>",
    "<hive.com.fasterxml.jackson.databind.type.TypeParser: java.lang.Class findClass(java.lang.String,hive.com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer)>",
    "<hive.org.apache.parquet.hadoop.codec.CodecConfig: hive.org.apache.parquet.hadoop.metadata.CompressionCodecName getHadoopCompressionCodec()>",
    "<hive.com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector: hive.com.fasterxml.jackson.databind.JavaType refineSerializationType(hive.com.fasterxml.jackson.databind.cfg.MapperConfig,hive.com.fasterxml.jackson.databind.introspect.Annotated,hive.com.fasterxml.jackson.databind.JavaType)>",
    "<hive.com.google.protobuf.DescriptorProtos$FieldOptions: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.fasterxml.jackson.databind.JsonMappingException: hive.com.fasterxml.jackson.databind.JsonMappingException fromUnexpectedIOE(java.io.IOException)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ser.BasicSerializerFactory: hive.shaded.parquet.org.codehaus.jackson.map.JsonSerializer findSerializerByLookup(hive.shaded.parquet.org.codehaus.jackson.type.JavaType,hive.shaded.parquet.org.codehaus.jackson.map.SerializationConfig,hive.shaded.parquet.org.codehaus.jackson.map.introspect.BasicBeanDescription,hive.shaded.parquet.org.codehaus.jackson.map.BeanProperty,boolean)>",
    "<hive.com.google.common.collect.SingletonImmutableSet: int hashCode()>",
    "<hive.com.google.protobuf.DescriptorProtos$MethodDescriptorProto: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.org.apache.parquet.format.SchemaElement: int hashCode()>",
    "<hive.org.apache.avro.io.JsonDecoder: void skipBytes()>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ser.StdSerializerProvider: hive.shaded.parquet.org.codehaus.jackson.map.JsonSerializer _createAndCacheUntypedSerializer(hive.shaded.parquet.org.codehaus.jackson.type.JavaType,hive.shaded.parquet.org.codehaus.jackson.map.BeanProperty)>",
    "<hive.com.google.common.collect.TreeMultiset: int add(java.lang.Object,int)>",
    "<hive.com.google.common.collect.GeneralRange: boolean tooHigh(java.lang.Object)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.jsontype.impl.ClassNameIdResolver: hive.shaded.parquet.org.codehaus.jackson.type.JavaType typeFromId(java.lang.String)>",
    "<hive.com.google.protobuf.SmallSortedMap: int binarySearchInArray(java.lang.Comparable)>",
    "<hive.com.google.common.collect.SortedLists$KeyPresentBehavior$3: int resultIndex(java.util.Comparator,java.lang.Object,java.util.List,int)>",
    "<hive.org.apache.avro.io.JsonDecoder: hive.org.apache.avro.io.JsonDecoder configure(java.lang.String)>",
    "<hive.org.apache.parquet.format.DictionaryPageHeader: int compareTo(hive.org.apache.parquet.format.DictionaryPageHeader)>",
    "<hive.com.fasterxml.jackson.databind.util.ClassUtil: void throwAsIAE(java.lang.Throwable)>",
    "<hive.org.apache.parquet.format.SchemaElement: int compareTo(hive.org.apache.parquet.format.SchemaElement)>",
    "<hive.org.apache.parquet.format.DataPageHeaderV2: int compareTo(hive.org.apache.parquet.format.DataPageHeaderV2)>",
    "<hive.com.google.protobuf.DescriptorProtos$ServiceDescriptorProto: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.google.common.collect.SingletonImmutableSet: boolean equals(java.lang.Object)>",
    "<hive.com.google.protobuf.AbstractParser: hive.com.google.protobuf.MessageLite parsePartialDelimitedFrom(java.io.InputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector: hive.com.fasterxml.jackson.databind.JavaType refineDeserializationType(hive.com.fasterxml.jackson.databind.cfg.MapperConfig,hive.com.fasterxml.jackson.databind.introspect.Annotated,hive.com.fasterxml.jackson.databind.JavaType)>",
    "<hive.com.google.common.collect.RegularImmutableMap: java.lang.Object get(java.lang.Object)>",
    "<hive.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: java.lang.Object deserializeKey(java.lang.String,hive.com.fasterxml.jackson.databind.DeserializationContext)>",
    "<hive.com.google.common.collect.RegularImmutableSet: boolean contains(java.lang.Object)>",
    "<hive.com.fasterxml.jackson.databind.SerializerProvider: hive.com.fasterxml.jackson.databind.JsonSerializer _createAndCacheUntypedSerializer(hive.com.fasterxml.jackson.databind.JavaType)>",
    "<hive.shaded.parquet.org.codehaus.jackson.impl.ReaderBasedParser: byte[] getBinaryValue(hive.shaded.parquet.org.codehaus.jackson.Base64Variant)>",
    "<hive.org.apache.avro.Schema$Parser: hive.org.apache.avro.Schema parse(java.io.InputStream)>",
    "<hive.com.google.protobuf.DescriptorProtos$DescriptorProto: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.google.common.collect.SingletonImmutableList: boolean equals(java.lang.Object)>",
    "<hive.com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException: java.lang.String getMessage()>",
    "<hive.com.fasterxml.jackson.databind.deser.SettableAnyProperty: void _throwAsIOE(java.lang.Exception,java.lang.Object,java.lang.Object)>",
    "<hive.org.apache.avro.io.JsonDecoder: java.util.List getVaueAsTree(org.codehaus.jackson.JsonParser)>",
    "<hive.com.google.common.collect.ImmutableSortedSet: int sortAndUnique(java.util.Comparator,int,java.lang.Object[])>",
    "<hive.org.apache.parquet.format.RowGroup: int compareTo(hive.org.apache.parquet.format.RowGroup)>",
    "<hive.org.apache.avro.io.JsonDecoder: hive.org.apache.avro.io.JsonDecoder configure(java.io.InputStream)>",
    "<hive.com.google.common.collect.ComparatorOrdering: int compare(java.lang.Object,java.lang.Object)>",
    "<hive.com.google.common.collect.TreeMultiset$AvlNode: hive.com.google.common.collect.TreeMultiset$AvlNode remove(java.util.Comparator,java.lang.Object,int,int[])>",
    "<hive.com.google.common.collect.ImmutableSortedAsList: int indexOf(java.lang.Object)>",
    "<hive.com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$DelegatingKD: java.lang.Object deserializeKey(java.lang.String,hive.com.fasterxml.jackson.databind.DeserializationContext)>",
    "<hive.com.fasterxml.jackson.databind.MappingIterator: java.lang.Object next()>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ObjectMapper: java.lang.Object _convert(java.lang.Object,hive.shaded.parquet.org.codehaus.jackson.type.JavaType)>",
    "<hive.com.google.protobuf.DescriptorProtos$SourceCodeInfo: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.google.protobuf.DescriptorProtos$MessageOptions: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.google.common.collect.SingletonImmutableList: int hashCode()>",
    "<hive.com.fasterxml.jackson.databind.deser.SettableBeanProperty: java.io.IOException _throwAsIOE(hive.com.fasterxml.jackson.core.JsonParser,java.lang.Exception)>",
    "<hive.com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _convert(java.lang.Object,hive.com.fasterxml.jackson.databind.JavaType)>",
    "<hive.com.fasterxml.jackson.databind.ext.DOMSerializer: void <init>()>",
    "<hive.com.google.common.base.Present: boolean equals(java.lang.Object)>",
    "<hive.com.google.common.collect.ImmutableMapEntrySet: boolean contains(java.lang.Object)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.util.ClassUtil: void throwAsIAE(java.lang.Throwable)>",
    "<hive.com.google.common.collect.TreeMultiset: long aggregateBelowRange(hive.com.google.common.collect.TreeMultiset$Aggregate,hive.com.google.common.collect.TreeMultiset$AvlNode)>",
    "<hive.shaded.parquet.org.apache.thrift.transport.TFileTransport: void close()>",
    "<hive.com.google.protobuf.LiteralByteString: boolean equals(java.lang.Object)>",
    "<hive.com.google.common.collect.ImmutableSortedMap$1: int compare(java.util.Map$Entry,java.util.Map$Entry)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ext.JodaSerializers$JodaSerializer: java.lang.String printLocalDate(org.joda.time.ReadableInstant)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.deser.std.StdValueInstantiator: hive.shaded.parquet.org.codehaus.jackson.map.JsonMappingException wrapException(java.lang.Throwable)>",
    "<hive.com.fasterxml.jackson.databind.JsonMappingException: hive.com.fasterxml.jackson.databind.JsonMappingException wrapWithPath(java.lang.Throwable,hive.com.fasterxml.jackson.databind.JsonMappingException$Reference)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.JsonMappingException: hive.shaded.parquet.org.codehaus.jackson.map.JsonMappingException wrapWithPath(java.lang.Throwable,hive.shaded.parquet.org.codehaus.jackson.map.JsonMappingException$Reference)>",
    "<hive.com.google.common.collect.Lists: int hashCodeImpl(java.util.List)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ser.StdSerializerProvider: hive.shaded.parquet.org.codehaus.jackson.map.JsonSerializer _createAndCacheUntypedSerializer(java.lang.Class,hive.shaded.parquet.org.codehaus.jackson.map.BeanProperty)>",
    "<hive.org.apache.parquet.format.RowGroup: int hashCode()>",
    "<hive.com.google.protobuf.SmallSortedMap$EntrySet: boolean contains(java.lang.Object)>",
    "<hive.org.apache.avro.Protocol: hive.org.apache.avro.Protocol parse(org.codehaus.jackson.JsonParser)>",
    "<hive.com.google.protobuf.DescriptorProtos$EnumOptions: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.com.google.common.collect.TreeMultimap: java.util.Collection createCollection(java.lang.Object)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.deser.SettableBeanProperty: void _throwAsIOE(java.lang.Exception,java.lang.Object)>",
    "<hive.com.google.common.util.concurrent.Futures: java.lang.Object newFromConstructor(java.lang.reflect.Constructor,java.lang.Throwable)>",
    "<hive.com.fasterxml.jackson.databind.DatabindContext: hive.com.fasterxml.jackson.databind.JavaType resolveSubType(hive.com.fasterxml.jackson.databind.JavaType,java.lang.String)>",
    "<hive.org.apache.avro.Protocol: hive.org.apache.avro.Protocol parse(java.lang.String)>",
    "<hive.org.apache.avro.io.JsonDecoder: int readEnum()>",
    "<hive.com.google.protobuf.DescriptorProtos$EnumDescriptorProto: void <init>(hive.com.google.protobuf.CodedInputStream,hive.com.google.protobuf.ExtensionRegistryLite)>",
    "<hive.org.apache.avro.io.JsonDecoder: float readFloat()>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ser.StdSerializerProvider: void _serializeValue(hive.shaded.parquet.org.codehaus.jackson.JsonGenerator,java.lang.Object,hive.shaded.parquet.org.codehaus.jackson.type.JavaType)>",
    "<hive.com.google.common.cache.RemovalNotification: int hashCode()>",
    "<hive.org.apache.avro.mapred.tether.TetherOutputService: void output(java.nio.ByteBuffer)>",
    "<hive.com.google.common.collect.SingletonImmutableSet: java.lang.String toString()>",
    "<hive.org.apache.parquet.format.FileMetaData: int hashCode()>",
    "<hive.com.google.common.collect.TreeMultiset: long aggregateAboveRange(hive.com.google.common.collect.TreeMultiset$Aggregate,hive.com.google.common.collect.TreeMultiset$AvlNode)>",
    "<hive.org.apache.avro.io.JsonDecoder: long readLong()>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ser.StdSerializerProvider: void _serializeValue(hive.shaded.parquet.org.codehaus.jackson.JsonGenerator,java.lang.Object)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.type.TypeParser: java.lang.Class findClass(java.lang.String,hive.shaded.parquet.org.codehaus.jackson.map.type.TypeParser$MyTokenizer)>",
    "<hive.com.google.common.collect.SingletonImmutableSet: boolean contains(java.lang.Object)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.ext.JodaDeserializers$DateMidnightDeserializer: org.joda.time.DateMidnight deserialize(hive.shaded.parquet.org.codehaus.jackson.JsonParser,hive.shaded.parquet.org.codehaus.jackson.map.DeserializationContext)>",
    "<hive.org.apache.parquet.format.PageHeader: int compareTo(hive.org.apache.parquet.format.PageHeader)>",
    "<hive.org.apache.avro.generic.GenericData: void toString(java.lang.Object,java.lang.StringBuilder)>",
    "<hive.shaded.parquet.org.codehaus.jackson.map.deser.std.StdKeyDeserializer: java.lang.Object deserializeKey(java.lang.String,hive.shaded.parquet.org.codehaus.jackson.map.DeserializationContext)>",
    "<hive.com.fasterxml.jackson.databind.ext.DOMDeserializer: org.w3c.dom.Document parse(java.lang.String)>"
  ],
  "1.8.0": [
    "<hive.com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>",
    "<hive.com.google.protobuf.SmallSortedMap$Entry: boolean equals(java.lang.Object,java.lang.Object)>",
    "<hive.com.google.common.collect.ImmutableListMultimap: void readObject(java.io.ObjectInputStream)>",
    "<hive.com.google.common.collect.ImmutableSetMultimap: void readObject(java.io.ObjectInputStream)>",
    "<hive.org.apache.calcite.avatica.AvaticaStatement: void executeInternal(java.lang.String)>",
    "<hive.parquet.format.ColumnMetaData: int hashCode()>",
    "<hive.parquet.org.codehaus.jackson.map.ext.DOMDeserializer: org.w3c.dom.Document parse(java.lang.String)>",
    "<hive.org.apache.calcite.sql.SqlUtil: java.lang.String getAliasedSignature(hive.org.apache.calcite.sql.SqlOperator,java.lang.String,java.util.List)>",
    "<hive.com.google.common.collect.SingletonImmutableBiMap: java.lang.Object get(java.lang.Object)>",
    "<hive.org.apache.calcite.runtime.FlatLists$Flat3List: boolean equals(java.lang.Object)>",
    "<hive.com.google.common.collect.Sets: int hashCodeImpl(java.util.Set)>",
    "<hive.org.apache.calcite.sql.advise.SqlAdvisor: java.util.List validate(java.lang.String)>",
    "<hive.parquet.org.codehaus.jackson.map.ext.JodaSerializers$JodaSerializer: java.lang.String printLocalDateTime(org.joda.time.ReadablePartial)>",
    "<hive.com.google.protobuf.SmallSortedMap$Entry: int compareTo(hive.com.google.protobuf.SmallSortedMap$Entry)>",
    "<hive.parquet.org.codehaus.jackson.map.util.ClassUtil: java.lang.Object createInstance(java.lang.Class,boolean)>",
    "<hive.com.google.common.collect.RegularImmutableBiMap: void <init>(java.util.Collection)>",
    "<hive.com.google.common.collect.SingletonImmutableList: java.lang.String toString()>",
    "<hive.parquet.org.codehaus.jackson.map.ser.BasicSerializerFactory: hive.parquet.org.codehaus.jackson.type.JavaType modifySecondaryTypesByAnnotation(hive.parquet.org.codehaus.jackson.map.SerializationConfig,hive.parquet.org.codehaus.jackson.map.introspect.Annotated,hive.parquet.org.codehaus.jackson.type.JavaType)>",
    "<hive.parquet.org.codehaus.jackson.map.deser.std.StdValueInstantiator: hive.parquet.org.codehaus.jackson.map.JsonMappingException wrapException(java.lang.Throwable)>",
    "<hive.parquet.org.codehaus.jackson.map.ser.BasicSerializerFactory: hive.parquet.org.codehaus.jackson.map.JsonSerializer findSerializerByLookup(hive.parquet.org.codehaus.jackson.type.JavaType,hive.parquet.org.codehaus.jackson.map.SerializationConfig,hive.parquet.org.codehaus.jackson.map.introspect.BasicBeanDescription,hive.parquet.org.codehaus.jackson.map.BeanProperty,boolean)>",
    "<hive.parquet.format.SchemaElement: int hashCode()>",
    "<hive.parquet.org.codehaus.jackson.map.ext.JodaSerializers$JodaSerializer: java.lang.String printLocalDate(org.joda.time.ReadablePartial)>",
    "<hive.org.apache.calcite.sql.parser.impl.SimpleCharStream: void ExpandBuff(boolean)>",
    "<hive.org.apache.calcite.avatica.AvaticaConnection: java.sql.ResultSet executeQueryInternal(hive.org.apache.calcite.avatica.AvaticaStatement,hive.org.apache.calcite.avatica.Meta$Signature,hive.org.apache.calcite.avatica.Meta$Frame)>",
    "<hive.parquet.format.PageHeader: int hashCode()>",
    "<hive.com.google.common.collect.Cut$AboveValue: int hashCode()>",
    "<hive.parquet.example.data.simple.SimpleGroup: java.lang.String toString(java.lang.String)>",
    "<hive.com.google.common.base.Functions$ToStringFunction: java.lang.String apply(java.lang.Object)>",
    "<hive.parquet.org.codehaus.jackson.map.introspect.BasicBeanDescription: java.lang.Object instantiateBean(boolean)>",
    "<hive.com.google.common.collect.ImmutableSet: hive.com.google.common.collect.ImmutableSet construct(int,java.lang.Object[])>",
    "<hive.com.google.common.collect.Range: int compareOrThrow(java.lang.Comparable,java.lang.Comparable)>",
    "<hive.org.apache.calcite.rex.RexUtil$3: java.lang.String apply(java.lang.Object)>",
    "<hive.parquet.hadoop.codec.CodecConfig: hive.parquet.hadoop.metadata.CompressionCodecName getHadoopCompressionCodec()>",
    "<hive.parquet.org.codehaus.jackson.map.ser.BasicSerializerFactory: hive.parquet.org.codehaus.jackson.type.JavaType modifyTypeByAnnotation(hive.parquet.org.codehaus.jackson.map.SerializationConfig,hive.parquet.org.codehaus.jackson.map.introspect.Annotated,hive.parquet.org.codehaus.jackson.type.JavaType)>",
    "<hive.com.google.common.collect.LinkedHashMultimap$ValueSet: boolean contains(java.lang.Object)>",
    "<hive.com.google.common.collect.Iterators: boolean contains(java.util.Iterator,java.lang.Object)>",
    "<hive.parquet.org.codehaus.jackson.map.deser.std.StdDeserializer: java.util.Date _parseDate(hive.parquet.org.codehaus.jackson.JsonParser,hive.parquet.org.codehaus.jackson.map.DeserializationContext)>",
    "<hive.parquet.org.codehaus.jackson.map.util.ClassUtil: java.lang.Class findClass(java.lang.String)>",
    "<hive.parquet.org.codehaus.jackson.map.type.TypeParser: java.lang.Class findClass(java.lang.String,hive.parquet.org.codehaus.jackson.map.type.TypeParser$MyTokenizer)>",
    "<hive.com.google.common.collect.SingletonImmutableList: int indexOf(java.lang.Object)>",
    "<hive.com.google.protobuf.AbstractMessage: int hashFields(int,java.util.Map)>",
    "<hive.com.google.common.collect.SingletonImmutableBiMap: boolean containsValue(java.lang.Object)>",
    "<hive.com.google.common.collect.UsingToStringOrdering: int compare(java.lang.Object,java.lang.Object)>",
    "<hive.parquet.org.codehaus.jackson.map.deser.std.StdKeyDeserializer: java.lang.Object deserializeKey(java.lang.String,hive.parquet.org.codehaus.jackson.map.DeserializationContext)>",
    "<hive.com.google.common.collect.Multisets$AbstractEntry: int hashCode()>",
    "<hive.com.google.common.collect.RegularImmutableMap: void <init>(java.util.Map$Entry[])>",
    "<hive.com.google.common.collect.ReverseNaturalOrdering: int compare(java.lang.Comparable,java.lang.Comparable)>",
    "<hive.com.google.common.base.Present: int hashCode()>",
    "<hive.com.google.common.base.Equivalence$Equals: int doHash(java.lang.Object)>",
    "<hive.parquet.format.DataPageHeaderV2: int hashCode()>",
    "<hive.parquet.org.codehaus.jackson.map.ext.JodaDeserializers$DateTimeDeserializer: org.joda.time.ReadableInstant deserialize(hive.parquet.org.codehaus.jackson.JsonParser,hive.parquet.org.codehaus.jackson.map.DeserializationContext)>",
    "<hive.com.google.protobuf.SmallSortedMap$Entry: int hashCode()>",
    "<hive.com.google.common.collect.HashBiMap: int hash(java.lang.Object)>",
    "<hive.org.apache.calcite.runtime.Utilities: int compare(java.lang.Comparable,java.lang.Comparable)>",
    "<hive.com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)>",
    "<hive.com.google.common.collect.NaturalOrdering: int compare(java.lang.Comparable,java.lang.Comparable)>",
    "<hive.org.apache.calcite.runtime.Utilities: int hash(java.lang.Object)>",
    "<hive.parquet.org.codehaus.jackson.map.deser.SettableAnyProperty: void _throwAsIOE(java.lang.Exception,java.lang.String,java.lang.Object)>",
    "<hive.com.google.common.collect.SingletonImmutableList: boolean contains(java.lang.Object)>",
    "<hive.parquet.format.KeyValue: int hashCode()>",
    "<hive.parquet.org.codehaus.jackson.map.ext.JodaDeserializers$LocalDateDeserializer: org.joda.time.LocalDate deserialize(hive.parquet.org.codehaus.jackson.JsonParser,hive.parquet.org.codehaus.jackson.map.DeserializationContext)>",
    "<hive.parquet.format.FileMetaData: int hashCode()>",
    "<hive.com.google.common.collect.LinkedHashMultimap$ValueSet$1: void remove()>",
    "<hive.parquet.org.codehaus.jackson.impl.ReaderBasedParser: byte[] getBinaryValue(hive.parquet.org.codehaus.jackson.Base64Variant)>",
    "<hive.parquet.org.codehaus.jackson.map.deser.SettableBeanProperty: java.io.IOException _throwAsIOE(java.lang.Exception)>",
    "<hive.parquet.org.codehaus.jackson.map.ext.JodaSerializers$JodaSerializer: java.lang.String printLocalDate(org.joda.time.ReadableInstant)>",
    "<hive.org.apache.calcite.util.ImmutableIntList: boolean equals(java.lang.Object)>",
    "<hive.com.google.common.collect.AbstractMapEntry: int hashCode()>",
    "<hive.com.google.common.collect.RegularImmutableList: boolean equals(java.lang.Object)>",
    "<hive.org.apache.calcite.adapter.clone.ColumnLoader$Kev: int compareTo(hive.org.apache.calcite.adapter.clone.ColumnLoader$Kev)>",
    "<hive.com.google.common.collect.Cut$BelowValue: int hashCode()>",
    "<hive.com.google.common.collect.RegularContiguousSet: hive.com.google.common.collect.ContiguousSet intersection(hive.com.google.common.collect.ContiguousSet)>",
    "<hive.com.google.common.collect.SingletonImmutableBiMap: boolean containsKey(java.lang.Object)>",
    "<hive.com.google.common.collect.LinkedHashMultimap$ValueSet: boolean add(java.lang.Object)>",
    "<hive.com.google.common.collect.ImmutableSet: boolean equals(java.lang.Object)>",
    "<hive.org.apache.calcite.util.mapping.Mappings$FiniteAbstractMapping: boolean equals(java.lang.Object)>",
    "<hive.parquet.org.codehaus.jackson.impl.Utf8StreamParser: byte[] getBinaryValue(hive.parquet.org.codehaus.jackson.Base64Variant)>",
    "<hive.parquet.format.RowGroup: int hashCode()>",
    "<hive.parquet.org.codehaus.jackson.map.ext.JodaDeserializers$PeriodDeserializer: org.joda.time.ReadablePeriod deserialize(hive.parquet.org.codehaus.jackson.JsonParser,hive.parquet.org.codehaus.jackson.map.DeserializationContext)>",
    "<hive.parquet.org.codehaus.jackson.map.deser.SettableBeanProperty: void _throwAsIOE(java.lang.Exception,java.lang.Object)>",
    "<hive.org.apache.calcite.adapter.enumerable.RexImpTable: boolean allSame(java.util.List)>",
    "<hive.com.google.common.collect.SingletonImmutableSet: int hashCode()>",
    "<hive.parquet.org.codehaus.jackson.map.deser.StdDeserializationContext: hive.parquet.org.codehaus.jackson.map.JsonMappingException instantiationException(java.lang.Class,java.lang.Throwable)>",
    "<hive.com.google.protobuf.SmallSortedMap: int binarySearchInArray(java.lang.Comparable)>",
    "<hive.org.apache.calcite.util.Util: int hash(int,java.lang.Object)>",
    "<hive.parquet.org.apache.thrift.transport.TSaslTransport: void sendAndThrowMessage(hive.parquet.org.apache.thrift.transport.TSaslTransport$NegotiationStatus,java.lang.String)>",
    "<hive.parquet.org.codehaus.jackson.map.JsonMappingException: hive.parquet.org.codehaus.jackson.map.JsonMappingException wrapWithPath(java.lang.Throwable,hive.parquet.org.codehaus.jackson.map.JsonMappingException$Reference)>",
    "<hive.parquet.org.codehaus.jackson.map.deser.BasicDeserializerFactory: hive.parquet.org.codehaus.jackson.type.JavaType modifyTypeByAnnotation(hive.parquet.org.codehaus.jackson.map.DeserializationConfig,hive.parquet.org.codehaus.jackson.map.introspect.Annotated,hive.parquet.org.codehaus.jackson.type.JavaType,java.lang.String)>",
    "<hive.com.google.common.collect.SingletonImmutableSet: boolean equals(java.lang.Object)>",
    "<hive.parquet.org.codehaus.jackson.map.util.ClassUtil: void throwAsIAE(java.lang.Throwable)>",
    "<hive.org.apache.calcite.util.Pair: int compare(java.lang.Comparable,java.lang.Comparable)>",
    "<hive.parquet.org.codehaus.jackson.map.ser.StdSerializerProvider: void _serializeValue(hive.parquet.org.codehaus.jackson.JsonGenerator,java.lang.Object)>",
    "<hive.com.google.common.collect.RegularImmutableMap: java.lang.Object get(java.lang.Object)>",
    "<hive.parquet.org.codehaus.jackson.map.ser.StdSerializerProvider: void _serializeValue(hive.parquet.org.codehaus.jackson.JsonGenerator,java.lang.Object,hive.parquet.org.codehaus.jackson.type.JavaType)>",
    "<hive.com.google.common.collect.RegularImmutableSet: boolean contains(java.lang.Object)>",
    "<hive.org.apache.calcite.runtime.FlatLists$Flat2List: int indexOf(java.lang.Object)>",
    "<hive.parquet.org.apache.thrift.TBaseHelper: int compareTo(java.lang.Comparable,java.lang.Comparable)>",
    "<hive.com.google.common.collect.SingletonImmutableList: boolean equals(java.lang.Object)>",
    "<hive.com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException: java.lang.String getMessage()>",
    "<hive.parquet.org.codehaus.jackson.map.ext.JodaDeserializers$LocalDateTimeDeserializer: org.joda.time.LocalDateTime deserialize(hive.parquet.org.codehaus.jackson.JsonParser,hive.parquet.org.codehaus.jackson.map.DeserializationContext)>",
    "<hive.org.apache.calcite.adapter.clone.ColumnLoader$ValueSet: void add(java.lang.Comparable)>",
    "<hive.com.google.common.collect.ImmutableSortedAsList: int indexOf(java.lang.Object)>",
    "<hive.parquet.org.codehaus.jackson.map.ext.JodaDeserializers$JodaDeserializer: org.joda.time.DateTime parseLocal(hive.parquet.org.codehaus.jackson.JsonParser)>",
    "<hive.parquet.format.DataPageHeader: int hashCode()>",
    "<hive.parquet.org.codehaus.jackson.map.deser.SettableBeanProperty$InnerClassProperty: void deserializeAndSet(hive.parquet.org.codehaus.jackson.JsonParser,hive.parquet.org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>",
    "<hive.org.apache.calcite.sql.parser.impl.SqlParserImpl: hive.org.apache.calcite.sql.parser.SqlParseException convertException(java.lang.Throwable)>",
    "<hive.com.google.common.collect.SingletonImmutableList: int hashCode()>",
    "<hive.parquet.org.codehaus.jackson.map.ser.StdSerializerProvider: hive.parquet.org.codehaus.jackson.map.JsonSerializer _createAndCacheUntypedSerializer(java.lang.Class,hive.parquet.org.codehaus.jackson.map.BeanProperty)>",
    "<hive.parquet.org.codehaus.jackson.map.ext.JodaDeserializers$DateMidnightDeserializer: org.joda.time.DateMidnight deserialize(hive.parquet.org.codehaus.jackson.JsonParser,hive.parquet.org.codehaus.jackson.map.DeserializationContext)>",
    "<hive.parquet.org.codehaus.jackson.map.deser.StdDeserializerProvider: hive.parquet.org.codehaus.jackson.map.JsonDeserializer _createAndCache2(hive.parquet.org.codehaus.jackson.map.DeserializationConfig,hive.parquet.org.codehaus.jackson.type.JavaType,hive.parquet.org.codehaus.jackson.map.BeanProperty)>",
    "<hive.com.google.common.collect.ImmutableMapEntrySet: boolean contains(java.lang.Object)>",
    "<hive.com.google.common.base.Present: boolean equals(java.lang.Object)>",
    "<hive.parquet.org.codehaus.jackson.map.ext.DOMSerializer: void <init>()>",
    "<hive.org.apache.calcite.runtime.Utilities: boolean equal(java.lang.Object,java.lang.Object)>",
    "<hive.com.google.protobuf.LiteralByteString: boolean equals(java.lang.Object)>",
    "<hive.org.apache.calcite.avatica.AvaticaStatement: java.sql.ResultSet executeQuery(java.lang.String)>",
    "<hive.parquet.format.ColumnChunk: int hashCode()>",
    "<hive.com.google.common.collect.Lists: int hashCodeImpl(java.util.List)>",
    "<hive.com.google.protobuf.SmallSortedMap$EntrySet: boolean contains(java.lang.Object)>",
    "<hive.com.google.common.util.concurrent.Futures: java.lang.Object newFromConstructor(java.lang.reflect.Constructor,java.lang.Throwable)>",
    "<hive.org.apache.calcite.util.Permutation: boolean equals(java.lang.Object)>",
    "<hive.com.google.common.cache.RemovalNotification: int hashCode()>",
    "<hive.parquet.org.codehaus.jackson.map.jsontype.impl.ClassNameIdResolver: hive.parquet.org.codehaus.jackson.type.JavaType typeFromId(java.lang.String)>",
    "<hive.com.google.common.collect.SingletonImmutableSet: java.lang.String toString()>",
    "<hive.parquet.format.Statistics: int hashCode()>",
    "<hive.com.google.common.collect.SingletonImmutableSet: boolean contains(java.lang.Object)>",
    "<hive.parquet.org.codehaus.jackson.map.util.ClassUtil: java.lang.reflect.Constructor findConstructor(java.lang.Class,boolean)>",
    "<hive.parquet.org.codehaus.jackson.map.ser.StdSerializerProvider: hive.parquet.org.codehaus.jackson.map.JsonSerializer _createAndCacheUntypedSerializer(hive.parquet.org.codehaus.jackson.type.JavaType,hive.parquet.org.codehaus.jackson.map.BeanProperty)>",
    "<hive.org.apache.calcite.util.Util: java.lang.String sepList(java.util.List,java.lang.String)>"
  ],
  "1.6.0": [
    "<hive.com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>",
    "<hive.com.google.protobuf.SmallSortedMap$Entry: boolean equals(java.lang.Object,java.lang.Object)>",
    "<hive.com.google.common.collect.ImmutableListMultimap: void readObject(java.io.ObjectInputStream)>",
    "<hive.com.google.common.collect.ImmutableSetMultimap: void readObject(java.io.ObjectInputStream)>",
    "<hive.org.apache.calcite.avatica.AvaticaStatement: void executeInternal(java.lang.String)>",
    "<hive.parquet.format.ColumnMetaData: int hashCode()>",
    "<hive.parquet.org.codehaus.jackson.map.ext.DOMDeserializer: org.w3c.dom.Document parse(java.lang.String)>",
    "<hive.org.apache.calcite.sql.SqlUtil: java.lang.String getAliasedSignature(hive.org.apache.calcite.sql.SqlOperator,java.lang.String,java.util.List)>",
    "<hive.com.google.common.collect.SingletonImmutableBiMap: java.lang.Object get(java.lang.Object)>",
    "<hive.org.apache.calcite.runtime.FlatLists$Flat3List: boolean equals(java.lang.Object)>",
    "<hive.com.google.common.collect.Sets: int hashCodeImpl(java.util.Set)>",
    "<hive.org.apache.calcite.sql.advise.SqlAdvisor: java.util.List validate(java.lang.String)>",
    "<hive.parquet.org.codehaus.jackson.map.ext.JodaSerializers$JodaSerializer: java.lang.String printLocalDateTime(org.joda.time.ReadablePartial)>",
    "<hive.com.google.protobuf.SmallSortedMap$Entry: int compareTo(hive.com.google.protobuf.SmallSortedMap$Entry)>",
    "<hive.parquet.org.codehaus.jackson.map.util.ClassUtil: java.lang.Object createInstance(java.lang.Class,boolean)>",
    "<hive.com.google.common.collect.RegularImmutableBiMap: void <init>(java.util.Collection)>",
    "<hive.com.google.common.collect.SingletonImmutableList: java.lang.String toString()>",
    "<hive.parquet.org.codehaus.jackson.map.ser.BasicSerializerFactory: hive.parquet.org.codehaus.jackson.type.JavaType modifySecondaryTypesByAnnotation(hive.parquet.org.codehaus.jackson.map.SerializationConfig,hive.parquet.org.codehaus.jackson.map.introspect.Annotated,hive.parquet.org.codehaus.jackson.type.JavaType)>",
    "<hive.parquet.org.codehaus.jackson.map.deser.std.StdValueInstantiator: hive.parquet.org.codehaus.jackson.map.JsonMappingException wrapException(java.lang.Throwable)>",
    "<hive.parquet.org.codehaus.jackson.map.ser.BasicSerializerFactory: hive.parquet.org.codehaus.jackson.map.JsonSerializer findSerializerByLookup(hive.parquet.org.codehaus.jackson.type.JavaType,hive.parquet.org.codehaus.jackson.map.SerializationConfig,hive.parquet.org.codehaus.jackson.map.introspect.BasicBeanDescription,hive.parquet.org.codehaus.jackson.map.BeanProperty,boolean)>",
    "<hive.parquet.format.SchemaElement: int hashCode()>",
    "<hive.parquet.org.codehaus.jackson.map.ext.JodaSerializers$JodaSerializer: java.lang.String printLocalDate(org.joda.time.ReadablePartial)>",
    "<hive.org.apache.calcite.sql.parser.impl.SimpleCharStream: void ExpandBuff(boolean)>",
    "<hive.org.apache.calcite.avatica.AvaticaConnection: java.sql.ResultSet executeQueryInternal(hive.org.apache.calcite.avatica.AvaticaStatement,hive.org.apache.calcite.avatica.Meta$Signature,hive.org.apache.calcite.avatica.Meta$Frame)>",
    "<hive.parquet.format.PageHeader: int hashCode()>",
    "<hive.com.google.common.collect.Cut$AboveValue: int hashCode()>",
    "<hive.parquet.example.data.simple.SimpleGroup: java.lang.String toString(java.lang.String)>",
    "<hive.com.google.common.base.Functions$ToStringFunction: java.lang.String apply(java.lang.Object)>",
    "<hive.parquet.org.codehaus.jackson.map.introspect.BasicBeanDescription: java.lang.Object instantiateBean(boolean)>",
    "<hive.com.google.common.collect.ImmutableSet: hive.com.google.common.collect.ImmutableSet construct(int,java.lang.Object[])>",
    "<hive.com.google.common.collect.Range: int compareOrThrow(java.lang.Comparable,java.lang.Comparable)>",
    "<hive.org.apache.calcite.rex.RexUtil$3: java.lang.String apply(java.lang.Object)>",
    "<hive.parquet.hadoop.codec.CodecConfig: hive.parquet.hadoop.metadata.CompressionCodecName getHadoopCompressionCodec()>",
    "<hive.parquet.org.codehaus.jackson.map.ser.BasicSerializerFactory: hive.parquet.org.codehaus.jackson.type.JavaType modifyTypeByAnnotation(hive.parquet.org.codehaus.jackson.map.SerializationConfig,hive.parquet.org.codehaus.jackson.map.introspect.Annotated,hive.parquet.org.codehaus.jackson.type.JavaType)>",
    "<hive.com.google.common.collect.LinkedHashMultimap$ValueSet: boolean contains(java.lang.Object)>",
    "<hive.com.google.common.collect.Iterators: boolean contains(java.util.Iterator,java.lang.Object)>",
    "<hive.parquet.org.codehaus.jackson.map.deser.std.StdDeserializer: java.util.Date _parseDate(hive.parquet.org.codehaus.jackson.JsonParser,hive.parquet.org.codehaus.jackson.map.DeserializationContext)>",
    "<hive.parquet.org.codehaus.jackson.map.util.ClassUtil: java.lang.Class findClass(java.lang.String)>",
    "<hive.parquet.org.codehaus.jackson.map.type.TypeParser: java.lang.Class findClass(java.lang.String,hive.parquet.org.codehaus.jackson.map.type.TypeParser$MyTokenizer)>",
    "<hive.com.google.common.collect.SingletonImmutableList: int indexOf(java.lang.Object)>",
    "<hive.com.google.protobuf.AbstractMessage: int hashFields(int,java.util.Map)>",
    "<hive.com.google.common.collect.SingletonImmutableBiMap: boolean containsValue(java.lang.Object)>",
    "<hive.com.google.common.collect.UsingToStringOrdering: int compare(java.lang.Object,java.lang.Object)>",
    "<hive.parquet.org.codehaus.jackson.map.deser.std.StdKeyDeserializer: java.lang.Object deserializeKey(java.lang.String,hive.parquet.org.codehaus.jackson.map.DeserializationContext)>",
    "<hive.com.google.common.collect.Multisets$AbstractEntry: int hashCode()>",
    "<hive.com.google.common.collect.RegularImmutableMap: void <init>(java.util.Map$Entry[])>",
    "<hive.com.google.common.collect.ReverseNaturalOrdering: int compare(java.lang.Comparable,java.lang.Comparable)>",
    "<hive.com.google.common.base.Present: int hashCode()>",
    "<hive.com.google.common.base.Equivalence$Equals: int doHash(java.lang.Object)>",
    "<hive.parquet.format.DataPageHeaderV2: int hashCode()>",
    "<hive.parquet.org.codehaus.jackson.map.ext.JodaDeserializers$DateTimeDeserializer: org.joda.time.ReadableInstant deserialize(hive.parquet.org.codehaus.jackson.JsonParser,hive.parquet.org.codehaus.jackson.map.DeserializationContext)>",
    "<hive.com.google.protobuf.SmallSortedMap$Entry: int hashCode()>",
    "<hive.com.google.common.collect.HashBiMap: int hash(java.lang.Object)>",
    "<hive.org.apache.calcite.runtime.Utilities: int compare(java.lang.Comparable,java.lang.Comparable)>",
    "<hive.com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)>",
    "<hive.com.google.common.collect.NaturalOrdering: int compare(java.lang.Comparable,java.lang.Comparable)>",
    "<hive.org.apache.calcite.runtime.Utilities: int hash(java.lang.Object)>",
    "<hive.parquet.org.codehaus.jackson.map.deser.SettableAnyProperty: void _throwAsIOE(java.lang.Exception,java.lang.String,java.lang.Object)>",
    "<hive.com.google.common.collect.SingletonImmutableList: boolean contains(java.lang.Object)>",
    "<hive.parquet.format.KeyValue: int hashCode()>",
    "<hive.parquet.org.codehaus.jackson.map.ext.JodaDeserializers$LocalDateDeserializer: org.joda.time.LocalDate deserialize(hive.parquet.org.codehaus.jackson.JsonParser,hive.parquet.org.codehaus.jackson.map.DeserializationContext)>",
    "<hive.parquet.format.FileMetaData: int hashCode()>",
    "<hive.com.google.common.collect.LinkedHashMultimap$ValueSet$1: void remove()>",
    "<hive.parquet.org.codehaus.jackson.impl.ReaderBasedParser: byte[] getBinaryValue(hive.parquet.org.codehaus.jackson.Base64Variant)>",
    "<hive.parquet.org.codehaus.jackson.map.deser.SettableBeanProperty: java.io.IOException _throwAsIOE(java.lang.Exception)>",
    "<hive.parquet.org.codehaus.jackson.map.ext.JodaSerializers$JodaSerializer: java.lang.String printLocalDate(org.joda.time.ReadableInstant)>",
    "<hive.org.apache.calcite.util.ImmutableIntList: boolean equals(java.lang.Object)>",
    "<hive.com.google.common.collect.AbstractMapEntry: int hashCode()>",
    "<hive.com.google.common.collect.RegularImmutableList: boolean equals(java.lang.Object)>",
    "<hive.org.apache.calcite.adapter.clone.ColumnLoader$Kev: int compareTo(hive.org.apache.calcite.adapter.clone.ColumnLoader$Kev)>",
    "<hive.com.google.common.collect.Cut$BelowValue: int hashCode()>",
    "<hive.com.google.common.collect.RegularContiguousSet: hive.com.google.common.collect.ContiguousSet intersection(hive.com.google.common.collect.ContiguousSet)>",
    "<hive.com.google.common.collect.SingletonImmutableBiMap: boolean containsKey(java.lang.Object)>",
    "<hive.com.google.common.collect.LinkedHashMultimap$ValueSet: boolean add(java.lang.Object)>",
    "<hive.com.google.common.collect.ImmutableSet: boolean equals(java.lang.Object)>",
    "<hive.org.apache.calcite.util.mapping.Mappings$FiniteAbstractMapping: boolean equals(java.lang.Object)>",
    "<hive.parquet.org.codehaus.jackson.impl.Utf8StreamParser: byte[] getBinaryValue(hive.parquet.org.codehaus.jackson.Base64Variant)>",
    "<hive.parquet.format.RowGroup: int hashCode()>",
    "<hive.parquet.org.codehaus.jackson.map.ext.JodaDeserializers$PeriodDeserializer: org.joda.time.ReadablePeriod deserialize(hive.parquet.org.codehaus.jackson.JsonParser,hive.parquet.org.codehaus.jackson.map.DeserializationContext)>",
    "<hive.parquet.org.codehaus.jackson.map.deser.SettableBeanProperty: void _throwAsIOE(java.lang.Exception,java.lang.Object)>",
    "<hive.org.apache.calcite.adapter.enumerable.RexImpTable: boolean allSame(java.util.List)>",
    "<hive.com.google.common.collect.SingletonImmutableSet: int hashCode()>",
    "<hive.parquet.org.codehaus.jackson.map.deser.StdDeserializationContext: hive.parquet.org.codehaus.jackson.map.JsonMappingException instantiationException(java.lang.Class,java.lang.Throwable)>",
    "<hive.com.google.protobuf.SmallSortedMap: int binarySearchInArray(java.lang.Comparable)>",
    "<hive.org.apache.calcite.util.Util: int hash(int,java.lang.Object)>",
    "<hive.parquet.org.apache.thrift.transport.TSaslTransport: void sendAndThrowMessage(hive.parquet.org.apache.thrift.transport.TSaslTransport$NegotiationStatus,java.lang.String)>",
    "<hive.parquet.org.codehaus.jackson.map.JsonMappingException: hive.parquet.org.codehaus.jackson.map.JsonMappingException wrapWithPath(java.lang.Throwable,hive.parquet.org.codehaus.jackson.map.JsonMappingException$Reference)>",
    "<hive.parquet.org.codehaus.jackson.map.deser.BasicDeserializerFactory: hive.parquet.org.codehaus.jackson.type.JavaType modifyTypeByAnnotation(hive.parquet.org.codehaus.jackson.map.DeserializationConfig,hive.parquet.org.codehaus.jackson.map.introspect.Annotated,hive.parquet.org.codehaus.jackson.type.JavaType,java.lang.String)>",
    "<hive.com.google.common.collect.SingletonImmutableSet: boolean equals(java.lang.Object)>",
    "<hive.parquet.org.codehaus.jackson.map.util.ClassUtil: void throwAsIAE(java.lang.Throwable)>",
    "<hive.org.apache.calcite.util.Pair: int compare(java.lang.Comparable,java.lang.Comparable)>",
    "<hive.parquet.org.codehaus.jackson.map.ser.StdSerializerProvider: void _serializeValue(hive.parquet.org.codehaus.jackson.JsonGenerator,java.lang.Object)>",
    "<hive.com.google.common.collect.RegularImmutableMap: java.lang.Object get(java.lang.Object)>",
    "<hive.parquet.org.codehaus.jackson.map.ser.StdSerializerProvider: void _serializeValue(hive.parquet.org.codehaus.jackson.JsonGenerator,java.lang.Object,hive.parquet.org.codehaus.jackson.type.JavaType)>",
    "<hive.com.google.common.collect.RegularImmutableSet: boolean contains(java.lang.Object)>",
    "<hive.org.apache.calcite.runtime.FlatLists$Flat2List: int indexOf(java.lang.Object)>",
    "<hive.parquet.org.apache.thrift.TBaseHelper: int compareTo(java.lang.Comparable,java.lang.Comparable)>",
    "<hive.com.google.common.collect.SingletonImmutableList: boolean equals(java.lang.Object)>",
    "<hive.com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException: java.lang.String getMessage()>",
    "<hive.parquet.org.codehaus.jackson.map.ext.JodaDeserializers$LocalDateTimeDeserializer: org.joda.time.LocalDateTime deserialize(hive.parquet.org.codehaus.jackson.JsonParser,hive.parquet.org.codehaus.jackson.map.DeserializationContext)>",
    "<hive.org.apache.calcite.adapter.clone.ColumnLoader$ValueSet: void add(java.lang.Comparable)>",
    "<hive.com.google.common.collect.ImmutableSortedAsList: int indexOf(java.lang.Object)>",
    "<hive.parquet.org.codehaus.jackson.map.ext.JodaDeserializers$JodaDeserializer: org.joda.time.DateTime parseLocal(hive.parquet.org.codehaus.jackson.JsonParser)>",
    "<hive.parquet.format.DataPageHeader: int hashCode()>",
    "<hive.parquet.org.codehaus.jackson.map.deser.SettableBeanProperty$InnerClassProperty: void deserializeAndSet(hive.parquet.org.codehaus.jackson.JsonParser,hive.parquet.org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>",
    "<hive.org.apache.calcite.sql.parser.impl.SqlParserImpl: hive.org.apache.calcite.sql.parser.SqlParseException convertException(java.lang.Throwable)>",
    "<hive.com.google.common.collect.SingletonImmutableList: int hashCode()>",
    "<hive.parquet.org.codehaus.jackson.map.ser.StdSerializerProvider: hive.parquet.org.codehaus.jackson.map.JsonSerializer _createAndCacheUntypedSerializer(java.lang.Class,hive.parquet.org.codehaus.jackson.map.BeanProperty)>",
    "<hive.parquet.org.codehaus.jackson.map.ext.JodaDeserializers$DateMidnightDeserializer: org.joda.time.DateMidnight deserialize(hive.parquet.org.codehaus.jackson.JsonParser,hive.parquet.org.codehaus.jackson.map.DeserializationContext)>",
    "<hive.parquet.org.codehaus.jackson.map.deser.StdDeserializerProvider: hive.parquet.org.codehaus.jackson.map.JsonDeserializer _createAndCache2(hive.parquet.org.codehaus.jackson.map.DeserializationConfig,hive.parquet.org.codehaus.jackson.type.JavaType,hive.parquet.org.codehaus.jackson.map.BeanProperty)>",
    "<hive.com.google.common.collect.ImmutableMapEntrySet: boolean contains(java.lang.Object)>",
    "<hive.com.google.common.base.Present: boolean equals(java.lang.Object)>",
    "<hive.parquet.org.codehaus.jackson.map.ext.DOMSerializer: void <init>()>",
    "<hive.org.apache.calcite.runtime.Utilities: boolean equal(java.lang.Object,java.lang.Object)>",
    "<hive.com.google.protobuf.LiteralByteString: boolean equals(java.lang.Object)>",
    "<hive.org.apache.calcite.avatica.AvaticaStatement: java.sql.ResultSet executeQuery(java.lang.String)>",
    "<hive.parquet.format.ColumnChunk: int hashCode()>",
    "<hive.com.google.common.collect.Lists: int hashCodeImpl(java.util.List)>",
    "<hive.com.google.protobuf.SmallSortedMap$EntrySet: boolean contains(java.lang.Object)>",
    "<hive.com.google.common.util.concurrent.Futures: java.lang.Object newFromConstructor(java.lang.reflect.Constructor,java.lang.Throwable)>",
    "<hive.org.apache.calcite.util.Permutation: boolean equals(java.lang.Object)>",
    "<hive.com.google.common.cache.RemovalNotification: int hashCode()>",
    "<hive.parquet.org.codehaus.jackson.map.jsontype.impl.ClassNameIdResolver: hive.parquet.org.codehaus.jackson.type.JavaType typeFromId(java.lang.String)>",
    "<hive.com.google.common.collect.SingletonImmutableSet: java.lang.String toString()>",
    "<hive.parquet.format.Statistics: int hashCode()>",
    "<hive.com.google.common.collect.SingletonImmutableSet: boolean contains(java.lang.Object)>",
    "<hive.parquet.org.codehaus.jackson.map.util.ClassUtil: java.lang.reflect.Constructor findConstructor(java.lang.Class,boolean)>",
    "<hive.parquet.org.codehaus.jackson.map.ser.StdSerializerProvider: hive.parquet.org.codehaus.jackson.map.JsonSerializer _createAndCacheUntypedSerializer(hive.parquet.org.codehaus.jackson.type.JavaType,hive.parquet.org.codehaus.jackson.map.BeanProperty)>",
    "<hive.org.apache.calcite.util.Util: java.lang.String sepList(java.util.List,java.lang.String)>"
  ]
}