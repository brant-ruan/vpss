{
  "1.2.0": [
    "<org.apache.ranger.authorization.knox.RangerPDPKnoxFilter: void init(javax.servlet.FilterConfig)>",
    "<org.apache.ranger.admin.client.RangerAdminJersey2RESTClient: org.apache.ranger.plugin.util.ServiceTags getServiceTagsIfUpdated(long,long)>",
    "<org.apache.ranger.admin.client.RangerAdminJersey2RESTClient: org.apache.ranger.plugin.util.ServicePolicies getServicePoliciesIfUpdated(long,long)>"
  ],
  "0.7.0": [
    "<org.apache.ranger.authorization.knox.RangerPDPKnoxFilter: void init(javax.servlet.FilterConfig)>",
    "<org.apache.ranger.admin.client.RangerAdminJersey2RESTClient: org.apache.ranger.plugin.util.ServiceTags getServiceTagsIfUpdated(long,long)>",
    "<org.apache.ranger.admin.client.RangerAdminJersey2RESTClient: org.apache.ranger.plugin.util.ServicePolicies getServicePoliciesIfUpdated(long,long)>"
  ],
  "1.0.0": [
    "<org.apache.ranger.authorization.knox.RangerPDPKnoxFilter: void init(javax.servlet.FilterConfig)>",
    "<org.apache.ranger.admin.client.RangerAdminJersey2RESTClient: org.apache.ranger.plugin.util.ServiceTags getServiceTagsIfUpdated(long,long)>",
    "<org.apache.ranger.admin.client.RangerAdminJersey2RESTClient: org.apache.ranger.plugin.util.ServicePolicies getServicePoliciesIfUpdated(long,long)>"
  ],
  "1.1.0": [
    "<org.apache.ranger.authorization.knox.RangerPDPKnoxFilter: void init(javax.servlet.FilterConfig)>",
    "<org.apache.ranger.admin.client.RangerAdminJersey2RESTClient: org.apache.ranger.plugin.util.ServiceTags getServiceTagsIfUpdated(long,long)>",
    "<org.apache.ranger.admin.client.RangerAdminJersey2RESTClient: org.apache.ranger.plugin.util.ServicePolicies getServicePoliciesIfUpdated(long,long)>"
  ],
  "0.7.1": [
    "<org.apache.ranger.authorization.knox.RangerPDPKnoxFilter: void init(javax.servlet.FilterConfig)>",
    "<org.apache.ranger.admin.client.RangerAdminJersey2RESTClient: org.apache.ranger.plugin.util.ServiceTags getServiceTagsIfUpdated(long,long)>",
    "<org.apache.ranger.admin.client.RangerAdminJersey2RESTClient: org.apache.ranger.plugin.util.ServicePolicies getServicePoliciesIfUpdated(long,long)>"
  ]
}