{
  "2.7.2.wso2v2": [
    "<org.apache.hadoop.yarn.webapp.WebApps$Builder: org.apache.hadoop.yarn.webapp.WebApp build(org.apache.hadoop.yarn.webapp.WebApp)>",
    "<org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.ContainerLocalizer: int runLocalization(java.net.InetSocketAddress)>",
    "<org.apache.hadoop.mapreduce.v2.api.impl.pb.client.MRClientProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.server.webproxy.WebAppProxyServer: void doSecureLogin(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.security.NMTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl$TimelineURLConnectionFactory: java.net.HttpURLConnection getHttpURLConnection(java.net.URL)>",
    "<org.apache.hadoop.yarn.client.SCMAdmin: void main(java.lang.String[])>",
    "<org.apache.hadoop.yarn.server.nodemanager.DockerContainerExecutor: boolean containerIsAlive(java.lang.String)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: void serviceInit(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.util.FSDownload$3: java.lang.Void run()>",
    "<org.apache.hadoop.yarn.server.nodemanager.DeletionService$FileDeletionTask: void run()>",
    "<org.apache.hadoop.yarn.server.nodemanager.WindowsSecureContainerExecutor$ElevatedFileSystem: void <init>()>",
    "<org.apache.hadoop.yarn.security.ConfiguredYarnAuthorizer: void init(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.server.nodemanager.containermanager.logaggregation.AppLogAggregatorImpl: void cleanOldLogs()>",
    "<org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.ResourceLocalizationService: java.lang.String getAppFileCachePath(java.lang.String,java.lang.String)>",
    "<org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.sharedcache.SharedCacheUploadService: void serviceInit(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.server.nodemanager.DefaultContainerExecutor$UnixLocalWrapperScriptBuilder: void <init>(org.apache.hadoop.yarn.server.nodemanager.DefaultContainerExecutor,org.apache.hadoop.fs.Path)>",
    "<org.apache.hadoop.yarn.server.nodemanager.NodeManager: void doSecureLogin()>",
    "<org.apache.hadoop.yarn.server.nodemanager.webapp.dao.NodeInfo: void <init>(org.apache.hadoop.yarn.server.nodemanager.Context,org.apache.hadoop.yarn.server.nodemanager.ResourceView)>",
    "<org.apache.hadoop.yarn.server.nodemanager.NodeHealthScriptRunner: boolean shouldRun(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.util.YarnVersionInfo: void <init>()>",
    "<org.apache.hadoop.mapred.LocalDistributedCacheManager: void setup(org.apache.hadoop.mapred.JobConf)>",
    "<org.apache.hadoop.yarn.util.FSDownload: void createDir(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission)>",
    "<org.apache.hadoop.mapreduce.v2.util.MRApps: void parseDistributedCacheArtifacts(org.apache.hadoop.conf.Configuration,java.util.Map,org.apache.hadoop.yarn.api.records.LocalResourceType,java.net.URI[],long[],long[],boolean[])>",
    "<org.apache.hadoop.yarn.util.FSDownload: org.apache.hadoop.fs.Path copy(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)>",
    "<org.apache.hadoop.yarn.util.Apps: void setEnvFromInputString(java.util.Map,java.lang.String,java.lang.String)>",
    "<org.apache.hadoop.yarn.server.nodemanager.LinuxContainerExecutor: void startLocalizer(org.apache.hadoop.fs.Path,java.net.InetSocketAddress,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.yarn.server.nodemanager.LocalDirsHandlerService)>",
    "<org.apache.hadoop.yarn.util.FSDownload: org.apache.hadoop.fs.Path call()>",
    "<org.apache.hadoop.yarn.util.ConverterUtils: org.apache.hadoop.security.token.Token convertFromYarn(org.apache.hadoop.yarn.api.records.Token,java.net.InetSocketAddress)>",
    "<org.apache.hadoop.yarn.server.nodemanager.WindowsSecureContainerExecutor: void startLocalizer(org.apache.hadoop.fs.Path,java.net.InetSocketAddress,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.yarn.server.nodemanager.LocalDirsHandlerService)>",
    "<org.apache.hadoop.yarn.server.nodemanager.DockerContainerExecutor: int launchContainer(org.apache.hadoop.yarn.server.nodemanager.containermanager.container.Container,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,java.lang.String,java.lang.String,org.apache.hadoop.fs.Path,java.util.List,java.util.List)>",
    "<org.apache.hadoop.yarn.server.nodemanager.containermanager.ContainerManagerImpl: org.apache.hadoop.security.UserGroupInformation getRemoteUgi()>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: org.apache.hadoop.security.authentication.client.ConnectionConfigurator newSslConnConfigurator(int,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.security.LocalizerTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.hadoop.yarn.server.nodemanager.LocalDirsHandlerService$MonitoringTimerTask: void <init>(org.apache.hadoop.yarn.server.nodemanager.LocalDirsHandlerService,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.mapred.LocalJobRunner: java.lang.String getStagingAreaDir()>",
    "<org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.ContainerLocalizer: void createDir(org.apache.hadoop.fs.FileContext,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.permission.FsPermission,boolean)>",
    "<org.apache.hadoop.mapreduce.v2.util.MRApps: long[] getFileSizes(org.apache.hadoop.conf.Configuration,java.lang.String)>",
    "<org.apache.hadoop.yarn.client.cli.ApplicationCLI: void main(java.lang.String[])>",
    "<org.apache.hadoop.yarn.server.nodemanager.containermanager.logaggregation.AppLogAggregatorImpl$1: java.lang.Object run()>",
    "<org.apache.hadoop.mapreduce.v2.security.MRDelegationTokenRenewer: org.apache.hadoop.mapreduce.v2.api.MRClientProtocol instantiateHistoryProxy(org.apache.hadoop.conf.Configuration,java.net.InetSocketAddress)>",
    "<org.apache.hadoop.yarn.util.ProcfsBasedProcessTree: void setConf(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.server.nodemanager.DefaultContainerExecutor: void startLocalizer(org.apache.hadoop.fs.Path,java.net.InetSocketAddress,java.lang.String,java.lang.String,java.lang.String,org.apache.hadoop.yarn.server.nodemanager.LocalDirsHandlerService)>",
    "<org.apache.hadoop.yarn.server.nodemanager.DirectoryCollection: java.util.Map testDirs(java.util.List)>",
    "<org.apache.hadoop.yarn.client.api.impl.ContainerManagementProtocolProxy$ContainerManagementProtocolProxyData: org.apache.hadoop.yarn.api.ContainerManagementProtocol newProxy(org.apache.hadoop.yarn.ipc.YarnRPC,java.lang.String,org.apache.hadoop.yarn.api.records.ContainerId,org.apache.hadoop.yarn.api.records.Token)>",
    "<org.apache.hadoop.mapred.LocalJobRunner: void <init>(org.apache.hadoop.mapred.JobConf)>",
    "<org.apache.hadoop.yarn.security.client.RMDelegationTokenIdentifier$Renewer: org.apache.hadoop.yarn.api.ApplicationClientProtocol getRmClient(org.apache.hadoop.security.token.Token,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.server.security.ApplicationACLsManager: void <clinit>()>",
    "<org.apache.hadoop.yarn.server.nodemanager.NodeStatusUpdaterImpl: boolean isTokenKeepAliveEnabled(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.mapred.LocalDistributedCacheManager: void close()>",
    "<org.apache.hadoop.yarn.server.api.impl.pb.client.SCMAdminProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.util.WindowsResourceCalculatorPlugin: java.lang.String getSystemInfoInfoFromShell()>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: void cancelDelegationToken(org.apache.hadoop.security.token.Token)>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogWriter$1: org.apache.hadoop.fs.FSDataOutputStream run()>",
    "<org.apache.hadoop.yarn.server.nodemanager.recovery.NMLeveldbStateStoreService: org.apache.hadoop.fs.Path createStorageDir(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.server.nodemanager.DeletionService: org.apache.hadoop.fs.FileContext getLfs()>",
    "<org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainerLaunch$WindowsShellScriptBuilder: void link(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)>",
    "<org.apache.hadoop.yarn.server.nodemanager.NodeManager: void stopRecoveryStore()>",
    "<org.apache.hadoop.yarn.server.nodemanager.LinuxContainerExecutor: void init()>",
    "<org.apache.hadoop.yarn.server.nodemanager.LinuxContainerExecutor: void verifyUsernamePattern(java.lang.String)>",
    "<org.apache.hadoop.yarn.server.security.BaseNMTokenSecretManager: org.apache.hadoop.yarn.api.records.Token newInstance(byte[],org.apache.hadoop.yarn.security.NMTokenIdentifier)>",
    "<org.apache.hadoop.yarn.util.ProcfsBasedProcessTree: void <clinit>()>",
    "<org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.ResourceLocalizationService: java.lang.String getUserFileCachePath(java.lang.String)>",
    "<org.apache.hadoop.mapred.LocalJobRunner$Job$MapTaskRunnable: void run()>",
    "<org.apache.hadoop.yarn.server.nodemanager.LocalDirsHandlerService: java.lang.String getDisksHealthReport(boolean)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ApplicationClientProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.sharedcache.SharedCacheUploader: void <init>(org.apache.hadoop.yarn.api.records.LocalResource,org.apache.hadoop.fs.Path,java.lang.String,org.apache.hadoop.conf.Configuration,org.apache.hadoop.yarn.server.api.SCMUploaderProtocol)>",
    "<org.apache.hadoop.yarn.server.nodemanager.webapp.ContainerLogsUtils: void checkAccess(java.lang.String,org.apache.hadoop.yarn.server.nodemanager.containermanager.application.Application,org.apache.hadoop.yarn.server.nodemanager.Context)>",
    "<org.apache.hadoop.yarn.server.api.impl.pb.client.SCMUploaderProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.client.cli.QueueCLI: void main(java.lang.String[])>",
    "<org.apache.hadoop.yarn.client.cli.NodeCLI: void main(java.lang.String[])>",
    "<org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainerLaunch: void <clinit>()>",
    "<org.apache.hadoop.yarn.server.webapp.WebServices: org.apache.hadoop.yarn.server.webapp.dao.AppsInfo getApps(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.util.Set,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Set)>",
    "<org.apache.hadoop.mapred.FadvisedFileRegion: void transferSuccessful()>",
    "<org.apache.hadoop.yarn.client.cli.RMAdminCLI: int run(java.lang.String[])>",
    "<org.apache.hadoop.yarn.server.nodemanager.LinuxContainerExecutor: boolean signalContainer(java.lang.String,java.lang.String,org.apache.hadoop.yarn.server.nodemanager.ContainerExecutor$Signal)>",
    "<org.apache.hadoop.mapreduce.v2.jobhistory.JobHistoryUtils: java.lang.String getConfiguredHistoryStagingDirPrefix(org.apache.hadoop.conf.Configuration,java.lang.String)>",
    "<org.apache.hadoop.mapreduce.v2.jobhistory.JobHistoryUtils: org.apache.hadoop.fs.FileContext getDefaultFileContext()>",
    "<org.apache.hadoop.yarn.server.nodemanager.containermanager.logaggregation.LogAggregationService: org.apache.hadoop.fs.FileSystem getFileSystem(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.mapred.LocalJobRunner$Job: void <init>(org.apache.hadoop.mapred.LocalJobRunner,org.apache.hadoop.mapred.JobID,java.lang.String)>",
    "<org.apache.hadoop.yarn.security.AMRMTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.hadoop.yarn.security.ContainerTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.hadoop.yarn.server.webapp.WebServices: org.apache.hadoop.yarn.server.webapp.dao.AppAttemptInfo getAppAttempt(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>",
    "<org.apache.hadoop.yarn.server.nodemanager.containermanager.logaggregation.LogAggregationService: org.apache.hadoop.fs.FileContext getLocalFileContext(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.mapreduce.v2.security.MRDelegationTokenRenewer: long renew(org.apache.hadoop.security.token.Token,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.util.WindowsBasedProcessTree: java.lang.String getAllProcessInfoFromShell()>",
    "<org.apache.hadoop.yarn.server.nodemanager.LocalDirsHandlerService: org.apache.hadoop.fs.Path getPathToRead(java.lang.String,java.util.List)>",
    "<org.apache.hadoop.yarn.client.api.impl.AMRMClientImpl: void updateAMRMToken(org.apache.hadoop.yarn.api.records.Token)>",
    "<org.apache.hadoop.yarn.server.nodemanager.LinuxContainerExecutor: void deleteAsUser(java.lang.String,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path[])>",
    "<org.apache.hadoop.yarn.server.nodemanager.DirectoryCollection: void verifyDirUsingMkdir(java.io.File)>",
    "<org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.ContainerLocalizer: void initDirs(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String,org.apache.hadoop.fs.FileContext,java.util.List)>",
    "<org.apache.hadoop.yarn.security.client.ClientToAMTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.hadoop.yarn.util.RMHAUtils: java.lang.String findActiveRMHAId(org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<org.apache.hadoop.yarn.server.api.impl.pb.client.ResourceManagerAdministrationProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.server.nodemanager.LocalDirsHandlerService: void serviceInit(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.server.nodemanager.LinuxContainerExecutor: int launchContainer(org.apache.hadoop.yarn.server.nodemanager.containermanager.container.Container,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,java.lang.String,java.lang.String,org.apache.hadoop.fs.Path,java.util.List,java.util.List)>",
    "<org.apache.hadoop.yarn.server.nodemanager.webapp.ContainerLogsUtils: java.io.FileInputStream openLogFileForRead(java.lang.String,java.io.File,org.apache.hadoop.yarn.server.nodemanager.Context)>",
    "<org.apache.hadoop.yarn.server.nodemanager.containermanager.ContainerManagerImpl: org.apache.hadoop.yarn.api.records.NodeId buildNodeId(java.net.InetSocketAddress,java.lang.String)>",
    "<org.apache.hadoop.yarn.util.RMHAUtils: java.util.List getRMHAWebappAddresses(org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainersLauncher: void serviceInit(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.server.nodemanager.LinuxContainerExecutor: void mountCgroups(java.util.List,java.lang.String)>",
    "<org.apache.hadoop.yarn.server.webapp.WebServices: org.apache.hadoop.security.UserGroupInformation getUser(javax.servlet.http.HttpServletRequest)>",
    "<org.apache.hadoop.yarn.server.webproxy.WebAppProxy: void serviceStart()>",
    "<org.apache.hadoop.yarn.server.utils.BuilderUtils: org.apache.hadoop.yarn.api.records.Token newContainerToken(org.apache.hadoop.yarn.api.records.NodeId,byte[],org.apache.hadoop.yarn.security.ContainerTokenIdentifier)>",
    "<org.apache.hadoop.yarn.client.AHSProxy: java.lang.Object getProxy(org.apache.hadoop.conf.Configuration,java.lang.Class,java.net.InetSocketAddress)>",
    "<org.apache.hadoop.mapreduce.v2.security.MRDelegationTokenRenewer: void cancel(org.apache.hadoop.security.token.Token,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.client.cli.LogsCLI: int run(java.lang.String[])>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogReader: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: long renewDelegationToken(org.apache.hadoop.security.token.Token)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ApplicationMasterProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.mapred.LocalDistributedCacheManager: void symlink(java.io.File,java.lang.String,java.lang.String)>",
    "<org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainerLaunch: void sanitizeEnv(java.util.Map,org.apache.hadoop.fs.Path,java.util.List,java.util.List,java.util.Map,org.apache.hadoop.fs.Path)>",
    "<org.apache.hadoop.yarn.server.webproxy.WebAppProxy: void serviceInit(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainerLaunch: java.lang.Integer call()>",
    "<org.apache.hadoop.yarn.server.nodemanager.containermanager.logaggregation.AppLogAggregatorImpl$ContainerLogAggregator: java.util.Set doContainerLogAggregation(org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogWriter,boolean)>",
    "<org.apache.hadoop.mapreduce.v2.util.MRApps: void setMRFrameworkClasspath(java.util.Map,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.mapred.LocalJobRunner$Job$ReduceTaskRunnable: void run()>",
    "<org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.ContainerLocalizer: void main(java.lang.String[])>",
    "<org.apache.hadoop.yarn.logaggregation.LogCLIHelpers: int dumpAContainersLogs(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>",
    "<org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.ResourceLocalizationService: org.apache.hadoop.fs.FileContext getLocalFileContext(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.webapp.util.WebAppUtils: java.util.List getProxyHostsAndPortsForAmFilter(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainerLaunch: void cleanupContainer()>",
    "<org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.ResourceLocalizationService: org.apache.hadoop.ipc.Server createServer()>",
    "<org.apache.hadoop.yarn.server.nodemanager.containermanager.logaggregation.AppLogAggregatorImpl: void uploadLogsForContainers(boolean)>",
    "<org.apache.hadoop.yarn.server.nodemanager.NodeManager: void main(java.lang.String[])>",
    "<org.apache.hadoop.mapreduce.v2.api.impl.pb.client.HSClientProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.server.nodemanager.util.CgroupsLCEResourcesHandler: void initializeControllerPaths()>",
    "<org.apache.hadoop.mapred.LocalJobRunner: org.apache.hadoop.security.authorize.AccessControlList getQueueAdmins(java.lang.String)>",
    "<org.apache.hadoop.yarn.server.nodemanager.containermanager.monitor.ContainersMonitorImpl: void serviceInit(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.server.api.impl.pb.client.ResourceTrackerPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.mapreduce.v2.jobhistory.JobHistoryUtils: org.apache.hadoop.fs.Path getPreviousJobHistoryPath(org.apache.hadoop.conf.Configuration,org.apache.hadoop.yarn.api.records.ApplicationAttemptId)>",
    "<org.apache.hadoop.yarn.server.nodemanager.LinuxContainerExecutor: java.lang.String getRunAsUser(java.lang.String)>",
    "<org.apache.hadoop.yarn.client.cli.ClusterCLI: void main(java.lang.String[])>",
    "<org.apache.hadoop.mapreduce.v2.util.MRWebAppUtil: java.lang.String getApplicationWebURLOnJHSWithoutScheme(org.apache.hadoop.conf.Configuration,org.apache.hadoop.yarn.api.records.ApplicationId)>",
    "<org.apache.hadoop.yarn.server.nodemanager.DefaultContainerExecutor: void <init>()>",
    "<org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.ContainerLocalizer: java.util.concurrent.Callable download(org.apache.hadoop.fs.Path,org.apache.hadoop.yarn.api.records.LocalResource,org.apache.hadoop.security.UserGroupInformation)>",
    "<org.apache.hadoop.yarn.server.nodemanager.DefaultContainerExecutor$LocalWrapperScriptBuilder: void <init>(org.apache.hadoop.yarn.server.nodemanager.DefaultContainerExecutor,org.apache.hadoop.fs.Path)>",
    "<org.apache.hadoop.yarn.client.cli.RMAdminCLI: void main(java.lang.String[])>",
    "<org.apache.hadoop.yarn.server.webapp.WebServices: org.apache.hadoop.yarn.server.webapp.dao.AppAttemptsInfo getAppAttempts(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>",
    "<org.apache.hadoop.mapreduce.v2.util.MRApps$1: java.lang.ClassLoader run()>",
    "<org.apache.hadoop.yarn.server.nodemanager.containermanager.ContainerManagerImpl: void serviceStart()>",
    "<org.apache.hadoop.mapred.ShuffleHandler$HttpPipelineFactory: void <init>(org.apache.hadoop.mapred.ShuffleHandler,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.util.RMHAUtils: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState getHAState(org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<org.apache.hadoop.yarn.server.nodemanager.NodeStatusUpdaterImpl: void registerWithRM()>",
    "<org.apache.hadoop.yarn.server.nodemanager.DockerContainerExecutor$LocalWrapperScriptBuilder: void <init>(org.apache.hadoop.yarn.server.nodemanager.DockerContainerExecutor,org.apache.hadoop.fs.Path)>",
    "<org.apache.hadoop.mapred.ShuffleHandler$Shuffle: org.jboss.netty.channel.ChannelFuture sendMapOutput(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.String,java.lang.String,int,org.apache.hadoop.mapred.ShuffleHandler$Shuffle$MapOutputInfo)>",
    "<org.apache.hadoop.mapreduce.v2.util.MRApps: void addToClasspathIfNotJar(org.apache.hadoop.fs.Path[],java.net.URI[],org.apache.hadoop.conf.Configuration,java.util.Map,java.lang.String)>",
    "<org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainerLaunch$WindowsShellScriptBuilder: void lineWithLenCheck(java.lang.String[])>",
    "<org.apache.hadoop.yarn.client.api.impl.YarnClientImpl: boolean isSecurityEnabled()>",
    "<org.apache.hadoop.yarn.webapp.view.HtmlBlock: org.apache.hadoop.security.UserGroupInformation getCallerUGI()>",
    "<org.apache.hadoop.yarn.client.api.impl.YarnClientImpl: java.lang.String getTimelineDelegationTokenRenewer(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.client.ServerProxy: java.lang.Object createRetriableProxy(org.apache.hadoop.conf.Configuration,java.lang.Class,org.apache.hadoop.security.UserGroupInformation,org.apache.hadoop.yarn.ipc.YarnRPC,java.net.InetSocketAddress,org.apache.hadoop.io.retry.RetryPolicy)>",
    "<org.apache.hadoop.yarn.client.ClientRMProxy: org.apache.hadoop.io.Text getTokenService(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String,int)>",
    "<org.apache.hadoop.mapreduce.v2.jobhistory.JobHistoryUtils: java.lang.String getHistoryIntermediateDoneDirForUser(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.logaggregation.LogCLIHelpers: int dumpAllContainersLogs(org.apache.hadoop.yarn.api.records.ApplicationId,java.lang.String,java.io.PrintStream)>",
    "<org.apache.hadoop.yarn.server.webapp.WebServices: org.apache.hadoop.yarn.server.webapp.dao.AppInfo getApp(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>",
    "<org.apache.hadoop.yarn.util.FSDownload: long unpack(java.io.File,java.io.File)>",
    "<org.apache.hadoop.yarn.server.webproxy.WebAppProxyServer: void main(java.lang.String[])>",
    "<org.apache.hadoop.yarn.server.nodemanager.containermanager.logaggregation.LogAggregationService: void initAppAggregator(org.apache.hadoop.yarn.api.records.ApplicationId,java.lang.String,org.apache.hadoop.security.Credentials,org.apache.hadoop.yarn.logaggregation.ContainerLogsRetentionPolicy,java.util.Map,org.apache.hadoop.yarn.api.records.LogAggregationContext)>",
    "<org.apache.hadoop.yarn.server.nodemanager.metrics.NodeManagerMetrics: org.apache.hadoop.yarn.server.nodemanager.metrics.NodeManagerMetrics create(org.apache.hadoop.metrics2.MetricsSystem)>",
    "<org.apache.hadoop.yarn.util.FSDownload: void changePermissions(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)>",
    "<org.apache.hadoop.mapred.LocalJobRunner: void setupChildMapredLocalDirs(org.apache.hadoop.mapred.Task,org.apache.hadoop.mapred.JobConf)>",
    "<org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.ResourceLocalizationService$LocalizerRunner: void writeCredentials(org.apache.hadoop.fs.Path)>",
    "<org.apache.hadoop.yarn.server.nodemanager.DockerContainerExecutor$UnixLocalWrapperScriptBuilder: void <init>(org.apache.hadoop.yarn.server.nodemanager.DockerContainerExecutor,org.apache.hadoop.fs.Path,java.lang.String,java.lang.String)>",
    "<org.apache.hadoop.yarn.server.nodemanager.webapp.NodePage$NodeBlock: void render(org.apache.hadoop.yarn.webapp.view.HtmlBlock$Block)>",
    "<org.apache.hadoop.yarn.server.webapp.WebServices: org.apache.hadoop.yarn.server.webapp.dao.ContainerInfo getContainer(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)>",
    "<org.apache.hadoop.yarn.server.nodemanager.api.impl.pb.client.LocalizationProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.server.nodemanager.NodeManager: void serviceInit(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.mapred.FadvisedChunkedFile: void close()>",
    "<org.apache.hadoop.yarn.server.nodemanager.DefaultContainerExecutor: boolean containerIsAlive(java.lang.String)>",
    "<org.apache.hadoop.yarn.client.RMProxy: java.lang.Object getProxy(org.apache.hadoop.conf.Configuration,java.lang.Class,java.net.InetSocketAddress)>",
    "<org.apache.hadoop.yarn.server.nodemanager.DefaultContainerExecutor: void killContainer(java.lang.String,org.apache.hadoop.yarn.server.nodemanager.ContainerExecutor$Signal)>",
    "<org.apache.hadoop.yarn.server.nodemanager.DockerContainerExecutor: void <init>()>",
    "<org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainerLaunch$WindowsShellScriptBuilder: void command(java.util.List)>",
    "<org.apache.hadoop.yarn.security.AdminACLsManager: void <init>(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.server.security.ApplicationACLsManager: void addApplication(org.apache.hadoop.yarn.api.records.ApplicationId,java.util.Map)>",
    "<org.apache.hadoop.yarn.util.WindowsBasedProcessTree: boolean isAvailable()>",
    "<org.apache.hadoop.yarn.server.nodemanager.DockerContainerExecutor: void killContainer(java.lang.String,org.apache.hadoop.yarn.server.nodemanager.ContainerExecutor$Signal)>",
    "<org.apache.hadoop.yarn.util.YarnVersionInfo: java.lang.String getBuildVersion()>",
    "<org.apache.hadoop.yarn.server.nodemanager.containermanager.monitor.ContainersMonitorImpl$MonitoringThread: java.lang.String formatUsageString(long,long,long,long)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: void putTimelineDataInJSONFile(java.lang.String,java.lang.String)>",
    "<org.apache.hadoop.yarn.server.security.http.RMAuthenticationFilterInitializer: java.util.Map createFilterConfig(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogWriter: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.security.UserGroupInformation)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ApplicationHistoryProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.webapp.util.WebAppUtils: java.lang.String getResolvedAddress(java.net.InetSocketAddress)>",
    "<org.apache.hadoop.yarn.server.nodemanager.containermanager.monitor.ContainerMetrics: org.apache.hadoop.yarn.server.nodemanager.containermanager.monitor.ContainerMetrics forContainer(org.apache.hadoop.metrics2.MetricsSystem,org.apache.hadoop.yarn.api.records.ContainerId,long,long)>",
    "<org.apache.hadoop.yarn.server.nodemanager.containermanager.loghandler.NonAggregatingLogHandler: org.apache.hadoop.fs.FileContext getLocalFileContext(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.client.cli.RMAdminCLI: int getGroups(java.lang.String[])>",
    "<org.apache.hadoop.yarn.util.timeline.TimelineUtils: org.apache.hadoop.io.Text buildTimelineTokenService(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.server.nodemanager.WindowsSecureContainerExecutor: void <init>()>",
    "<org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainerLaunch$UnixShellScriptBuilder: void command(java.util.List)>",
    "<org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.ResourceLocalizationService$PublicLocalizer: void addResource(org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.event.LocalizerResourceRequestEvent)>",
    "<org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.sharedcache.SharedCacheUploader: boolean verifyAccess()>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogValue: java.io.FileInputStream secureOpenFile(java.io.File)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ClientSCMProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.webapp.log.AggregatedLogsBlock: void render(org.apache.hadoop.yarn.webapp.view.HtmlBlock$Block)>",
    "<org.apache.hadoop.yarn.server.webapp.WebServices: org.apache.hadoop.yarn.server.webapp.dao.ContainersInfo getContainers(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>",
    "<org.apache.hadoop.yarn.client.ClientRMProxy: void setAMRMTokenService(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.nodelabels.FileSystemNodeLabelsStore: java.lang.String getDefaultFSNodeLabelsRootDir()>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ContainerManagementProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.server.nodemanager.containermanager.AuxServices: void serviceInit(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.server.nodemanager.NodeManager: void initAndStartRecoveryStore(org.apache.hadoop.conf.Configuration)>"
  ]
}