{
  "3.11.2": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open(com.hotels.bdp.waggledance.client.HiveUgiArgs)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory,int)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.model.MetaStoreMappingFactoryImpl: org.apache.hadoop.hive.metastore.MetaStoreFilterHook loadMetastoreFilterHook(com.hotels.bdp.waggledance.api.model.AbstractMetaStore)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>",
    "<com.hotels.bdp.waggledance.util.SaslHelper: org.apache.hadoop.hive.thrift.HadoopThriftAuthBridge$Server createSaslServer(org.apache.hadoop.hive.conf.HiveConf)>"
  ],
  "3.11.4": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open(com.hotels.bdp.waggledance.client.HiveUgiArgs)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory,int)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.model.MetaStoreMappingFactoryImpl: org.apache.hadoop.hive.metastore.MetaStoreFilterHook loadMetastoreFilterHook(com.hotels.bdp.waggledance.api.model.AbstractMetaStore)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>",
    "<com.hotels.bdp.waggledance.util.SaslHelper: org.apache.hadoop.hive.thrift.HadoopThriftAuthBridge$Server createSaslServer(org.apache.hadoop.hive.conf.HiveConf)>"
  ],
  "3.12.0": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open(com.hotels.bdp.waggledance.client.HiveUgiArgs)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory,int)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.model.MetaStoreMappingFactoryImpl: org.apache.hadoop.hive.metastore.MetaStoreFilterHook loadMetastoreFilterHook(com.hotels.bdp.waggledance.api.model.AbstractMetaStore)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>",
    "<com.hotels.bdp.waggledance.util.SaslHelper: org.apache.hadoop.hive.thrift.HadoopThriftAuthBridge$Server createSaslServer(org.apache.hadoop.hive.conf.HiveConf)>"
  ],
  "3.11.1": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open(com.hotels.bdp.waggledance.client.HiveUgiArgs)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory,int)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.model.MetaStoreMappingFactoryImpl: org.apache.hadoop.hive.metastore.MetaStoreFilterHook loadMetastoreFilterHook(com.hotels.bdp.waggledance.api.model.AbstractMetaStore)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>",
    "<com.hotels.bdp.waggledance.util.SaslHelper: org.apache.hadoop.hive.thrift.HadoopThriftAuthBridge$Server createSaslServer(org.apache.hadoop.hive.conf.HiveConf)>"
  ],
  "3.13.4": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open(com.hotels.bdp.waggledance.client.HiveUgiArgs)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory,int)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.model.MetaStoreMappingFactoryImpl: org.apache.hadoop.hive.metastore.MetaStoreFilterHook loadMetastoreFilterHook(com.hotels.bdp.waggledance.api.model.AbstractMetaStore)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.util.SaslHelper: org.apache.hadoop.hive.thrift.HadoopThriftAuthBridge$Server createSaslServer(org.apache.hadoop.hive.conf.HiveConf)>"
  ],
  "3.13.0": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open(com.hotels.bdp.waggledance.client.HiveUgiArgs)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory,int)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.model.MetaStoreMappingFactoryImpl: org.apache.hadoop.hive.metastore.MetaStoreFilterHook loadMetastoreFilterHook(com.hotels.bdp.waggledance.api.model.AbstractMetaStore)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>",
    "<com.hotels.bdp.waggledance.util.SaslHelper: org.apache.hadoop.hive.thrift.HadoopThriftAuthBridge$Server createSaslServer(org.apache.hadoop.hive.conf.HiveConf)>"
  ],
  "3.11.3": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open(com.hotels.bdp.waggledance.client.HiveUgiArgs)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory,int)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.model.MetaStoreMappingFactoryImpl: org.apache.hadoop.hive.metastore.MetaStoreFilterHook loadMetastoreFilterHook(com.hotels.bdp.waggledance.api.model.AbstractMetaStore)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>",
    "<com.hotels.bdp.waggledance.util.SaslHelper: org.apache.hadoop.hive.thrift.HadoopThriftAuthBridge$Server createSaslServer(org.apache.hadoop.hive.conf.HiveConf)>"
  ],
  "3.11.5": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open(com.hotels.bdp.waggledance.client.HiveUgiArgs)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory,int)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.model.MetaStoreMappingFactoryImpl: org.apache.hadoop.hive.metastore.MetaStoreFilterHook loadMetastoreFilterHook(com.hotels.bdp.waggledance.api.model.AbstractMetaStore)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>",
    "<com.hotels.bdp.waggledance.util.SaslHelper: org.apache.hadoop.hive.thrift.HadoopThriftAuthBridge$Server createSaslServer(org.apache.hadoop.hive.conf.HiveConf)>"
  ],
  "3.13.3": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open(com.hotels.bdp.waggledance.client.HiveUgiArgs)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory,int)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.model.MetaStoreMappingFactoryImpl: org.apache.hadoop.hive.metastore.MetaStoreFilterHook loadMetastoreFilterHook(com.hotels.bdp.waggledance.api.model.AbstractMetaStore)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.util.SaslHelper: org.apache.hadoop.hive.thrift.HadoopThriftAuthBridge$Server createSaslServer(org.apache.hadoop.hive.conf.HiveConf)>"
  ],
  "3.11.0": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open(com.hotels.bdp.waggledance.client.HiveUgiArgs)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory,int)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.model.MetaStoreMappingFactoryImpl: org.apache.hadoop.hive.metastore.MetaStoreFilterHook loadMetastoreFilterHook(com.hotels.bdp.waggledance.api.model.AbstractMetaStore)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>",
    "<com.hotels.bdp.waggledance.util.SaslHelper: org.apache.hadoop.hive.thrift.HadoopThriftAuthBridge$Server createSaslServer(org.apache.hadoop.hive.conf.HiveConf)>"
  ],
  "3.13.2": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open(com.hotels.bdp.waggledance.client.HiveUgiArgs)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory,int)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.model.MetaStoreMappingFactoryImpl: org.apache.hadoop.hive.metastore.MetaStoreFilterHook loadMetastoreFilterHook(com.hotels.bdp.waggledance.api.model.AbstractMetaStore)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>",
    "<com.hotels.bdp.waggledance.util.SaslHelper: org.apache.hadoop.hive.thrift.HadoopThriftAuthBridge$Server createSaslServer(org.apache.hadoop.hive.conf.HiveConf)>"
  ],
  "3.11.6": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open(com.hotels.bdp.waggledance.client.HiveUgiArgs)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory,int)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.model.MetaStoreMappingFactoryImpl: org.apache.hadoop.hive.metastore.MetaStoreFilterHook loadMetastoreFilterHook(com.hotels.bdp.waggledance.api.model.AbstractMetaStore)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>",
    "<com.hotels.bdp.waggledance.util.SaslHelper: org.apache.hadoop.hive.thrift.HadoopThriftAuthBridge$Server createSaslServer(org.apache.hadoop.hive.conf.HiveConf)>"
  ],
  "3.13.1": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open(com.hotels.bdp.waggledance.client.HiveUgiArgs)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory,int)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.model.MetaStoreMappingFactoryImpl: org.apache.hadoop.hive.metastore.MetaStoreFilterHook loadMetastoreFilterHook(com.hotels.bdp.waggledance.api.model.AbstractMetaStore)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>",
    "<com.hotels.bdp.waggledance.util.SaslHelper: org.apache.hadoop.hive.thrift.HadoopThriftAuthBridge$Server createSaslServer(org.apache.hadoop.hive.conf.HiveConf)>"
  ],
  "3.11.7": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open(com.hotels.bdp.waggledance.client.HiveUgiArgs)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory,int)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.model.MetaStoreMappingFactoryImpl: org.apache.hadoop.hive.metastore.MetaStoreFilterHook loadMetastoreFilterHook(com.hotels.bdp.waggledance.api.model.AbstractMetaStore)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>",
    "<com.hotels.bdp.waggledance.util.SaslHelper: org.apache.hadoop.hive.thrift.HadoopThriftAuthBridge$Server createSaslServer(org.apache.hadoop.hive.conf.HiveConf)>"
  ],
  "3.10.1": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: void run(org.springframework.boot.ApplicationArguments)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory,int)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.model.MetaStoreMappingFactoryImpl: org.apache.hadoop.hive.metastore.MetaStoreFilterHook loadMetastoreFilterHook(com.hotels.bdp.waggledance.api.model.AbstractMetaStore)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open()>"
  ],
  "3.9.5": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: void run(org.springframework.boot.ApplicationArguments)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory,int)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.model.MetaStoreMappingFactoryImpl: org.apache.hadoop.hive.metastore.MetaStoreFilterHook loadMetastoreFilterHook(com.hotels.bdp.waggledance.api.model.AbstractMetaStore)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open()>"
  ],
  "3.9.0": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: void run(org.springframework.boot.ApplicationArguments)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory,int)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.model.MetaStoreMappingFactoryImpl: org.apache.hadoop.hive.metastore.MetaStoreFilterHook loadMetastoreFilterHook(com.hotels.bdp.waggledance.api.model.AbstractMetaStore)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open()>"
  ],
  "3.9.9": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: void run(org.springframework.boot.ApplicationArguments)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory,int)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.model.MetaStoreMappingFactoryImpl: org.apache.hadoop.hive.metastore.MetaStoreFilterHook loadMetastoreFilterHook(com.hotels.bdp.waggledance.api.model.AbstractMetaStore)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open()>"
  ],
  "3.10.11": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open(com.hotels.bdp.waggledance.client.HiveUgiArgs)>",
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: void run(org.springframework.boot.ApplicationArguments)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory,int)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.model.MetaStoreMappingFactoryImpl: org.apache.hadoop.hive.metastore.MetaStoreFilterHook loadMetastoreFilterHook(com.hotels.bdp.waggledance.api.model.AbstractMetaStore)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>"
  ],
  "3.10.0": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: void run(org.springframework.boot.ApplicationArguments)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory,int)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.model.MetaStoreMappingFactoryImpl: org.apache.hadoop.hive.metastore.MetaStoreFilterHook loadMetastoreFilterHook(com.hotels.bdp.waggledance.api.model.AbstractMetaStore)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open()>"
  ],
  "3.9.8": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: void run(org.springframework.boot.ApplicationArguments)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory,int)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.model.MetaStoreMappingFactoryImpl: org.apache.hadoop.hive.metastore.MetaStoreFilterHook loadMetastoreFilterHook(com.hotels.bdp.waggledance.api.model.AbstractMetaStore)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open()>"
  ],
  "3.10.9": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open(com.hotels.bdp.waggledance.client.HiveUgiArgs)>",
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: void run(org.springframework.boot.ApplicationArguments)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory,int)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.model.MetaStoreMappingFactoryImpl: org.apache.hadoop.hive.metastore.MetaStoreFilterHook loadMetastoreFilterHook(com.hotels.bdp.waggledance.api.model.AbstractMetaStore)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>"
  ],
  "3.9.3": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: void run(org.springframework.boot.ApplicationArguments)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory,int)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.model.MetaStoreMappingFactoryImpl: org.apache.hadoop.hive.metastore.MetaStoreFilterHook loadMetastoreFilterHook(com.hotels.bdp.waggledance.api.model.AbstractMetaStore)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open()>"
  ],
  "3.10.6": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open(com.hotels.bdp.waggledance.client.HiveUgiArgs)>",
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: void run(org.springframework.boot.ApplicationArguments)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory,int)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.model.MetaStoreMappingFactoryImpl: org.apache.hadoop.hive.metastore.MetaStoreFilterHook loadMetastoreFilterHook(com.hotels.bdp.waggledance.api.model.AbstractMetaStore)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>"
  ],
  "3.10.5": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open(com.hotels.bdp.waggledance.client.HiveUgiArgs)>",
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: void run(org.springframework.boot.ApplicationArguments)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory,int)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.model.MetaStoreMappingFactoryImpl: org.apache.hadoop.hive.metastore.MetaStoreFilterHook loadMetastoreFilterHook(com.hotels.bdp.waggledance.api.model.AbstractMetaStore)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>"
  ],
  "3.9.2": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: void run(org.springframework.boot.ApplicationArguments)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory,int)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.model.MetaStoreMappingFactoryImpl: org.apache.hadoop.hive.metastore.MetaStoreFilterHook loadMetastoreFilterHook(com.hotels.bdp.waggledance.api.model.AbstractMetaStore)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open()>"
  ],
  "3.10.12": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open(com.hotels.bdp.waggledance.client.HiveUgiArgs)>",
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: void run(org.springframework.boot.ApplicationArguments)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory,int)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.model.MetaStoreMappingFactoryImpl: org.apache.hadoop.hive.metastore.MetaStoreFilterHook loadMetastoreFilterHook(com.hotels.bdp.waggledance.api.model.AbstractMetaStore)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>"
  ],
  "3.9.4": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: void run(org.springframework.boot.ApplicationArguments)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory,int)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.model.MetaStoreMappingFactoryImpl: org.apache.hadoop.hive.metastore.MetaStoreFilterHook loadMetastoreFilterHook(com.hotels.bdp.waggledance.api.model.AbstractMetaStore)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open()>"
  ],
  "3.10.14": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open(com.hotels.bdp.waggledance.client.HiveUgiArgs)>",
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: void run(org.springframework.boot.ApplicationArguments)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory,int)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.model.MetaStoreMappingFactoryImpl: org.apache.hadoop.hive.metastore.MetaStoreFilterHook loadMetastoreFilterHook(com.hotels.bdp.waggledance.api.model.AbstractMetaStore)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>"
  ],
  "3.10.10": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open(com.hotels.bdp.waggledance.client.HiveUgiArgs)>",
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: void run(org.springframework.boot.ApplicationArguments)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory,int)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.model.MetaStoreMappingFactoryImpl: org.apache.hadoop.hive.metastore.MetaStoreFilterHook loadMetastoreFilterHook(com.hotels.bdp.waggledance.api.model.AbstractMetaStore)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>"
  ],
  "3.9.1": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: void run(org.springframework.boot.ApplicationArguments)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory,int)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.model.MetaStoreMappingFactoryImpl: org.apache.hadoop.hive.metastore.MetaStoreFilterHook loadMetastoreFilterHook(com.hotels.bdp.waggledance.api.model.AbstractMetaStore)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open()>"
  ],
  "3.10.8": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open(com.hotels.bdp.waggledance.client.HiveUgiArgs)>",
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: void run(org.springframework.boot.ApplicationArguments)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory,int)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.model.MetaStoreMappingFactoryImpl: org.apache.hadoop.hive.metastore.MetaStoreFilterHook loadMetastoreFilterHook(com.hotels.bdp.waggledance.api.model.AbstractMetaStore)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>"
  ],
  "3.10.2": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open(com.hotels.bdp.waggledance.client.HiveUgiArgs)>",
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: void run(org.springframework.boot.ApplicationArguments)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory,int)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.model.MetaStoreMappingFactoryImpl: org.apache.hadoop.hive.metastore.MetaStoreFilterHook loadMetastoreFilterHook(com.hotels.bdp.waggledance.api.model.AbstractMetaStore)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>"
  ],
  "3.9.10": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: void run(org.springframework.boot.ApplicationArguments)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory,int)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.model.MetaStoreMappingFactoryImpl: org.apache.hadoop.hive.metastore.MetaStoreFilterHook loadMetastoreFilterHook(com.hotels.bdp.waggledance.api.model.AbstractMetaStore)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open()>"
  ],
  "3.10.4": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open(com.hotels.bdp.waggledance.client.HiveUgiArgs)>",
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: void run(org.springframework.boot.ApplicationArguments)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory,int)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.model.MetaStoreMappingFactoryImpl: org.apache.hadoop.hive.metastore.MetaStoreFilterHook loadMetastoreFilterHook(com.hotels.bdp.waggledance.api.model.AbstractMetaStore)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>"
  ],
  "3.10.7": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open(com.hotels.bdp.waggledance.client.HiveUgiArgs)>",
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: void run(org.springframework.boot.ApplicationArguments)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory,int)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.model.MetaStoreMappingFactoryImpl: org.apache.hadoop.hive.metastore.MetaStoreFilterHook loadMetastoreFilterHook(com.hotels.bdp.waggledance.api.model.AbstractMetaStore)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>"
  ],
  "3.10.3": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open(com.hotels.bdp.waggledance.client.HiveUgiArgs)>",
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: void run(org.springframework.boot.ApplicationArguments)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory,int)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.model.MetaStoreMappingFactoryImpl: org.apache.hadoop.hive.metastore.MetaStoreFilterHook loadMetastoreFilterHook(com.hotels.bdp.waggledance.api.model.AbstractMetaStore)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>"
  ],
  "2.2.0": [
    "<com.hotels.bdp.waggledance.mapping.service.impl.SimpleFederationStatusService: org.apache.hadoop.hive.conf.HiveConf newHiveConf(java.lang.String)>"
  ],
  "2.1.0": [
    "<com.hotels.bdp.waggledance.mapping.service.impl.SimpleFederationStatusService: org.apache.hadoop.hive.conf.HiveConf newHiveConf(java.lang.String)>"
  ],
  "2.2.1": [
    "<com.hotels.bdp.waggledance.mapping.service.impl.SimpleFederationStatusService: org.apache.hadoop.hive.conf.HiveConf newHiveConf(java.lang.String)>"
  ],
  "3.8.0": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: void run(org.springframework.boot.ApplicationArguments)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory,int)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open()>"
  ],
  "3.7.0": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: void run(org.springframework.boot.ApplicationArguments)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory,int)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open()>"
  ],
  "3.2.0": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: void run(org.springframework.boot.ApplicationArguments)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory,int)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open()>"
  ],
  "3.3.1": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: void run(org.springframework.boot.ApplicationArguments)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory,int)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open()>"
  ],
  "3.4.0": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: void run(org.springframework.boot.ApplicationArguments)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory,int)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open()>"
  ],
  "3.0.0": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory)>",
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: void run(org.springframework.boot.ApplicationArguments)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open()>"
  ],
  "3.1.2": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory)>",
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: void run(org.springframework.boot.ApplicationArguments)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open()>"
  ],
  "3.3.2": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: void run(org.springframework.boot.ApplicationArguments)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory,int)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open()>"
  ],
  "2.4.0": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: void run(org.springframework.boot.ApplicationArguments)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClient: void <init>(org.apache.hadoop.hive.conf.HiveConf)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClient: void open()>"
  ],
  "3.5.0": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: void run(org.springframework.boot.ApplicationArguments)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory,int)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open()>"
  ],
  "3.6.0": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: void run(org.springframework.boot.ApplicationArguments)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory,int)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open()>"
  ],
  "2.4.1": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: void run(org.springframework.boot.ApplicationArguments)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClient: void <init>(org.apache.hadoop.hive.conf.HiveConf)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClient: void open()>"
  ],
  "2.4.2": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: void run(org.springframework.boot.ApplicationArguments)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClient: void <init>(org.apache.hadoop.hive.conf.HiveConf)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClient: void open()>"
  ],
  "3.3.0": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: void run(org.springframework.boot.ApplicationArguments)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory,int)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open()>"
  ],
  "3.1.1": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory)>",
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: void run(org.springframework.boot.ApplicationArguments)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open()>"
  ],
  "3.1.0": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void <init>(org.apache.hadoop.hive.conf.HiveConf,com.hotels.bdp.waggledance.client.compatibility.HiveCompatibleThriftHiveMetastoreIfaceFactory)>",
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: void run(org.springframework.boot.ApplicationArguments)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.StaticDatabaseMappingService: void validateFederatedMetastoreDatabases(java.util.List,com.hotels.bdp.waggledance.mapping.model.MetaStoreMapping)>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClientManager: void open()>"
  ],
  "2.3.3": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: void run(org.springframework.boot.ApplicationArguments)>",
    "<com.hotels.bdp.waggledance.client.HiveConfFactory: org.apache.hadoop.hive.conf.HiveConf newInstance()>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClient: void <init>(org.apache.hadoop.hive.conf.HiveConf)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClient: void open()>"
  ],
  "2.3.2": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: void run(org.springframework.boot.ApplicationArguments)>",
    "<com.hotels.bdp.waggledance.client.HiveConfFactory: org.apache.hadoop.hive.conf.HiveConf newInstance()>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClient: void <init>(org.apache.hadoop.hive.conf.HiveConf)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClient: void open()>"
  ],
  "2.3.5": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: void run(org.springframework.boot.ApplicationArguments)>",
    "<com.hotels.bdp.waggledance.client.HiveConfFactory: org.apache.hadoop.hive.conf.HiveConf newInstance()>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClient: void <init>(org.apache.hadoop.hive.conf.HiveConf)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClient: void open()>"
  ],
  "2.3.4": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: void run(org.springframework.boot.ApplicationArguments)>",
    "<com.hotels.bdp.waggledance.client.HiveConfFactory: org.apache.hadoop.hive.conf.HiveConf newInstance()>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClient: void <init>(org.apache.hadoop.hive.conf.HiveConf)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClient: void open()>"
  ],
  "2.3.7": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: void run(org.springframework.boot.ApplicationArguments)>",
    "<com.hotels.bdp.waggledance.client.HiveConfFactory: org.apache.hadoop.hive.conf.HiveConf newInstance()>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClient: void <init>(org.apache.hadoop.hive.conf.HiveConf)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClient: void open()>"
  ],
  "2.3.6": [
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: org.apache.thrift.transport.TServerSocket createServerSocket(boolean,int)>",
    "<com.hotels.bdp.waggledance.server.MetaStoreProxyServer: void run(org.springframework.boot.ApplicationArguments)>",
    "<com.hotels.bdp.waggledance.client.HiveConfFactory: org.apache.hadoop.hive.conf.HiveConf newInstance()>",
    "<com.hotels.bdp.waggledance.context.CommonBeans: org.apache.hadoop.hive.conf.HiveConf hiveConf(com.hotels.bdp.waggledance.conf.WaggleDanceConfiguration)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClient: void <init>(org.apache.hadoop.hive.conf.HiveConf)>",
    "<com.hotels.bdp.waggledance.mapping.service.impl.YamlFederatedMetaStoreStorage: java.util.List getAll()>",
    "<com.hotels.bdp.waggledance.server.TSetIpAddressProcessorFactory: org.apache.hadoop.hive.metastore.IHMSHandler newRetryingHMSHandler(org.apache.hadoop.hive.metastore.IHMSHandler,org.apache.hadoop.hive.conf.HiveConf,boolean)>",
    "<com.hotels.bdp.waggledance.client.ThriftMetastoreClient: void open()>"
  ]
}