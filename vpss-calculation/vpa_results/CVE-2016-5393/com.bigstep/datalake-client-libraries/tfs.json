{
  "1.3": [
    "<com.bigstep.datalake.JsonUtil: org.apache.hadoop.fs.permission.AclStatus toAclStatus(java.util.Map)>",
    "<com.bigstep.datalake.JsonUtil: java.lang.String toJsonString(org.apache.hadoop.fs.MD5MD5CRC32FileChecksum)>",
    "<com.bigstep.datalake.DLFileSystem: void initialize(java.net.URI,org.apache.hadoop.conf.Configuration)>",
    "<com.bigstep.datalake.DLFileSystem: java.net.InetSocketAddress[] resolveNNAddr()>",
    "<com.bigstep.datalake.DLFileSystem: java.net.URI canonicalizeUri(java.net.URI)>",
    "<com.bigstep.datalake.TokenAspect$TokenManager: com.bigstep.datalake.TokenAspect$TokenManagementDelegator getInstance(org.apache.hadoop.security.token.Token,org.apache.hadoop.conf.Configuration)>"
  ],
  "1.1": [
    "<com.bigstep.datalake.JsonUtil: org.apache.hadoop.fs.permission.AclStatus toAclStatus(java.util.Map)>",
    "<com.bigstep.datalake.JsonUtil: java.lang.String toJsonString(org.apache.hadoop.fs.MD5MD5CRC32FileChecksum)>",
    "<com.bigstep.datalake.DLFileSystem: void initialize(java.net.URI,org.apache.hadoop.conf.Configuration)>",
    "<com.bigstep.datalake.DLFileSystem: java.net.InetSocketAddress[] resolveNNAddr()>",
    "<com.bigstep.datalake.DLFileSystem: java.net.URI canonicalizeUri(java.net.URI)>",
    "<com.bigstep.datalake.TokenAspect$TokenManager: com.bigstep.datalake.TokenAspect$TokenManagementDelegator getInstance(org.apache.hadoop.security.token.Token,org.apache.hadoop.conf.Configuration)>"
  ],
  "1.4": [
    "<com.bigstep.datalake.JsonUtil: org.apache.hadoop.fs.permission.AclStatus toAclStatus(java.util.Map)>",
    "<com.bigstep.datalake.JsonUtil: java.lang.String toJsonString(org.apache.hadoop.fs.MD5MD5CRC32FileChecksum)>",
    "<com.bigstep.datalake.DLFileSystem: void initialize(java.net.URI,org.apache.hadoop.conf.Configuration)>",
    "<com.bigstep.datalake.DLFileSystem: java.net.InetSocketAddress[] resolveNNAddr()>",
    "<com.bigstep.datalake.DLFileSystem: java.net.URI canonicalizeUri(java.net.URI)>",
    "<com.bigstep.datalake.TokenAspect$TokenManager: com.bigstep.datalake.TokenAspect$TokenManagementDelegator getInstance(org.apache.hadoop.security.token.Token,org.apache.hadoop.conf.Configuration)>"
  ]
}