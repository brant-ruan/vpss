{
  "1.6.1": [
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataInputStream getDataInputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,java.lang.String,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.carbondata.core.util.CarbonUtil: void deleteFoldersAndFiles(org.apache.carbondata.core.datastore.filesystem.CarbonFile[])>",
    "<org.apache.carbondata.core.util.CarbonUtil: java.util.HashMap getDataSizeAndIndexSize(java.lang.String,java.lang.String)>",
    "<org.apache.carbondata.core.datastore.block.TableBlockInfo: long getBlockLength()>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,long,short)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: short getDefaultReplication(java.lang.String)>",
    "<org.apache.carbondata.core.datastore.impl.FileFactory: void createDirectoryAndSetPermission(java.lang.String,org.apache.hadoop.fs.permission.FsPermission)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean mkdirs(java.lang.String)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,java.lang.String)>",
    "<org.apache.carbondata.core.datastore.impl.FileFactory: void truncateFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,long)>",
    "<org.apache.carbondata.core.util.CarbonUtil: void deleteFoldersAndFilesSilent(org.apache.carbondata.core.datastore.filesystem.CarbonFile[])>",
    "<org.apache.carbondata.core.util.CarbonUtil: void deleteFoldersAndFiles(java.io.File[])>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean createNewFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,boolean,org.apache.hadoop.fs.permission.FsPermission)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,long)>",
    "<org.apache.carbondata.core.datastore.filesystem.AlluxioCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,boolean)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean createNewLockFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean deleteFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean createNewFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: void <init>(java.lang.String,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.impl.DFSFileReaderImpl: org.apache.hadoop.fs.FSDataInputStream updateCache(java.lang.String)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean setReplication(java.lang.String,short)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStreamUsingAppend(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.filesystem.S3CarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,boolean)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean isFileExist(java.lang.String)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,boolean)>",
    "<org.apache.carbondata.core.datastore.impl.FileFactory: org.apache.hadoop.fs.FileSystem getFileSystem(org.apache.hadoop.fs.Path)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean isFileExist(java.lang.String,boolean)>",
    "<org.apache.carbondata.core.datastore.impl.FileFactory: long getDirectorySize(java.lang.String)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataInputStream getDataInputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,long)>"
  ],
  "1.3.0": [
    "<org.apache.carbondata.core.util.CarbonUtil: void deleteFoldersAndFiles(org.apache.carbondata.core.datastore.filesystem.CarbonFile[])>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean mkdirs(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.block.TableBlockInfo: long getBlockLength()>",
    "<org.apache.carbondata.core.datastore.impl.DFSFileHolderImpl: org.apache.hadoop.fs.FSDataInputStream updateCache(java.lang.String)>",
    "<org.apache.carbondata.core.datastore.impl.FileFactory: void createDirectoryAndSetPermission(java.lang.String,org.apache.hadoop.fs.permission.FsPermission)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,java.lang.String)>",
    "<org.apache.carbondata.core.datastore.impl.FileFactory: void truncateFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,long)>",
    "<org.apache.carbondata.core.util.CarbonUtil: void deleteFoldersAndFilesSilent(org.apache.carbondata.core.datastore.filesystem.CarbonFile[])>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean isFileExist(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.util.CarbonUtil: void deleteFoldersAndFiles(java.io.File[])>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean createNewFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,boolean,org.apache.hadoop.fs.permission.FsPermission)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,long)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean createNewLockFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean createNewFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean deleteFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: void <init>(java.lang.String,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStreamUsingAppend(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean isFileExist(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,boolean)>",
    "<org.apache.carbondata.core.indexstore.blockletindex.BlockletDataMapFactory: java.util.List toDistributable(java.lang.String)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,boolean)>",
    "<org.apache.carbondata.core.datastore.impl.FileFactory: org.apache.hadoop.fs.FileSystem getFileSystem(org.apache.hadoop.fs.Path)>",
    "<org.apache.carbondata.core.datastore.impl.FileFactory: long getDirectorySize(java.lang.String)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataInputStream getDataInputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,long)>",
    "<org.apache.carbondata.core.util.CarbonUtil: java.util.HashMap getDataSizeAndIndexSize(org.apache.carbondata.core.util.path.CarbonTablePath,java.lang.String)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataInputStream getDataInputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,java.lang.String)>"
  ],
  "1.3.1": [
    "<org.apache.carbondata.core.util.CarbonUtil: void deleteFoldersAndFiles(org.apache.carbondata.core.datastore.filesystem.CarbonFile[])>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean mkdirs(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.block.TableBlockInfo: long getBlockLength()>",
    "<org.apache.carbondata.core.datastore.impl.DFSFileHolderImpl: org.apache.hadoop.fs.FSDataInputStream updateCache(java.lang.String)>",
    "<org.apache.carbondata.core.datastore.impl.FileFactory: void createDirectoryAndSetPermission(java.lang.String,org.apache.hadoop.fs.permission.FsPermission)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,java.lang.String)>",
    "<org.apache.carbondata.core.datastore.impl.FileFactory: void truncateFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,long)>",
    "<org.apache.carbondata.core.util.CarbonUtil: void deleteFoldersAndFilesSilent(org.apache.carbondata.core.datastore.filesystem.CarbonFile[])>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean isFileExist(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.util.CarbonUtil: void deleteFoldersAndFiles(java.io.File[])>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean createNewFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,boolean,org.apache.hadoop.fs.permission.FsPermission)>",
    "<org.apache.carbondata.core.indexstore.blockletindex.BlockletDataMapFactory: java.util.List toDistributable(org.apache.carbondata.core.datamap.Segment)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,long)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean createNewLockFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean createNewFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean deleteFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: void <init>(java.lang.String,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStreamUsingAppend(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean isFileExist(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,boolean)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,boolean)>",
    "<org.apache.carbondata.core.datastore.impl.FileFactory: org.apache.hadoop.fs.FileSystem getFileSystem(org.apache.hadoop.fs.Path)>",
    "<org.apache.carbondata.core.datastore.impl.FileFactory: long getDirectorySize(java.lang.String)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataInputStream getDataInputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,long)>",
    "<org.apache.carbondata.core.util.CarbonUtil: java.util.HashMap getDataSizeAndIndexSize(org.apache.carbondata.core.util.path.CarbonTablePath,java.lang.String)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataInputStream getDataInputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,java.lang.String)>"
  ],
  "1.6.0": [
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataInputStream getDataInputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,java.lang.String,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.carbondata.core.util.CarbonUtil: void deleteFoldersAndFiles(org.apache.carbondata.core.datastore.filesystem.CarbonFile[])>",
    "<org.apache.carbondata.core.util.CarbonUtil: java.util.HashMap getDataSizeAndIndexSize(java.lang.String,java.lang.String)>",
    "<org.apache.carbondata.core.datastore.block.TableBlockInfo: long getBlockLength()>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,long,short)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: short getDefaultReplication(java.lang.String)>",
    "<org.apache.carbondata.core.datastore.impl.FileFactory: void createDirectoryAndSetPermission(java.lang.String,org.apache.hadoop.fs.permission.FsPermission)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean mkdirs(java.lang.String)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,java.lang.String)>",
    "<org.apache.carbondata.core.datastore.impl.FileFactory: void truncateFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,long)>",
    "<org.apache.carbondata.core.util.CarbonUtil: void deleteFoldersAndFilesSilent(org.apache.carbondata.core.datastore.filesystem.CarbonFile[])>",
    "<org.apache.carbondata.core.util.CarbonUtil: void deleteFoldersAndFiles(java.io.File[])>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean createNewFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,boolean,org.apache.hadoop.fs.permission.FsPermission)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,long)>",
    "<org.apache.carbondata.core.datastore.filesystem.AlluxioCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,boolean)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean createNewLockFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean deleteFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean createNewFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: void <init>(java.lang.String,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.impl.DFSFileReaderImpl: org.apache.hadoop.fs.FSDataInputStream updateCache(java.lang.String)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean setReplication(java.lang.String,short)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStreamUsingAppend(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.filesystem.S3CarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,boolean)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean isFileExist(java.lang.String)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,boolean)>",
    "<org.apache.carbondata.core.datastore.impl.FileFactory: org.apache.hadoop.fs.FileSystem getFileSystem(org.apache.hadoop.fs.Path)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean isFileExist(java.lang.String,boolean)>",
    "<org.apache.carbondata.core.datastore.impl.FileFactory: long getDirectorySize(java.lang.String)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataInputStream getDataInputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,long)>"
  ],
  "1.5.0": [
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataInputStream getDataInputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,java.lang.String,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.carbondata.core.util.CarbonUtil: void deleteFoldersAndFiles(org.apache.carbondata.core.datastore.filesystem.CarbonFile[])>",
    "<org.apache.carbondata.core.util.CarbonUtil: java.util.HashMap getDataSizeAndIndexSize(java.lang.String,java.lang.String)>",
    "<org.apache.carbondata.core.datastore.block.TableBlockInfo: long getBlockLength()>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,long,short)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: short getDefaultReplication(java.lang.String)>",
    "<org.apache.carbondata.core.datastore.impl.FileFactory: void createDirectoryAndSetPermission(java.lang.String,org.apache.hadoop.fs.permission.FsPermission)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean mkdirs(java.lang.String)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,java.lang.String)>",
    "<org.apache.carbondata.core.datastore.impl.FileFactory: void truncateFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,long)>",
    "<org.apache.carbondata.core.util.CarbonUtil: void deleteFoldersAndFilesSilent(org.apache.carbondata.core.datastore.filesystem.CarbonFile[])>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean isFileExist(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.util.CarbonUtil: void deleteFoldersAndFiles(java.io.File[])>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean createNewFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,boolean,org.apache.hadoop.fs.permission.FsPermission)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,long)>",
    "<org.apache.carbondata.core.datastore.impl.FileFactory: long getDirectorySize(java.lang.String)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean createNewLockFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean deleteFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean createNewFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: void <init>(java.lang.String,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.impl.DFSFileReaderImpl: org.apache.hadoop.fs.FSDataInputStream updateCache(java.lang.String)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean setReplication(java.lang.String,short)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStreamUsingAppend(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean isFileExist(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,boolean)>",
    "<org.apache.carbondata.core.datastore.filesystem.S3CarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,boolean)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,boolean)>",
    "<org.apache.carbondata.core.datastore.impl.FileFactory: org.apache.hadoop.fs.FileSystem getFileSystem(org.apache.hadoop.fs.Path)>",
    "<org.apache.carbondata.core.indexstore.blockletindex.BlockletDataMapFactory: java.util.List toDistributable(org.apache.carbondata.core.datamap.Segment)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataInputStream getDataInputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,long)>"
  ],
  "1.4.0": [
    "<org.apache.carbondata.core.util.CarbonUtil: void deleteFoldersAndFiles(org.apache.carbondata.core.datastore.filesystem.CarbonFile[])>",
    "<org.apache.carbondata.core.util.CarbonUtil: java.util.HashMap getDataSizeAndIndexSize(java.lang.String,java.lang.String)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean mkdirs(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.block.TableBlockInfo: long getBlockLength()>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,long,short)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: short getDefaultReplication(java.lang.String)>",
    "<org.apache.carbondata.core.datastore.impl.FileFactory: void createDirectoryAndSetPermission(java.lang.String,org.apache.hadoop.fs.permission.FsPermission)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,java.lang.String)>",
    "<org.apache.carbondata.core.datastore.impl.FileFactory: void truncateFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,long)>",
    "<org.apache.carbondata.core.util.CarbonUtil: void deleteFoldersAndFilesSilent(org.apache.carbondata.core.datastore.filesystem.CarbonFile[])>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean isFileExist(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.util.CarbonUtil: void deleteFoldersAndFiles(java.io.File[])>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean createNewFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,boolean,org.apache.hadoop.fs.permission.FsPermission)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,long)>",
    "<org.apache.carbondata.core.datastore.impl.FileFactory: long getDirectorySize(java.lang.String)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean createNewLockFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean createNewFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean deleteFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: void <init>(java.lang.String,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.impl.DFSFileReaderImpl: org.apache.hadoop.fs.FSDataInputStream updateCache(java.lang.String)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean setReplication(java.lang.String,short)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStreamUsingAppend(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean isFileExist(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,boolean)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,boolean)>",
    "<org.apache.carbondata.core.datastore.impl.FileFactory: org.apache.hadoop.fs.FileSystem getFileSystem(org.apache.hadoop.fs.Path)>",
    "<org.apache.carbondata.core.indexstore.blockletindex.BlockletDataMapFactory: java.util.List toDistributable(org.apache.carbondata.core.datamap.Segment)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataInputStream getDataInputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,long)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataInputStream getDataInputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,java.lang.String)>"
  ],
  "1.5.2": [
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataInputStream getDataInputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,java.lang.String,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.carbondata.core.util.CarbonUtil: void deleteFoldersAndFiles(org.apache.carbondata.core.datastore.filesystem.CarbonFile[])>",
    "<org.apache.carbondata.core.util.CarbonUtil: java.util.HashMap getDataSizeAndIndexSize(java.lang.String,java.lang.String)>",
    "<org.apache.carbondata.core.datastore.block.TableBlockInfo: long getBlockLength()>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,long,short)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: short getDefaultReplication(java.lang.String)>",
    "<org.apache.carbondata.core.datastore.impl.FileFactory: void createDirectoryAndSetPermission(java.lang.String,org.apache.hadoop.fs.permission.FsPermission)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean mkdirs(java.lang.String)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,java.lang.String)>",
    "<org.apache.carbondata.core.datastore.impl.FileFactory: void truncateFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,long)>",
    "<org.apache.carbondata.core.util.CarbonUtil: void deleteFoldersAndFilesSilent(org.apache.carbondata.core.datastore.filesystem.CarbonFile[])>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean isFileExist(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.util.CarbonUtil: void deleteFoldersAndFiles(java.io.File[])>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean createNewFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,boolean,org.apache.hadoop.fs.permission.FsPermission)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,long)>",
    "<org.apache.carbondata.core.datastore.impl.FileFactory: long getDirectorySize(java.lang.String)>",
    "<org.apache.carbondata.core.datastore.filesystem.AlluxioCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,boolean)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean createNewLockFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean deleteFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean createNewFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: void <init>(java.lang.String,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.impl.DFSFileReaderImpl: org.apache.hadoop.fs.FSDataInputStream updateCache(java.lang.String)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean setReplication(java.lang.String,short)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStreamUsingAppend(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean isFileExist(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,boolean)>",
    "<org.apache.carbondata.core.datastore.filesystem.S3CarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,boolean)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,boolean)>",
    "<org.apache.carbondata.core.datastore.impl.FileFactory: org.apache.hadoop.fs.FileSystem getFileSystem(org.apache.hadoop.fs.Path)>",
    "<org.apache.carbondata.core.indexstore.blockletindex.BlockletDataMapFactory: java.util.List toDistributable(org.apache.carbondata.core.datamap.Segment)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataInputStream getDataInputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,long)>"
  ],
  "1.5.4": [
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataInputStream getDataInputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,java.lang.String,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.carbondata.core.util.CarbonUtil: void deleteFoldersAndFiles(org.apache.carbondata.core.datastore.filesystem.CarbonFile[])>",
    "<org.apache.carbondata.core.util.CarbonUtil: java.util.HashMap getDataSizeAndIndexSize(java.lang.String,java.lang.String)>",
    "<org.apache.carbondata.core.datastore.block.TableBlockInfo: long getBlockLength()>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,long,short)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: short getDefaultReplication(java.lang.String)>",
    "<org.apache.carbondata.core.datastore.impl.FileFactory: void createDirectoryAndSetPermission(java.lang.String,org.apache.hadoop.fs.permission.FsPermission)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean mkdirs(java.lang.String)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,java.lang.String)>",
    "<org.apache.carbondata.core.datastore.impl.FileFactory: void truncateFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,long)>",
    "<org.apache.carbondata.core.util.CarbonUtil: void deleteFoldersAndFilesSilent(org.apache.carbondata.core.datastore.filesystem.CarbonFile[])>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean isFileExist(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.util.CarbonUtil: void deleteFoldersAndFiles(java.io.File[])>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean createNewFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,boolean,org.apache.hadoop.fs.permission.FsPermission)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,long)>",
    "<org.apache.carbondata.core.datastore.impl.FileFactory: long getDirectorySize(java.lang.String)>",
    "<org.apache.carbondata.core.datastore.filesystem.AlluxioCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,boolean)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean createNewLockFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean deleteFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean createNewFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: void <init>(java.lang.String,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.impl.DFSFileReaderImpl: org.apache.hadoop.fs.FSDataInputStream updateCache(java.lang.String)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean setReplication(java.lang.String,short)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStreamUsingAppend(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean isFileExist(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,boolean)>",
    "<org.apache.carbondata.core.datastore.filesystem.S3CarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,boolean)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,boolean)>",
    "<org.apache.carbondata.core.datastore.impl.FileFactory: org.apache.hadoop.fs.FileSystem getFileSystem(org.apache.hadoop.fs.Path)>",
    "<org.apache.carbondata.core.indexstore.blockletindex.BlockletDataMapFactory: java.util.List toDistributable(org.apache.carbondata.core.datamap.Segment)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataInputStream getDataInputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,long)>"
  ],
  "1.4.1": [
    "<org.apache.carbondata.core.util.CarbonUtil: void deleteFoldersAndFiles(org.apache.carbondata.core.datastore.filesystem.CarbonFile[])>",
    "<org.apache.carbondata.core.util.CarbonUtil: java.util.HashMap getDataSizeAndIndexSize(java.lang.String,java.lang.String)>",
    "<org.apache.carbondata.core.datastore.block.TableBlockInfo: long getBlockLength()>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,long,short)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: short getDefaultReplication(java.lang.String)>",
    "<org.apache.carbondata.core.datastore.impl.FileFactory: void createDirectoryAndSetPermission(java.lang.String,org.apache.hadoop.fs.permission.FsPermission)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean mkdirs(java.lang.String)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,java.lang.String)>",
    "<org.apache.carbondata.core.datastore.impl.FileFactory: void truncateFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,long)>",
    "<org.apache.carbondata.core.util.CarbonUtil: void deleteFoldersAndFilesSilent(org.apache.carbondata.core.datastore.filesystem.CarbonFile[])>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean isFileExist(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.util.CarbonUtil: void deleteFoldersAndFiles(java.io.File[])>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean createNewFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,boolean,org.apache.hadoop.fs.permission.FsPermission)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,long)>",
    "<org.apache.carbondata.core.datastore.impl.FileFactory: long getDirectorySize(java.lang.String)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean createNewLockFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean deleteFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean createNewFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: void <init>(java.lang.String,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.impl.DFSFileReaderImpl: org.apache.hadoop.fs.FSDataInputStream updateCache(java.lang.String)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean setReplication(java.lang.String,short)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStreamUsingAppend(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean isFileExist(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,boolean)>",
    "<org.apache.carbondata.core.datastore.filesystem.S3CarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,boolean)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,boolean)>",
    "<org.apache.carbondata.core.datastore.impl.FileFactory: org.apache.hadoop.fs.FileSystem getFileSystem(org.apache.hadoop.fs.Path)>",
    "<org.apache.carbondata.core.indexstore.blockletindex.BlockletDataMapFactory: java.util.List toDistributable(org.apache.carbondata.core.datamap.Segment)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataInputStream getDataInputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,long)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataInputStream getDataInputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,java.lang.String)>"
  ],
  "1.5.1": [
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataInputStream getDataInputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,java.lang.String,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.carbondata.core.util.CarbonUtil: void deleteFoldersAndFiles(org.apache.carbondata.core.datastore.filesystem.CarbonFile[])>",
    "<org.apache.carbondata.core.util.CarbonUtil: java.util.HashMap getDataSizeAndIndexSize(java.lang.String,java.lang.String)>",
    "<org.apache.carbondata.core.datastore.block.TableBlockInfo: long getBlockLength()>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,long,short)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: short getDefaultReplication(java.lang.String)>",
    "<org.apache.carbondata.core.datastore.impl.FileFactory: void createDirectoryAndSetPermission(java.lang.String,org.apache.hadoop.fs.permission.FsPermission)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean mkdirs(java.lang.String)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,java.lang.String)>",
    "<org.apache.carbondata.core.datastore.impl.FileFactory: void truncateFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,long)>",
    "<org.apache.carbondata.core.util.CarbonUtil: void deleteFoldersAndFilesSilent(org.apache.carbondata.core.datastore.filesystem.CarbonFile[])>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean isFileExist(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.util.CarbonUtil: void deleteFoldersAndFiles(java.io.File[])>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean createNewFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,boolean,org.apache.hadoop.fs.permission.FsPermission)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,long)>",
    "<org.apache.carbondata.core.datastore.impl.FileFactory: long getDirectorySize(java.lang.String)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean createNewLockFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean deleteFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean createNewFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: void <init>(java.lang.String,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.impl.DFSFileReaderImpl: org.apache.hadoop.fs.FSDataInputStream updateCache(java.lang.String)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean setReplication(java.lang.String,short)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStreamUsingAppend(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean isFileExist(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,boolean)>",
    "<org.apache.carbondata.core.datastore.filesystem.S3CarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,boolean)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,boolean)>",
    "<org.apache.carbondata.core.datastore.impl.FileFactory: org.apache.hadoop.fs.FileSystem getFileSystem(org.apache.hadoop.fs.Path)>",
    "<org.apache.carbondata.core.indexstore.blockletindex.BlockletDataMapFactory: java.util.List toDistributable(org.apache.carbondata.core.datamap.Segment)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataInputStream getDataInputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,long)>"
  ],
  "1.5.3": [
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataInputStream getDataInputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,java.lang.String,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.carbondata.core.util.CarbonUtil: void deleteFoldersAndFiles(org.apache.carbondata.core.datastore.filesystem.CarbonFile[])>",
    "<org.apache.carbondata.core.util.CarbonUtil: java.util.HashMap getDataSizeAndIndexSize(java.lang.String,java.lang.String)>",
    "<org.apache.carbondata.core.datastore.block.TableBlockInfo: long getBlockLength()>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,long,short)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: short getDefaultReplication(java.lang.String)>",
    "<org.apache.carbondata.core.datastore.impl.FileFactory: void createDirectoryAndSetPermission(java.lang.String,org.apache.hadoop.fs.permission.FsPermission)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean mkdirs(java.lang.String)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,java.lang.String)>",
    "<org.apache.carbondata.core.datastore.impl.FileFactory: void truncateFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,long)>",
    "<org.apache.carbondata.core.util.CarbonUtil: void deleteFoldersAndFilesSilent(org.apache.carbondata.core.datastore.filesystem.CarbonFile[])>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean isFileExist(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.util.CarbonUtil: void deleteFoldersAndFiles(java.io.File[])>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean createNewFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,boolean,org.apache.hadoop.fs.permission.FsPermission)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,long)>",
    "<org.apache.carbondata.core.datastore.impl.FileFactory: long getDirectorySize(java.lang.String)>",
    "<org.apache.carbondata.core.datastore.filesystem.AlluxioCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,boolean)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean createNewLockFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean deleteFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean createNewFile(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: void <init>(java.lang.String,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.impl.DFSFileReaderImpl: org.apache.hadoop.fs.FSDataInputStream updateCache(java.lang.String)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean setReplication(java.lang.String,short)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStreamUsingAppend(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: boolean isFileExist(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,boolean)>",
    "<org.apache.carbondata.core.datastore.filesystem.S3CarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,boolean)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataOutputStream getDataOutputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,boolean)>",
    "<org.apache.carbondata.core.datastore.impl.FileFactory: org.apache.hadoop.fs.FileSystem getFileSystem(org.apache.hadoop.fs.Path)>",
    "<org.apache.carbondata.core.indexstore.blockletindex.BlockletDataMapFactory: java.util.List toDistributable(org.apache.carbondata.core.datamap.Segment)>",
    "<org.apache.carbondata.core.datastore.filesystem.AbstractDFSCarbonFile: java.io.DataInputStream getDataInputStream(java.lang.String,org.apache.carbondata.core.datastore.impl.FileFactory$FileType,int,long)>"
  ]
}