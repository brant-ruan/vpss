{
  "1.3.0": [
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpConnector: com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest createRequest(org.springframework.http.HttpMethod,java.net.URI)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void stop()>",
    "<com.linecorp.armeria.internal.spring.PrometheusSupport: boolean addExposition(com.linecorp.armeria.spring.ArmeriaSettings,com.linecorp.armeria.server.ServerBuilder,io.micrometer.core.instrument.MeterRegistry)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: void lambda$doCommit$4(java.lang.String,java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void <init>(com.linecorp.armeria.server.Server,com.linecorp.armeria.common.SessionProtocol,java.net.InetAddress,int,org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: void addCookie(org.springframework.http.ResponseCookie)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void start()>",
    "<com.linecorp.armeria.spring.AbstractArmeriaBeanPostProcessor: void <init>(org.springframework.beans.factory.BeanFactory)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: com.linecorp.armeria.common.HttpRequest lambda$setComplete$2()>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: void lambda$applyHeaders$0(java.lang.String,java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: org.springframework.boot.web.server.WebServer getWebServer(org.springframework.http.server.reactive.HttpHandler)>",
    "<com.linecorp.armeria.internal.spring.DropwizardSupport: com.linecorp.armeria.common.HttpResponse lambda$addExposition$0(com.fasterxml.jackson.databind.ObjectMapper,com.codahale.metrics.MetricRegistry,com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: reactor.core.publisher.Mono cleanup(java.lang.Throwable)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationNetUtil: void lambda$configurePorts$0(com.linecorp.armeria.server.ServerBuilder,com.linecorp.armeria.spring.ArmeriaSettings$Port)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: reactor.core.publisher.Mono lambda$write$3(reactor.core.publisher.Flux)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: void configureServerWithArmeriaSettings(com.linecorp.armeria.server.ServerBuilder,com.linecorp.armeria.spring.ArmeriaSettings,io.micrometer.core.instrument.MeterRegistry,java.util.List,java.util.List,com.linecorp.armeria.common.metric.MeterIdPrefixFunction)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: void lambda$configureTls$1(javax.net.ssl.TrustManagerFactory,com.linecorp.armeria.spring.Ssl,io.netty.handler.ssl.SslContextBuilder)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: com.linecorp.armeria.common.HttpRequest lambda$write$1(reactor.core.publisher.Flux)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: com.linecorp.armeria.server.ServerBuilder configureService(com.linecorp.armeria.server.ServerBuilder,org.springframework.http.server.reactive.HttpHandler,com.linecorp.armeria.spring.web.reactive.DataBufferFactoryWrapper,java.lang.String)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpResponseBodyStream: void <init>(com.linecorp.armeria.common.HttpResponse,io.netty.util.concurrent.EventExecutor)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpConnector: void <init>(java.lang.Iterable,com.linecorp.armeria.spring.web.reactive.DataBufferFactoryWrapper)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: long parseDataSize(java.lang.String)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: int ensureValidPort(int)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: com.linecorp.armeria.common.HttpResponse lambda$configureService$5(com.linecorp.armeria.spring.web.reactive.ArmeriaHttpHandlerAdapter,java.lang.String,com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpHandlerAdapter: reactor.core.publisher.Mono handle(com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest,java.util.concurrent.CompletableFuture,java.lang.String)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: java.util.function.Function contentEncodingDecorator(java.lang.String[],java.lang.String[],int)>",
    "<com.linecorp.armeria.spring.ArmeriaSettings$Port: com.linecorp.armeria.spring.ArmeriaSettings$Port setProtocols(java.util.List)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil$parse__7: java.lang.Object apply(java.lang.Object)>"
  ],
  "1.9.0": [
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpConnector: com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest createRequest(org.springframework.http.HttpMethod,java.net.URI)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: void lambda$configureTls$4(javax.net.ssl.TrustManagerFactory,com.linecorp.armeria.spring.Ssl,io.netty.handler.ssl.SslContextBuilder)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void stop()>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: reactor.core.publisher.Mono lambda$write$3(reactor.core.publisher.Flux,reactor.util.context.ContextView)>",
    "<com.linecorp.armeria.internal.spring.PrometheusSupport: boolean addExposition(com.linecorp.armeria.spring.ArmeriaSettings,com.linecorp.armeria.server.ServerBuilder,io.micrometer.core.instrument.MeterRegistry)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: void lambda$doCommit$4(java.lang.String,java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void <init>(com.linecorp.armeria.server.Server,com.linecorp.armeria.common.SessionProtocol,java.net.InetAddress,int,org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: void addCookie(org.springframework.http.ResponseCookie)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void start()>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil$parse__10: java.lang.Object apply(java.lang.Object)>",
    "<com.linecorp.armeria.spring.AbstractArmeriaBeanPostProcessor: void <init>(org.springframework.beans.factory.BeanFactory)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: com.linecorp.armeria.common.HttpRequest lambda$setComplete$2()>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: void lambda$applyHeaders$0(java.lang.String,java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: org.springframework.boot.web.server.WebServer getWebServer(org.springframework.http.server.reactive.HttpHandler)>",
    "<com.linecorp.armeria.internal.spring.DropwizardSupport: com.linecorp.armeria.common.HttpResponse lambda$addExposition$0(com.fasterxml.jackson.databind.ObjectMapper,com.codahale.metrics.MetricRegistry,com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: reactor.core.publisher.Mono cleanup(java.lang.Throwable)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationNetUtil: void lambda$configurePorts$0(com.linecorp.armeria.server.ServerBuilder,com.linecorp.armeria.spring.ArmeriaSettings$Port)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: com.linecorp.armeria.common.HttpResponse lambda$configureService$3(com.linecorp.armeria.spring.web.reactive.ArmeriaHttpHandlerAdapter,java.lang.String,com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: com.linecorp.armeria.common.HttpRequest lambda$write$1(reactor.core.publisher.Flux)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: com.linecorp.armeria.server.ServerBuilder configureService(com.linecorp.armeria.server.ServerBuilder,org.springframework.http.server.reactive.HttpHandler,com.linecorp.armeria.spring.web.reactive.DataBufferFactoryWrapper,java.lang.String)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpResponseBodyStream: void <init>(com.linecorp.armeria.common.HttpResponse,io.netty.util.concurrent.EventExecutor)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpConnector: void <init>(java.lang.Iterable,com.linecorp.armeria.spring.web.reactive.DataBufferFactoryWrapper)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: long parseDataSize(java.lang.String)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: int ensureValidPort(int)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: java.lang.Integer getRawStatusCode()>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpHandlerAdapter: reactor.core.publisher.Mono handle(com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest,java.util.concurrent.CompletableFuture,java.lang.String)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: void configureServerWithArmeriaSettings(com.linecorp.armeria.server.ServerBuilder,com.linecorp.armeria.spring.ArmeriaSettings,java.util.List,java.util.List,java.util.List,io.micrometer.core.instrument.MeterRegistry,java.util.List,java.util.List,com.linecorp.armeria.common.metric.MeterIdPrefixFunction,java.util.List)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: java.util.function.Function contentEncodingDecorator(java.lang.String[],java.lang.String[],int)>",
    "<com.linecorp.armeria.spring.ArmeriaSettings$Port: com.linecorp.armeria.spring.ArmeriaSettings$Port setProtocols(java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: org.springframework.http.HttpStatus getStatusCode()>"
  ],
  "1.7.0": [
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpConnector: com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest createRequest(org.springframework.http.HttpMethod,java.net.URI)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: void lambda$configureTls$4(javax.net.ssl.TrustManagerFactory,com.linecorp.armeria.spring.Ssl,io.netty.handler.ssl.SslContextBuilder)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void stop()>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: reactor.core.publisher.Mono lambda$write$3(reactor.core.publisher.Flux,reactor.util.context.ContextView)>",
    "<com.linecorp.armeria.internal.spring.PrometheusSupport: boolean addExposition(com.linecorp.armeria.spring.ArmeriaSettings,com.linecorp.armeria.server.ServerBuilder,io.micrometer.core.instrument.MeterRegistry)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: void lambda$doCommit$4(java.lang.String,java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void <init>(com.linecorp.armeria.server.Server,com.linecorp.armeria.common.SessionProtocol,java.net.InetAddress,int,org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: void configureServerWithArmeriaSettings(com.linecorp.armeria.server.ServerBuilder,com.linecorp.armeria.spring.ArmeriaSettings,java.util.List,java.util.List,java.util.List,io.micrometer.core.instrument.MeterRegistry,java.util.List,java.util.List,com.linecorp.armeria.common.metric.MeterIdPrefixFunction)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: void addCookie(org.springframework.http.ResponseCookie)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void start()>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil$parse__10: java.lang.Object apply(java.lang.Object)>",
    "<com.linecorp.armeria.spring.AbstractArmeriaBeanPostProcessor: void <init>(org.springframework.beans.factory.BeanFactory)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: com.linecorp.armeria.common.HttpRequest lambda$setComplete$2()>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: void lambda$applyHeaders$0(java.lang.String,java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: org.springframework.boot.web.server.WebServer getWebServer(org.springframework.http.server.reactive.HttpHandler)>",
    "<com.linecorp.armeria.internal.spring.DropwizardSupport: com.linecorp.armeria.common.HttpResponse lambda$addExposition$0(com.fasterxml.jackson.databind.ObjectMapper,com.codahale.metrics.MetricRegistry,com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: reactor.core.publisher.Mono cleanup(java.lang.Throwable)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationNetUtil: void lambda$configurePorts$0(com.linecorp.armeria.server.ServerBuilder,com.linecorp.armeria.spring.ArmeriaSettings$Port)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: com.linecorp.armeria.common.HttpResponse lambda$configureService$3(com.linecorp.armeria.spring.web.reactive.ArmeriaHttpHandlerAdapter,java.lang.String,com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: com.linecorp.armeria.common.HttpRequest lambda$write$1(reactor.core.publisher.Flux)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: com.linecorp.armeria.server.ServerBuilder configureService(com.linecorp.armeria.server.ServerBuilder,org.springframework.http.server.reactive.HttpHandler,com.linecorp.armeria.spring.web.reactive.DataBufferFactoryWrapper,java.lang.String)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpResponseBodyStream: void <init>(com.linecorp.armeria.common.HttpResponse,io.netty.util.concurrent.EventExecutor)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpConnector: void <init>(java.lang.Iterable,com.linecorp.armeria.spring.web.reactive.DataBufferFactoryWrapper)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: long parseDataSize(java.lang.String)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: int ensureValidPort(int)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpHandlerAdapter: reactor.core.publisher.Mono handle(com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest,java.util.concurrent.CompletableFuture,java.lang.String)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: java.util.function.Function contentEncodingDecorator(java.lang.String[],java.lang.String[],int)>",
    "<com.linecorp.armeria.spring.ArmeriaSettings$Port: com.linecorp.armeria.spring.ArmeriaSettings$Port setProtocols(java.util.List)>"
  ],
  "1.11.0": [
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: reactor.core.publisher.Mono lambda$write$2(reactor.core.publisher.Flux,reactor.util.context.ContextView)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: void lambda$configureTls$4(javax.net.ssl.TrustManagerFactory,com.linecorp.armeria.spring.Ssl,io.netty.handler.ssl.SslContextBuilder)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpConnector: com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest createRequest(org.springframework.http.HttpMethod,java.net.URI)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void stop()>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: void lambda$applyHeaders$3(java.lang.String,java.util.List)>",
    "<com.linecorp.armeria.internal.spring.PrometheusSupport: boolean addExposition(com.linecorp.armeria.spring.ArmeriaSettings,com.linecorp.armeria.server.ServerBuilder,io.micrometer.core.instrument.MeterRegistry)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void <init>(com.linecorp.armeria.server.Server,com.linecorp.armeria.common.SessionProtocol,java.net.InetAddress,int,org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void start()>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil$parse__10: java.lang.Object apply(java.lang.Object)>",
    "<com.linecorp.armeria.spring.AbstractArmeriaBeanPostProcessor: void <init>(org.springframework.beans.factory.BeanFactory)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: com.linecorp.armeria.common.HttpRequest lambda$setComplete$2()>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: void lambda$applyHeaders$0(java.lang.String,java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: org.springframework.boot.web.server.WebServer getWebServer(org.springframework.http.server.reactive.HttpHandler)>",
    "<com.linecorp.armeria.internal.spring.DropwizardSupport: com.linecorp.armeria.common.HttpResponse lambda$addExposition$0(com.fasterxml.jackson.databind.ObjectMapper,com.codahale.metrics.MetricRegistry,com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: reactor.core.publisher.Mono cleanup(java.lang.Throwable)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationNetUtil: void lambda$configurePorts$0(com.linecorp.armeria.server.ServerBuilder,com.linecorp.armeria.spring.ArmeriaSettings$Port)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: com.linecorp.armeria.common.HttpResponse lambda$configureService$3(com.linecorp.armeria.spring.web.reactive.ArmeriaHttpHandlerAdapter,java.lang.String,com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: com.linecorp.armeria.common.HttpRequest lambda$write$1(reactor.core.publisher.Flux)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: com.linecorp.armeria.server.ServerBuilder configureService(com.linecorp.armeria.server.ServerBuilder,org.springframework.http.server.reactive.HttpHandler,com.linecorp.armeria.spring.web.reactive.DataBufferFactoryWrapper,java.lang.String)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpResponseBodyStream: void <init>(com.linecorp.armeria.common.HttpResponse,io.netty.util.concurrent.EventExecutor)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpConnector: void <init>(java.lang.Iterable,com.linecorp.armeria.spring.web.reactive.DataBufferFactoryWrapper)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: long parseDataSize(java.lang.String)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: int ensureValidPort(int)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpHandlerAdapter: reactor.core.publisher.Mono handle(com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest,java.util.concurrent.CompletableFuture,java.lang.String)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: void configureServerWithArmeriaSettings(com.linecorp.armeria.server.ServerBuilder,com.linecorp.armeria.spring.ArmeriaSettings,java.util.List,java.util.List,java.util.List,io.micrometer.core.instrument.MeterRegistry,java.util.List,java.util.List,com.linecorp.armeria.common.metric.MeterIdPrefixFunction,java.util.List)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: java.util.function.Function contentEncodingDecorator(java.lang.String[],java.lang.String[],int)>",
    "<com.linecorp.armeria.spring.ArmeriaSettings$Port: com.linecorp.armeria.spring.ArmeriaSettings$Port setProtocols(java.util.List)>"
  ],
  "1.8.0": [
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpConnector: com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest createRequest(org.springframework.http.HttpMethod,java.net.URI)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: void lambda$configureTls$4(javax.net.ssl.TrustManagerFactory,com.linecorp.armeria.spring.Ssl,io.netty.handler.ssl.SslContextBuilder)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void stop()>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: reactor.core.publisher.Mono lambda$write$3(reactor.core.publisher.Flux,reactor.util.context.ContextView)>",
    "<com.linecorp.armeria.internal.spring.PrometheusSupport: boolean addExposition(com.linecorp.armeria.spring.ArmeriaSettings,com.linecorp.armeria.server.ServerBuilder,io.micrometer.core.instrument.MeterRegistry)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: void lambda$doCommit$4(java.lang.String,java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void <init>(com.linecorp.armeria.server.Server,com.linecorp.armeria.common.SessionProtocol,java.net.InetAddress,int,org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: void addCookie(org.springframework.http.ResponseCookie)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void start()>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil$parse__10: java.lang.Object apply(java.lang.Object)>",
    "<com.linecorp.armeria.spring.AbstractArmeriaBeanPostProcessor: void <init>(org.springframework.beans.factory.BeanFactory)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: com.linecorp.armeria.common.HttpRequest lambda$setComplete$2()>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: void lambda$applyHeaders$0(java.lang.String,java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: org.springframework.boot.web.server.WebServer getWebServer(org.springframework.http.server.reactive.HttpHandler)>",
    "<com.linecorp.armeria.internal.spring.DropwizardSupport: com.linecorp.armeria.common.HttpResponse lambda$addExposition$0(com.fasterxml.jackson.databind.ObjectMapper,com.codahale.metrics.MetricRegistry,com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: reactor.core.publisher.Mono cleanup(java.lang.Throwable)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationNetUtil: void lambda$configurePorts$0(com.linecorp.armeria.server.ServerBuilder,com.linecorp.armeria.spring.ArmeriaSettings$Port)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: com.linecorp.armeria.common.HttpResponse lambda$configureService$3(com.linecorp.armeria.spring.web.reactive.ArmeriaHttpHandlerAdapter,java.lang.String,com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: com.linecorp.armeria.common.HttpRequest lambda$write$1(reactor.core.publisher.Flux)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: com.linecorp.armeria.server.ServerBuilder configureService(com.linecorp.armeria.server.ServerBuilder,org.springframework.http.server.reactive.HttpHandler,com.linecorp.armeria.spring.web.reactive.DataBufferFactoryWrapper,java.lang.String)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpResponseBodyStream: void <init>(com.linecorp.armeria.common.HttpResponse,io.netty.util.concurrent.EventExecutor)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpConnector: void <init>(java.lang.Iterable,com.linecorp.armeria.spring.web.reactive.DataBufferFactoryWrapper)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: long parseDataSize(java.lang.String)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: int ensureValidPort(int)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpHandlerAdapter: reactor.core.publisher.Mono handle(com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest,java.util.concurrent.CompletableFuture,java.lang.String)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: void configureServerWithArmeriaSettings(com.linecorp.armeria.server.ServerBuilder,com.linecorp.armeria.spring.ArmeriaSettings,java.util.List,java.util.List,java.util.List,io.micrometer.core.instrument.MeterRegistry,java.util.List,java.util.List,com.linecorp.armeria.common.metric.MeterIdPrefixFunction,java.util.List)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: java.util.function.Function contentEncodingDecorator(java.lang.String[],java.lang.String[],int)>",
    "<com.linecorp.armeria.spring.ArmeriaSettings$Port: com.linecorp.armeria.spring.ArmeriaSettings$Port setProtocols(java.util.List)>"
  ],
  "1.5.0": [
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpConnector: com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest createRequest(org.springframework.http.HttpMethod,java.net.URI)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: void lambda$configureTls$4(javax.net.ssl.TrustManagerFactory,com.linecorp.armeria.spring.Ssl,io.netty.handler.ssl.SslContextBuilder)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void stop()>",
    "<com.linecorp.armeria.internal.spring.PrometheusSupport: boolean addExposition(com.linecorp.armeria.spring.ArmeriaSettings,com.linecorp.armeria.server.ServerBuilder,io.micrometer.core.instrument.MeterRegistry)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: void lambda$doCommit$4(java.lang.String,java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void <init>(com.linecorp.armeria.server.Server,com.linecorp.armeria.common.SessionProtocol,java.net.InetAddress,int,org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: void configureServerWithArmeriaSettings(com.linecorp.armeria.server.ServerBuilder,com.linecorp.armeria.spring.ArmeriaSettings,java.util.List,java.util.List,java.util.List,io.micrometer.core.instrument.MeterRegistry,java.util.List,java.util.List,com.linecorp.armeria.common.metric.MeterIdPrefixFunction)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: void addCookie(org.springframework.http.ResponseCookie)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void start()>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil$parse__10: java.lang.Object apply(java.lang.Object)>",
    "<com.linecorp.armeria.spring.AbstractArmeriaBeanPostProcessor: void <init>(org.springframework.beans.factory.BeanFactory)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: com.linecorp.armeria.common.HttpRequest lambda$setComplete$2()>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: void lambda$applyHeaders$0(java.lang.String,java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: org.springframework.boot.web.server.WebServer getWebServer(org.springframework.http.server.reactive.HttpHandler)>",
    "<com.linecorp.armeria.internal.spring.DropwizardSupport: com.linecorp.armeria.common.HttpResponse lambda$addExposition$0(com.fasterxml.jackson.databind.ObjectMapper,com.codahale.metrics.MetricRegistry,com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: reactor.core.publisher.Mono cleanup(java.lang.Throwable)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationNetUtil: void lambda$configurePorts$0(com.linecorp.armeria.server.ServerBuilder,com.linecorp.armeria.spring.ArmeriaSettings$Port)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: com.linecorp.armeria.common.HttpResponse lambda$configureService$3(com.linecorp.armeria.spring.web.reactive.ArmeriaHttpHandlerAdapter,java.lang.String,com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: reactor.core.publisher.Mono lambda$write$3(reactor.core.publisher.Flux)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: com.linecorp.armeria.common.HttpRequest lambda$write$1(reactor.core.publisher.Flux)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: com.linecorp.armeria.server.ServerBuilder configureService(com.linecorp.armeria.server.ServerBuilder,org.springframework.http.server.reactive.HttpHandler,com.linecorp.armeria.spring.web.reactive.DataBufferFactoryWrapper,java.lang.String)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpResponseBodyStream: void <init>(com.linecorp.armeria.common.HttpResponse,io.netty.util.concurrent.EventExecutor)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpConnector: void <init>(java.lang.Iterable,com.linecorp.armeria.spring.web.reactive.DataBufferFactoryWrapper)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: long parseDataSize(java.lang.String)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: int ensureValidPort(int)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpHandlerAdapter: reactor.core.publisher.Mono handle(com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest,java.util.concurrent.CompletableFuture,java.lang.String)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: java.util.function.Function contentEncodingDecorator(java.lang.String[],java.lang.String[],int)>",
    "<com.linecorp.armeria.spring.ArmeriaSettings$Port: com.linecorp.armeria.spring.ArmeriaSettings$Port setProtocols(java.util.List)>"
  ],
  "1.6.0": [
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpConnector: com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest createRequest(org.springframework.http.HttpMethod,java.net.URI)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: void lambda$configureTls$4(javax.net.ssl.TrustManagerFactory,com.linecorp.armeria.spring.Ssl,io.netty.handler.ssl.SslContextBuilder)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void stop()>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: reactor.core.publisher.Mono lambda$write$3(reactor.core.publisher.Flux,reactor.util.context.ContextView)>",
    "<com.linecorp.armeria.internal.spring.PrometheusSupport: boolean addExposition(com.linecorp.armeria.spring.ArmeriaSettings,com.linecorp.armeria.server.ServerBuilder,io.micrometer.core.instrument.MeterRegistry)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: void lambda$doCommit$4(java.lang.String,java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void <init>(com.linecorp.armeria.server.Server,com.linecorp.armeria.common.SessionProtocol,java.net.InetAddress,int,org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: void configureServerWithArmeriaSettings(com.linecorp.armeria.server.ServerBuilder,com.linecorp.armeria.spring.ArmeriaSettings,java.util.List,java.util.List,java.util.List,io.micrometer.core.instrument.MeterRegistry,java.util.List,java.util.List,com.linecorp.armeria.common.metric.MeterIdPrefixFunction)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: void addCookie(org.springframework.http.ResponseCookie)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void start()>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil$parse__10: java.lang.Object apply(java.lang.Object)>",
    "<com.linecorp.armeria.spring.AbstractArmeriaBeanPostProcessor: void <init>(org.springframework.beans.factory.BeanFactory)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: com.linecorp.armeria.common.HttpRequest lambda$setComplete$2()>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: void lambda$applyHeaders$0(java.lang.String,java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: org.springframework.boot.web.server.WebServer getWebServer(org.springframework.http.server.reactive.HttpHandler)>",
    "<com.linecorp.armeria.internal.spring.DropwizardSupport: com.linecorp.armeria.common.HttpResponse lambda$addExposition$0(com.fasterxml.jackson.databind.ObjectMapper,com.codahale.metrics.MetricRegistry,com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: reactor.core.publisher.Mono cleanup(java.lang.Throwable)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationNetUtil: void lambda$configurePorts$0(com.linecorp.armeria.server.ServerBuilder,com.linecorp.armeria.spring.ArmeriaSettings$Port)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: com.linecorp.armeria.common.HttpResponse lambda$configureService$3(com.linecorp.armeria.spring.web.reactive.ArmeriaHttpHandlerAdapter,java.lang.String,com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: com.linecorp.armeria.common.HttpRequest lambda$write$1(reactor.core.publisher.Flux)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: com.linecorp.armeria.server.ServerBuilder configureService(com.linecorp.armeria.server.ServerBuilder,org.springframework.http.server.reactive.HttpHandler,com.linecorp.armeria.spring.web.reactive.DataBufferFactoryWrapper,java.lang.String)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpResponseBodyStream: void <init>(com.linecorp.armeria.common.HttpResponse,io.netty.util.concurrent.EventExecutor)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpConnector: void <init>(java.lang.Iterable,com.linecorp.armeria.spring.web.reactive.DataBufferFactoryWrapper)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: long parseDataSize(java.lang.String)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: int ensureValidPort(int)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpHandlerAdapter: reactor.core.publisher.Mono handle(com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest,java.util.concurrent.CompletableFuture,java.lang.String)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: java.util.function.Function contentEncodingDecorator(java.lang.String[],java.lang.String[],int)>",
    "<com.linecorp.armeria.spring.ArmeriaSettings$Port: com.linecorp.armeria.spring.ArmeriaSettings$Port setProtocols(java.util.List)>"
  ],
  "1.13.2": [
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: reactor.core.publisher.Mono lambda$write$2(reactor.core.publisher.Flux,reactor.util.context.ContextView)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpConnector: com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest createRequest(org.springframework.http.HttpMethod,java.net.URI)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void stop()>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: void lambda$applyHeaders$3(java.lang.String,java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void <init>(com.linecorp.armeria.server.Server,com.linecorp.armeria.common.SessionProtocol,java.net.InetAddress,int,org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void start()>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil$parse__10: java.lang.Object apply(java.lang.Object)>",
    "<com.linecorp.armeria.spring.AbstractArmeriaBeanPostProcessor: void <init>(org.springframework.beans.factory.BeanFactory)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: com.linecorp.armeria.common.HttpRequest lambda$setComplete$2()>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: void lambda$applyHeaders$0(java.lang.String,java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: org.springframework.boot.web.server.WebServer getWebServer(org.springframework.http.server.reactive.HttpHandler)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: reactor.core.publisher.Mono cleanup(java.lang.Throwable)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationNetUtil: void lambda$configurePorts$0(com.linecorp.armeria.server.ServerBuilder,com.linecorp.armeria.spring.ArmeriaSettings$Port)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: com.linecorp.armeria.common.HttpResponse lambda$configureService$3(com.linecorp.armeria.spring.web.reactive.ArmeriaHttpHandlerAdapter,java.lang.String,com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest)>",
    "<com.linecorp.armeria.spring.DropwizardExpositionService: com.linecorp.armeria.common.HttpResponse serve(com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: com.linecorp.armeria.common.HttpRequest lambda$write$1(reactor.core.publisher.Flux)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationSettingsUtil: void configureAccessLog(com.linecorp.armeria.server.ServerBuilder,com.linecorp.armeria.spring.ArmeriaSettings$AccessLog)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: com.linecorp.armeria.server.ServerBuilder configureService(com.linecorp.armeria.server.ServerBuilder,org.springframework.http.server.reactive.HttpHandler,com.linecorp.armeria.spring.web.reactive.DataBufferFactoryWrapper,java.lang.String)>",
    "<com.linecorp.armeria.spring.InternalServices: com.linecorp.armeria.spring.InternalServices of(com.linecorp.armeria.spring.ArmeriaSettings,io.micrometer.core.instrument.MeterRegistry,java.util.List,java.util.List,java.util.List,java.lang.Integer)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpResponseBodyStream: void <init>(com.linecorp.armeria.common.HttpResponse,io.netty.util.concurrent.EventExecutor)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpConnector: void <init>(java.lang.Iterable,com.linecorp.armeria.spring.web.reactive.DataBufferFactoryWrapper)>",
    "<com.linecorp.armeria.spring.PrometheusSupport: com.linecorp.armeria.server.metric.PrometheusExpositionService newExpositionService(io.micrometer.core.instrument.MeterRegistry)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: long parseDataSize(java.lang.String)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: int ensureValidPort(int)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpHandlerAdapter: reactor.core.publisher.Mono handle(com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest,java.util.concurrent.CompletableFuture,java.lang.String)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: void lambda$configureTls$2(javax.net.ssl.TrustManagerFactory,com.linecorp.armeria.spring.Ssl,io.netty.handler.ssl.SslContextBuilder)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: java.util.function.Function contentEncodingDecorator(java.lang.String[],java.lang.String[],int)>",
    "<com.linecorp.armeria.spring.ArmeriaSettings$Port: com.linecorp.armeria.spring.ArmeriaSettings$Port setProtocols(java.util.List)>"
  ],
  "1.0.0": [
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpConnector: com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest createRequest(org.springframework.http.HttpMethod,java.net.URI)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void stop()>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: void lambda$doCommit$4(java.lang.String,java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void <init>(com.linecorp.armeria.server.Server,com.linecorp.armeria.common.SessionProtocol,java.net.InetAddress,int,org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: void addCookie(org.springframework.http.ResponseCookie)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void start()>",
    "<com.linecorp.armeria.spring.AbstractArmeriaBeanPostProcessor: void <init>(org.springframework.beans.factory.BeanFactory)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: com.linecorp.armeria.common.HttpRequest lambda$setComplete$2()>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: void lambda$applyHeaders$0(java.lang.String,java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: org.springframework.boot.web.server.WebServer getWebServer(org.springframework.http.server.reactive.HttpHandler)>",
    "<com.linecorp.armeria.internal.spring.DropwizardSupport: com.linecorp.armeria.common.HttpResponse lambda$addExposition$0(com.fasterxml.jackson.databind.ObjectMapper,com.codahale.metrics.MetricRegistry,com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpClientResponseSubscriber: void <init>(com.linecorp.armeria.common.HttpResponse)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: reactor.core.publisher.Mono cleanup(java.lang.Throwable)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationNetUtil: void lambda$configurePorts$0(com.linecorp.armeria.server.ServerBuilder,com.linecorp.armeria.spring.ArmeriaSettings$Port)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: reactor.core.publisher.Mono lambda$write$3(reactor.core.publisher.Flux)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: com.linecorp.armeria.common.HttpRequest lambda$write$1(reactor.core.publisher.Flux)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil$parse__6: java.lang.Object apply(java.lang.Object)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: com.linecorp.armeria.server.ServerBuilder configureService(com.linecorp.armeria.server.ServerBuilder,org.springframework.http.server.reactive.HttpHandler,com.linecorp.armeria.spring.web.reactive.DataBufferFactoryWrapper,java.lang.String)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: void lambda$configureTls$0(javax.net.ssl.TrustManagerFactory,com.linecorp.armeria.spring.Ssl,io.netty.handler.ssl.SslContextBuilder)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpConnector: void <init>(java.lang.Iterable,com.linecorp.armeria.spring.web.reactive.DataBufferFactoryWrapper)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: long parseDataSize(java.lang.String)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: int ensureValidPort(int)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: com.linecorp.armeria.common.HttpResponse lambda$configureService$5(com.linecorp.armeria.spring.web.reactive.ArmeriaHttpHandlerAdapter,java.lang.String,com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpHandlerAdapter: reactor.core.publisher.Mono handle(com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest,java.util.concurrent.CompletableFuture,java.lang.String)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: java.util.function.Function contentEncodingDecorator(java.lang.String[],java.lang.String[],int)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpClientResponseSubscriber: void complete(java.lang.Throwable)>",
    "<com.linecorp.armeria.spring.ArmeriaSettings$Port: com.linecorp.armeria.spring.ArmeriaSettings$Port setProtocols(java.util.List)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: void configureServerWithArmeriaSettings(com.linecorp.armeria.server.ServerBuilder,com.linecorp.armeria.spring.ArmeriaSettings,io.micrometer.core.instrument.MeterRegistry,java.util.List)>"
  ],
  "1.9.2": [
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpConnector: com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest createRequest(org.springframework.http.HttpMethod,java.net.URI)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: void lambda$configureTls$4(javax.net.ssl.TrustManagerFactory,com.linecorp.armeria.spring.Ssl,io.netty.handler.ssl.SslContextBuilder)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void stop()>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: reactor.core.publisher.Mono lambda$write$3(reactor.core.publisher.Flux,reactor.util.context.ContextView)>",
    "<com.linecorp.armeria.internal.spring.PrometheusSupport: boolean addExposition(com.linecorp.armeria.spring.ArmeriaSettings,com.linecorp.armeria.server.ServerBuilder,io.micrometer.core.instrument.MeterRegistry)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: void lambda$doCommit$4(java.lang.String,java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void <init>(com.linecorp.armeria.server.Server,com.linecorp.armeria.common.SessionProtocol,java.net.InetAddress,int,org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: void addCookie(org.springframework.http.ResponseCookie)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void start()>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil$parse__10: java.lang.Object apply(java.lang.Object)>",
    "<com.linecorp.armeria.spring.AbstractArmeriaBeanPostProcessor: void <init>(org.springframework.beans.factory.BeanFactory)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: com.linecorp.armeria.common.HttpRequest lambda$setComplete$2()>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: void lambda$applyHeaders$0(java.lang.String,java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: org.springframework.boot.web.server.WebServer getWebServer(org.springframework.http.server.reactive.HttpHandler)>",
    "<com.linecorp.armeria.internal.spring.DropwizardSupport: com.linecorp.armeria.common.HttpResponse lambda$addExposition$0(com.fasterxml.jackson.databind.ObjectMapper,com.codahale.metrics.MetricRegistry,com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: reactor.core.publisher.Mono cleanup(java.lang.Throwable)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationNetUtil: void lambda$configurePorts$0(com.linecorp.armeria.server.ServerBuilder,com.linecorp.armeria.spring.ArmeriaSettings$Port)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: com.linecorp.armeria.common.HttpResponse lambda$configureService$3(com.linecorp.armeria.spring.web.reactive.ArmeriaHttpHandlerAdapter,java.lang.String,com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: com.linecorp.armeria.common.HttpRequest lambda$write$1(reactor.core.publisher.Flux)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: com.linecorp.armeria.server.ServerBuilder configureService(com.linecorp.armeria.server.ServerBuilder,org.springframework.http.server.reactive.HttpHandler,com.linecorp.armeria.spring.web.reactive.DataBufferFactoryWrapper,java.lang.String)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpResponseBodyStream: void <init>(com.linecorp.armeria.common.HttpResponse,io.netty.util.concurrent.EventExecutor)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpConnector: void <init>(java.lang.Iterable,com.linecorp.armeria.spring.web.reactive.DataBufferFactoryWrapper)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: long parseDataSize(java.lang.String)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: int ensureValidPort(int)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: java.lang.Integer getRawStatusCode()>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpHandlerAdapter: reactor.core.publisher.Mono handle(com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest,java.util.concurrent.CompletableFuture,java.lang.String)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: void configureServerWithArmeriaSettings(com.linecorp.armeria.server.ServerBuilder,com.linecorp.armeria.spring.ArmeriaSettings,java.util.List,java.util.List,java.util.List,io.micrometer.core.instrument.MeterRegistry,java.util.List,java.util.List,com.linecorp.armeria.common.metric.MeterIdPrefixFunction,java.util.List)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: java.util.function.Function contentEncodingDecorator(java.lang.String[],java.lang.String[],int)>",
    "<com.linecorp.armeria.spring.ArmeriaSettings$Port: com.linecorp.armeria.spring.ArmeriaSettings$Port setProtocols(java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: org.springframework.http.HttpStatus getStatusCode()>"
  ],
  "1.4.0": [
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpConnector: com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest createRequest(org.springframework.http.HttpMethod,java.net.URI)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: void lambda$configureTls$4(javax.net.ssl.TrustManagerFactory,com.linecorp.armeria.spring.Ssl,io.netty.handler.ssl.SslContextBuilder)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void stop()>",
    "<com.linecorp.armeria.internal.spring.PrometheusSupport: boolean addExposition(com.linecorp.armeria.spring.ArmeriaSettings,com.linecorp.armeria.server.ServerBuilder,io.micrometer.core.instrument.MeterRegistry)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: void lambda$doCommit$4(java.lang.String,java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void <init>(com.linecorp.armeria.server.Server,com.linecorp.armeria.common.SessionProtocol,java.net.InetAddress,int,org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: void configureServerWithArmeriaSettings(com.linecorp.armeria.server.ServerBuilder,com.linecorp.armeria.spring.ArmeriaSettings,java.util.List,java.util.List,java.util.List,io.micrometer.core.instrument.MeterRegistry,java.util.List,java.util.List,com.linecorp.armeria.common.metric.MeterIdPrefixFunction)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: void addCookie(org.springframework.http.ResponseCookie)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void start()>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil$parse__10: java.lang.Object apply(java.lang.Object)>",
    "<com.linecorp.armeria.spring.AbstractArmeriaBeanPostProcessor: void <init>(org.springframework.beans.factory.BeanFactory)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: com.linecorp.armeria.common.HttpRequest lambda$setComplete$2()>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: void lambda$applyHeaders$0(java.lang.String,java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: org.springframework.boot.web.server.WebServer getWebServer(org.springframework.http.server.reactive.HttpHandler)>",
    "<com.linecorp.armeria.internal.spring.DropwizardSupport: com.linecorp.armeria.common.HttpResponse lambda$addExposition$0(com.fasterxml.jackson.databind.ObjectMapper,com.codahale.metrics.MetricRegistry,com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: reactor.core.publisher.Mono cleanup(java.lang.Throwable)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationNetUtil: void lambda$configurePorts$0(com.linecorp.armeria.server.ServerBuilder,com.linecorp.armeria.spring.ArmeriaSettings$Port)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: com.linecorp.armeria.common.HttpResponse lambda$configureService$3(com.linecorp.armeria.spring.web.reactive.ArmeriaHttpHandlerAdapter,java.lang.String,com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: reactor.core.publisher.Mono lambda$write$3(reactor.core.publisher.Flux)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: com.linecorp.armeria.common.HttpRequest lambda$write$1(reactor.core.publisher.Flux)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: com.linecorp.armeria.server.ServerBuilder configureService(com.linecorp.armeria.server.ServerBuilder,org.springframework.http.server.reactive.HttpHandler,com.linecorp.armeria.spring.web.reactive.DataBufferFactoryWrapper,java.lang.String)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpResponseBodyStream: void <init>(com.linecorp.armeria.common.HttpResponse,io.netty.util.concurrent.EventExecutor)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpConnector: void <init>(java.lang.Iterable,com.linecorp.armeria.spring.web.reactive.DataBufferFactoryWrapper)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: long parseDataSize(java.lang.String)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: int ensureValidPort(int)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpHandlerAdapter: reactor.core.publisher.Mono handle(com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest,java.util.concurrent.CompletableFuture,java.lang.String)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: java.util.function.Function contentEncodingDecorator(java.lang.String[],java.lang.String[],int)>",
    "<com.linecorp.armeria.spring.ArmeriaSettings$Port: com.linecorp.armeria.spring.ArmeriaSettings$Port setProtocols(java.util.List)>"
  ],
  "1.7.1": [
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpConnector: com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest createRequest(org.springframework.http.HttpMethod,java.net.URI)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: void lambda$configureTls$4(javax.net.ssl.TrustManagerFactory,com.linecorp.armeria.spring.Ssl,io.netty.handler.ssl.SslContextBuilder)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void stop()>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: reactor.core.publisher.Mono lambda$write$3(reactor.core.publisher.Flux,reactor.util.context.ContextView)>",
    "<com.linecorp.armeria.internal.spring.PrometheusSupport: boolean addExposition(com.linecorp.armeria.spring.ArmeriaSettings,com.linecorp.armeria.server.ServerBuilder,io.micrometer.core.instrument.MeterRegistry)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: void lambda$doCommit$4(java.lang.String,java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void <init>(com.linecorp.armeria.server.Server,com.linecorp.armeria.common.SessionProtocol,java.net.InetAddress,int,org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: void configureServerWithArmeriaSettings(com.linecorp.armeria.server.ServerBuilder,com.linecorp.armeria.spring.ArmeriaSettings,java.util.List,java.util.List,java.util.List,io.micrometer.core.instrument.MeterRegistry,java.util.List,java.util.List,com.linecorp.armeria.common.metric.MeterIdPrefixFunction)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: void addCookie(org.springframework.http.ResponseCookie)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void start()>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil$parse__10: java.lang.Object apply(java.lang.Object)>",
    "<com.linecorp.armeria.spring.AbstractArmeriaBeanPostProcessor: void <init>(org.springframework.beans.factory.BeanFactory)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: com.linecorp.armeria.common.HttpRequest lambda$setComplete$2()>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: void lambda$applyHeaders$0(java.lang.String,java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: org.springframework.boot.web.server.WebServer getWebServer(org.springframework.http.server.reactive.HttpHandler)>",
    "<com.linecorp.armeria.internal.spring.DropwizardSupport: com.linecorp.armeria.common.HttpResponse lambda$addExposition$0(com.fasterxml.jackson.databind.ObjectMapper,com.codahale.metrics.MetricRegistry,com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: reactor.core.publisher.Mono cleanup(java.lang.Throwable)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationNetUtil: void lambda$configurePorts$0(com.linecorp.armeria.server.ServerBuilder,com.linecorp.armeria.spring.ArmeriaSettings$Port)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: com.linecorp.armeria.common.HttpResponse lambda$configureService$3(com.linecorp.armeria.spring.web.reactive.ArmeriaHttpHandlerAdapter,java.lang.String,com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: com.linecorp.armeria.common.HttpRequest lambda$write$1(reactor.core.publisher.Flux)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: com.linecorp.armeria.server.ServerBuilder configureService(com.linecorp.armeria.server.ServerBuilder,org.springframework.http.server.reactive.HttpHandler,com.linecorp.armeria.spring.web.reactive.DataBufferFactoryWrapper,java.lang.String)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpResponseBodyStream: void <init>(com.linecorp.armeria.common.HttpResponse,io.netty.util.concurrent.EventExecutor)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpConnector: void <init>(java.lang.Iterable,com.linecorp.armeria.spring.web.reactive.DataBufferFactoryWrapper)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: long parseDataSize(java.lang.String)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: int ensureValidPort(int)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpHandlerAdapter: reactor.core.publisher.Mono handle(com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest,java.util.concurrent.CompletableFuture,java.lang.String)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: java.util.function.Function contentEncodingDecorator(java.lang.String[],java.lang.String[],int)>",
    "<com.linecorp.armeria.spring.ArmeriaSettings$Port: com.linecorp.armeria.spring.ArmeriaSettings$Port setProtocols(java.util.List)>"
  ],
  "1.9.1": [
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpConnector: com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest createRequest(org.springframework.http.HttpMethod,java.net.URI)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: void lambda$configureTls$4(javax.net.ssl.TrustManagerFactory,com.linecorp.armeria.spring.Ssl,io.netty.handler.ssl.SslContextBuilder)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void stop()>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: reactor.core.publisher.Mono lambda$write$3(reactor.core.publisher.Flux,reactor.util.context.ContextView)>",
    "<com.linecorp.armeria.internal.spring.PrometheusSupport: boolean addExposition(com.linecorp.armeria.spring.ArmeriaSettings,com.linecorp.armeria.server.ServerBuilder,io.micrometer.core.instrument.MeterRegistry)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: void lambda$doCommit$4(java.lang.String,java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void <init>(com.linecorp.armeria.server.Server,com.linecorp.armeria.common.SessionProtocol,java.net.InetAddress,int,org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: void addCookie(org.springframework.http.ResponseCookie)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void start()>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil$parse__10: java.lang.Object apply(java.lang.Object)>",
    "<com.linecorp.armeria.spring.AbstractArmeriaBeanPostProcessor: void <init>(org.springframework.beans.factory.BeanFactory)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: com.linecorp.armeria.common.HttpRequest lambda$setComplete$2()>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: void lambda$applyHeaders$0(java.lang.String,java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: org.springframework.boot.web.server.WebServer getWebServer(org.springframework.http.server.reactive.HttpHandler)>",
    "<com.linecorp.armeria.internal.spring.DropwizardSupport: com.linecorp.armeria.common.HttpResponse lambda$addExposition$0(com.fasterxml.jackson.databind.ObjectMapper,com.codahale.metrics.MetricRegistry,com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: reactor.core.publisher.Mono cleanup(java.lang.Throwable)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationNetUtil: void lambda$configurePorts$0(com.linecorp.armeria.server.ServerBuilder,com.linecorp.armeria.spring.ArmeriaSettings$Port)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: com.linecorp.armeria.common.HttpResponse lambda$configureService$3(com.linecorp.armeria.spring.web.reactive.ArmeriaHttpHandlerAdapter,java.lang.String,com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: com.linecorp.armeria.common.HttpRequest lambda$write$1(reactor.core.publisher.Flux)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: com.linecorp.armeria.server.ServerBuilder configureService(com.linecorp.armeria.server.ServerBuilder,org.springframework.http.server.reactive.HttpHandler,com.linecorp.armeria.spring.web.reactive.DataBufferFactoryWrapper,java.lang.String)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpResponseBodyStream: void <init>(com.linecorp.armeria.common.HttpResponse,io.netty.util.concurrent.EventExecutor)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpConnector: void <init>(java.lang.Iterable,com.linecorp.armeria.spring.web.reactive.DataBufferFactoryWrapper)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: long parseDataSize(java.lang.String)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: int ensureValidPort(int)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: java.lang.Integer getRawStatusCode()>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpHandlerAdapter: reactor.core.publisher.Mono handle(com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest,java.util.concurrent.CompletableFuture,java.lang.String)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: void configureServerWithArmeriaSettings(com.linecorp.armeria.server.ServerBuilder,com.linecorp.armeria.spring.ArmeriaSettings,java.util.List,java.util.List,java.util.List,io.micrometer.core.instrument.MeterRegistry,java.util.List,java.util.List,com.linecorp.armeria.common.metric.MeterIdPrefixFunction,java.util.List)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: java.util.function.Function contentEncodingDecorator(java.lang.String[],java.lang.String[],int)>",
    "<com.linecorp.armeria.spring.ArmeriaSettings$Port: com.linecorp.armeria.spring.ArmeriaSettings$Port setProtocols(java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: org.springframework.http.HttpStatus getStatusCode()>"
  ],
  "0.99.9": [
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpConnector: com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest createRequest(org.springframework.http.HttpMethod,java.net.URI)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: void lambda$doCommit$4(java.lang.String,java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: void addCookie(org.springframework.http.ResponseCookie)>",
    "<com.linecorp.armeria.spring.web.ArmeriaWebServer: void start()>",
    "<com.linecorp.armeria.spring.ThriftServiceRegistrationBean: com.linecorp.armeria.spring.ThriftServiceRegistrationBean addExampleHeaders(java.lang.CharSequence,java.lang.String)>",
    "<com.linecorp.armeria.spring.AbstractArmeriaBeanPostProcessor: void <init>(org.springframework.beans.factory.BeanFactory)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: void lambda$applyHeaders$0(java.lang.String,java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: com.linecorp.armeria.common.HttpRequest lambda$setComplete$2()>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: org.springframework.boot.web.server.WebServer getWebServer(org.springframework.http.server.reactive.HttpHandler)>",
    "<com.linecorp.armeria.spring.ExampleHeaders: com.linecorp.armeria.spring.ExampleHeaders of(java.lang.CharSequence,java.lang.String)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpClientResponseSubscriber: void <init>(com.linecorp.armeria.common.HttpResponse)>",
    "<com.linecorp.armeria.internal.spring.DropwizardSupport: com.linecorp.armeria.common.HttpResponse lambda$addExposition$0(com.fasterxml.jackson.databind.ObjectMapper,com.codahale.metrics.MetricRegistry,com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: reactor.core.publisher.Mono cleanup(java.lang.Throwable)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationNetUtil: void lambda$configurePorts$0(com.linecorp.armeria.server.ServerBuilder,com.linecorp.armeria.spring.ArmeriaSettings$Port)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: reactor.core.publisher.Mono lambda$write$3(reactor.core.publisher.Flux)>",
    "<com.linecorp.armeria.spring.web.ArmeriaWebServer: void <init>(com.linecorp.armeria.server.Server,com.linecorp.armeria.common.SessionProtocol,java.net.InetAddress,int,org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>",
    "<com.linecorp.armeria.spring.GrpcExampleHeaders: com.linecorp.armeria.spring.GrpcExampleHeaders of(java.lang.String,java.lang.CharSequence,java.lang.String)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil$parse__83: java.lang.Object apply(java.lang.Object)>",
    "<com.linecorp.armeria.spring.AbstractServiceRegistrationBean: java.lang.Object setExampleRequests(java.lang.Iterable)>",
    "<com.linecorp.armeria.spring.ExampleHeaders: com.linecorp.armeria.spring.ExampleHeaders of(java.lang.String,java.lang.CharSequence,java.lang.String)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: com.linecorp.armeria.common.HttpRequest lambda$write$1(reactor.core.publisher.Flux)>",
    "<com.linecorp.armeria.spring.ThriftServiceRegistrationBean: com.linecorp.armeria.spring.ThriftServiceRegistrationBean addExampleHeaders(java.lang.String,java.lang.CharSequence,java.lang.String)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: com.linecorp.armeria.server.ServerBuilder configureService(com.linecorp.armeria.server.ServerBuilder,org.springframework.http.server.reactive.HttpHandler,com.linecorp.armeria.spring.web.reactive.DataBufferFactoryWrapper,java.lang.String)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpConnector: void <init>(java.lang.Iterable,com.linecorp.armeria.spring.web.reactive.DataBufferFactoryWrapper)>",
    "<com.linecorp.armeria.spring.GrpcExampleHeaders: com.linecorp.armeria.spring.GrpcExampleHeaders of(java.lang.String,java.lang.String,java.lang.CharSequence,java.lang.String)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: long parseDataSize(java.lang.String)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: int ensureValidPort(int)>",
    "<com.linecorp.armeria.spring.HttpServiceRegistrationBean: com.linecorp.armeria.spring.HttpServiceRegistrationBean setPathPattern(java.lang.String)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: void lambda$configureTls$8(javax.net.ssl.TrustManagerFactory,com.linecorp.armeria.spring.Ssl,io.netty.handler.ssl.SslContextBuilder)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: com.linecorp.armeria.common.HttpResponse lambda$configureService$5(com.linecorp.armeria.spring.web.reactive.ArmeriaHttpHandlerAdapter,java.lang.String,com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpHandlerAdapter: reactor.core.publisher.Mono handle(com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest,java.util.concurrent.CompletableFuture,java.lang.String)>",
    "<com.linecorp.armeria.spring.AbstractServiceRegistrationBean: java.lang.Object setExampleHeaders(java.lang.Iterable)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: java.util.function.Function contentEncodingDecorator(java.lang.String[],java.lang.String[],int)>",
    "<com.linecorp.armeria.spring.web.ArmeriaWebServer: void stop()>",
    "<com.linecorp.armeria.spring.ArmeriaSettings$Port: com.linecorp.armeria.spring.ArmeriaSettings$Port setProtocols(java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpClientResponseSubscriber: void complete(java.lang.Throwable)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: void configureServerWithArmeriaSettings(com.linecorp.armeria.server.ServerBuilder,com.linecorp.armeria.spring.ArmeriaSettings,io.micrometer.core.instrument.MeterRegistry,java.util.List)>"
  ],
  "1.12.0": [
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: reactor.core.publisher.Mono lambda$write$2(reactor.core.publisher.Flux,reactor.util.context.ContextView)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpConnector: com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest createRequest(org.springframework.http.HttpMethod,java.net.URI)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void stop()>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: void lambda$applyHeaders$3(java.lang.String,java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void <init>(com.linecorp.armeria.server.Server,com.linecorp.armeria.common.SessionProtocol,java.net.InetAddress,int,org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void start()>",
    "<com.linecorp.armeria.spring.AbstractArmeriaBeanPostProcessor: void <init>(org.springframework.beans.factory.BeanFactory)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: com.linecorp.armeria.common.HttpRequest lambda$setComplete$2()>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: void lambda$applyHeaders$0(java.lang.String,java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: org.springframework.boot.web.server.WebServer getWebServer(org.springframework.http.server.reactive.HttpHandler)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: reactor.core.publisher.Mono cleanup(java.lang.Throwable)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationNetUtil: void lambda$configurePorts$0(com.linecorp.armeria.server.ServerBuilder,com.linecorp.armeria.spring.ArmeriaSettings$Port)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: com.linecorp.armeria.common.HttpResponse lambda$configureService$3(com.linecorp.armeria.spring.web.reactive.ArmeriaHttpHandlerAdapter,java.lang.String,com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest)>",
    "<com.linecorp.armeria.spring.DropwizardExpositionService: com.linecorp.armeria.common.HttpResponse serve(com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: com.linecorp.armeria.common.HttpRequest lambda$write$1(reactor.core.publisher.Flux)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationSettingsUtil: void configureAccessLog(com.linecorp.armeria.server.ServerBuilder,com.linecorp.armeria.spring.ArmeriaSettings$AccessLog)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: com.linecorp.armeria.server.ServerBuilder configureService(com.linecorp.armeria.server.ServerBuilder,org.springframework.http.server.reactive.HttpHandler,com.linecorp.armeria.spring.web.reactive.DataBufferFactoryWrapper,java.lang.String)>",
    "<com.linecorp.armeria.spring.InternalServices: com.linecorp.armeria.spring.InternalServices of(com.linecorp.armeria.spring.ArmeriaSettings,io.micrometer.core.instrument.MeterRegistry,java.util.List,java.util.List,java.util.List,java.lang.Integer)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpResponseBodyStream: void <init>(com.linecorp.armeria.common.HttpResponse,io.netty.util.concurrent.EventExecutor)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpConnector: void <init>(java.lang.Iterable,com.linecorp.armeria.spring.web.reactive.DataBufferFactoryWrapper)>",
    "<com.linecorp.armeria.spring.PrometheusSupport: com.linecorp.armeria.server.metric.PrometheusExpositionService newExpositionService(io.micrometer.core.instrument.MeterRegistry)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: long parseDataSize(java.lang.String)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: int ensureValidPort(int)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil$parse__8: java.lang.Object apply(java.lang.Object)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpHandlerAdapter: reactor.core.publisher.Mono handle(com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest,java.util.concurrent.CompletableFuture,java.lang.String)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: void lambda$configureTls$2(javax.net.ssl.TrustManagerFactory,com.linecorp.armeria.spring.Ssl,io.netty.handler.ssl.SslContextBuilder)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: java.util.function.Function contentEncodingDecorator(java.lang.String[],java.lang.String[],int)>",
    "<com.linecorp.armeria.spring.ArmeriaSettings$Port: com.linecorp.armeria.spring.ArmeriaSettings$Port setProtocols(java.util.List)>"
  ],
  "1.10.0": [
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: reactor.core.publisher.Mono lambda$write$2(reactor.core.publisher.Flux,reactor.util.context.ContextView)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: void lambda$configureTls$4(javax.net.ssl.TrustManagerFactory,com.linecorp.armeria.spring.Ssl,io.netty.handler.ssl.SslContextBuilder)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpConnector: com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest createRequest(org.springframework.http.HttpMethod,java.net.URI)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void stop()>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: void lambda$applyHeaders$3(java.lang.String,java.util.List)>",
    "<com.linecorp.armeria.internal.spring.PrometheusSupport: boolean addExposition(com.linecorp.armeria.spring.ArmeriaSettings,com.linecorp.armeria.server.ServerBuilder,io.micrometer.core.instrument.MeterRegistry)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void <init>(com.linecorp.armeria.server.Server,com.linecorp.armeria.common.SessionProtocol,java.net.InetAddress,int,org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void start()>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil$parse__10: java.lang.Object apply(java.lang.Object)>",
    "<com.linecorp.armeria.spring.AbstractArmeriaBeanPostProcessor: void <init>(org.springframework.beans.factory.BeanFactory)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: com.linecorp.armeria.common.HttpRequest lambda$setComplete$2()>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: void lambda$applyHeaders$0(java.lang.String,java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: org.springframework.boot.web.server.WebServer getWebServer(org.springframework.http.server.reactive.HttpHandler)>",
    "<com.linecorp.armeria.internal.spring.DropwizardSupport: com.linecorp.armeria.common.HttpResponse lambda$addExposition$0(com.fasterxml.jackson.databind.ObjectMapper,com.codahale.metrics.MetricRegistry,com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: reactor.core.publisher.Mono cleanup(java.lang.Throwable)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationNetUtil: void lambda$configurePorts$0(com.linecorp.armeria.server.ServerBuilder,com.linecorp.armeria.spring.ArmeriaSettings$Port)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: com.linecorp.armeria.common.HttpResponse lambda$configureService$3(com.linecorp.armeria.spring.web.reactive.ArmeriaHttpHandlerAdapter,java.lang.String,com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: com.linecorp.armeria.common.HttpRequest lambda$write$1(reactor.core.publisher.Flux)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: com.linecorp.armeria.server.ServerBuilder configureService(com.linecorp.armeria.server.ServerBuilder,org.springframework.http.server.reactive.HttpHandler,com.linecorp.armeria.spring.web.reactive.DataBufferFactoryWrapper,java.lang.String)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpResponseBodyStream: void <init>(com.linecorp.armeria.common.HttpResponse,io.netty.util.concurrent.EventExecutor)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpConnector: void <init>(java.lang.Iterable,com.linecorp.armeria.spring.web.reactive.DataBufferFactoryWrapper)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: long parseDataSize(java.lang.String)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: int ensureValidPort(int)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpHandlerAdapter: reactor.core.publisher.Mono handle(com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest,java.util.concurrent.CompletableFuture,java.lang.String)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: void configureServerWithArmeriaSettings(com.linecorp.armeria.server.ServerBuilder,com.linecorp.armeria.spring.ArmeriaSettings,java.util.List,java.util.List,java.util.List,io.micrometer.core.instrument.MeterRegistry,java.util.List,java.util.List,com.linecorp.armeria.common.metric.MeterIdPrefixFunction,java.util.List)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: java.util.function.Function contentEncodingDecorator(java.lang.String[],java.lang.String[],int)>",
    "<com.linecorp.armeria.spring.ArmeriaSettings$Port: com.linecorp.armeria.spring.ArmeriaSettings$Port setProtocols(java.util.List)>"
  ],
  "1.13.1": [
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: reactor.core.publisher.Mono lambda$write$2(reactor.core.publisher.Flux,reactor.util.context.ContextView)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpConnector: com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest createRequest(org.springframework.http.HttpMethod,java.net.URI)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void stop()>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: void lambda$applyHeaders$3(java.lang.String,java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void <init>(com.linecorp.armeria.server.Server,com.linecorp.armeria.common.SessionProtocol,java.net.InetAddress,int,org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void start()>",
    "<com.linecorp.armeria.spring.AbstractArmeriaBeanPostProcessor: void <init>(org.springframework.beans.factory.BeanFactory)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: com.linecorp.armeria.common.HttpRequest lambda$setComplete$2()>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: void lambda$applyHeaders$0(java.lang.String,java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: org.springframework.boot.web.server.WebServer getWebServer(org.springframework.http.server.reactive.HttpHandler)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: reactor.core.publisher.Mono cleanup(java.lang.Throwable)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationNetUtil: void lambda$configurePorts$0(com.linecorp.armeria.server.ServerBuilder,com.linecorp.armeria.spring.ArmeriaSettings$Port)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: com.linecorp.armeria.common.HttpResponse lambda$configureService$3(com.linecorp.armeria.spring.web.reactive.ArmeriaHttpHandlerAdapter,java.lang.String,com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest)>",
    "<com.linecorp.armeria.spring.DropwizardExpositionService: com.linecorp.armeria.common.HttpResponse serve(com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: com.linecorp.armeria.common.HttpRequest lambda$write$1(reactor.core.publisher.Flux)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationSettingsUtil: void configureAccessLog(com.linecorp.armeria.server.ServerBuilder,com.linecorp.armeria.spring.ArmeriaSettings$AccessLog)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: com.linecorp.armeria.server.ServerBuilder configureService(com.linecorp.armeria.server.ServerBuilder,org.springframework.http.server.reactive.HttpHandler,com.linecorp.armeria.spring.web.reactive.DataBufferFactoryWrapper,java.lang.String)>",
    "<com.linecorp.armeria.spring.InternalServices: com.linecorp.armeria.spring.InternalServices of(com.linecorp.armeria.spring.ArmeriaSettings,io.micrometer.core.instrument.MeterRegistry,java.util.List,java.util.List,java.util.List,java.lang.Integer)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpResponseBodyStream: void <init>(com.linecorp.armeria.common.HttpResponse,io.netty.util.concurrent.EventExecutor)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpConnector: void <init>(java.lang.Iterable,com.linecorp.armeria.spring.web.reactive.DataBufferFactoryWrapper)>",
    "<com.linecorp.armeria.spring.PrometheusSupport: com.linecorp.armeria.server.metric.PrometheusExpositionService newExpositionService(io.micrometer.core.instrument.MeterRegistry)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: long parseDataSize(java.lang.String)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: int ensureValidPort(int)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil$parse__8: java.lang.Object apply(java.lang.Object)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpHandlerAdapter: reactor.core.publisher.Mono handle(com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest,java.util.concurrent.CompletableFuture,java.lang.String)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: void lambda$configureTls$2(javax.net.ssl.TrustManagerFactory,com.linecorp.armeria.spring.Ssl,io.netty.handler.ssl.SslContextBuilder)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: java.util.function.Function contentEncodingDecorator(java.lang.String[],java.lang.String[],int)>",
    "<com.linecorp.armeria.spring.ArmeriaSettings$Port: com.linecorp.armeria.spring.ArmeriaSettings$Port setProtocols(java.util.List)>"
  ],
  "1.2.0": [
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpConnector: com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest createRequest(org.springframework.http.HttpMethod,java.net.URI)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void stop()>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: void lambda$doCommit$4(java.lang.String,java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void <init>(com.linecorp.armeria.server.Server,com.linecorp.armeria.common.SessionProtocol,java.net.InetAddress,int,org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: void addCookie(org.springframework.http.ResponseCookie)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void start()>",
    "<com.linecorp.armeria.spring.AbstractArmeriaBeanPostProcessor: void <init>(org.springframework.beans.factory.BeanFactory)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: com.linecorp.armeria.common.HttpRequest lambda$setComplete$2()>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: void lambda$applyHeaders$0(java.lang.String,java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: org.springframework.boot.web.server.WebServer getWebServer(org.springframework.http.server.reactive.HttpHandler)>",
    "<com.linecorp.armeria.internal.spring.DropwizardSupport: com.linecorp.armeria.common.HttpResponse lambda$addExposition$0(com.fasterxml.jackson.databind.ObjectMapper,com.codahale.metrics.MetricRegistry,com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpClientResponseSubscriber: void <init>(com.linecorp.armeria.common.HttpResponse)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: reactor.core.publisher.Mono cleanup(java.lang.Throwable)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationNetUtil: void lambda$configurePorts$0(com.linecorp.armeria.server.ServerBuilder,com.linecorp.armeria.spring.ArmeriaSettings$Port)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: reactor.core.publisher.Mono lambda$write$3(reactor.core.publisher.Flux)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: com.linecorp.armeria.common.HttpRequest lambda$write$1(reactor.core.publisher.Flux)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil$parse__6: java.lang.Object apply(java.lang.Object)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: void configureServerWithArmeriaSettings(com.linecorp.armeria.server.ServerBuilder,com.linecorp.armeria.spring.ArmeriaSettings,io.micrometer.core.instrument.MeterRegistry,java.util.List,com.linecorp.armeria.common.metric.MeterIdPrefixFunction)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: com.linecorp.armeria.server.ServerBuilder configureService(com.linecorp.armeria.server.ServerBuilder,org.springframework.http.server.reactive.HttpHandler,com.linecorp.armeria.spring.web.reactive.DataBufferFactoryWrapper,java.lang.String)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: void lambda$configureTls$0(javax.net.ssl.TrustManagerFactory,com.linecorp.armeria.spring.Ssl,io.netty.handler.ssl.SslContextBuilder)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpConnector: void <init>(java.lang.Iterable,com.linecorp.armeria.spring.web.reactive.DataBufferFactoryWrapper)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: long parseDataSize(java.lang.String)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: int ensureValidPort(int)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: com.linecorp.armeria.common.HttpResponse lambda$configureService$5(com.linecorp.armeria.spring.web.reactive.ArmeriaHttpHandlerAdapter,java.lang.String,com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpHandlerAdapter: reactor.core.publisher.Mono handle(com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest,java.util.concurrent.CompletableFuture,java.lang.String)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: java.util.function.Function contentEncodingDecorator(java.lang.String[],java.lang.String[],int)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpClientResponseSubscriber: void complete(java.lang.Throwable)>",
    "<com.linecorp.armeria.spring.ArmeriaSettings$Port: com.linecorp.armeria.spring.ArmeriaSettings$Port setProtocols(java.util.List)>"
  ],
  "0.99.8": [
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpConnector: com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest createRequest(org.springframework.http.HttpMethod,java.net.URI)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: void lambda$doCommit$4(java.lang.String,java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: void addCookie(org.springframework.http.ResponseCookie)>",
    "<com.linecorp.armeria.spring.web.ArmeriaWebServer: void start()>",
    "<com.linecorp.armeria.spring.ThriftServiceRegistrationBean: com.linecorp.armeria.spring.ThriftServiceRegistrationBean addExampleHeaders(java.lang.CharSequence,java.lang.String)>",
    "<com.linecorp.armeria.spring.AbstractArmeriaBeanPostProcessor: void <init>(org.springframework.beans.factory.BeanFactory)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: void lambda$applyHeaders$0(java.lang.String,java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: com.linecorp.armeria.common.HttpRequest lambda$setComplete$2()>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: org.springframework.boot.web.server.WebServer getWebServer(org.springframework.http.server.reactive.HttpHandler)>",
    "<com.linecorp.armeria.spring.ExampleHeaders: com.linecorp.armeria.spring.ExampleHeaders of(java.lang.CharSequence,java.lang.String)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpClientResponseSubscriber: void <init>(com.linecorp.armeria.common.HttpResponse)>",
    "<com.linecorp.armeria.internal.spring.DropwizardSupport: com.linecorp.armeria.common.HttpResponse lambda$addExposition$0(com.fasterxml.jackson.databind.ObjectMapper,com.codahale.metrics.MetricRegistry,com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: reactor.core.publisher.Mono cleanup(java.lang.Throwable)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationNetUtil: void lambda$configurePorts$0(com.linecorp.armeria.server.ServerBuilder,com.linecorp.armeria.spring.ArmeriaSettings$Port)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: reactor.core.publisher.Mono lambda$write$3(reactor.core.publisher.Flux)>",
    "<com.linecorp.armeria.spring.web.ArmeriaWebServer: void <init>(com.linecorp.armeria.server.Server,com.linecorp.armeria.common.SessionProtocol,java.net.InetAddress,int,org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>",
    "<com.linecorp.armeria.spring.GrpcExampleHeaders: com.linecorp.armeria.spring.GrpcExampleHeaders of(java.lang.String,java.lang.CharSequence,java.lang.String)>",
    "<com.linecorp.armeria.spring.AbstractServiceRegistrationBean: java.lang.Object setExampleRequests(java.lang.Iterable)>",
    "<com.linecorp.armeria.spring.ExampleHeaders: com.linecorp.armeria.spring.ExampleHeaders of(java.lang.String,java.lang.CharSequence,java.lang.String)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: com.linecorp.armeria.common.HttpRequest lambda$write$1(reactor.core.publisher.Flux)>",
    "<com.linecorp.armeria.spring.ThriftServiceRegistrationBean: com.linecorp.armeria.spring.ThriftServiceRegistrationBean addExampleHeaders(java.lang.String,java.lang.CharSequence,java.lang.String)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil$parse__12: java.lang.Object apply(java.lang.Object)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: com.linecorp.armeria.server.ServerBuilder configureService(com.linecorp.armeria.server.ServerBuilder,org.springframework.http.server.reactive.HttpHandler,com.linecorp.armeria.spring.web.reactive.DataBufferFactoryWrapper,java.lang.String)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpConnector: void <init>(java.lang.Iterable,com.linecorp.armeria.spring.web.reactive.DataBufferFactoryWrapper)>",
    "<com.linecorp.armeria.spring.GrpcExampleHeaders: com.linecorp.armeria.spring.GrpcExampleHeaders of(java.lang.String,java.lang.String,java.lang.CharSequence,java.lang.String)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: long parseDataSize(java.lang.String)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: int ensureValidPort(int)>",
    "<com.linecorp.armeria.spring.HttpServiceRegistrationBean: com.linecorp.armeria.spring.HttpServiceRegistrationBean setPathPattern(java.lang.String)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: void lambda$configureTls$8(javax.net.ssl.TrustManagerFactory,com.linecorp.armeria.spring.Ssl,io.netty.handler.ssl.SslContextBuilder)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpHandlerAdapter: reactor.core.publisher.Mono handle(com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest,java.util.concurrent.CompletableFuture,java.lang.String)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: com.linecorp.armeria.common.HttpResponse lambda$configureService$4(com.linecorp.armeria.spring.web.reactive.ArmeriaHttpHandlerAdapter,java.lang.String,com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest)>",
    "<com.linecorp.armeria.spring.AbstractServiceRegistrationBean: java.lang.Object setExampleHeaders(java.lang.Iterable)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: java.util.function.Function contentEncodingDecorator(java.lang.String[],java.lang.String[],int)>",
    "<com.linecorp.armeria.spring.web.ArmeriaWebServer: void stop()>",
    "<com.linecorp.armeria.spring.ArmeriaSettings$Port: com.linecorp.armeria.spring.ArmeriaSettings$Port setProtocols(java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpClientResponseSubscriber: void complete(java.lang.Throwable)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: void configureServerWithArmeriaSettings(com.linecorp.armeria.server.ServerBuilder,com.linecorp.armeria.spring.ArmeriaSettings,io.micrometer.core.instrument.MeterRegistry,java.util.List)>"
  ],
  "1.13.0": [
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: reactor.core.publisher.Mono lambda$write$2(reactor.core.publisher.Flux,reactor.util.context.ContextView)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpConnector: com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest createRequest(org.springframework.http.HttpMethod,java.net.URI)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void stop()>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: void lambda$applyHeaders$3(java.lang.String,java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void <init>(com.linecorp.armeria.server.Server,com.linecorp.armeria.common.SessionProtocol,java.net.InetAddress,int,org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void start()>",
    "<com.linecorp.armeria.spring.AbstractArmeriaBeanPostProcessor: void <init>(org.springframework.beans.factory.BeanFactory)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: com.linecorp.armeria.common.HttpRequest lambda$setComplete$2()>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: void lambda$applyHeaders$0(java.lang.String,java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: org.springframework.boot.web.server.WebServer getWebServer(org.springframework.http.server.reactive.HttpHandler)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: reactor.core.publisher.Mono cleanup(java.lang.Throwable)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationNetUtil: void lambda$configurePorts$0(com.linecorp.armeria.server.ServerBuilder,com.linecorp.armeria.spring.ArmeriaSettings$Port)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: com.linecorp.armeria.common.HttpResponse lambda$configureService$3(com.linecorp.armeria.spring.web.reactive.ArmeriaHttpHandlerAdapter,java.lang.String,com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest)>",
    "<com.linecorp.armeria.spring.DropwizardExpositionService: com.linecorp.armeria.common.HttpResponse serve(com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: com.linecorp.armeria.common.HttpRequest lambda$write$1(reactor.core.publisher.Flux)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationSettingsUtil: void configureAccessLog(com.linecorp.armeria.server.ServerBuilder,com.linecorp.armeria.spring.ArmeriaSettings$AccessLog)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: com.linecorp.armeria.server.ServerBuilder configureService(com.linecorp.armeria.server.ServerBuilder,org.springframework.http.server.reactive.HttpHandler,com.linecorp.armeria.spring.web.reactive.DataBufferFactoryWrapper,java.lang.String)>",
    "<com.linecorp.armeria.spring.InternalServices: com.linecorp.armeria.spring.InternalServices of(com.linecorp.armeria.spring.ArmeriaSettings,io.micrometer.core.instrument.MeterRegistry,java.util.List,java.util.List,java.util.List,java.lang.Integer)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpResponseBodyStream: void <init>(com.linecorp.armeria.common.HttpResponse,io.netty.util.concurrent.EventExecutor)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpConnector: void <init>(java.lang.Iterable,com.linecorp.armeria.spring.web.reactive.DataBufferFactoryWrapper)>",
    "<com.linecorp.armeria.spring.PrometheusSupport: com.linecorp.armeria.server.metric.PrometheusExpositionService newExpositionService(io.micrometer.core.instrument.MeterRegistry)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: long parseDataSize(java.lang.String)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: int ensureValidPort(int)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil$parse__8: java.lang.Object apply(java.lang.Object)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpHandlerAdapter: reactor.core.publisher.Mono handle(com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest,java.util.concurrent.CompletableFuture,java.lang.String)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: void lambda$configureTls$2(javax.net.ssl.TrustManagerFactory,com.linecorp.armeria.spring.Ssl,io.netty.handler.ssl.SslContextBuilder)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: java.util.function.Function contentEncodingDecorator(java.lang.String[],java.lang.String[],int)>",
    "<com.linecorp.armeria.spring.ArmeriaSettings$Port: com.linecorp.armeria.spring.ArmeriaSettings$Port setProtocols(java.util.List)>"
  ],
  "1.7.2": [
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpConnector: com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest createRequest(org.springframework.http.HttpMethod,java.net.URI)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: void lambda$configureTls$4(javax.net.ssl.TrustManagerFactory,com.linecorp.armeria.spring.Ssl,io.netty.handler.ssl.SslContextBuilder)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void stop()>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: reactor.core.publisher.Mono lambda$write$3(reactor.core.publisher.Flux,reactor.util.context.ContextView)>",
    "<com.linecorp.armeria.internal.spring.PrometheusSupport: boolean addExposition(com.linecorp.armeria.spring.ArmeriaSettings,com.linecorp.armeria.server.ServerBuilder,io.micrometer.core.instrument.MeterRegistry)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: void lambda$doCommit$4(java.lang.String,java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void <init>(com.linecorp.armeria.server.Server,com.linecorp.armeria.common.SessionProtocol,java.net.InetAddress,int,org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: void configureServerWithArmeriaSettings(com.linecorp.armeria.server.ServerBuilder,com.linecorp.armeria.spring.ArmeriaSettings,java.util.List,java.util.List,java.util.List,io.micrometer.core.instrument.MeterRegistry,java.util.List,java.util.List,com.linecorp.armeria.common.metric.MeterIdPrefixFunction)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: void addCookie(org.springframework.http.ResponseCookie)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void start()>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil$parse__10: java.lang.Object apply(java.lang.Object)>",
    "<com.linecorp.armeria.spring.AbstractArmeriaBeanPostProcessor: void <init>(org.springframework.beans.factory.BeanFactory)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: com.linecorp.armeria.common.HttpRequest lambda$setComplete$2()>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: void lambda$applyHeaders$0(java.lang.String,java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: org.springframework.boot.web.server.WebServer getWebServer(org.springframework.http.server.reactive.HttpHandler)>",
    "<com.linecorp.armeria.internal.spring.DropwizardSupport: com.linecorp.armeria.common.HttpResponse lambda$addExposition$0(com.fasterxml.jackson.databind.ObjectMapper,com.codahale.metrics.MetricRegistry,com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: reactor.core.publisher.Mono cleanup(java.lang.Throwable)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationNetUtil: void lambda$configurePorts$0(com.linecorp.armeria.server.ServerBuilder,com.linecorp.armeria.spring.ArmeriaSettings$Port)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: com.linecorp.armeria.common.HttpResponse lambda$configureService$3(com.linecorp.armeria.spring.web.reactive.ArmeriaHttpHandlerAdapter,java.lang.String,com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: com.linecorp.armeria.common.HttpRequest lambda$write$1(reactor.core.publisher.Flux)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: com.linecorp.armeria.server.ServerBuilder configureService(com.linecorp.armeria.server.ServerBuilder,org.springframework.http.server.reactive.HttpHandler,com.linecorp.armeria.spring.web.reactive.DataBufferFactoryWrapper,java.lang.String)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpResponseBodyStream: void <init>(com.linecorp.armeria.common.HttpResponse,io.netty.util.concurrent.EventExecutor)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpConnector: void <init>(java.lang.Iterable,com.linecorp.armeria.spring.web.reactive.DataBufferFactoryWrapper)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: long parseDataSize(java.lang.String)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: int ensureValidPort(int)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpHandlerAdapter: reactor.core.publisher.Mono handle(com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest,java.util.concurrent.CompletableFuture,java.lang.String)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: java.util.function.Function contentEncodingDecorator(java.lang.String[],java.lang.String[],int)>",
    "<com.linecorp.armeria.spring.ArmeriaSettings$Port: com.linecorp.armeria.spring.ArmeriaSettings$Port setProtocols(java.util.List)>"
  ],
  "1.1.0": [
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpConnector: com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest createRequest(org.springframework.http.HttpMethod,java.net.URI)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void stop()>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: void lambda$doCommit$4(java.lang.String,java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void <init>(com.linecorp.armeria.server.Server,com.linecorp.armeria.common.SessionProtocol,java.net.InetAddress,int,org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: void addCookie(org.springframework.http.ResponseCookie)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void start()>",
    "<com.linecorp.armeria.spring.AbstractArmeriaBeanPostProcessor: void <init>(org.springframework.beans.factory.BeanFactory)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: com.linecorp.armeria.common.HttpRequest lambda$setComplete$2()>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: void lambda$applyHeaders$0(java.lang.String,java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: org.springframework.boot.web.server.WebServer getWebServer(org.springframework.http.server.reactive.HttpHandler)>",
    "<com.linecorp.armeria.internal.spring.DropwizardSupport: com.linecorp.armeria.common.HttpResponse lambda$addExposition$0(com.fasterxml.jackson.databind.ObjectMapper,com.codahale.metrics.MetricRegistry,com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpClientResponseSubscriber: void <init>(com.linecorp.armeria.common.HttpResponse)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: reactor.core.publisher.Mono cleanup(java.lang.Throwable)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationNetUtil: void lambda$configurePorts$0(com.linecorp.armeria.server.ServerBuilder,com.linecorp.armeria.spring.ArmeriaSettings$Port)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: reactor.core.publisher.Mono lambda$write$3(reactor.core.publisher.Flux)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: com.linecorp.armeria.common.HttpRequest lambda$write$1(reactor.core.publisher.Flux)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil$parse__6: java.lang.Object apply(java.lang.Object)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: void configureServerWithArmeriaSettings(com.linecorp.armeria.server.ServerBuilder,com.linecorp.armeria.spring.ArmeriaSettings,io.micrometer.core.instrument.MeterRegistry,java.util.List,com.linecorp.armeria.common.metric.MeterIdPrefixFunction)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: com.linecorp.armeria.server.ServerBuilder configureService(com.linecorp.armeria.server.ServerBuilder,org.springframework.http.server.reactive.HttpHandler,com.linecorp.armeria.spring.web.reactive.DataBufferFactoryWrapper,java.lang.String)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: void lambda$configureTls$0(javax.net.ssl.TrustManagerFactory,com.linecorp.armeria.spring.Ssl,io.netty.handler.ssl.SslContextBuilder)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpConnector: void <init>(java.lang.Iterable,com.linecorp.armeria.spring.web.reactive.DataBufferFactoryWrapper)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: long parseDataSize(java.lang.String)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: int ensureValidPort(int)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: com.linecorp.armeria.common.HttpResponse lambda$configureService$5(com.linecorp.armeria.spring.web.reactive.ArmeriaHttpHandlerAdapter,java.lang.String,com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpHandlerAdapter: reactor.core.publisher.Mono handle(com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest,java.util.concurrent.CompletableFuture,java.lang.String)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: java.util.function.Function contentEncodingDecorator(java.lang.String[],java.lang.String[],int)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpClientResponseSubscriber: void complete(java.lang.Throwable)>",
    "<com.linecorp.armeria.spring.ArmeriaSettings$Port: com.linecorp.armeria.spring.ArmeriaSettings$Port setProtocols(java.util.List)>"
  ],
  "1.13.3": [
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: reactor.core.publisher.Mono lambda$write$2(reactor.core.publisher.Flux,reactor.util.context.ContextView)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpConnector: com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest createRequest(org.springframework.http.HttpMethod,java.net.URI)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void stop()>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: void lambda$applyHeaders$3(java.lang.String,java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void <init>(com.linecorp.armeria.server.Server,com.linecorp.armeria.common.SessionProtocol,java.net.InetAddress,int,org.springframework.beans.factory.config.ConfigurableListableBeanFactory)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaWebServer: void start()>",
    "<com.linecorp.armeria.spring.AbstractArmeriaBeanPostProcessor: void <init>(org.springframework.beans.factory.BeanFactory)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: com.linecorp.armeria.common.HttpRequest lambda$setComplete$2()>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: void lambda$applyHeaders$0(java.lang.String,java.util.List)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: org.springframework.boot.web.server.WebServer getWebServer(org.springframework.http.server.reactive.HttpHandler)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaServerHttpResponse: reactor.core.publisher.Mono cleanup(java.lang.Throwable)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationNetUtil: void lambda$configurePorts$0(com.linecorp.armeria.server.ServerBuilder,com.linecorp.armeria.spring.ArmeriaSettings$Port)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: com.linecorp.armeria.common.HttpResponse lambda$configureService$3(com.linecorp.armeria.spring.web.reactive.ArmeriaHttpHandlerAdapter,java.lang.String,com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest)>",
    "<com.linecorp.armeria.spring.DropwizardExpositionService: com.linecorp.armeria.common.HttpResponse serve(com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpRequest: com.linecorp.armeria.common.HttpRequest lambda$write$1(reactor.core.publisher.Flux)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationSettingsUtil: void configureAccessLog(com.linecorp.armeria.server.ServerBuilder,com.linecorp.armeria.spring.ArmeriaSettings$AccessLog)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: com.linecorp.armeria.server.ServerBuilder configureService(com.linecorp.armeria.server.ServerBuilder,org.springframework.http.server.reactive.HttpHandler,com.linecorp.armeria.spring.web.reactive.DataBufferFactoryWrapper,java.lang.String)>",
    "<com.linecorp.armeria.spring.InternalServices: com.linecorp.armeria.spring.InternalServices of(com.linecorp.armeria.spring.ArmeriaSettings,io.micrometer.core.instrument.MeterRegistry,java.util.List,java.util.List,java.util.List,java.lang.Integer)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpResponseBodyStream: void <init>(com.linecorp.armeria.common.HttpResponse,io.netty.util.concurrent.EventExecutor)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaClientHttpConnector: void <init>(java.lang.Iterable,com.linecorp.armeria.spring.web.reactive.DataBufferFactoryWrapper)>",
    "<com.linecorp.armeria.spring.PrometheusSupport: com.linecorp.armeria.server.metric.PrometheusExpositionService newExpositionService(io.micrometer.core.instrument.MeterRegistry)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: long parseDataSize(java.lang.String)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaReactiveWebServerFactory: int ensureValidPort(int)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil$parse__8: java.lang.Object apply(java.lang.Object)>",
    "<com.linecorp.armeria.spring.web.reactive.ArmeriaHttpHandlerAdapter: reactor.core.publisher.Mono handle(com.linecorp.armeria.server.ServiceRequestContext,com.linecorp.armeria.common.HttpRequest,java.util.concurrent.CompletableFuture,java.lang.String)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: void lambda$configureTls$2(javax.net.ssl.TrustManagerFactory,com.linecorp.armeria.spring.Ssl,io.netty.handler.ssl.SslContextBuilder)>",
    "<com.linecorp.armeria.internal.spring.ArmeriaConfigurationUtil: java.util.function.Function contentEncodingDecorator(java.lang.String[],java.lang.String[],int)>",
    "<com.linecorp.armeria.spring.ArmeriaSettings$Port: com.linecorp.armeria.spring.ArmeriaSettings$Port setProtocols(java.util.List)>"
  ]
}