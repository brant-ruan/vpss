{
  "1.1.1": [
    "<org.cryptacular.x509.ExtensionReader: java.util.List readAuthorityInformationAccess()>",
    "<org.cryptacular.x509.ExtensionReader: org.bouncycastle.asn1.x509.SubjectKeyIdentifier readSubjectKeyIdentifier()>",
    "<org.cryptacular.pbe.PBES2EncryptionScheme: void <init>(org.bouncycastle.asn1.pkcs.PBES2Parameters,char[])>",
    "<org.cryptacular.x509.ExtensionReader: org.bouncycastle.asn1.x509.BasicConstraints readBasicConstraints()>",
    "<org.cryptacular.asn.OpenSSLPrivateKeyDecoder: org.bouncycastle.crypto.params.AsymmetricKeyParameter decodeASN1(byte[])>",
    "<org.cryptacular.util.KeyPairUtil: boolean isKeyPair(java.security.interfaces.ECPublicKey,java.security.interfaces.ECPrivateKey)>",
    "<org.cryptacular.asn.PKCS8PrivateKeyDecoder: org.bouncycastle.crypto.params.AsymmetricKeyParameter decodeASN1(byte[])>",
    "<org.cryptacular.adapter.AbstractWrappedKey: byte[] getEncoded()>",
    "<org.cryptacular.asn.PublicKeyDecoder: org.bouncycastle.crypto.params.AsymmetricKeyParameter decode(byte[],java.lang.Object[])>",
    "<org.cryptacular.asn.PKCS8PrivateKeyDecoder: byte[] decryptKey(byte[],char[])>",
    "<org.cryptacular.x509.ExtensionReader: org.bouncycastle.asn1.x509.AuthorityKeyIdentifier readAuthorityKeyIdentifier()>",
    "<org.cryptacular.x509.ExtensionReader: org.bouncycastle.asn1.x509.GeneralNames readSubjectAlternativeName()>",
    "<org.cryptacular.pbe.AbstractEncryptionScheme: void decrypt(java.io.InputStream,java.io.OutputStream)>",
    "<org.cryptacular.x509.ExtensionReader: java.util.List readCertificatePolicies()>",
    "<org.cryptacular.pbe.AbstractEncryptionScheme: void encrypt(java.io.InputStream,java.io.OutputStream)>",
    "<org.cryptacular.util.KeyPairUtil: boolean isKeyPair(java.security.interfaces.RSAPublicKey,java.security.interfaces.RSAPrivateKey)>",
    "<org.cryptacular.x509.ExtensionReader: java.util.List readCRLDistributionPoints()>",
    "<org.cryptacular.x509.ExtensionReader: java.util.List readExtendedKeyUsage()>",
    "<org.cryptacular.x509.ExtensionReader: org.bouncycastle.asn1.ASN1Encodable read(org.cryptacular.x509.ExtensionType)>",
    "<org.cryptacular.pbe.PBES2EncryptionScheme: void initCipher(org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator,org.bouncycastle.asn1.pkcs.EncryptionScheme)>",
    "<org.cryptacular.util.StreamUtil: byte[] readAll(java.io.InputStream,int)>",
    "<org.cryptacular.x509.ExtensionReader: org.bouncycastle.asn1.x509.GeneralNames readIssuerAlternativeName()>",
    "<org.cryptacular.x509.dn.NameReader: org.cryptacular.x509.dn.RDNSequence readX500Principal(javax.security.auth.x500.X500Principal)>"
  ],
  "1.2.0": [
    "<org.cryptacular.x509.ExtensionReader: java.util.List readAuthorityInformationAccess()>",
    "<org.cryptacular.x509.ExtensionReader: org.bouncycastle.asn1.x509.SubjectKeyIdentifier readSubjectKeyIdentifier()>",
    "<org.cryptacular.pbe.PBES2EncryptionScheme: void <init>(org.bouncycastle.asn1.pkcs.PBES2Parameters,char[])>",
    "<org.cryptacular.x509.ExtensionReader: org.bouncycastle.asn1.x509.BasicConstraints readBasicConstraints()>",
    "<org.cryptacular.asn.OpenSSLPrivateKeyDecoder: org.bouncycastle.crypto.params.AsymmetricKeyParameter decodeASN1(byte[])>",
    "<org.cryptacular.util.KeyPairUtil: boolean isKeyPair(java.security.interfaces.ECPublicKey,java.security.interfaces.ECPrivateKey)>",
    "<org.cryptacular.asn.PKCS8PrivateKeyDecoder: org.bouncycastle.crypto.params.AsymmetricKeyParameter decodeASN1(byte[])>",
    "<org.cryptacular.adapter.AbstractWrappedKey: byte[] getEncoded()>",
    "<org.cryptacular.asn.PublicKeyDecoder: org.bouncycastle.crypto.params.AsymmetricKeyParameter decode(byte[],java.lang.Object[])>",
    "<org.cryptacular.asn.PKCS8PrivateKeyDecoder: byte[] decryptKey(byte[],char[])>",
    "<org.cryptacular.x509.ExtensionReader: org.bouncycastle.asn1.x509.AuthorityKeyIdentifier readAuthorityKeyIdentifier()>",
    "<org.cryptacular.x509.ExtensionReader: org.bouncycastle.asn1.x509.GeneralNames readSubjectAlternativeName()>",
    "<org.cryptacular.pbe.AbstractEncryptionScheme: void decrypt(java.io.InputStream,java.io.OutputStream)>",
    "<org.cryptacular.x509.ExtensionReader: java.util.List readCertificatePolicies()>",
    "<org.cryptacular.pbe.AbstractEncryptionScheme: void encrypt(java.io.InputStream,java.io.OutputStream)>",
    "<org.cryptacular.util.KeyPairUtil: boolean isKeyPair(java.security.interfaces.RSAPublicKey,java.security.interfaces.RSAPrivateKey)>",
    "<org.cryptacular.x509.ExtensionReader: java.util.List readCRLDistributionPoints()>",
    "<org.cryptacular.x509.ExtensionReader: java.util.List readExtendedKeyUsage()>",
    "<org.cryptacular.x509.ExtensionReader: org.bouncycastle.asn1.ASN1Encodable read(org.cryptacular.x509.ExtensionType)>",
    "<org.cryptacular.pbe.PBES2EncryptionScheme: void initCipher(org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator,org.bouncycastle.asn1.pkcs.EncryptionScheme)>",
    "<org.cryptacular.util.StreamUtil: byte[] readAll(java.io.InputStream,int)>",
    "<org.cryptacular.x509.ExtensionReader: org.bouncycastle.asn1.x509.GeneralNames readIssuerAlternativeName()>",
    "<org.cryptacular.x509.dn.NameReader: org.cryptacular.x509.dn.RDNSequence readX500Principal(javax.security.auth.x500.X500Principal)>"
  ],
  "1.0": [
    "<org.cryptacular.x509.ExtensionReader: java.util.List readAuthorityInformationAccess()>",
    "<org.cryptacular.x509.ExtensionReader: org.bouncycastle.asn1.x509.SubjectKeyIdentifier readSubjectKeyIdentifier()>",
    "<org.cryptacular.pbe.PBES2EncryptionScheme: void <init>(org.bouncycastle.asn1.pkcs.PBES2Parameters,char[])>",
    "<org.cryptacular.util.KeyPairUtil: java.security.PrivateKey readPrivateKey(java.io.InputStream,char[])>",
    "<org.cryptacular.util.KeyPairUtil: java.security.PrivateKey readPrivateKey(java.io.InputStream)>",
    "<org.cryptacular.x509.ExtensionReader: org.bouncycastle.asn1.x509.BasicConstraints readBasicConstraints()>",
    "<org.cryptacular.asn.OpenSSLPrivateKeyDecoder: org.bouncycastle.crypto.params.AsymmetricKeyParameter decodeASN1(byte[])>",
    "<org.cryptacular.util.KeyPairUtil: boolean isKeyPair(java.security.interfaces.ECPublicKey,java.security.interfaces.ECPrivateKey)>",
    "<org.cryptacular.asn.PKCS8PrivateKeyDecoder: org.bouncycastle.crypto.params.AsymmetricKeyParameter decodeASN1(byte[])>",
    "<org.cryptacular.adapter.AbstractWrappedKey: byte[] getEncoded()>",
    "<org.cryptacular.asn.PublicKeyDecoder: org.bouncycastle.crypto.params.AsymmetricKeyParameter decode(byte[],java.lang.Object[])>",
    "<org.cryptacular.asn.PKCS8PrivateKeyDecoder: byte[] decryptKey(byte[],char[])>",
    "<org.cryptacular.x509.ExtensionReader: org.bouncycastle.asn1.x509.AuthorityKeyIdentifier readAuthorityKeyIdentifier()>",
    "<org.cryptacular.x509.ExtensionReader: org.bouncycastle.asn1.x509.GeneralNames readSubjectAlternativeName()>",
    "<org.cryptacular.pbe.AbstractEncryptionScheme: void decrypt(java.io.InputStream,java.io.OutputStream)>",
    "<org.cryptacular.x509.ExtensionReader: java.util.List readCertificatePolicies()>",
    "<org.cryptacular.pbe.AbstractEncryptionScheme: void encrypt(java.io.InputStream,java.io.OutputStream)>",
    "<org.cryptacular.util.KeyPairUtil: java.security.PublicKey readPublicKey(java.io.InputStream)>",
    "<org.cryptacular.util.KeyPairUtil: boolean isKeyPair(java.security.interfaces.RSAPublicKey,java.security.interfaces.RSAPrivateKey)>",
    "<org.cryptacular.x509.ExtensionReader: java.util.List readCRLDistributionPoints()>",
    "<org.cryptacular.x509.ExtensionReader: java.util.List readExtendedKeyUsage()>",
    "<org.cryptacular.x509.ExtensionReader: org.bouncycastle.asn1.ASN1Encodable read(org.cryptacular.x509.ExtensionType)>",
    "<org.cryptacular.pbe.PBES2EncryptionScheme: void initCipher(org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator,org.bouncycastle.asn1.pkcs.EncryptionScheme)>",
    "<org.cryptacular.util.StreamUtil: byte[] readAll(java.io.InputStream,int)>",
    "<org.cryptacular.x509.ExtensionReader: org.bouncycastle.asn1.x509.GeneralNames readIssuerAlternativeName()>",
    "<org.cryptacular.x509.dn.NameReader: org.cryptacular.x509.dn.RDNSequence readX500Principal(javax.security.auth.x500.X500Principal)>"
  ],
  "1.1.0": [
    "<org.cryptacular.x509.ExtensionReader: java.util.List readAuthorityInformationAccess()>",
    "<org.cryptacular.x509.ExtensionReader: org.bouncycastle.asn1.x509.SubjectKeyIdentifier readSubjectKeyIdentifier()>",
    "<org.cryptacular.pbe.PBES2EncryptionScheme: void <init>(org.bouncycastle.asn1.pkcs.PBES2Parameters,char[])>",
    "<org.cryptacular.x509.ExtensionReader: org.bouncycastle.asn1.x509.BasicConstraints readBasicConstraints()>",
    "<org.cryptacular.asn.OpenSSLPrivateKeyDecoder: org.bouncycastle.crypto.params.AsymmetricKeyParameter decodeASN1(byte[])>",
    "<org.cryptacular.util.KeyPairUtil: boolean isKeyPair(java.security.interfaces.ECPublicKey,java.security.interfaces.ECPrivateKey)>",
    "<org.cryptacular.asn.PKCS8PrivateKeyDecoder: org.bouncycastle.crypto.params.AsymmetricKeyParameter decodeASN1(byte[])>",
    "<org.cryptacular.adapter.AbstractWrappedKey: byte[] getEncoded()>",
    "<org.cryptacular.asn.PublicKeyDecoder: org.bouncycastle.crypto.params.AsymmetricKeyParameter decode(byte[],java.lang.Object[])>",
    "<org.cryptacular.asn.PKCS8PrivateKeyDecoder: byte[] decryptKey(byte[],char[])>",
    "<org.cryptacular.x509.ExtensionReader: org.bouncycastle.asn1.x509.AuthorityKeyIdentifier readAuthorityKeyIdentifier()>",
    "<org.cryptacular.x509.ExtensionReader: org.bouncycastle.asn1.x509.GeneralNames readSubjectAlternativeName()>",
    "<org.cryptacular.pbe.AbstractEncryptionScheme: void decrypt(java.io.InputStream,java.io.OutputStream)>",
    "<org.cryptacular.x509.ExtensionReader: java.util.List readCertificatePolicies()>",
    "<org.cryptacular.pbe.AbstractEncryptionScheme: void encrypt(java.io.InputStream,java.io.OutputStream)>",
    "<org.cryptacular.util.KeyPairUtil: boolean isKeyPair(java.security.interfaces.RSAPublicKey,java.security.interfaces.RSAPrivateKey)>",
    "<org.cryptacular.x509.ExtensionReader: java.util.List readCRLDistributionPoints()>",
    "<org.cryptacular.x509.ExtensionReader: java.util.List readExtendedKeyUsage()>",
    "<org.cryptacular.x509.ExtensionReader: org.bouncycastle.asn1.ASN1Encodable read(org.cryptacular.x509.ExtensionType)>",
    "<org.cryptacular.pbe.PBES2EncryptionScheme: void initCipher(org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator,org.bouncycastle.asn1.pkcs.EncryptionScheme)>",
    "<org.cryptacular.util.StreamUtil: byte[] readAll(java.io.InputStream,int)>",
    "<org.cryptacular.x509.ExtensionReader: org.bouncycastle.asn1.x509.GeneralNames readIssuerAlternativeName()>",
    "<org.cryptacular.x509.dn.NameReader: org.cryptacular.x509.dn.RDNSequence readX500Principal(javax.security.auth.x500.X500Principal)>"
  ]
}