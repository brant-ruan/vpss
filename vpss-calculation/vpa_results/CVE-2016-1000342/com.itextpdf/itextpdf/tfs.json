{
  "5.5.1": [
    "<com.itextpdf.text.pdf.security.CertificateUtil: org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Certificate,java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],com.itextpdf.text.pdf.PdfName,java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS1()>",
    "<com.itextpdf.text.pdf.security.LtvVerification: byte[] buildOCSPResponse(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getIssuer(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getCRLURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getSubject(byte[])>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.cms.KeyTransRecipientInfo computeRecipientInfo(java.security.cert.X509Certificate,byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getTSAURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void findOcsp(org.bouncycastle.asn1.ASN1Sequence)>",
    "<com.itextpdf.text.pdf.security.LtvVerification: com.itextpdf.text.pdf.PdfName getSignatureHashKey(java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS7(byte[],java.util.Calendar,com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],byte[],java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.ASN1EncodableVector buildUnauthenticatedAttributes(byte[])>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.ASN1Primitive createDERForRecipient(byte[],java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getStringFromGeneralName(org.bouncycastle.asn1.ASN1Primitive)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.DERSet getAuthenticatedAttributeSet(byte[],java.util.Calendar,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)>"
  ],
  "5.5.6": [
    "<com.itextpdf.text.pdf.security.CertificateUtil: org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Certificate,java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],com.itextpdf.text.pdf.PdfName,java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS1()>",
    "<com.itextpdf.text.pdf.security.LtvVerification: byte[] buildOCSPResponse(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getIssuer(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getCRLURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getSubject(byte[])>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.cms.KeyTransRecipientInfo computeRecipientInfo(java.security.cert.X509Certificate,byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getTSAURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void findOcsp(org.bouncycastle.asn1.ASN1Sequence)>",
    "<com.itextpdf.text.pdf.security.LtvVerification: com.itextpdf.text.pdf.PdfName getSignatureHashKey(java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS7(byte[],java.util.Calendar,com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],byte[],java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.ASN1EncodableVector buildUnauthenticatedAttributes(byte[])>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.ASN1Primitive createDERForRecipient(byte[],java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getStringFromGeneralName(org.bouncycastle.asn1.ASN1Primitive)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.DERSet getAuthenticatedAttributeSet(byte[],java.util.Calendar,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)>"
  ],
  "5.5.10": [
    "<com.itextpdf.text.pdf.security.CertificateUtil: org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Certificate,java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],com.itextpdf.text.pdf.PdfName,java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS1()>",
    "<com.itextpdf.text.pdf.security.LtvVerification: byte[] buildOCSPResponse(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getIssuer(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getCRLURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.cms.KeyTransRecipientInfo computeRecipientInfo(java.security.cert.X509Certificate,byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getTSAURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void findOcsp(org.bouncycastle.asn1.ASN1Sequence)>",
    "<com.itextpdf.text.pdf.security.LtvVerification: com.itextpdf.text.pdf.PdfName getSignatureHashKey(java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],byte[],java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.ASN1EncodableVector buildUnauthenticatedAttributes(byte[])>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.DERSet getAuthenticatedAttributeSet(byte[],byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.ASN1Primitive createDERForRecipient(byte[],java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.SignaturePolicyInfo: org.bouncycastle.asn1.esf.SignaturePolicyIdentifier toSignaturePolicyIdentifier()>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS7(byte[],com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getStringFromGeneralName(org.bouncycastle.asn1.ASN1Primitive)>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getSubject(byte[])>"
  ],
  "5.4.3": [
    "<com.itextpdf.text.pdf.security.CertificateUtil: org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Certificate,java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],com.itextpdf.text.pdf.PdfName,java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS1()>",
    "<com.itextpdf.text.pdf.security.LtvVerification: byte[] buildOCSPResponse(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getIssuer(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getCRLURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getSubject(byte[])>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.cms.KeyTransRecipientInfo computeRecipientInfo(java.security.cert.X509Certificate,byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getTSAURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void findOcsp(org.bouncycastle.asn1.ASN1Sequence)>",
    "<com.itextpdf.text.pdf.security.LtvVerification: com.itextpdf.text.pdf.PdfName getSignatureHashKey(java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS7(byte[],java.util.Calendar,com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],byte[],java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.ASN1EncodableVector buildUnauthenticatedAttributes(byte[])>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.ASN1Primitive createDERForRecipient(byte[],java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getStringFromGeneralName(org.bouncycastle.asn1.ASN1Primitive)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.DERSet getAuthenticatedAttributeSet(byte[],java.util.Calendar,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)>"
  ],
  "5.5.4": [
    "<com.itextpdf.text.pdf.security.CertificateUtil: org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Certificate,java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],com.itextpdf.text.pdf.PdfName,java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS1()>",
    "<com.itextpdf.text.pdf.security.LtvVerification: byte[] buildOCSPResponse(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getIssuer(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getCRLURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getSubject(byte[])>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.cms.KeyTransRecipientInfo computeRecipientInfo(java.security.cert.X509Certificate,byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getTSAURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void findOcsp(org.bouncycastle.asn1.ASN1Sequence)>",
    "<com.itextpdf.text.pdf.security.LtvVerification: com.itextpdf.text.pdf.PdfName getSignatureHashKey(java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS7(byte[],java.util.Calendar,com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],byte[],java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.ASN1EncodableVector buildUnauthenticatedAttributes(byte[])>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.ASN1Primitive createDERForRecipient(byte[],java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getStringFromGeneralName(org.bouncycastle.asn1.ASN1Primitive)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.DERSet getAuthenticatedAttributeSet(byte[],java.util.Calendar,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)>"
  ],
  "5.5.11": [
    "<com.itextpdf.text.pdf.security.CertificateUtil: org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Certificate,java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],com.itextpdf.text.pdf.PdfName,java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS1()>",
    "<com.itextpdf.text.pdf.security.LtvVerification: byte[] buildOCSPResponse(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getIssuer(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getCRLURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.cms.KeyTransRecipientInfo computeRecipientInfo(java.security.cert.X509Certificate,byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getTSAURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void findOcsp(org.bouncycastle.asn1.ASN1Sequence)>",
    "<com.itextpdf.text.pdf.security.LtvVerification: com.itextpdf.text.pdf.PdfName getSignatureHashKey(java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],byte[],java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.ASN1EncodableVector buildUnauthenticatedAttributes(byte[])>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.DERSet getAuthenticatedAttributeSet(byte[],byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.ASN1Primitive createDERForRecipient(byte[],java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.SignaturePolicyInfo: org.bouncycastle.asn1.esf.SignaturePolicyIdentifier toSignaturePolicyIdentifier()>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS7(byte[],com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getStringFromGeneralName(org.bouncycastle.asn1.ASN1Primitive)>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getSubject(byte[])>"
  ],
  "5.4.4": [
    "<com.itextpdf.text.pdf.security.CertificateUtil: org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Certificate,java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],com.itextpdf.text.pdf.PdfName,java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS1()>",
    "<com.itextpdf.text.pdf.security.LtvVerification: byte[] buildOCSPResponse(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getIssuer(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getCRLURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getSubject(byte[])>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.cms.KeyTransRecipientInfo computeRecipientInfo(java.security.cert.X509Certificate,byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getTSAURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void findOcsp(org.bouncycastle.asn1.ASN1Sequence)>",
    "<com.itextpdf.text.pdf.security.LtvVerification: com.itextpdf.text.pdf.PdfName getSignatureHashKey(java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS7(byte[],java.util.Calendar,com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],byte[],java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.ASN1EncodableVector buildUnauthenticatedAttributes(byte[])>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.ASN1Primitive createDERForRecipient(byte[],java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getStringFromGeneralName(org.bouncycastle.asn1.ASN1Primitive)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.DERSet getAuthenticatedAttributeSet(byte[],java.util.Calendar,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)>"
  ],
  "5.5.5": [
    "<com.itextpdf.text.pdf.security.CertificateUtil: org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Certificate,java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],com.itextpdf.text.pdf.PdfName,java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS1()>",
    "<com.itextpdf.text.pdf.security.LtvVerification: byte[] buildOCSPResponse(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getIssuer(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getCRLURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getSubject(byte[])>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.cms.KeyTransRecipientInfo computeRecipientInfo(java.security.cert.X509Certificate,byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getTSAURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void findOcsp(org.bouncycastle.asn1.ASN1Sequence)>",
    "<com.itextpdf.text.pdf.security.LtvVerification: com.itextpdf.text.pdf.PdfName getSignatureHashKey(java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS7(byte[],java.util.Calendar,com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],byte[],java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.ASN1EncodableVector buildUnauthenticatedAttributes(byte[])>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.ASN1Primitive createDERForRecipient(byte[],java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getStringFromGeneralName(org.bouncycastle.asn1.ASN1Primitive)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.DERSet getAuthenticatedAttributeSet(byte[],java.util.Calendar,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)>"
  ],
  "5.4.5": [
    "<com.itextpdf.text.pdf.security.CertificateUtil: org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Certificate,java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],com.itextpdf.text.pdf.PdfName,java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS1()>",
    "<com.itextpdf.text.pdf.security.LtvVerification: byte[] buildOCSPResponse(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getIssuer(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getCRLURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getSubject(byte[])>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.cms.KeyTransRecipientInfo computeRecipientInfo(java.security.cert.X509Certificate,byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getTSAURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void findOcsp(org.bouncycastle.asn1.ASN1Sequence)>",
    "<com.itextpdf.text.pdf.security.LtvVerification: com.itextpdf.text.pdf.PdfName getSignatureHashKey(java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS7(byte[],java.util.Calendar,com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],byte[],java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.ASN1EncodableVector buildUnauthenticatedAttributes(byte[])>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.ASN1Primitive createDERForRecipient(byte[],java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getStringFromGeneralName(org.bouncycastle.asn1.ASN1Primitive)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.DERSet getAuthenticatedAttributeSet(byte[],java.util.Calendar,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)>"
  ],
  "5.5.13": [
    "<com.itextpdf.text.pdf.security.CertificateUtil: org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Certificate,java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],com.itextpdf.text.pdf.PdfName,java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS1()>",
    "<com.itextpdf.text.pdf.security.LtvVerification: byte[] buildOCSPResponse(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getIssuer(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getCRLURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.cms.KeyTransRecipientInfo computeRecipientInfo(java.security.cert.X509Certificate,byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getTSAURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void findOcsp(org.bouncycastle.asn1.ASN1Sequence)>",
    "<com.itextpdf.text.pdf.security.LtvVerification: com.itextpdf.text.pdf.PdfName getSignatureHashKey(java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],byte[],java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.ASN1EncodableVector buildUnauthenticatedAttributes(byte[])>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.DERSet getAuthenticatedAttributeSet(byte[],byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.ASN1Primitive createDERForRecipient(byte[],java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.SignaturePolicyInfo: org.bouncycastle.asn1.esf.SignaturePolicyIdentifier toSignaturePolicyIdentifier()>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS7(byte[],com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getStringFromGeneralName(org.bouncycastle.asn1.ASN1Primitive)>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getSubject(byte[])>"
  ],
  "5.5.7": [
    "<com.itextpdf.text.pdf.security.CertificateUtil: org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Certificate,java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],com.itextpdf.text.pdf.PdfName,java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS1()>",
    "<com.itextpdf.text.pdf.security.LtvVerification: byte[] buildOCSPResponse(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getIssuer(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getCRLURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.cms.KeyTransRecipientInfo computeRecipientInfo(java.security.cert.X509Certificate,byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getTSAURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void findOcsp(org.bouncycastle.asn1.ASN1Sequence)>",
    "<com.itextpdf.text.pdf.security.LtvVerification: com.itextpdf.text.pdf.PdfName getSignatureHashKey(java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],byte[],java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.ASN1EncodableVector buildUnauthenticatedAttributes(byte[])>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.DERSet getAuthenticatedAttributeSet(byte[],byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.ASN1Primitive createDERForRecipient(byte[],java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS7(byte[],com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getStringFromGeneralName(org.bouncycastle.asn1.ASN1Primitive)>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getSubject(byte[])>"
  ],
  "5.5.3": [
    "<com.itextpdf.text.pdf.security.CertificateUtil: org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Certificate,java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],com.itextpdf.text.pdf.PdfName,java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS1()>",
    "<com.itextpdf.text.pdf.security.LtvVerification: byte[] buildOCSPResponse(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getIssuer(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getCRLURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getSubject(byte[])>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.cms.KeyTransRecipientInfo computeRecipientInfo(java.security.cert.X509Certificate,byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getTSAURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void findOcsp(org.bouncycastle.asn1.ASN1Sequence)>",
    "<com.itextpdf.text.pdf.security.LtvVerification: com.itextpdf.text.pdf.PdfName getSignatureHashKey(java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS7(byte[],java.util.Calendar,com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],byte[],java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.ASN1EncodableVector buildUnauthenticatedAttributes(byte[])>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.ASN1Primitive createDERForRecipient(byte[],java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getStringFromGeneralName(org.bouncycastle.asn1.ASN1Primitive)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.DERSet getAuthenticatedAttributeSet(byte[],java.util.Calendar,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)>"
  ],
  "5.5.0": [
    "<com.itextpdf.text.pdf.security.CertificateUtil: org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Certificate,java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],com.itextpdf.text.pdf.PdfName,java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS1()>",
    "<com.itextpdf.text.pdf.security.LtvVerification: byte[] buildOCSPResponse(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getIssuer(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getCRLURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getSubject(byte[])>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.cms.KeyTransRecipientInfo computeRecipientInfo(java.security.cert.X509Certificate,byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getTSAURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void findOcsp(org.bouncycastle.asn1.ASN1Sequence)>",
    "<com.itextpdf.text.pdf.security.LtvVerification: com.itextpdf.text.pdf.PdfName getSignatureHashKey(java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS7(byte[],java.util.Calendar,com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],byte[],java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.ASN1EncodableVector buildUnauthenticatedAttributes(byte[])>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.ASN1Primitive createDERForRecipient(byte[],java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getStringFromGeneralName(org.bouncycastle.asn1.ASN1Primitive)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.DERSet getAuthenticatedAttributeSet(byte[],java.util.Calendar,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)>"
  ],
  "5.5.9": [
    "<com.itextpdf.text.pdf.security.CertificateUtil: org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Certificate,java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],com.itextpdf.text.pdf.PdfName,java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS1()>",
    "<com.itextpdf.text.pdf.security.LtvVerification: byte[] buildOCSPResponse(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getIssuer(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getCRLURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.cms.KeyTransRecipientInfo computeRecipientInfo(java.security.cert.X509Certificate,byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getTSAURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void findOcsp(org.bouncycastle.asn1.ASN1Sequence)>",
    "<com.itextpdf.text.pdf.security.LtvVerification: com.itextpdf.text.pdf.PdfName getSignatureHashKey(java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],byte[],java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.ASN1EncodableVector buildUnauthenticatedAttributes(byte[])>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.DERSet getAuthenticatedAttributeSet(byte[],byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.ASN1Primitive createDERForRecipient(byte[],java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS7(byte[],com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getStringFromGeneralName(org.bouncycastle.asn1.ASN1Primitive)>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getSubject(byte[])>"
  ],
  "5.5.2": [
    "<com.itextpdf.text.pdf.security.CertificateUtil: org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Certificate,java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],com.itextpdf.text.pdf.PdfName,java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS1()>",
    "<com.itextpdf.text.pdf.security.LtvVerification: byte[] buildOCSPResponse(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getIssuer(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getCRLURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getSubject(byte[])>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.cms.KeyTransRecipientInfo computeRecipientInfo(java.security.cert.X509Certificate,byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getTSAURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void findOcsp(org.bouncycastle.asn1.ASN1Sequence)>",
    "<com.itextpdf.text.pdf.security.LtvVerification: com.itextpdf.text.pdf.PdfName getSignatureHashKey(java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS7(byte[],java.util.Calendar,com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],byte[],java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.ASN1EncodableVector buildUnauthenticatedAttributes(byte[])>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.ASN1Primitive createDERForRecipient(byte[],java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getStringFromGeneralName(org.bouncycastle.asn1.ASN1Primitive)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.DERSet getAuthenticatedAttributeSet(byte[],java.util.Calendar,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)>"
  ],
  "5.5.13.1": [
    "<com.itextpdf.text.pdf.security.CertificateUtil: org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Certificate,java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],com.itextpdf.text.pdf.PdfName,java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS1()>",
    "<com.itextpdf.text.pdf.security.LtvVerification: byte[] buildOCSPResponse(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getIssuer(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getCRLURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.cms.KeyTransRecipientInfo computeRecipientInfo(java.security.cert.X509Certificate,byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getTSAURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void findOcsp(org.bouncycastle.asn1.ASN1Sequence)>",
    "<com.itextpdf.text.pdf.security.LtvVerification: com.itextpdf.text.pdf.PdfName getSignatureHashKey(java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],byte[],java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.ASN1EncodableVector buildUnauthenticatedAttributes(byte[])>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.DERSet getAuthenticatedAttributeSet(byte[],byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.ASN1Primitive createDERForRecipient(byte[],java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.SignaturePolicyInfo: org.bouncycastle.asn1.esf.SignaturePolicyIdentifier toSignaturePolicyIdentifier()>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS7(byte[],com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getStringFromGeneralName(org.bouncycastle.asn1.ASN1Primitive)>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getSubject(byte[])>"
  ],
  "5.5.8": [
    "<com.itextpdf.text.pdf.security.CertificateUtil: org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Certificate,java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],com.itextpdf.text.pdf.PdfName,java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS1()>",
    "<com.itextpdf.text.pdf.security.LtvVerification: byte[] buildOCSPResponse(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getIssuer(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getCRLURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.cms.KeyTransRecipientInfo computeRecipientInfo(java.security.cert.X509Certificate,byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getTSAURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void findOcsp(org.bouncycastle.asn1.ASN1Sequence)>",
    "<com.itextpdf.text.pdf.security.LtvVerification: com.itextpdf.text.pdf.PdfName getSignatureHashKey(java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],byte[],java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.ASN1EncodableVector buildUnauthenticatedAttributes(byte[])>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.DERSet getAuthenticatedAttributeSet(byte[],byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.ASN1Primitive createDERForRecipient(byte[],java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS7(byte[],com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getStringFromGeneralName(org.bouncycastle.asn1.ASN1Primitive)>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getSubject(byte[])>"
  ],
  "5.5.12": [
    "<com.itextpdf.text.pdf.security.CertificateUtil: org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Certificate,java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],com.itextpdf.text.pdf.PdfName,java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS1()>",
    "<com.itextpdf.text.pdf.security.LtvVerification: byte[] buildOCSPResponse(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getIssuer(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getCRLURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.cms.KeyTransRecipientInfo computeRecipientInfo(java.security.cert.X509Certificate,byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getTSAURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void findOcsp(org.bouncycastle.asn1.ASN1Sequence)>",
    "<com.itextpdf.text.pdf.security.LtvVerification: com.itextpdf.text.pdf.PdfName getSignatureHashKey(java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],byte[],java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.ASN1EncodableVector buildUnauthenticatedAttributes(byte[])>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.DERSet getAuthenticatedAttributeSet(byte[],byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.ASN1Primitive createDERForRecipient(byte[],java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.SignaturePolicyInfo: org.bouncycastle.asn1.esf.SignaturePolicyIdentifier toSignaturePolicyIdentifier()>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS7(byte[],com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getStringFromGeneralName(org.bouncycastle.asn1.ASN1Primitive)>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getSubject(byte[])>"
  ],
  "5.4.0": [
    "<com.itextpdf.text.pdf.security.CertificateUtil: org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Certificate,java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],com.itextpdf.text.pdf.PdfName,java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS1()>",
    "<com.itextpdf.text.pdf.security.LtvVerification: byte[] buildOCSPResponse(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getIssuer(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getCRLURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getSubject(byte[])>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.cms.KeyTransRecipientInfo computeRecipientInfo(java.security.cert.X509Certificate,byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getTSAURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void findOcsp(org.bouncycastle.asn1.ASN1Sequence)>",
    "<com.itextpdf.text.pdf.security.LtvVerification: com.itextpdf.text.pdf.PdfName getSignatureHashKey(java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS7(byte[],java.util.Calendar,com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],byte[],java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.ASN1EncodableVector buildUnauthenticatedAttributes(byte[])>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.ASN1Primitive createDERForRecipient(byte[],java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getStringFromGeneralName(org.bouncycastle.asn1.ASN1Primitive)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.DERSet getAuthenticatedAttributeSet(byte[],java.util.Calendar,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)>"
  ],
  "5.4.1": [
    "<com.itextpdf.text.pdf.security.CertificateUtil: org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Certificate,java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],com.itextpdf.text.pdf.PdfName,java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS1()>",
    "<com.itextpdf.text.pdf.security.LtvVerification: byte[] buildOCSPResponse(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getIssuer(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getCRLURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getSubject(byte[])>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.cms.KeyTransRecipientInfo computeRecipientInfo(java.security.cert.X509Certificate,byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getTSAURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void findOcsp(org.bouncycastle.asn1.ASN1Sequence)>",
    "<com.itextpdf.text.pdf.security.LtvVerification: com.itextpdf.text.pdf.PdfName getSignatureHashKey(java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS7(byte[],java.util.Calendar,com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],byte[],java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.ASN1EncodableVector buildUnauthenticatedAttributes(byte[])>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.ASN1Primitive createDERForRecipient(byte[],java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getStringFromGeneralName(org.bouncycastle.asn1.ASN1Primitive)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.DERSet getAuthenticatedAttributeSet(byte[],java.util.Calendar,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)>"
  ],
  "5.4.2": [
    "<com.itextpdf.text.pdf.security.CertificateUtil: org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Certificate,java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],com.itextpdf.text.pdf.PdfName,java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS1()>",
    "<com.itextpdf.text.pdf.security.LtvVerification: byte[] buildOCSPResponse(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getIssuer(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getCRLURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getSubject(byte[])>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.cms.KeyTransRecipientInfo computeRecipientInfo(java.security.cert.X509Certificate,byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getTSAURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void findOcsp(org.bouncycastle.asn1.ASN1Sequence)>",
    "<com.itextpdf.text.pdf.security.LtvVerification: com.itextpdf.text.pdf.PdfName getSignatureHashKey(java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS7(byte[],java.util.Calendar,com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],byte[],java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.ASN1EncodableVector buildUnauthenticatedAttributes(byte[])>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.ASN1Primitive createDERForRecipient(byte[],java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getStringFromGeneralName(org.bouncycastle.asn1.ASN1Primitive)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.DERSet getAuthenticatedAttributeSet(byte[],java.util.Calendar,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)>"
  ],
  "5.3.4": [
    "<com.itextpdf.text.pdf.security.CertificateUtil: org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Certificate,java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],com.itextpdf.text.pdf.PdfName,java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS1()>",
    "<com.itextpdf.text.pdf.security.LtvVerification: byte[] buildOCSPResponse(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getIssuer(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getCRLURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getSubject(byte[])>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.cms.KeyTransRecipientInfo computeRecipientInfo(java.security.cert.X509Certificate,byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getTSAURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void findOcsp(org.bouncycastle.asn1.ASN1Sequence)>",
    "<com.itextpdf.text.pdf.security.LtvVerification: com.itextpdf.text.pdf.PdfName getSignatureHashKey(java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS7(byte[],java.util.Calendar,com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],byte[],java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.ASN1EncodableVector buildUnauthenticatedAttributes(byte[])>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.ASN1Primitive createDERForRecipient(byte[],java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getStringFromGeneralName(org.bouncycastle.asn1.ASN1Primitive)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.DERSet getAuthenticatedAttributeSet(byte[],java.util.Calendar,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)>"
  ],
  "5.3.1": [
    "<com.itextpdf.text.pdf.security.CertificateUtil: org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Certificate,java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS1()>",
    "<com.itextpdf.text.pdf.security.LtvVerification: byte[] buildOCSPResponse(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getIssuer(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getCRLURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.cms.KeyTransRecipientInfo computeRecipientInfo(java.security.cert.X509Certificate,byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getTSAURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void findOcsp(org.bouncycastle.asn1.ASN1Sequence)>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getStringFromGeneralName(org.bouncycastle.asn1.ASN1Primitive)>",
    "<com.itextpdf.text.pdf.security.LtvVerification: com.itextpdf.text.pdf.PdfName getSignatureHashKey(java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS7(byte[],java.util.Calendar,com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,boolean)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],byte[],java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.ASN1EncodableVector buildUnauthenticatedAttributes(byte[])>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],boolean,java.lang.String)>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.ASN1Primitive createDERForRecipient(byte[],java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.DERSet getAuthenticatedAttributeSet(byte[],java.util.Calendar,byte[],java.util.Collection,boolean)>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getSubject(byte[])>"
  ],
  "5.3.0": [
    "<com.itextpdf.text.pdf.security.CertificateUtil: org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Certificate,java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS1()>",
    "<com.itextpdf.text.pdf.security.LtvVerification: byte[] buildOCSPResponse(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getIssuer(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getCRLURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.cms.KeyTransRecipientInfo computeRecipientInfo(java.security.cert.X509Certificate,byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getTSAURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void findOcsp(org.bouncycastle.asn1.ASN1Sequence)>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getStringFromGeneralName(org.bouncycastle.asn1.ASN1Primitive)>",
    "<com.itextpdf.text.pdf.security.LtvVerification: com.itextpdf.text.pdf.PdfName getSignatureHashKey(java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS7(byte[],java.util.Calendar,com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,boolean)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],byte[],java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.ASN1EncodableVector buildUnauthenticatedAttributes(byte[])>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],boolean,java.lang.String)>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.ASN1Primitive createDERForRecipient(byte[],java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.DERSet getAuthenticatedAttributeSet(byte[],java.util.Calendar,byte[],java.util.Collection,boolean)>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getSubject(byte[])>"
  ],
  "5.3.2": [
    "<com.itextpdf.text.pdf.security.CertificateUtil: org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Certificate,java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS1()>",
    "<com.itextpdf.text.pdf.security.LtvVerification: byte[] buildOCSPResponse(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getIssuer(byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getCRLURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.CertificateInfo: org.bouncycastle.asn1.ASN1Primitive getSubject(byte[])>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.cms.KeyTransRecipientInfo computeRecipientInfo(java.security.cert.X509Certificate,byte[])>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getTSAURL(java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void findOcsp(org.bouncycastle.asn1.ASN1Sequence)>",
    "<com.itextpdf.text.pdf.security.LtvVerification: com.itextpdf.text.pdf.PdfName getSignatureHashKey(java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: byte[] getEncodedPKCS7(byte[],java.util.Calendar,com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],byte[],java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: void <init>(byte[],boolean,java.lang.String)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.ASN1EncodableVector buildUnauthenticatedAttributes(byte[])>",
    "<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.ASN1Primitive createDERForRecipient(byte[],java.security.cert.X509Certificate)>",
    "<com.itextpdf.text.pdf.security.CertificateUtil: java.lang.String getStringFromGeneralName(org.bouncycastle.asn1.ASN1Primitive)>",
    "<com.itextpdf.text.pdf.security.PdfPKCS7: org.bouncycastle.asn1.DERSet getAuthenticatedAttributeSet(byte[],java.util.Calendar,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)>"
  ]
}