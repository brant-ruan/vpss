{
  "1.0.30": [
    "<net.ripe.rpki.commons.crypto.x509cert.AbstractX509CertificateWrapper: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getSubjectInformationAccess()>",
    "<net.ripe.rpki.commons.crypto.x509cert.AbstractX509CertificateWrapper: java.net.URI[] getCrlDistributionPoints()>",
    "<net.ripe.rpki.commons.crypto.x509cert.AbstractX509CertificateWrapper: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getAuthorityInformationAccess()>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: org.bouncycastle.asn1.ASN1Primitive decode(byte[])>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: org.bouncycastle.asn1.x509.Extensions getPkcs9Extensions()>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: byte[] encode(org.bouncycastle.asn1.ASN1Encodable)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addAIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithmOidFromEncodedCmsObject(byte[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getSubjectKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: boolean isEndEntityCertificate(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x500.X500Name principalToName(javax.security.auth.x500.X500Principal)>",
    "<net.ripe.rpki.commons.crypto.crl.X509Crl: java.math.BigInteger getNumber()>",
    "<net.ripe.rpki.commons.crypto.crl.X509CrlBuilder: org.bouncycastle.cert.X509v2CRLBuilder createCrlGenerator()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addSIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x509.SubjectPublicKeyInfo createSubjectPublicKeyInfo(java.security.PublicKey)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509ResourceCertificateParser: void validateCertificatePolicy()>",
    "<net.ripe.rpki.commons.crypto.rfc3779.ResourceExtensionEncoder: org.bouncycastle.asn1.ASN1Object asIdentifiersToDer(boolean,net.ripe.ipresource.IpResourceSet,boolean,net.ripe.ipresource.IpResourceSet)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: org.bouncycastle.asn1.x509.CRLDistPoint convertToCrlDistributionPoint(java.net.URI[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getAuthorityKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor: org.bouncycastle.asn1.x509.AccessDescription toAccessDescription()>",
    "<net.ripe.rpki.commons.crypto.cms.RpkiSignedObjectParser: void parseContent(org.bouncycastle.cms.CMSSignedDataParser)>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: void extractSiaUris()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: java.lang.String getEncodedSubjectPublicKeyInfo(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.x509cert.AbstractX509CertificateWrapper: boolean isCa()>"
  ],
  "1.0.34": [
    "<net.ripe.rpki.commons.crypto.x509cert.X509ResourceCertificateParser: void validateCrlDistributionPoints()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: boolean isCa(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: org.bouncycastle.asn1.ASN1Primitive decode(byte[])>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: org.bouncycastle.asn1.x509.Extensions getPkcs9Extensions()>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: byte[] encode(org.bouncycastle.asn1.ASN1Encodable)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addAIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithmOidFromEncodedCmsObject(byte[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getSubjectKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: boolean isEndEntityCertificate(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getAuthorityInformationAccess(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x500.X500Name principalToName(javax.security.auth.x500.X500Principal)>",
    "<net.ripe.rpki.commons.crypto.crl.X509Crl: java.math.BigInteger getNumber()>",
    "<net.ripe.rpki.commons.crypto.crl.X509CrlBuilder: org.bouncycastle.cert.X509v2CRLBuilder createCrlGenerator()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addSIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: java.net.URI[] getCrlDistributionPoints(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x509.SubjectPublicKeyInfo createSubjectPublicKeyInfo(java.security.PublicKey)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509ResourceCertificateParser: void validateCertificatePolicy()>",
    "<net.ripe.rpki.commons.crypto.rfc3779.ResourceExtensionEncoder: org.bouncycastle.asn1.ASN1Object asIdentifiersToDer(boolean,net.ripe.ipresource.IpResourceSet,boolean,net.ripe.ipresource.IpResourceSet)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: org.bouncycastle.asn1.x509.CRLDistPoint convertToCrlDistributionPoint(java.net.URI[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getAuthorityKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor: org.bouncycastle.asn1.x509.AccessDescription toAccessDescription()>",
    "<net.ripe.rpki.commons.crypto.cms.RpkiSignedObjectParser: void parseContent(org.bouncycastle.cms.CMSSignedDataParser)>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: void extractSiaUris()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: java.lang.String getEncodedSubjectPublicKeyInfo(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getSubjectInformationAccess(java.security.cert.X509Certificate)>"
  ],
  "1.1.1": [
    "<net.ripe.rpki.commons.crypto.x509cert.X509ResourceCertificateParser: void validateCrlDistributionPoints()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: boolean isCa(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: org.bouncycastle.asn1.ASN1Primitive decode(byte[])>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: org.bouncycastle.asn1.x509.Extensions getPkcs9Extensions()>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: byte[] encode(org.bouncycastle.asn1.ASN1Encodable)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addAIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithmOidFromEncodedCmsObject(byte[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getSubjectKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: boolean isEndEntityCertificate(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getAuthorityInformationAccess(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x500.X500Name principalToName(javax.security.auth.x500.X500Principal)>",
    "<net.ripe.rpki.commons.crypto.crl.X509Crl: java.math.BigInteger getNumber()>",
    "<net.ripe.rpki.commons.crypto.crl.X509CrlBuilder: org.bouncycastle.cert.X509v2CRLBuilder createCrlGenerator()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addSIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: java.net.URI[] getCrlDistributionPoints(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x509.SubjectPublicKeyInfo createSubjectPublicKeyInfo(java.security.PublicKey)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509ResourceCertificateParser: void validateCertificatePolicy()>",
    "<net.ripe.rpki.commons.crypto.rfc3779.ResourceExtensionEncoder: org.bouncycastle.asn1.ASN1Object asIdentifiersToDer(boolean,net.ripe.ipresource.IpResourceSet,boolean,net.ripe.ipresource.IpResourceSet)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: org.bouncycastle.asn1.x509.CRLDistPoint convertToCrlDistributionPoint(java.net.URI[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getAuthorityKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor: org.bouncycastle.asn1.x509.AccessDescription toAccessDescription()>",
    "<net.ripe.rpki.commons.crypto.cms.RpkiSignedObjectParser: void parseContent(org.bouncycastle.cms.CMSSignedDataParser)>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: void extractSiaUris()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: java.lang.String getEncodedSubjectPublicKeyInfo(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getSubjectInformationAccess(java.security.cert.X509Certificate)>"
  ],
  "1.0.33": [
    "<net.ripe.rpki.commons.crypto.x509cert.X509ResourceCertificateParser: void validateCrlDistributionPoints()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: boolean isCa(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: org.bouncycastle.asn1.ASN1Primitive decode(byte[])>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: org.bouncycastle.asn1.x509.Extensions getPkcs9Extensions()>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: byte[] encode(org.bouncycastle.asn1.ASN1Encodable)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addAIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithmOidFromEncodedCmsObject(byte[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getSubjectKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: boolean isEndEntityCertificate(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getAuthorityInformationAccess(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x500.X500Name principalToName(javax.security.auth.x500.X500Principal)>",
    "<net.ripe.rpki.commons.crypto.crl.X509Crl: java.math.BigInteger getNumber()>",
    "<net.ripe.rpki.commons.crypto.crl.X509CrlBuilder: org.bouncycastle.cert.X509v2CRLBuilder createCrlGenerator()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addSIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: java.net.URI[] getCrlDistributionPoints(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x509.SubjectPublicKeyInfo createSubjectPublicKeyInfo(java.security.PublicKey)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509ResourceCertificateParser: void validateCertificatePolicy()>",
    "<net.ripe.rpki.commons.crypto.rfc3779.ResourceExtensionEncoder: org.bouncycastle.asn1.ASN1Object asIdentifiersToDer(boolean,net.ripe.ipresource.IpResourceSet,boolean,net.ripe.ipresource.IpResourceSet)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: org.bouncycastle.asn1.x509.CRLDistPoint convertToCrlDistributionPoint(java.net.URI[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getAuthorityKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor: org.bouncycastle.asn1.x509.AccessDescription toAccessDescription()>",
    "<net.ripe.rpki.commons.crypto.cms.RpkiSignedObjectParser: void parseContent(org.bouncycastle.cms.CMSSignedDataParser)>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: void extractSiaUris()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: java.lang.String getEncodedSubjectPublicKeyInfo(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getSubjectInformationAccess(java.security.cert.X509Certificate)>"
  ],
  "1.0.38": [
    "<net.ripe.rpki.commons.crypto.x509cert.X509ResourceCertificateParser: void validateCrlDistributionPoints()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: boolean isCa(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: org.bouncycastle.asn1.ASN1Primitive decode(byte[])>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: org.bouncycastle.asn1.x509.Extensions getPkcs9Extensions()>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: byte[] encode(org.bouncycastle.asn1.ASN1Encodable)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addAIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithmOidFromEncodedCmsObject(byte[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getSubjectKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: boolean isEndEntityCertificate(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getAuthorityInformationAccess(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x500.X500Name principalToName(javax.security.auth.x500.X500Principal)>",
    "<net.ripe.rpki.commons.crypto.crl.X509Crl: java.math.BigInteger getNumber()>",
    "<net.ripe.rpki.commons.crypto.crl.X509CrlBuilder: org.bouncycastle.cert.X509v2CRLBuilder createCrlGenerator()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addSIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: java.net.URI[] getCrlDistributionPoints(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x509.SubjectPublicKeyInfo createSubjectPublicKeyInfo(java.security.PublicKey)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509ResourceCertificateParser: void validateCertificatePolicy()>",
    "<net.ripe.rpki.commons.crypto.rfc3779.ResourceExtensionEncoder: org.bouncycastle.asn1.ASN1Object asIdentifiersToDer(boolean,net.ripe.ipresource.IpResourceSet,boolean,net.ripe.ipresource.IpResourceSet)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: org.bouncycastle.asn1.x509.CRLDistPoint convertToCrlDistributionPoint(java.net.URI[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getAuthorityKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor: org.bouncycastle.asn1.x509.AccessDescription toAccessDescription()>",
    "<net.ripe.rpki.commons.crypto.cms.RpkiSignedObjectParser: void parseContent(org.bouncycastle.cms.CMSSignedDataParser)>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: void extractSiaUris()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: java.lang.String getEncodedSubjectPublicKeyInfo(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getSubjectInformationAccess(java.security.cert.X509Certificate)>"
  ],
  "1.0.40": [
    "<net.ripe.rpki.commons.crypto.x509cert.X509ResourceCertificateParser: void validateCrlDistributionPoints()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: boolean isCa(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: org.bouncycastle.asn1.ASN1Primitive decode(byte[])>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: org.bouncycastle.asn1.x509.Extensions getPkcs9Extensions()>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: byte[] encode(org.bouncycastle.asn1.ASN1Encodable)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addAIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithmOidFromEncodedCmsObject(byte[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getSubjectKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: boolean isEndEntityCertificate(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getAuthorityInformationAccess(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x500.X500Name principalToName(javax.security.auth.x500.X500Principal)>",
    "<net.ripe.rpki.commons.crypto.crl.X509Crl: java.math.BigInteger getNumber()>",
    "<net.ripe.rpki.commons.crypto.crl.X509CrlBuilder: org.bouncycastle.cert.X509v2CRLBuilder createCrlGenerator()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addSIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: java.net.URI[] getCrlDistributionPoints(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x509.SubjectPublicKeyInfo createSubjectPublicKeyInfo(java.security.PublicKey)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509ResourceCertificateParser: void validateCertificatePolicy()>",
    "<net.ripe.rpki.commons.crypto.rfc3779.ResourceExtensionEncoder: org.bouncycastle.asn1.ASN1Object asIdentifiersToDer(boolean,net.ripe.ipresource.IpResourceSet,boolean,net.ripe.ipresource.IpResourceSet)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: org.bouncycastle.asn1.x509.CRLDistPoint convertToCrlDistributionPoint(java.net.URI[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getAuthorityKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor: org.bouncycastle.asn1.x509.AccessDescription toAccessDescription()>",
    "<net.ripe.rpki.commons.crypto.cms.RpkiSignedObjectParser: void parseContent(org.bouncycastle.cms.CMSSignedDataParser)>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: void extractSiaUris()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: java.lang.String getEncodedSubjectPublicKeyInfo(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getSubjectInformationAccess(java.security.cert.X509Certificate)>"
  ],
  "1.0.37": [
    "<net.ripe.rpki.commons.crypto.x509cert.X509ResourceCertificateParser: void validateCrlDistributionPoints()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: boolean isCa(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: org.bouncycastle.asn1.ASN1Primitive decode(byte[])>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: org.bouncycastle.asn1.x509.Extensions getPkcs9Extensions()>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: byte[] encode(org.bouncycastle.asn1.ASN1Encodable)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addAIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithmOidFromEncodedCmsObject(byte[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getSubjectKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: boolean isEndEntityCertificate(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getAuthorityInformationAccess(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x500.X500Name principalToName(javax.security.auth.x500.X500Principal)>",
    "<net.ripe.rpki.commons.crypto.crl.X509Crl: java.math.BigInteger getNumber()>",
    "<net.ripe.rpki.commons.crypto.crl.X509CrlBuilder: org.bouncycastle.cert.X509v2CRLBuilder createCrlGenerator()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addSIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: java.net.URI[] getCrlDistributionPoints(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x509.SubjectPublicKeyInfo createSubjectPublicKeyInfo(java.security.PublicKey)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509ResourceCertificateParser: void validateCertificatePolicy()>",
    "<net.ripe.rpki.commons.crypto.rfc3779.ResourceExtensionEncoder: org.bouncycastle.asn1.ASN1Object asIdentifiersToDer(boolean,net.ripe.ipresource.IpResourceSet,boolean,net.ripe.ipresource.IpResourceSet)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: org.bouncycastle.asn1.x509.CRLDistPoint convertToCrlDistributionPoint(java.net.URI[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getAuthorityKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor: org.bouncycastle.asn1.x509.AccessDescription toAccessDescription()>",
    "<net.ripe.rpki.commons.crypto.cms.RpkiSignedObjectParser: void parseContent(org.bouncycastle.cms.CMSSignedDataParser)>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: void extractSiaUris()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: java.lang.String getEncodedSubjectPublicKeyInfo(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getSubjectInformationAccess(java.security.cert.X509Certificate)>"
  ],
  "1.0.31": [
    "<net.ripe.rpki.commons.crypto.x509cert.AbstractX509CertificateWrapper: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getSubjectInformationAccess()>",
    "<net.ripe.rpki.commons.crypto.x509cert.AbstractX509CertificateWrapper: java.net.URI[] getCrlDistributionPoints()>",
    "<net.ripe.rpki.commons.crypto.x509cert.AbstractX509CertificateWrapper: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getAuthorityInformationAccess()>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: org.bouncycastle.asn1.ASN1Primitive decode(byte[])>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: org.bouncycastle.asn1.x509.Extensions getPkcs9Extensions()>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: byte[] encode(org.bouncycastle.asn1.ASN1Encodable)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addAIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithmOidFromEncodedCmsObject(byte[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getSubjectKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: boolean isEndEntityCertificate(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x500.X500Name principalToName(javax.security.auth.x500.X500Principal)>",
    "<net.ripe.rpki.commons.crypto.crl.X509Crl: java.math.BigInteger getNumber()>",
    "<net.ripe.rpki.commons.crypto.crl.X509CrlBuilder: org.bouncycastle.cert.X509v2CRLBuilder createCrlGenerator()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addSIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x509.SubjectPublicKeyInfo createSubjectPublicKeyInfo(java.security.PublicKey)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509ResourceCertificateParser: void validateCertificatePolicy()>",
    "<net.ripe.rpki.commons.crypto.rfc3779.ResourceExtensionEncoder: org.bouncycastle.asn1.ASN1Object asIdentifiersToDer(boolean,net.ripe.ipresource.IpResourceSet,boolean,net.ripe.ipresource.IpResourceSet)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: org.bouncycastle.asn1.x509.CRLDistPoint convertToCrlDistributionPoint(java.net.URI[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getAuthorityKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor: org.bouncycastle.asn1.x509.AccessDescription toAccessDescription()>",
    "<net.ripe.rpki.commons.crypto.cms.RpkiSignedObjectParser: void parseContent(org.bouncycastle.cms.CMSSignedDataParser)>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: void extractSiaUris()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: java.lang.String getEncodedSubjectPublicKeyInfo(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.x509cert.AbstractX509CertificateWrapper: boolean isCa()>"
  ],
  "1.1.3": [
    "<net.ripe.rpki.commons.crypto.x509cert.X509ResourceCertificateParser: void validateCrlDistributionPoints()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: boolean isCa(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: org.bouncycastle.asn1.ASN1Primitive decode(byte[])>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: org.bouncycastle.asn1.x509.Extensions getPkcs9Extensions()>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: byte[] encode(org.bouncycastle.asn1.ASN1Encodable)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addAIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithmOidFromEncodedCmsObject(byte[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getSubjectKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: boolean isEndEntityCertificate(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getAuthorityInformationAccess(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x500.X500Name principalToName(javax.security.auth.x500.X500Principal)>",
    "<net.ripe.rpki.commons.crypto.crl.X509Crl: java.math.BigInteger getNumber()>",
    "<net.ripe.rpki.commons.crypto.crl.X509CrlBuilder: org.bouncycastle.cert.X509v2CRLBuilder createCrlGenerator()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addSIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: java.net.URI[] getCrlDistributionPoints(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x509.SubjectPublicKeyInfo createSubjectPublicKeyInfo(java.security.PublicKey)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509ResourceCertificateParser: void validateCertificatePolicy()>",
    "<net.ripe.rpki.commons.crypto.rfc3779.ResourceExtensionEncoder: org.bouncycastle.asn1.ASN1Object asIdentifiersToDer(boolean,net.ripe.ipresource.IpResourceSet,boolean,net.ripe.ipresource.IpResourceSet)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: org.bouncycastle.asn1.x509.CRLDistPoint convertToCrlDistributionPoint(java.net.URI[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getAuthorityKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor: org.bouncycastle.asn1.x509.AccessDescription toAccessDescription()>",
    "<net.ripe.rpki.commons.crypto.cms.RpkiSignedObjectParser: void parseContent(org.bouncycastle.cms.CMSSignedDataParser)>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: void extractSiaUris()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: java.lang.String getEncodedSubjectPublicKeyInfo(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getSubjectInformationAccess(java.security.cert.X509Certificate)>"
  ],
  "1.0.32": [
    "<net.ripe.rpki.commons.crypto.x509cert.X509ResourceCertificateParser: void validateCrlDistributionPoints()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: boolean isCa(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: org.bouncycastle.asn1.ASN1Primitive decode(byte[])>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: org.bouncycastle.asn1.x509.Extensions getPkcs9Extensions()>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: byte[] encode(org.bouncycastle.asn1.ASN1Encodable)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addAIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithmOidFromEncodedCmsObject(byte[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getSubjectKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: boolean isEndEntityCertificate(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getAuthorityInformationAccess(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x500.X500Name principalToName(javax.security.auth.x500.X500Principal)>",
    "<net.ripe.rpki.commons.crypto.crl.X509Crl: java.math.BigInteger getNumber()>",
    "<net.ripe.rpki.commons.crypto.crl.X509CrlBuilder: org.bouncycastle.cert.X509v2CRLBuilder createCrlGenerator()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addSIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: java.net.URI[] getCrlDistributionPoints(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x509.SubjectPublicKeyInfo createSubjectPublicKeyInfo(java.security.PublicKey)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509ResourceCertificateParser: void validateCertificatePolicy()>",
    "<net.ripe.rpki.commons.crypto.rfc3779.ResourceExtensionEncoder: org.bouncycastle.asn1.ASN1Object asIdentifiersToDer(boolean,net.ripe.ipresource.IpResourceSet,boolean,net.ripe.ipresource.IpResourceSet)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: org.bouncycastle.asn1.x509.CRLDistPoint convertToCrlDistributionPoint(java.net.URI[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getAuthorityKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor: org.bouncycastle.asn1.x509.AccessDescription toAccessDescription()>",
    "<net.ripe.rpki.commons.crypto.cms.RpkiSignedObjectParser: void parseContent(org.bouncycastle.cms.CMSSignedDataParser)>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: void extractSiaUris()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: java.lang.String getEncodedSubjectPublicKeyInfo(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getSubjectInformationAccess(java.security.cert.X509Certificate)>"
  ],
  "1.1.2": [
    "<net.ripe.rpki.commons.crypto.x509cert.X509ResourceCertificateParser: void validateCrlDistributionPoints()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: boolean isCa(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: org.bouncycastle.asn1.ASN1Primitive decode(byte[])>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: org.bouncycastle.asn1.x509.Extensions getPkcs9Extensions()>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: byte[] encode(org.bouncycastle.asn1.ASN1Encodable)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addAIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithmOidFromEncodedCmsObject(byte[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getSubjectKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: boolean isEndEntityCertificate(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getAuthorityInformationAccess(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x500.X500Name principalToName(javax.security.auth.x500.X500Principal)>",
    "<net.ripe.rpki.commons.crypto.crl.X509Crl: java.math.BigInteger getNumber()>",
    "<net.ripe.rpki.commons.crypto.crl.X509CrlBuilder: org.bouncycastle.cert.X509v2CRLBuilder createCrlGenerator()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addSIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: java.net.URI[] getCrlDistributionPoints(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x509.SubjectPublicKeyInfo createSubjectPublicKeyInfo(java.security.PublicKey)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509ResourceCertificateParser: void validateCertificatePolicy()>",
    "<net.ripe.rpki.commons.crypto.rfc3779.ResourceExtensionEncoder: org.bouncycastle.asn1.ASN1Object asIdentifiersToDer(boolean,net.ripe.ipresource.IpResourceSet,boolean,net.ripe.ipresource.IpResourceSet)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: org.bouncycastle.asn1.x509.CRLDistPoint convertToCrlDistributionPoint(java.net.URI[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getAuthorityKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor: org.bouncycastle.asn1.x509.AccessDescription toAccessDescription()>",
    "<net.ripe.rpki.commons.crypto.cms.RpkiSignedObjectParser: void parseContent(org.bouncycastle.cms.CMSSignedDataParser)>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: void extractSiaUris()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: java.lang.String getEncodedSubjectPublicKeyInfo(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getSubjectInformationAccess(java.security.cert.X509Certificate)>"
  ],
  "1.0.41": [
    "<net.ripe.rpki.commons.crypto.x509cert.X509ResourceCertificateParser: void validateCrlDistributionPoints()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: boolean isCa(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: org.bouncycastle.asn1.ASN1Primitive decode(byte[])>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: org.bouncycastle.asn1.x509.Extensions getPkcs9Extensions()>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: byte[] encode(org.bouncycastle.asn1.ASN1Encodable)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addAIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithmOidFromEncodedCmsObject(byte[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getSubjectKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: boolean isEndEntityCertificate(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getAuthorityInformationAccess(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x500.X500Name principalToName(javax.security.auth.x500.X500Principal)>",
    "<net.ripe.rpki.commons.crypto.crl.X509Crl: java.math.BigInteger getNumber()>",
    "<net.ripe.rpki.commons.crypto.crl.X509CrlBuilder: org.bouncycastle.cert.X509v2CRLBuilder createCrlGenerator()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addSIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: java.net.URI[] getCrlDistributionPoints(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x509.SubjectPublicKeyInfo createSubjectPublicKeyInfo(java.security.PublicKey)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509ResourceCertificateParser: void validateCertificatePolicy()>",
    "<net.ripe.rpki.commons.crypto.rfc3779.ResourceExtensionEncoder: org.bouncycastle.asn1.ASN1Object asIdentifiersToDer(boolean,net.ripe.ipresource.IpResourceSet,boolean,net.ripe.ipresource.IpResourceSet)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: org.bouncycastle.asn1.x509.CRLDistPoint convertToCrlDistributionPoint(java.net.URI[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getAuthorityKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor: org.bouncycastle.asn1.x509.AccessDescription toAccessDescription()>",
    "<net.ripe.rpki.commons.crypto.cms.RpkiSignedObjectParser: void parseContent(org.bouncycastle.cms.CMSSignedDataParser)>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: void extractSiaUris()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: java.lang.String getEncodedSubjectPublicKeyInfo(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getSubjectInformationAccess(java.security.cert.X509Certificate)>"
  ],
  "1.2": [
    "<net.ripe.rpki.commons.crypto.x509cert.X509ResourceCertificateParser: void validateCrlDistributionPoints()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: boolean isCa(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: org.bouncycastle.asn1.ASN1Primitive decode(byte[])>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: org.bouncycastle.asn1.x509.Extensions getPkcs9Extensions()>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: byte[] encode(org.bouncycastle.asn1.ASN1Encodable)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addAIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithmOidFromEncodedCmsObject(byte[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getSubjectKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: boolean isEndEntityCertificate(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getAuthorityInformationAccess(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x500.X500Name principalToName(javax.security.auth.x500.X500Principal)>",
    "<net.ripe.rpki.commons.crypto.crl.X509Crl: java.math.BigInteger getNumber()>",
    "<net.ripe.rpki.commons.crypto.crl.X509CrlBuilder: org.bouncycastle.cert.X509v2CRLBuilder createCrlGenerator()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addSIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: java.net.URI[] getCrlDistributionPoints(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x509.SubjectPublicKeyInfo createSubjectPublicKeyInfo(java.security.PublicKey)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509ResourceCertificateParser: void validateCertificatePolicy()>",
    "<net.ripe.rpki.commons.crypto.rfc3779.ResourceExtensionEncoder: org.bouncycastle.asn1.ASN1Object asIdentifiersToDer(boolean,net.ripe.ipresource.IpResourceSet,boolean,net.ripe.ipresource.IpResourceSet)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: org.bouncycastle.asn1.x509.CRLDistPoint convertToCrlDistributionPoint(java.net.URI[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getAuthorityKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor: org.bouncycastle.asn1.x509.AccessDescription toAccessDescription()>",
    "<net.ripe.rpki.commons.crypto.cms.RpkiSignedObjectParser: void parseContent(org.bouncycastle.cms.CMSSignedDataParser)>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: void extractSiaUris()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: java.lang.String getEncodedSubjectPublicKeyInfo(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getSubjectInformationAccess(java.security.cert.X509Certificate)>"
  ],
  "1.0.35": [
    "<net.ripe.rpki.commons.crypto.x509cert.X509ResourceCertificateParser: void validateCrlDistributionPoints()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: boolean isCa(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: org.bouncycastle.asn1.ASN1Primitive decode(byte[])>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: org.bouncycastle.asn1.x509.Extensions getPkcs9Extensions()>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: byte[] encode(org.bouncycastle.asn1.ASN1Encodable)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addAIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithmOidFromEncodedCmsObject(byte[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getSubjectKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: boolean isEndEntityCertificate(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getAuthorityInformationAccess(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x500.X500Name principalToName(javax.security.auth.x500.X500Principal)>",
    "<net.ripe.rpki.commons.crypto.crl.X509Crl: java.math.BigInteger getNumber()>",
    "<net.ripe.rpki.commons.crypto.crl.X509CrlBuilder: org.bouncycastle.cert.X509v2CRLBuilder createCrlGenerator()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addSIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: java.net.URI[] getCrlDistributionPoints(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x509.SubjectPublicKeyInfo createSubjectPublicKeyInfo(java.security.PublicKey)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509ResourceCertificateParser: void validateCertificatePolicy()>",
    "<net.ripe.rpki.commons.crypto.rfc3779.ResourceExtensionEncoder: org.bouncycastle.asn1.ASN1Object asIdentifiersToDer(boolean,net.ripe.ipresource.IpResourceSet,boolean,net.ripe.ipresource.IpResourceSet)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: org.bouncycastle.asn1.x509.CRLDistPoint convertToCrlDistributionPoint(java.net.URI[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getAuthorityKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor: org.bouncycastle.asn1.x509.AccessDescription toAccessDescription()>",
    "<net.ripe.rpki.commons.crypto.cms.RpkiSignedObjectParser: void parseContent(org.bouncycastle.cms.CMSSignedDataParser)>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: void extractSiaUris()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: java.lang.String getEncodedSubjectPublicKeyInfo(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getSubjectInformationAccess(java.security.cert.X509Certificate)>"
  ],
  "1.0.39": [
    "<net.ripe.rpki.commons.crypto.x509cert.X509ResourceCertificateParser: void validateCrlDistributionPoints()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: boolean isCa(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: org.bouncycastle.asn1.ASN1Primitive decode(byte[])>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: org.bouncycastle.asn1.x509.Extensions getPkcs9Extensions()>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: byte[] encode(org.bouncycastle.asn1.ASN1Encodable)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addAIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithmOidFromEncodedCmsObject(byte[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getSubjectKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: boolean isEndEntityCertificate(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getAuthorityInformationAccess(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x500.X500Name principalToName(javax.security.auth.x500.X500Principal)>",
    "<net.ripe.rpki.commons.crypto.crl.X509Crl: java.math.BigInteger getNumber()>",
    "<net.ripe.rpki.commons.crypto.crl.X509CrlBuilder: org.bouncycastle.cert.X509v2CRLBuilder createCrlGenerator()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addSIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: java.net.URI[] getCrlDistributionPoints(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x509.SubjectPublicKeyInfo createSubjectPublicKeyInfo(java.security.PublicKey)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509ResourceCertificateParser: void validateCertificatePolicy()>",
    "<net.ripe.rpki.commons.crypto.rfc3779.ResourceExtensionEncoder: org.bouncycastle.asn1.ASN1Object asIdentifiersToDer(boolean,net.ripe.ipresource.IpResourceSet,boolean,net.ripe.ipresource.IpResourceSet)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: org.bouncycastle.asn1.x509.CRLDistPoint convertToCrlDistributionPoint(java.net.URI[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getAuthorityKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor: org.bouncycastle.asn1.x509.AccessDescription toAccessDescription()>",
    "<net.ripe.rpki.commons.crypto.cms.RpkiSignedObjectParser: void parseContent(org.bouncycastle.cms.CMSSignedDataParser)>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: void extractSiaUris()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: java.lang.String getEncodedSubjectPublicKeyInfo(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getSubjectInformationAccess(java.security.cert.X509Certificate)>"
  ],
  "1.1.0": [
    "<net.ripe.rpki.commons.crypto.x509cert.X509ResourceCertificateParser: void validateCrlDistributionPoints()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: boolean isCa(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: org.bouncycastle.asn1.ASN1Primitive decode(byte[])>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: org.bouncycastle.asn1.x509.Extensions getPkcs9Extensions()>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: byte[] encode(org.bouncycastle.asn1.ASN1Encodable)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addAIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithmOidFromEncodedCmsObject(byte[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getSubjectKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: boolean isEndEntityCertificate(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getAuthorityInformationAccess(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x500.X500Name principalToName(javax.security.auth.x500.X500Principal)>",
    "<net.ripe.rpki.commons.crypto.crl.X509Crl: java.math.BigInteger getNumber()>",
    "<net.ripe.rpki.commons.crypto.crl.X509CrlBuilder: org.bouncycastle.cert.X509v2CRLBuilder createCrlGenerator()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addSIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: java.net.URI[] getCrlDistributionPoints(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x509.SubjectPublicKeyInfo createSubjectPublicKeyInfo(java.security.PublicKey)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509ResourceCertificateParser: void validateCertificatePolicy()>",
    "<net.ripe.rpki.commons.crypto.rfc3779.ResourceExtensionEncoder: org.bouncycastle.asn1.ASN1Object asIdentifiersToDer(boolean,net.ripe.ipresource.IpResourceSet,boolean,net.ripe.ipresource.IpResourceSet)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: org.bouncycastle.asn1.x509.CRLDistPoint convertToCrlDistributionPoint(java.net.URI[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getAuthorityKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor: org.bouncycastle.asn1.x509.AccessDescription toAccessDescription()>",
    "<net.ripe.rpki.commons.crypto.cms.RpkiSignedObjectParser: void parseContent(org.bouncycastle.cms.CMSSignedDataParser)>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: void extractSiaUris()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: java.lang.String getEncodedSubjectPublicKeyInfo(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getSubjectInformationAccess(java.security.cert.X509Certificate)>"
  ],
  "1.0.36": [
    "<net.ripe.rpki.commons.crypto.x509cert.X509ResourceCertificateParser: void validateCrlDistributionPoints()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: boolean isCa(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: org.bouncycastle.asn1.ASN1Primitive decode(byte[])>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: org.bouncycastle.asn1.x509.Extensions getPkcs9Extensions()>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: byte[] encode(org.bouncycastle.asn1.ASN1Encodable)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addAIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithmOidFromEncodedCmsObject(byte[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getSubjectKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: boolean isEndEntityCertificate(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getAuthorityInformationAccess(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x500.X500Name principalToName(javax.security.auth.x500.X500Principal)>",
    "<net.ripe.rpki.commons.crypto.crl.X509Crl: java.math.BigInteger getNumber()>",
    "<net.ripe.rpki.commons.crypto.crl.X509CrlBuilder: org.bouncycastle.cert.X509v2CRLBuilder createCrlGenerator()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addSIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: java.net.URI[] getCrlDistributionPoints(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x509.SubjectPublicKeyInfo createSubjectPublicKeyInfo(java.security.PublicKey)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509ResourceCertificateParser: void validateCertificatePolicy()>",
    "<net.ripe.rpki.commons.crypto.rfc3779.ResourceExtensionEncoder: org.bouncycastle.asn1.ASN1Object asIdentifiersToDer(boolean,net.ripe.ipresource.IpResourceSet,boolean,net.ripe.ipresource.IpResourceSet)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: org.bouncycastle.asn1.x509.CRLDistPoint convertToCrlDistributionPoint(java.net.URI[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getAuthorityKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor: org.bouncycastle.asn1.x509.AccessDescription toAccessDescription()>",
    "<net.ripe.rpki.commons.crypto.cms.RpkiSignedObjectParser: void parseContent(org.bouncycastle.cms.CMSSignedDataParser)>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: void extractSiaUris()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: java.lang.String getEncodedSubjectPublicKeyInfo(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getSubjectInformationAccess(java.security.cert.X509Certificate)>"
  ],
  "1.0.42": [
    "<net.ripe.rpki.commons.crypto.x509cert.X509ResourceCertificateParser: void validateCrlDistributionPoints()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: boolean isCa(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: org.bouncycastle.asn1.ASN1Primitive decode(byte[])>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: org.bouncycastle.asn1.x509.Extensions getPkcs9Extensions()>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: byte[] encode(org.bouncycastle.asn1.ASN1Encodable)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addAIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithmOidFromEncodedCmsObject(byte[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getSubjectKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: boolean isEndEntityCertificate(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getAuthorityInformationAccess(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x500.X500Name principalToName(javax.security.auth.x500.X500Principal)>",
    "<net.ripe.rpki.commons.crypto.crl.X509Crl: java.math.BigInteger getNumber()>",
    "<net.ripe.rpki.commons.crypto.crl.X509CrlBuilder: org.bouncycastle.cert.X509v2CRLBuilder createCrlGenerator()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addSIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: java.net.URI[] getCrlDistributionPoints(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x509.SubjectPublicKeyInfo createSubjectPublicKeyInfo(java.security.PublicKey)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509ResourceCertificateParser: void validateCertificatePolicy()>",
    "<net.ripe.rpki.commons.crypto.rfc3779.ResourceExtensionEncoder: org.bouncycastle.asn1.ASN1Object asIdentifiersToDer(boolean,net.ripe.ipresource.IpResourceSet,boolean,net.ripe.ipresource.IpResourceSet)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: org.bouncycastle.asn1.x509.CRLDistPoint convertToCrlDistributionPoint(java.net.URI[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getAuthorityKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor: org.bouncycastle.asn1.x509.AccessDescription toAccessDescription()>",
    "<net.ripe.rpki.commons.crypto.cms.RpkiSignedObjectParser: void parseContent(org.bouncycastle.cms.CMSSignedDataParser)>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: void extractSiaUris()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: java.lang.String getEncodedSubjectPublicKeyInfo(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getSubjectInformationAccess(java.security.cert.X509Certificate)>"
  ],
  "1.0.29": [
    "<net.ripe.rpki.commons.crypto.x509cert.AbstractX509CertificateWrapper: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getSubjectInformationAccess()>",
    "<net.ripe.rpki.commons.crypto.x509cert.AbstractX509CertificateWrapper: java.net.URI[] getCrlDistributionPoints()>",
    "<net.ripe.rpki.commons.crypto.x509cert.AbstractX509CertificateWrapper: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getAuthorityInformationAccess()>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: org.bouncycastle.asn1.ASN1Primitive decode(byte[])>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: org.bouncycastle.asn1.x509.Extensions getPkcs9Extensions()>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: byte[] encode(org.bouncycastle.asn1.ASN1Encodable)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addAIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithmOidFromEncodedCmsObject(byte[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getSubjectKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: boolean isEndEntityCertificate(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x500.X500Name principalToName(javax.security.auth.x500.X500Principal)>",
    "<net.ripe.rpki.commons.crypto.crl.X509Crl: java.math.BigInteger getNumber()>",
    "<net.ripe.rpki.commons.crypto.crl.X509CrlBuilder: org.bouncycastle.cert.X509v2CRLBuilder createCrlGenerator()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addSIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x509.SubjectPublicKeyInfo createSubjectPublicKeyInfo(java.security.PublicKey)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509ResourceCertificateParser: void validateCertificatePolicy()>",
    "<net.ripe.rpki.commons.crypto.rfc3779.ResourceExtensionEncoder: org.bouncycastle.asn1.ASN1Object asIdentifiersToDer(boolean,net.ripe.ipresource.IpResourceSet,boolean,net.ripe.ipresource.IpResourceSet)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: org.bouncycastle.asn1.x509.CRLDistPoint convertToCrlDistributionPoint(java.net.URI[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getAuthorityKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor: org.bouncycastle.asn1.x509.AccessDescription toAccessDescription()>",
    "<net.ripe.rpki.commons.crypto.cms.RpkiSignedObjectParser: void parseContent(org.bouncycastle.cms.CMSSignedDataParser)>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: void extractSiaUris()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: java.lang.String getEncodedSubjectPublicKeyInfo(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.x509cert.AbstractX509CertificateWrapper: boolean isCa()>"
  ],
  "1.0.28": [
    "<net.ripe.rpki.commons.crypto.x509cert.AbstractX509CertificateWrapper: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getSubjectInformationAccess()>",
    "<net.ripe.rpki.commons.crypto.x509cert.AbstractX509CertificateWrapper: java.net.URI[] getCrlDistributionPoints()>",
    "<net.ripe.rpki.commons.crypto.x509cert.AbstractX509CertificateWrapper: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getAuthorityInformationAccess()>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: org.bouncycastle.asn1.ASN1Primitive decode(byte[])>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: org.bouncycastle.asn1.x509.Extensions getPkcs9Extensions()>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: byte[] encode(org.bouncycastle.asn1.ASN1Encodable)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addAIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithmOidFromEncodedCmsObject(byte[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getSubjectKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: boolean isEndEntityCertificate(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x500.X500Name principalToName(javax.security.auth.x500.X500Principal)>",
    "<net.ripe.rpki.commons.crypto.crl.X509Crl: java.math.BigInteger getNumber()>",
    "<net.ripe.rpki.commons.crypto.crl.X509CrlBuilder: org.bouncycastle.cert.X509v2CRLBuilder createCrlGenerator()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addSIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x509.SubjectPublicKeyInfo createSubjectPublicKeyInfo(java.security.PublicKey)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509ResourceCertificateParser: void validateCertificatePolicy()>",
    "<net.ripe.rpki.commons.crypto.rfc3779.ResourceExtensionEncoder: org.bouncycastle.asn1.ASN1Object asIdentifiersToDer(boolean,net.ripe.ipresource.IpResourceSet,boolean,net.ripe.ipresource.IpResourceSet)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: org.bouncycastle.asn1.x509.CRLDistPoint convertToCrlDistributionPoint(java.net.URI[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getAuthorityKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor: org.bouncycastle.asn1.x509.AccessDescription toAccessDescription()>",
    "<net.ripe.rpki.commons.crypto.cms.RpkiSignedObjectParser: void parseContent(org.bouncycastle.cms.CMSSignedDataParser)>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: void extractSiaUris()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: java.lang.String getEncodedSubjectPublicKeyInfo(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.x509cert.AbstractX509CertificateWrapper: boolean isCa()>"
  ],
  "1.0.26": [
    "<net.ripe.rpki.commons.crypto.x509cert.AbstractX509CertificateWrapper: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getSubjectInformationAccess()>",
    "<net.ripe.rpki.commons.crypto.x509cert.AbstractX509CertificateWrapper: java.net.URI[] getCrlDistributionPoints()>",
    "<net.ripe.rpki.commons.crypto.x509cert.AbstractX509CertificateWrapper: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getAuthorityInformationAccess()>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: org.bouncycastle.asn1.ASN1Primitive decode(byte[])>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: org.bouncycastle.asn1.x509.Extensions getPkcs9Extensions()>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: byte[] encode(org.bouncycastle.asn1.ASN1Encodable)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addAIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithmOidFromEncodedCmsObject(byte[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getSubjectKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: boolean isEndEntityCertificate(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x500.X500Name principalToName(javax.security.auth.x500.X500Principal)>",
    "<net.ripe.rpki.commons.crypto.crl.X509Crl: java.math.BigInteger getNumber()>",
    "<net.ripe.rpki.commons.crypto.crl.X509CrlBuilder: org.bouncycastle.cert.X509v2CRLBuilder createCrlGenerator()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addSIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x509.SubjectPublicKeyInfo createSubjectPublicKeyInfo(java.security.PublicKey)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509ResourceCertificateParser: void validateCertificatePolicy()>",
    "<net.ripe.rpki.commons.crypto.rfc3779.ResourceExtensionEncoder: org.bouncycastle.asn1.ASN1Object asIdentifiersToDer(boolean,net.ripe.ipresource.IpResourceSet,boolean,net.ripe.ipresource.IpResourceSet)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: org.bouncycastle.asn1.x509.CRLDistPoint convertToCrlDistributionPoint(java.net.URI[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getAuthorityKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor: org.bouncycastle.asn1.x509.AccessDescription toAccessDescription()>",
    "<net.ripe.rpki.commons.crypto.cms.RpkiSignedObjectParser: void parseContent(org.bouncycastle.cms.CMSSignedDataParser)>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: void extractSiaUris()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: java.lang.String getEncodedSubjectPublicKeyInfo(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.x509cert.AbstractX509CertificateWrapper: boolean isCa()>"
  ],
  "1.0.27": [
    "<net.ripe.rpki.commons.crypto.x509cert.AbstractX509CertificateWrapper: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getSubjectInformationAccess()>",
    "<net.ripe.rpki.commons.crypto.x509cert.AbstractX509CertificateWrapper: java.net.URI[] getCrlDistributionPoints()>",
    "<net.ripe.rpki.commons.crypto.x509cert.AbstractX509CertificateWrapper: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getAuthorityInformationAccess()>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: org.bouncycastle.asn1.ASN1Primitive decode(byte[])>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: org.bouncycastle.asn1.x509.Extensions getPkcs9Extensions()>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: byte[] encode(org.bouncycastle.asn1.ASN1Encodable)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addAIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithmOidFromEncodedCmsObject(byte[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getSubjectKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: boolean isEndEntityCertificate(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x500.X500Name principalToName(javax.security.auth.x500.X500Principal)>",
    "<net.ripe.rpki.commons.crypto.crl.X509Crl: java.math.BigInteger getNumber()>",
    "<net.ripe.rpki.commons.crypto.crl.X509CrlBuilder: org.bouncycastle.cert.X509v2CRLBuilder createCrlGenerator()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addSIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x509.SubjectPublicKeyInfo createSubjectPublicKeyInfo(java.security.PublicKey)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509ResourceCertificateParser: void validateCertificatePolicy()>",
    "<net.ripe.rpki.commons.crypto.rfc3779.ResourceExtensionEncoder: org.bouncycastle.asn1.ASN1Object asIdentifiersToDer(boolean,net.ripe.ipresource.IpResourceSet,boolean,net.ripe.ipresource.IpResourceSet)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: org.bouncycastle.asn1.x509.CRLDistPoint convertToCrlDistributionPoint(java.net.URI[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getAuthorityKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor: org.bouncycastle.asn1.x509.AccessDescription toAccessDescription()>",
    "<net.ripe.rpki.commons.crypto.cms.RpkiSignedObjectParser: void parseContent(org.bouncycastle.cms.CMSSignedDataParser)>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: void extractSiaUris()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: java.lang.String getEncodedSubjectPublicKeyInfo(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.x509cert.AbstractX509CertificateWrapper: boolean isCa()>"
  ],
  "1.0.21": [
    "<net.ripe.rpki.commons.crypto.x509cert.AbstractX509CertificateWrapper: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getSubjectInformationAccess()>",
    "<net.ripe.rpki.commons.crypto.x509cert.AbstractX509CertificateWrapper: java.net.URI[] getCrlDistributionPoints()>",
    "<net.ripe.rpki.commons.crypto.x509cert.AbstractX509CertificateWrapper: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getAuthorityInformationAccess()>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: org.bouncycastle.asn1.ASN1Primitive decode(byte[])>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: org.bouncycastle.asn1.x509.Extensions getPkcs9Extensions()>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: byte[] encode(org.bouncycastle.asn1.ASN1Encodable)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addAIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithmOidFromEncodedCmsObject(byte[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getSubjectKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: boolean isEndEntityCertificate(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x500.X500Name principalToName(javax.security.auth.x500.X500Principal)>",
    "<net.ripe.rpki.commons.crypto.crl.X509Crl: java.math.BigInteger getNumber()>",
    "<net.ripe.rpki.commons.crypto.crl.X509CrlBuilder: org.bouncycastle.cert.X509v2CRLBuilder createCrlGenerator()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addSIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x509.SubjectPublicKeyInfo createSubjectPublicKeyInfo(java.security.PublicKey)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509ResourceCertificateParser: void validateCertificatePolicy()>",
    "<net.ripe.rpki.commons.crypto.rfc3779.ResourceExtensionEncoder: org.bouncycastle.asn1.ASN1Object asIdentifiersToDer(boolean,net.ripe.ipresource.IpResourceSet,boolean,net.ripe.ipresource.IpResourceSet)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: org.bouncycastle.asn1.x509.CRLDistPoint convertToCrlDistributionPoint(java.net.URI[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getAuthorityKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor: org.bouncycastle.asn1.x509.AccessDescription toAccessDescription()>",
    "<net.ripe.rpki.commons.crypto.cms.RpkiSignedObjectParser: void parseContent(org.bouncycastle.cms.CMSSignedDataParser)>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: void extractSiaUris()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: java.lang.String getEncodedSubjectPublicKeyInfo(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.x509cert.AbstractX509CertificateWrapper: boolean isCa()>"
  ],
  "1.0.24": [
    "<net.ripe.rpki.commons.crypto.x509cert.AbstractX509CertificateWrapper: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getSubjectInformationAccess()>",
    "<net.ripe.rpki.commons.crypto.x509cert.AbstractX509CertificateWrapper: java.net.URI[] getCrlDistributionPoints()>",
    "<net.ripe.rpki.commons.crypto.x509cert.AbstractX509CertificateWrapper: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getAuthorityInformationAccess()>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: org.bouncycastle.asn1.ASN1Primitive decode(byte[])>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: org.bouncycastle.asn1.x509.Extensions getPkcs9Extensions()>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: byte[] encode(org.bouncycastle.asn1.ASN1Encodable)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addAIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithmOidFromEncodedCmsObject(byte[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getSubjectKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: boolean isEndEntityCertificate(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x500.X500Name principalToName(javax.security.auth.x500.X500Principal)>",
    "<net.ripe.rpki.commons.crypto.crl.X509Crl: java.math.BigInteger getNumber()>",
    "<net.ripe.rpki.commons.crypto.crl.X509CrlBuilder: org.bouncycastle.cert.X509v2CRLBuilder createCrlGenerator()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addSIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x509.SubjectPublicKeyInfo createSubjectPublicKeyInfo(java.security.PublicKey)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509ResourceCertificateParser: void validateCertificatePolicy()>",
    "<net.ripe.rpki.commons.crypto.rfc3779.ResourceExtensionEncoder: org.bouncycastle.asn1.ASN1Object asIdentifiersToDer(boolean,net.ripe.ipresource.IpResourceSet,boolean,net.ripe.ipresource.IpResourceSet)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: org.bouncycastle.asn1.x509.CRLDistPoint convertToCrlDistributionPoint(java.net.URI[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getAuthorityKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor: org.bouncycastle.asn1.x509.AccessDescription toAccessDescription()>",
    "<net.ripe.rpki.commons.crypto.cms.RpkiSignedObjectParser: void parseContent(org.bouncycastle.cms.CMSSignedDataParser)>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: void extractSiaUris()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: java.lang.String getEncodedSubjectPublicKeyInfo(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.x509cert.AbstractX509CertificateWrapper: boolean isCa()>"
  ],
  "1.0.23": [
    "<net.ripe.rpki.commons.crypto.x509cert.AbstractX509CertificateWrapper: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getSubjectInformationAccess()>",
    "<net.ripe.rpki.commons.crypto.x509cert.AbstractX509CertificateWrapper: java.net.URI[] getCrlDistributionPoints()>",
    "<net.ripe.rpki.commons.crypto.x509cert.AbstractX509CertificateWrapper: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getAuthorityInformationAccess()>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: org.bouncycastle.asn1.ASN1Primitive decode(byte[])>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: org.bouncycastle.asn1.x509.Extensions getPkcs9Extensions()>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: byte[] encode(org.bouncycastle.asn1.ASN1Encodable)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addAIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithmOidFromEncodedCmsObject(byte[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getSubjectKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: boolean isEndEntityCertificate(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x500.X500Name principalToName(javax.security.auth.x500.X500Principal)>",
    "<net.ripe.rpki.commons.crypto.crl.X509Crl: java.math.BigInteger getNumber()>",
    "<net.ripe.rpki.commons.crypto.crl.X509CrlBuilder: org.bouncycastle.cert.X509v2CRLBuilder createCrlGenerator()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addSIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x509.SubjectPublicKeyInfo createSubjectPublicKeyInfo(java.security.PublicKey)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509ResourceCertificateParser: void validateCertificatePolicy()>",
    "<net.ripe.rpki.commons.crypto.rfc3779.ResourceExtensionEncoder: org.bouncycastle.asn1.ASN1Object asIdentifiersToDer(boolean,net.ripe.ipresource.IpResourceSet,boolean,net.ripe.ipresource.IpResourceSet)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: org.bouncycastle.asn1.x509.CRLDistPoint convertToCrlDistributionPoint(java.net.URI[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getAuthorityKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor: org.bouncycastle.asn1.x509.AccessDescription toAccessDescription()>",
    "<net.ripe.rpki.commons.crypto.cms.RpkiSignedObjectParser: void parseContent(org.bouncycastle.cms.CMSSignedDataParser)>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: void extractSiaUris()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: java.lang.String getEncodedSubjectPublicKeyInfo(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.x509cert.AbstractX509CertificateWrapper: boolean isCa()>"
  ],
  "1.0.25": [
    "<net.ripe.rpki.commons.crypto.x509cert.AbstractX509CertificateWrapper: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getSubjectInformationAccess()>",
    "<net.ripe.rpki.commons.crypto.x509cert.AbstractX509CertificateWrapper: java.net.URI[] getCrlDistributionPoints()>",
    "<net.ripe.rpki.commons.crypto.x509cert.AbstractX509CertificateWrapper: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getAuthorityInformationAccess()>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: org.bouncycastle.asn1.ASN1Primitive decode(byte[])>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: org.bouncycastle.asn1.x509.Extensions getPkcs9Extensions()>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: byte[] encode(org.bouncycastle.asn1.ASN1Encodable)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addAIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithmOidFromEncodedCmsObject(byte[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getSubjectKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: boolean isEndEntityCertificate(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x500.X500Name principalToName(javax.security.auth.x500.X500Principal)>",
    "<net.ripe.rpki.commons.crypto.crl.X509Crl: java.math.BigInteger getNumber()>",
    "<net.ripe.rpki.commons.crypto.crl.X509CrlBuilder: org.bouncycastle.cert.X509v2CRLBuilder createCrlGenerator()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addSIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x509.SubjectPublicKeyInfo createSubjectPublicKeyInfo(java.security.PublicKey)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509ResourceCertificateParser: void validateCertificatePolicy()>",
    "<net.ripe.rpki.commons.crypto.rfc3779.ResourceExtensionEncoder: org.bouncycastle.asn1.ASN1Object asIdentifiersToDer(boolean,net.ripe.ipresource.IpResourceSet,boolean,net.ripe.ipresource.IpResourceSet)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: org.bouncycastle.asn1.x509.CRLDistPoint convertToCrlDistributionPoint(java.net.URI[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getAuthorityKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor: org.bouncycastle.asn1.x509.AccessDescription toAccessDescription()>",
    "<net.ripe.rpki.commons.crypto.cms.RpkiSignedObjectParser: void parseContent(org.bouncycastle.cms.CMSSignedDataParser)>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: void extractSiaUris()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: java.lang.String getEncodedSubjectPublicKeyInfo(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.x509cert.AbstractX509CertificateWrapper: boolean isCa()>"
  ],
  "1.0.22": [
    "<net.ripe.rpki.commons.crypto.x509cert.AbstractX509CertificateWrapper: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getSubjectInformationAccess()>",
    "<net.ripe.rpki.commons.crypto.x509cert.AbstractX509CertificateWrapper: java.net.URI[] getCrlDistributionPoints()>",
    "<net.ripe.rpki.commons.crypto.x509cert.AbstractX509CertificateWrapper: net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor[] getAuthorityInformationAccess()>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: org.bouncycastle.asn1.ASN1Primitive decode(byte[])>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: org.bouncycastle.asn1.x509.Extensions getPkcs9Extensions()>",
    "<net.ripe.rpki.commons.crypto.util.Asn1Util: byte[] encode(org.bouncycastle.asn1.ASN1Encodable)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addAIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithmOidFromEncodedCmsObject(byte[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getSubjectKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.provisioning.cms.ProvisioningCmsObjectParser: boolean isEndEntityCertificate(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x500.X500Name principalToName(javax.security.auth.x500.X500Principal)>",
    "<net.ripe.rpki.commons.crypto.crl.X509Crl: java.math.BigInteger getNumber()>",
    "<net.ripe.rpki.commons.crypto.crl.X509CrlBuilder: org.bouncycastle.cert.X509v2CRLBuilder createCrlGenerator()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: void addSIA(org.bouncycastle.cert.X509v3CertificateBuilder)>",
    "<net.ripe.rpki.commons.crypto.util.BouncyCastleUtil: org.bouncycastle.asn1.x509.SubjectPublicKeyInfo createSubjectPublicKeyInfo(java.security.PublicKey)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509ResourceCertificateParser: void validateCertificatePolicy()>",
    "<net.ripe.rpki.commons.crypto.rfc3779.ResourceExtensionEncoder: org.bouncycastle.asn1.ASN1Object asIdentifiersToDer(boolean,net.ripe.ipresource.IpResourceSet,boolean,net.ripe.ipresource.IpResourceSet)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateBuilderHelper: org.bouncycastle.asn1.x509.CRLDistPoint convertToCrlDistributionPoint(java.net.URI[])>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: byte[] getAuthorityKeyIdentifier(java.security.cert.X509Extension)>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateInformationAccessDescriptor: org.bouncycastle.asn1.x509.AccessDescription toAccessDescription()>",
    "<net.ripe.rpki.commons.crypto.cms.RpkiSignedObjectParser: void parseContent(org.bouncycastle.cms.CMSSignedDataParser)>",
    "<net.ripe.rpki.commons.provisioning.x509.pkcs10.RpkiCaCertificateRequestParser: void extractSiaUris()>",
    "<net.ripe.rpki.commons.crypto.x509cert.X509CertificateUtil: java.lang.String getEncodedSubjectPublicKeyInfo(java.security.cert.X509Certificate)>",
    "<net.ripe.rpki.commons.crypto.x509cert.AbstractX509CertificateWrapper: boolean isCa()>"
  ]
}