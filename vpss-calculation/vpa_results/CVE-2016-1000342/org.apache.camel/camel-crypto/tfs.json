{
  "2.12.5": [
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKey(java.io.InputStream,java.io.InputStream,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKeyWithKeyId(java.io.InputStream,long,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findPublicKeys(java.io.InputStream,java.util.List,boolean)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKey findPublicKeyWithKeyId(java.io.InputStream,long)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findSecretKeysWithPrivateKeyAndUserId(java.io.InputStream,java.util.Map,java.lang.String)>"
  ],
  "2.12.1": [
    "<org.apache.camel.converter.crypto.PGPDataFormat: java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)>"
  ],
  "2.13.1": [
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKey(java.io.InputStream,java.io.InputStream,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.io.InputStream getDecryptedData(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.DefaultPGPPublicKeyAccessor: void <init>(byte[])>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKeyWithKeyId(java.io.InputStream,long,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.io.InputStream getUncompressedData(java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findPublicKeys(java.io.InputStream,java.util.List,boolean)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKey findPublicKeyWithKeyId(java.io.InputStream,long)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findSecretKeysWithPrivateKeyAndUserId(java.io.InputStream,java.util.Map,java.lang.String)>",
    "<org.apache.camel.converter.crypto.DefaultPGPSecretKeyAccessor: void <init>(byte[],java.lang.String,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKeyRingCollection getPublicKeyRingCollection(org.apache.camel.CamelContext,java.lang.String,byte[],boolean)>"
  ],
  "2.12.2": [
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKey(java.io.InputStream,java.io.InputStream,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKeyWithKeyId(java.io.InputStream,long,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findPublicKeys(java.io.InputStream,java.util.List,boolean)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPSecretKey findSecretKey(java.io.InputStream,java.lang.String,java.lang.String,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKey findPublicKeyWithKeyId(java.io.InputStream,long)>"
  ],
  "2.12.3": [
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKey(java.io.InputStream,java.io.InputStream,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKeyWithKeyId(java.io.InputStream,long,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findPublicKeys(java.io.InputStream,java.util.List,boolean)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKey findPublicKeyWithKeyId(java.io.InputStream,long)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findSecretKeysWithPrivateKeyAndUserId(java.io.InputStream,java.util.Map,java.lang.String)>"
  ],
  "2.13.0": [
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKey(java.io.InputStream,java.io.InputStream,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.DefaultPGPPublicKeyAccessor: void <init>(byte[])>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKeyWithKeyId(java.io.InputStream,long,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findPublicKeys(java.io.InputStream,java.util.List,boolean)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findSecretKeysWithPrivateKeyAndUserId(java.io.InputStream,java.util.Map,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKey findPublicKeyWithKeyId(java.io.InputStream,long)>",
    "<org.apache.camel.converter.crypto.DefaultPGPSecretKeyAccessor: void <init>(byte[],java.lang.String,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKeyRingCollection getPublicKeyRingCollection(org.apache.camel.CamelContext,java.lang.String,byte[],boolean)>"
  ],
  "2.13.2": [
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKey(java.io.InputStream,java.io.InputStream,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.io.InputStream getDecryptedData(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.DefaultPGPPublicKeyAccessor: void <init>(byte[])>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKeyWithKeyId(java.io.InputStream,long,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.io.InputStream getUncompressedData(java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findPublicKeys(java.io.InputStream,java.util.List,boolean)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKey findPublicKeyWithKeyId(java.io.InputStream,long)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findSecretKeysWithPrivateKeyAndUserId(java.io.InputStream,java.util.Map,java.lang.String)>",
    "<org.apache.camel.converter.crypto.DefaultPGPSecretKeyAccessor: void <init>(byte[],java.lang.String,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKeyRingCollection getPublicKeyRingCollection(org.apache.camel.CamelContext,java.lang.String,byte[],boolean)>"
  ],
  "2.12.4": [
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKey(java.io.InputStream,java.io.InputStream,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKeyWithKeyId(java.io.InputStream,long,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findPublicKeys(java.io.InputStream,java.util.List,boolean)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKey findPublicKeyWithKeyId(java.io.InputStream,long)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findSecretKeysWithPrivateKeyAndUserId(java.io.InputStream,java.util.Map,java.lang.String)>"
  ],
  "2.12.0": [
    "<org.apache.camel.converter.crypto.PGPDataFormat: java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)>"
  ],
  "2.18.2": [
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKey(java.io.InputStream,java.io.InputStream,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.io.InputStream getDecryptedData(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.DefaultPGPPublicKeyAccessor: void <init>(byte[])>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKeyWithKeyId(java.io.InputStream,long,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findPublicKeys(java.io.InputStream,java.util.List,boolean)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKey findPublicKeyWithKeyId(java.io.InputStream,long)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findSecretKeysWithPrivateKeyAndUserId(java.io.InputStream,java.util.Map,java.lang.String)>",
    "<org.apache.camel.converter.crypto.DefaultPGPSecretKeyAccessor: void <init>(byte[],java.lang.String,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKeyRingCollection getPublicKeyRingCollection(org.apache.camel.CamelContext,java.lang.String,byte[],boolean)>"
  ],
  "2.19.3": [
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKey(java.io.InputStream,java.io.InputStream,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.DefaultPGPPublicKeyAccessor: void <init>(byte[])>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKeyWithKeyId(java.io.InputStream,long,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: org.apache.camel.converter.crypto.PGPKeyAccessDataFormat$DecryptedDataAndPPublicKeyEncryptedData getDecryptedData(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findPublicKeys(java.io.InputStream,java.util.List,boolean)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKey findPublicKeyWithKeyId(java.io.InputStream,long)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findSecretKeysWithPrivateKeyAndUserId(java.io.InputStream,java.util.Map,java.lang.String)>",
    "<org.apache.camel.converter.crypto.DefaultPGPSecretKeyAccessor: void <init>(byte[],java.lang.String,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKeyRingCollection getPublicKeyRingCollection(org.apache.camel.CamelContext,java.lang.String,byte[],boolean)>"
  ],
  "2.18.0": [
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKey(java.io.InputStream,java.io.InputStream,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.io.InputStream getDecryptedData(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.DefaultPGPPublicKeyAccessor: void <init>(byte[])>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKeyWithKeyId(java.io.InputStream,long,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findPublicKeys(java.io.InputStream,java.util.List,boolean)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKey findPublicKeyWithKeyId(java.io.InputStream,long)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findSecretKeysWithPrivateKeyAndUserId(java.io.InputStream,java.util.Map,java.lang.String)>",
    "<org.apache.camel.converter.crypto.DefaultPGPSecretKeyAccessor: void <init>(byte[],java.lang.String,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKeyRingCollection getPublicKeyRingCollection(org.apache.camel.CamelContext,java.lang.String,byte[],boolean)>"
  ],
  "2.17.7": [
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKey(java.io.InputStream,java.io.InputStream,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.DefaultPGPPublicKeyAccessor: void <init>(byte[])>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKeyWithKeyId(java.io.InputStream,long,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: org.apache.camel.converter.crypto.PGPKeyAccessDataFormat$DecryptedDataAndPPublicKeyEncryptedData getDecryptedData(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findPublicKeys(java.io.InputStream,java.util.List,boolean)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKey findPublicKeyWithKeyId(java.io.InputStream,long)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findSecretKeysWithPrivateKeyAndUserId(java.io.InputStream,java.util.Map,java.lang.String)>",
    "<org.apache.camel.converter.crypto.DefaultPGPSecretKeyAccessor: void <init>(byte[],java.lang.String,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKeyRingCollection getPublicKeyRingCollection(org.apache.camel.CamelContext,java.lang.String,byte[],boolean)>"
  ],
  "2.19.2": [
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKey(java.io.InputStream,java.io.InputStream,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.DefaultPGPPublicKeyAccessor: void <init>(byte[])>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKeyWithKeyId(java.io.InputStream,long,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: org.apache.camel.converter.crypto.PGPKeyAccessDataFormat$DecryptedDataAndPPublicKeyEncryptedData getDecryptedData(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findPublicKeys(java.io.InputStream,java.util.List,boolean)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKey findPublicKeyWithKeyId(java.io.InputStream,long)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findSecretKeysWithPrivateKeyAndUserId(java.io.InputStream,java.util.Map,java.lang.String)>",
    "<org.apache.camel.converter.crypto.DefaultPGPSecretKeyAccessor: void <init>(byte[],java.lang.String,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKeyRingCollection getPublicKeyRingCollection(org.apache.camel.CamelContext,java.lang.String,byte[],boolean)>"
  ],
  "2.19.4": [
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKey(java.io.InputStream,java.io.InputStream,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.DefaultPGPPublicKeyAccessor: void <init>(byte[])>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKeyWithKeyId(java.io.InputStream,long,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: org.apache.camel.converter.crypto.PGPKeyAccessDataFormat$DecryptedDataAndPPublicKeyEncryptedData getDecryptedData(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findPublicKeys(java.io.InputStream,java.util.List,boolean)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKey findPublicKeyWithKeyId(java.io.InputStream,long)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findSecretKeysWithPrivateKeyAndUserId(java.io.InputStream,java.util.Map,java.lang.String)>",
    "<org.apache.camel.converter.crypto.DefaultPGPSecretKeyAccessor: void <init>(byte[],java.lang.String,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKeyRingCollection getPublicKeyRingCollection(org.apache.camel.CamelContext,java.lang.String,byte[],boolean)>"
  ],
  "2.17.6": [
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKey(java.io.InputStream,java.io.InputStream,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.io.InputStream getDecryptedData(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.DefaultPGPPublicKeyAccessor: void <init>(byte[])>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKeyWithKeyId(java.io.InputStream,long,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findPublicKeys(java.io.InputStream,java.util.List,boolean)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKey findPublicKeyWithKeyId(java.io.InputStream,long)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findSecretKeysWithPrivateKeyAndUserId(java.io.InputStream,java.util.Map,java.lang.String)>",
    "<org.apache.camel.converter.crypto.DefaultPGPSecretKeyAccessor: void <init>(byte[],java.lang.String,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKeyRingCollection getPublicKeyRingCollection(org.apache.camel.CamelContext,java.lang.String,byte[],boolean)>"
  ],
  "2.18.3": [
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKey(java.io.InputStream,java.io.InputStream,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.io.InputStream getDecryptedData(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.DefaultPGPPublicKeyAccessor: void <init>(byte[])>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKeyWithKeyId(java.io.InputStream,long,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findPublicKeys(java.io.InputStream,java.util.List,boolean)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKey findPublicKeyWithKeyId(java.io.InputStream,long)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findSecretKeysWithPrivateKeyAndUserId(java.io.InputStream,java.util.Map,java.lang.String)>",
    "<org.apache.camel.converter.crypto.DefaultPGPSecretKeyAccessor: void <init>(byte[],java.lang.String,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKeyRingCollection getPublicKeyRingCollection(org.apache.camel.CamelContext,java.lang.String,byte[],boolean)>"
  ],
  "2.17.5": [
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKey(java.io.InputStream,java.io.InputStream,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.io.InputStream getDecryptedData(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.DefaultPGPPublicKeyAccessor: void <init>(byte[])>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKeyWithKeyId(java.io.InputStream,long,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findPublicKeys(java.io.InputStream,java.util.List,boolean)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKey findPublicKeyWithKeyId(java.io.InputStream,long)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findSecretKeysWithPrivateKeyAndUserId(java.io.InputStream,java.util.Map,java.lang.String)>",
    "<org.apache.camel.converter.crypto.DefaultPGPSecretKeyAccessor: void <init>(byte[],java.lang.String,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKeyRingCollection getPublicKeyRingCollection(org.apache.camel.CamelContext,java.lang.String,byte[],boolean)>"
  ],
  "2.18.5": [
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKey(java.io.InputStream,java.io.InputStream,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.DefaultPGPPublicKeyAccessor: void <init>(byte[])>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKeyWithKeyId(java.io.InputStream,long,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: org.apache.camel.converter.crypto.PGPKeyAccessDataFormat$DecryptedDataAndPPublicKeyEncryptedData getDecryptedData(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findPublicKeys(java.io.InputStream,java.util.List,boolean)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKey findPublicKeyWithKeyId(java.io.InputStream,long)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findSecretKeysWithPrivateKeyAndUserId(java.io.InputStream,java.util.Map,java.lang.String)>",
    "<org.apache.camel.converter.crypto.DefaultPGPSecretKeyAccessor: void <init>(byte[],java.lang.String,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKeyRingCollection getPublicKeyRingCollection(org.apache.camel.CamelContext,java.lang.String,byte[],boolean)>"
  ],
  "2.19.1": [
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKey(java.io.InputStream,java.io.InputStream,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.DefaultPGPPublicKeyAccessor: void <init>(byte[])>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKeyWithKeyId(java.io.InputStream,long,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: org.apache.camel.converter.crypto.PGPKeyAccessDataFormat$DecryptedDataAndPPublicKeyEncryptedData getDecryptedData(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findPublicKeys(java.io.InputStream,java.util.List,boolean)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKey findPublicKeyWithKeyId(java.io.InputStream,long)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findSecretKeysWithPrivateKeyAndUserId(java.io.InputStream,java.util.Map,java.lang.String)>",
    "<org.apache.camel.converter.crypto.DefaultPGPSecretKeyAccessor: void <init>(byte[],java.lang.String,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKeyRingCollection getPublicKeyRingCollection(org.apache.camel.CamelContext,java.lang.String,byte[],boolean)>"
  ],
  "2.19.5": [
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKey(java.io.InputStream,java.io.InputStream,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.DefaultPGPPublicKeyAccessor: void <init>(byte[])>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKeyWithKeyId(java.io.InputStream,long,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: org.apache.camel.converter.crypto.PGPKeyAccessDataFormat$DecryptedDataAndPPublicKeyEncryptedData getDecryptedData(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findPublicKeys(java.io.InputStream,java.util.List,boolean)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKey findPublicKeyWithKeyId(java.io.InputStream,long)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findSecretKeysWithPrivateKeyAndUserId(java.io.InputStream,java.util.Map,java.lang.String)>",
    "<org.apache.camel.converter.crypto.DefaultPGPSecretKeyAccessor: void <init>(byte[],java.lang.String,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKeyRingCollection getPublicKeyRingCollection(org.apache.camel.CamelContext,java.lang.String,byte[],boolean)>"
  ],
  "2.17.4": [
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKey(java.io.InputStream,java.io.InputStream,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.io.InputStream getDecryptedData(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.DefaultPGPPublicKeyAccessor: void <init>(byte[])>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKeyWithKeyId(java.io.InputStream,long,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findPublicKeys(java.io.InputStream,java.util.List,boolean)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKey findPublicKeyWithKeyId(java.io.InputStream,long)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findSecretKeysWithPrivateKeyAndUserId(java.io.InputStream,java.util.Map,java.lang.String)>",
    "<org.apache.camel.converter.crypto.DefaultPGPSecretKeyAccessor: void <init>(byte[],java.lang.String,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKeyRingCollection getPublicKeyRingCollection(org.apache.camel.CamelContext,java.lang.String,byte[],boolean)>"
  ],
  "2.19.0": [
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKey(java.io.InputStream,java.io.InputStream,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.DefaultPGPPublicKeyAccessor: void <init>(byte[])>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKeyWithKeyId(java.io.InputStream,long,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: org.apache.camel.converter.crypto.PGPKeyAccessDataFormat$DecryptedDataAndPPublicKeyEncryptedData getDecryptedData(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findPublicKeys(java.io.InputStream,java.util.List,boolean)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKey findPublicKeyWithKeyId(java.io.InputStream,long)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findSecretKeysWithPrivateKeyAndUserId(java.io.InputStream,java.util.Map,java.lang.String)>",
    "<org.apache.camel.converter.crypto.DefaultPGPSecretKeyAccessor: void <init>(byte[],java.lang.String,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKeyRingCollection getPublicKeyRingCollection(org.apache.camel.CamelContext,java.lang.String,byte[],boolean)>"
  ],
  "2.18.4": [
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKey(java.io.InputStream,java.io.InputStream,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.DefaultPGPPublicKeyAccessor: void <init>(byte[])>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKeyWithKeyId(java.io.InputStream,long,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: org.apache.camel.converter.crypto.PGPKeyAccessDataFormat$DecryptedDataAndPPublicKeyEncryptedData getDecryptedData(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findPublicKeys(java.io.InputStream,java.util.List,boolean)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKey findPublicKeyWithKeyId(java.io.InputStream,long)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findSecretKeysWithPrivateKeyAndUserId(java.io.InputStream,java.util.Map,java.lang.String)>",
    "<org.apache.camel.converter.crypto.DefaultPGPSecretKeyAccessor: void <init>(byte[],java.lang.String,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKeyRingCollection getPublicKeyRingCollection(org.apache.camel.CamelContext,java.lang.String,byte[],boolean)>"
  ],
  "2.18.1": [
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKey(java.io.InputStream,java.io.InputStream,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.io.InputStream getDecryptedData(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.DefaultPGPPublicKeyAccessor: void <init>(byte[])>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKeyWithKeyId(java.io.InputStream,long,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findPublicKeys(java.io.InputStream,java.util.List,boolean)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKey findPublicKeyWithKeyId(java.io.InputStream,long)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findSecretKeysWithPrivateKeyAndUserId(java.io.InputStream,java.util.Map,java.lang.String)>",
    "<org.apache.camel.converter.crypto.DefaultPGPSecretKeyAccessor: void <init>(byte[],java.lang.String,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKeyRingCollection getPublicKeyRingCollection(org.apache.camel.CamelContext,java.lang.String,byte[],boolean)>"
  ],
  "2.15.3": [
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKey(java.io.InputStream,java.io.InputStream,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.io.InputStream getDecryptedData(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.DefaultPGPPublicKeyAccessor: void <init>(byte[])>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKeyWithKeyId(java.io.InputStream,long,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.io.InputStream getUncompressedData(java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findPublicKeys(java.io.InputStream,java.util.List,boolean)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKey findPublicKeyWithKeyId(java.io.InputStream,long)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findSecretKeysWithPrivateKeyAndUserId(java.io.InputStream,java.util.Map,java.lang.String)>",
    "<org.apache.camel.converter.crypto.DefaultPGPSecretKeyAccessor: void <init>(byte[],java.lang.String,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKeyRingCollection getPublicKeyRingCollection(org.apache.camel.CamelContext,java.lang.String,byte[],boolean)>"
  ],
  "2.16.0": [
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKey(java.io.InputStream,java.io.InputStream,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.io.InputStream getDecryptedData(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.DefaultPGPPublicKeyAccessor: void <init>(byte[])>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKeyWithKeyId(java.io.InputStream,long,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findPublicKeys(java.io.InputStream,java.util.List,boolean)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKey findPublicKeyWithKeyId(java.io.InputStream,long)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findSecretKeysWithPrivateKeyAndUserId(java.io.InputStream,java.util.Map,java.lang.String)>",
    "<org.apache.camel.converter.crypto.DefaultPGPSecretKeyAccessor: void <init>(byte[],java.lang.String,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKeyRingCollection getPublicKeyRingCollection(org.apache.camel.CamelContext,java.lang.String,byte[],boolean)>"
  ],
  "2.16.1": [
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKey(java.io.InputStream,java.io.InputStream,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.io.InputStream getDecryptedData(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.DefaultPGPPublicKeyAccessor: void <init>(byte[])>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKeyWithKeyId(java.io.InputStream,long,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findPublicKeys(java.io.InputStream,java.util.List,boolean)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKey findPublicKeyWithKeyId(java.io.InputStream,long)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findSecretKeysWithPrivateKeyAndUserId(java.io.InputStream,java.util.Map,java.lang.String)>",
    "<org.apache.camel.converter.crypto.DefaultPGPSecretKeyAccessor: void <init>(byte[],java.lang.String,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKeyRingCollection getPublicKeyRingCollection(org.apache.camel.CamelContext,java.lang.String,byte[],boolean)>"
  ],
  "2.15.2": [
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKey(java.io.InputStream,java.io.InputStream,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.io.InputStream getDecryptedData(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.DefaultPGPPublicKeyAccessor: void <init>(byte[])>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKeyWithKeyId(java.io.InputStream,long,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.io.InputStream getUncompressedData(java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findPublicKeys(java.io.InputStream,java.util.List,boolean)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKey findPublicKeyWithKeyId(java.io.InputStream,long)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findSecretKeysWithPrivateKeyAndUserId(java.io.InputStream,java.util.Map,java.lang.String)>",
    "<org.apache.camel.converter.crypto.DefaultPGPSecretKeyAccessor: void <init>(byte[],java.lang.String,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKeyRingCollection getPublicKeyRingCollection(org.apache.camel.CamelContext,java.lang.String,byte[],boolean)>"
  ],
  "2.15.4": [
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKey(java.io.InputStream,java.io.InputStream,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.io.InputStream getDecryptedData(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.DefaultPGPPublicKeyAccessor: void <init>(byte[])>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKeyWithKeyId(java.io.InputStream,long,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.io.InputStream getUncompressedData(java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findPublicKeys(java.io.InputStream,java.util.List,boolean)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKey findPublicKeyWithKeyId(java.io.InputStream,long)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findSecretKeysWithPrivateKeyAndUserId(java.io.InputStream,java.util.Map,java.lang.String)>",
    "<org.apache.camel.converter.crypto.DefaultPGPSecretKeyAccessor: void <init>(byte[],java.lang.String,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKeyRingCollection getPublicKeyRingCollection(org.apache.camel.CamelContext,java.lang.String,byte[],boolean)>"
  ],
  "2.16.2": [
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKey(java.io.InputStream,java.io.InputStream,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.io.InputStream getDecryptedData(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.DefaultPGPPublicKeyAccessor: void <init>(byte[])>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKeyWithKeyId(java.io.InputStream,long,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findPublicKeys(java.io.InputStream,java.util.List,boolean)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKey findPublicKeyWithKeyId(java.io.InputStream,long)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findSecretKeysWithPrivateKeyAndUserId(java.io.InputStream,java.util.Map,java.lang.String)>",
    "<org.apache.camel.converter.crypto.DefaultPGPSecretKeyAccessor: void <init>(byte[],java.lang.String,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKeyRingCollection getPublicKeyRingCollection(org.apache.camel.CamelContext,java.lang.String,byte[],boolean)>"
  ],
  "2.15.1": [
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKey(java.io.InputStream,java.io.InputStream,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.io.InputStream getDecryptedData(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.DefaultPGPPublicKeyAccessor: void <init>(byte[])>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKeyWithKeyId(java.io.InputStream,long,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.io.InputStream getUncompressedData(java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findPublicKeys(java.io.InputStream,java.util.List,boolean)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKey findPublicKeyWithKeyId(java.io.InputStream,long)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findSecretKeysWithPrivateKeyAndUserId(java.io.InputStream,java.util.Map,java.lang.String)>",
    "<org.apache.camel.converter.crypto.DefaultPGPSecretKeyAccessor: void <init>(byte[],java.lang.String,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKeyRingCollection getPublicKeyRingCollection(org.apache.camel.CamelContext,java.lang.String,byte[],boolean)>"
  ],
  "2.15.5": [
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKey(java.io.InputStream,java.io.InputStream,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.io.InputStream getDecryptedData(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.DefaultPGPPublicKeyAccessor: void <init>(byte[])>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKeyWithKeyId(java.io.InputStream,long,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.io.InputStream getUncompressedData(java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findPublicKeys(java.io.InputStream,java.util.List,boolean)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKey findPublicKeyWithKeyId(java.io.InputStream,long)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findSecretKeysWithPrivateKeyAndUserId(java.io.InputStream,java.util.Map,java.lang.String)>",
    "<org.apache.camel.converter.crypto.DefaultPGPSecretKeyAccessor: void <init>(byte[],java.lang.String,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKeyRingCollection getPublicKeyRingCollection(org.apache.camel.CamelContext,java.lang.String,byte[],boolean)>"
  ],
  "2.16.3": [
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKey(java.io.InputStream,java.io.InputStream,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.io.InputStream getDecryptedData(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.DefaultPGPPublicKeyAccessor: void <init>(byte[])>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKeyWithKeyId(java.io.InputStream,long,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findPublicKeys(java.io.InputStream,java.util.List,boolean)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKey findPublicKeyWithKeyId(java.io.InputStream,long)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findSecretKeysWithPrivateKeyAndUserId(java.io.InputStream,java.util.Map,java.lang.String)>",
    "<org.apache.camel.converter.crypto.DefaultPGPSecretKeyAccessor: void <init>(byte[],java.lang.String,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKeyRingCollection getPublicKeyRingCollection(org.apache.camel.CamelContext,java.lang.String,byte[],boolean)>"
  ],
  "2.17.2": [
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKey(java.io.InputStream,java.io.InputStream,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.io.InputStream getDecryptedData(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.DefaultPGPPublicKeyAccessor: void <init>(byte[])>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKeyWithKeyId(java.io.InputStream,long,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findPublicKeys(java.io.InputStream,java.util.List,boolean)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKey findPublicKeyWithKeyId(java.io.InputStream,long)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findSecretKeysWithPrivateKeyAndUserId(java.io.InputStream,java.util.Map,java.lang.String)>",
    "<org.apache.camel.converter.crypto.DefaultPGPSecretKeyAccessor: void <init>(byte[],java.lang.String,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKeyRingCollection getPublicKeyRingCollection(org.apache.camel.CamelContext,java.lang.String,byte[],boolean)>"
  ],
  "2.16.5": [
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKey(java.io.InputStream,java.io.InputStream,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.io.InputStream getDecryptedData(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.DefaultPGPPublicKeyAccessor: void <init>(byte[])>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKeyWithKeyId(java.io.InputStream,long,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findPublicKeys(java.io.InputStream,java.util.List,boolean)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKey findPublicKeyWithKeyId(java.io.InputStream,long)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findSecretKeysWithPrivateKeyAndUserId(java.io.InputStream,java.util.Map,java.lang.String)>",
    "<org.apache.camel.converter.crypto.DefaultPGPSecretKeyAccessor: void <init>(byte[],java.lang.String,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKeyRingCollection getPublicKeyRingCollection(org.apache.camel.CamelContext,java.lang.String,byte[],boolean)>"
  ],
  "2.17.1": [
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKey(java.io.InputStream,java.io.InputStream,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.io.InputStream getDecryptedData(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.DefaultPGPPublicKeyAccessor: void <init>(byte[])>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKeyWithKeyId(java.io.InputStream,long,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findPublicKeys(java.io.InputStream,java.util.List,boolean)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKey findPublicKeyWithKeyId(java.io.InputStream,long)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findSecretKeysWithPrivateKeyAndUserId(java.io.InputStream,java.util.Map,java.lang.String)>",
    "<org.apache.camel.converter.crypto.DefaultPGPSecretKeyAccessor: void <init>(byte[],java.lang.String,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKeyRingCollection getPublicKeyRingCollection(org.apache.camel.CamelContext,java.lang.String,byte[],boolean)>"
  ],
  "2.17.3": [
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKey(java.io.InputStream,java.io.InputStream,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.io.InputStream getDecryptedData(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.DefaultPGPPublicKeyAccessor: void <init>(byte[])>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKeyWithKeyId(java.io.InputStream,long,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findPublicKeys(java.io.InputStream,java.util.List,boolean)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKey findPublicKeyWithKeyId(java.io.InputStream,long)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findSecretKeysWithPrivateKeyAndUserId(java.io.InputStream,java.util.Map,java.lang.String)>",
    "<org.apache.camel.converter.crypto.DefaultPGPSecretKeyAccessor: void <init>(byte[],java.lang.String,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKeyRingCollection getPublicKeyRingCollection(org.apache.camel.CamelContext,java.lang.String,byte[],boolean)>"
  ],
  "2.16.4": [
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKey(java.io.InputStream,java.io.InputStream,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.io.InputStream getDecryptedData(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.DefaultPGPPublicKeyAccessor: void <init>(byte[])>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKeyWithKeyId(java.io.InputStream,long,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findPublicKeys(java.io.InputStream,java.util.List,boolean)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKey findPublicKeyWithKeyId(java.io.InputStream,long)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findSecretKeysWithPrivateKeyAndUserId(java.io.InputStream,java.util.Map,java.lang.String)>",
    "<org.apache.camel.converter.crypto.DefaultPGPSecretKeyAccessor: void <init>(byte[],java.lang.String,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKeyRingCollection getPublicKeyRingCollection(org.apache.camel.CamelContext,java.lang.String,byte[],boolean)>"
  ],
  "2.15.6": [
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKey(java.io.InputStream,java.io.InputStream,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.io.InputStream getDecryptedData(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.DefaultPGPPublicKeyAccessor: void <init>(byte[])>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKeyWithKeyId(java.io.InputStream,long,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.io.InputStream getUncompressedData(java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findPublicKeys(java.io.InputStream,java.util.List,boolean)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKey findPublicKeyWithKeyId(java.io.InputStream,long)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findSecretKeysWithPrivateKeyAndUserId(java.io.InputStream,java.util.Map,java.lang.String)>",
    "<org.apache.camel.converter.crypto.DefaultPGPSecretKeyAccessor: void <init>(byte[],java.lang.String,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKeyRingCollection getPublicKeyRingCollection(org.apache.camel.CamelContext,java.lang.String,byte[],boolean)>"
  ],
  "2.17.0": [
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKey(java.io.InputStream,java.io.InputStream,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.io.InputStream getDecryptedData(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.DefaultPGPPublicKeyAccessor: void <init>(byte[])>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKeyWithKeyId(java.io.InputStream,long,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findPublicKeys(java.io.InputStream,java.util.List,boolean)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKey findPublicKeyWithKeyId(java.io.InputStream,long)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: java.util.List findSecretKeysWithPrivateKeyAndUserId(java.io.InputStream,java.util.Map,java.lang.String)>",
    "<org.apache.camel.converter.crypto.DefaultPGPSecretKeyAccessor: void <init>(byte[],java.lang.String,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPublicKeyRingCollection getPublicKeyRingCollection(org.apache.camel.CamelContext,java.lang.String,byte[],boolean)>"
  ],
  "2.15.0": [
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.io.InputStream getDecryptedData(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKey(java.io.InputStream,java.io.InputStream,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.io.InputStream getUncompressedData(java.io.InputStream)>"
  ],
  "2.13.4": [
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.io.InputStream getDecryptedData(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKey(java.io.InputStream,java.io.InputStream,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.io.InputStream getUncompressedData(java.io.InputStream)>"
  ],
  "2.13.3": [
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.io.InputStream getDecryptedData(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPDataFormatUtil: org.bouncycastle.openpgp.PGPPrivateKey findPrivateKey(java.io.InputStream,java.io.InputStream,java.lang.String,org.apache.camel.converter.crypto.PGPPassphraseAccessor,java.lang.String)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)>",
    "<org.apache.camel.converter.crypto.PGPKeyAccessDataFormat: java.io.InputStream getUncompressedData(java.io.InputStream)>"
  ],
  "2.11.2": [
    "<org.apache.camel.converter.crypto.PGPDataFormat: java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)>"
  ],
  "2.11.0": [
    "<org.apache.camel.converter.crypto.PGPDataFormat: java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)>"
  ],
  "2.11.3": [
    "<org.apache.camel.converter.crypto.PGPDataFormat: java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)>"
  ],
  "2.11.4": [
    "<org.apache.camel.converter.crypto.PGPDataFormat: java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)>"
  ],
  "2.11.1": [
    "<org.apache.camel.converter.crypto.PGPDataFormat: java.lang.Object unmarshal(org.apache.camel.Exchange,java.io.InputStream)>"
  ]
}