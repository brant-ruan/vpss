{
  "1.1.28": [
    "<de.redsix.pdfcompare.PdfComparator: void addSingleDocumentToResult(java.io.InputStream,int)>",
    "<de.redsix.pdfcompare.Utilities: de.redsix.pdfcompare.ImageWithDimension renderPage(java.io.InputStream,int)>",
    "<de.redsix.pdfcompare.PdfComparator: de.redsix.pdfcompare.CompareResult compare()>",
    "<de.redsix.pdfcompare.Utilities: int getNumberOfPages(java.io.InputStream)>",
    "<de.redsix.pdfcompare.AbstractCompareResultWithSwap: boolean writeTo(java.lang.String)>"
  ],
  "1.1.27": [
    "<de.redsix.pdfcompare.PdfComparator: void addSingleDocumentToResult(java.io.InputStream,int)>",
    "<de.redsix.pdfcompare.Utilities: de.redsix.pdfcompare.ImageWithDimension renderPage(java.io.InputStream,int)>",
    "<de.redsix.pdfcompare.PdfComparator: de.redsix.pdfcompare.CompareResult compare()>",
    "<de.redsix.pdfcompare.Utilities: int getNumberOfPages(java.io.InputStream)>",
    "<de.redsix.pdfcompare.AbstractCompareResultWithSwap: boolean writeTo(java.lang.String)>"
  ],
  "1.1.29": [
    "<de.redsix.pdfcompare.PdfComparator: void addSingleDocumentToResult(java.io.InputStream,int)>",
    "<de.redsix.pdfcompare.Utilities: de.redsix.pdfcompare.ImageWithDimension renderPage(java.io.InputStream,int)>",
    "<de.redsix.pdfcompare.PdfComparator: de.redsix.pdfcompare.CompareResult compare()>",
    "<de.redsix.pdfcompare.Utilities: int getNumberOfPages(java.io.InputStream)>",
    "<de.redsix.pdfcompare.AbstractCompareResultWithSwap: boolean writeTo(java.lang.String)>"
  ],
  "1.1.33": [
    "<de.redsix.pdfcompare.PdfComparator: de.redsix.pdfcompare.CompareResult compare()>",
    "<de.redsix.pdfcompare.Utilities: int getNumberOfPages(java.io.InputStream)>",
    "<de.redsix.pdfcompare.PdfComparator: void addSingleDocumentToResult(java.io.InputStream,int)>",
    "<de.redsix.pdfcompare.Utilities: de.redsix.pdfcompare.ImageWithDimension renderPage(java.io.InputStream,int)>"
  ],
  "1.1.34": [
    "<de.redsix.pdfcompare.PdfComparator: de.redsix.pdfcompare.CompareResult compare()>",
    "<de.redsix.pdfcompare.Utilities: int getNumberOfPages(java.io.InputStream)>",
    "<de.redsix.pdfcompare.PdfComparator: void addSingleDocumentToResult(java.io.InputStream,int)>",
    "<de.redsix.pdfcompare.Utilities: de.redsix.pdfcompare.ImageWithDimension renderPage(java.io.InputStream,int)>"
  ],
  "1.1.31": [
    "<de.redsix.pdfcompare.PdfComparator: void addSingleDocumentToResult(java.io.InputStream,int)>",
    "<de.redsix.pdfcompare.Utilities: de.redsix.pdfcompare.ImageWithDimension renderPage(java.io.InputStream,int)>",
    "<de.redsix.pdfcompare.PdfComparator: de.redsix.pdfcompare.CompareResult compare()>",
    "<de.redsix.pdfcompare.Utilities: int getNumberOfPages(java.io.InputStream)>",
    "<de.redsix.pdfcompare.AbstractCompareResultWithSwap: boolean writeTo(java.lang.String)>"
  ],
  "1.1.30": [
    "<de.redsix.pdfcompare.PdfComparator: void addSingleDocumentToResult(java.io.InputStream,int)>",
    "<de.redsix.pdfcompare.Utilities: de.redsix.pdfcompare.ImageWithDimension renderPage(java.io.InputStream,int)>",
    "<de.redsix.pdfcompare.PdfComparator: de.redsix.pdfcompare.CompareResult compare()>",
    "<de.redsix.pdfcompare.Utilities: int getNumberOfPages(java.io.InputStream)>",
    "<de.redsix.pdfcompare.AbstractCompareResultWithSwap: boolean writeTo(java.lang.String)>"
  ],
  "1.1.32": [
    "<de.redsix.pdfcompare.PdfComparator: de.redsix.pdfcompare.CompareResult compare()>",
    "<de.redsix.pdfcompare.Utilities: int getNumberOfPages(java.io.InputStream)>",
    "<de.redsix.pdfcompare.PdfComparator: void addSingleDocumentToResult(java.io.InputStream,int)>",
    "<de.redsix.pdfcompare.Utilities: de.redsix.pdfcompare.ImageWithDimension renderPage(java.io.InputStream,int)>"
  ]
}