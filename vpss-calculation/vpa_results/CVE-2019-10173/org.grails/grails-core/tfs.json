{
  "4.0.6": [
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void <init>()>",
    "<org.grails.plugins.DefaultGrailsPlugin$1: java.lang.Object call(java.lang.Object)>",
    "<org.grails.spring.context.support.PluginAwareResourceBundleMessageSource: void afterPropertiesSet()>",
    "<org.grails.config.EnvironmentAwarePropertySource: void initialize()>",
    "<org.grails.compiler.injection.ArtefactTypeAstTransformation: void performInjection(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.ast.ClassNode,java.util.Collection)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfClassChange(java.io.File,java.lang.Class)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void onApplicationEvent(org.springframework.context.event.ApplicationContextEvent)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean isDependentOn(grails.plugins.GrailsPlugin,grails.plugins.GrailsPlugin)>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.springframework.core.io.Resource[])>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: org.grails.io.support.Resource resource(java.lang.Object)>",
    "<org.grails.core.support.internal.tools.ClassRelativeClassLoader: java.net.URL[] createClassLoaderUrls(java.lang.Class)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean isCompatiblePlugin(grails.plugins.GrailsPlugin)>",
    "<org.grails.config.NavigableMapConfig: grails.config.Config merge(java.util.Map)>",
    "<org.grails.core.AbstractGrailsApplication: void <init>()>",
    "<org.grails.compiler.injection.GrailsASTUtils: java.net.URL getSourceUrl(org.codehaus.groovy.control.SourceUnit)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: void <init>(java.io.File,org.grails.io.support.ResourceLoader)>",
    "<org.grails.config.yaml.YamlPropertySourceLoader: void lambda$load$2(java.util.List,org.grails.config.NavigableMap,java.util.Map)>",
    "<grails.boot.GrailsApp: org.springframework.context.ConfigurableApplicationContext run(java.lang.String[])>",
    "<grails.boot.GrailsApp: void configureEnvironment(org.springframework.core.env.ConfigurableEnvironment,java.lang.String[])>",
    "<org.grails.compiler.injection.GlobalGrailsClassInjectorTransformation: void visit(org.codehaus.groovy.ast.ASTNode[],org.codehaus.groovy.control.SourceUnit)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: groovy.util.ConfigSlurper getConfigSlurper(grails.core.GrailsApplication)>",
    "<org.grails.compiler.injection.GrailsAwareInjectionOperation: void call(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.classgen.GeneratorContext,org.codehaus.groovy.ast.ClassNode)>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<grails.boot.config.tools.ClassPathScanner$ApplicationRelativeClassLoader: void <init>(java.lang.Class)>",
    "<org.grails.core.io.support.GrailsFactoriesLoader: java.util.List loadFactoryClasses(java.lang.Class,java.lang.ClassLoader)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<org.grails.plugins.BinaryGrailsPlugin: void <init>(java.lang.Class,org.grails.plugins.BinaryGrailsPluginDescriptor,grails.core.GrailsApplication)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void initializeGrailsApplication(org.springframework.context.ApplicationContext)>",
    "<org.grails.config.PropertySourcesConfig: void <init>(java.util.Map)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void <clinit>()>",
    "<org.grails.config.PropertySourcesConfig: void mergeEnumerablePropertySource(org.springframework.core.env.EnumerablePropertySource)>",
    "<grails.plugins.DefaultGrailsPluginManager: java.lang.Class loadPluginClass(java.lang.ClassLoader,org.springframework.core.io.Resource)>",
    "<org.grails.plugins.DefaultGrailsPlugin: boolean supportsCurrentScopeAndEnvironment()>",
    "<org.grails.compiler.injection.DefaultGrailsDomainClassInjector: boolean shouldInject(java.net.URL)>",
    "<grails.boot.GrailsApp: java.lang.Object printRunStatus(org.springframework.context.ConfigurableApplicationContext)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: java.lang.String className(org.grails.io.support.Resource)>",
    "<org.grails.config.EnvironmentAwarePropertySource: java.lang.Object getProperty(java.lang.String)>",
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void autowireBeanProperties(java.lang.Object,int,boolean)>",
    "<org.grails.config.NavigableMapConfig$1: void <init>(org.grails.config.NavigableMapConfig)>",
    "<org.grails.core.cfg.MicronautGroovyPropertySourceLoader: void processInput(java.lang.String,java.io.InputStream,java.util.Map)>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.core.DefaultGrailsControllerClass: void methodStrategy(java.util.Map)>",
    "<org.grails.core.cfg.GroovyConfigPropertySourceLoader: java.util.List load(java.lang.String,org.springframework.core.io.Resource,java.util.List)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean canRegisterPlugin(grails.plugins.GrailsPlugin)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: grails.plugins.GrailsPlugin getGrailsPlugin(java.lang.String,java.lang.Object)>",
    "<org.grails.core.AbstractGrailsClass: java.lang.String getPluginName()>",
    "<org.grails.plugins.DefaultGrailsPlugin: void evaluateOnChangeListener()>",
    "<org.grails.compiler.injection.ApplicationClassInjector: boolean shouldInject(java.net.URL)>",
    "<grails.util.GrailsUtil: void <clinit>()>",
    "<grails.util.GrailsClassUtils: org.springframework.cglib.reflect.FastClass fastClass(java.lang.Class)>",
    "<org.grails.config.yaml.YamlPropertySourceLoader: java.util.List load(java.lang.String,org.springframework.core.io.Resource,java.util.List)>",
    "<grails.util.GrailsUtil: java.lang.String getGrailsVersion()>",
    "<org.grails.core.AbstractGrailsApplication: boolean isWarDeployed()>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.grails.io.support.Resource[])>",
    "<grails.plugins.Plugin: void <init>()>",
    "<grails.dev.Support: void enableAgentIfNotPresent(java.lang.Class)>",
    "<org.grails.plugins.AbstractGrailsPlugin: org.springframework.core.io.Resource getConfigurationResource(java.lang.Class,java.lang.String)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfFileChange(java.io.File)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<grails.util.GrailsUtil: boolean isDevelopmentEnv()>",
    "<org.grails.core.io.DefaultResourceLocator: void <init>()>"
  ],
  "4.1.0": [
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void <init>()>",
    "<org.grails.plugins.DefaultGrailsPlugin$1: java.lang.Object call(java.lang.Object)>",
    "<org.grails.spring.context.support.PluginAwareResourceBundleMessageSource: void afterPropertiesSet()>",
    "<org.grails.config.EnvironmentAwarePropertySource: void initialize()>",
    "<org.grails.compiler.injection.ArtefactTypeAstTransformation: void performInjection(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.ast.ClassNode,java.util.Collection)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfClassChange(java.io.File,java.lang.Class)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void onApplicationEvent(org.springframework.context.event.ApplicationContextEvent)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean isDependentOn(grails.plugins.GrailsPlugin,grails.plugins.GrailsPlugin)>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.springframework.core.io.Resource[])>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: org.grails.io.support.Resource resource(java.lang.Object)>",
    "<org.grails.core.support.internal.tools.ClassRelativeClassLoader: java.net.URL[] createClassLoaderUrls(java.lang.Class)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean isCompatiblePlugin(grails.plugins.GrailsPlugin)>",
    "<org.grails.config.NavigableMapConfig: grails.config.Config merge(java.util.Map)>",
    "<org.grails.core.AbstractGrailsApplication: void <init>()>",
    "<org.grails.compiler.injection.GrailsASTUtils: java.net.URL getSourceUrl(org.codehaus.groovy.control.SourceUnit)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: void <init>(java.io.File,org.grails.io.support.ResourceLoader)>",
    "<grails.boot.GrailsApp: org.springframework.context.ConfigurableApplicationContext run(java.lang.String[])>",
    "<org.grails.config.yaml.YamlPropertySourceLoader: void lambda$load$2(java.util.List,org.grails.config.NavigableMap,java.util.Map)>",
    "<grails.boot.GrailsApp: void configureEnvironment(org.springframework.core.env.ConfigurableEnvironment,java.lang.String[])>",
    "<org.grails.compiler.injection.GlobalGrailsClassInjectorTransformation: void visit(org.codehaus.groovy.ast.ASTNode[],org.codehaus.groovy.control.SourceUnit)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: groovy.util.ConfigSlurper getConfigSlurper(grails.core.GrailsApplication)>",
    "<org.grails.compiler.injection.GrailsAwareInjectionOperation: void call(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.classgen.GeneratorContext,org.codehaus.groovy.ast.ClassNode)>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<grails.boot.config.tools.ClassPathScanner$ApplicationRelativeClassLoader: void <init>(java.lang.Class)>",
    "<org.grails.core.io.support.GrailsFactoriesLoader: java.util.List loadFactoryClasses(java.lang.Class,java.lang.ClassLoader)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<org.grails.plugins.BinaryGrailsPlugin: void <init>(java.lang.Class,org.grails.plugins.BinaryGrailsPluginDescriptor,grails.core.GrailsApplication)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void initializeGrailsApplication(org.springframework.context.ApplicationContext)>",
    "<org.grails.config.PropertySourcesConfig: void <init>(java.util.Map)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void <clinit>()>",
    "<org.grails.config.PropertySourcesConfig: void mergeEnumerablePropertySource(org.springframework.core.env.EnumerablePropertySource)>",
    "<grails.plugins.DefaultGrailsPluginManager: java.lang.Class loadPluginClass(java.lang.ClassLoader,org.springframework.core.io.Resource)>",
    "<org.grails.plugins.DefaultGrailsPlugin: boolean supportsCurrentScopeAndEnvironment()>",
    "<org.grails.compiler.injection.DefaultGrailsDomainClassInjector: boolean shouldInject(java.net.URL)>",
    "<grails.boot.GrailsApp: java.lang.Object printRunStatus(org.springframework.context.ConfigurableApplicationContext)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: java.lang.String className(org.grails.io.support.Resource)>",
    "<org.grails.config.EnvironmentAwarePropertySource: java.lang.Object getProperty(java.lang.String)>",
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void autowireBeanProperties(java.lang.Object,int,boolean)>",
    "<org.grails.config.NavigableMapConfig$1: void <init>(org.grails.config.NavigableMapConfig)>",
    "<org.grails.core.cfg.MicronautGroovyPropertySourceLoader: void processInput(java.lang.String,java.io.InputStream,java.util.Map)>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.core.DefaultGrailsControllerClass: void methodStrategy(java.util.Map)>",
    "<org.grails.core.cfg.GroovyConfigPropertySourceLoader: java.util.List load(java.lang.String,org.springframework.core.io.Resource,java.util.List)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean canRegisterPlugin(grails.plugins.GrailsPlugin)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: grails.plugins.GrailsPlugin getGrailsPlugin(java.lang.String,java.lang.Object)>",
    "<org.grails.core.AbstractGrailsClass: java.lang.String getPluginName()>",
    "<org.grails.plugins.DefaultGrailsPlugin: void evaluateOnChangeListener()>",
    "<org.grails.compiler.injection.ApplicationClassInjector: boolean shouldInject(java.net.URL)>",
    "<grails.util.GrailsUtil: void <clinit>()>",
    "<grails.util.GrailsClassUtils: org.springframework.cglib.reflect.FastClass fastClass(java.lang.Class)>",
    "<org.grails.config.yaml.YamlPropertySourceLoader: java.util.List load(java.lang.String,org.springframework.core.io.Resource,java.util.List)>",
    "<grails.util.GrailsUtil: java.lang.String getGrailsVersion()>",
    "<org.grails.core.AbstractGrailsApplication: boolean isWarDeployed()>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.grails.io.support.Resource[])>",
    "<grails.plugins.Plugin: void <init>()>",
    "<grails.dev.Support: void enableAgentIfNotPresent(java.lang.Class)>",
    "<org.grails.plugins.AbstractGrailsPlugin: org.springframework.core.io.Resource getConfigurationResource(java.lang.Class,java.lang.String)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfFileChange(java.io.File)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<grails.util.GrailsUtil: boolean isDevelopmentEnv()>",
    "<org.grails.core.io.DefaultResourceLocator: void <init>()>"
  ],
  "4.1.3": [
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void <init>()>",
    "<org.grails.plugins.DefaultGrailsPlugin$1: java.lang.Object call(java.lang.Object)>",
    "<org.grails.spring.context.support.PluginAwareResourceBundleMessageSource: void afterPropertiesSet()>",
    "<org.grails.config.EnvironmentAwarePropertySource: void initialize()>",
    "<org.grails.compiler.injection.ArtefactTypeAstTransformation: void performInjection(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.ast.ClassNode,java.util.Collection)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfClassChange(java.io.File,java.lang.Class)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void onApplicationEvent(org.springframework.context.event.ApplicationContextEvent)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean isDependentOn(grails.plugins.GrailsPlugin,grails.plugins.GrailsPlugin)>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.springframework.core.io.Resource[])>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: org.grails.io.support.Resource resource(java.lang.Object)>",
    "<org.grails.core.support.internal.tools.ClassRelativeClassLoader: java.net.URL[] createClassLoaderUrls(java.lang.Class)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean isCompatiblePlugin(grails.plugins.GrailsPlugin)>",
    "<org.grails.config.NavigableMapConfig: grails.config.Config merge(java.util.Map)>",
    "<org.grails.core.AbstractGrailsApplication: void <init>()>",
    "<org.grails.compiler.injection.GrailsASTUtils: java.net.URL getSourceUrl(org.codehaus.groovy.control.SourceUnit)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: void <init>(java.io.File,org.grails.io.support.ResourceLoader)>",
    "<grails.boot.GrailsApp: org.springframework.context.ConfigurableApplicationContext run(java.lang.String[])>",
    "<org.grails.config.yaml.YamlPropertySourceLoader: void lambda$load$2(java.util.List,org.grails.config.NavigableMap,java.util.Map)>",
    "<grails.boot.GrailsApp: void configureEnvironment(org.springframework.core.env.ConfigurableEnvironment,java.lang.String[])>",
    "<org.grails.compiler.injection.GlobalGrailsClassInjectorTransformation: void visit(org.codehaus.groovy.ast.ASTNode[],org.codehaus.groovy.control.SourceUnit)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: groovy.util.ConfigSlurper getConfigSlurper(grails.core.GrailsApplication)>",
    "<org.grails.compiler.injection.GrailsAwareInjectionOperation: void call(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.classgen.GeneratorContext,org.codehaus.groovy.ast.ClassNode)>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<grails.boot.config.tools.ClassPathScanner$ApplicationRelativeClassLoader: void <init>(java.lang.Class)>",
    "<org.grails.core.io.support.GrailsFactoriesLoader: java.util.List loadFactoryClasses(java.lang.Class,java.lang.ClassLoader)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<org.grails.plugins.BinaryGrailsPlugin: void <init>(java.lang.Class,org.grails.plugins.BinaryGrailsPluginDescriptor,grails.core.GrailsApplication)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void initializeGrailsApplication(org.springframework.context.ApplicationContext)>",
    "<org.grails.config.PropertySourcesConfig: void <init>(java.util.Map)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void <clinit>()>",
    "<org.grails.config.PropertySourcesConfig: void mergeEnumerablePropertySource(org.springframework.core.env.EnumerablePropertySource)>",
    "<grails.plugins.DefaultGrailsPluginManager: java.lang.Class loadPluginClass(java.lang.ClassLoader,org.springframework.core.io.Resource)>",
    "<org.grails.plugins.DefaultGrailsPlugin: boolean supportsCurrentScopeAndEnvironment()>",
    "<org.grails.compiler.injection.DefaultGrailsDomainClassInjector: boolean shouldInject(java.net.URL)>",
    "<grails.boot.GrailsApp: java.lang.Object printRunStatus(org.springframework.context.ConfigurableApplicationContext)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: java.lang.String className(org.grails.io.support.Resource)>",
    "<org.grails.config.EnvironmentAwarePropertySource: java.lang.Object getProperty(java.lang.String)>",
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void autowireBeanProperties(java.lang.Object,int,boolean)>",
    "<org.grails.config.NavigableMapConfig$1: void <init>(org.grails.config.NavigableMapConfig)>",
    "<org.grails.core.cfg.MicronautGroovyPropertySourceLoader: void processInput(java.lang.String,java.io.InputStream,java.util.Map)>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.core.DefaultGrailsControllerClass: void methodStrategy(java.util.Map)>",
    "<org.grails.core.cfg.GroovyConfigPropertySourceLoader: java.util.List load(java.lang.String,org.springframework.core.io.Resource,java.util.List)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean canRegisterPlugin(grails.plugins.GrailsPlugin)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: grails.plugins.GrailsPlugin getGrailsPlugin(java.lang.String,java.lang.Object)>",
    "<org.grails.core.AbstractGrailsClass: java.lang.String getPluginName()>",
    "<org.grails.plugins.DefaultGrailsPlugin: void evaluateOnChangeListener()>",
    "<org.grails.compiler.injection.ApplicationClassInjector: boolean shouldInject(java.net.URL)>",
    "<grails.util.GrailsUtil: void <clinit>()>",
    "<grails.util.GrailsClassUtils: org.springframework.cglib.reflect.FastClass fastClass(java.lang.Class)>",
    "<org.grails.config.yaml.YamlPropertySourceLoader: java.util.List load(java.lang.String,org.springframework.core.io.Resource,java.util.List)>",
    "<grails.util.GrailsUtil: java.lang.String getGrailsVersion()>",
    "<org.grails.core.AbstractGrailsApplication: boolean isWarDeployed()>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.grails.io.support.Resource[])>",
    "<grails.plugins.Plugin: void <init>()>",
    "<grails.dev.Support: void enableAgentIfNotPresent(java.lang.Class)>",
    "<org.grails.plugins.AbstractGrailsPlugin: org.springframework.core.io.Resource getConfigurationResource(java.lang.Class,java.lang.String)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfFileChange(java.io.File)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<grails.util.GrailsUtil: boolean isDevelopmentEnv()>",
    "<org.grails.core.io.DefaultResourceLocator: void <init>()>"
  ],
  "4.0.12": [
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void <init>()>",
    "<org.grails.plugins.DefaultGrailsPlugin$1: java.lang.Object call(java.lang.Object)>",
    "<org.grails.spring.context.support.PluginAwareResourceBundleMessageSource: void afterPropertiesSet()>",
    "<org.grails.config.EnvironmentAwarePropertySource: void initialize()>",
    "<org.grails.compiler.injection.ArtefactTypeAstTransformation: void performInjection(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.ast.ClassNode,java.util.Collection)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfClassChange(java.io.File,java.lang.Class)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void onApplicationEvent(org.springframework.context.event.ApplicationContextEvent)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean isDependentOn(grails.plugins.GrailsPlugin,grails.plugins.GrailsPlugin)>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.springframework.core.io.Resource[])>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: org.grails.io.support.Resource resource(java.lang.Object)>",
    "<org.grails.core.support.internal.tools.ClassRelativeClassLoader: java.net.URL[] createClassLoaderUrls(java.lang.Class)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean isCompatiblePlugin(grails.plugins.GrailsPlugin)>",
    "<org.grails.config.NavigableMapConfig: grails.config.Config merge(java.util.Map)>",
    "<org.grails.core.AbstractGrailsApplication: void <init>()>",
    "<org.grails.compiler.injection.GrailsASTUtils: java.net.URL getSourceUrl(org.codehaus.groovy.control.SourceUnit)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: void <init>(java.io.File,org.grails.io.support.ResourceLoader)>",
    "<grails.boot.GrailsApp: org.springframework.context.ConfigurableApplicationContext run(java.lang.String[])>",
    "<org.grails.config.yaml.YamlPropertySourceLoader: void lambda$load$2(java.util.List,org.grails.config.NavigableMap,java.util.Map)>",
    "<grails.boot.GrailsApp: void configureEnvironment(org.springframework.core.env.ConfigurableEnvironment,java.lang.String[])>",
    "<org.grails.compiler.injection.GlobalGrailsClassInjectorTransformation: void visit(org.codehaus.groovy.ast.ASTNode[],org.codehaus.groovy.control.SourceUnit)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: groovy.util.ConfigSlurper getConfigSlurper(grails.core.GrailsApplication)>",
    "<org.grails.compiler.injection.GrailsAwareInjectionOperation: void call(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.classgen.GeneratorContext,org.codehaus.groovy.ast.ClassNode)>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<grails.boot.config.tools.ClassPathScanner$ApplicationRelativeClassLoader: void <init>(java.lang.Class)>",
    "<org.grails.core.io.support.GrailsFactoriesLoader: java.util.List loadFactoryClasses(java.lang.Class,java.lang.ClassLoader)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<org.grails.plugins.BinaryGrailsPlugin: void <init>(java.lang.Class,org.grails.plugins.BinaryGrailsPluginDescriptor,grails.core.GrailsApplication)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void initializeGrailsApplication(org.springframework.context.ApplicationContext)>",
    "<org.grails.config.PropertySourcesConfig: void <init>(java.util.Map)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void <clinit>()>",
    "<org.grails.config.PropertySourcesConfig: void mergeEnumerablePropertySource(org.springframework.core.env.EnumerablePropertySource)>",
    "<grails.plugins.DefaultGrailsPluginManager: java.lang.Class loadPluginClass(java.lang.ClassLoader,org.springframework.core.io.Resource)>",
    "<org.grails.plugins.DefaultGrailsPlugin: boolean supportsCurrentScopeAndEnvironment()>",
    "<org.grails.compiler.injection.DefaultGrailsDomainClassInjector: boolean shouldInject(java.net.URL)>",
    "<grails.boot.GrailsApp: java.lang.Object printRunStatus(org.springframework.context.ConfigurableApplicationContext)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: java.lang.String className(org.grails.io.support.Resource)>",
    "<org.grails.config.EnvironmentAwarePropertySource: java.lang.Object getProperty(java.lang.String)>",
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void autowireBeanProperties(java.lang.Object,int,boolean)>",
    "<org.grails.config.NavigableMapConfig$1: void <init>(org.grails.config.NavigableMapConfig)>",
    "<org.grails.core.cfg.MicronautGroovyPropertySourceLoader: void processInput(java.lang.String,java.io.InputStream,java.util.Map)>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.core.DefaultGrailsControllerClass: void methodStrategy(java.util.Map)>",
    "<org.grails.core.cfg.GroovyConfigPropertySourceLoader: java.util.List load(java.lang.String,org.springframework.core.io.Resource,java.util.List)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean canRegisterPlugin(grails.plugins.GrailsPlugin)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: grails.plugins.GrailsPlugin getGrailsPlugin(java.lang.String,java.lang.Object)>",
    "<org.grails.core.AbstractGrailsClass: java.lang.String getPluginName()>",
    "<org.grails.plugins.DefaultGrailsPlugin: void evaluateOnChangeListener()>",
    "<org.grails.compiler.injection.ApplicationClassInjector: boolean shouldInject(java.net.URL)>",
    "<grails.util.GrailsUtil: void <clinit>()>",
    "<grails.util.GrailsClassUtils: org.springframework.cglib.reflect.FastClass fastClass(java.lang.Class)>",
    "<org.grails.config.yaml.YamlPropertySourceLoader: java.util.List load(java.lang.String,org.springframework.core.io.Resource,java.util.List)>",
    "<grails.util.GrailsUtil: java.lang.String getGrailsVersion()>",
    "<org.grails.core.AbstractGrailsApplication: boolean isWarDeployed()>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.grails.io.support.Resource[])>",
    "<grails.plugins.Plugin: void <init>()>",
    "<grails.dev.Support: void enableAgentIfNotPresent(java.lang.Class)>",
    "<org.grails.plugins.AbstractGrailsPlugin: org.springframework.core.io.Resource getConfigurationResource(java.lang.Class,java.lang.String)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfFileChange(java.io.File)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<grails.util.GrailsUtil: boolean isDevelopmentEnv()>",
    "<org.grails.core.io.DefaultResourceLocator: void <init>()>"
  ],
  "4.0.7": [
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void <init>()>",
    "<org.grails.plugins.DefaultGrailsPlugin$1: java.lang.Object call(java.lang.Object)>",
    "<org.grails.spring.context.support.PluginAwareResourceBundleMessageSource: void afterPropertiesSet()>",
    "<org.grails.config.EnvironmentAwarePropertySource: void initialize()>",
    "<org.grails.compiler.injection.ArtefactTypeAstTransformation: void performInjection(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.ast.ClassNode,java.util.Collection)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfClassChange(java.io.File,java.lang.Class)>",
    "<org.grails.config.NavigableMapConfig: grails.config.Config merge(java.util.Map)>",
    "<org.grails.compiler.injection.GrailsASTUtils: java.net.URL getSourceUrl(org.codehaus.groovy.control.SourceUnit)>",
    "<org.grails.core.AbstractGrailsApplication: void <init>()>",
    "<org.grails.config.yaml.YamlPropertySourceLoader: void lambda$load$2(java.util.List,org.grails.config.NavigableMap,java.util.Map)>",
    "<org.grails.compiler.injection.GlobalGrailsClassInjectorTransformation: void visit(org.codehaus.groovy.ast.ASTNode[],org.codehaus.groovy.control.SourceUnit)>",
    "<org.grails.compiler.injection.GrailsAwareInjectionOperation: void call(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.classgen.GeneratorContext,org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: groovy.util.ConfigSlurper getConfigSlurper(grails.core.GrailsApplication)>",
    "<org.grails.core.io.support.GrailsFactoriesLoader: java.util.List loadFactoryClasses(java.lang.Class,java.lang.ClassLoader)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<org.grails.plugins.BinaryGrailsPlugin: void <init>(java.lang.Class,org.grails.plugins.BinaryGrailsPluginDescriptor,grails.core.GrailsApplication)>",
    "<org.grails.config.PropertySourcesConfig: void <init>(java.util.Map)>",
    "<org.grails.plugins.DefaultGrailsPlugin: boolean supportsCurrentScopeAndEnvironment()>",
    "<org.grails.compiler.injection.DefaultGrailsDomainClassInjector: boolean shouldInject(java.net.URL)>",
    "<org.grails.config.EnvironmentAwarePropertySource: java.lang.Object getProperty(java.lang.String)>",
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void autowireBeanProperties(java.lang.Object,int,boolean)>",
    "<org.grails.config.NavigableMapConfig$1: void <init>(org.grails.config.NavigableMapConfig)>",
    "<org.grails.core.cfg.MicronautGroovyPropertySourceLoader: void processInput(java.lang.String,java.io.InputStream,java.util.Map)>",
    "<org.grails.core.DefaultGrailsControllerClass: void methodStrategy(java.util.Map)>",
    "<org.grails.core.cfg.GroovyConfigPropertySourceLoader: java.util.List load(java.lang.String,org.springframework.core.io.Resource,java.util.List)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: grails.plugins.GrailsPlugin getGrailsPlugin(java.lang.String,java.lang.Object)>",
    "<org.grails.core.AbstractGrailsClass: java.lang.String getPluginName()>",
    "<org.grails.plugins.DefaultGrailsPlugin: void evaluateOnChangeListener()>",
    "<org.grails.compiler.injection.ApplicationClassInjector: boolean shouldInject(java.net.URL)>",
    "<org.grails.config.yaml.YamlPropertySourceLoader: java.util.List load(java.lang.String,org.springframework.core.io.Resource,java.util.List)>",
    "<org.grails.core.AbstractGrailsApplication: boolean isWarDeployed()>",
    "<org.grails.plugins.AbstractGrailsPlugin: org.springframework.core.io.Resource getConfigurationResource(java.lang.Class,java.lang.String)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfFileChange(java.io.File)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.core.support.internal.tools.ClassRelativeClassLoader: java.net.URL[] createClassLoaderUrls(java.lang.Class)>",
    "<org.grails.core.io.DefaultResourceLocator: void <init>()>"
  ],
  "4.0.8": [
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void <init>()>",
    "<org.grails.plugins.DefaultGrailsPlugin$1: java.lang.Object call(java.lang.Object)>",
    "<org.grails.spring.context.support.PluginAwareResourceBundleMessageSource: void afterPropertiesSet()>",
    "<org.grails.config.EnvironmentAwarePropertySource: void initialize()>",
    "<org.grails.compiler.injection.ArtefactTypeAstTransformation: void performInjection(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.ast.ClassNode,java.util.Collection)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfClassChange(java.io.File,java.lang.Class)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void onApplicationEvent(org.springframework.context.event.ApplicationContextEvent)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean isDependentOn(grails.plugins.GrailsPlugin,grails.plugins.GrailsPlugin)>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.springframework.core.io.Resource[])>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: org.grails.io.support.Resource resource(java.lang.Object)>",
    "<org.grails.core.support.internal.tools.ClassRelativeClassLoader: java.net.URL[] createClassLoaderUrls(java.lang.Class)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean isCompatiblePlugin(grails.plugins.GrailsPlugin)>",
    "<org.grails.config.NavigableMapConfig: grails.config.Config merge(java.util.Map)>",
    "<org.grails.core.AbstractGrailsApplication: void <init>()>",
    "<org.grails.compiler.injection.GrailsASTUtils: java.net.URL getSourceUrl(org.codehaus.groovy.control.SourceUnit)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: void <init>(java.io.File,org.grails.io.support.ResourceLoader)>",
    "<org.grails.config.yaml.YamlPropertySourceLoader: void lambda$load$2(java.util.List,org.grails.config.NavigableMap,java.util.Map)>",
    "<grails.boot.GrailsApp: org.springframework.context.ConfigurableApplicationContext run(java.lang.String[])>",
    "<grails.boot.GrailsApp: void configureEnvironment(org.springframework.core.env.ConfigurableEnvironment,java.lang.String[])>",
    "<org.grails.compiler.injection.GlobalGrailsClassInjectorTransformation: void visit(org.codehaus.groovy.ast.ASTNode[],org.codehaus.groovy.control.SourceUnit)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: groovy.util.ConfigSlurper getConfigSlurper(grails.core.GrailsApplication)>",
    "<org.grails.compiler.injection.GrailsAwareInjectionOperation: void call(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.classgen.GeneratorContext,org.codehaus.groovy.ast.ClassNode)>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<grails.boot.config.tools.ClassPathScanner$ApplicationRelativeClassLoader: void <init>(java.lang.Class)>",
    "<org.grails.core.io.support.GrailsFactoriesLoader: java.util.List loadFactoryClasses(java.lang.Class,java.lang.ClassLoader)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<org.grails.plugins.BinaryGrailsPlugin: void <init>(java.lang.Class,org.grails.plugins.BinaryGrailsPluginDescriptor,grails.core.GrailsApplication)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void initializeGrailsApplication(org.springframework.context.ApplicationContext)>",
    "<org.grails.config.PropertySourcesConfig: void <init>(java.util.Map)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void <clinit>()>",
    "<org.grails.config.PropertySourcesConfig: void mergeEnumerablePropertySource(org.springframework.core.env.EnumerablePropertySource)>",
    "<grails.plugins.DefaultGrailsPluginManager: java.lang.Class loadPluginClass(java.lang.ClassLoader,org.springframework.core.io.Resource)>",
    "<org.grails.plugins.DefaultGrailsPlugin: boolean supportsCurrentScopeAndEnvironment()>",
    "<org.grails.compiler.injection.DefaultGrailsDomainClassInjector: boolean shouldInject(java.net.URL)>",
    "<grails.boot.GrailsApp: java.lang.Object printRunStatus(org.springframework.context.ConfigurableApplicationContext)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: java.lang.String className(org.grails.io.support.Resource)>",
    "<org.grails.config.EnvironmentAwarePropertySource: java.lang.Object getProperty(java.lang.String)>",
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void autowireBeanProperties(java.lang.Object,int,boolean)>",
    "<org.grails.config.NavigableMapConfig$1: void <init>(org.grails.config.NavigableMapConfig)>",
    "<org.grails.core.cfg.MicronautGroovyPropertySourceLoader: void processInput(java.lang.String,java.io.InputStream,java.util.Map)>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.core.DefaultGrailsControllerClass: void methodStrategy(java.util.Map)>",
    "<org.grails.core.cfg.GroovyConfigPropertySourceLoader: java.util.List load(java.lang.String,org.springframework.core.io.Resource,java.util.List)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean canRegisterPlugin(grails.plugins.GrailsPlugin)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: grails.plugins.GrailsPlugin getGrailsPlugin(java.lang.String,java.lang.Object)>",
    "<org.grails.core.AbstractGrailsClass: java.lang.String getPluginName()>",
    "<org.grails.plugins.DefaultGrailsPlugin: void evaluateOnChangeListener()>",
    "<org.grails.compiler.injection.ApplicationClassInjector: boolean shouldInject(java.net.URL)>",
    "<grails.util.GrailsUtil: void <clinit>()>",
    "<grails.util.GrailsClassUtils: org.springframework.cglib.reflect.FastClass fastClass(java.lang.Class)>",
    "<org.grails.config.yaml.YamlPropertySourceLoader: java.util.List load(java.lang.String,org.springframework.core.io.Resource,java.util.List)>",
    "<grails.util.GrailsUtil: java.lang.String getGrailsVersion()>",
    "<org.grails.core.AbstractGrailsApplication: boolean isWarDeployed()>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.grails.io.support.Resource[])>",
    "<grails.plugins.Plugin: void <init>()>",
    "<grails.dev.Support: void enableAgentIfNotPresent(java.lang.Class)>",
    "<org.grails.plugins.AbstractGrailsPlugin: org.springframework.core.io.Resource getConfigurationResource(java.lang.Class,java.lang.String)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfFileChange(java.io.File)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<grails.util.GrailsUtil: boolean isDevelopmentEnv()>",
    "<org.grails.core.io.DefaultResourceLocator: void <init>()>"
  ],
  "4.0.10": [
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void <init>()>",
    "<org.grails.plugins.DefaultGrailsPlugin$1: java.lang.Object call(java.lang.Object)>",
    "<org.grails.spring.context.support.PluginAwareResourceBundleMessageSource: void afterPropertiesSet()>",
    "<org.grails.config.EnvironmentAwarePropertySource: void initialize()>",
    "<org.grails.compiler.injection.ArtefactTypeAstTransformation: void performInjection(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.ast.ClassNode,java.util.Collection)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfClassChange(java.io.File,java.lang.Class)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void onApplicationEvent(org.springframework.context.event.ApplicationContextEvent)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean isDependentOn(grails.plugins.GrailsPlugin,grails.plugins.GrailsPlugin)>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.springframework.core.io.Resource[])>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: org.grails.io.support.Resource resource(java.lang.Object)>",
    "<org.grails.core.support.internal.tools.ClassRelativeClassLoader: java.net.URL[] createClassLoaderUrls(java.lang.Class)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean isCompatiblePlugin(grails.plugins.GrailsPlugin)>",
    "<org.grails.config.NavigableMapConfig: grails.config.Config merge(java.util.Map)>",
    "<org.grails.core.AbstractGrailsApplication: void <init>()>",
    "<org.grails.compiler.injection.GrailsASTUtils: java.net.URL getSourceUrl(org.codehaus.groovy.control.SourceUnit)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: void <init>(java.io.File,org.grails.io.support.ResourceLoader)>",
    "<org.grails.config.yaml.YamlPropertySourceLoader: void lambda$load$2(java.util.List,org.grails.config.NavigableMap,java.util.Map)>",
    "<grails.boot.GrailsApp: org.springframework.context.ConfigurableApplicationContext run(java.lang.String[])>",
    "<grails.boot.GrailsApp: void configureEnvironment(org.springframework.core.env.ConfigurableEnvironment,java.lang.String[])>",
    "<org.grails.compiler.injection.GlobalGrailsClassInjectorTransformation: void visit(org.codehaus.groovy.ast.ASTNode[],org.codehaus.groovy.control.SourceUnit)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: groovy.util.ConfigSlurper getConfigSlurper(grails.core.GrailsApplication)>",
    "<org.grails.compiler.injection.GrailsAwareInjectionOperation: void call(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.classgen.GeneratorContext,org.codehaus.groovy.ast.ClassNode)>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<grails.boot.config.tools.ClassPathScanner$ApplicationRelativeClassLoader: void <init>(java.lang.Class)>",
    "<org.grails.core.io.support.GrailsFactoriesLoader: java.util.List loadFactoryClasses(java.lang.Class,java.lang.ClassLoader)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<org.grails.plugins.BinaryGrailsPlugin: void <init>(java.lang.Class,org.grails.plugins.BinaryGrailsPluginDescriptor,grails.core.GrailsApplication)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void initializeGrailsApplication(org.springframework.context.ApplicationContext)>",
    "<org.grails.config.PropertySourcesConfig: void <init>(java.util.Map)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void <clinit>()>",
    "<org.grails.config.PropertySourcesConfig: void mergeEnumerablePropertySource(org.springframework.core.env.EnumerablePropertySource)>",
    "<grails.plugins.DefaultGrailsPluginManager: java.lang.Class loadPluginClass(java.lang.ClassLoader,org.springframework.core.io.Resource)>",
    "<org.grails.plugins.DefaultGrailsPlugin: boolean supportsCurrentScopeAndEnvironment()>",
    "<org.grails.compiler.injection.DefaultGrailsDomainClassInjector: boolean shouldInject(java.net.URL)>",
    "<grails.boot.GrailsApp: java.lang.Object printRunStatus(org.springframework.context.ConfigurableApplicationContext)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: java.lang.String className(org.grails.io.support.Resource)>",
    "<org.grails.config.EnvironmentAwarePropertySource: java.lang.Object getProperty(java.lang.String)>",
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void autowireBeanProperties(java.lang.Object,int,boolean)>",
    "<org.grails.config.NavigableMapConfig$1: void <init>(org.grails.config.NavigableMapConfig)>",
    "<org.grails.core.cfg.MicronautGroovyPropertySourceLoader: void processInput(java.lang.String,java.io.InputStream,java.util.Map)>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.core.DefaultGrailsControllerClass: void methodStrategy(java.util.Map)>",
    "<org.grails.core.cfg.GroovyConfigPropertySourceLoader: java.util.List load(java.lang.String,org.springframework.core.io.Resource,java.util.List)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean canRegisterPlugin(grails.plugins.GrailsPlugin)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: grails.plugins.GrailsPlugin getGrailsPlugin(java.lang.String,java.lang.Object)>",
    "<org.grails.core.AbstractGrailsClass: java.lang.String getPluginName()>",
    "<org.grails.plugins.DefaultGrailsPlugin: void evaluateOnChangeListener()>",
    "<org.grails.compiler.injection.ApplicationClassInjector: boolean shouldInject(java.net.URL)>",
    "<grails.util.GrailsUtil: void <clinit>()>",
    "<grails.util.GrailsClassUtils: org.springframework.cglib.reflect.FastClass fastClass(java.lang.Class)>",
    "<org.grails.config.yaml.YamlPropertySourceLoader: java.util.List load(java.lang.String,org.springframework.core.io.Resource,java.util.List)>",
    "<grails.util.GrailsUtil: java.lang.String getGrailsVersion()>",
    "<org.grails.core.AbstractGrailsApplication: boolean isWarDeployed()>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.grails.io.support.Resource[])>",
    "<grails.plugins.Plugin: void <init>()>",
    "<grails.dev.Support: void enableAgentIfNotPresent(java.lang.Class)>",
    "<org.grails.plugins.AbstractGrailsPlugin: org.springframework.core.io.Resource getConfigurationResource(java.lang.Class,java.lang.String)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfFileChange(java.io.File)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<grails.util.GrailsUtil: boolean isDevelopmentEnv()>",
    "<org.grails.core.io.DefaultResourceLocator: void <init>()>"
  ],
  "4.1.4": [
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void <init>()>",
    "<org.grails.plugins.DefaultGrailsPlugin$1: java.lang.Object call(java.lang.Object)>",
    "<org.grails.spring.context.support.PluginAwareResourceBundleMessageSource: void afterPropertiesSet()>",
    "<org.grails.config.EnvironmentAwarePropertySource: void initialize()>",
    "<org.grails.compiler.injection.ArtefactTypeAstTransformation: void performInjection(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.ast.ClassNode,java.util.Collection)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfClassChange(java.io.File,java.lang.Class)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void onApplicationEvent(org.springframework.context.event.ApplicationContextEvent)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean isDependentOn(grails.plugins.GrailsPlugin,grails.plugins.GrailsPlugin)>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.springframework.core.io.Resource[])>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: org.grails.io.support.Resource resource(java.lang.Object)>",
    "<org.grails.core.support.internal.tools.ClassRelativeClassLoader: java.net.URL[] createClassLoaderUrls(java.lang.Class)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean isCompatiblePlugin(grails.plugins.GrailsPlugin)>",
    "<org.grails.config.NavigableMapConfig: grails.config.Config merge(java.util.Map)>",
    "<org.grails.core.AbstractGrailsApplication: void <init>()>",
    "<org.grails.compiler.injection.GrailsASTUtils: java.net.URL getSourceUrl(org.codehaus.groovy.control.SourceUnit)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: void <init>(java.io.File,org.grails.io.support.ResourceLoader)>",
    "<org.grails.config.yaml.YamlPropertySourceLoader: void lambda$load$2(java.util.List,org.grails.config.NavigableMap,java.util.Map)>",
    "<grails.boot.GrailsApp: org.springframework.context.ConfigurableApplicationContext run(java.lang.String[])>",
    "<grails.boot.GrailsApp: void configureEnvironment(org.springframework.core.env.ConfigurableEnvironment,java.lang.String[])>",
    "<org.grails.compiler.injection.GlobalGrailsClassInjectorTransformation: void visit(org.codehaus.groovy.ast.ASTNode[],org.codehaus.groovy.control.SourceUnit)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: groovy.util.ConfigSlurper getConfigSlurper(grails.core.GrailsApplication)>",
    "<org.grails.compiler.injection.GrailsAwareInjectionOperation: void call(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.classgen.GeneratorContext,org.codehaus.groovy.ast.ClassNode)>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<grails.boot.config.tools.ClassPathScanner$ApplicationRelativeClassLoader: void <init>(java.lang.Class)>",
    "<org.grails.core.io.support.GrailsFactoriesLoader: java.util.List loadFactoryClasses(java.lang.Class,java.lang.ClassLoader)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<org.grails.plugins.BinaryGrailsPlugin: void <init>(java.lang.Class,org.grails.plugins.BinaryGrailsPluginDescriptor,grails.core.GrailsApplication)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void initializeGrailsApplication(org.springframework.context.ApplicationContext)>",
    "<org.grails.config.PropertySourcesConfig: void <init>(java.util.Map)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void <clinit>()>",
    "<org.grails.config.PropertySourcesConfig: void mergeEnumerablePropertySource(org.springframework.core.env.EnumerablePropertySource)>",
    "<grails.plugins.DefaultGrailsPluginManager: java.lang.Class loadPluginClass(java.lang.ClassLoader,org.springframework.core.io.Resource)>",
    "<org.grails.plugins.DefaultGrailsPlugin: boolean supportsCurrentScopeAndEnvironment()>",
    "<org.grails.compiler.injection.DefaultGrailsDomainClassInjector: boolean shouldInject(java.net.URL)>",
    "<grails.boot.GrailsApp: java.lang.Object printRunStatus(org.springframework.context.ConfigurableApplicationContext)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: java.lang.String className(org.grails.io.support.Resource)>",
    "<org.grails.config.EnvironmentAwarePropertySource: java.lang.Object getProperty(java.lang.String)>",
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void autowireBeanProperties(java.lang.Object,int,boolean)>",
    "<org.grails.config.NavigableMapConfig$1: void <init>(org.grails.config.NavigableMapConfig)>",
    "<org.grails.core.cfg.MicronautGroovyPropertySourceLoader: void processInput(java.lang.String,java.io.InputStream,java.util.Map)>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.core.DefaultGrailsControllerClass: void methodStrategy(java.util.Map)>",
    "<org.grails.core.cfg.GroovyConfigPropertySourceLoader: java.util.List load(java.lang.String,org.springframework.core.io.Resource,java.util.List)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean canRegisterPlugin(grails.plugins.GrailsPlugin)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: grails.plugins.GrailsPlugin getGrailsPlugin(java.lang.String,java.lang.Object)>",
    "<org.grails.core.AbstractGrailsClass: java.lang.String getPluginName()>",
    "<org.grails.plugins.DefaultGrailsPlugin: void evaluateOnChangeListener()>",
    "<org.grails.compiler.injection.ApplicationClassInjector: boolean shouldInject(java.net.URL)>",
    "<grails.util.GrailsUtil: void <clinit>()>",
    "<grails.util.GrailsClassUtils: org.springframework.cglib.reflect.FastClass fastClass(java.lang.Class)>",
    "<org.grails.config.yaml.YamlPropertySourceLoader: java.util.List load(java.lang.String,org.springframework.core.io.Resource,java.util.List)>",
    "<grails.util.GrailsUtil: java.lang.String getGrailsVersion()>",
    "<org.grails.core.AbstractGrailsApplication: boolean isWarDeployed()>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.grails.io.support.Resource[])>",
    "<grails.plugins.Plugin: void <init>()>",
    "<grails.dev.Support: void enableAgentIfNotPresent(java.lang.Class)>",
    "<org.grails.plugins.AbstractGrailsPlugin: org.springframework.core.io.Resource getConfigurationResource(java.lang.Class,java.lang.String)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfFileChange(java.io.File)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<grails.util.GrailsUtil: boolean isDevelopmentEnv()>",
    "<org.grails.core.io.DefaultResourceLocator: void <init>()>"
  ],
  "4.0.11": [
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void <init>()>",
    "<org.grails.plugins.DefaultGrailsPlugin$1: java.lang.Object call(java.lang.Object)>",
    "<org.grails.spring.context.support.PluginAwareResourceBundleMessageSource: void afterPropertiesSet()>",
    "<org.grails.config.EnvironmentAwarePropertySource: void initialize()>",
    "<org.grails.compiler.injection.ArtefactTypeAstTransformation: void performInjection(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.ast.ClassNode,java.util.Collection)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfClassChange(java.io.File,java.lang.Class)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void onApplicationEvent(org.springframework.context.event.ApplicationContextEvent)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean isDependentOn(grails.plugins.GrailsPlugin,grails.plugins.GrailsPlugin)>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.springframework.core.io.Resource[])>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: org.grails.io.support.Resource resource(java.lang.Object)>",
    "<org.grails.core.support.internal.tools.ClassRelativeClassLoader: java.net.URL[] createClassLoaderUrls(java.lang.Class)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean isCompatiblePlugin(grails.plugins.GrailsPlugin)>",
    "<org.grails.config.NavigableMapConfig: grails.config.Config merge(java.util.Map)>",
    "<org.grails.core.AbstractGrailsApplication: void <init>()>",
    "<org.grails.compiler.injection.GrailsASTUtils: java.net.URL getSourceUrl(org.codehaus.groovy.control.SourceUnit)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: void <init>(java.io.File,org.grails.io.support.ResourceLoader)>",
    "<grails.boot.GrailsApp: org.springframework.context.ConfigurableApplicationContext run(java.lang.String[])>",
    "<org.grails.config.yaml.YamlPropertySourceLoader: void lambda$load$2(java.util.List,org.grails.config.NavigableMap,java.util.Map)>",
    "<grails.boot.GrailsApp: void configureEnvironment(org.springframework.core.env.ConfigurableEnvironment,java.lang.String[])>",
    "<org.grails.compiler.injection.GlobalGrailsClassInjectorTransformation: void visit(org.codehaus.groovy.ast.ASTNode[],org.codehaus.groovy.control.SourceUnit)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: groovy.util.ConfigSlurper getConfigSlurper(grails.core.GrailsApplication)>",
    "<org.grails.compiler.injection.GrailsAwareInjectionOperation: void call(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.classgen.GeneratorContext,org.codehaus.groovy.ast.ClassNode)>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<grails.boot.config.tools.ClassPathScanner$ApplicationRelativeClassLoader: void <init>(java.lang.Class)>",
    "<org.grails.core.io.support.GrailsFactoriesLoader: java.util.List loadFactoryClasses(java.lang.Class,java.lang.ClassLoader)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<org.grails.plugins.BinaryGrailsPlugin: void <init>(java.lang.Class,org.grails.plugins.BinaryGrailsPluginDescriptor,grails.core.GrailsApplication)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void initializeGrailsApplication(org.springframework.context.ApplicationContext)>",
    "<org.grails.config.PropertySourcesConfig: void <init>(java.util.Map)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void <clinit>()>",
    "<org.grails.config.PropertySourcesConfig: void mergeEnumerablePropertySource(org.springframework.core.env.EnumerablePropertySource)>",
    "<grails.plugins.DefaultGrailsPluginManager: java.lang.Class loadPluginClass(java.lang.ClassLoader,org.springframework.core.io.Resource)>",
    "<org.grails.plugins.DefaultGrailsPlugin: boolean supportsCurrentScopeAndEnvironment()>",
    "<org.grails.compiler.injection.DefaultGrailsDomainClassInjector: boolean shouldInject(java.net.URL)>",
    "<grails.boot.GrailsApp: java.lang.Object printRunStatus(org.springframework.context.ConfigurableApplicationContext)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: java.lang.String className(org.grails.io.support.Resource)>",
    "<org.grails.config.EnvironmentAwarePropertySource: java.lang.Object getProperty(java.lang.String)>",
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void autowireBeanProperties(java.lang.Object,int,boolean)>",
    "<org.grails.config.NavigableMapConfig$1: void <init>(org.grails.config.NavigableMapConfig)>",
    "<org.grails.core.cfg.MicronautGroovyPropertySourceLoader: void processInput(java.lang.String,java.io.InputStream,java.util.Map)>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.core.DefaultGrailsControllerClass: void methodStrategy(java.util.Map)>",
    "<org.grails.core.cfg.GroovyConfigPropertySourceLoader: java.util.List load(java.lang.String,org.springframework.core.io.Resource,java.util.List)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean canRegisterPlugin(grails.plugins.GrailsPlugin)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: grails.plugins.GrailsPlugin getGrailsPlugin(java.lang.String,java.lang.Object)>",
    "<org.grails.core.AbstractGrailsClass: java.lang.String getPluginName()>",
    "<org.grails.plugins.DefaultGrailsPlugin: void evaluateOnChangeListener()>",
    "<org.grails.compiler.injection.ApplicationClassInjector: boolean shouldInject(java.net.URL)>",
    "<grails.util.GrailsUtil: void <clinit>()>",
    "<grails.util.GrailsClassUtils: org.springframework.cglib.reflect.FastClass fastClass(java.lang.Class)>",
    "<org.grails.config.yaml.YamlPropertySourceLoader: java.util.List load(java.lang.String,org.springframework.core.io.Resource,java.util.List)>",
    "<grails.util.GrailsUtil: java.lang.String getGrailsVersion()>",
    "<org.grails.core.AbstractGrailsApplication: boolean isWarDeployed()>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.grails.io.support.Resource[])>",
    "<grails.plugins.Plugin: void <init>()>",
    "<grails.dev.Support: void enableAgentIfNotPresent(java.lang.Class)>",
    "<org.grails.plugins.AbstractGrailsPlugin: org.springframework.core.io.Resource getConfigurationResource(java.lang.Class,java.lang.String)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfFileChange(java.io.File)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<grails.util.GrailsUtil: boolean isDevelopmentEnv()>",
    "<org.grails.core.io.DefaultResourceLocator: void <init>()>"
  ],
  "4.0.9": [
    "<grails.boot.config.GrailsApplicationPostProcessor: void onApplicationEvent(org.springframework.context.event.ApplicationContextEvent)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean isDependentOn(grails.plugins.GrailsPlugin,grails.plugins.GrailsPlugin)>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.springframework.core.io.Resource[])>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: org.grails.io.support.Resource resource(java.lang.Object)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean isCompatiblePlugin(grails.plugins.GrailsPlugin)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: void <init>(java.io.File,org.grails.io.support.ResourceLoader)>",
    "<grails.boot.GrailsApp: org.springframework.context.ConfigurableApplicationContext run(java.lang.String[])>",
    "<grails.boot.GrailsApp: void configureEnvironment(org.springframework.core.env.ConfigurableEnvironment,java.lang.String[])>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<grails.boot.config.tools.ClassPathScanner$ApplicationRelativeClassLoader: void <init>(java.lang.Class)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void initializeGrailsApplication(org.springframework.context.ApplicationContext)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void <clinit>()>",
    "<grails.plugins.DefaultGrailsPluginManager: java.lang.Class loadPluginClass(java.lang.ClassLoader,org.springframework.core.io.Resource)>",
    "<grails.boot.GrailsApp: java.lang.Object printRunStatus(org.springframework.context.ConfigurableApplicationContext)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: java.lang.String className(org.grails.io.support.Resource)>",
    "<grails.util.GrailsUtil: boolean isDevelopmentEnv()>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean canRegisterPlugin(grails.plugins.GrailsPlugin)>",
    "<grails.util.GrailsUtil: void <clinit>()>",
    "<grails.util.GrailsClassUtils: org.springframework.cglib.reflect.FastClass fastClass(java.lang.Class)>",
    "<grails.util.GrailsUtil: java.lang.String getGrailsVersion()>",
    "<grails.plugins.Plugin: void <init>()>",
    "<grails.dev.Support: void enableAgentIfNotPresent(java.lang.Class)>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.grails.io.support.Resource[])>"
  ],
  "4.1.2": [
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void <init>()>",
    "<org.grails.plugins.DefaultGrailsPlugin$1: java.lang.Object call(java.lang.Object)>",
    "<org.grails.spring.context.support.PluginAwareResourceBundleMessageSource: void afterPropertiesSet()>",
    "<org.grails.config.EnvironmentAwarePropertySource: void initialize()>",
    "<org.grails.compiler.injection.ArtefactTypeAstTransformation: void performInjection(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.ast.ClassNode,java.util.Collection)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfClassChange(java.io.File,java.lang.Class)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void onApplicationEvent(org.springframework.context.event.ApplicationContextEvent)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean isDependentOn(grails.plugins.GrailsPlugin,grails.plugins.GrailsPlugin)>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.springframework.core.io.Resource[])>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: org.grails.io.support.Resource resource(java.lang.Object)>",
    "<org.grails.core.support.internal.tools.ClassRelativeClassLoader: java.net.URL[] createClassLoaderUrls(java.lang.Class)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean isCompatiblePlugin(grails.plugins.GrailsPlugin)>",
    "<org.grails.config.NavigableMapConfig: grails.config.Config merge(java.util.Map)>",
    "<org.grails.core.AbstractGrailsApplication: void <init>()>",
    "<org.grails.compiler.injection.GrailsASTUtils: java.net.URL getSourceUrl(org.codehaus.groovy.control.SourceUnit)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: void <init>(java.io.File,org.grails.io.support.ResourceLoader)>",
    "<grails.boot.GrailsApp: org.springframework.context.ConfigurableApplicationContext run(java.lang.String[])>",
    "<org.grails.config.yaml.YamlPropertySourceLoader: void lambda$load$2(java.util.List,org.grails.config.NavigableMap,java.util.Map)>",
    "<grails.boot.GrailsApp: void configureEnvironment(org.springframework.core.env.ConfigurableEnvironment,java.lang.String[])>",
    "<org.grails.compiler.injection.GlobalGrailsClassInjectorTransformation: void visit(org.codehaus.groovy.ast.ASTNode[],org.codehaus.groovy.control.SourceUnit)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: groovy.util.ConfigSlurper getConfigSlurper(grails.core.GrailsApplication)>",
    "<org.grails.compiler.injection.GrailsAwareInjectionOperation: void call(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.classgen.GeneratorContext,org.codehaus.groovy.ast.ClassNode)>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<grails.boot.config.tools.ClassPathScanner$ApplicationRelativeClassLoader: void <init>(java.lang.Class)>",
    "<org.grails.core.io.support.GrailsFactoriesLoader: java.util.List loadFactoryClasses(java.lang.Class,java.lang.ClassLoader)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<org.grails.plugins.BinaryGrailsPlugin: void <init>(java.lang.Class,org.grails.plugins.BinaryGrailsPluginDescriptor,grails.core.GrailsApplication)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void initializeGrailsApplication(org.springframework.context.ApplicationContext)>",
    "<org.grails.config.PropertySourcesConfig: void <init>(java.util.Map)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void <clinit>()>",
    "<org.grails.config.PropertySourcesConfig: void mergeEnumerablePropertySource(org.springframework.core.env.EnumerablePropertySource)>",
    "<grails.plugins.DefaultGrailsPluginManager: java.lang.Class loadPluginClass(java.lang.ClassLoader,org.springframework.core.io.Resource)>",
    "<org.grails.plugins.DefaultGrailsPlugin: boolean supportsCurrentScopeAndEnvironment()>",
    "<org.grails.compiler.injection.DefaultGrailsDomainClassInjector: boolean shouldInject(java.net.URL)>",
    "<grails.boot.GrailsApp: java.lang.Object printRunStatus(org.springframework.context.ConfigurableApplicationContext)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: java.lang.String className(org.grails.io.support.Resource)>",
    "<org.grails.config.EnvironmentAwarePropertySource: java.lang.Object getProperty(java.lang.String)>",
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void autowireBeanProperties(java.lang.Object,int,boolean)>",
    "<org.grails.config.NavigableMapConfig$1: void <init>(org.grails.config.NavigableMapConfig)>",
    "<org.grails.core.cfg.MicronautGroovyPropertySourceLoader: void processInput(java.lang.String,java.io.InputStream,java.util.Map)>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.core.DefaultGrailsControllerClass: void methodStrategy(java.util.Map)>",
    "<org.grails.core.cfg.GroovyConfigPropertySourceLoader: java.util.List load(java.lang.String,org.springframework.core.io.Resource,java.util.List)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean canRegisterPlugin(grails.plugins.GrailsPlugin)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: grails.plugins.GrailsPlugin getGrailsPlugin(java.lang.String,java.lang.Object)>",
    "<org.grails.core.AbstractGrailsClass: java.lang.String getPluginName()>",
    "<org.grails.plugins.DefaultGrailsPlugin: void evaluateOnChangeListener()>",
    "<org.grails.compiler.injection.ApplicationClassInjector: boolean shouldInject(java.net.URL)>",
    "<grails.util.GrailsUtil: void <clinit>()>",
    "<grails.util.GrailsClassUtils: org.springframework.cglib.reflect.FastClass fastClass(java.lang.Class)>",
    "<org.grails.config.yaml.YamlPropertySourceLoader: java.util.List load(java.lang.String,org.springframework.core.io.Resource,java.util.List)>",
    "<grails.util.GrailsUtil: java.lang.String getGrailsVersion()>",
    "<org.grails.core.AbstractGrailsApplication: boolean isWarDeployed()>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.grails.io.support.Resource[])>",
    "<grails.plugins.Plugin: void <init>()>",
    "<grails.dev.Support: void enableAgentIfNotPresent(java.lang.Class)>",
    "<org.grails.plugins.AbstractGrailsPlugin: org.springframework.core.io.Resource getConfigurationResource(java.lang.Class,java.lang.String)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfFileChange(java.io.File)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<grails.util.GrailsUtil: boolean isDevelopmentEnv()>",
    "<org.grails.core.io.DefaultResourceLocator: void <init>()>"
  ],
  "4.0.13": [
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void <init>()>",
    "<org.grails.plugins.DefaultGrailsPlugin$1: java.lang.Object call(java.lang.Object)>",
    "<org.grails.spring.context.support.PluginAwareResourceBundleMessageSource: void afterPropertiesSet()>",
    "<org.grails.config.EnvironmentAwarePropertySource: void initialize()>",
    "<org.grails.compiler.injection.ArtefactTypeAstTransformation: void performInjection(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.ast.ClassNode,java.util.Collection)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfClassChange(java.io.File,java.lang.Class)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void onApplicationEvent(org.springframework.context.event.ApplicationContextEvent)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean isDependentOn(grails.plugins.GrailsPlugin,grails.plugins.GrailsPlugin)>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.springframework.core.io.Resource[])>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: org.grails.io.support.Resource resource(java.lang.Object)>",
    "<org.grails.core.support.internal.tools.ClassRelativeClassLoader: java.net.URL[] createClassLoaderUrls(java.lang.Class)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean isCompatiblePlugin(grails.plugins.GrailsPlugin)>",
    "<org.grails.config.NavigableMapConfig: grails.config.Config merge(java.util.Map)>",
    "<org.grails.core.AbstractGrailsApplication: void <init>()>",
    "<org.grails.compiler.injection.GrailsASTUtils: java.net.URL getSourceUrl(org.codehaus.groovy.control.SourceUnit)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: void <init>(java.io.File,org.grails.io.support.ResourceLoader)>",
    "<grails.boot.GrailsApp: org.springframework.context.ConfigurableApplicationContext run(java.lang.String[])>",
    "<org.grails.config.yaml.YamlPropertySourceLoader: void lambda$load$2(java.util.List,org.grails.config.NavigableMap,java.util.Map)>",
    "<grails.boot.GrailsApp: void configureEnvironment(org.springframework.core.env.ConfigurableEnvironment,java.lang.String[])>",
    "<org.grails.compiler.injection.GlobalGrailsClassInjectorTransformation: void visit(org.codehaus.groovy.ast.ASTNode[],org.codehaus.groovy.control.SourceUnit)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: groovy.util.ConfigSlurper getConfigSlurper(grails.core.GrailsApplication)>",
    "<org.grails.compiler.injection.GrailsAwareInjectionOperation: void call(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.classgen.GeneratorContext,org.codehaus.groovy.ast.ClassNode)>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<grails.boot.config.tools.ClassPathScanner$ApplicationRelativeClassLoader: void <init>(java.lang.Class)>",
    "<org.grails.core.io.support.GrailsFactoriesLoader: java.util.List loadFactoryClasses(java.lang.Class,java.lang.ClassLoader)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<org.grails.plugins.BinaryGrailsPlugin: void <init>(java.lang.Class,org.grails.plugins.BinaryGrailsPluginDescriptor,grails.core.GrailsApplication)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void initializeGrailsApplication(org.springframework.context.ApplicationContext)>",
    "<org.grails.config.PropertySourcesConfig: void <init>(java.util.Map)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void <clinit>()>",
    "<org.grails.config.PropertySourcesConfig: void mergeEnumerablePropertySource(org.springframework.core.env.EnumerablePropertySource)>",
    "<grails.plugins.DefaultGrailsPluginManager: java.lang.Class loadPluginClass(java.lang.ClassLoader,org.springframework.core.io.Resource)>",
    "<org.grails.plugins.DefaultGrailsPlugin: boolean supportsCurrentScopeAndEnvironment()>",
    "<org.grails.compiler.injection.DefaultGrailsDomainClassInjector: boolean shouldInject(java.net.URL)>",
    "<grails.boot.GrailsApp: java.lang.Object printRunStatus(org.springframework.context.ConfigurableApplicationContext)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: java.lang.String className(org.grails.io.support.Resource)>",
    "<org.grails.config.EnvironmentAwarePropertySource: java.lang.Object getProperty(java.lang.String)>",
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void autowireBeanProperties(java.lang.Object,int,boolean)>",
    "<org.grails.config.NavigableMapConfig$1: void <init>(org.grails.config.NavigableMapConfig)>",
    "<org.grails.core.cfg.MicronautGroovyPropertySourceLoader: void processInput(java.lang.String,java.io.InputStream,java.util.Map)>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.core.DefaultGrailsControllerClass: void methodStrategy(java.util.Map)>",
    "<org.grails.core.cfg.GroovyConfigPropertySourceLoader: java.util.List load(java.lang.String,org.springframework.core.io.Resource,java.util.List)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean canRegisterPlugin(grails.plugins.GrailsPlugin)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: grails.plugins.GrailsPlugin getGrailsPlugin(java.lang.String,java.lang.Object)>",
    "<org.grails.core.AbstractGrailsClass: java.lang.String getPluginName()>",
    "<org.grails.plugins.DefaultGrailsPlugin: void evaluateOnChangeListener()>",
    "<org.grails.compiler.injection.ApplicationClassInjector: boolean shouldInject(java.net.URL)>",
    "<grails.util.GrailsUtil: void <clinit>()>",
    "<grails.util.GrailsClassUtils: org.springframework.cglib.reflect.FastClass fastClass(java.lang.Class)>",
    "<org.grails.config.yaml.YamlPropertySourceLoader: java.util.List load(java.lang.String,org.springframework.core.io.Resource,java.util.List)>",
    "<grails.util.GrailsUtil: java.lang.String getGrailsVersion()>",
    "<org.grails.core.AbstractGrailsApplication: boolean isWarDeployed()>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.grails.io.support.Resource[])>",
    "<grails.plugins.Plugin: void <init>()>",
    "<grails.dev.Support: void enableAgentIfNotPresent(java.lang.Class)>",
    "<org.grails.plugins.AbstractGrailsPlugin: org.springframework.core.io.Resource getConfigurationResource(java.lang.Class,java.lang.String)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfFileChange(java.io.File)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<grails.util.GrailsUtil: boolean isDevelopmentEnv()>",
    "<org.grails.core.io.DefaultResourceLocator: void <init>()>"
  ],
  "4.0.5": [
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void <init>()>",
    "<org.grails.plugins.DefaultGrailsPlugin$1: java.lang.Object call(java.lang.Object)>",
    "<org.grails.spring.context.support.PluginAwareResourceBundleMessageSource: void afterPropertiesSet()>",
    "<org.grails.config.EnvironmentAwarePropertySource: void initialize()>",
    "<org.grails.compiler.injection.ArtefactTypeAstTransformation: void performInjection(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.ast.ClassNode,java.util.Collection)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfClassChange(java.io.File,java.lang.Class)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void onApplicationEvent(org.springframework.context.event.ApplicationContextEvent)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean isDependentOn(grails.plugins.GrailsPlugin,grails.plugins.GrailsPlugin)>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.springframework.core.io.Resource[])>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: org.grails.io.support.Resource resource(java.lang.Object)>",
    "<org.grails.core.support.internal.tools.ClassRelativeClassLoader: java.net.URL[] createClassLoaderUrls(java.lang.Class)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean isCompatiblePlugin(grails.plugins.GrailsPlugin)>",
    "<org.grails.config.NavigableMapConfig: grails.config.Config merge(java.util.Map)>",
    "<org.grails.core.AbstractGrailsApplication: void <init>()>",
    "<org.grails.compiler.injection.GrailsASTUtils: java.net.URL getSourceUrl(org.codehaus.groovy.control.SourceUnit)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: void <init>(java.io.File,org.grails.io.support.ResourceLoader)>",
    "<org.grails.config.yaml.YamlPropertySourceLoader: void lambda$load$2(java.util.List,org.grails.config.NavigableMap,java.util.Map)>",
    "<grails.boot.GrailsApp: org.springframework.context.ConfigurableApplicationContext run(java.lang.String[])>",
    "<grails.boot.GrailsApp: void configureEnvironment(org.springframework.core.env.ConfigurableEnvironment,java.lang.String[])>",
    "<org.grails.compiler.injection.GlobalGrailsClassInjectorTransformation: void visit(org.codehaus.groovy.ast.ASTNode[],org.codehaus.groovy.control.SourceUnit)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: groovy.util.ConfigSlurper getConfigSlurper(grails.core.GrailsApplication)>",
    "<org.grails.compiler.injection.GrailsAwareInjectionOperation: void call(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.classgen.GeneratorContext,org.codehaus.groovy.ast.ClassNode)>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<grails.boot.config.tools.ClassPathScanner$ApplicationRelativeClassLoader: void <init>(java.lang.Class)>",
    "<org.grails.core.io.support.GrailsFactoriesLoader: java.util.List loadFactoryClasses(java.lang.Class,java.lang.ClassLoader)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<org.grails.plugins.BinaryGrailsPlugin: void <init>(java.lang.Class,org.grails.plugins.BinaryGrailsPluginDescriptor,grails.core.GrailsApplication)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void initializeGrailsApplication(org.springframework.context.ApplicationContext)>",
    "<org.grails.config.PropertySourcesConfig: void <init>(java.util.Map)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void <clinit>()>",
    "<org.grails.config.PropertySourcesConfig: void mergeEnumerablePropertySource(org.springframework.core.env.EnumerablePropertySource)>",
    "<grails.plugins.DefaultGrailsPluginManager: java.lang.Class loadPluginClass(java.lang.ClassLoader,org.springframework.core.io.Resource)>",
    "<org.grails.plugins.DefaultGrailsPlugin: boolean supportsCurrentScopeAndEnvironment()>",
    "<org.grails.compiler.injection.DefaultGrailsDomainClassInjector: boolean shouldInject(java.net.URL)>",
    "<grails.boot.GrailsApp: java.lang.Object printRunStatus(org.springframework.context.ConfigurableApplicationContext)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: java.lang.String className(org.grails.io.support.Resource)>",
    "<org.grails.config.EnvironmentAwarePropertySource: java.lang.Object getProperty(java.lang.String)>",
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void autowireBeanProperties(java.lang.Object,int,boolean)>",
    "<org.grails.config.NavigableMapConfig$1: void <init>(org.grails.config.NavigableMapConfig)>",
    "<org.grails.core.cfg.MicronautGroovyPropertySourceLoader: void processInput(java.lang.String,java.io.InputStream,java.util.Map)>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.core.DefaultGrailsControllerClass: void methodStrategy(java.util.Map)>",
    "<org.grails.core.cfg.GroovyConfigPropertySourceLoader: java.util.List load(java.lang.String,org.springframework.core.io.Resource,java.util.List)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean canRegisterPlugin(grails.plugins.GrailsPlugin)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: grails.plugins.GrailsPlugin getGrailsPlugin(java.lang.String,java.lang.Object)>",
    "<org.grails.core.AbstractGrailsClass: java.lang.String getPluginName()>",
    "<org.grails.plugins.DefaultGrailsPlugin: void evaluateOnChangeListener()>",
    "<org.grails.compiler.injection.ApplicationClassInjector: boolean shouldInject(java.net.URL)>",
    "<grails.util.GrailsUtil: void <clinit>()>",
    "<grails.util.GrailsClassUtils: org.springframework.cglib.reflect.FastClass fastClass(java.lang.Class)>",
    "<org.grails.config.yaml.YamlPropertySourceLoader: java.util.List load(java.lang.String,org.springframework.core.io.Resource,java.util.List)>",
    "<grails.util.GrailsUtil: java.lang.String getGrailsVersion()>",
    "<org.grails.core.AbstractGrailsApplication: boolean isWarDeployed()>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.grails.io.support.Resource[])>",
    "<grails.plugins.Plugin: void <init>()>",
    "<grails.dev.Support: void enableAgentIfNotPresent(java.lang.Class)>",
    "<org.grails.plugins.AbstractGrailsPlugin: org.springframework.core.io.Resource getConfigurationResource(java.lang.Class,java.lang.String)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfFileChange(java.io.File)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<grails.util.GrailsUtil: boolean isDevelopmentEnv()>",
    "<org.grails.core.io.DefaultResourceLocator: void <init>()>"
  ],
  "4.0.0.RC2": [
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void <init>()>",
    "<org.grails.plugins.DefaultGrailsPlugin$1: java.lang.Object call(java.lang.Object)>",
    "<org.grails.spring.context.support.PluginAwareResourceBundleMessageSource: void afterPropertiesSet()>",
    "<org.grails.config.EnvironmentAwarePropertySource: void initialize()>",
    "<org.grails.compiler.injection.ArtefactTypeAstTransformation: void performInjection(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.ast.ClassNode,java.util.Collection)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfClassChange(java.io.File,java.lang.Class)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void onApplicationEvent(org.springframework.context.event.ApplicationContextEvent)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean isDependentOn(grails.plugins.GrailsPlugin,grails.plugins.GrailsPlugin)>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.springframework.core.io.Resource[])>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: org.grails.io.support.Resource resource(java.lang.Object)>",
    "<org.grails.core.support.internal.tools.ClassRelativeClassLoader: java.net.URL[] createClassLoaderUrls(java.lang.Class)>",
    "<org.grails.config.NavigableMapConfig: grails.config.Config merge(java.util.Map)>",
    "<org.grails.core.AbstractGrailsApplication: void <init>()>",
    "<org.grails.compiler.injection.GrailsASTUtils: java.net.URL getSourceUrl(org.codehaus.groovy.control.SourceUnit)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: void <init>(java.io.File,org.grails.io.support.ResourceLoader)>",
    "<org.grails.config.yaml.YamlPropertySourceLoader: void lambda$load$2(java.util.List,org.grails.config.NavigableMap,java.util.Map)>",
    "<grails.boot.GrailsApp: org.springframework.context.ConfigurableApplicationContext run(java.lang.String[])>",
    "<grails.boot.GrailsApp: void configureEnvironment(org.springframework.core.env.ConfigurableEnvironment,java.lang.String[])>",
    "<org.grails.compiler.injection.GlobalGrailsClassInjectorTransformation: void visit(org.codehaus.groovy.ast.ASTNode[],org.codehaus.groovy.control.SourceUnit)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: groovy.util.ConfigSlurper getConfigSlurper(grails.core.GrailsApplication)>",
    "<org.grails.compiler.injection.GrailsAwareInjectionOperation: void call(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.classgen.GeneratorContext,org.codehaus.groovy.ast.ClassNode)>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<grails.boot.config.tools.ClassPathScanner$ApplicationRelativeClassLoader: void <init>(java.lang.Class)>",
    "<org.grails.core.io.support.GrailsFactoriesLoader: java.util.List loadFactoryClasses(java.lang.Class,java.lang.ClassLoader)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<grails.plugins.DefaultGrailsPluginManager: void checkPluginCompatibility(grails.plugins.GrailsPlugin)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: void <clinit>()>",
    "<org.grails.plugins.BinaryGrailsPlugin: void <init>(java.lang.Class,org.grails.plugins.BinaryGrailsPluginDescriptor,grails.core.GrailsApplication)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void initializeGrailsApplication(org.springframework.context.ApplicationContext)>",
    "<org.grails.config.PropertySourcesConfig: void <init>(java.util.Map)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void <clinit>()>",
    "<org.grails.config.PropertySourcesConfig: void mergeEnumerablePropertySource(org.springframework.core.env.EnumerablePropertySource)>",
    "<grails.plugins.DefaultGrailsPluginManager: java.lang.Class loadPluginClass(java.lang.ClassLoader,org.springframework.core.io.Resource)>",
    "<org.grails.plugins.DefaultGrailsPlugin: boolean supportsCurrentScopeAndEnvironment()>",
    "<org.grails.compiler.injection.DefaultGrailsDomainClassInjector: boolean shouldInject(java.net.URL)>",
    "<grails.boot.GrailsApp: java.lang.Object printRunStatus(org.springframework.context.ConfigurableApplicationContext)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: java.lang.String className(org.grails.io.support.Resource)>",
    "<org.grails.config.EnvironmentAwarePropertySource: java.lang.Object getProperty(java.lang.String)>",
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void autowireBeanProperties(java.lang.Object,int,boolean)>",
    "<org.grails.config.NavigableMapConfig$1: void <init>(org.grails.config.NavigableMapConfig)>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.core.DefaultGrailsControllerClass: void methodStrategy(java.util.Map)>",
    "<org.grails.core.cfg.GroovyConfigPropertySourceLoader: java.util.List load(java.lang.String,org.springframework.core.io.Resource,java.util.List)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean canRegisterPlugin(grails.plugins.GrailsPlugin)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: grails.plugins.GrailsPlugin getGrailsPlugin(java.lang.String,java.lang.Object)>",
    "<org.grails.core.AbstractGrailsClass: java.lang.String getPluginName()>",
    "<org.grails.plugins.DefaultGrailsPlugin: void evaluateOnChangeListener()>",
    "<org.grails.compiler.injection.ApplicationClassInjector: boolean shouldInject(java.net.URL)>",
    "<grails.util.GrailsUtil: void <clinit>()>",
    "<grails.util.GrailsClassUtils: org.springframework.cglib.reflect.FastClass fastClass(java.lang.Class)>",
    "<org.grails.config.yaml.YamlPropertySourceLoader: java.util.List load(java.lang.String,org.springframework.core.io.Resource,java.util.List)>",
    "<grails.util.GrailsUtil: java.lang.String getGrailsVersion()>",
    "<org.grails.core.AbstractGrailsApplication: boolean isWarDeployed()>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.grails.io.support.Resource[])>",
    "<grails.plugins.Plugin: void <init>()>",
    "<grails.dev.Support: void enableAgentIfNotPresent(java.lang.Class)>",
    "<org.grails.plugins.AbstractGrailsPlugin: org.springframework.core.io.Resource getConfigurationResource(java.lang.Class,java.lang.String)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfFileChange(java.io.File)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<grails.util.GrailsUtil: boolean isDevelopmentEnv()>",
    "<org.grails.core.io.DefaultResourceLocator: void <init>()>"
  ],
  "4.0.0": [
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void <init>()>",
    "<org.grails.plugins.DefaultGrailsPlugin$1: java.lang.Object call(java.lang.Object)>",
    "<org.grails.spring.context.support.PluginAwareResourceBundleMessageSource: void afterPropertiesSet()>",
    "<org.grails.config.EnvironmentAwarePropertySource: void initialize()>",
    "<org.grails.compiler.injection.ArtefactTypeAstTransformation: void performInjection(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.ast.ClassNode,java.util.Collection)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfClassChange(java.io.File,java.lang.Class)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void onApplicationEvent(org.springframework.context.event.ApplicationContextEvent)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean isDependentOn(grails.plugins.GrailsPlugin,grails.plugins.GrailsPlugin)>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.springframework.core.io.Resource[])>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: org.grails.io.support.Resource resource(java.lang.Object)>",
    "<org.grails.core.support.internal.tools.ClassRelativeClassLoader: java.net.URL[] createClassLoaderUrls(java.lang.Class)>",
    "<org.grails.config.NavigableMapConfig: grails.config.Config merge(java.util.Map)>",
    "<org.grails.core.AbstractGrailsApplication: void <init>()>",
    "<org.grails.compiler.injection.GrailsASTUtils: java.net.URL getSourceUrl(org.codehaus.groovy.control.SourceUnit)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: void <init>(java.io.File,org.grails.io.support.ResourceLoader)>",
    "<org.grails.config.yaml.YamlPropertySourceLoader: void lambda$load$2(java.util.List,org.grails.config.NavigableMap,java.util.Map)>",
    "<grails.boot.GrailsApp: org.springframework.context.ConfigurableApplicationContext run(java.lang.String[])>",
    "<grails.boot.GrailsApp: void configureEnvironment(org.springframework.core.env.ConfigurableEnvironment,java.lang.String[])>",
    "<org.grails.compiler.injection.GlobalGrailsClassInjectorTransformation: void visit(org.codehaus.groovy.ast.ASTNode[],org.codehaus.groovy.control.SourceUnit)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: groovy.util.ConfigSlurper getConfigSlurper(grails.core.GrailsApplication)>",
    "<org.grails.compiler.injection.GrailsAwareInjectionOperation: void call(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.classgen.GeneratorContext,org.codehaus.groovy.ast.ClassNode)>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<grails.boot.config.tools.ClassPathScanner$ApplicationRelativeClassLoader: void <init>(java.lang.Class)>",
    "<org.grails.core.io.support.GrailsFactoriesLoader: java.util.List loadFactoryClasses(java.lang.Class,java.lang.ClassLoader)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<grails.plugins.DefaultGrailsPluginManager: void checkPluginCompatibility(grails.plugins.GrailsPlugin)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: void <clinit>()>",
    "<org.grails.plugins.BinaryGrailsPlugin: void <init>(java.lang.Class,org.grails.plugins.BinaryGrailsPluginDescriptor,grails.core.GrailsApplication)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void initializeGrailsApplication(org.springframework.context.ApplicationContext)>",
    "<org.grails.config.PropertySourcesConfig: void <init>(java.util.Map)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void <clinit>()>",
    "<org.grails.config.PropertySourcesConfig: void mergeEnumerablePropertySource(org.springframework.core.env.EnumerablePropertySource)>",
    "<grails.plugins.DefaultGrailsPluginManager: java.lang.Class loadPluginClass(java.lang.ClassLoader,org.springframework.core.io.Resource)>",
    "<org.grails.plugins.DefaultGrailsPlugin: boolean supportsCurrentScopeAndEnvironment()>",
    "<org.grails.compiler.injection.DefaultGrailsDomainClassInjector: boolean shouldInject(java.net.URL)>",
    "<grails.boot.GrailsApp: java.lang.Object printRunStatus(org.springframework.context.ConfigurableApplicationContext)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: java.lang.String className(org.grails.io.support.Resource)>",
    "<org.grails.config.EnvironmentAwarePropertySource: java.lang.Object getProperty(java.lang.String)>",
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void autowireBeanProperties(java.lang.Object,int,boolean)>",
    "<org.grails.config.NavigableMapConfig$1: void <init>(org.grails.config.NavigableMapConfig)>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.core.DefaultGrailsControllerClass: void methodStrategy(java.util.Map)>",
    "<org.grails.core.cfg.GroovyConfigPropertySourceLoader: java.util.List load(java.lang.String,org.springframework.core.io.Resource,java.util.List)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean canRegisterPlugin(grails.plugins.GrailsPlugin)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: grails.plugins.GrailsPlugin getGrailsPlugin(java.lang.String,java.lang.Object)>",
    "<org.grails.core.AbstractGrailsClass: java.lang.String getPluginName()>",
    "<org.grails.plugins.DefaultGrailsPlugin: void evaluateOnChangeListener()>",
    "<org.grails.compiler.injection.ApplicationClassInjector: boolean shouldInject(java.net.URL)>",
    "<grails.util.GrailsUtil: void <clinit>()>",
    "<grails.util.GrailsClassUtils: org.springframework.cglib.reflect.FastClass fastClass(java.lang.Class)>",
    "<org.grails.config.yaml.YamlPropertySourceLoader: java.util.List load(java.lang.String,org.springframework.core.io.Resource,java.util.List)>",
    "<grails.util.GrailsUtil: java.lang.String getGrailsVersion()>",
    "<org.grails.core.AbstractGrailsApplication: boolean isWarDeployed()>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.grails.io.support.Resource[])>",
    "<grails.plugins.Plugin: void <init>()>",
    "<grails.dev.Support: void enableAgentIfNotPresent(java.lang.Class)>",
    "<org.grails.plugins.AbstractGrailsPlugin: org.springframework.core.io.Resource getConfigurationResource(java.lang.Class,java.lang.String)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfFileChange(java.io.File)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<grails.util.GrailsUtil: boolean isDevelopmentEnv()>",
    "<org.grails.core.io.DefaultResourceLocator: void <init>()>"
  ],
  "4.0.0.RC1": [
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void <init>()>",
    "<org.grails.plugins.DefaultGrailsPlugin$1: java.lang.Object call(java.lang.Object)>",
    "<org.grails.spring.context.support.PluginAwareResourceBundleMessageSource: void afterPropertiesSet()>",
    "<org.grails.config.EnvironmentAwarePropertySource: void initialize()>",
    "<org.grails.compiler.injection.ArtefactTypeAstTransformation: void performInjection(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.ast.ClassNode,java.util.Collection)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfClassChange(java.io.File,java.lang.Class)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void onApplicationEvent(org.springframework.context.event.ApplicationContextEvent)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean isDependentOn(grails.plugins.GrailsPlugin,grails.plugins.GrailsPlugin)>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.springframework.core.io.Resource[])>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: org.grails.io.support.Resource resource(java.lang.Object)>",
    "<org.grails.core.support.internal.tools.ClassRelativeClassLoader: java.net.URL[] createClassLoaderUrls(java.lang.Class)>",
    "<org.grails.config.NavigableMapConfig: grails.config.Config merge(java.util.Map)>",
    "<org.grails.core.AbstractGrailsApplication: void <init>()>",
    "<org.grails.compiler.injection.GrailsASTUtils: java.net.URL getSourceUrl(org.codehaus.groovy.control.SourceUnit)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: void <init>(java.io.File,org.grails.io.support.ResourceLoader)>",
    "<org.grails.config.yaml.YamlPropertySourceLoader: void lambda$load$2(java.util.List,org.grails.config.NavigableMap,java.util.Map)>",
    "<grails.boot.GrailsApp: org.springframework.context.ConfigurableApplicationContext run(java.lang.String[])>",
    "<grails.boot.GrailsApp: void configureEnvironment(org.springframework.core.env.ConfigurableEnvironment,java.lang.String[])>",
    "<org.grails.compiler.injection.GlobalGrailsClassInjectorTransformation: void visit(org.codehaus.groovy.ast.ASTNode[],org.codehaus.groovy.control.SourceUnit)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: groovy.util.ConfigSlurper getConfigSlurper(grails.core.GrailsApplication)>",
    "<org.grails.compiler.injection.GrailsAwareInjectionOperation: void call(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.classgen.GeneratorContext,org.codehaus.groovy.ast.ClassNode)>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<grails.boot.config.tools.ClassPathScanner$ApplicationRelativeClassLoader: void <init>(java.lang.Class)>",
    "<org.grails.core.io.support.GrailsFactoriesLoader: java.util.List loadFactoryClasses(java.lang.Class,java.lang.ClassLoader)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<grails.plugins.DefaultGrailsPluginManager: void checkPluginCompatibility(grails.plugins.GrailsPlugin)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: void <clinit>()>",
    "<org.grails.plugins.BinaryGrailsPlugin: void <init>(java.lang.Class,org.grails.plugins.BinaryGrailsPluginDescriptor,grails.core.GrailsApplication)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void initializeGrailsApplication(org.springframework.context.ApplicationContext)>",
    "<org.grails.config.PropertySourcesConfig: void <init>(java.util.Map)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void <clinit>()>",
    "<org.grails.config.PropertySourcesConfig: void mergeEnumerablePropertySource(org.springframework.core.env.EnumerablePropertySource)>",
    "<grails.plugins.DefaultGrailsPluginManager: java.lang.Class loadPluginClass(java.lang.ClassLoader,org.springframework.core.io.Resource)>",
    "<org.grails.plugins.DefaultGrailsPlugin: boolean supportsCurrentScopeAndEnvironment()>",
    "<org.grails.compiler.injection.DefaultGrailsDomainClassInjector: boolean shouldInject(java.net.URL)>",
    "<grails.boot.GrailsApp: java.lang.Object printRunStatus(org.springframework.context.ConfigurableApplicationContext)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: java.lang.String className(org.grails.io.support.Resource)>",
    "<org.grails.config.EnvironmentAwarePropertySource: java.lang.Object getProperty(java.lang.String)>",
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void autowireBeanProperties(java.lang.Object,int,boolean)>",
    "<org.grails.config.NavigableMapConfig$1: void <init>(org.grails.config.NavigableMapConfig)>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.core.DefaultGrailsControllerClass: void methodStrategy(java.util.Map)>",
    "<org.grails.core.cfg.GroovyConfigPropertySourceLoader: java.util.List load(java.lang.String,org.springframework.core.io.Resource,java.util.List)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean canRegisterPlugin(grails.plugins.GrailsPlugin)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: grails.plugins.GrailsPlugin getGrailsPlugin(java.lang.String,java.lang.Object)>",
    "<org.grails.core.AbstractGrailsClass: java.lang.String getPluginName()>",
    "<org.grails.plugins.DefaultGrailsPlugin: void evaluateOnChangeListener()>",
    "<org.grails.compiler.injection.ApplicationClassInjector: boolean shouldInject(java.net.URL)>",
    "<grails.util.GrailsUtil: void <clinit>()>",
    "<grails.util.GrailsClassUtils: org.springframework.cglib.reflect.FastClass fastClass(java.lang.Class)>",
    "<org.grails.config.yaml.YamlPropertySourceLoader: java.util.List load(java.lang.String,org.springframework.core.io.Resource,java.util.List)>",
    "<grails.util.GrailsUtil: java.lang.String getGrailsVersion()>",
    "<org.grails.core.AbstractGrailsApplication: boolean isWarDeployed()>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.grails.io.support.Resource[])>",
    "<grails.plugins.Plugin: void <init>()>",
    "<grails.dev.Support: void enableAgentIfNotPresent(java.lang.Class)>",
    "<org.grails.plugins.AbstractGrailsPlugin: org.springframework.core.io.Resource getConfigurationResource(java.lang.Class,java.lang.String)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfFileChange(java.io.File)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<grails.util.GrailsUtil: boolean isDevelopmentEnv()>",
    "<org.grails.core.io.DefaultResourceLocator: void <init>()>"
  ],
  "4.0.1": [
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void <init>()>",
    "<org.grails.plugins.DefaultGrailsPlugin$1: java.lang.Object call(java.lang.Object)>",
    "<org.grails.spring.context.support.PluginAwareResourceBundleMessageSource: void afterPropertiesSet()>",
    "<org.grails.config.EnvironmentAwarePropertySource: void initialize()>",
    "<org.grails.compiler.injection.ArtefactTypeAstTransformation: void performInjection(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.ast.ClassNode,java.util.Collection)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfClassChange(java.io.File,java.lang.Class)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void onApplicationEvent(org.springframework.context.event.ApplicationContextEvent)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean isDependentOn(grails.plugins.GrailsPlugin,grails.plugins.GrailsPlugin)>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.springframework.core.io.Resource[])>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: org.grails.io.support.Resource resource(java.lang.Object)>",
    "<org.grails.core.support.internal.tools.ClassRelativeClassLoader: java.net.URL[] createClassLoaderUrls(java.lang.Class)>",
    "<org.grails.config.NavigableMapConfig: grails.config.Config merge(java.util.Map)>",
    "<org.grails.core.AbstractGrailsApplication: void <init>()>",
    "<org.grails.compiler.injection.GrailsASTUtils: java.net.URL getSourceUrl(org.codehaus.groovy.control.SourceUnit)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: void <init>(java.io.File,org.grails.io.support.ResourceLoader)>",
    "<org.grails.config.yaml.YamlPropertySourceLoader: void lambda$load$2(java.util.List,org.grails.config.NavigableMap,java.util.Map)>",
    "<grails.boot.GrailsApp: org.springframework.context.ConfigurableApplicationContext run(java.lang.String[])>",
    "<grails.boot.GrailsApp: void configureEnvironment(org.springframework.core.env.ConfigurableEnvironment,java.lang.String[])>",
    "<org.grails.compiler.injection.GlobalGrailsClassInjectorTransformation: void visit(org.codehaus.groovy.ast.ASTNode[],org.codehaus.groovy.control.SourceUnit)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: groovy.util.ConfigSlurper getConfigSlurper(grails.core.GrailsApplication)>",
    "<org.grails.compiler.injection.GrailsAwareInjectionOperation: void call(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.classgen.GeneratorContext,org.codehaus.groovy.ast.ClassNode)>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<grails.boot.config.tools.ClassPathScanner$ApplicationRelativeClassLoader: void <init>(java.lang.Class)>",
    "<org.grails.core.io.support.GrailsFactoriesLoader: java.util.List loadFactoryClasses(java.lang.Class,java.lang.ClassLoader)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<grails.plugins.DefaultGrailsPluginManager: void checkPluginCompatibility(grails.plugins.GrailsPlugin)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: void <clinit>()>",
    "<org.grails.plugins.BinaryGrailsPlugin: void <init>(java.lang.Class,org.grails.plugins.BinaryGrailsPluginDescriptor,grails.core.GrailsApplication)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void initializeGrailsApplication(org.springframework.context.ApplicationContext)>",
    "<org.grails.config.PropertySourcesConfig: void <init>(java.util.Map)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void <clinit>()>",
    "<org.grails.config.PropertySourcesConfig: void mergeEnumerablePropertySource(org.springframework.core.env.EnumerablePropertySource)>",
    "<grails.plugins.DefaultGrailsPluginManager: java.lang.Class loadPluginClass(java.lang.ClassLoader,org.springframework.core.io.Resource)>",
    "<org.grails.plugins.DefaultGrailsPlugin: boolean supportsCurrentScopeAndEnvironment()>",
    "<org.grails.compiler.injection.DefaultGrailsDomainClassInjector: boolean shouldInject(java.net.URL)>",
    "<grails.boot.GrailsApp: java.lang.Object printRunStatus(org.springframework.context.ConfigurableApplicationContext)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: java.lang.String className(org.grails.io.support.Resource)>",
    "<org.grails.config.EnvironmentAwarePropertySource: java.lang.Object getProperty(java.lang.String)>",
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void autowireBeanProperties(java.lang.Object,int,boolean)>",
    "<org.grails.config.NavigableMapConfig$1: void <init>(org.grails.config.NavigableMapConfig)>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.core.DefaultGrailsControllerClass: void methodStrategy(java.util.Map)>",
    "<org.grails.core.cfg.GroovyConfigPropertySourceLoader: java.util.List load(java.lang.String,org.springframework.core.io.Resource,java.util.List)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean canRegisterPlugin(grails.plugins.GrailsPlugin)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: grails.plugins.GrailsPlugin getGrailsPlugin(java.lang.String,java.lang.Object)>",
    "<org.grails.core.AbstractGrailsClass: java.lang.String getPluginName()>",
    "<org.grails.plugins.DefaultGrailsPlugin: void evaluateOnChangeListener()>",
    "<org.grails.compiler.injection.ApplicationClassInjector: boolean shouldInject(java.net.URL)>",
    "<grails.util.GrailsUtil: void <clinit>()>",
    "<grails.util.GrailsClassUtils: org.springframework.cglib.reflect.FastClass fastClass(java.lang.Class)>",
    "<org.grails.config.yaml.YamlPropertySourceLoader: java.util.List load(java.lang.String,org.springframework.core.io.Resource,java.util.List)>",
    "<grails.util.GrailsUtil: java.lang.String getGrailsVersion()>",
    "<org.grails.core.AbstractGrailsApplication: boolean isWarDeployed()>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.grails.io.support.Resource[])>",
    "<grails.plugins.Plugin: void <init>()>",
    "<grails.dev.Support: void enableAgentIfNotPresent(java.lang.Class)>",
    "<org.grails.plugins.AbstractGrailsPlugin: org.springframework.core.io.Resource getConfigurationResource(java.lang.Class,java.lang.String)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfFileChange(java.io.File)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<grails.util.GrailsUtil: boolean isDevelopmentEnv()>",
    "<org.grails.core.io.DefaultResourceLocator: void <init>()>"
  ],
  "3.3.16": [
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void <init>()>",
    "<org.grails.spring.context.support.PluginAwareResourceBundleMessageSource: void afterPropertiesSet()>",
    "<org.grails.config.EnvironmentAwarePropertySource: void initialize()>",
    "<org.grails.compiler.injection.ArtefactTypeAstTransformation: void performInjection(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.ast.ClassNode,java.util.Collection)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfClassChange(java.io.File,java.lang.Class)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void onApplicationEvent(org.springframework.context.event.ApplicationContextEvent)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean isDependentOn(grails.plugins.GrailsPlugin,grails.plugins.GrailsPlugin)>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.springframework.core.io.Resource[])>",
    "<org.grails.config.yaml.YamlPropertySourceLoader: org.springframework.core.env.PropertySource load(java.lang.String,org.springframework.core.io.Resource,java.lang.String,boolean,java.util.List)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: org.grails.io.support.Resource resource(java.lang.Object)>",
    "<org.grails.core.support.internal.tools.ClassRelativeClassLoader: java.net.URL[] createClassLoaderUrls(java.lang.Class)>",
    "<org.grails.config.yaml.YamlPropertySourceLoader$_load_closure2: java.lang.Object doCall(java.util.Properties,java.util.Map)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: boolean supportsCurrentBuildScope(java.lang.String)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean isCompatiblePlugin(grails.plugins.GrailsPlugin)>",
    "<org.grails.config.NavigableMapConfig: grails.config.Config merge(java.util.Map)>",
    "<org.grails.compiler.injection.GrailsASTUtils: java.net.URL getSourceUrl(org.codehaus.groovy.control.SourceUnit)>",
    "<org.grails.core.AbstractGrailsApplication: void <init>()>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: void <init>(java.io.File,org.grails.io.support.ResourceLoader)>",
    "<grails.boot.GrailsApp: org.springframework.context.ConfigurableApplicationContext run(java.lang.String[])>",
    "<org.grails.compiler.injection.GlobalGrailsClassInjectorTransformation: void visit(org.codehaus.groovy.ast.ASTNode[],org.codehaus.groovy.control.SourceUnit)>",
    "<grails.boot.GrailsApp: void configureEnvironment(org.springframework.core.env.ConfigurableEnvironment,java.lang.String[])>",
    "<org.grails.compiler.injection.GrailsAwareInjectionOperation: void call(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.classgen.GeneratorContext,org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: groovy.util.ConfigSlurper getConfigSlurper(grails.core.GrailsApplication)>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<grails.boot.config.tools.ClassPathScanner$ApplicationRelativeClassLoader: void <init>(java.lang.Class)>",
    "<org.grails.core.io.support.GrailsFactoriesLoader: java.util.List loadFactoryClasses(java.lang.Class,java.lang.ClassLoader)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: void <clinit>()>",
    "<org.grails.plugins.BinaryGrailsPlugin: void <init>(java.lang.Class,org.grails.plugins.BinaryGrailsPluginDescriptor,grails.core.GrailsApplication)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void initializeGrailsApplication(org.springframework.context.ApplicationContext)>",
    "<org.grails.plugins.CoreGrailsPlugin: void onChange(java.util.Map)>",
    "<org.grails.config.PropertySourcesConfig: void <init>(java.util.Map)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void <clinit>()>",
    "<org.grails.config.PropertySourcesConfig: void mergeEnumerablePropertySource(org.springframework.core.env.EnumerablePropertySource)>",
    "<grails.plugins.DefaultGrailsPluginManager: java.lang.Class loadPluginClass(java.lang.ClassLoader,org.springframework.core.io.Resource)>",
    "<org.grails.plugins.DefaultGrailsPlugin: boolean supportsCurrentScopeAndEnvironment()>",
    "<org.grails.core.cfg.GroovyConfigPropertySourceLoader: org.springframework.core.env.PropertySource load(java.lang.String,org.springframework.core.io.Resource,java.lang.String,java.util.List)>",
    "<org.grails.compiler.injection.DefaultGrailsDomainClassInjector: boolean shouldInject(java.net.URL)>",
    "<org.grails.plugins.DefaultGrailsPlugin$2: java.lang.Object call(java.lang.Object)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: java.lang.String className(org.grails.io.support.Resource)>",
    "<org.grails.config.EnvironmentAwarePropertySource: java.lang.Object getProperty(java.lang.String)>",
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void autowireBeanProperties(java.lang.Object,int,boolean)>",
    "<org.grails.config.NavigableMapConfig$1: void <init>(org.grails.config.NavigableMapConfig)>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.core.DefaultGrailsControllerClass: void methodStrategy(java.util.Map)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean canRegisterPlugin(grails.plugins.GrailsPlugin)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: grails.plugins.GrailsPlugin getGrailsPlugin(java.lang.String,java.lang.Object)>",
    "<org.grails.core.AbstractGrailsClass: java.lang.String getPluginName()>",
    "<org.grails.plugins.DefaultGrailsPlugin: void evaluateOnChangeListener()>",
    "<org.grails.compiler.injection.ApplicationClassInjector: boolean shouldInject(java.net.URL)>",
    "<grails.util.GrailsUtil: void <clinit>()>",
    "<grails.util.GrailsClassUtils: org.springframework.cglib.reflect.FastClass fastClass(java.lang.Class)>",
    "<grails.util.GrailsUtil: java.lang.String getGrailsVersion()>",
    "<org.grails.core.AbstractGrailsApplication: boolean isWarDeployed()>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.grails.io.support.Resource[])>",
    "<grails.plugins.Plugin: void <init>()>",
    "<grails.dev.Support: void enableAgentIfNotPresent(java.lang.Class)>",
    "<org.grails.plugins.AbstractGrailsPlugin: org.springframework.core.io.Resource getConfigurationResource(java.lang.Class,java.lang.String)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfFileChange(java.io.File)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<grails.util.GrailsUtil: boolean isDevelopmentEnv()>",
    "<org.grails.core.io.DefaultResourceLocator: void <init>()>"
  ],
  "3.3.17": [
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void <init>()>",
    "<org.grails.spring.context.support.PluginAwareResourceBundleMessageSource: void afterPropertiesSet()>",
    "<org.grails.config.EnvironmentAwarePropertySource: void initialize()>",
    "<org.grails.compiler.injection.ArtefactTypeAstTransformation: void performInjection(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.ast.ClassNode,java.util.Collection)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfClassChange(java.io.File,java.lang.Class)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void onApplicationEvent(org.springframework.context.event.ApplicationContextEvent)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean isDependentOn(grails.plugins.GrailsPlugin,grails.plugins.GrailsPlugin)>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.springframework.core.io.Resource[])>",
    "<org.grails.config.yaml.YamlPropertySourceLoader: org.springframework.core.env.PropertySource load(java.lang.String,org.springframework.core.io.Resource,java.lang.String,boolean,java.util.List)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: org.grails.io.support.Resource resource(java.lang.Object)>",
    "<org.grails.core.support.internal.tools.ClassRelativeClassLoader: java.net.URL[] createClassLoaderUrls(java.lang.Class)>",
    "<org.grails.config.yaml.YamlPropertySourceLoader$_load_closure2: java.lang.Object doCall(java.util.Properties,java.util.Map)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: boolean supportsCurrentBuildScope(java.lang.String)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean isCompatiblePlugin(grails.plugins.GrailsPlugin)>",
    "<org.grails.config.NavigableMapConfig: grails.config.Config merge(java.util.Map)>",
    "<org.grails.compiler.injection.GrailsASTUtils: java.net.URL getSourceUrl(org.codehaus.groovy.control.SourceUnit)>",
    "<org.grails.core.AbstractGrailsApplication: void <init>()>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: void <init>(java.io.File,org.grails.io.support.ResourceLoader)>",
    "<grails.boot.GrailsApp: org.springframework.context.ConfigurableApplicationContext run(java.lang.String[])>",
    "<org.grails.compiler.injection.GlobalGrailsClassInjectorTransformation: void visit(org.codehaus.groovy.ast.ASTNode[],org.codehaus.groovy.control.SourceUnit)>",
    "<grails.boot.GrailsApp: void configureEnvironment(org.springframework.core.env.ConfigurableEnvironment,java.lang.String[])>",
    "<org.grails.compiler.injection.GrailsAwareInjectionOperation: void call(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.classgen.GeneratorContext,org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: groovy.util.ConfigSlurper getConfigSlurper(grails.core.GrailsApplication)>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<grails.boot.config.tools.ClassPathScanner$ApplicationRelativeClassLoader: void <init>(java.lang.Class)>",
    "<org.grails.core.io.support.GrailsFactoriesLoader: java.util.List loadFactoryClasses(java.lang.Class,java.lang.ClassLoader)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: void <clinit>()>",
    "<org.grails.plugins.BinaryGrailsPlugin: void <init>(java.lang.Class,org.grails.plugins.BinaryGrailsPluginDescriptor,grails.core.GrailsApplication)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void initializeGrailsApplication(org.springframework.context.ApplicationContext)>",
    "<org.grails.plugins.CoreGrailsPlugin: void onChange(java.util.Map)>",
    "<org.grails.config.PropertySourcesConfig: void <init>(java.util.Map)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void <clinit>()>",
    "<org.grails.config.PropertySourcesConfig: void mergeEnumerablePropertySource(org.springframework.core.env.EnumerablePropertySource)>",
    "<grails.plugins.DefaultGrailsPluginManager: java.lang.Class loadPluginClass(java.lang.ClassLoader,org.springframework.core.io.Resource)>",
    "<org.grails.plugins.DefaultGrailsPlugin: boolean supportsCurrentScopeAndEnvironment()>",
    "<org.grails.core.cfg.GroovyConfigPropertySourceLoader: org.springframework.core.env.PropertySource load(java.lang.String,org.springframework.core.io.Resource,java.lang.String,java.util.List)>",
    "<org.grails.compiler.injection.DefaultGrailsDomainClassInjector: boolean shouldInject(java.net.URL)>",
    "<org.grails.plugins.DefaultGrailsPlugin$2: java.lang.Object call(java.lang.Object)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: java.lang.String className(org.grails.io.support.Resource)>",
    "<org.grails.config.EnvironmentAwarePropertySource: java.lang.Object getProperty(java.lang.String)>",
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void autowireBeanProperties(java.lang.Object,int,boolean)>",
    "<org.grails.config.NavigableMapConfig$1: void <init>(org.grails.config.NavigableMapConfig)>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.core.DefaultGrailsControllerClass: void methodStrategy(java.util.Map)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean canRegisterPlugin(grails.plugins.GrailsPlugin)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: grails.plugins.GrailsPlugin getGrailsPlugin(java.lang.String,java.lang.Object)>",
    "<org.grails.core.AbstractGrailsClass: java.lang.String getPluginName()>",
    "<org.grails.plugins.DefaultGrailsPlugin: void evaluateOnChangeListener()>",
    "<org.grails.compiler.injection.ApplicationClassInjector: boolean shouldInject(java.net.URL)>",
    "<grails.util.GrailsUtil: void <clinit>()>",
    "<grails.util.GrailsClassUtils: org.springframework.cglib.reflect.FastClass fastClass(java.lang.Class)>",
    "<grails.util.GrailsUtil: java.lang.String getGrailsVersion()>",
    "<org.grails.core.AbstractGrailsApplication: boolean isWarDeployed()>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.grails.io.support.Resource[])>",
    "<grails.plugins.Plugin: void <init>()>",
    "<grails.dev.Support: void enableAgentIfNotPresent(java.lang.Class)>",
    "<org.grails.plugins.AbstractGrailsPlugin: org.springframework.core.io.Resource getConfigurationResource(java.lang.Class,java.lang.String)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfFileChange(java.io.File)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<grails.util.GrailsUtil: boolean isDevelopmentEnv()>",
    "<org.grails.core.io.DefaultResourceLocator: void <init>()>"
  ],
  "3.3.18": [
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void <init>()>",
    "<org.grails.spring.context.support.PluginAwareResourceBundleMessageSource: void afterPropertiesSet()>",
    "<org.grails.config.EnvironmentAwarePropertySource: void initialize()>",
    "<org.grails.compiler.injection.ArtefactTypeAstTransformation: void performInjection(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.ast.ClassNode,java.util.Collection)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfClassChange(java.io.File,java.lang.Class)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void onApplicationEvent(org.springframework.context.event.ApplicationContextEvent)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean isDependentOn(grails.plugins.GrailsPlugin,grails.plugins.GrailsPlugin)>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.springframework.core.io.Resource[])>",
    "<org.grails.config.yaml.YamlPropertySourceLoader: org.springframework.core.env.PropertySource load(java.lang.String,org.springframework.core.io.Resource,java.lang.String,boolean,java.util.List)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: org.grails.io.support.Resource resource(java.lang.Object)>",
    "<org.grails.core.support.internal.tools.ClassRelativeClassLoader: java.net.URL[] createClassLoaderUrls(java.lang.Class)>",
    "<org.grails.config.yaml.YamlPropertySourceLoader$_load_closure2: java.lang.Object doCall(java.util.Properties,java.util.Map)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: boolean supportsCurrentBuildScope(java.lang.String)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean isCompatiblePlugin(grails.plugins.GrailsPlugin)>",
    "<org.grails.config.NavigableMapConfig: grails.config.Config merge(java.util.Map)>",
    "<org.grails.compiler.injection.GrailsASTUtils: java.net.URL getSourceUrl(org.codehaus.groovy.control.SourceUnit)>",
    "<org.grails.core.AbstractGrailsApplication: void <init>()>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: void <init>(java.io.File,org.grails.io.support.ResourceLoader)>",
    "<grails.boot.GrailsApp: org.springframework.context.ConfigurableApplicationContext run(java.lang.String[])>",
    "<org.grails.compiler.injection.GlobalGrailsClassInjectorTransformation: void visit(org.codehaus.groovy.ast.ASTNode[],org.codehaus.groovy.control.SourceUnit)>",
    "<grails.boot.GrailsApp: void configureEnvironment(org.springframework.core.env.ConfigurableEnvironment,java.lang.String[])>",
    "<org.grails.compiler.injection.GrailsAwareInjectionOperation: void call(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.classgen.GeneratorContext,org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: groovy.util.ConfigSlurper getConfigSlurper(grails.core.GrailsApplication)>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<grails.boot.config.tools.ClassPathScanner$ApplicationRelativeClassLoader: void <init>(java.lang.Class)>",
    "<org.grails.core.io.support.GrailsFactoriesLoader: java.util.List loadFactoryClasses(java.lang.Class,java.lang.ClassLoader)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: void <clinit>()>",
    "<org.grails.plugins.BinaryGrailsPlugin: void <init>(java.lang.Class,org.grails.plugins.BinaryGrailsPluginDescriptor,grails.core.GrailsApplication)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void initializeGrailsApplication(org.springframework.context.ApplicationContext)>",
    "<org.grails.plugins.CoreGrailsPlugin: void onChange(java.util.Map)>",
    "<org.grails.config.PropertySourcesConfig: void <init>(java.util.Map)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void <clinit>()>",
    "<org.grails.config.PropertySourcesConfig: void mergeEnumerablePropertySource(org.springframework.core.env.EnumerablePropertySource)>",
    "<grails.plugins.DefaultGrailsPluginManager: java.lang.Class loadPluginClass(java.lang.ClassLoader,org.springframework.core.io.Resource)>",
    "<org.grails.plugins.DefaultGrailsPlugin: boolean supportsCurrentScopeAndEnvironment()>",
    "<org.grails.core.cfg.GroovyConfigPropertySourceLoader: org.springframework.core.env.PropertySource load(java.lang.String,org.springframework.core.io.Resource,java.lang.String,java.util.List)>",
    "<org.grails.compiler.injection.DefaultGrailsDomainClassInjector: boolean shouldInject(java.net.URL)>",
    "<org.grails.plugins.DefaultGrailsPlugin$2: java.lang.Object call(java.lang.Object)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: java.lang.String className(org.grails.io.support.Resource)>",
    "<org.grails.config.EnvironmentAwarePropertySource: java.lang.Object getProperty(java.lang.String)>",
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void autowireBeanProperties(java.lang.Object,int,boolean)>",
    "<org.grails.config.NavigableMapConfig$1: void <init>(org.grails.config.NavigableMapConfig)>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.core.DefaultGrailsControllerClass: void methodStrategy(java.util.Map)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean canRegisterPlugin(grails.plugins.GrailsPlugin)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: grails.plugins.GrailsPlugin getGrailsPlugin(java.lang.String,java.lang.Object)>",
    "<org.grails.core.AbstractGrailsClass: java.lang.String getPluginName()>",
    "<org.grails.plugins.DefaultGrailsPlugin: void evaluateOnChangeListener()>",
    "<org.grails.compiler.injection.ApplicationClassInjector: boolean shouldInject(java.net.URL)>",
    "<grails.util.GrailsUtil: void <clinit>()>",
    "<grails.util.GrailsClassUtils: org.springframework.cglib.reflect.FastClass fastClass(java.lang.Class)>",
    "<grails.util.GrailsUtil: java.lang.String getGrailsVersion()>",
    "<org.grails.core.AbstractGrailsApplication: boolean isWarDeployed()>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.grails.io.support.Resource[])>",
    "<grails.plugins.Plugin: void <init>()>",
    "<grails.dev.Support: void enableAgentIfNotPresent(java.lang.Class)>",
    "<org.grails.plugins.AbstractGrailsPlugin: org.springframework.core.io.Resource getConfigurationResource(java.lang.Class,java.lang.String)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfFileChange(java.io.File)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<grails.util.GrailsUtil: boolean isDevelopmentEnv()>",
    "<org.grails.core.io.DefaultResourceLocator: void <init>()>"
  ],
  "3.3.14": [
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void <init>()>",
    "<org.grails.spring.context.support.PluginAwareResourceBundleMessageSource: void afterPropertiesSet()>",
    "<org.grails.config.EnvironmentAwarePropertySource: void initialize()>",
    "<org.grails.compiler.injection.ArtefactTypeAstTransformation: void performInjection(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.ast.ClassNode,java.util.Collection)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfClassChange(java.io.File,java.lang.Class)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void onApplicationEvent(org.springframework.context.event.ApplicationContextEvent)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean isDependentOn(grails.plugins.GrailsPlugin,grails.plugins.GrailsPlugin)>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.springframework.core.io.Resource[])>",
    "<org.grails.config.yaml.YamlPropertySourceLoader: org.springframework.core.env.PropertySource load(java.lang.String,org.springframework.core.io.Resource,java.lang.String,boolean,java.util.List)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: org.grails.io.support.Resource resource(java.lang.Object)>",
    "<org.grails.core.support.internal.tools.ClassRelativeClassLoader: java.net.URL[] createClassLoaderUrls(java.lang.Class)>",
    "<org.grails.config.yaml.YamlPropertySourceLoader$_load_closure2: java.lang.Object doCall(java.util.Properties,java.util.Map)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: boolean supportsCurrentBuildScope(java.lang.String)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean isCompatiblePlugin(grails.plugins.GrailsPlugin)>",
    "<org.grails.config.NavigableMapConfig: grails.config.Config merge(java.util.Map)>",
    "<org.grails.compiler.injection.GrailsASTUtils: java.net.URL getSourceUrl(org.codehaus.groovy.control.SourceUnit)>",
    "<org.grails.core.AbstractGrailsApplication: void <init>()>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: void <init>(java.io.File,org.grails.io.support.ResourceLoader)>",
    "<grails.boot.GrailsApp: org.springframework.context.ConfigurableApplicationContext run(java.lang.String[])>",
    "<org.grails.compiler.injection.GlobalGrailsClassInjectorTransformation: void visit(org.codehaus.groovy.ast.ASTNode[],org.codehaus.groovy.control.SourceUnit)>",
    "<grails.boot.GrailsApp: void configureEnvironment(org.springframework.core.env.ConfigurableEnvironment,java.lang.String[])>",
    "<org.grails.compiler.injection.GrailsAwareInjectionOperation: void call(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.classgen.GeneratorContext,org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: groovy.util.ConfigSlurper getConfigSlurper(grails.core.GrailsApplication)>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<grails.boot.config.tools.ClassPathScanner$ApplicationRelativeClassLoader: void <init>(java.lang.Class)>",
    "<org.grails.core.io.support.GrailsFactoriesLoader: java.util.List loadFactoryClasses(java.lang.Class,java.lang.ClassLoader)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: void <clinit>()>",
    "<org.grails.plugins.BinaryGrailsPlugin: void <init>(java.lang.Class,org.grails.plugins.BinaryGrailsPluginDescriptor,grails.core.GrailsApplication)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void initializeGrailsApplication(org.springframework.context.ApplicationContext)>",
    "<org.grails.plugins.CoreGrailsPlugin: void onChange(java.util.Map)>",
    "<org.grails.config.PropertySourcesConfig: void <init>(java.util.Map)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void <clinit>()>",
    "<org.grails.config.PropertySourcesConfig: void mergeEnumerablePropertySource(org.springframework.core.env.EnumerablePropertySource)>",
    "<grails.plugins.DefaultGrailsPluginManager: java.lang.Class loadPluginClass(java.lang.ClassLoader,org.springframework.core.io.Resource)>",
    "<org.grails.plugins.DefaultGrailsPlugin: boolean supportsCurrentScopeAndEnvironment()>",
    "<org.grails.core.cfg.GroovyConfigPropertySourceLoader: org.springframework.core.env.PropertySource load(java.lang.String,org.springframework.core.io.Resource,java.lang.String,java.util.List)>",
    "<org.grails.compiler.injection.DefaultGrailsDomainClassInjector: boolean shouldInject(java.net.URL)>",
    "<org.grails.plugins.DefaultGrailsPlugin$2: java.lang.Object call(java.lang.Object)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: java.lang.String className(org.grails.io.support.Resource)>",
    "<org.grails.config.EnvironmentAwarePropertySource: java.lang.Object getProperty(java.lang.String)>",
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void autowireBeanProperties(java.lang.Object,int,boolean)>",
    "<org.grails.config.NavigableMapConfig$1: void <init>(org.grails.config.NavigableMapConfig)>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.core.DefaultGrailsControllerClass: void methodStrategy(java.util.Map)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean canRegisterPlugin(grails.plugins.GrailsPlugin)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: grails.plugins.GrailsPlugin getGrailsPlugin(java.lang.String,java.lang.Object)>",
    "<org.grails.core.AbstractGrailsClass: java.lang.String getPluginName()>",
    "<org.grails.plugins.DefaultGrailsPlugin: void evaluateOnChangeListener()>",
    "<org.grails.compiler.injection.ApplicationClassInjector: boolean shouldInject(java.net.URL)>",
    "<grails.util.GrailsUtil: void <clinit>()>",
    "<grails.util.GrailsClassUtils: org.springframework.cglib.reflect.FastClass fastClass(java.lang.Class)>",
    "<grails.util.GrailsUtil: java.lang.String getGrailsVersion()>",
    "<org.grails.core.AbstractGrailsApplication: boolean isWarDeployed()>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.grails.io.support.Resource[])>",
    "<grails.plugins.Plugin: void <init>()>",
    "<grails.dev.Support: void enableAgentIfNotPresent(java.lang.Class)>",
    "<org.grails.plugins.AbstractGrailsPlugin: org.springframework.core.io.Resource getConfigurationResource(java.lang.Class,java.lang.String)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfFileChange(java.io.File)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<grails.util.GrailsUtil: boolean isDevelopmentEnv()>",
    "<org.grails.core.io.DefaultResourceLocator: void <init>()>"
  ],
  "3.3.15": [
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void <init>()>",
    "<org.grails.spring.context.support.PluginAwareResourceBundleMessageSource: void afterPropertiesSet()>",
    "<org.grails.config.EnvironmentAwarePropertySource: void initialize()>",
    "<org.grails.compiler.injection.ArtefactTypeAstTransformation: void performInjection(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.ast.ClassNode,java.util.Collection)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfClassChange(java.io.File,java.lang.Class)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void onApplicationEvent(org.springframework.context.event.ApplicationContextEvent)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean isDependentOn(grails.plugins.GrailsPlugin,grails.plugins.GrailsPlugin)>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.springframework.core.io.Resource[])>",
    "<org.grails.config.yaml.YamlPropertySourceLoader: org.springframework.core.env.PropertySource load(java.lang.String,org.springframework.core.io.Resource,java.lang.String,boolean,java.util.List)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: org.grails.io.support.Resource resource(java.lang.Object)>",
    "<org.grails.core.support.internal.tools.ClassRelativeClassLoader: java.net.URL[] createClassLoaderUrls(java.lang.Class)>",
    "<org.grails.config.yaml.YamlPropertySourceLoader$_load_closure2: java.lang.Object doCall(java.util.Properties,java.util.Map)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: boolean supportsCurrentBuildScope(java.lang.String)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean isCompatiblePlugin(grails.plugins.GrailsPlugin)>",
    "<org.grails.config.NavigableMapConfig: grails.config.Config merge(java.util.Map)>",
    "<org.grails.compiler.injection.GrailsASTUtils: java.net.URL getSourceUrl(org.codehaus.groovy.control.SourceUnit)>",
    "<org.grails.core.AbstractGrailsApplication: void <init>()>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: void <init>(java.io.File,org.grails.io.support.ResourceLoader)>",
    "<grails.boot.GrailsApp: org.springframework.context.ConfigurableApplicationContext run(java.lang.String[])>",
    "<org.grails.compiler.injection.GlobalGrailsClassInjectorTransformation: void visit(org.codehaus.groovy.ast.ASTNode[],org.codehaus.groovy.control.SourceUnit)>",
    "<grails.boot.GrailsApp: void configureEnvironment(org.springframework.core.env.ConfigurableEnvironment,java.lang.String[])>",
    "<org.grails.compiler.injection.GrailsAwareInjectionOperation: void call(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.classgen.GeneratorContext,org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: groovy.util.ConfigSlurper getConfigSlurper(grails.core.GrailsApplication)>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<grails.boot.config.tools.ClassPathScanner$ApplicationRelativeClassLoader: void <init>(java.lang.Class)>",
    "<org.grails.core.io.support.GrailsFactoriesLoader: java.util.List loadFactoryClasses(java.lang.Class,java.lang.ClassLoader)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: void <clinit>()>",
    "<org.grails.plugins.BinaryGrailsPlugin: void <init>(java.lang.Class,org.grails.plugins.BinaryGrailsPluginDescriptor,grails.core.GrailsApplication)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void initializeGrailsApplication(org.springframework.context.ApplicationContext)>",
    "<org.grails.plugins.CoreGrailsPlugin: void onChange(java.util.Map)>",
    "<org.grails.config.PropertySourcesConfig: void <init>(java.util.Map)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void <clinit>()>",
    "<org.grails.config.PropertySourcesConfig: void mergeEnumerablePropertySource(org.springframework.core.env.EnumerablePropertySource)>",
    "<grails.plugins.DefaultGrailsPluginManager: java.lang.Class loadPluginClass(java.lang.ClassLoader,org.springframework.core.io.Resource)>",
    "<org.grails.plugins.DefaultGrailsPlugin: boolean supportsCurrentScopeAndEnvironment()>",
    "<org.grails.core.cfg.GroovyConfigPropertySourceLoader: org.springframework.core.env.PropertySource load(java.lang.String,org.springframework.core.io.Resource,java.lang.String,java.util.List)>",
    "<org.grails.compiler.injection.DefaultGrailsDomainClassInjector: boolean shouldInject(java.net.URL)>",
    "<org.grails.plugins.DefaultGrailsPlugin$2: java.lang.Object call(java.lang.Object)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: java.lang.String className(org.grails.io.support.Resource)>",
    "<org.grails.config.EnvironmentAwarePropertySource: java.lang.Object getProperty(java.lang.String)>",
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void autowireBeanProperties(java.lang.Object,int,boolean)>",
    "<org.grails.config.NavigableMapConfig$1: void <init>(org.grails.config.NavigableMapConfig)>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.core.DefaultGrailsControllerClass: void methodStrategy(java.util.Map)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean canRegisterPlugin(grails.plugins.GrailsPlugin)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: grails.plugins.GrailsPlugin getGrailsPlugin(java.lang.String,java.lang.Object)>",
    "<org.grails.core.AbstractGrailsClass: java.lang.String getPluginName()>",
    "<org.grails.plugins.DefaultGrailsPlugin: void evaluateOnChangeListener()>",
    "<org.grails.compiler.injection.ApplicationClassInjector: boolean shouldInject(java.net.URL)>",
    "<grails.util.GrailsUtil: void <clinit>()>",
    "<grails.util.GrailsClassUtils: org.springframework.cglib.reflect.FastClass fastClass(java.lang.Class)>",
    "<grails.util.GrailsUtil: java.lang.String getGrailsVersion()>",
    "<org.grails.core.AbstractGrailsApplication: boolean isWarDeployed()>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.grails.io.support.Resource[])>",
    "<grails.plugins.Plugin: void <init>()>",
    "<grails.dev.Support: void enableAgentIfNotPresent(java.lang.Class)>",
    "<org.grails.plugins.AbstractGrailsPlugin: org.springframework.core.io.Resource getConfigurationResource(java.lang.Class,java.lang.String)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfFileChange(java.io.File)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<grails.util.GrailsUtil: boolean isDevelopmentEnv()>",
    "<org.grails.core.io.DefaultResourceLocator: void <init>()>"
  ],
  "3.3.13": [
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void <init>()>",
    "<org.grails.spring.context.support.PluginAwareResourceBundleMessageSource: void afterPropertiesSet()>",
    "<org.grails.config.EnvironmentAwarePropertySource: void initialize()>",
    "<org.grails.compiler.injection.ArtefactTypeAstTransformation: void performInjection(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.ast.ClassNode,java.util.Collection)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfClassChange(java.io.File,java.lang.Class)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void onApplicationEvent(org.springframework.context.event.ApplicationContextEvent)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean isDependentOn(grails.plugins.GrailsPlugin,grails.plugins.GrailsPlugin)>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.springframework.core.io.Resource[])>",
    "<org.grails.config.yaml.YamlPropertySourceLoader: org.springframework.core.env.PropertySource load(java.lang.String,org.springframework.core.io.Resource,java.lang.String,boolean,java.util.List)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: org.grails.io.support.Resource resource(java.lang.Object)>",
    "<org.grails.core.support.internal.tools.ClassRelativeClassLoader: java.net.URL[] createClassLoaderUrls(java.lang.Class)>",
    "<org.grails.config.yaml.YamlPropertySourceLoader$_load_closure2: java.lang.Object doCall(java.util.Properties,java.util.Map)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: boolean supportsCurrentBuildScope(java.lang.String)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean isCompatiblePlugin(grails.plugins.GrailsPlugin)>",
    "<org.grails.config.NavigableMapConfig: grails.config.Config merge(java.util.Map)>",
    "<org.grails.compiler.injection.GrailsASTUtils: java.net.URL getSourceUrl(org.codehaus.groovy.control.SourceUnit)>",
    "<org.grails.core.AbstractGrailsApplication: void <init>()>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: void <init>(java.io.File,org.grails.io.support.ResourceLoader)>",
    "<grails.boot.GrailsApp: org.springframework.context.ConfigurableApplicationContext run(java.lang.String[])>",
    "<org.grails.compiler.injection.GlobalGrailsClassInjectorTransformation: void visit(org.codehaus.groovy.ast.ASTNode[],org.codehaus.groovy.control.SourceUnit)>",
    "<grails.boot.GrailsApp: void configureEnvironment(org.springframework.core.env.ConfigurableEnvironment,java.lang.String[])>",
    "<org.grails.compiler.injection.GrailsAwareInjectionOperation: void call(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.classgen.GeneratorContext,org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: groovy.util.ConfigSlurper getConfigSlurper(grails.core.GrailsApplication)>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<grails.boot.config.tools.ClassPathScanner$ApplicationRelativeClassLoader: void <init>(java.lang.Class)>",
    "<org.grails.core.io.support.GrailsFactoriesLoader: java.util.List loadFactoryClasses(java.lang.Class,java.lang.ClassLoader)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: void <clinit>()>",
    "<org.grails.plugins.BinaryGrailsPlugin: void <init>(java.lang.Class,org.grails.plugins.BinaryGrailsPluginDescriptor,grails.core.GrailsApplication)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void initializeGrailsApplication(org.springframework.context.ApplicationContext)>",
    "<org.grails.plugins.CoreGrailsPlugin: void onChange(java.util.Map)>",
    "<org.grails.config.PropertySourcesConfig: void <init>(java.util.Map)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void <clinit>()>",
    "<org.grails.config.PropertySourcesConfig: void mergeEnumerablePropertySource(org.springframework.core.env.EnumerablePropertySource)>",
    "<grails.plugins.DefaultGrailsPluginManager: java.lang.Class loadPluginClass(java.lang.ClassLoader,org.springframework.core.io.Resource)>",
    "<org.grails.plugins.DefaultGrailsPlugin: boolean supportsCurrentScopeAndEnvironment()>",
    "<org.grails.core.cfg.GroovyConfigPropertySourceLoader: org.springframework.core.env.PropertySource load(java.lang.String,org.springframework.core.io.Resource,java.lang.String,java.util.List)>",
    "<org.grails.compiler.injection.DefaultGrailsDomainClassInjector: boolean shouldInject(java.net.URL)>",
    "<org.grails.plugins.DefaultGrailsPlugin$2: java.lang.Object call(java.lang.Object)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: java.lang.String className(org.grails.io.support.Resource)>",
    "<org.grails.config.EnvironmentAwarePropertySource: java.lang.Object getProperty(java.lang.String)>",
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void autowireBeanProperties(java.lang.Object,int,boolean)>",
    "<org.grails.config.NavigableMapConfig$1: void <init>(org.grails.config.NavigableMapConfig)>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.core.DefaultGrailsControllerClass: void methodStrategy(java.util.Map)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean canRegisterPlugin(grails.plugins.GrailsPlugin)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: grails.plugins.GrailsPlugin getGrailsPlugin(java.lang.String,java.lang.Object)>",
    "<org.grails.core.AbstractGrailsClass: java.lang.String getPluginName()>",
    "<org.grails.plugins.DefaultGrailsPlugin: void evaluateOnChangeListener()>",
    "<org.grails.compiler.injection.ApplicationClassInjector: boolean shouldInject(java.net.URL)>",
    "<grails.util.GrailsUtil: void <clinit>()>",
    "<grails.util.GrailsClassUtils: org.springframework.cglib.reflect.FastClass fastClass(java.lang.Class)>",
    "<grails.util.GrailsUtil: java.lang.String getGrailsVersion()>",
    "<org.grails.core.AbstractGrailsApplication: boolean isWarDeployed()>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.grails.io.support.Resource[])>",
    "<grails.plugins.Plugin: void <init>()>",
    "<grails.dev.Support: void enableAgentIfNotPresent(java.lang.Class)>",
    "<org.grails.plugins.AbstractGrailsPlugin: org.springframework.core.io.Resource getConfigurationResource(java.lang.Class,java.lang.String)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfFileChange(java.io.File)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<grails.util.GrailsUtil: boolean isDevelopmentEnv()>",
    "<org.grails.core.io.DefaultResourceLocator: void <init>()>"
  ],
  "3.3.10": [
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void <init>()>",
    "<org.grails.spring.context.support.PluginAwareResourceBundleMessageSource: void afterPropertiesSet()>",
    "<org.grails.config.EnvironmentAwarePropertySource: void initialize()>",
    "<org.grails.compiler.injection.ArtefactTypeAstTransformation: void performInjection(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.ast.ClassNode,java.util.Collection)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfClassChange(java.io.File,java.lang.Class)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void onApplicationEvent(org.springframework.context.event.ApplicationContextEvent)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean isDependentOn(grails.plugins.GrailsPlugin,grails.plugins.GrailsPlugin)>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.springframework.core.io.Resource[])>",
    "<org.grails.config.yaml.YamlPropertySourceLoader: org.springframework.core.env.PropertySource load(java.lang.String,org.springframework.core.io.Resource,java.lang.String,boolean,java.util.List)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: org.grails.io.support.Resource resource(java.lang.Object)>",
    "<org.grails.core.support.internal.tools.ClassRelativeClassLoader: java.net.URL[] createClassLoaderUrls(java.lang.Class)>",
    "<org.grails.config.yaml.YamlPropertySourceLoader$_load_closure2: java.lang.Object doCall(java.util.Properties,java.util.Map)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: boolean supportsCurrentBuildScope(java.lang.String)>",
    "<org.grails.config.NavigableMapConfig: grails.config.Config merge(java.util.Map)>",
    "<org.grails.compiler.injection.GrailsASTUtils: java.net.URL getSourceUrl(org.codehaus.groovy.control.SourceUnit)>",
    "<org.grails.core.AbstractGrailsApplication: void <init>()>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: void <init>(java.io.File,org.grails.io.support.ResourceLoader)>",
    "<grails.boot.GrailsApp: org.springframework.context.ConfigurableApplicationContext run(java.lang.String[])>",
    "<org.grails.compiler.injection.GlobalGrailsClassInjectorTransformation: void visit(org.codehaus.groovy.ast.ASTNode[],org.codehaus.groovy.control.SourceUnit)>",
    "<grails.boot.GrailsApp: void configureEnvironment(org.springframework.core.env.ConfigurableEnvironment,java.lang.String[])>",
    "<org.grails.compiler.injection.GrailsAwareInjectionOperation: void call(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.classgen.GeneratorContext,org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: groovy.util.ConfigSlurper getConfigSlurper(grails.core.GrailsApplication)>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<grails.boot.config.tools.ClassPathScanner$ApplicationRelativeClassLoader: void <init>(java.lang.Class)>",
    "<org.grails.core.io.support.GrailsFactoriesLoader: java.util.List loadFactoryClasses(java.lang.Class,java.lang.ClassLoader)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<grails.plugins.DefaultGrailsPluginManager: void checkPluginCompatibility(grails.plugins.GrailsPlugin)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: void <clinit>()>",
    "<org.grails.plugins.BinaryGrailsPlugin: void <init>(java.lang.Class,org.grails.plugins.BinaryGrailsPluginDescriptor,grails.core.GrailsApplication)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void initializeGrailsApplication(org.springframework.context.ApplicationContext)>",
    "<org.grails.plugins.CoreGrailsPlugin: void onChange(java.util.Map)>",
    "<org.grails.config.PropertySourcesConfig: void <init>(java.util.Map)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void <clinit>()>",
    "<org.grails.config.PropertySourcesConfig: void mergeEnumerablePropertySource(org.springframework.core.env.EnumerablePropertySource)>",
    "<grails.plugins.DefaultGrailsPluginManager: java.lang.Class loadPluginClass(java.lang.ClassLoader,org.springframework.core.io.Resource)>",
    "<org.grails.plugins.DefaultGrailsPlugin: boolean supportsCurrentScopeAndEnvironment()>",
    "<org.grails.core.cfg.GroovyConfigPropertySourceLoader: org.springframework.core.env.PropertySource load(java.lang.String,org.springframework.core.io.Resource,java.lang.String,java.util.List)>",
    "<org.grails.compiler.injection.DefaultGrailsDomainClassInjector: boolean shouldInject(java.net.URL)>",
    "<org.grails.plugins.DefaultGrailsPlugin$2: java.lang.Object call(java.lang.Object)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: java.lang.String className(org.grails.io.support.Resource)>",
    "<org.grails.config.EnvironmentAwarePropertySource: java.lang.Object getProperty(java.lang.String)>",
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void autowireBeanProperties(java.lang.Object,int,boolean)>",
    "<org.grails.config.NavigableMapConfig$1: void <init>(org.grails.config.NavigableMapConfig)>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.core.DefaultGrailsControllerClass: void methodStrategy(java.util.Map)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean canRegisterPlugin(grails.plugins.GrailsPlugin)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: grails.plugins.GrailsPlugin getGrailsPlugin(java.lang.String,java.lang.Object)>",
    "<org.grails.core.AbstractGrailsClass: java.lang.String getPluginName()>",
    "<org.grails.plugins.DefaultGrailsPlugin: void evaluateOnChangeListener()>",
    "<org.grails.compiler.injection.ApplicationClassInjector: boolean shouldInject(java.net.URL)>",
    "<grails.util.GrailsUtil: void <clinit>()>",
    "<grails.util.GrailsClassUtils: org.springframework.cglib.reflect.FastClass fastClass(java.lang.Class)>",
    "<grails.util.GrailsUtil: java.lang.String getGrailsVersion()>",
    "<org.grails.core.AbstractGrailsApplication: boolean isWarDeployed()>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.grails.io.support.Resource[])>",
    "<grails.plugins.Plugin: void <init>()>",
    "<grails.dev.Support: void enableAgentIfNotPresent(java.lang.Class)>",
    "<org.grails.plugins.AbstractGrailsPlugin: org.springframework.core.io.Resource getConfigurationResource(java.lang.Class,java.lang.String)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfFileChange(java.io.File)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<grails.util.GrailsUtil: boolean isDevelopmentEnv()>",
    "<org.grails.core.io.DefaultResourceLocator: void <init>()>"
  ],
  "3.3.3": [
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void <init>()>",
    "<org.grails.spring.context.support.PluginAwareResourceBundleMessageSource: void afterPropertiesSet()>",
    "<org.grails.config.EnvironmentAwarePropertySource: void initialize()>",
    "<org.grails.compiler.injection.ArtefactTypeAstTransformation: void performInjection(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.ast.ClassNode,java.util.Collection)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfClassChange(java.io.File,java.lang.Class)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void onApplicationEvent(org.springframework.context.event.ApplicationContextEvent)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean isDependentOn(grails.plugins.GrailsPlugin,grails.plugins.GrailsPlugin)>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.springframework.core.io.Resource[])>",
    "<org.grails.config.yaml.YamlPropertySourceLoader: org.springframework.core.env.PropertySource load(java.lang.String,org.springframework.core.io.Resource,java.lang.String,boolean,java.util.List)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: org.grails.io.support.Resource resource(java.lang.Object)>",
    "<org.grails.core.support.internal.tools.ClassRelativeClassLoader: java.net.URL[] createClassLoaderUrls(java.lang.Class)>",
    "<org.grails.config.yaml.YamlPropertySourceLoader$_load_closure2: java.lang.Object doCall(java.util.Properties,java.util.Map)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: boolean supportsCurrentBuildScope(java.lang.String)>",
    "<org.grails.config.NavigableMapConfig: grails.config.Config merge(java.util.Map)>",
    "<org.grails.compiler.injection.GrailsASTUtils: java.net.URL getSourceUrl(org.codehaus.groovy.control.SourceUnit)>",
    "<org.grails.core.AbstractGrailsApplication: void <init>()>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: void <init>(java.io.File,org.grails.io.support.ResourceLoader)>",
    "<grails.boot.GrailsApp: org.springframework.context.ConfigurableApplicationContext run(java.lang.String[])>",
    "<org.grails.compiler.injection.GlobalGrailsClassInjectorTransformation: void visit(org.codehaus.groovy.ast.ASTNode[],org.codehaus.groovy.control.SourceUnit)>",
    "<grails.boot.GrailsApp: void configureEnvironment(org.springframework.core.env.ConfigurableEnvironment,java.lang.String[])>",
    "<org.grails.compiler.injection.GrailsAwareInjectionOperation: void call(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.classgen.GeneratorContext,org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: groovy.util.ConfigSlurper getConfigSlurper(grails.core.GrailsApplication)>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<grails.boot.config.tools.ClassPathScanner$ApplicationRelativeClassLoader: void <init>(java.lang.Class)>",
    "<org.grails.core.io.support.GrailsFactoriesLoader: java.util.List loadFactoryClasses(java.lang.Class,java.lang.ClassLoader)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: void <clinit>()>",
    "<org.grails.plugins.BinaryGrailsPlugin: void <init>(java.lang.Class,org.grails.plugins.BinaryGrailsPluginDescriptor,grails.core.GrailsApplication)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void initializeGrailsApplication(org.springframework.context.ApplicationContext)>",
    "<org.grails.plugins.CoreGrailsPlugin: void onChange(java.util.Map)>",
    "<org.grails.config.PropertySourcesConfig: void <init>(java.util.Map)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void <clinit>()>",
    "<org.grails.config.PropertySourcesConfig: void mergeEnumerablePropertySource(org.springframework.core.env.EnumerablePropertySource)>",
    "<grails.plugins.DefaultGrailsPluginManager: java.lang.Class loadPluginClass(java.lang.ClassLoader,org.springframework.core.io.Resource)>",
    "<org.grails.plugins.DefaultGrailsPlugin: boolean supportsCurrentScopeAndEnvironment()>",
    "<org.grails.core.cfg.GroovyConfigPropertySourceLoader: org.springframework.core.env.PropertySource load(java.lang.String,org.springframework.core.io.Resource,java.lang.String,java.util.List)>",
    "<org.grails.compiler.injection.DefaultGrailsDomainClassInjector: boolean shouldInject(java.net.URL)>",
    "<org.grails.plugins.DefaultGrailsPlugin$2: java.lang.Object call(java.lang.Object)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: java.lang.String className(org.grails.io.support.Resource)>",
    "<org.grails.config.EnvironmentAwarePropertySource: java.lang.Object getProperty(java.lang.String)>",
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void autowireBeanProperties(java.lang.Object,int,boolean)>",
    "<org.grails.config.NavigableMapConfig$1: void <init>(org.grails.config.NavigableMapConfig)>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.core.DefaultGrailsControllerClass: void methodStrategy(java.util.Map)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean canRegisterPlugin(grails.plugins.GrailsPlugin)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: grails.plugins.GrailsPlugin getGrailsPlugin(java.lang.String,java.lang.Object)>",
    "<org.grails.core.AbstractGrailsClass: java.lang.String getPluginName()>",
    "<org.grails.plugins.DefaultGrailsPlugin: void evaluateOnChangeListener()>",
    "<org.grails.compiler.injection.ApplicationClassInjector: boolean shouldInject(java.net.URL)>",
    "<grails.util.GrailsUtil: void <clinit>()>",
    "<grails.util.GrailsClassUtils: org.springframework.cglib.reflect.FastClass fastClass(java.lang.Class)>",
    "<grails.util.GrailsUtil: java.lang.String getGrailsVersion()>",
    "<org.grails.core.AbstractGrailsApplication: boolean isWarDeployed()>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.grails.io.support.Resource[])>",
    "<grails.plugins.Plugin: void <init>()>",
    "<grails.dev.Support: void enableAgentIfNotPresent(java.lang.Class)>",
    "<org.grails.plugins.AbstractGrailsPlugin: org.springframework.core.io.Resource getConfigurationResource(java.lang.Class,java.lang.String)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfFileChange(java.io.File)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<grails.util.GrailsUtil: boolean isDevelopmentEnv()>",
    "<org.grails.core.io.DefaultResourceLocator: void <init>()>"
  ],
  "3.3.2": [
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void <init>()>",
    "<org.grails.spring.context.support.PluginAwareResourceBundleMessageSource: void afterPropertiesSet()>",
    "<org.grails.config.EnvironmentAwarePropertySource: void initialize()>",
    "<org.grails.compiler.injection.ArtefactTypeAstTransformation: void performInjection(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.ast.ClassNode,java.util.Collection)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfClassChange(java.io.File,java.lang.Class)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void onApplicationEvent(org.springframework.context.event.ApplicationContextEvent)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean isDependentOn(grails.plugins.GrailsPlugin,grails.plugins.GrailsPlugin)>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.springframework.core.io.Resource[])>",
    "<org.grails.config.yaml.YamlPropertySourceLoader: org.springframework.core.env.PropertySource load(java.lang.String,org.springframework.core.io.Resource,java.lang.String,boolean,java.util.List)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: org.grails.io.support.Resource resource(java.lang.Object)>",
    "<org.grails.core.support.internal.tools.ClassRelativeClassLoader: java.net.URL[] createClassLoaderUrls(java.lang.Class)>",
    "<org.grails.config.yaml.YamlPropertySourceLoader$_load_closure2: java.lang.Object doCall(java.util.Properties,java.util.Map)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: boolean supportsCurrentBuildScope(java.lang.String)>",
    "<org.grails.config.NavigableMapConfig: grails.config.Config merge(java.util.Map)>",
    "<org.grails.compiler.injection.GrailsASTUtils: java.net.URL getSourceUrl(org.codehaus.groovy.control.SourceUnit)>",
    "<org.grails.core.AbstractGrailsApplication: void <init>()>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: void <init>(java.io.File,org.grails.io.support.ResourceLoader)>",
    "<grails.boot.GrailsApp: org.springframework.context.ConfigurableApplicationContext run(java.lang.String[])>",
    "<org.grails.compiler.injection.GlobalGrailsClassInjectorTransformation: void visit(org.codehaus.groovy.ast.ASTNode[],org.codehaus.groovy.control.SourceUnit)>",
    "<grails.boot.GrailsApp: void configureEnvironment(org.springframework.core.env.ConfigurableEnvironment,java.lang.String[])>",
    "<org.grails.compiler.injection.GrailsAwareInjectionOperation: void call(org.codehaus.groovy.control.SourceUnit,org.codehaus.groovy.classgen.GeneratorContext,org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: groovy.util.ConfigSlurper getConfigSlurper(grails.core.GrailsApplication)>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<grails.boot.config.tools.ClassPathScanner$ApplicationRelativeClassLoader: void <init>(java.lang.Class)>",
    "<org.grails.core.io.support.GrailsFactoriesLoader: java.util.List loadFactoryClasses(java.lang.Class,java.lang.ClassLoader)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefactResource(org.grails.io.support.Resource)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: void <clinit>()>",
    "<org.grails.plugins.BinaryGrailsPlugin: void <init>(java.lang.Class,org.grails.plugins.BinaryGrailsPluginDescriptor,grails.core.GrailsApplication)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void initializeGrailsApplication(org.springframework.context.ApplicationContext)>",
    "<org.grails.plugins.CoreGrailsPlugin: void onChange(java.util.Map)>",
    "<org.grails.config.PropertySourcesConfig: void <init>(java.util.Map)>",
    "<grails.boot.config.GrailsApplicationPostProcessor: void <clinit>()>",
    "<org.grails.config.PropertySourcesConfig: void mergeEnumerablePropertySource(org.springframework.core.env.EnumerablePropertySource)>",
    "<grails.plugins.DefaultGrailsPluginManager: java.lang.Class loadPluginClass(java.lang.ClassLoader,org.springframework.core.io.Resource)>",
    "<org.grails.plugins.DefaultGrailsPlugin: boolean supportsCurrentScopeAndEnvironment()>",
    "<org.grails.core.cfg.GroovyConfigPropertySourceLoader: org.springframework.core.env.PropertySource load(java.lang.String,org.springframework.core.io.Resource,java.lang.String,java.util.List)>",
    "<org.grails.compiler.injection.DefaultGrailsDomainClassInjector: boolean shouldInject(java.net.URL)>",
    "<org.grails.plugins.DefaultGrailsPlugin$2: java.lang.Object call(java.lang.Object)>",
    "<grails.dev.commands.io.FileSystemInteractionImpl: java.lang.String className(org.grails.io.support.Resource)>",
    "<org.grails.config.EnvironmentAwarePropertySource: java.lang.Object getProperty(java.lang.String)>",
    "<org.grails.spring.beans.factory.OptimizedAutowireCapableBeanFactory: void autowireBeanProperties(java.lang.Object,int,boolean)>",
    "<org.grails.config.NavigableMapConfig$1: void <init>(org.grails.config.NavigableMapConfig)>",
    "<grails.core.ArtefactHandlerAdapter: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.core.DefaultGrailsControllerClass: void methodStrategy(java.util.Map)>",
    "<grails.plugins.DefaultGrailsPluginManager: boolean canRegisterPlugin(grails.plugins.GrailsPlugin)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: grails.plugins.GrailsPlugin getGrailsPlugin(java.lang.String,java.lang.Object)>",
    "<org.grails.core.AbstractGrailsClass: java.lang.String getPluginName()>",
    "<org.grails.plugins.DefaultGrailsPlugin: void evaluateOnChangeListener()>",
    "<org.grails.compiler.injection.ApplicationClassInjector: boolean shouldInject(java.net.URL)>",
    "<grails.util.GrailsUtil: void <clinit>()>",
    "<grails.util.GrailsClassUtils: org.springframework.cglib.reflect.FastClass fastClass(java.lang.Class)>",
    "<grails.util.GrailsUtil: java.lang.String getGrailsVersion()>",
    "<org.grails.core.AbstractGrailsApplication: boolean isWarDeployed()>",
    "<grails.core.DefaultGrailsApplication: void <init>(org.grails.io.support.Resource[])>",
    "<grails.plugins.Plugin: void <init>()>",
    "<grails.dev.Support: void enableAgentIfNotPresent(java.lang.Class)>",
    "<org.grails.plugins.AbstractGrailsPlugin: org.springframework.core.io.Resource getConfigurationResource(java.lang.Class,java.lang.String)>",
    "<org.grails.plugins.AbstractGrailsPluginManager: void informOfFileChange(java.io.File)>",
    "<org.grails.core.artefact.DomainClassArtefactHandler: boolean isArtefact(org.codehaus.groovy.ast.ClassNode)>",
    "<grails.util.GrailsUtil: boolean isDevelopmentEnv()>",
    "<org.grails.core.io.DefaultResourceLocator: void <init>()>"
  ]
}