{
  "7.0.0.RC1": [
    "<org.grails.datastore.mapping.reflect.AstUtils$1: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean memoizedMethodPriv$isDomainClassClassNode(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: boolean isSharedConnection()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: void <init>()>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.core.grailsversion.Snapshot: int compareTo(org.grails.datastore.mapping.core.grailsversion.Snapshot)>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.expr.ClosureExpression makeClosureAwareOfArguments(org.codehaus.groovy.ast.MethodNode,org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.model.types.conversion.IntegerToShortConverter: java.lang.Short convert(java.lang.Integer)>",
    "<org.grails.datastore.mapping.proxy.GroovyObjectMethodHandler: java.lang.Object getPropertyAfterResolving(java.lang.Object,java.lang.String)>",
    "<org.grails.datastore.mapping.multitenancy.resolvers.SystemPropertyTenantResolver: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void trackChanges(org.grails.datastore.mapping.dirty.checking.DirtyCheckable)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: void setTenantResolver(org.grails.datastore.mapping.multitenancy.TenantResolver)>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.grailsversion.Snapshot: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.utils.ConfigUtils: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.multitenancy.exceptions.TenantNotFoundException: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingCollection$_hasChangedElements_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.InMemoryConnectionSources: org.grails.datastore.mapping.core.connections.ConnectionSource getConnectionSource(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: java.util.List findPublicAbstractMethods(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: org.grails.datastore.mapping.core.Datastore getDatastore(org.grails.datastore.mapping.services.Service)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingCollection: boolean hasChangedElements()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.AnnotationNode cloneAnnotation(org.codehaus.groovy.ast.AnnotationNode)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.services.DefaultServiceRegistry: void initialize()>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.StaticConnectionSources: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.services.DefaultServiceRegistry: void <init>(org.grails.datastore.mapping.core.Datastore,boolean)>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources: void this$dist$set$2(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.config.ConfigurationBuilder: void <init>(org.springframework.core.env.PropertyResolver,java.lang.String,java.lang.String)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingMap: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Entity: org.grails.datastore.mapping.config.Entity connections(java.lang.String[])>",
    "<org.grails.datastore.mapping.engine.ModificationTrackingEntityAccess: void <init>(org.grails.datastore.mapping.engine.EntityAccess)>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: void <clinit>()>",
    "<org.grails.datastore.mapping.model.types.conversion.LongArrayToLongArrayConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.model.types.conversion.ByteArrayToStringConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToURLConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Entity: java.lang.Object propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.AbstractConnectionSources: java.lang.Iterable getConnectionSourceNames(org.grails.datastore.mapping.core.connections.ConnectionSourceFactory,org.springframework.core.env.PropertyResolver)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToByteArrayConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Entity: void <init>()>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode[] values()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: java.util.List findAllAbstractMethods(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.keyvalue.mapping.config.KeyValue: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Entity: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToBigDecimalConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSupport: java.util.Collection wrap(java.util.Collection,org.grails.datastore.mapping.dirty.checking.DirtyCheckable,java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingCollection$_hasChangedElements_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: java.lang.String resolveConnectionForTenantId(org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode,java.io.Serializable)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourcesInitializer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToShortConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.document.config.Collection: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Entity: org.grails.datastore.mapping.config.Property getPropertyConfig(java.lang.String)>",
    "<org.grails.datastore.mapping.keyvalue.mapping.config.Family: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Property: org.grails.datastore.mapping.config.Property clone()>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.grails.datastore.mapping.config.Entity: org.grails.datastore.mapping.config.Entity datasource(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.expr.MethodCallExpression buildGetPropertyExpression(org.codehaus.groovy.ast.expr.Expression,java.lang.String,org.codehaus.groovy.ast.ClassNode,boolean)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.ClassNode implementsInterfaceInternal(org.codehaus.groovy.ast.ClassNode[],java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.model.types.conversion.LongArrayToLongArrayConverter: java.lang.Long[] convert(long[])>",
    "<org.grails.datastore.mapping.config.Property: void setRange(groovy.lang.ObjectRange)>",
    "<org.grails.datastore.mapping.reflect.AstGenericsUtils: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode previous()>",
    "<org.grails.datastore.mapping.proxy.GroovyObjectMethodHandler: groovy.lang.MetaClass getThisMetaClass()>",
    "<org.grails.datastore.mapping.core.AbstractDatastore: void destroy()>",
    "<org.grails.datastore.mapping.config.Property: void <init>()>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils$_findAllUnimplementedAbstractMethods_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: void injectTrait(org.codehaus.groovy.ast.ClassNode,java.lang.Class)>",
    "<org.grails.datastore.mapping.config.utils.PropertyResolverMap: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.document.config.Attribute: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.DatastoreEnvironment: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.InMemoryConnectionSources: void <init>(org.grails.datastore.mapping.core.connections.ConnectionSource,org.grails.datastore.mapping.core.connections.ConnectionSourceFactory,org.springframework.core.env.PropertyResolver)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean isIterableOrArrayOfDomainClasses(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: org.codehaus.groovy.ast.AnnotationNode addAnnotationOrGetExisting(org.codehaus.groovy.ast.AnnotatedNode,org.codehaus.groovy.ast.ClassNode,java.util.Map)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode next()>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.utils.PropertyResolverMap: java.lang.String get(java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$_findAllUnimplementedAbstractMethods_closure1: org.codehaus.groovy.ast.ClassNode getClassNode()>",
    "<org.grails.datastore.mapping.core.connections.StaticConnectionSources: org.grails.datastore.mapping.core.connections.ConnectionSource getConnectionSource(java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.AbstractConnectionSources: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: void <init>(java.lang.String,int)>",
    "<org.grails.datastore.mapping.model.types.conversion.IntArrayToIntegerArrayConverter: java.lang.Integer[] convert(int[])>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.ClassNode replaceGenericsPlaceholders(org.codehaus.groovy.ast.ClassNode,java.util.Map,org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings: org.grails.datastore.mapping.core.connections.ConnectionSourceSettings clone()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void markDirty(org.grails.datastore.mapping.dirty.checking.DirtyCheckable,java.lang.String)>",
    "<org.grails.datastore.mapping.core.order.OrderedComparator: java.lang.Integer findOrder(java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode $INIT(java.lang.Object[])>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSupport: boolean areAssociationsDirty(org.grails.datastore.mapping.model.PersistentEntity,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: boolean hasAnnotation(java.util.List,org.codehaus.groovy.ast.AnnotationNode)>",
    "<org.grails.datastore.mapping.model.types.conversion.IntegerToByteConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.ClassNode findInterface(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<org.grails.datastore.mapping.config.utils.PropertyResolverMap: boolean containsKey(java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.AbstractConnectionSources: void <init>(org.grails.datastore.mapping.core.connections.ConnectionSource,org.grails.datastore.mapping.core.connections.ConnectionSourceFactory,org.springframework.core.env.PropertyResolver)>",
    "<org.grails.datastore.mapping.config.ConfigurationBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourcesInitializer: org.grails.datastore.mapping.core.connections.ConnectionSources create(org.grails.datastore.mapping.core.connections.ConnectionSourceFactory,org.springframework.core.env.PropertyResolver)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToBigIntegerConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder: org.grails.datastore.mapping.config.Entity evaluate(groovy.lang.Closure,java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.resolvers.NoTenantResolver: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstGenericsUtils: org.codehaus.groovy.ast.ClassNode resolveSingleGenericType(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.expr.MapExpression mapX(java.util.Map)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.config.Entity: org.grails.datastore.mapping.config.Property getOrInitializePropertyConfig(java.lang.String)>",
    "<org.grails.datastore.mapping.core.grailsversion.Snapshot: boolean equals(java.lang.Object)>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder: java.util.Map getProperties()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: void copyAnnotations(org.codehaus.groovy.ast.AnnotatedNode,org.codehaus.groovy.ast.AnnotatedNode,java.util.Set,java.util.Set)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: boolean hasChanged(org.grails.datastore.mapping.dirty.checking.DirtyCheckable)>",
    "<org.grails.datastore.mapping.core.connections.AbstractConnectionSources: org.grails.datastore.mapping.core.connections.ConnectionSource addConnectionSource(java.lang.String,java.util.Map)>",
    "<org.grails.datastore.mapping.services.DefaultServiceRegistry: boolean isValidInterface(java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: org.codehaus.groovy.ast.AnnotationNode findAnnotation(org.codehaus.groovy.ast.AnnotatedNode,java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$__clinit__closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils$_hasAnnotation_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils$_memoizedMethodPriv_isDomainClassClassNode_closure2: java.lang.String getClassName()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.config.Entity: org.grails.datastore.mapping.config.Entity connection(java.lang.String)>",
    "<org.grails.datastore.mapping.multitenancy.exceptions.TenantException: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean isNumberType(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.core.connections.InMemoryConnectionSources: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils$_hasAnnotation_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.grails.datastore.mapping.config.ConfigurationBuilder: void <init>(org.springframework.core.env.PropertyResolver,java.lang.String,java.lang.Object,java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.model.types.conversion.IntegerToByteConverter: java.lang.Byte convert(java.lang.Integer)>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: boolean isAtLeastImpl(org.grails.datastore.mapping.core.grailsversion.GrailsVersion,java.lang.String)>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.query.projections.ManualProjections: java.util.Collection distinct(java.util.Collection,java.lang.String)>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToLocaleConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.config.ConfigurationBuilder: void buildRecurse(java.lang.Object,java.lang.Object,java.lang.String)>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: void setDatastore(org.grails.datastore.mapping.services.Service,org.grails.datastore.mapping.core.Datastore)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSupport: void <clinit>()>",
    "<org.grails.datastore.mapping.reflect.ClassPropertyFetcher: java.lang.Class getPropertyType(java.lang.Class,java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.ClassPropertyFetcher: java.lang.Object getInstancePropertyValue(java.lang.Object,java.lang.String)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSortedSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: int compareTo(org.grails.datastore.mapping.core.grailsversion.GrailsVersion)>",
    "<org.grails.datastore.mapping.multitenancy.resolvers.FixedTenantResolver: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.Parameter[] copyParameters(org.codehaus.groovy.ast.Parameter[],java.util.Map)>",
    "<org.grails.datastore.mapping.proxy.GroovyObjectMethodHandler: void setPropertyAfterResolving(java.lang.Object,java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: org.codehaus.groovy.ast.expr.Expression transform(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSupport: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingCollection: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: java.util.List listDirtyPropertyNames(org.grails.datastore.mapping.dirty.checking.DirtyCheckable)>",
    "<org.grails.datastore.mapping.config.Entity: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToLocaleConverter: java.util.Locale convert(java.lang.String)>",
    "<org.grails.datastore.mapping.core.order.OrderedComparator: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: boolean hasAnnotation(org.codehaus.groovy.ast.ClassNode,java.lang.Class)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSupport: boolean areEmbeddedDirty(org.grails.datastore.mapping.model.PersistentEntity,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.expr.MethodCallExpression buildSetPropertyExpression(org.codehaus.groovy.ast.expr.Expression,java.lang.String,org.codehaus.groovy.ast.ClassNode,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.expr.VariableExpression varThis()>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: boolean hasJunitAnnotation(org.codehaus.groovy.ast.MethodNode)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean hasProperty(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<org.grails.datastore.mapping.model.types.conversion.DoubleToFloatConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.StaticConnectionSources: void <init>(org.grails.datastore.mapping.core.connections.ConnectionSource,java.lang.Iterable,org.springframework.core.env.PropertyResolver)>",
    "<org.grails.datastore.mapping.core.connections.AbstractConnectionSources: java.util.Set toValidConnectionSourceNames(java.util.Map)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: boolean equals(java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: boolean hasAnnotation(org.codehaus.groovy.ast.MethodNode,java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$_findAllUnimplementedAbstractMethods_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: void <init>(java.lang.String,int,java.util.LinkedHashMap)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean isDomainClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.model.types.conversion.DoubleToFloatConverter: java.lang.Float convert(java.lang.Double)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean implementsInterface(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.InMemoryConnectionSources: org.grails.datastore.mapping.core.connections.ConnectionSource addConnectionSource(java.lang.String,org.springframework.core.env.PropertyResolver)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingCollection$_hasChangedElements_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: java.util.List findAllUnimplementedAbstractMethods(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.config.Property: void setSize(groovy.lang.IntRange)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: void <init>()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean implementsInterface(org.codehaus.groovy.ast.ClassNode,java.lang.Class)>",
    "<org.grails.datastore.mapping.model.types.conversion.IntArrayToIntegerArrayConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettingsBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.utils.ConfigUtils: java.lang.Object read(java.lang.Class,java.lang.String,java.util.Map,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToTimeZoneConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: void <clinit>()>",
    "<org.grails.datastore.mapping.core.grailsversion.Snapshot: boolean isBuildSnapshot()>",
    "<org.grails.datastore.mapping.config.ConfigurationBuilder: java.util.List toHierarchy(java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$_memoizedMethodPriv_isDomainClassClassNode_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.proxy.GroovyObjectMethodHandler: java.lang.Object invokeMethodAfterResolving(java.lang.Object,java.lang.String,java.lang.Object[])>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources: java.lang.Object this$dist$invoke$2(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.model.types.conversion.IntegerToShortConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.services.DefaultServiceRegistry: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.engine.ModificationTrackingEntityAccess: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToCurrencyConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.ClassNode getPropertyType(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<org.grails.datastore.mapping.core.order.OrderedComparator: int compare(java.lang.Object,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.services.DefaultServiceRegistry: java.lang.Object getService(java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: void findAbstractMethodsInternal(org.codehaus.groovy.ast.ClassNode,java.util.List,boolean)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingList: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils$_hasAnnotation_closure1: org.codehaus.groovy.ast.AnnotationNode getAnnotationNode()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void markDirty(org.grails.datastore.mapping.dirty.checking.DirtyCheckable)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.Parameter[] copyParameters(java.util.Map,org.codehaus.groovy.ast.Parameter[],java.util.List)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.config.Property: java.lang.Boolean isLazy()>",
    "<org.grails.datastore.mapping.reflect.ClassPropertyFetcher: java.lang.Object getStaticPropertyValue(java.lang.Class,java.lang.String,java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: java.lang.Object getOriginalValue(org.grails.datastore.mapping.dirty.checking.DirtyCheckable,java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$__clinit__closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: org.grails.datastore.mapping.core.grailsversion.GrailsVersion getCurrent()>",
    "<org.grails.datastore.mapping.multitenancy.resolvers.SystemPropertyTenantResolver: java.io.Serializable resolveTenantIdentifier()>",
    "<org.grails.datastore.mapping.core.DatastoreUtils: org.springframework.core.env.PropertyResolver createPropertyResolvers(java.util.Collection)>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources: java.lang.Object this$dist$get$2(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: boolean hasAnnotation(org.codehaus.groovy.ast.MethodNode,java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.services.ServiceNotFoundException: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder: void <init>(org.grails.datastore.mapping.config.Entity,java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: org.codehaus.groovy.ast.AnnotationNode findAnnotation(org.codehaus.groovy.ast.AnnotatedNode,java.util.List)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: org.grails.datastore.mapping.multitenancy.TenantResolver getTenantResolver()>",
    "<org.grails.datastore.mapping.engine.event.DatastoreInitializedEvent: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: void <clinit>()>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: void <init>(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean isSubclassOf(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void markDirty(org.grails.datastore.mapping.dirty.checking.DirtyCheckable,java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void markDirty(org.grails.datastore.mapping.dirty.checking.DirtyCheckable,java.lang.String,java.lang.Object,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.validation.ValidationException: java.lang.RuntimeException newInstance(java.lang.String,org.springframework.validation.Errors)>",
    "<org.grails.datastore.mapping.config.Entity: org.grails.datastore.mapping.config.Property cloneGlobalConstraint()>",
    "<org.grails.datastore.mapping.reflect.MetaClassUtils: groovy.lang.ExpandoMetaClass getExpandoMetaClass(java.lang.Class)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Property: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils$_memoizedMethodPriv_isDomainClassClassNode_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: boolean hasChanged(org.grails.datastore.mapping.dirty.checking.DirtyCheckable,java.lang.String)>",
    "<org.grails.datastore.mapping.config.ConfigurationBuilder: void <clinit>()>",
    "<org.grails.datastore.mapping.core.DatastoreUtils: org.springframework.core.env.PropertyResolver preparePropertyResolver(org.springframework.core.env.PropertyResolver,java.lang.String[])>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: org.codehaus.groovy.ast.AnnotationNode addAnnotationOrGetExisting(org.codehaus.groovy.ast.AnnotatedNode,java.lang.Class,java.util.Map)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.AbstractConnectionSources: void close()>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode valueOf(java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder: groovy.lang.MetaClass $getStaticMetaClass()>"
  ],
  "7.0.0.RELEASE": [
    "<org.grails.datastore.mapping.reflect.AstUtils$1: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean memoizedMethodPriv$isDomainClassClassNode(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: boolean isSharedConnection()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: void <init>()>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.core.grailsversion.Snapshot: int compareTo(org.grails.datastore.mapping.core.grailsversion.Snapshot)>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.expr.ClosureExpression makeClosureAwareOfArguments(org.codehaus.groovy.ast.MethodNode,org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.model.types.conversion.IntegerToShortConverter: java.lang.Short convert(java.lang.Integer)>",
    "<org.grails.datastore.mapping.proxy.GroovyObjectMethodHandler: java.lang.Object getPropertyAfterResolving(java.lang.Object,java.lang.String)>",
    "<org.grails.datastore.mapping.multitenancy.resolvers.SystemPropertyTenantResolver: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void trackChanges(org.grails.datastore.mapping.dirty.checking.DirtyCheckable)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: void setTenantResolver(org.grails.datastore.mapping.multitenancy.TenantResolver)>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.grailsversion.Snapshot: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.utils.ConfigUtils: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.multitenancy.exceptions.TenantNotFoundException: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingCollection$_hasChangedElements_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.InMemoryConnectionSources: org.grails.datastore.mapping.core.connections.ConnectionSource getConnectionSource(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: java.util.List findPublicAbstractMethods(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: org.grails.datastore.mapping.core.Datastore getDatastore(org.grails.datastore.mapping.services.Service)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingCollection: boolean hasChangedElements()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.AnnotationNode cloneAnnotation(org.codehaus.groovy.ast.AnnotationNode)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.services.DefaultServiceRegistry: void initialize()>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.StaticConnectionSources: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.services.DefaultServiceRegistry: void <init>(org.grails.datastore.mapping.core.Datastore,boolean)>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources: void this$dist$set$2(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.config.ConfigurationBuilder: void <init>(org.springframework.core.env.PropertyResolver,java.lang.String,java.lang.String)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingMap: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Entity: org.grails.datastore.mapping.config.Entity connections(java.lang.String[])>",
    "<org.grails.datastore.mapping.engine.ModificationTrackingEntityAccess: void <init>(org.grails.datastore.mapping.engine.EntityAccess)>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: void <clinit>()>",
    "<org.grails.datastore.mapping.model.types.conversion.LongArrayToLongArrayConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.model.types.conversion.ByteArrayToStringConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToURLConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Entity: java.lang.Object propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.AbstractConnectionSources: java.lang.Iterable getConnectionSourceNames(org.grails.datastore.mapping.core.connections.ConnectionSourceFactory,org.springframework.core.env.PropertyResolver)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToByteArrayConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Entity: void <init>()>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode[] values()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: java.util.List findAllAbstractMethods(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.keyvalue.mapping.config.KeyValue: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Entity: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToBigDecimalConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSupport: java.util.Collection wrap(java.util.Collection,org.grails.datastore.mapping.dirty.checking.DirtyCheckable,java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingCollection$_hasChangedElements_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: java.lang.String resolveConnectionForTenantId(org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode,java.io.Serializable)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourcesInitializer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToShortConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.document.config.Collection: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Entity: org.grails.datastore.mapping.config.Property getPropertyConfig(java.lang.String)>",
    "<org.grails.datastore.mapping.keyvalue.mapping.config.Family: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Property: org.grails.datastore.mapping.config.Property clone()>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.grails.datastore.mapping.config.Entity: org.grails.datastore.mapping.config.Entity datasource(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.expr.MethodCallExpression buildGetPropertyExpression(org.codehaus.groovy.ast.expr.Expression,java.lang.String,org.codehaus.groovy.ast.ClassNode,boolean)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.ClassNode implementsInterfaceInternal(org.codehaus.groovy.ast.ClassNode[],java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.model.types.conversion.LongArrayToLongArrayConverter: java.lang.Long[] convert(long[])>",
    "<org.grails.datastore.mapping.config.Property: void setRange(groovy.lang.ObjectRange)>",
    "<org.grails.datastore.mapping.reflect.AstGenericsUtils: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode previous()>",
    "<org.grails.datastore.mapping.proxy.GroovyObjectMethodHandler: groovy.lang.MetaClass getThisMetaClass()>",
    "<org.grails.datastore.mapping.core.AbstractDatastore: void destroy()>",
    "<org.grails.datastore.mapping.config.Property: void <init>()>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils$_findAllUnimplementedAbstractMethods_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: void injectTrait(org.codehaus.groovy.ast.ClassNode,java.lang.Class)>",
    "<org.grails.datastore.mapping.config.utils.PropertyResolverMap: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.document.config.Attribute: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.DatastoreEnvironment: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.InMemoryConnectionSources: void <init>(org.grails.datastore.mapping.core.connections.ConnectionSource,org.grails.datastore.mapping.core.connections.ConnectionSourceFactory,org.springframework.core.env.PropertyResolver)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean isIterableOrArrayOfDomainClasses(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: org.codehaus.groovy.ast.AnnotationNode addAnnotationOrGetExisting(org.codehaus.groovy.ast.AnnotatedNode,org.codehaus.groovy.ast.ClassNode,java.util.Map)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode next()>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.utils.PropertyResolverMap: java.lang.String get(java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$_findAllUnimplementedAbstractMethods_closure1: org.codehaus.groovy.ast.ClassNode getClassNode()>",
    "<org.grails.datastore.mapping.core.connections.StaticConnectionSources: org.grails.datastore.mapping.core.connections.ConnectionSource getConnectionSource(java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.AbstractConnectionSources: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: void <init>(java.lang.String,int)>",
    "<org.grails.datastore.mapping.model.types.conversion.IntArrayToIntegerArrayConverter: java.lang.Integer[] convert(int[])>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.ClassNode replaceGenericsPlaceholders(org.codehaus.groovy.ast.ClassNode,java.util.Map,org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings: org.grails.datastore.mapping.core.connections.ConnectionSourceSettings clone()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void markDirty(org.grails.datastore.mapping.dirty.checking.DirtyCheckable,java.lang.String)>",
    "<org.grails.datastore.mapping.core.order.OrderedComparator: java.lang.Integer findOrder(java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode $INIT(java.lang.Object[])>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSupport: boolean areAssociationsDirty(org.grails.datastore.mapping.model.PersistentEntity,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: boolean hasAnnotation(java.util.List,org.codehaus.groovy.ast.AnnotationNode)>",
    "<org.grails.datastore.mapping.model.types.conversion.IntegerToByteConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.ClassNode findInterface(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<org.grails.datastore.mapping.config.utils.PropertyResolverMap: boolean containsKey(java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.AbstractConnectionSources: void <init>(org.grails.datastore.mapping.core.connections.ConnectionSource,org.grails.datastore.mapping.core.connections.ConnectionSourceFactory,org.springframework.core.env.PropertyResolver)>",
    "<org.grails.datastore.mapping.config.ConfigurationBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourcesInitializer: org.grails.datastore.mapping.core.connections.ConnectionSources create(org.grails.datastore.mapping.core.connections.ConnectionSourceFactory,org.springframework.core.env.PropertyResolver)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToBigIntegerConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder: org.grails.datastore.mapping.config.Entity evaluate(groovy.lang.Closure,java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.resolvers.NoTenantResolver: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstGenericsUtils: org.codehaus.groovy.ast.ClassNode resolveSingleGenericType(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.expr.MapExpression mapX(java.util.Map)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.config.Entity: org.grails.datastore.mapping.config.Property getOrInitializePropertyConfig(java.lang.String)>",
    "<org.grails.datastore.mapping.core.grailsversion.Snapshot: boolean equals(java.lang.Object)>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder: java.util.Map getProperties()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: void copyAnnotations(org.codehaus.groovy.ast.AnnotatedNode,org.codehaus.groovy.ast.AnnotatedNode,java.util.Set,java.util.Set)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: boolean hasChanged(org.grails.datastore.mapping.dirty.checking.DirtyCheckable)>",
    "<org.grails.datastore.mapping.core.connections.AbstractConnectionSources: org.grails.datastore.mapping.core.connections.ConnectionSource addConnectionSource(java.lang.String,java.util.Map)>",
    "<org.grails.datastore.mapping.services.DefaultServiceRegistry: boolean isValidInterface(java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: org.codehaus.groovy.ast.AnnotationNode findAnnotation(org.codehaus.groovy.ast.AnnotatedNode,java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$__clinit__closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils$_hasAnnotation_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils$_memoizedMethodPriv_isDomainClassClassNode_closure2: java.lang.String getClassName()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.config.Entity: org.grails.datastore.mapping.config.Entity connection(java.lang.String)>",
    "<org.grails.datastore.mapping.multitenancy.exceptions.TenantException: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean isNumberType(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.core.connections.InMemoryConnectionSources: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils$_hasAnnotation_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.grails.datastore.mapping.config.ConfigurationBuilder: void <init>(org.springframework.core.env.PropertyResolver,java.lang.String,java.lang.Object,java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.model.types.conversion.IntegerToByteConverter: java.lang.Byte convert(java.lang.Integer)>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: boolean isAtLeastImpl(org.grails.datastore.mapping.core.grailsversion.GrailsVersion,java.lang.String)>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.query.projections.ManualProjections: java.util.Collection distinct(java.util.Collection,java.lang.String)>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToLocaleConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.config.ConfigurationBuilder: void buildRecurse(java.lang.Object,java.lang.Object,java.lang.String)>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: void setDatastore(org.grails.datastore.mapping.services.Service,org.grails.datastore.mapping.core.Datastore)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSupport: void <clinit>()>",
    "<org.grails.datastore.mapping.reflect.ClassPropertyFetcher: java.lang.Class getPropertyType(java.lang.Class,java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.ClassPropertyFetcher: java.lang.Object getInstancePropertyValue(java.lang.Object,java.lang.String)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSortedSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: int compareTo(org.grails.datastore.mapping.core.grailsversion.GrailsVersion)>",
    "<org.grails.datastore.mapping.multitenancy.resolvers.FixedTenantResolver: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.Parameter[] copyParameters(org.codehaus.groovy.ast.Parameter[],java.util.Map)>",
    "<org.grails.datastore.mapping.proxy.GroovyObjectMethodHandler: void setPropertyAfterResolving(java.lang.Object,java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: org.codehaus.groovy.ast.expr.Expression transform(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSupport: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingCollection: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: java.util.List listDirtyPropertyNames(org.grails.datastore.mapping.dirty.checking.DirtyCheckable)>",
    "<org.grails.datastore.mapping.config.Entity: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToLocaleConverter: java.util.Locale convert(java.lang.String)>",
    "<org.grails.datastore.mapping.core.order.OrderedComparator: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: boolean hasAnnotation(org.codehaus.groovy.ast.ClassNode,java.lang.Class)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSupport: boolean areEmbeddedDirty(org.grails.datastore.mapping.model.PersistentEntity,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.expr.MethodCallExpression buildSetPropertyExpression(org.codehaus.groovy.ast.expr.Expression,java.lang.String,org.codehaus.groovy.ast.ClassNode,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.expr.VariableExpression varThis()>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: boolean hasJunitAnnotation(org.codehaus.groovy.ast.MethodNode)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean hasProperty(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<org.grails.datastore.mapping.model.types.conversion.DoubleToFloatConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.StaticConnectionSources: void <init>(org.grails.datastore.mapping.core.connections.ConnectionSource,java.lang.Iterable,org.springframework.core.env.PropertyResolver)>",
    "<org.grails.datastore.mapping.core.connections.AbstractConnectionSources: java.util.Set toValidConnectionSourceNames(java.util.Map)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: boolean equals(java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: boolean hasAnnotation(org.codehaus.groovy.ast.MethodNode,java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$_findAllUnimplementedAbstractMethods_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: void <init>(java.lang.String,int,java.util.LinkedHashMap)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean isDomainClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.model.types.conversion.DoubleToFloatConverter: java.lang.Float convert(java.lang.Double)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean implementsInterface(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.InMemoryConnectionSources: org.grails.datastore.mapping.core.connections.ConnectionSource addConnectionSource(java.lang.String,org.springframework.core.env.PropertyResolver)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingCollection$_hasChangedElements_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: java.util.List findAllUnimplementedAbstractMethods(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.config.Property: void setSize(groovy.lang.IntRange)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: void <init>()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean implementsInterface(org.codehaus.groovy.ast.ClassNode,java.lang.Class)>",
    "<org.grails.datastore.mapping.model.types.conversion.IntArrayToIntegerArrayConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettingsBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.utils.ConfigUtils: java.lang.Object read(java.lang.Class,java.lang.String,java.util.Map,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToTimeZoneConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: void <clinit>()>",
    "<org.grails.datastore.mapping.core.grailsversion.Snapshot: boolean isBuildSnapshot()>",
    "<org.grails.datastore.mapping.config.ConfigurationBuilder: java.util.List toHierarchy(java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$_memoizedMethodPriv_isDomainClassClassNode_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.proxy.GroovyObjectMethodHandler: java.lang.Object invokeMethodAfterResolving(java.lang.Object,java.lang.String,java.lang.Object[])>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources: java.lang.Object this$dist$invoke$2(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.model.types.conversion.IntegerToShortConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.services.DefaultServiceRegistry: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.engine.ModificationTrackingEntityAccess: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToCurrencyConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.ClassNode getPropertyType(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<org.grails.datastore.mapping.core.order.OrderedComparator: int compare(java.lang.Object,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.services.DefaultServiceRegistry: java.lang.Object getService(java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: void findAbstractMethodsInternal(org.codehaus.groovy.ast.ClassNode,java.util.List,boolean)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingList: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils$_hasAnnotation_closure1: org.codehaus.groovy.ast.AnnotationNode getAnnotationNode()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void markDirty(org.grails.datastore.mapping.dirty.checking.DirtyCheckable)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.Parameter[] copyParameters(java.util.Map,org.codehaus.groovy.ast.Parameter[],java.util.List)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.config.Property: java.lang.Boolean isLazy()>",
    "<org.grails.datastore.mapping.reflect.ClassPropertyFetcher: java.lang.Object getStaticPropertyValue(java.lang.Class,java.lang.String,java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: java.lang.Object getOriginalValue(org.grails.datastore.mapping.dirty.checking.DirtyCheckable,java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$__clinit__closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: org.grails.datastore.mapping.core.grailsversion.GrailsVersion getCurrent()>",
    "<org.grails.datastore.mapping.multitenancy.resolvers.SystemPropertyTenantResolver: java.io.Serializable resolveTenantIdentifier()>",
    "<org.grails.datastore.mapping.core.DatastoreUtils: org.springframework.core.env.PropertyResolver createPropertyResolvers(java.util.Collection)>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources: java.lang.Object this$dist$get$2(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: boolean hasAnnotation(org.codehaus.groovy.ast.MethodNode,java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.services.ServiceNotFoundException: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder: void <init>(org.grails.datastore.mapping.config.Entity,java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: org.codehaus.groovy.ast.AnnotationNode findAnnotation(org.codehaus.groovy.ast.AnnotatedNode,java.util.List)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: org.grails.datastore.mapping.multitenancy.TenantResolver getTenantResolver()>",
    "<org.grails.datastore.mapping.engine.event.DatastoreInitializedEvent: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: void <clinit>()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void markDirty(org.grails.datastore.mapping.dirty.checking.DirtyCheckable,java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean isSubclassOf(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: void <init>(java.lang.String)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void markDirty(org.grails.datastore.mapping.dirty.checking.DirtyCheckable,java.lang.String,java.lang.Object,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.validation.ValidationException: java.lang.RuntimeException newInstance(java.lang.String,org.springframework.validation.Errors)>",
    "<org.grails.datastore.mapping.config.Entity: org.grails.datastore.mapping.config.Property cloneGlobalConstraint()>",
    "<org.grails.datastore.mapping.reflect.MetaClassUtils: groovy.lang.ExpandoMetaClass getExpandoMetaClass(java.lang.Class)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Property: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils$_memoizedMethodPriv_isDomainClassClassNode_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: boolean hasChanged(org.grails.datastore.mapping.dirty.checking.DirtyCheckable,java.lang.String)>",
    "<org.grails.datastore.mapping.config.ConfigurationBuilder: void <clinit>()>",
    "<org.grails.datastore.mapping.core.DatastoreUtils: org.springframework.core.env.PropertyResolver preparePropertyResolver(org.springframework.core.env.PropertyResolver,java.lang.String[])>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: org.codehaus.groovy.ast.AnnotationNode addAnnotationOrGetExisting(org.codehaus.groovy.ast.AnnotatedNode,java.lang.Class,java.util.Map)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.AbstractConnectionSources: void close()>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode valueOf(java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder: groovy.lang.MetaClass $getStaticMetaClass()>"
  ],
  "7.0.3.RELEASE": [
    "<org.grails.datastore.mapping.reflect.AstUtils$1: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean memoizedMethodPriv$isDomainClassClassNode(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: boolean isSharedConnection()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: void <init>()>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.core.grailsversion.Snapshot: int compareTo(org.grails.datastore.mapping.core.grailsversion.Snapshot)>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.expr.ClosureExpression makeClosureAwareOfArguments(org.codehaus.groovy.ast.MethodNode,org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.model.types.conversion.IntegerToShortConverter: java.lang.Short convert(java.lang.Integer)>",
    "<org.grails.datastore.mapping.proxy.GroovyObjectMethodHandler: java.lang.Object getPropertyAfterResolving(java.lang.Object,java.lang.String)>",
    "<org.grails.datastore.mapping.multitenancy.resolvers.SystemPropertyTenantResolver: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void trackChanges(org.grails.datastore.mapping.dirty.checking.DirtyCheckable)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: void setTenantResolver(org.grails.datastore.mapping.multitenancy.TenantResolver)>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.grailsversion.Snapshot: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.utils.ConfigUtils: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.multitenancy.exceptions.TenantNotFoundException: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingCollection$_hasChangedElements_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.InMemoryConnectionSources: org.grails.datastore.mapping.core.connections.ConnectionSource getConnectionSource(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: java.util.List findPublicAbstractMethods(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: org.grails.datastore.mapping.core.Datastore getDatastore(org.grails.datastore.mapping.services.Service)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingCollection: boolean hasChangedElements()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.AnnotationNode cloneAnnotation(org.codehaus.groovy.ast.AnnotationNode)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.services.DefaultServiceRegistry: void initialize()>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.StaticConnectionSources: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.services.DefaultServiceRegistry: void <init>(org.grails.datastore.mapping.core.Datastore,boolean)>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources: void this$dist$set$2(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.config.ConfigurationBuilder: void <init>(org.springframework.core.env.PropertyResolver,java.lang.String,java.lang.String)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingMap: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Entity: org.grails.datastore.mapping.config.Entity connections(java.lang.String[])>",
    "<org.grails.datastore.mapping.engine.ModificationTrackingEntityAccess: void <init>(org.grails.datastore.mapping.engine.EntityAccess)>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: void <clinit>()>",
    "<org.grails.datastore.mapping.model.types.conversion.LongArrayToLongArrayConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.model.types.conversion.ByteArrayToStringConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToURLConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Entity: java.lang.Object propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.AbstractConnectionSources: java.lang.Iterable getConnectionSourceNames(org.grails.datastore.mapping.core.connections.ConnectionSourceFactory,org.springframework.core.env.PropertyResolver)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToByteArrayConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Entity: void <init>()>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode[] values()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: java.util.List findAllAbstractMethods(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.keyvalue.mapping.config.KeyValue: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Entity: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToBigDecimalConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSupport: java.util.Collection wrap(java.util.Collection,org.grails.datastore.mapping.dirty.checking.DirtyCheckable,java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingCollection$_hasChangedElements_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: java.lang.String resolveConnectionForTenantId(org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode,java.io.Serializable)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourcesInitializer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToShortConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.document.config.Collection: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Entity: org.grails.datastore.mapping.config.Property getPropertyConfig(java.lang.String)>",
    "<org.grails.datastore.mapping.keyvalue.mapping.config.Family: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Property: org.grails.datastore.mapping.config.Property clone()>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.grails.datastore.mapping.config.Entity: org.grails.datastore.mapping.config.Entity datasource(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.expr.MethodCallExpression buildGetPropertyExpression(org.codehaus.groovy.ast.expr.Expression,java.lang.String,org.codehaus.groovy.ast.ClassNode,boolean)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.ClassNode implementsInterfaceInternal(org.codehaus.groovy.ast.ClassNode[],java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.model.types.conversion.LongArrayToLongArrayConverter: java.lang.Long[] convert(long[])>",
    "<org.grails.datastore.mapping.config.Property: void setRange(groovy.lang.ObjectRange)>",
    "<org.grails.datastore.mapping.reflect.AstGenericsUtils: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode previous()>",
    "<org.grails.datastore.mapping.proxy.GroovyObjectMethodHandler: groovy.lang.MetaClass getThisMetaClass()>",
    "<org.grails.datastore.mapping.core.AbstractDatastore: void destroy()>",
    "<org.grails.datastore.mapping.config.Property: void <init>()>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils$_findAllUnimplementedAbstractMethods_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: void injectTrait(org.codehaus.groovy.ast.ClassNode,java.lang.Class)>",
    "<org.grails.datastore.mapping.config.utils.PropertyResolverMap: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.document.config.Attribute: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.DatastoreEnvironment: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.InMemoryConnectionSources: void <init>(org.grails.datastore.mapping.core.connections.ConnectionSource,org.grails.datastore.mapping.core.connections.ConnectionSourceFactory,org.springframework.core.env.PropertyResolver)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean isIterableOrArrayOfDomainClasses(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: org.codehaus.groovy.ast.AnnotationNode addAnnotationOrGetExisting(org.codehaus.groovy.ast.AnnotatedNode,org.codehaus.groovy.ast.ClassNode,java.util.Map)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode next()>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.utils.PropertyResolverMap: java.lang.String get(java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$_findAllUnimplementedAbstractMethods_closure1: org.codehaus.groovy.ast.ClassNode getClassNode()>",
    "<org.grails.datastore.mapping.core.connections.StaticConnectionSources: org.grails.datastore.mapping.core.connections.ConnectionSource getConnectionSource(java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.AbstractConnectionSources: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: void <init>(java.lang.String,int)>",
    "<org.grails.datastore.mapping.model.types.conversion.IntArrayToIntegerArrayConverter: java.lang.Integer[] convert(int[])>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.ClassNode replaceGenericsPlaceholders(org.codehaus.groovy.ast.ClassNode,java.util.Map,org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings: org.grails.datastore.mapping.core.connections.ConnectionSourceSettings clone()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void markDirty(org.grails.datastore.mapping.dirty.checking.DirtyCheckable,java.lang.String)>",
    "<org.grails.datastore.mapping.core.order.OrderedComparator: java.lang.Integer findOrder(java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode $INIT(java.lang.Object[])>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSupport: boolean areAssociationsDirty(org.grails.datastore.mapping.model.PersistentEntity,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: boolean hasAnnotation(java.util.List,org.codehaus.groovy.ast.AnnotationNode)>",
    "<org.grails.datastore.mapping.model.types.conversion.IntegerToByteConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.ClassNode findInterface(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<org.grails.datastore.mapping.config.utils.PropertyResolverMap: boolean containsKey(java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.AbstractConnectionSources: void <init>(org.grails.datastore.mapping.core.connections.ConnectionSource,org.grails.datastore.mapping.core.connections.ConnectionSourceFactory,org.springframework.core.env.PropertyResolver)>",
    "<org.grails.datastore.mapping.config.ConfigurationBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourcesInitializer: org.grails.datastore.mapping.core.connections.ConnectionSources create(org.grails.datastore.mapping.core.connections.ConnectionSourceFactory,org.springframework.core.env.PropertyResolver)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToBigIntegerConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder: org.grails.datastore.mapping.config.Entity evaluate(groovy.lang.Closure,java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.resolvers.NoTenantResolver: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstGenericsUtils: org.codehaus.groovy.ast.ClassNode resolveSingleGenericType(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.expr.MapExpression mapX(java.util.Map)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.config.Entity: org.grails.datastore.mapping.config.Property getOrInitializePropertyConfig(java.lang.String)>",
    "<org.grails.datastore.mapping.core.grailsversion.Snapshot: boolean equals(java.lang.Object)>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder: java.util.Map getProperties()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: void copyAnnotations(org.codehaus.groovy.ast.AnnotatedNode,org.codehaus.groovy.ast.AnnotatedNode,java.util.Set,java.util.Set)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: boolean hasChanged(org.grails.datastore.mapping.dirty.checking.DirtyCheckable)>",
    "<org.grails.datastore.mapping.core.connections.AbstractConnectionSources: org.grails.datastore.mapping.core.connections.ConnectionSource addConnectionSource(java.lang.String,java.util.Map)>",
    "<org.grails.datastore.mapping.services.DefaultServiceRegistry: boolean isValidInterface(java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: org.codehaus.groovy.ast.AnnotationNode findAnnotation(org.codehaus.groovy.ast.AnnotatedNode,java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$__clinit__closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils$_hasAnnotation_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils$_memoizedMethodPriv_isDomainClassClassNode_closure2: java.lang.String getClassName()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.config.Entity: org.grails.datastore.mapping.config.Entity connection(java.lang.String)>",
    "<org.grails.datastore.mapping.multitenancy.exceptions.TenantException: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean isNumberType(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.core.connections.InMemoryConnectionSources: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils$_hasAnnotation_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.grails.datastore.mapping.config.ConfigurationBuilder: void <init>(org.springframework.core.env.PropertyResolver,java.lang.String,java.lang.Object,java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.model.types.conversion.IntegerToByteConverter: java.lang.Byte convert(java.lang.Integer)>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: boolean isAtLeastImpl(org.grails.datastore.mapping.core.grailsversion.GrailsVersion,java.lang.String)>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.query.projections.ManualProjections: java.util.Collection distinct(java.util.Collection,java.lang.String)>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToLocaleConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.config.ConfigurationBuilder: void buildRecurse(java.lang.Object,java.lang.Object,java.lang.String)>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: void setDatastore(org.grails.datastore.mapping.services.Service,org.grails.datastore.mapping.core.Datastore)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSupport: void <clinit>()>",
    "<org.grails.datastore.mapping.reflect.ClassPropertyFetcher: java.lang.Class getPropertyType(java.lang.Class,java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.ClassPropertyFetcher: java.lang.Object getInstancePropertyValue(java.lang.Object,java.lang.String)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSortedSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: int compareTo(org.grails.datastore.mapping.core.grailsversion.GrailsVersion)>",
    "<org.grails.datastore.mapping.multitenancy.resolvers.FixedTenantResolver: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.Parameter[] copyParameters(org.codehaus.groovy.ast.Parameter[],java.util.Map)>",
    "<org.grails.datastore.mapping.proxy.GroovyObjectMethodHandler: void setPropertyAfterResolving(java.lang.Object,java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: org.codehaus.groovy.ast.expr.Expression transform(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSupport: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingCollection: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: java.util.List listDirtyPropertyNames(org.grails.datastore.mapping.dirty.checking.DirtyCheckable)>",
    "<org.grails.datastore.mapping.config.Entity: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToLocaleConverter: java.util.Locale convert(java.lang.String)>",
    "<org.grails.datastore.mapping.core.order.OrderedComparator: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: boolean hasAnnotation(org.codehaus.groovy.ast.ClassNode,java.lang.Class)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSupport: boolean areEmbeddedDirty(org.grails.datastore.mapping.model.PersistentEntity,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.expr.MethodCallExpression buildSetPropertyExpression(org.codehaus.groovy.ast.expr.Expression,java.lang.String,org.codehaus.groovy.ast.ClassNode,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.expr.VariableExpression varThis()>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: boolean hasJunitAnnotation(org.codehaus.groovy.ast.MethodNode)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean hasProperty(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<org.grails.datastore.mapping.model.types.conversion.DoubleToFloatConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.StaticConnectionSources: void <init>(org.grails.datastore.mapping.core.connections.ConnectionSource,java.lang.Iterable,org.springframework.core.env.PropertyResolver)>",
    "<org.grails.datastore.mapping.core.connections.AbstractConnectionSources: java.util.Set toValidConnectionSourceNames(java.util.Map)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: boolean equals(java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: boolean hasAnnotation(org.codehaus.groovy.ast.MethodNode,java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$_findAllUnimplementedAbstractMethods_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: void <init>(java.lang.String,int,java.util.LinkedHashMap)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean isDomainClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.model.types.conversion.DoubleToFloatConverter: java.lang.Float convert(java.lang.Double)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean implementsInterface(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.InMemoryConnectionSources: org.grails.datastore.mapping.core.connections.ConnectionSource addConnectionSource(java.lang.String,org.springframework.core.env.PropertyResolver)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingCollection$_hasChangedElements_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: java.util.List findAllUnimplementedAbstractMethods(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.config.Property: void setSize(groovy.lang.IntRange)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: void <init>()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean implementsInterface(org.codehaus.groovy.ast.ClassNode,java.lang.Class)>",
    "<org.grails.datastore.mapping.model.types.conversion.IntArrayToIntegerArrayConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettingsBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.utils.ConfigUtils: java.lang.Object read(java.lang.Class,java.lang.String,java.util.Map,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToTimeZoneConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: void <clinit>()>",
    "<org.grails.datastore.mapping.core.grailsversion.Snapshot: boolean isBuildSnapshot()>",
    "<org.grails.datastore.mapping.config.ConfigurationBuilder: java.util.List toHierarchy(java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$_memoizedMethodPriv_isDomainClassClassNode_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.proxy.GroovyObjectMethodHandler: java.lang.Object invokeMethodAfterResolving(java.lang.Object,java.lang.String,java.lang.Object[])>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources: java.lang.Object this$dist$invoke$2(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.model.types.conversion.IntegerToShortConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.services.DefaultServiceRegistry: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.engine.ModificationTrackingEntityAccess: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToCurrencyConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.ClassNode getPropertyType(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<org.grails.datastore.mapping.core.order.OrderedComparator: int compare(java.lang.Object,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.services.DefaultServiceRegistry: java.lang.Object getService(java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: void findAbstractMethodsInternal(org.codehaus.groovy.ast.ClassNode,java.util.List,boolean)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingList: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils$_hasAnnotation_closure1: org.codehaus.groovy.ast.AnnotationNode getAnnotationNode()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void markDirty(org.grails.datastore.mapping.dirty.checking.DirtyCheckable)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.Parameter[] copyParameters(java.util.Map,org.codehaus.groovy.ast.Parameter[],java.util.List)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.config.Property: java.lang.Boolean isLazy()>",
    "<org.grails.datastore.mapping.reflect.ClassPropertyFetcher: java.lang.Object getStaticPropertyValue(java.lang.Class,java.lang.String,java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: java.lang.Object getOriginalValue(org.grails.datastore.mapping.dirty.checking.DirtyCheckable,java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$__clinit__closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: org.grails.datastore.mapping.core.grailsversion.GrailsVersion getCurrent()>",
    "<org.grails.datastore.mapping.multitenancy.resolvers.SystemPropertyTenantResolver: java.io.Serializable resolveTenantIdentifier()>",
    "<org.grails.datastore.mapping.core.DatastoreUtils: org.springframework.core.env.PropertyResolver createPropertyResolvers(java.util.Collection)>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources: java.lang.Object this$dist$get$2(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: boolean hasAnnotation(org.codehaus.groovy.ast.MethodNode,java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.services.ServiceNotFoundException: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder: void <init>(org.grails.datastore.mapping.config.Entity,java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: org.codehaus.groovy.ast.AnnotationNode findAnnotation(org.codehaus.groovy.ast.AnnotatedNode,java.util.List)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: org.grails.datastore.mapping.multitenancy.TenantResolver getTenantResolver()>",
    "<org.grails.datastore.mapping.engine.event.DatastoreInitializedEvent: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: void <clinit>()>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: void <init>(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean isSubclassOf(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void markDirty(org.grails.datastore.mapping.dirty.checking.DirtyCheckable,java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void markDirty(org.grails.datastore.mapping.dirty.checking.DirtyCheckable,java.lang.String,java.lang.Object,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.validation.ValidationException: java.lang.RuntimeException newInstance(java.lang.String,org.springframework.validation.Errors)>",
    "<org.grails.datastore.mapping.config.Entity: org.grails.datastore.mapping.config.Property cloneGlobalConstraint()>",
    "<org.grails.datastore.mapping.reflect.MetaClassUtils: groovy.lang.ExpandoMetaClass getExpandoMetaClass(java.lang.Class)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Property: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils$_memoizedMethodPriv_isDomainClassClassNode_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: boolean hasChanged(org.grails.datastore.mapping.dirty.checking.DirtyCheckable,java.lang.String)>",
    "<org.grails.datastore.mapping.config.ConfigurationBuilder: void <clinit>()>",
    "<org.grails.datastore.mapping.core.DatastoreUtils: org.springframework.core.env.PropertyResolver preparePropertyResolver(org.springframework.core.env.PropertyResolver,java.lang.String[])>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: org.codehaus.groovy.ast.AnnotationNode addAnnotationOrGetExisting(org.codehaus.groovy.ast.AnnotatedNode,java.lang.Class,java.util.Map)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.AbstractConnectionSources: void close()>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode valueOf(java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder: groovy.lang.MetaClass $getStaticMetaClass()>"
  ],
  "7.0.1.RELEASE": [
    "<org.grails.datastore.mapping.reflect.AstUtils$1: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean memoizedMethodPriv$isDomainClassClassNode(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: boolean isSharedConnection()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: void <init>()>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.core.grailsversion.Snapshot: int compareTo(org.grails.datastore.mapping.core.grailsversion.Snapshot)>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.expr.ClosureExpression makeClosureAwareOfArguments(org.codehaus.groovy.ast.MethodNode,org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.model.types.conversion.IntegerToShortConverter: java.lang.Short convert(java.lang.Integer)>",
    "<org.grails.datastore.mapping.proxy.GroovyObjectMethodHandler: java.lang.Object getPropertyAfterResolving(java.lang.Object,java.lang.String)>",
    "<org.grails.datastore.mapping.multitenancy.resolvers.SystemPropertyTenantResolver: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void trackChanges(org.grails.datastore.mapping.dirty.checking.DirtyCheckable)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: void setTenantResolver(org.grails.datastore.mapping.multitenancy.TenantResolver)>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.grailsversion.Snapshot: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.utils.ConfigUtils: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.multitenancy.exceptions.TenantNotFoundException: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingCollection$_hasChangedElements_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.InMemoryConnectionSources: org.grails.datastore.mapping.core.connections.ConnectionSource getConnectionSource(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: java.util.List findPublicAbstractMethods(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: org.grails.datastore.mapping.core.Datastore getDatastore(org.grails.datastore.mapping.services.Service)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingCollection: boolean hasChangedElements()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.AnnotationNode cloneAnnotation(org.codehaus.groovy.ast.AnnotationNode)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.services.DefaultServiceRegistry: void initialize()>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.StaticConnectionSources: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.services.DefaultServiceRegistry: void <init>(org.grails.datastore.mapping.core.Datastore,boolean)>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources: void this$dist$set$2(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.config.ConfigurationBuilder: void <init>(org.springframework.core.env.PropertyResolver,java.lang.String,java.lang.String)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingMap: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Entity: org.grails.datastore.mapping.config.Entity connections(java.lang.String[])>",
    "<org.grails.datastore.mapping.engine.ModificationTrackingEntityAccess: void <init>(org.grails.datastore.mapping.engine.EntityAccess)>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: void <clinit>()>",
    "<org.grails.datastore.mapping.model.types.conversion.LongArrayToLongArrayConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.model.types.conversion.ByteArrayToStringConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToURLConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Entity: java.lang.Object propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.AbstractConnectionSources: java.lang.Iterable getConnectionSourceNames(org.grails.datastore.mapping.core.connections.ConnectionSourceFactory,org.springframework.core.env.PropertyResolver)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToByteArrayConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Entity: void <init>()>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode[] values()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: java.util.List findAllAbstractMethods(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.keyvalue.mapping.config.KeyValue: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Entity: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToBigDecimalConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSupport: java.util.Collection wrap(java.util.Collection,org.grails.datastore.mapping.dirty.checking.DirtyCheckable,java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingCollection$_hasChangedElements_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: java.lang.String resolveConnectionForTenantId(org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode,java.io.Serializable)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourcesInitializer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToShortConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.document.config.Collection: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Entity: org.grails.datastore.mapping.config.Property getPropertyConfig(java.lang.String)>",
    "<org.grails.datastore.mapping.keyvalue.mapping.config.Family: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Property: org.grails.datastore.mapping.config.Property clone()>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.grails.datastore.mapping.config.Entity: org.grails.datastore.mapping.config.Entity datasource(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.expr.MethodCallExpression buildGetPropertyExpression(org.codehaus.groovy.ast.expr.Expression,java.lang.String,org.codehaus.groovy.ast.ClassNode,boolean)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.ClassNode implementsInterfaceInternal(org.codehaus.groovy.ast.ClassNode[],java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.model.types.conversion.LongArrayToLongArrayConverter: java.lang.Long[] convert(long[])>",
    "<org.grails.datastore.mapping.config.Property: void setRange(groovy.lang.ObjectRange)>",
    "<org.grails.datastore.mapping.reflect.AstGenericsUtils: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode previous()>",
    "<org.grails.datastore.mapping.proxy.GroovyObjectMethodHandler: groovy.lang.MetaClass getThisMetaClass()>",
    "<org.grails.datastore.mapping.core.AbstractDatastore: void destroy()>",
    "<org.grails.datastore.mapping.config.Property: void <init>()>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils$_findAllUnimplementedAbstractMethods_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: void injectTrait(org.codehaus.groovy.ast.ClassNode,java.lang.Class)>",
    "<org.grails.datastore.mapping.config.utils.PropertyResolverMap: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.document.config.Attribute: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.DatastoreEnvironment: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.InMemoryConnectionSources: void <init>(org.grails.datastore.mapping.core.connections.ConnectionSource,org.grails.datastore.mapping.core.connections.ConnectionSourceFactory,org.springframework.core.env.PropertyResolver)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean isIterableOrArrayOfDomainClasses(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: org.codehaus.groovy.ast.AnnotationNode addAnnotationOrGetExisting(org.codehaus.groovy.ast.AnnotatedNode,org.codehaus.groovy.ast.ClassNode,java.util.Map)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode next()>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.utils.PropertyResolverMap: java.lang.String get(java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$_findAllUnimplementedAbstractMethods_closure1: org.codehaus.groovy.ast.ClassNode getClassNode()>",
    "<org.grails.datastore.mapping.core.connections.StaticConnectionSources: org.grails.datastore.mapping.core.connections.ConnectionSource getConnectionSource(java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.AbstractConnectionSources: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: void <init>(java.lang.String,int)>",
    "<org.grails.datastore.mapping.model.types.conversion.IntArrayToIntegerArrayConverter: java.lang.Integer[] convert(int[])>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.ClassNode replaceGenericsPlaceholders(org.codehaus.groovy.ast.ClassNode,java.util.Map,org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings: org.grails.datastore.mapping.core.connections.ConnectionSourceSettings clone()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void markDirty(org.grails.datastore.mapping.dirty.checking.DirtyCheckable,java.lang.String)>",
    "<org.grails.datastore.mapping.core.order.OrderedComparator: java.lang.Integer findOrder(java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode $INIT(java.lang.Object[])>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSupport: boolean areAssociationsDirty(org.grails.datastore.mapping.model.PersistentEntity,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: boolean hasAnnotation(java.util.List,org.codehaus.groovy.ast.AnnotationNode)>",
    "<org.grails.datastore.mapping.model.types.conversion.IntegerToByteConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.ClassNode findInterface(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<org.grails.datastore.mapping.config.utils.PropertyResolverMap: boolean containsKey(java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.AbstractConnectionSources: void <init>(org.grails.datastore.mapping.core.connections.ConnectionSource,org.grails.datastore.mapping.core.connections.ConnectionSourceFactory,org.springframework.core.env.PropertyResolver)>",
    "<org.grails.datastore.mapping.config.ConfigurationBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourcesInitializer: org.grails.datastore.mapping.core.connections.ConnectionSources create(org.grails.datastore.mapping.core.connections.ConnectionSourceFactory,org.springframework.core.env.PropertyResolver)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToBigIntegerConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder: org.grails.datastore.mapping.config.Entity evaluate(groovy.lang.Closure,java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.resolvers.NoTenantResolver: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstGenericsUtils: org.codehaus.groovy.ast.ClassNode resolveSingleGenericType(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.expr.MapExpression mapX(java.util.Map)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.config.Entity: org.grails.datastore.mapping.config.Property getOrInitializePropertyConfig(java.lang.String)>",
    "<org.grails.datastore.mapping.core.grailsversion.Snapshot: boolean equals(java.lang.Object)>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder: java.util.Map getProperties()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: void copyAnnotations(org.codehaus.groovy.ast.AnnotatedNode,org.codehaus.groovy.ast.AnnotatedNode,java.util.Set,java.util.Set)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: boolean hasChanged(org.grails.datastore.mapping.dirty.checking.DirtyCheckable)>",
    "<org.grails.datastore.mapping.core.connections.AbstractConnectionSources: org.grails.datastore.mapping.core.connections.ConnectionSource addConnectionSource(java.lang.String,java.util.Map)>",
    "<org.grails.datastore.mapping.services.DefaultServiceRegistry: boolean isValidInterface(java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: org.codehaus.groovy.ast.AnnotationNode findAnnotation(org.codehaus.groovy.ast.AnnotatedNode,java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$__clinit__closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils$_hasAnnotation_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils$_memoizedMethodPriv_isDomainClassClassNode_closure2: java.lang.String getClassName()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.config.Entity: org.grails.datastore.mapping.config.Entity connection(java.lang.String)>",
    "<org.grails.datastore.mapping.multitenancy.exceptions.TenantException: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean isNumberType(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.core.connections.InMemoryConnectionSources: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils$_hasAnnotation_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.grails.datastore.mapping.config.ConfigurationBuilder: void <init>(org.springframework.core.env.PropertyResolver,java.lang.String,java.lang.Object,java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.model.types.conversion.IntegerToByteConverter: java.lang.Byte convert(java.lang.Integer)>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: boolean isAtLeastImpl(org.grails.datastore.mapping.core.grailsversion.GrailsVersion,java.lang.String)>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.query.projections.ManualProjections: java.util.Collection distinct(java.util.Collection,java.lang.String)>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToLocaleConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.config.ConfigurationBuilder: void buildRecurse(java.lang.Object,java.lang.Object,java.lang.String)>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: void setDatastore(org.grails.datastore.mapping.services.Service,org.grails.datastore.mapping.core.Datastore)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSupport: void <clinit>()>",
    "<org.grails.datastore.mapping.reflect.ClassPropertyFetcher: java.lang.Class getPropertyType(java.lang.Class,java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.ClassPropertyFetcher: java.lang.Object getInstancePropertyValue(java.lang.Object,java.lang.String)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSortedSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: int compareTo(org.grails.datastore.mapping.core.grailsversion.GrailsVersion)>",
    "<org.grails.datastore.mapping.multitenancy.resolvers.FixedTenantResolver: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.Parameter[] copyParameters(org.codehaus.groovy.ast.Parameter[],java.util.Map)>",
    "<org.grails.datastore.mapping.proxy.GroovyObjectMethodHandler: void setPropertyAfterResolving(java.lang.Object,java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: org.codehaus.groovy.ast.expr.Expression transform(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSupport: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingCollection: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: java.util.List listDirtyPropertyNames(org.grails.datastore.mapping.dirty.checking.DirtyCheckable)>",
    "<org.grails.datastore.mapping.config.Entity: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToLocaleConverter: java.util.Locale convert(java.lang.String)>",
    "<org.grails.datastore.mapping.core.order.OrderedComparator: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: boolean hasAnnotation(org.codehaus.groovy.ast.ClassNode,java.lang.Class)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSupport: boolean areEmbeddedDirty(org.grails.datastore.mapping.model.PersistentEntity,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.expr.MethodCallExpression buildSetPropertyExpression(org.codehaus.groovy.ast.expr.Expression,java.lang.String,org.codehaus.groovy.ast.ClassNode,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.expr.VariableExpression varThis()>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: boolean hasJunitAnnotation(org.codehaus.groovy.ast.MethodNode)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean hasProperty(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<org.grails.datastore.mapping.model.types.conversion.DoubleToFloatConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.StaticConnectionSources: void <init>(org.grails.datastore.mapping.core.connections.ConnectionSource,java.lang.Iterable,org.springframework.core.env.PropertyResolver)>",
    "<org.grails.datastore.mapping.core.connections.AbstractConnectionSources: java.util.Set toValidConnectionSourceNames(java.util.Map)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: boolean equals(java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: boolean hasAnnotation(org.codehaus.groovy.ast.MethodNode,java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$_findAllUnimplementedAbstractMethods_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: void <init>(java.lang.String,int,java.util.LinkedHashMap)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean isDomainClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.model.types.conversion.DoubleToFloatConverter: java.lang.Float convert(java.lang.Double)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean implementsInterface(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.InMemoryConnectionSources: org.grails.datastore.mapping.core.connections.ConnectionSource addConnectionSource(java.lang.String,org.springframework.core.env.PropertyResolver)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingCollection$_hasChangedElements_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: java.util.List findAllUnimplementedAbstractMethods(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.config.Property: void setSize(groovy.lang.IntRange)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: void <init>()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean implementsInterface(org.codehaus.groovy.ast.ClassNode,java.lang.Class)>",
    "<org.grails.datastore.mapping.model.types.conversion.IntArrayToIntegerArrayConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettingsBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.utils.ConfigUtils: java.lang.Object read(java.lang.Class,java.lang.String,java.util.Map,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToTimeZoneConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: void <clinit>()>",
    "<org.grails.datastore.mapping.core.grailsversion.Snapshot: boolean isBuildSnapshot()>",
    "<org.grails.datastore.mapping.config.ConfigurationBuilder: java.util.List toHierarchy(java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$_memoizedMethodPriv_isDomainClassClassNode_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.proxy.GroovyObjectMethodHandler: java.lang.Object invokeMethodAfterResolving(java.lang.Object,java.lang.String,java.lang.Object[])>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources: java.lang.Object this$dist$invoke$2(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.model.types.conversion.IntegerToShortConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.services.DefaultServiceRegistry: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.engine.ModificationTrackingEntityAccess: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToCurrencyConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.ClassNode getPropertyType(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<org.grails.datastore.mapping.core.order.OrderedComparator: int compare(java.lang.Object,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.services.DefaultServiceRegistry: java.lang.Object getService(java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: void findAbstractMethodsInternal(org.codehaus.groovy.ast.ClassNode,java.util.List,boolean)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingList: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils$_hasAnnotation_closure1: org.codehaus.groovy.ast.AnnotationNode getAnnotationNode()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void markDirty(org.grails.datastore.mapping.dirty.checking.DirtyCheckable)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.Parameter[] copyParameters(java.util.Map,org.codehaus.groovy.ast.Parameter[],java.util.List)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.config.Property: java.lang.Boolean isLazy()>",
    "<org.grails.datastore.mapping.reflect.ClassPropertyFetcher: java.lang.Object getStaticPropertyValue(java.lang.Class,java.lang.String,java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: java.lang.Object getOriginalValue(org.grails.datastore.mapping.dirty.checking.DirtyCheckable,java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$__clinit__closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: org.grails.datastore.mapping.core.grailsversion.GrailsVersion getCurrent()>",
    "<org.grails.datastore.mapping.multitenancy.resolvers.SystemPropertyTenantResolver: java.io.Serializable resolveTenantIdentifier()>",
    "<org.grails.datastore.mapping.core.DatastoreUtils: org.springframework.core.env.PropertyResolver createPropertyResolvers(java.util.Collection)>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources: java.lang.Object this$dist$get$2(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: boolean hasAnnotation(org.codehaus.groovy.ast.MethodNode,java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.services.ServiceNotFoundException: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder: void <init>(org.grails.datastore.mapping.config.Entity,java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: org.codehaus.groovy.ast.AnnotationNode findAnnotation(org.codehaus.groovy.ast.AnnotatedNode,java.util.List)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: org.grails.datastore.mapping.multitenancy.TenantResolver getTenantResolver()>",
    "<org.grails.datastore.mapping.engine.event.DatastoreInitializedEvent: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: void <clinit>()>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: void <init>(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean isSubclassOf(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void markDirty(org.grails.datastore.mapping.dirty.checking.DirtyCheckable,java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void markDirty(org.grails.datastore.mapping.dirty.checking.DirtyCheckable,java.lang.String,java.lang.Object,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.validation.ValidationException: java.lang.RuntimeException newInstance(java.lang.String,org.springframework.validation.Errors)>",
    "<org.grails.datastore.mapping.config.Entity: org.grails.datastore.mapping.config.Property cloneGlobalConstraint()>",
    "<org.grails.datastore.mapping.reflect.MetaClassUtils: groovy.lang.ExpandoMetaClass getExpandoMetaClass(java.lang.Class)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Property: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils$_memoizedMethodPriv_isDomainClassClassNode_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: boolean hasChanged(org.grails.datastore.mapping.dirty.checking.DirtyCheckable,java.lang.String)>",
    "<org.grails.datastore.mapping.config.ConfigurationBuilder: void <clinit>()>",
    "<org.grails.datastore.mapping.core.DatastoreUtils: org.springframework.core.env.PropertyResolver preparePropertyResolver(org.springframework.core.env.PropertyResolver,java.lang.String[])>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: org.codehaus.groovy.ast.AnnotationNode addAnnotationOrGetExisting(org.codehaus.groovy.ast.AnnotatedNode,java.lang.Class,java.util.Map)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.AbstractConnectionSources: void close()>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode valueOf(java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder: groovy.lang.MetaClass $getStaticMetaClass()>"
  ],
  "7.0.4.RELEASE": [
    "<org.grails.datastore.mapping.reflect.AstUtils$1: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean memoizedMethodPriv$isDomainClassClassNode(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: boolean isSharedConnection()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: void <init>()>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.core.grailsversion.Snapshot: int compareTo(org.grails.datastore.mapping.core.grailsversion.Snapshot)>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.expr.ClosureExpression makeClosureAwareOfArguments(org.codehaus.groovy.ast.MethodNode,org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.model.types.conversion.IntegerToShortConverter: java.lang.Short convert(java.lang.Integer)>",
    "<org.grails.datastore.mapping.proxy.GroovyObjectMethodHandler: java.lang.Object getPropertyAfterResolving(java.lang.Object,java.lang.String)>",
    "<org.grails.datastore.mapping.multitenancy.resolvers.SystemPropertyTenantResolver: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void trackChanges(org.grails.datastore.mapping.dirty.checking.DirtyCheckable)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: void setTenantResolver(org.grails.datastore.mapping.multitenancy.TenantResolver)>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.grailsversion.Snapshot: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.utils.ConfigUtils: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.multitenancy.exceptions.TenantNotFoundException: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingCollection$_hasChangedElements_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.InMemoryConnectionSources: org.grails.datastore.mapping.core.connections.ConnectionSource getConnectionSource(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: java.util.List findPublicAbstractMethods(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: org.grails.datastore.mapping.core.Datastore getDatastore(org.grails.datastore.mapping.services.Service)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingCollection: boolean hasChangedElements()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.AnnotationNode cloneAnnotation(org.codehaus.groovy.ast.AnnotationNode)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.services.DefaultServiceRegistry: void initialize()>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.StaticConnectionSources: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.services.DefaultServiceRegistry: void <init>(org.grails.datastore.mapping.core.Datastore,boolean)>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources: void this$dist$set$2(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.config.ConfigurationBuilder: void <init>(org.springframework.core.env.PropertyResolver,java.lang.String,java.lang.String)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingMap: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Entity: org.grails.datastore.mapping.config.Entity connections(java.lang.String[])>",
    "<org.grails.datastore.mapping.engine.ModificationTrackingEntityAccess: void <init>(org.grails.datastore.mapping.engine.EntityAccess)>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: void <clinit>()>",
    "<org.grails.datastore.mapping.model.types.conversion.LongArrayToLongArrayConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.model.types.conversion.ByteArrayToStringConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToURLConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Entity: java.lang.Object propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.AbstractConnectionSources: java.lang.Iterable getConnectionSourceNames(org.grails.datastore.mapping.core.connections.ConnectionSourceFactory,org.springframework.core.env.PropertyResolver)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToByteArrayConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Entity: void <init>()>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode[] values()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: java.util.List findAllAbstractMethods(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.keyvalue.mapping.config.KeyValue: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Entity: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToBigDecimalConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSupport: java.util.Collection wrap(java.util.Collection,org.grails.datastore.mapping.dirty.checking.DirtyCheckable,java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingCollection$_hasChangedElements_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: java.lang.String resolveConnectionForTenantId(org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode,java.io.Serializable)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourcesInitializer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToShortConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.document.config.Collection: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Entity: org.grails.datastore.mapping.config.Property getPropertyConfig(java.lang.String)>",
    "<org.grails.datastore.mapping.keyvalue.mapping.config.Family: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Property: org.grails.datastore.mapping.config.Property clone()>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.grails.datastore.mapping.config.Entity: org.grails.datastore.mapping.config.Entity datasource(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.expr.MethodCallExpression buildGetPropertyExpression(org.codehaus.groovy.ast.expr.Expression,java.lang.String,org.codehaus.groovy.ast.ClassNode,boolean)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.ClassNode implementsInterfaceInternal(org.codehaus.groovy.ast.ClassNode[],java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.model.types.conversion.LongArrayToLongArrayConverter: java.lang.Long[] convert(long[])>",
    "<org.grails.datastore.mapping.config.Property: void setRange(groovy.lang.ObjectRange)>",
    "<org.grails.datastore.mapping.reflect.AstGenericsUtils: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode previous()>",
    "<org.grails.datastore.mapping.proxy.GroovyObjectMethodHandler: groovy.lang.MetaClass getThisMetaClass()>",
    "<org.grails.datastore.mapping.core.AbstractDatastore: void destroy()>",
    "<org.grails.datastore.mapping.config.Property: void <init>()>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils$_findAllUnimplementedAbstractMethods_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: void injectTrait(org.codehaus.groovy.ast.ClassNode,java.lang.Class)>",
    "<org.grails.datastore.mapping.config.utils.PropertyResolverMap: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.document.config.Attribute: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.DatastoreEnvironment: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.InMemoryConnectionSources: void <init>(org.grails.datastore.mapping.core.connections.ConnectionSource,org.grails.datastore.mapping.core.connections.ConnectionSourceFactory,org.springframework.core.env.PropertyResolver)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean isIterableOrArrayOfDomainClasses(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: org.codehaus.groovy.ast.AnnotationNode addAnnotationOrGetExisting(org.codehaus.groovy.ast.AnnotatedNode,org.codehaus.groovy.ast.ClassNode,java.util.Map)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode next()>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.utils.PropertyResolverMap: java.lang.String get(java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$_findAllUnimplementedAbstractMethods_closure1: org.codehaus.groovy.ast.ClassNode getClassNode()>",
    "<org.grails.datastore.mapping.core.connections.StaticConnectionSources: org.grails.datastore.mapping.core.connections.ConnectionSource getConnectionSource(java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.AbstractConnectionSources: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: void <init>(java.lang.String,int)>",
    "<org.grails.datastore.mapping.model.types.conversion.IntArrayToIntegerArrayConverter: java.lang.Integer[] convert(int[])>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.ClassNode replaceGenericsPlaceholders(org.codehaus.groovy.ast.ClassNode,java.util.Map,org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings: org.grails.datastore.mapping.core.connections.ConnectionSourceSettings clone()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void markDirty(org.grails.datastore.mapping.dirty.checking.DirtyCheckable,java.lang.String)>",
    "<org.grails.datastore.mapping.core.order.OrderedComparator: java.lang.Integer findOrder(java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode $INIT(java.lang.Object[])>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSupport: boolean areAssociationsDirty(org.grails.datastore.mapping.model.PersistentEntity,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: boolean hasAnnotation(java.util.List,org.codehaus.groovy.ast.AnnotationNode)>",
    "<org.grails.datastore.mapping.model.types.conversion.IntegerToByteConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.ClassNode findInterface(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<org.grails.datastore.mapping.config.utils.PropertyResolverMap: boolean containsKey(java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.AbstractConnectionSources: void <init>(org.grails.datastore.mapping.core.connections.ConnectionSource,org.grails.datastore.mapping.core.connections.ConnectionSourceFactory,org.springframework.core.env.PropertyResolver)>",
    "<org.grails.datastore.mapping.config.ConfigurationBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourcesInitializer: org.grails.datastore.mapping.core.connections.ConnectionSources create(org.grails.datastore.mapping.core.connections.ConnectionSourceFactory,org.springframework.core.env.PropertyResolver)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToBigIntegerConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder: org.grails.datastore.mapping.config.Entity evaluate(groovy.lang.Closure,java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.resolvers.NoTenantResolver: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstGenericsUtils: org.codehaus.groovy.ast.ClassNode resolveSingleGenericType(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.expr.MapExpression mapX(java.util.Map)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.config.Entity: org.grails.datastore.mapping.config.Property getOrInitializePropertyConfig(java.lang.String)>",
    "<org.grails.datastore.mapping.core.grailsversion.Snapshot: boolean equals(java.lang.Object)>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder: java.util.Map getProperties()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: void copyAnnotations(org.codehaus.groovy.ast.AnnotatedNode,org.codehaus.groovy.ast.AnnotatedNode,java.util.Set,java.util.Set)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: boolean hasChanged(org.grails.datastore.mapping.dirty.checking.DirtyCheckable)>",
    "<org.grails.datastore.mapping.core.connections.AbstractConnectionSources: org.grails.datastore.mapping.core.connections.ConnectionSource addConnectionSource(java.lang.String,java.util.Map)>",
    "<org.grails.datastore.mapping.services.DefaultServiceRegistry: boolean isValidInterface(java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: org.codehaus.groovy.ast.AnnotationNode findAnnotation(org.codehaus.groovy.ast.AnnotatedNode,java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$__clinit__closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils$_hasAnnotation_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils$_memoizedMethodPriv_isDomainClassClassNode_closure2: java.lang.String getClassName()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.config.Entity: org.grails.datastore.mapping.config.Entity connection(java.lang.String)>",
    "<org.grails.datastore.mapping.multitenancy.exceptions.TenantException: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean isNumberType(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.core.connections.InMemoryConnectionSources: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils$_hasAnnotation_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.grails.datastore.mapping.config.ConfigurationBuilder: void <init>(org.springframework.core.env.PropertyResolver,java.lang.String,java.lang.Object,java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.model.types.conversion.IntegerToByteConverter: java.lang.Byte convert(java.lang.Integer)>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: boolean isAtLeastImpl(org.grails.datastore.mapping.core.grailsversion.GrailsVersion,java.lang.String)>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.query.projections.ManualProjections: java.util.Collection distinct(java.util.Collection,java.lang.String)>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToLocaleConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.config.ConfigurationBuilder: void buildRecurse(java.lang.Object,java.lang.Object,java.lang.String)>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: void setDatastore(org.grails.datastore.mapping.services.Service,org.grails.datastore.mapping.core.Datastore)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSupport: void <clinit>()>",
    "<org.grails.datastore.mapping.reflect.ClassPropertyFetcher: java.lang.Class getPropertyType(java.lang.Class,java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.ClassPropertyFetcher: java.lang.Object getInstancePropertyValue(java.lang.Object,java.lang.String)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSortedSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: int compareTo(org.grails.datastore.mapping.core.grailsversion.GrailsVersion)>",
    "<org.grails.datastore.mapping.multitenancy.resolvers.FixedTenantResolver: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.Parameter[] copyParameters(org.codehaus.groovy.ast.Parameter[],java.util.Map)>",
    "<org.grails.datastore.mapping.proxy.GroovyObjectMethodHandler: void setPropertyAfterResolving(java.lang.Object,java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: org.codehaus.groovy.ast.expr.Expression transform(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSupport: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingCollection: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: java.util.List listDirtyPropertyNames(org.grails.datastore.mapping.dirty.checking.DirtyCheckable)>",
    "<org.grails.datastore.mapping.config.Entity: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToLocaleConverter: java.util.Locale convert(java.lang.String)>",
    "<org.grails.datastore.mapping.core.order.OrderedComparator: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: boolean hasAnnotation(org.codehaus.groovy.ast.ClassNode,java.lang.Class)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSupport: boolean areEmbeddedDirty(org.grails.datastore.mapping.model.PersistentEntity,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.expr.MethodCallExpression buildSetPropertyExpression(org.codehaus.groovy.ast.expr.Expression,java.lang.String,org.codehaus.groovy.ast.ClassNode,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.expr.VariableExpression varThis()>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: boolean hasJunitAnnotation(org.codehaus.groovy.ast.MethodNode)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean hasProperty(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<org.grails.datastore.mapping.model.types.conversion.DoubleToFloatConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.StaticConnectionSources: void <init>(org.grails.datastore.mapping.core.connections.ConnectionSource,java.lang.Iterable,org.springframework.core.env.PropertyResolver)>",
    "<org.grails.datastore.mapping.core.connections.AbstractConnectionSources: java.util.Set toValidConnectionSourceNames(java.util.Map)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: boolean equals(java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: boolean hasAnnotation(org.codehaus.groovy.ast.MethodNode,java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$_findAllUnimplementedAbstractMethods_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: void <init>(java.lang.String,int,java.util.LinkedHashMap)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean isDomainClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.model.types.conversion.DoubleToFloatConverter: java.lang.Float convert(java.lang.Double)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean implementsInterface(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.InMemoryConnectionSources: org.grails.datastore.mapping.core.connections.ConnectionSource addConnectionSource(java.lang.String,org.springframework.core.env.PropertyResolver)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingCollection$_hasChangedElements_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: java.util.List findAllUnimplementedAbstractMethods(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.config.Property: void setSize(groovy.lang.IntRange)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: void <init>()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean implementsInterface(org.codehaus.groovy.ast.ClassNode,java.lang.Class)>",
    "<org.grails.datastore.mapping.model.types.conversion.IntArrayToIntegerArrayConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettingsBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.utils.ConfigUtils: java.lang.Object read(java.lang.Class,java.lang.String,java.util.Map,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToTimeZoneConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: void <clinit>()>",
    "<org.grails.datastore.mapping.core.grailsversion.Snapshot: boolean isBuildSnapshot()>",
    "<org.grails.datastore.mapping.config.ConfigurationBuilder: java.util.List toHierarchy(java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$_memoizedMethodPriv_isDomainClassClassNode_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.proxy.GroovyObjectMethodHandler: java.lang.Object invokeMethodAfterResolving(java.lang.Object,java.lang.String,java.lang.Object[])>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources: java.lang.Object this$dist$invoke$2(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.model.types.conversion.IntegerToShortConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.services.DefaultServiceRegistry: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.engine.ModificationTrackingEntityAccess: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToCurrencyConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.ClassNode getPropertyType(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<org.grails.datastore.mapping.core.order.OrderedComparator: int compare(java.lang.Object,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.services.DefaultServiceRegistry: java.lang.Object getService(java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: void findAbstractMethodsInternal(org.codehaus.groovy.ast.ClassNode,java.util.List,boolean)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingList: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils$_hasAnnotation_closure1: org.codehaus.groovy.ast.AnnotationNode getAnnotationNode()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void markDirty(org.grails.datastore.mapping.dirty.checking.DirtyCheckable)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.Parameter[] copyParameters(java.util.Map,org.codehaus.groovy.ast.Parameter[],java.util.List)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.config.Property: java.lang.Boolean isLazy()>",
    "<org.grails.datastore.mapping.reflect.ClassPropertyFetcher: java.lang.Object getStaticPropertyValue(java.lang.Class,java.lang.String,java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: java.lang.Object getOriginalValue(org.grails.datastore.mapping.dirty.checking.DirtyCheckable,java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$__clinit__closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: org.grails.datastore.mapping.core.grailsversion.GrailsVersion getCurrent()>",
    "<org.grails.datastore.mapping.multitenancy.resolvers.SystemPropertyTenantResolver: java.io.Serializable resolveTenantIdentifier()>",
    "<org.grails.datastore.mapping.core.DatastoreUtils: org.springframework.core.env.PropertyResolver createPropertyResolvers(java.util.Collection)>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources: java.lang.Object this$dist$get$2(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: boolean hasAnnotation(org.codehaus.groovy.ast.MethodNode,java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.services.ServiceNotFoundException: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder: void <init>(org.grails.datastore.mapping.config.Entity,java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: org.codehaus.groovy.ast.AnnotationNode findAnnotation(org.codehaus.groovy.ast.AnnotatedNode,java.util.List)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: org.grails.datastore.mapping.multitenancy.TenantResolver getTenantResolver()>",
    "<org.grails.datastore.mapping.engine.event.DatastoreInitializedEvent: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: void <clinit>()>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: void <init>(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean isSubclassOf(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void markDirty(org.grails.datastore.mapping.dirty.checking.DirtyCheckable,java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void markDirty(org.grails.datastore.mapping.dirty.checking.DirtyCheckable,java.lang.String,java.lang.Object,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.validation.ValidationException: java.lang.RuntimeException newInstance(java.lang.String,org.springframework.validation.Errors)>",
    "<org.grails.datastore.mapping.config.Entity: org.grails.datastore.mapping.config.Property cloneGlobalConstraint()>",
    "<org.grails.datastore.mapping.reflect.MetaClassUtils: groovy.lang.ExpandoMetaClass getExpandoMetaClass(java.lang.Class)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Property: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils$_memoizedMethodPriv_isDomainClassClassNode_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: boolean hasChanged(org.grails.datastore.mapping.dirty.checking.DirtyCheckable,java.lang.String)>",
    "<org.grails.datastore.mapping.config.ConfigurationBuilder: void <clinit>()>",
    "<org.grails.datastore.mapping.core.DatastoreUtils: org.springframework.core.env.PropertyResolver preparePropertyResolver(org.springframework.core.env.PropertyResolver,java.lang.String[])>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: org.codehaus.groovy.ast.AnnotationNode addAnnotationOrGetExisting(org.codehaus.groovy.ast.AnnotatedNode,java.lang.Class,java.util.Map)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.AbstractConnectionSources: void close()>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode valueOf(java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder: groovy.lang.MetaClass $getStaticMetaClass()>"
  ],
  "7.0.0.RC2": [
    "<org.grails.datastore.mapping.reflect.AstUtils$1: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean memoizedMethodPriv$isDomainClassClassNode(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: boolean isSharedConnection()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: void <init>()>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.core.grailsversion.Snapshot: int compareTo(org.grails.datastore.mapping.core.grailsversion.Snapshot)>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.expr.ClosureExpression makeClosureAwareOfArguments(org.codehaus.groovy.ast.MethodNode,org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.model.types.conversion.IntegerToShortConverter: java.lang.Short convert(java.lang.Integer)>",
    "<org.grails.datastore.mapping.proxy.GroovyObjectMethodHandler: java.lang.Object getPropertyAfterResolving(java.lang.Object,java.lang.String)>",
    "<org.grails.datastore.mapping.multitenancy.resolvers.SystemPropertyTenantResolver: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void trackChanges(org.grails.datastore.mapping.dirty.checking.DirtyCheckable)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: void setTenantResolver(org.grails.datastore.mapping.multitenancy.TenantResolver)>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.grailsversion.Snapshot: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.utils.ConfigUtils: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.multitenancy.exceptions.TenantNotFoundException: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingCollection$_hasChangedElements_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.InMemoryConnectionSources: org.grails.datastore.mapping.core.connections.ConnectionSource getConnectionSource(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: java.util.List findPublicAbstractMethods(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: org.grails.datastore.mapping.core.Datastore getDatastore(org.grails.datastore.mapping.services.Service)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingCollection: boolean hasChangedElements()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.AnnotationNode cloneAnnotation(org.codehaus.groovy.ast.AnnotationNode)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.services.DefaultServiceRegistry: void initialize()>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.StaticConnectionSources: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.services.DefaultServiceRegistry: void <init>(org.grails.datastore.mapping.core.Datastore,boolean)>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources: void this$dist$set$2(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.config.ConfigurationBuilder: void <init>(org.springframework.core.env.PropertyResolver,java.lang.String,java.lang.String)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingMap: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Entity: org.grails.datastore.mapping.config.Entity connections(java.lang.String[])>",
    "<org.grails.datastore.mapping.engine.ModificationTrackingEntityAccess: void <init>(org.grails.datastore.mapping.engine.EntityAccess)>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: void <clinit>()>",
    "<org.grails.datastore.mapping.model.types.conversion.LongArrayToLongArrayConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.model.types.conversion.ByteArrayToStringConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToURLConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Entity: java.lang.Object propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.AbstractConnectionSources: java.lang.Iterable getConnectionSourceNames(org.grails.datastore.mapping.core.connections.ConnectionSourceFactory,org.springframework.core.env.PropertyResolver)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToByteArrayConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Entity: void <init>()>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode[] values()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: java.util.List findAllAbstractMethods(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.keyvalue.mapping.config.KeyValue: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Entity: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToBigDecimalConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSupport: java.util.Collection wrap(java.util.Collection,org.grails.datastore.mapping.dirty.checking.DirtyCheckable,java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingCollection$_hasChangedElements_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: java.lang.String resolveConnectionForTenantId(org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode,java.io.Serializable)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourcesInitializer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToShortConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.document.config.Collection: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Entity: org.grails.datastore.mapping.config.Property getPropertyConfig(java.lang.String)>",
    "<org.grails.datastore.mapping.keyvalue.mapping.config.Family: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Property: org.grails.datastore.mapping.config.Property clone()>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.grails.datastore.mapping.config.Entity: org.grails.datastore.mapping.config.Entity datasource(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.expr.MethodCallExpression buildGetPropertyExpression(org.codehaus.groovy.ast.expr.Expression,java.lang.String,org.codehaus.groovy.ast.ClassNode,boolean)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.ClassNode implementsInterfaceInternal(org.codehaus.groovy.ast.ClassNode[],java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.model.types.conversion.LongArrayToLongArrayConverter: java.lang.Long[] convert(long[])>",
    "<org.grails.datastore.mapping.config.Property: void setRange(groovy.lang.ObjectRange)>",
    "<org.grails.datastore.mapping.reflect.AstGenericsUtils: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode previous()>",
    "<org.grails.datastore.mapping.proxy.GroovyObjectMethodHandler: groovy.lang.MetaClass getThisMetaClass()>",
    "<org.grails.datastore.mapping.core.AbstractDatastore: void destroy()>",
    "<org.grails.datastore.mapping.config.Property: void <init>()>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils$_findAllUnimplementedAbstractMethods_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: void injectTrait(org.codehaus.groovy.ast.ClassNode,java.lang.Class)>",
    "<org.grails.datastore.mapping.config.utils.PropertyResolverMap: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.document.config.Attribute: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.DatastoreEnvironment: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.InMemoryConnectionSources: void <init>(org.grails.datastore.mapping.core.connections.ConnectionSource,org.grails.datastore.mapping.core.connections.ConnectionSourceFactory,org.springframework.core.env.PropertyResolver)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean isIterableOrArrayOfDomainClasses(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: org.codehaus.groovy.ast.AnnotationNode addAnnotationOrGetExisting(org.codehaus.groovy.ast.AnnotatedNode,org.codehaus.groovy.ast.ClassNode,java.util.Map)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode next()>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.utils.PropertyResolverMap: java.lang.String get(java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$_findAllUnimplementedAbstractMethods_closure1: org.codehaus.groovy.ast.ClassNode getClassNode()>",
    "<org.grails.datastore.mapping.core.connections.StaticConnectionSources: org.grails.datastore.mapping.core.connections.ConnectionSource getConnectionSource(java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.AbstractConnectionSources: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: void <init>(java.lang.String,int)>",
    "<org.grails.datastore.mapping.model.types.conversion.IntArrayToIntegerArrayConverter: java.lang.Integer[] convert(int[])>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.ClassNode replaceGenericsPlaceholders(org.codehaus.groovy.ast.ClassNode,java.util.Map,org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings: org.grails.datastore.mapping.core.connections.ConnectionSourceSettings clone()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void markDirty(org.grails.datastore.mapping.dirty.checking.DirtyCheckable,java.lang.String)>",
    "<org.grails.datastore.mapping.core.order.OrderedComparator: java.lang.Integer findOrder(java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode $INIT(java.lang.Object[])>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSupport: boolean areAssociationsDirty(org.grails.datastore.mapping.model.PersistentEntity,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: boolean hasAnnotation(java.util.List,org.codehaus.groovy.ast.AnnotationNode)>",
    "<org.grails.datastore.mapping.model.types.conversion.IntegerToByteConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.ClassNode findInterface(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<org.grails.datastore.mapping.config.utils.PropertyResolverMap: boolean containsKey(java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.AbstractConnectionSources: void <init>(org.grails.datastore.mapping.core.connections.ConnectionSource,org.grails.datastore.mapping.core.connections.ConnectionSourceFactory,org.springframework.core.env.PropertyResolver)>",
    "<org.grails.datastore.mapping.config.ConfigurationBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourcesInitializer: org.grails.datastore.mapping.core.connections.ConnectionSources create(org.grails.datastore.mapping.core.connections.ConnectionSourceFactory,org.springframework.core.env.PropertyResolver)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToBigIntegerConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder: org.grails.datastore.mapping.config.Entity evaluate(groovy.lang.Closure,java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.resolvers.NoTenantResolver: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstGenericsUtils: org.codehaus.groovy.ast.ClassNode resolveSingleGenericType(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.expr.MapExpression mapX(java.util.Map)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.config.Entity: org.grails.datastore.mapping.config.Property getOrInitializePropertyConfig(java.lang.String)>",
    "<org.grails.datastore.mapping.core.grailsversion.Snapshot: boolean equals(java.lang.Object)>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder: java.util.Map getProperties()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: void copyAnnotations(org.codehaus.groovy.ast.AnnotatedNode,org.codehaus.groovy.ast.AnnotatedNode,java.util.Set,java.util.Set)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: boolean hasChanged(org.grails.datastore.mapping.dirty.checking.DirtyCheckable)>",
    "<org.grails.datastore.mapping.core.connections.AbstractConnectionSources: org.grails.datastore.mapping.core.connections.ConnectionSource addConnectionSource(java.lang.String,java.util.Map)>",
    "<org.grails.datastore.mapping.services.DefaultServiceRegistry: boolean isValidInterface(java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: org.codehaus.groovy.ast.AnnotationNode findAnnotation(org.codehaus.groovy.ast.AnnotatedNode,java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$__clinit__closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils$_hasAnnotation_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils$_memoizedMethodPriv_isDomainClassClassNode_closure2: java.lang.String getClassName()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.config.Entity: org.grails.datastore.mapping.config.Entity connection(java.lang.String)>",
    "<org.grails.datastore.mapping.multitenancy.exceptions.TenantException: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean isNumberType(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.core.connections.InMemoryConnectionSources: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils$_hasAnnotation_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.grails.datastore.mapping.config.ConfigurationBuilder: void <init>(org.springframework.core.env.PropertyResolver,java.lang.String,java.lang.Object,java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.model.types.conversion.IntegerToByteConverter: java.lang.Byte convert(java.lang.Integer)>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: boolean isAtLeastImpl(org.grails.datastore.mapping.core.grailsversion.GrailsVersion,java.lang.String)>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.query.projections.ManualProjections: java.util.Collection distinct(java.util.Collection,java.lang.String)>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToLocaleConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.config.ConfigurationBuilder: void buildRecurse(java.lang.Object,java.lang.Object,java.lang.String)>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: void setDatastore(org.grails.datastore.mapping.services.Service,org.grails.datastore.mapping.core.Datastore)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSupport: void <clinit>()>",
    "<org.grails.datastore.mapping.reflect.ClassPropertyFetcher: java.lang.Class getPropertyType(java.lang.Class,java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.ClassPropertyFetcher: java.lang.Object getInstancePropertyValue(java.lang.Object,java.lang.String)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSortedSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: int compareTo(org.grails.datastore.mapping.core.grailsversion.GrailsVersion)>",
    "<org.grails.datastore.mapping.multitenancy.resolvers.FixedTenantResolver: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.Parameter[] copyParameters(org.codehaus.groovy.ast.Parameter[],java.util.Map)>",
    "<org.grails.datastore.mapping.proxy.GroovyObjectMethodHandler: void setPropertyAfterResolving(java.lang.Object,java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: org.codehaus.groovy.ast.expr.Expression transform(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSupport: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingCollection: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: java.util.List listDirtyPropertyNames(org.grails.datastore.mapping.dirty.checking.DirtyCheckable)>",
    "<org.grails.datastore.mapping.config.Entity: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToLocaleConverter: java.util.Locale convert(java.lang.String)>",
    "<org.grails.datastore.mapping.core.order.OrderedComparator: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: boolean hasAnnotation(org.codehaus.groovy.ast.ClassNode,java.lang.Class)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSupport: boolean areEmbeddedDirty(org.grails.datastore.mapping.model.PersistentEntity,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.expr.MethodCallExpression buildSetPropertyExpression(org.codehaus.groovy.ast.expr.Expression,java.lang.String,org.codehaus.groovy.ast.ClassNode,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.expr.VariableExpression varThis()>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: boolean hasJunitAnnotation(org.codehaus.groovy.ast.MethodNode)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean hasProperty(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<org.grails.datastore.mapping.model.types.conversion.DoubleToFloatConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.StaticConnectionSources: void <init>(org.grails.datastore.mapping.core.connections.ConnectionSource,java.lang.Iterable,org.springframework.core.env.PropertyResolver)>",
    "<org.grails.datastore.mapping.core.connections.AbstractConnectionSources: java.util.Set toValidConnectionSourceNames(java.util.Map)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: boolean equals(java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: boolean hasAnnotation(org.codehaus.groovy.ast.MethodNode,java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$_findAllUnimplementedAbstractMethods_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: void <init>(java.lang.String,int,java.util.LinkedHashMap)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean isDomainClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.model.types.conversion.DoubleToFloatConverter: java.lang.Float convert(java.lang.Double)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean implementsInterface(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.InMemoryConnectionSources: org.grails.datastore.mapping.core.connections.ConnectionSource addConnectionSource(java.lang.String,org.springframework.core.env.PropertyResolver)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingCollection$_hasChangedElements_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: java.util.List findAllUnimplementedAbstractMethods(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.config.Property: void setSize(groovy.lang.IntRange)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: void <init>()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean implementsInterface(org.codehaus.groovy.ast.ClassNode,java.lang.Class)>",
    "<org.grails.datastore.mapping.model.types.conversion.IntArrayToIntegerArrayConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettingsBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.utils.ConfigUtils: java.lang.Object read(java.lang.Class,java.lang.String,java.util.Map,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToTimeZoneConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: void <clinit>()>",
    "<org.grails.datastore.mapping.core.grailsversion.Snapshot: boolean isBuildSnapshot()>",
    "<org.grails.datastore.mapping.config.ConfigurationBuilder: java.util.List toHierarchy(java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$_memoizedMethodPriv_isDomainClassClassNode_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.proxy.GroovyObjectMethodHandler: java.lang.Object invokeMethodAfterResolving(java.lang.Object,java.lang.String,java.lang.Object[])>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources: java.lang.Object this$dist$invoke$2(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.model.types.conversion.IntegerToShortConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.services.DefaultServiceRegistry: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.engine.ModificationTrackingEntityAccess: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToCurrencyConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.ClassNode getPropertyType(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<org.grails.datastore.mapping.core.order.OrderedComparator: int compare(java.lang.Object,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.services.DefaultServiceRegistry: java.lang.Object getService(java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: void findAbstractMethodsInternal(org.codehaus.groovy.ast.ClassNode,java.util.List,boolean)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingList: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils$_hasAnnotation_closure1: org.codehaus.groovy.ast.AnnotationNode getAnnotationNode()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void markDirty(org.grails.datastore.mapping.dirty.checking.DirtyCheckable)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.Parameter[] copyParameters(java.util.Map,org.codehaus.groovy.ast.Parameter[],java.util.List)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.config.Property: java.lang.Boolean isLazy()>",
    "<org.grails.datastore.mapping.reflect.ClassPropertyFetcher: java.lang.Object getStaticPropertyValue(java.lang.Class,java.lang.String,java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: java.lang.Object getOriginalValue(org.grails.datastore.mapping.dirty.checking.DirtyCheckable,java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$__clinit__closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: org.grails.datastore.mapping.core.grailsversion.GrailsVersion getCurrent()>",
    "<org.grails.datastore.mapping.multitenancy.resolvers.SystemPropertyTenantResolver: java.io.Serializable resolveTenantIdentifier()>",
    "<org.grails.datastore.mapping.core.DatastoreUtils: org.springframework.core.env.PropertyResolver createPropertyResolvers(java.util.Collection)>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources: java.lang.Object this$dist$get$2(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: boolean hasAnnotation(org.codehaus.groovy.ast.MethodNode,java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.services.ServiceNotFoundException: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder: void <init>(org.grails.datastore.mapping.config.Entity,java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: org.codehaus.groovy.ast.AnnotationNode findAnnotation(org.codehaus.groovy.ast.AnnotatedNode,java.util.List)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: org.grails.datastore.mapping.multitenancy.TenantResolver getTenantResolver()>",
    "<org.grails.datastore.mapping.engine.event.DatastoreInitializedEvent: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: void <clinit>()>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: void <init>(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean isSubclassOf(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void markDirty(org.grails.datastore.mapping.dirty.checking.DirtyCheckable,java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void markDirty(org.grails.datastore.mapping.dirty.checking.DirtyCheckable,java.lang.String,java.lang.Object,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.validation.ValidationException: java.lang.RuntimeException newInstance(java.lang.String,org.springframework.validation.Errors)>",
    "<org.grails.datastore.mapping.config.Entity: org.grails.datastore.mapping.config.Property cloneGlobalConstraint()>",
    "<org.grails.datastore.mapping.reflect.MetaClassUtils: groovy.lang.ExpandoMetaClass getExpandoMetaClass(java.lang.Class)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Property: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils$_memoizedMethodPriv_isDomainClassClassNode_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: boolean hasChanged(org.grails.datastore.mapping.dirty.checking.DirtyCheckable,java.lang.String)>",
    "<org.grails.datastore.mapping.config.ConfigurationBuilder: void <clinit>()>",
    "<org.grails.datastore.mapping.core.DatastoreUtils: org.springframework.core.env.PropertyResolver preparePropertyResolver(org.springframework.core.env.PropertyResolver,java.lang.String[])>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: org.codehaus.groovy.ast.AnnotationNode addAnnotationOrGetExisting(org.codehaus.groovy.ast.AnnotatedNode,java.lang.Class,java.util.Map)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.AbstractConnectionSources: void close()>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode valueOf(java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder: groovy.lang.MetaClass $getStaticMetaClass()>"
  ],
  "7.0.9": [
    "<org.grails.datastore.mapping.reflect.AstUtils$1: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean memoizedMethodPriv$isDomainClassClassNode(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: boolean isSharedConnection()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: void <init>()>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.core.grailsversion.Snapshot: int compareTo(org.grails.datastore.mapping.core.grailsversion.Snapshot)>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.expr.ClosureExpression makeClosureAwareOfArguments(org.codehaus.groovy.ast.MethodNode,org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.model.types.conversion.IntegerToShortConverter: java.lang.Short convert(java.lang.Integer)>",
    "<org.grails.datastore.mapping.proxy.GroovyObjectMethodHandler: java.lang.Object getPropertyAfterResolving(java.lang.Object,java.lang.String)>",
    "<org.grails.datastore.mapping.multitenancy.resolvers.SystemPropertyTenantResolver: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void trackChanges(org.grails.datastore.mapping.dirty.checking.DirtyCheckable)>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.exceptions.TenantNotFoundException: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.utils.ConfigUtils: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingCollection$_hasChangedElements_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.grailsversion.Snapshot: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.InMemoryConnectionSources: org.grails.datastore.mapping.core.connections.ConnectionSource getConnectionSource(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: java.util.List findPublicAbstractMethods(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: org.grails.datastore.mapping.core.Datastore getDatastore(org.grails.datastore.mapping.services.Service)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingCollection: boolean hasChangedElements()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.AnnotationNode cloneAnnotation(org.codehaus.groovy.ast.AnnotationNode)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.StaticConnectionSources: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.services.DefaultServiceRegistry: void <init>(org.grails.datastore.mapping.core.Datastore,boolean)>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources: void this$dist$set$2(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingMap: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Entity: org.grails.datastore.mapping.config.Entity connections(java.lang.String[])>",
    "<org.grails.datastore.mapping.engine.ModificationTrackingEntityAccess: void <init>(org.grails.datastore.mapping.engine.EntityAccess)>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: void <clinit>()>",
    "<org.grails.datastore.mapping.model.types.conversion.LongArrayToLongArrayConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.model.types.conversion.ByteArrayToStringConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToURLConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Entity: java.lang.Object propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.AbstractConnectionSources: java.lang.Iterable getConnectionSourceNames(org.grails.datastore.mapping.core.connections.ConnectionSourceFactory,org.springframework.core.env.PropertyResolver)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToByteArrayConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Entity: void <init>()>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode[] values()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: java.util.List findAllAbstractMethods(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.keyvalue.mapping.config.KeyValue: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Entity: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToBigDecimalConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSupport: java.util.Collection wrap(java.util.Collection,org.grails.datastore.mapping.dirty.checking.DirtyCheckable,java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingCollection$_hasChangedElements_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourcesInitializer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: java.lang.String resolveConnectionForTenantId(org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode,java.io.Serializable)>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToShortConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.document.config.Collection: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Entity: org.grails.datastore.mapping.config.Property getPropertyConfig(java.lang.String)>",
    "<org.grails.datastore.mapping.keyvalue.mapping.config.Family: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Property: org.grails.datastore.mapping.config.Property clone()>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.grails.datastore.mapping.config.Entity: org.grails.datastore.mapping.config.Entity datasource(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.expr.MethodCallExpression buildGetPropertyExpression(org.codehaus.groovy.ast.expr.Expression,java.lang.String,org.codehaus.groovy.ast.ClassNode,boolean)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.ClassNode implementsInterfaceInternal(org.codehaus.groovy.ast.ClassNode[],java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.config.DatastoreServiceMethodInvokingFactoryBean: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.model.types.conversion.LongArrayToLongArrayConverter: java.lang.Long[] convert(long[])>",
    "<org.grails.datastore.mapping.config.Property: void setRange(groovy.lang.ObjectRange)>",
    "<org.grails.datastore.mapping.reflect.AstGenericsUtils: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode previous()>",
    "<org.grails.datastore.mapping.proxy.GroovyObjectMethodHandler: groovy.lang.MetaClass getThisMetaClass()>",
    "<org.grails.datastore.mapping.core.AbstractDatastore: void destroy()>",
    "<org.grails.datastore.mapping.config.Property: void <init>()>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils$_findAllUnimplementedAbstractMethods_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.utils.PropertyResolverMap: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.document.config.Attribute: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.DatastoreEnvironment: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: void injectTrait(org.codehaus.groovy.ast.ClassNode,java.lang.Class)>",
    "<org.grails.datastore.mapping.core.connections.InMemoryConnectionSources: void <init>(org.grails.datastore.mapping.core.connections.ConnectionSource,org.grails.datastore.mapping.core.connections.ConnectionSourceFactory,org.springframework.core.env.PropertyResolver)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean isIterableOrArrayOfDomainClasses(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: org.codehaus.groovy.ast.AnnotationNode addAnnotationOrGetExisting(org.codehaus.groovy.ast.AnnotatedNode,org.codehaus.groovy.ast.ClassNode,java.util.Map)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode next()>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.DatastoreServiceMethodInvokingFactoryBean: java.lang.Class getObjectType()>",
    "<org.grails.datastore.mapping.reflect.AstUtils$_findAllUnimplementedAbstractMethods_closure1: org.codehaus.groovy.ast.ClassNode getClassNode()>",
    "<org.grails.datastore.mapping.config.utils.PropertyResolverMap: java.lang.String get(java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.StaticConnectionSources: org.grails.datastore.mapping.core.connections.ConnectionSource getConnectionSource(java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.AbstractConnectionSources: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: void <init>(java.lang.String,int)>",
    "<org.grails.datastore.mapping.model.types.conversion.IntArrayToIntegerArrayConverter: java.lang.Integer[] convert(int[])>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.ClassNode replaceGenericsPlaceholders(org.codehaus.groovy.ast.ClassNode,java.util.Map,org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings: org.grails.datastore.mapping.core.connections.ConnectionSourceSettings clone()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void markDirty(org.grails.datastore.mapping.dirty.checking.DirtyCheckable,java.lang.String)>",
    "<org.grails.datastore.mapping.core.order.OrderedComparator: java.lang.Integer findOrder(java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode $INIT(java.lang.Object[])>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSupport: boolean areAssociationsDirty(org.grails.datastore.mapping.model.PersistentEntity,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: boolean hasAnnotation(java.util.List,org.codehaus.groovy.ast.AnnotationNode)>",
    "<org.grails.datastore.mapping.model.types.conversion.IntegerToByteConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.ClassNode findInterface(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<org.grails.datastore.mapping.config.utils.PropertyResolverMap: boolean containsKey(java.lang.Object)>",
    "<org.grails.datastore.mapping.config.ConfigurationBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.AbstractConnectionSources: void <init>(org.grails.datastore.mapping.core.connections.ConnectionSource,org.grails.datastore.mapping.core.connections.ConnectionSourceFactory,org.springframework.core.env.PropertyResolver)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourcesInitializer: org.grails.datastore.mapping.core.connections.ConnectionSources create(org.grails.datastore.mapping.core.connections.ConnectionSourceFactory,org.springframework.core.env.PropertyResolver)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void trackChanges(org.grails.datastore.mapping.dirty.checking.DirtyCheckable,java.util.Map)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToBigIntegerConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder: org.grails.datastore.mapping.config.Entity evaluate(groovy.lang.Closure,java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.resolvers.NoTenantResolver: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstGenericsUtils: org.codehaus.groovy.ast.ClassNode resolveSingleGenericType(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.expr.MapExpression mapX(java.util.Map)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.config.Entity: org.grails.datastore.mapping.config.Property getOrInitializePropertyConfig(java.lang.String)>",
    "<org.grails.datastore.mapping.core.grailsversion.Snapshot: boolean equals(java.lang.Object)>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder: java.util.Map getProperties()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: void copyAnnotations(org.codehaus.groovy.ast.AnnotatedNode,org.codehaus.groovy.ast.AnnotatedNode,java.util.Set,java.util.Set)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: boolean hasChanged(org.grails.datastore.mapping.dirty.checking.DirtyCheckable)>",
    "<org.grails.datastore.mapping.core.connections.AbstractConnectionSources: org.grails.datastore.mapping.core.connections.ConnectionSource addConnectionSource(java.lang.String,java.util.Map)>",
    "<org.grails.datastore.mapping.services.DefaultServiceRegistry: boolean isValidInterface(java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: org.codehaus.groovy.ast.AnnotationNode findAnnotation(org.codehaus.groovy.ast.AnnotatedNode,java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$__clinit__closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils$_hasAnnotation_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils$_memoizedMethodPriv_isDomainClassClassNode_closure2: java.lang.String getClassName()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.exceptions.TenantException: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Entity: org.grails.datastore.mapping.config.Entity connection(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean isNumberType(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.core.connections.InMemoryConnectionSources: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils$_hasAnnotation_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.grails.datastore.mapping.config.ConfigurationBuilder: void <init>(org.springframework.core.env.PropertyResolver,java.lang.String,java.lang.Object,java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.model.types.conversion.IntegerToByteConverter: java.lang.Byte convert(java.lang.Integer)>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: boolean isAtLeastImpl(org.grails.datastore.mapping.core.grailsversion.GrailsVersion,java.lang.String)>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.query.projections.ManualProjections: java.util.Collection distinct(java.util.Collection,java.lang.String)>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToLocaleConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: void setDatastore(org.grails.datastore.mapping.services.Service,org.grails.datastore.mapping.core.Datastore)>",
    "<org.grails.datastore.mapping.reflect.ClassPropertyFetcher: java.lang.Class getPropertyType(java.lang.Class,java.lang.String)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSupport: void <clinit>()>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: int compareTo(org.grails.datastore.mapping.core.grailsversion.GrailsVersion)>",
    "<org.grails.datastore.mapping.reflect.ClassPropertyFetcher: java.lang.Object getInstancePropertyValue(java.lang.Object,java.lang.String)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSortedSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.multitenancy.resolvers.FixedTenantResolver: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.Parameter[] copyParameters(org.codehaus.groovy.ast.Parameter[],java.util.Map)>",
    "<org.grails.datastore.mapping.proxy.GroovyObjectMethodHandler: void setPropertyAfterResolving(java.lang.Object,java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: org.codehaus.groovy.ast.expr.Expression transform(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSupport: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingCollection: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: java.util.List listDirtyPropertyNames(org.grails.datastore.mapping.dirty.checking.DirtyCheckable)>",
    "<org.grails.datastore.mapping.config.Entity: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToLocaleConverter: java.util.Locale convert(java.lang.String)>",
    "<org.grails.datastore.mapping.core.order.OrderedComparator: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: boolean hasAnnotation(org.codehaus.groovy.ast.ClassNode,java.lang.Class)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSupport: boolean areEmbeddedDirty(org.grails.datastore.mapping.model.PersistentEntity,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.expr.MethodCallExpression buildSetPropertyExpression(org.codehaus.groovy.ast.expr.Expression,java.lang.String,org.codehaus.groovy.ast.ClassNode,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.expr.VariableExpression varThis()>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: boolean hasJunitAnnotation(org.codehaus.groovy.ast.MethodNode)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean hasProperty(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<org.grails.datastore.mapping.model.types.conversion.DoubleToFloatConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.StaticConnectionSources: void <init>(org.grails.datastore.mapping.core.connections.ConnectionSource,java.lang.Iterable,org.springframework.core.env.PropertyResolver)>",
    "<org.grails.datastore.mapping.core.connections.AbstractConnectionSources: java.util.Set toValidConnectionSourceNames(java.util.Map)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: boolean equals(java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: boolean hasAnnotation(org.codehaus.groovy.ast.MethodNode,java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$_findAllUnimplementedAbstractMethods_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: void <init>(java.lang.String,int,java.util.LinkedHashMap)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean isDomainClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.config.ConfigurationBuilder: void buildRecurse(java.lang.Object,java.util.List,java.lang.Object,java.lang.String)>",
    "<org.grails.datastore.mapping.model.types.conversion.DoubleToFloatConverter: java.lang.Float convert(java.lang.Double)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean implementsInterface(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingCollection$_hasChangedElements_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: java.util.List findAllUnimplementedAbstractMethods(org.codehaus.groovy.ast.ClassNode)>",
    "<org.grails.datastore.mapping.config.Property: void setSize(groovy.lang.IntRange)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: void <init>()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean implementsInterface(org.codehaus.groovy.ast.ClassNode,java.lang.Class)>",
    "<org.grails.datastore.mapping.model.types.conversion.IntArrayToIntegerArrayConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettingsBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.utils.ConfigUtils: java.lang.Object read(java.lang.Class,java.lang.String,java.util.Map,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void syncChangedProperties(org.grails.datastore.mapping.dirty.checking.DirtyCheckable,java.lang.Object)>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToTimeZoneConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: void <clinit>()>",
    "<org.grails.datastore.mapping.config.ConfigurationBuilder: java.util.List toHierarchy(java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$_memoizedMethodPriv_isDomainClassClassNode_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.grails.datastore.mapping.proxy.GroovyObjectMethodHandler: java.lang.Object invokeMethodAfterResolving(java.lang.Object,java.lang.String,java.lang.Object[])>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources: java.lang.Object this$dist$invoke$2(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.model.types.conversion.IntegerToShortConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.services.DefaultServiceRegistry: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.services.Service$Trait$Helper: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.engine.ModificationTrackingEntityAccess: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$CustomSettings: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.model.types.conversion.StringToCurrencyConverter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources$NullConnectionFactory: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.ClassNode getPropertyType(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<org.grails.datastore.mapping.core.order.OrderedComparator: int compare(java.lang.Object,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.services.DefaultServiceRegistry: java.lang.Object getService(java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: void findAbstractMethodsInternal(org.codehaus.groovy.ast.ClassNode,java.util.List,boolean)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingList: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils$_hasAnnotation_closure1: org.codehaus.groovy.ast.AnnotationNode getAnnotationNode()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void markDirty(org.grails.datastore.mapping.dirty.checking.DirtyCheckable)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: org.codehaus.groovy.ast.Parameter[] copyParameters(java.util.Map,org.codehaus.groovy.ast.Parameter[],java.util.List)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.config.Property: java.lang.Boolean isLazy()>",
    "<org.grails.datastore.mapping.reflect.ClassPropertyFetcher: java.lang.Object getStaticPropertyValue(java.lang.Class,java.lang.String,java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: java.lang.Object getOriginalValue(org.grails.datastore.mapping.dirty.checking.DirtyCheckable,java.lang.String)>",
    "<org.grails.datastore.mapping.config.DatastoreServiceMethodInvokingFactoryBean: java.lang.Object invokeWithTargetException()>",
    "<org.grails.datastore.mapping.reflect.AstUtils$__clinit__closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: org.grails.datastore.mapping.core.grailsversion.GrailsVersion getCurrent()>",
    "<org.grails.datastore.mapping.multitenancy.resolvers.SystemPropertyTenantResolver: java.io.Serializable resolveTenantIdentifier()>",
    "<org.grails.datastore.mapping.core.DatastoreUtils: org.springframework.core.env.PropertyResolver createPropertyResolvers(java.util.Collection)>",
    "<org.grails.datastore.mapping.core.connections.SingletonConnectionSources: java.lang.Object this$dist$get$2(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: boolean hasAnnotation(org.codehaus.groovy.ast.MethodNode,java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.services.ServiceNotFoundException: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder: void <init>(org.grails.datastore.mapping.config.Entity,java.lang.Class)>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: org.codehaus.groovy.ast.AnnotationNode findAnnotation(org.codehaus.groovy.ast.AnnotatedNode,java.util.List)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.config.DatastoreServiceMethodInvokingFactoryBean: void setBeanFactory(org.springframework.beans.factory.BeanFactory)>",
    "<org.grails.datastore.mapping.engine.event.DatastoreInitializedEvent: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils: void <clinit>()>",
    "<org.grails.datastore.mapping.core.grailsversion.GrailsVersion: void <init>(java.lang.String)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: boolean isSubclassOf(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings: org.grails.datastore.mapping.multitenancy.TenantResolver getTenantResolver()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void markDirty(org.grails.datastore.mapping.dirty.checking.DirtyCheckable,java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: void markDirty(org.grails.datastore.mapping.dirty.checking.DirtyCheckable,java.lang.String,java.lang.Object,java.lang.Object)>",
    "<org.grails.datastore.mapping.reflect.AstUtils: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<org.grails.datastore.mapping.validation.ValidationException: java.lang.RuntimeException newInstance(java.lang.String,org.springframework.validation.Errors)>",
    "<org.grails.datastore.mapping.config.Entity: org.grails.datastore.mapping.config.Property cloneGlobalConstraint()>",
    "<org.grails.datastore.mapping.reflect.MetaClassUtils: groovy.lang.ExpandoMetaClass getExpandoMetaClass(java.lang.Class)>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckingSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.config.Property: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstUtils$_memoizedMethodPriv_isDomainClassClassNode_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.dirty.checking.DirtyCheckable$Trait$Helper: boolean hasChanged(org.grails.datastore.mapping.dirty.checking.DirtyCheckable,java.lang.String)>",
    "<org.grails.datastore.mapping.config.ConfigurationBuilder: void <clinit>()>",
    "<org.grails.datastore.mapping.core.DatastoreUtils: org.springframework.core.env.PropertyResolver preparePropertyResolver(org.springframework.core.env.PropertyResolver,java.lang.String[])>",
    "<org.grails.datastore.mapping.reflect.AstUtils$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.grails.datastore.mapping.reflect.AstAnnotationUtils: org.codehaus.groovy.ast.AnnotationNode addAnnotationOrGetExisting(org.codehaus.groovy.ast.AnnotatedNode,java.lang.Class,java.util.Map)>",
    "<org.grails.datastore.mapping.core.connections.AbstractConnectionSources: void close()>",
    "<org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode: org.grails.datastore.mapping.multitenancy.MultiTenancySettings$MultiTenancyMode valueOf(java.lang.String)>",
    "<org.grails.datastore.mapping.core.connections.ConnectionSourceSettings$DefaultSettings: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.grails.datastore.mapping.config.groovy.DefaultMappingConfigurationBuilder: groovy.lang.MetaClass $getStaticMetaClass()>"
  ]
}