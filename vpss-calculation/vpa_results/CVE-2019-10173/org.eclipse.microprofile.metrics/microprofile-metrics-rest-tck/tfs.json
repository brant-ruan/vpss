{
  "2.2": [
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseSingularMetricsPresent()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testGcCountMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationConcurrentGaugeOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationJsonResponseContentType()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept5()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTagOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testPromNoBadCharsInNames()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationHistogramUnitNoneOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testListsAllJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMeterUnitOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNoAcceptHeader()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadata()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataTypeAndUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseAttributeOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept4()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataSingluarItems()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void setup()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetricsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNonStandardUnitsOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOpenMetrics406ForOptions()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testSharedCounterAgain()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void setup()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testTranslateSemiColonToUnderScoreJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testTextPlainResponseContentType()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNoCustomUnitForCounter()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept3()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testCustomUnitAppendToGaugeName()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testConvertingToBaseUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNonStandardUnitsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataOkJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOptionalBaseMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataGarbageCollection()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept2()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTagJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataItems()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataTypeAndUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBase()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testSharedCounter()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationHistogramUnitBytesOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBadSubTreeWillReturn404()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOpenMetricsFormatNoBadChars()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseAttributeJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testGcTimeMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept1()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testReusedHistogram()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testMultipleTaggedMetricsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTimerUnitOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataSingluarItemsOpenMetrics()>"
  ],
  "2.2-M1": [
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseSingularMetricsPresent()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testGcCountMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationConcurrentGaugeOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationJsonResponseContentType()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept5()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTagOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testPromNoBadCharsInNames()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationHistogramUnitNoneOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testListsAllJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMeterUnitOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNoAcceptHeader()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadata()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataTypeAndUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseAttributeOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept4()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataSingluarItems()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void setup()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetricsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNonStandardUnitsOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOpenMetrics406ForOptions()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testSharedCounterAgain()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void setup()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testTranslateSemiColonToUnderScoreJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testTextPlainResponseContentType()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNoCustomUnitForCounter()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept3()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testCustomUnitAppendToGaugeName()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testConvertingToBaseUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNonStandardUnitsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataOkJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOptionalBaseMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataGarbageCollection()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept2()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTagJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataItems()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataTypeAndUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBase()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testSharedCounter()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationHistogramUnitBytesOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBadSubTreeWillReturn404()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOpenMetricsFormatNoBadChars()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseAttributeJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testGcTimeMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept1()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testReusedHistogram()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testMultipleTaggedMetricsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTimerUnitOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataSingluarItemsOpenMetrics()>"
  ],
  "2.2-RC1": [
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseSingularMetricsPresent()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testGcCountMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationConcurrentGaugeOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationJsonResponseContentType()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept5()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTagOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testPromNoBadCharsInNames()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationHistogramUnitNoneOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testListsAllJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMeterUnitOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNoAcceptHeader()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadata()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataTypeAndUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseAttributeOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept4()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataSingluarItems()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void setup()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetricsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNonStandardUnitsOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOpenMetrics406ForOptions()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testSharedCounterAgain()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void setup()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testTranslateSemiColonToUnderScoreJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testTextPlainResponseContentType()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNoCustomUnitForCounter()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept3()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testCustomUnitAppendToGaugeName()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testConvertingToBaseUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNonStandardUnitsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataOkJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOptionalBaseMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataGarbageCollection()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept2()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTagJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataItems()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataTypeAndUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBase()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testSharedCounter()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationHistogramUnitBytesOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBadSubTreeWillReturn404()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOpenMetricsFormatNoBadChars()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseAttributeJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testGcTimeMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept1()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testReusedHistogram()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testMultipleTaggedMetricsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTimerUnitOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataSingluarItemsOpenMetrics()>"
  ],
  "2.3-M3": [
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseSingularMetricsPresent()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testGcCountMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationConcurrentGaugeOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationJsonResponseContentType()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept5()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTagOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testPromNoBadCharsInNames()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationHistogramUnitNoneOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testListsAllJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMeterUnitOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNoAcceptHeader()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadata()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataTypeAndUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseAttributeOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept4()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataSingluarItems()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void setup()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetricsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNonStandardUnitsOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOpenMetrics406ForOptions()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testSharedCounterAgain()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void setup()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testTranslateSemiColonToUnderScoreJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testTextPlainResponseContentType()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNoCustomUnitForCounter()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept3()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testCustomUnitAppendToGaugeName()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testConvertingToBaseUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNonStandardUnitsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataOkJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOptionalBaseMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataGarbageCollection()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept2()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTagJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataItems()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataTypeAndUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBase()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testSharedCounter()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationHistogramUnitBytesOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBadSubTreeWillReturn404()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOpenMetricsFormatNoBadChars()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseAttributeJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testGcTimeMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept1()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testReusedHistogram()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testMultipleTaggedMetricsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTimerUnitOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataSingluarItemsOpenMetrics()>"
  ],
  "2.2.1-RC2": [
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseSingularMetricsPresent()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testGcCountMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationConcurrentGaugeOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationJsonResponseContentType()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept5()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTagOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testPromNoBadCharsInNames()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationHistogramUnitNoneOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testListsAllJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMeterUnitOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNoAcceptHeader()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadata()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataTypeAndUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseAttributeOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept4()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataSingluarItems()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void setup()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetricsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNonStandardUnitsOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOpenMetrics406ForOptions()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testSharedCounterAgain()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void setup()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testTranslateSemiColonToUnderScoreJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testTextPlainResponseContentType()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNoCustomUnitForCounter()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept3()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testCustomUnitAppendToGaugeName()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testConvertingToBaseUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNonStandardUnitsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataOkJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOptionalBaseMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataGarbageCollection()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept2()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTagJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataItems()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataTypeAndUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBase()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testSharedCounter()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationHistogramUnitBytesOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBadSubTreeWillReturn404()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOpenMetricsFormatNoBadChars()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseAttributeJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testGcTimeMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept1()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testReusedHistogram()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testMultipleTaggedMetricsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTimerUnitOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataSingluarItemsOpenMetrics()>"
  ],
  "2.1.0-RC1": [
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseSingularMetricsPresent()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testGcCountMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationConcurrentGaugeOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationJsonResponseContentType()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept5()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTagOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testPromNoBadCharsInNames()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationHistogramUnitNoneOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testListsAllJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMeterUnitOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNoAcceptHeader()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadata()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataTypeAndUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseAttributeOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept4()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataSingluarItems()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void setup()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetricsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNonStandardUnitsOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOpenMetrics406ForOptions()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testSharedCounterAgain()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void setup()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testTranslateSemiColonToUnderScoreJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testTextPlainResponseContentType()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNoCustomUnitForCounter()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept3()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testCustomUnitAppendToGaugeName()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testConvertingToBaseUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNonStandardUnitsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataOkJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOptionalBaseMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataGarbageCollection()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept2()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTagJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataItems()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataTypeAndUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBase()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testSharedCounter()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationHistogramUnitBytesOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBadSubTreeWillReturn404()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOpenMetricsFormatNoBadChars()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseAttributeJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testGcTimeMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept1()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testReusedHistogram()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testMultipleTaggedMetricsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTimerUnitOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataSingluarItemsOpenMetrics()>"
  ],
  "2.1.0": [
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseSingularMetricsPresent()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testGcCountMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationConcurrentGaugeOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationJsonResponseContentType()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept5()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTagOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testPromNoBadCharsInNames()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationHistogramUnitNoneOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testListsAllJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMeterUnitOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNoAcceptHeader()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadata()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataTypeAndUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseAttributeOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept4()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataSingluarItems()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void setup()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetricsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNonStandardUnitsOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOpenMetrics406ForOptions()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testSharedCounterAgain()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void setup()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testTranslateSemiColonToUnderScoreJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testTextPlainResponseContentType()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNoCustomUnitForCounter()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept3()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testCustomUnitAppendToGaugeName()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testConvertingToBaseUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNonStandardUnitsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataOkJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOptionalBaseMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataGarbageCollection()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept2()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTagJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataItems()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataTypeAndUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBase()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testSharedCounter()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationHistogramUnitBytesOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBadSubTreeWillReturn404()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOpenMetricsFormatNoBadChars()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseAttributeJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testGcTimeMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept1()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testReusedHistogram()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testMultipleTaggedMetricsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTimerUnitOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataSingluarItemsOpenMetrics()>"
  ],
  "2.3-M5": [
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseSingularMetricsPresent()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testGcCountMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationConcurrentGaugeOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationJsonResponseContentType()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept5()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTagOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testPromNoBadCharsInNames()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationHistogramUnitNoneOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testListsAllJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMeterUnitOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNoAcceptHeader()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadata()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataTypeAndUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseAttributeOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept4()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataSingluarItems()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void setup()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetricsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNonStandardUnitsOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOpenMetrics406ForOptions()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testSharedCounterAgain()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void setup()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testTranslateSemiColonToUnderScoreJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationSimpleTimerUnitOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testTextPlainResponseContentType()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNoCustomUnitForCounter()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept3()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testCustomUnitAppendToGaugeName()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testConvertingToBaseUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNonStandardUnitsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataOkJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOptionalBaseMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataGarbageCollection()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept2()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTagJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataItems()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataTypeAndUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBase()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testSharedCounter()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationHistogramUnitBytesOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBadSubTreeWillReturn404()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOpenMetricsFormatNoBadChars()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseAttributeJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testGcTimeMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept1()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testReusedHistogram()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testMultipleTaggedMetricsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTimerUnitOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataSingluarItemsOpenMetrics()>"
  ],
  "2.4-M1": [
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseSingularMetricsPresent()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testGcCountMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationConcurrentGaugeOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationJsonResponseContentType()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept5()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTagOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testPromNoBadCharsInNames()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationHistogramUnitNoneOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testListsAllJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMeterUnitOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNoAcceptHeader()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadata()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataTypeAndUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseAttributeOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept4()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataSingluarItems()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void setup()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetricsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNonStandardUnitsOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOpenMetrics406ForOptions()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testSharedCounterAgain()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void setup()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testTranslateSemiColonToUnderScoreJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationSimpleTimerUnitOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testTextPlainResponseContentType()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNoCustomUnitForCounter()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept3()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testCustomUnitAppendToGaugeName()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testConvertingToBaseUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNonStandardUnitsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataOkJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOptionalBaseMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataGarbageCollection()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept2()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTagJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataItems()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataTypeAndUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBase()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testSharedCounter()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationHistogramUnitBytesOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBadSubTreeWillReturn404()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOpenMetricsFormatNoBadChars()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseAttributeJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testGcTimeMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept1()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testReusedHistogram()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testMultipleTaggedMetricsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTimerUnitOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataSingluarItemsOpenMetrics()>"
  ],
  "2.2.1-RC1": [
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseSingularMetricsPresent()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testGcCountMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationConcurrentGaugeOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationJsonResponseContentType()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept5()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTagOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testPromNoBadCharsInNames()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationHistogramUnitNoneOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testListsAllJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMeterUnitOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNoAcceptHeader()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadata()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataTypeAndUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseAttributeOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept4()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataSingluarItems()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void setup()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetricsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNonStandardUnitsOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOpenMetrics406ForOptions()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testSharedCounterAgain()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void setup()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testTranslateSemiColonToUnderScoreJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testTextPlainResponseContentType()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNoCustomUnitForCounter()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept3()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testCustomUnitAppendToGaugeName()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testConvertingToBaseUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNonStandardUnitsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataOkJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOptionalBaseMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataGarbageCollection()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept2()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTagJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataItems()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataTypeAndUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBase()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testSharedCounter()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationHistogramUnitBytesOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBadSubTreeWillReturn404()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOpenMetricsFormatNoBadChars()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseAttributeJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testGcTimeMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept1()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testReusedHistogram()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testMultipleTaggedMetricsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTimerUnitOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataSingluarItemsOpenMetrics()>"
  ],
  "2.3-M1": [
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseSingularMetricsPresent()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testGcCountMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationConcurrentGaugeOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationJsonResponseContentType()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept5()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTagOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testPromNoBadCharsInNames()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationHistogramUnitNoneOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testListsAllJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMeterUnitOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNoAcceptHeader()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadata()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataTypeAndUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseAttributeOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept4()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataSingluarItems()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void setup()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetricsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNonStandardUnitsOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOpenMetrics406ForOptions()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testSharedCounterAgain()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void setup()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testTranslateSemiColonToUnderScoreJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testTextPlainResponseContentType()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNoCustomUnitForCounter()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept3()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testCustomUnitAppendToGaugeName()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testConvertingToBaseUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNonStandardUnitsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataOkJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOptionalBaseMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataGarbageCollection()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept2()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTagJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataItems()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataTypeAndUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBase()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testSharedCounter()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationHistogramUnitBytesOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBadSubTreeWillReturn404()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOpenMetricsFormatNoBadChars()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseAttributeJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testGcTimeMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept1()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testReusedHistogram()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testMultipleTaggedMetricsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTimerUnitOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataSingluarItemsOpenMetrics()>"
  ],
  "3.0-M1": [
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseSingularMetricsPresent()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testGcCountMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationConcurrentGaugeOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationJsonResponseContentType()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept5()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTagOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testPromNoBadCharsInNames()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationHistogramUnitNoneOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testListsAllJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMeterUnitOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNoAcceptHeader()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadata()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataTypeAndUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseAttributeOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept4()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataSingluarItems()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void setup()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetricsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNonStandardUnitsOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOpenMetrics406ForOptions()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testSharedCounterAgain()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void setup()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testTranslateSemiColonToUnderScoreJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationSimpleTimerUnitOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testTextPlainResponseContentType()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNoCustomUnitForCounter()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept3()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testCustomUnitAppendToGaugeName()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testConvertingToBaseUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNonStandardUnitsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataOkJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOptionalBaseMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataGarbageCollection()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept2()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTagJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataItems()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataTypeAndUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBase()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testSharedCounter()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationHistogramUnitBytesOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBadSubTreeWillReturn404()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOpenMetricsFormatNoBadChars()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseAttributeJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testGcTimeMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept1()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testReusedHistogram()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testMultipleTaggedMetricsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTimerUnitOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataSingluarItemsOpenMetrics()>"
  ],
  "2.2.1": [
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseSingularMetricsPresent()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testGcCountMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationConcurrentGaugeOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationJsonResponseContentType()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept5()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTagOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testPromNoBadCharsInNames()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationHistogramUnitNoneOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testListsAllJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMeterUnitOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNoAcceptHeader()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadata()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataTypeAndUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseAttributeOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept4()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataSingluarItems()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void setup()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetricsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNonStandardUnitsOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOpenMetrics406ForOptions()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testSharedCounterAgain()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void setup()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testTranslateSemiColonToUnderScoreJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testTextPlainResponseContentType()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNoCustomUnitForCounter()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept3()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testCustomUnitAppendToGaugeName()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testConvertingToBaseUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNonStandardUnitsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataOkJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOptionalBaseMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataGarbageCollection()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept2()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTagJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataItems()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataTypeAndUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBase()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testSharedCounter()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationHistogramUnitBytesOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBadSubTreeWillReturn404()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOpenMetricsFormatNoBadChars()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseAttributeJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testGcTimeMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept1()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testReusedHistogram()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testMultipleTaggedMetricsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTimerUnitOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataSingluarItemsOpenMetrics()>"
  ],
  "2.3-RC2": [
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseSingularMetricsPresent()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testGcCountMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationConcurrentGaugeOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationJsonResponseContentType()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept5()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTagOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testPromNoBadCharsInNames()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationHistogramUnitNoneOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testListsAllJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMeterUnitOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNoAcceptHeader()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadata()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataTypeAndUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseAttributeOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept4()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataSingluarItems()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void setup()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetricsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNonStandardUnitsOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOpenMetrics406ForOptions()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testSharedCounterAgain()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void setup()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testTranslateSemiColonToUnderScoreJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationSimpleTimerUnitOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testTextPlainResponseContentType()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNoCustomUnitForCounter()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept3()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testCustomUnitAppendToGaugeName()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testConvertingToBaseUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNonStandardUnitsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataOkJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOptionalBaseMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataGarbageCollection()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept2()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTagJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataItems()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataTypeAndUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBase()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testSharedCounter()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationHistogramUnitBytesOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBadSubTreeWillReturn404()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOpenMetricsFormatNoBadChars()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseAttributeJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testGcTimeMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept1()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testReusedHistogram()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testMultipleTaggedMetricsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTimerUnitOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataSingluarItemsOpenMetrics()>"
  ],
  "2.1-SNAPSHOT-1": [
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseSingularMetricsPresent()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testGcCountMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationConcurrentGaugeOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationJsonResponseContentType()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept5()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTagOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testPromNoBadCharsInNames()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationHistogramUnitNoneOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testListsAllJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMeterUnitOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNoAcceptHeader()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadata()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataTypeAndUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseAttributeOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept4()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataSingluarItems()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void setup()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetricsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNonStandardUnitsOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOpenMetrics406ForOptions()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testSharedCounterAgain()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void setup()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testTranslateSemiColonToUnderScoreJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testTextPlainResponseContentType()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNoCustomUnitForCounter()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept3()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testCustomUnitAppendToGaugeName()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testConvertingToBaseUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNonStandardUnitsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataOkJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOptionalBaseMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataGarbageCollection()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept2()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTagJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataItems()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataTypeAndUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBase()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testSharedCounter()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationHistogramUnitBytesOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBadSubTreeWillReturn404()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOpenMetricsFormatNoBadChars()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseAttributeJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testGcTimeMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept1()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testReusedHistogram()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testMultipleTaggedMetricsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTimerUnitOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataSingluarItemsOpenMetrics()>"
  ],
  "2.3-M4": [
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseSingularMetricsPresent()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testGcCountMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationConcurrentGaugeOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationJsonResponseContentType()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept5()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTagOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testPromNoBadCharsInNames()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationHistogramUnitNoneOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testListsAllJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMeterUnitOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNoAcceptHeader()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadata()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataTypeAndUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseAttributeOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept4()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataSingluarItems()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void setup()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetricsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNonStandardUnitsOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOpenMetrics406ForOptions()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testSharedCounterAgain()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void setup()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testTranslateSemiColonToUnderScoreJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationSimpleTimerUnitOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testTextPlainResponseContentType()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNoCustomUnitForCounter()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept3()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testCustomUnitAppendToGaugeName()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testConvertingToBaseUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNonStandardUnitsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataOkJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOptionalBaseMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataGarbageCollection()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept2()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTagJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataItems()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataTypeAndUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBase()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testSharedCounter()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationHistogramUnitBytesOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBadSubTreeWillReturn404()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOpenMetricsFormatNoBadChars()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseAttributeJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testGcTimeMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept1()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testReusedHistogram()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testMultipleTaggedMetricsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTimerUnitOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataSingluarItemsOpenMetrics()>"
  ],
  "3.0-M2": [
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseSingularMetricsPresent()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testGcCountMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationConcurrentGaugeOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationJsonResponseContentType()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept5()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTagOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testPromNoBadCharsInNames()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationHistogramUnitNoneOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testListsAllJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMeterUnitOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNoAcceptHeader()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadata()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataTypeAndUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseAttributeOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept4()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataSingluarItems()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void setup()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetricsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNonStandardUnitsOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOpenMetrics406ForOptions()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testSharedCounterAgain()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void setup()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testTranslateSemiColonToUnderScoreJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationSimpleTimerUnitOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testTextPlainResponseContentType()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNoCustomUnitForCounter()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept3()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testCustomUnitAppendToGaugeName()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testConvertingToBaseUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNonStandardUnitsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataOkJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOptionalBaseMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataGarbageCollection()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept2()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTagJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataItems()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataTypeAndUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBase()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testSharedCounter()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationHistogramUnitBytesOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBadSubTreeWillReturn404()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOpenMetricsFormatNoBadChars()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseAttributeJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testGcTimeMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept1()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testReusedHistogram()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testMultipleTaggedMetricsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTimerUnitOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataSingluarItemsOpenMetrics()>"
  ],
  "2.3-M2": [
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseSingularMetricsPresent()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testGcCountMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationConcurrentGaugeOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationJsonResponseContentType()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept5()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTagOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testPromNoBadCharsInNames()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationHistogramUnitNoneOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testListsAllJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMeterUnitOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNoAcceptHeader()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadata()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataTypeAndUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseAttributeOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept4()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataSingluarItems()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void setup()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetricsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNonStandardUnitsOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOpenMetrics406ForOptions()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testSharedCounterAgain()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void setup()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testTranslateSemiColonToUnderScoreJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testTextPlainResponseContentType()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNoCustomUnitForCounter()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept3()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testCustomUnitAppendToGaugeName()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testConvertingToBaseUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNonStandardUnitsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataOkJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOptionalBaseMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataGarbageCollection()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept2()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTagJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataItems()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataTypeAndUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBase()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testSharedCounter()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationHistogramUnitBytesOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBadSubTreeWillReturn404()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOpenMetricsFormatNoBadChars()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseAttributeJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testGcTimeMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept1()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testReusedHistogram()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testMultipleTaggedMetricsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTimerUnitOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataSingluarItemsOpenMetrics()>"
  ],
  "2.3": [
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseSingularMetricsPresent()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testGcCountMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationConcurrentGaugeOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationJsonResponseContentType()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept5()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTagOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testPromNoBadCharsInNames()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationHistogramUnitNoneOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testListsAllJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMeterUnitOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNoAcceptHeader()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadata()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataTypeAndUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseAttributeOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept4()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataSingluarItems()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void setup()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetricsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNonStandardUnitsOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOpenMetrics406ForOptions()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testSharedCounterAgain()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void setup()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testTranslateSemiColonToUnderScoreJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationSimpleTimerUnitOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testTextPlainResponseContentType()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNoCustomUnitForCounter()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept3()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testCustomUnitAppendToGaugeName()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testConvertingToBaseUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNonStandardUnitsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataOkJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOptionalBaseMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataGarbageCollection()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept2()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTagJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataItems()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataTypeAndUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBase()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testSharedCounter()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationHistogramUnitBytesOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBadSubTreeWillReturn404()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOpenMetricsFormatNoBadChars()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseAttributeJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testGcTimeMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept1()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testReusedHistogram()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testMultipleTaggedMetricsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTimerUnitOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataSingluarItemsOpenMetrics()>"
  ],
  "2.3-RC1": [
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseSingularMetricsPresent()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testGcCountMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationConcurrentGaugeOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationJsonResponseContentType()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept5()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTagOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testPromNoBadCharsInNames()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationHistogramUnitNoneOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testListsAllJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMeterUnitOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNoAcceptHeader()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadata()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataTypeAndUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseAttributeOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept4()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataSingluarItems()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void setup()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetricsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNonStandardUnitsOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOpenMetrics406ForOptions()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testSharedCounterAgain()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void setup()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testTranslateSemiColonToUnderScoreJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationSimpleTimerUnitOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testTextPlainResponseContentType()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNoCustomUnitForCounter()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept3()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testCustomUnitAppendToGaugeName()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testConvertingToBaseUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testNonStandardUnitsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataOkJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOptionalBaseMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataGarbageCollection()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept2()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTagJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataItems()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationMetadataTypeAndUnit()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBase()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testSharedCounter()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationHistogramUnitBytesOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBadSubTreeWillReturn404()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testOpenMetricsFormatNoBadChars()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseAttributeJson()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testGcTimeMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testAccept1()>",
    "<org.eclipse.microprofile.metrics.test.ReusableMetricsTest: void testReusedHistogram()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testMultipleTaggedMetricsJSON()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testApplicationTimerUnitOpenMetrics()>",
    "<org.eclipse.microprofile.metrics.test.MpMetricTest: void testBaseMetadataSingluarItemsOpenMetrics()>"
  ]
}