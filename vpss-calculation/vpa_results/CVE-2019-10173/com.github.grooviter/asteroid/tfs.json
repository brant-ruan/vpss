{
  "0.4.1": [
    "<asteroid.Criterias$13: void <init>(java.lang.Object)>",
    "<asteroid.transformer.AbstractExpressionTransformer$1: void <init>(java.lang.Object)>",
    "<asteroid.Criterias: groovy.lang.Closure byExprMethodCallByArgs(java.lang.Class[])>",
    "<asteroid.Criterias$18: boolean doCall(java.lang.Object)>",
    "<asteroid.Criterias$19: boolean doCall(java.lang.Object)>",
    "<asteroid.Criterias$12: void <init>(java.lang.Object,org.codehaus.groovy.ast.ClassNode[])>",
    "<asteroid.Criterias$1: void <init>(java.lang.Object,java.lang.Class)>",
    "<asteroid.AbstractGlobalTransformation: void visit(org.codehaus.groovy.ast.ASTNode[],org.codehaus.groovy.control.SourceUnit)>",
    "<asteroid.Criterias$5: void <init>(java.lang.Object,java.lang.String)>",
    "<asteroid.utils.NodeUtils: java.lang.Boolean hasFieldOfType(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<asteroid.internal.LocalTransformation: org.codehaus.groovy.ast.expr.ListExpression resolveTargetFromElementType(java.util.List)>",
    "<asteroid.Criterias$8: void <init>(java.lang.Object,java.lang.String)>",
    "<asteroid.Criterias$18: void <init>(java.lang.Object,groovy.lang.Closure[])>",
    "<asteroid.utils.NodeUtils$2: void <init>(asteroid.utils.NodeUtils,java.lang.Object,java.lang.String)>",
    "<asteroid.Criterias$4: void <init>(java.lang.Object,java.lang.String)>",
    "<asteroid.utils.NodeUtils$3: void <init>(asteroid.utils.NodeUtils,java.lang.Object,java.lang.String)>",
    "<asteroid.Criterias$15: void <init>(java.lang.Object)>",
    "<asteroid.utils.NodeUtils$1: void <init>(asteroid.utils.NodeUtils,java.lang.Object)>",
    "<asteroid.Criterias$16: void <init>(java.lang.Object,int)>",
    "<asteroid.Criterias$11: void <init>(java.lang.Object)>",
    "<asteroid.Criterias$14: void <init>(java.lang.Object)>",
    "<asteroid.utils.StatementUtils$2: java.util.List doCall(java.util.List,asteroid.utils.StatementUtils$Group)>",
    "<asteroid.Criterias$1$1: void <init>(asteroid.Criterias$1,java.lang.Object)>",
    "<asteroid.Expressions: org.codehaus.groovy.ast.expr.BooleanExpression boolHasSamePropertyX(org.codehaus.groovy.ast.PropertyNode,org.codehaus.groovy.ast.expr.Expression)>",
    "<asteroid.Criterias$2: java.lang.Boolean doCall(org.codehaus.groovy.ast.AnnotatedNode)>",
    "<asteroid.Criterias$19: void <init>(java.lang.Object,groovy.lang.Closure[])>",
    "<asteroid.Criterias$2: void <init>(java.lang.Object,java.lang.String)>",
    "<asteroid.Criterias$7: void <init>(java.lang.Object,java.lang.String)>",
    "<asteroid.Criterias$17: void <init>(java.lang.Object,java.lang.Class)>",
    "<asteroid.utils.StatementUtils$1: void <init>(asteroid.utils.StatementUtils,java.lang.Object)>",
    "<asteroid.internal.LocalTransformation$1: void <init>(asteroid.internal.LocalTransformation,java.lang.Object)>",
    "<asteroid.Criterias$19$1: void <init>(asteroid.Criterias$19,java.lang.Object,java.lang.Object)>",
    "<asteroid.Criterias$18$1: void <init>(asteroid.Criterias$18,java.lang.Object,java.lang.Object)>",
    "<asteroid.nodes.ClassNodeBuilder: asteroid.nodes.ClassNodeBuilder clazzWithGenerics(java.lang.Class,org.codehaus.groovy.ast.GenericsType[])>",
    "<asteroid.Criterias$1: java.lang.Boolean doCall(org.codehaus.groovy.ast.AnnotatedNode)>",
    "<asteroid.Criterias$12: java.lang.Boolean doCall(org.codehaus.groovy.ast.expr.Expression)>",
    "<asteroid.Criterias$10: void <init>(java.lang.Object,java.lang.String)>",
    "<asteroid.utils.StatementUtils$2: void <init>(asteroid.utils.StatementUtils,java.lang.Object,java.util.Map)>",
    "<asteroid.Criterias$9: void <init>(java.lang.Object,java.lang.String)>",
    "<asteroid.utils.NodeUtils: org.codehaus.groovy.ast.AnnotationNode getAnnotationFrom(org.codehaus.groovy.ast.ClassNode,org.codehaus.groovy.ast.ClassNode)>",
    "<asteroid.Criterias$2$1: void <init>(asteroid.Criterias$2,java.lang.Object)>",
    "<asteroid.utils.NodeUtils: org.codehaus.groovy.ast.AnnotationNode getAnnotationFrom(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<asteroid.Criterias$6: void <init>(java.lang.Object,java.lang.String)>",
    "<asteroid.Criterias$3: void <init>(java.lang.Object,java.lang.String)>"
  ],
  "0.4.2": [
    "<asteroid.Criterias$13: void <init>(java.lang.Object)>",
    "<asteroid.transformer.AbstractExpressionTransformer$1: void <init>(java.lang.Object)>",
    "<asteroid.Criterias: groovy.lang.Closure byExprMethodCallByArgs(java.lang.Class[])>",
    "<asteroid.Criterias$18: boolean doCall(java.lang.Object)>",
    "<asteroid.Criterias$19: boolean doCall(java.lang.Object)>",
    "<asteroid.Criterias$12: void <init>(java.lang.Object,org.codehaus.groovy.ast.ClassNode[])>",
    "<asteroid.Criterias$1: void <init>(java.lang.Object,java.lang.Class)>",
    "<asteroid.AbstractGlobalTransformation: void visit(org.codehaus.groovy.ast.ASTNode[],org.codehaus.groovy.control.SourceUnit)>",
    "<asteroid.Criterias$5: void <init>(java.lang.Object,java.lang.String)>",
    "<asteroid.utils.NodeUtils: java.lang.Boolean hasFieldOfType(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<asteroid.internal.LocalTransformation: org.codehaus.groovy.ast.expr.ListExpression resolveTargetFromElementType(java.util.List)>",
    "<asteroid.Criterias$8: void <init>(java.lang.Object,java.lang.String)>",
    "<asteroid.Criterias$18: void <init>(java.lang.Object,groovy.lang.Closure[])>",
    "<asteroid.utils.NodeUtils$2: void <init>(asteroid.utils.NodeUtils,java.lang.Object,java.lang.String)>",
    "<asteroid.Criterias$4: void <init>(java.lang.Object,java.lang.String)>",
    "<asteroid.utils.NodeUtils$3: void <init>(asteroid.utils.NodeUtils,java.lang.Object,java.lang.String)>",
    "<asteroid.Criterias$15: void <init>(java.lang.Object)>",
    "<asteroid.utils.NodeUtils$1: void <init>(asteroid.utils.NodeUtils,java.lang.Object)>",
    "<asteroid.Criterias$16: void <init>(java.lang.Object,int)>",
    "<asteroid.Criterias$11: void <init>(java.lang.Object)>",
    "<asteroid.Criterias$14: void <init>(java.lang.Object)>",
    "<asteroid.utils.StatementUtils$2: java.util.List doCall(java.util.List,asteroid.utils.StatementUtils$Group)>",
    "<asteroid.Criterias$1$1: void <init>(asteroid.Criterias$1,java.lang.Object)>",
    "<asteroid.Expressions: org.codehaus.groovy.ast.expr.BooleanExpression boolHasSamePropertyX(org.codehaus.groovy.ast.PropertyNode,org.codehaus.groovy.ast.expr.Expression)>",
    "<asteroid.Criterias$2: java.lang.Boolean doCall(org.codehaus.groovy.ast.AnnotatedNode)>",
    "<asteroid.Criterias$19: void <init>(java.lang.Object,groovy.lang.Closure[])>",
    "<asteroid.Criterias$2: void <init>(java.lang.Object,java.lang.String)>",
    "<asteroid.Criterias$7: void <init>(java.lang.Object,java.lang.String)>",
    "<asteroid.Criterias$17: void <init>(java.lang.Object,java.lang.Class)>",
    "<asteroid.utils.StatementUtils$1: void <init>(asteroid.utils.StatementUtils,java.lang.Object)>",
    "<asteroid.internal.LocalTransformation$1: void <init>(asteroid.internal.LocalTransformation,java.lang.Object)>",
    "<asteroid.Criterias$19$1: void <init>(asteroid.Criterias$19,java.lang.Object,java.lang.Object)>",
    "<asteroid.Criterias$18$1: void <init>(asteroid.Criterias$18,java.lang.Object,java.lang.Object)>",
    "<asteroid.nodes.ClassNodeBuilder: asteroid.nodes.ClassNodeBuilder clazzWithGenerics(java.lang.Class,org.codehaus.groovy.ast.GenericsType[])>",
    "<asteroid.Criterias$1: java.lang.Boolean doCall(org.codehaus.groovy.ast.AnnotatedNode)>",
    "<asteroid.Criterias$12: java.lang.Boolean doCall(org.codehaus.groovy.ast.expr.Expression)>",
    "<asteroid.Criterias$10: void <init>(java.lang.Object,java.lang.String)>",
    "<asteroid.utils.StatementUtils$2: void <init>(asteroid.utils.StatementUtils,java.lang.Object,java.util.Map)>",
    "<asteroid.Criterias$9: void <init>(java.lang.Object,java.lang.String)>",
    "<asteroid.utils.NodeUtils: org.codehaus.groovy.ast.AnnotationNode getAnnotationFrom(org.codehaus.groovy.ast.ClassNode,org.codehaus.groovy.ast.ClassNode)>",
    "<asteroid.Criterias$2$1: void <init>(asteroid.Criterias$2,java.lang.Object)>",
    "<asteroid.utils.NodeUtils: org.codehaus.groovy.ast.AnnotationNode getAnnotationFrom(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<asteroid.Criterias$6: void <init>(java.lang.Object,java.lang.String)>",
    "<asteroid.Criterias$3: void <init>(java.lang.Object,java.lang.String)>"
  ],
  "0.5.0": [
    "<asteroid.Criterias$13: void <init>(java.lang.Object)>",
    "<asteroid.Expressions: org.codehaus.groovy.ast.expr.MethodCallExpression callSuperX(java.lang.String,org.codehaus.groovy.ast.expr.Expression[])>",
    "<asteroid.Expressions: org.codehaus.groovy.ast.expr.BinaryExpression binX(org.codehaus.groovy.ast.expr.Expression,int,org.codehaus.groovy.ast.expr.Expression)>",
    "<asteroid.Expressions: org.codehaus.groovy.ast.expr.ClassExpression classX(java.lang.Class)>",
    "<asteroid.Criterias$19: boolean doCall(java.lang.Object)>",
    "<asteroid.Expressions: org.codehaus.groovy.ast.expr.BooleanExpression boolEqualsNullX(org.codehaus.groovy.ast.expr.Expression)>",
    "<asteroid.AbstractGlobalTransformation: void visit(org.codehaus.groovy.ast.ASTNode[],org.codehaus.groovy.control.SourceUnit)>",
    "<asteroid.Expressions: org.codehaus.groovy.ast.expr.DeclarationExpression varDeclarationX(java.lang.String,java.lang.Class,org.codehaus.groovy.ast.expr.Expression)>",
    "<asteroid.Criterias$15: void <init>(java.lang.Object)>",
    "<asteroid.utils.NodeUtils$1: void <init>(asteroid.utils.NodeUtils,java.lang.Object)>",
    "<asteroid.Criterias$11: void <init>(java.lang.Object)>",
    "<asteroid.nodes.PropertyNodeBuilder: org.codehaus.groovy.ast.PropertyNode build()>",
    "<asteroid.Expressions: org.codehaus.groovy.ast.expr.BooleanExpression boolSameX(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<asteroid.Statements: org.codehaus.groovy.ast.stmt.Statement ctorSuperS(org.codehaus.groovy.ast.expr.Expression[])>",
    "<asteroid.Expressions: org.codehaus.groovy.ast.expr.BooleanExpression boolIsZeroX(org.codehaus.groovy.ast.expr.Expression)>",
    "<asteroid.Criterias$19: void <init>(java.lang.Object,groovy.lang.Closure[])>",
    "<asteroid.Criterias$7: void <init>(java.lang.Object,java.lang.String)>",
    "<asteroid.Expressions: org.codehaus.groovy.ast.expr.MapExpression mapX(org.codehaus.groovy.ast.expr.MapEntryExpression[])>",
    "<asteroid.Criterias$9: void <init>(java.lang.Object,java.lang.String)>",
    "<asteroid.Criterias$2$1: void <init>(asteroid.Criterias$2,java.lang.Object)>",
    "<asteroid.utils.NodeUtils: org.codehaus.groovy.ast.AnnotationNode getAnnotationFrom(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<asteroid.Expressions: org.codehaus.groovy.ast.expr.ListExpression listX(org.codehaus.groovy.ast.expr.Expression[])>",
    "<asteroid.Expressions: org.codehaus.groovy.ast.expr.PropertyExpression propX(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<asteroid.AbstractLocalTransformation: void visit(org.codehaus.groovy.ast.ASTNode[],org.codehaus.groovy.control.SourceUnit)>",
    "<asteroid.utils.StatementUtils: java.util.List applyToStatementsByLabel(java.util.List,java.util.Map)>",
    "<asteroid.transformer.AbstractExpressionTransformer$1: void <init>(java.lang.Object)>",
    "<asteroid.Criterias$18: boolean doCall(java.lang.Object)>",
    "<asteroid.Criterias$12: void <init>(java.lang.Object,org.codehaus.groovy.ast.ClassNode[])>",
    "<asteroid.Criterias$1: void <init>(java.lang.Object,java.lang.Class)>",
    "<asteroid.Expressions: org.codehaus.groovy.ast.expr.MapEntryExpression mapEntryX(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<asteroid.Expressions: org.codehaus.groovy.ast.expr.MapEntryExpression mapEntryX(java.lang.String,org.codehaus.groovy.ast.expr.Expression)>",
    "<asteroid.Criterias$8: void <init>(java.lang.Object,java.lang.String)>",
    "<asteroid.Expressions: org.codehaus.groovy.ast.expr.BooleanExpression boolX(org.codehaus.groovy.ast.expr.Expression)>",
    "<asteroid.Expressions: org.codehaus.groovy.ast.expr.MethodCallExpression callX(org.codehaus.groovy.ast.expr.Expression,java.lang.String,org.codehaus.groovy.ast.expr.Expression[])>",
    "<asteroid.Criterias$16: void <init>(java.lang.Object,int)>",
    "<asteroid.Criterias$14: void <init>(java.lang.Object)>",
    "<asteroid.Expressions: org.codehaus.groovy.ast.expr.ConstantExpression constX(java.lang.Object)>",
    "<asteroid.Expressions: org.codehaus.groovy.ast.expr.BooleanExpression boolHasSamePropertyX(org.codehaus.groovy.ast.PropertyNode,org.codehaus.groovy.ast.expr.Expression)>",
    "<asteroid.Expressions: org.codehaus.groovy.ast.expr.BooleanExpression boolNotNullX(org.codehaus.groovy.ast.expr.Expression)>",
    "<asteroid.Expressions: org.codehaus.groovy.ast.expr.StaticMethodCallExpression staticCallX(org.codehaus.groovy.ast.ClassNode,java.lang.String,org.codehaus.groovy.ast.expr.Expression[])>",
    "<asteroid.Criterias$2: void <init>(java.lang.Object,java.lang.String)>",
    "<asteroid.Criterias$19$1: void <init>(asteroid.Criterias$19,java.lang.Object,java.lang.Object)>",
    "<asteroid.Criterias$18$1: void <init>(asteroid.Criterias$18,java.lang.Object,java.lang.Object)>",
    "<asteroid.Expressions: org.codehaus.groovy.ast.expr.ConstructorCallExpression newX(java.lang.Class,org.codehaus.groovy.ast.expr.Expression[])>",
    "<asteroid.Expressions: org.codehaus.groovy.ast.expr.DeclarationExpression varDeclarationX(java.lang.String,org.codehaus.groovy.ast.ClassNode,org.codehaus.groovy.ast.expr.Expression)>",
    "<asteroid.utils.NodeUtils: org.codehaus.groovy.ast.AnnotationNode getAnnotationFrom(org.codehaus.groovy.ast.ClassNode,org.codehaus.groovy.ast.ClassNode)>",
    "<asteroid.utils.NodeUtils: java.lang.Boolean isOrExtends(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<asteroid.nodes.MethodNodeBuilder: org.codehaus.groovy.ast.MethodNode build()>",
    "<asteroid.Criterias$6: void <init>(java.lang.Object,java.lang.String)>",
    "<asteroid.Expressions: org.codehaus.groovy.ast.expr.BooleanExpression boolIsInstanceOfX(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.ClassNode)>",
    "<asteroid.Expressions: org.codehaus.groovy.ast.expr.MethodCallExpression callThisX(java.lang.String,org.codehaus.groovy.ast.expr.Expression[])>",
    "<asteroid.utils.InternalUtils: java.util.List collect(java.lang.Object,groovy.lang.Closure)>",
    "<asteroid.nodes.ConstructorNodeBuilder: org.codehaus.groovy.ast.ConstructorNode build()>",
    "<asteroid.utils.NodeUtils: java.lang.Boolean isOrImplements(org.codehaus.groovy.ast.ClassNode,java.lang.Class)>",
    "<asteroid.Criterias$5: void <init>(java.lang.Object,java.lang.String)>",
    "<asteroid.Criterias$18: void <init>(java.lang.Object,groovy.lang.Closure[])>",
    "<asteroid.utils.NodeUtils$2: void <init>(asteroid.utils.NodeUtils,java.lang.Object,java.lang.String)>",
    "<asteroid.Criterias$4: void <init>(java.lang.Object,java.lang.String)>",
    "<asteroid.Expressions: org.codehaus.groovy.ast.expr.BooleanExpression boolIsInstanceOfX(org.codehaus.groovy.ast.expr.Expression,java.lang.Class)>",
    "<asteroid.Expressions: org.codehaus.groovy.ast.expr.ClosureExpression closureX(org.codehaus.groovy.ast.stmt.Statement,org.codehaus.groovy.ast.Parameter[])>",
    "<asteroid.utils.NodeUtils: void addImport(org.codehaus.groovy.ast.ClassNode,java.lang.Class)>",
    "<asteroid.nodes.ClassNodeBuilder: void <init>(java.lang.Class)>",
    "<asteroid.Expressions: org.codehaus.groovy.ast.expr.NotExpression notX(org.codehaus.groovy.ast.expr.Expression)>",
    "<asteroid.utils.InternalUtils: java.util.List collect(java.util.Collection)>",
    "<asteroid.Criterias$17: void <init>(java.lang.Object,java.lang.Class)>",
    "<asteroid.Expressions: org.codehaus.groovy.ast.expr.BooleanExpression boolHasSameFieldX(org.codehaus.groovy.ast.FieldNode,org.codehaus.groovy.ast.expr.Expression)>",
    "<asteroid.Criterias$1: java.lang.Boolean doCall(org.codehaus.groovy.ast.AnnotatedNode)>",
    "<asteroid.Criterias$12: java.lang.Boolean doCall(org.codehaus.groovy.ast.expr.Expression)>",
    "<asteroid.Expressions: org.codehaus.groovy.ast.expr.BinaryExpression binX(java.lang.String,int,java.lang.String)>",
    "<asteroid.nodes.ParameterNodeBuilder: org.codehaus.groovy.ast.Parameter build()>",
    "<asteroid.Expressions: org.codehaus.groovy.ast.expr.BooleanExpression boolIsOneX(org.codehaus.groovy.ast.expr.Expression)>",
    "<asteroid.Expressions: org.codehaus.groovy.ast.expr.ConstantExpression constX(java.lang.Object,java.lang.Boolean)>",
    "<asteroid.Criterias$3: void <init>(java.lang.Object,java.lang.String)>",
    "<asteroid.Expressions: org.codehaus.groovy.ast.expr.BooleanExpression boolIsTrueX(org.codehaus.groovy.ast.expr.Expression)>",
    "<asteroid.utils.StatementUtils: java.util.List groupStatementsByLabel(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<asteroid.Expressions: org.codehaus.groovy.ast.expr.StaticMethodCallExpression staticCallX(java.lang.Class,java.lang.String,org.codehaus.groovy.ast.expr.Expression[])>",
    "<asteroid.utils.NodeUtils: void addImport(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<asteroid.Expressions: org.codehaus.groovy.ast.expr.FieldExpression fieldX(org.codehaus.groovy.ast.FieldNode)>",
    "<asteroid.utils.NodeUtils: java.lang.Boolean hasFieldOfType(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<asteroid.utils.NodeUtils: java.lang.Boolean isOrExtends(org.codehaus.groovy.ast.ClassNode,java.lang.Class)>",
    "<asteroid.utils.NodeUtils: java.lang.Boolean isOrImplements(java.lang.Class,java.lang.Class)>",
    "<asteroid.utils.NodeUtils: java.lang.Boolean isOrImplements(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<asteroid.utils.NodeUtils$3: void <init>(asteroid.utils.NodeUtils,java.lang.Object,java.lang.String)>",
    "<asteroid.Expressions: org.codehaus.groovy.ast.expr.ClassExpression classX(org.codehaus.groovy.ast.ClassNode)>",
    "<asteroid.Statements: org.codehaus.groovy.ast.stmt.ReturnStatement returnS(org.codehaus.groovy.ast.expr.Expression)>",
    "<asteroid.Expressions: org.codehaus.groovy.ast.expr.MethodCallExpression callSuperX(java.lang.String)>",
    "<asteroid.Expressions: org.codehaus.groovy.ast.expr.VariableExpression varX(java.lang.String)>",
    "<asteroid.Criterias$1$1: void <init>(asteroid.Criterias$1,java.lang.Object)>",
    "<asteroid.Criterias$2: java.lang.Boolean doCall(org.codehaus.groovy.ast.AnnotatedNode)>",
    "<asteroid.Expressions: org.codehaus.groovy.ast.expr.VariableExpression varX(java.lang.String,org.codehaus.groovy.ast.ClassNode)>",
    "<asteroid.utils.NodeUtils: void addImport(org.codehaus.groovy.ast.ClassNode,java.lang.String,java.lang.String)>",
    "<asteroid.utils.StatementUtils$1: void <init>(asteroid.utils.StatementUtils,java.lang.Object)>",
    "<asteroid.Expressions: org.codehaus.groovy.ast.expr.MapExpression mapX(java.util.List)>",
    "<asteroid.internal.LocalTransformation$1: void <init>(asteroid.internal.LocalTransformation,java.lang.Object)>",
    "<asteroid.Expressions: org.codehaus.groovy.ast.expr.MethodCallExpression safeCallX(org.codehaus.groovy.ast.expr.Expression,java.lang.String,org.codehaus.groovy.ast.expr.Expression[])>",
    "<asteroid.nodes.ClassNodeBuilder: asteroid.nodes.ClassNodeBuilder clazzWithGenerics(java.lang.Class,org.codehaus.groovy.ast.GenericsType[])>",
    "<asteroid.Criterias$10: void <init>(java.lang.Object,java.lang.String)>",
    "<asteroid.utils.StatementUtils$2: void <init>(asteroid.utils.StatementUtils,java.lang.Object,java.util.Map)>",
    "<asteroid.nodes.ClassNodeBuilder: void <init>(java.lang.String)>",
    "<asteroid.utils.NodeUtils: void addInterfaces(org.codehaus.groovy.ast.ClassNode,java.lang.Class[])>",
    "<asteroid.nodes.FieldNodeBuilder: org.codehaus.groovy.ast.FieldNode build()>",
    "<asteroid.utils.NodeUtils: void addImport(org.codehaus.groovy.ast.ClassNode,java.lang.Class,java.lang.String)>",
    "<asteroid.Expressions: org.codehaus.groovy.ast.expr.BinaryExpression binEqX(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>"
  ]
}