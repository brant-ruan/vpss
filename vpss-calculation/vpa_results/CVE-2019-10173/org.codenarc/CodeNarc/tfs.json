{
  "1.6.1": [
    "<org.codenarc.tool.GenerateCodeNarcRulesProperties$_main_closure1$_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor$_visitMethodEx_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.ReportWriterFactory: org.codenarc.report.ReportWriter getReportWriter(java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure11$_closure13$_closure14: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.SynchronizedOnReentrantLockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGetterRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.BaselineResultsProcessor$_processResults_closure1: java.util.Map getBaselineViolationsMap()>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processImports_closure1: java.util.List getViolations()>",
    "<org.codenarc.rule.jdbc.JdbcConnectionReferenceRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: java.lang.String extractPropertyName(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.AnalysisContext: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitClosureExpression_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.VariableNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.CrapMetricRule: void <clinit>()>",
    "<org.codenarc.rule.grails.ClassConstraintsAndMapping$_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_writeReport_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.FilteredRuleSet: void addInclude(java.lang.String)>",
    "<org.codenarc.rule.concurrency.NestedSynchronizationAstVisitor$_visitClosureExpression_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.util.MultilineCommentChecker: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor: void whenOneStatementClosureFound(java.util.List,groovy.lang.Closure)>",
    "<org.codenarc.ruleset.RuleSetDelegate: org.codenarc.rule.Rule findRule(java.lang.String)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassComplete_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertyLockingAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20: java.lang.Object call(org.codenarc.rule.Rule,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryFinalOnPrivateMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: boolean isAGetterMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule: java.lang.Object this$dist$get$3(java.lang.String)>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility: void <clinit>()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_addViolationOnMismatch_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfViolationsWithPriority_closure3: int getPriority()>",
    "<org.codenarc.report.AbstractReportWriter$_getSortedRules_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.StatelessClassAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.ClassConstraintsAndMapping$_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ImportUtil$_sourceLineAndNumberForStarImport_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildBodySection_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.dry.DuplicateNumberLiteralRule: void <init>()>",
    "<org.codenarc.results.FileResults: int getNumberOfViolationsWithPriority(int,boolean)>",
    "<org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_collectAllPrivateMethods_closure2$_closure4: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.results.FileResults: java.util.List getChildren()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_writeReport_closure1$_closure8: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_writeReport_closure1: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor: void addViolationForMultipleDeclarations(java.util.Collection)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor$_closureReturnsArray_closure2: java.lang.Boolean getReturnsArray()>",
    "<org.codenarc.rule.groovyism.UseCollectNestedAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UseAssertEqualsInsteadOfAssertTrueAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.FileResults$_getNumberOfFilesWithViolations_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer: void configure(org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsNotBlankLineAfterOpeningBrace_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySelfAssignmentAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: boolean variableNotExcluded(java.util.regex.Pattern,java.lang.String)>",
    "<org.codenarc.rule.comments.JavadocEmptySinceTagRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitTestMethodWithoutAssertRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.naming.ObjectOverrideMisspelledMethodNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.AbstractClassWithoutAbstractMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.ClassReferenceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: void <init>()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildBodySection_closure2$_closure8: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.convention.VariableTypeRequiredAstVisitor$_visitDeclarationExpression_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_isAnnotatedWithOverride_closure6: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.basic.AbstractFinallyAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.BusyWaitAstVisitor: void visitForLoop(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure7$_closure8: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.tool.GenerateRuleSetAllRulesByCategory$_main_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.FilteredRuleSet$_getRules_closure1$_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.source.SourceFile: java.lang.String toString()>",
    "<org.codenarc.source.CustomCompilerPhaseSourceDecorator: org.codenarc.analyzer.SuppressionAnalyzer getSuppressionAnalyzer()>",
    "<org.codenarc.rule.design.AssignmentToStaticFieldFromInstanceMethodAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.concurrency.SynchronizedReadObjectMethodAstVisitor: boolean isSerializable(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor$_visitMethodEx_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.AssignCollectionSortAstVisitor: boolean isChainedSort(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToXorMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildBodySection_closure1$_closure8: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckBeforeInstanceOfAstVisitor: void addViolationIfTargetsMatch(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule: org.codenarc.rule.AstVisitor getAstVisitor(org.codenarc.source.SourceCode)>",
    "<org.codenarc.report.BaselineXmlReportWriter: groovy.lang.Closure buildMessageElement(org.codenarc.rule.Violation)>",
    "<org.codenarc.util.ImportUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitSetUpCallsSuperAstVisitor$_visitMethod_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllSummaryByPackageRowsRecursively_closure3$_closure13: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.size.CrapMetricRule: boolean isReady()>",
    "<org.codenarc.rule.dry.DuplicateNumberLiteralRule: void <clinit>()>",
    "<org.codenarc.rule.naming.ClassNameSameAsFilenameRule$_applyTo_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.formatting.FileEndsWithoutNewlineRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildScript_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: boolean isBrokenNullCheck(org.codehaus.groovy.ast.expr.BinaryExpression,java.lang.String,java.lang.String)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure18: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule: java.lang.Object this$dist$get$3(java.lang.String)>",
    "<org.codenarc.ruleset.TopLevelDelegate$_rule_closure1: org.codenarc.rule.Rule getRule()>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfFilesWithViolations_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceBeforeClosingBraceAstVisitor: void visitMapEntryExpression(org.codehaus.groovy.ast.expr.MapEntryExpression)>",
    "<org.codenarc.rule.convention.TernaryCouldBeElvisAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.FileCreateTempFileRule: void <init>()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_applyProperties_closure2: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.CollectionReturnTracker$_expressionReturnsList_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.CompileStaticRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.JavadocEmptyParamTagRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.WildcardPattern$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitTestMethodWithoutAssertAstVisitor: boolean hasTestAnnotationWithMember(org.codehaus.groovy.ast.ASTNode,java.lang.String)>",
    "<org.codenarc.ruleset.MovedRules$MovedToRuleSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryToStringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.WildcardPattern: boolean containsWildcards(java.lang.String)>",
    "<org.codenarc.rule.concurrency.DoubleCheckedLockingAstVisitor: void addViolationOnDoubleLocking(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor: boolean isIgnoredMethodName(java.lang.String)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor: void checkTypeIfNotDynamicallyTyped(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.InlineViolationsParser$ParseResult: void <init>()>",
    "<org.codenarc.rule.formatting.SpaceAroundMapEntryColonRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.LineLengthRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_findMatchingSuperClassMethod_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.DuplicateImportRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.util.BaselineResultsProcessor: void <init>(org.codenarc.util.io.Resource)>",
    "<org.codenarc.rule.concurrency.StaticSimpleDateFormatFieldAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.generic.StatelessClassRule: boolean shouldIgnoreField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.imports.AbstractImportRule$_findLineNumberOfFirstClassDeclaration_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.JsonReportWriter$_buildRulesElement_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30$_closure31: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.concurrency.SynchronizedMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4$_closure13$_closure15: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter$_writeSummary_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_visitClassEx_closure1: org.codehaus.groovy.ast.ClassNode getNode()>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor$_visitConstructorOrMethod_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.RuleSetDelegate$_findRule_closure2: java.lang.String getName()>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor: org.gmetrics.metric.Metric getMetric()>",
    "<org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule: java.lang.Object this$dist$get$3(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInVariableDeclarationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.LineLengthRule: boolean lineMatchesIgnoreLineRegex(java.lang.String)>",
    "<org.codenarc.ruleset.XmlFileRuleSet$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.ruleset.FilteredRuleSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: void saveMethodInfo(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.generic.IllegalClassMemberRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UseAssertTrueInsteadOfNegationAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.report.XmlReportWriter$_buildProjectElement_closure3: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.ruleset.GroovyDslRuleSet$_evaluateDsl_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectionCallAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: java.util.Map findSuperClassMethods(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertSingleViolation(java.lang.String,java.lang.Integer,java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainHasEqualsAstVisitor: boolean isNotInnerEnum(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.naming.VariableNameAstVisitor$_visitDeclarationExpression_closure1: org.codehaus.groovy.ast.expr.DeclarationExpression getDeclarationExpression()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToPlusMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.ConsecutiveStringConcatenationAstVisitor: void <clinit>()>",
    "<org.codenarc.source.AbstractSourceCode$_getLineNumberForCharacterIndex_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.util.GroovyVersion: boolean isGroovyVersion2()>",
    "<org.codenarc.rule.formatting.BlockEndsWithBlankLineAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToAndMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.SystemOutPrintAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.concurrency.SynchronizedOnReentrantLockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.SynchronizedOnReentrantLockAstVisitor: void visitSynchronizedStatement(org.codehaus.groovy.ast.stmt.SynchronizedStatement)>",
    "<org.codenarc.rule.basic.EqualsAndHashCodeRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ConstantIfExpressionAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.tool.GenerateCodeNarcRulesProperties: void <clinit>()>",
    "<org.codenarc.rule.naming.MethodNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBigDecimalInstantiationAstVisitor: void <init>()>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: boolean matches(java.util.regex.Pattern,java.lang.String)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToModMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor: void visitPropertyExpression(org.codehaus.groovy.ast.expr.PropertyExpression)>",
    "<org.codenarc.results.VirtualResults: void <init>(java.util.List)>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: boolean dynamicTypedAndNotExcludedVariable(org.codehaus.groovy.ast.Variable)>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintAstVisitor$_visitMethodCallExpression_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void checkAssignmentWithinDeclaration(org.codehaus.groovy.ast.expr.BinaryExpression,java.lang.String)>",
    "<org.codenarc.rule.generic.RequiredRegexRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.TopLevelDelegate: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToCompareToMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToCompareToMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckBeforeInstanceOfAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor: boolean hasOneStaticFieldNamedInstance(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.concurrency.SynchronizedOnGetClassAstVisitor: void visitSynchronizedStatement(org.codehaus.groovy.ast.stmt.SynchronizedStatement)>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildBodySection_closure2$_closure8: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolation_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25: org.codenarc.report.SortableHtmlReportWriter$ViolationAndPath getVp()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure14: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor: void visitVariableExpression(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.ruleset.XmlFileRuleSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.PathUtil: java.lang.String normalizePath(java.lang.String)>",
    "<org.codenarc.report.InlineXmlReportWriter$_buildViolationElement_closure1: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_getMethodCallsAndMapKeys_closure5: java.util.Map getResult()>",
    "<org.codenarc.rule.convention.CouldBeElvisAstVisitor: org.codehaus.groovy.ast.expr.Expression getSingleStatementExpressionOrNull(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_writeReport_closure1$_closure8: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.util.ImportUtil: java.util.List getAllImports(org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalRule$_getViolations_closure1: java.lang.Object doCall(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer: org.codenarc.results.DirectoryResults processDirectory(java.lang.String,org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.rule.groovyism.ExplicitStackInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasOneStaticFieldOfItself_closure2: org.codehaus.groovy.ast.ClassNode getClassNode()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryConstructorAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.NestedForLoopAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToXorMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.ruleset.MovedRules$MovedToRuleSet: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.util.ModifiersUtil$_parseModifiersList_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueAstVisitor: org.codehaus.groovy.ast.expr.Expression getActualArgument(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.ruleset.RuleSetDelegate$_findRule_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.UseCollectNestedAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToDivMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryConstructorAstVisitor: boolean hasAnnotations(org.codehaus.groovy.ast.ConstructorNode)>",
    "<org.codenarc.ruleset.RuleSetDelegate: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.AbstractReportWriter: java.lang.String getHtmlDescriptionForRule(org.codenarc.rule.Rule)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: org.codehaus.groovy.ast.MethodNode findMatchingSuperClassMethod(java.lang.String,java.util.List)>",
    "<org.codenarc.rule.formatting.BracesForForLoopAstVisitor$_findLastLineOfForExpressions_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: void markVariableAsReferenced(java.lang.String,org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.rule.basic.HardcodedWindowsRootDirectoryAstVisitor: void addViolationForWindowsPath(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.groovyism.UseCollectNestedAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.basic.EmptySwitchStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitFailWithoutMessageRule: void <init>()>",
    "<org.codenarc.rule.basic.AssignmentInConditionalRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_visitMethod_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.AssignmentToStaticFieldFromInstanceMethodAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: org.codehaus.groovy.ast.ModuleNode getAst()>",
    "<org.codenarc.rule.basic.EmptyInstanceInitializerAstVisitor: void visitObjectInitializerStatements(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasOneStaticFieldNamedInstance_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.AbstractFinallyAstVisitor$_isStatementWithinFinally_closure1: org.codehaus.groovy.ast.stmt.Statement getStatement()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.FieldReferenceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12$_closure15: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.basic.EmptyTryBlockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults$_removeViolation_closure2: org.codenarc.rule.Violation getV()>",
    "<org.codenarc.rule.generic.StatelessClassAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: void beforeBlock()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21$_closure22: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.BuilderMethodWithSideEffectsAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: void checkIfThereIsBlankLineAfterOpeningBrace(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.convention.IfStatementCouldBeTernaryAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.NonFinalSubclassOfSensitiveInterfaceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.InlineViolationsParser: void <init>()>",
    "<org.codenarc.rule.serialization.SerialPersistentFieldsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementAstVisitor$_allBranchesReturn_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21$_closure23: org.codenarc.rule.Rule getRule()>",
    "<org.codenarc.rule.junit.UseAssertNullInsteadOfAssertEqualsRule: void <init>()>",
    "<org.codenarc.rule.junit.ChainedTestAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.source.CustomCompilerPhaseSourceDecorator: java.lang.String getName()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_visitClassEx_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.JsonReportWriter$_buildFileElement_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.comments.AbstractJavadocEmptyTagRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: java.util.List allExceptLastElement(java.util.List)>",
    "<org.codenarc.ruleset.TopLevelDelegate$_rule_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.BaselineViolation: int hashCode()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToPutAtMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyWhileStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter: groovy.lang.Closure buildFileElement(org.codenarc.results.FileResults)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckAstVisitor: boolean isNullCheckAgainstThisReference(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.InlineViolationsParser$_parseLine_closure1: int getLineNumber()>",
    "<org.codenarc.ant.CodeNarcTask: java.lang.ClassLoader classLoaderForPaths(java.lang.String[],java.lang.ClassLoader)>",
    "<org.codenarc.rule.comments.JavadocEmptyLastLineRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitMapExpression_closure5: org.codehaus.groovy.ast.expr.MapExpression getMapExpression()>",
    "<org.codenarc.rule.design.CloneWithoutCloneableAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.convention.NoFloatRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ConstantsOnlyInterfaceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitPublicNonTestMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ParameterNameAstVisitor$_processParameters_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.DeadCodeAstVisitor$_visitBlockStatement_closure1: org.codehaus.groovy.ast.stmt.BlockStatement getBlock()>",
    "<org.codenarc.report.XmlReportWriter$_buildSourceLineElement_closure7: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ConstantsOnlyInterfaceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.AbstractClassWithPublicConstructorAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.TextReportWriter$_writeSummary_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.source.CustomCompilerPhaseSourceDecorator: java.lang.String getPath()>",
    "<org.codenarc.rule.basic.AssignmentInConditionalAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor: void visitConstantExpression(org.codehaus.groovy.ast.expr.ConstantExpression)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure18: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitUnnecessarySetUpAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: java.lang.Number isPrivate(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.dry.DuplicateNumberLiteralRule: java.util.Set parseIgnoreValues()>",
    "<org.codenarc.report.HtmlReportWriter$_buildBodySection_closure1$_closure8: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.imports.UnusedImportRule: boolean isImportStatementForAlias(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToDivMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor: void <init>()>",
    "<org.codenarc.rule.basic.DuplicateSetValueAstVisitor: void addViolationForDuplicate(org.codehaus.groovy.ast.expr.ConstantExpression)>",
    "<org.codenarc.util.BaselineResultsProcessor$_processResults_closure1$_closure4: org.codenarc.results.FileResults getFileResults()>",
    "<org.codenarc.report.XmlReportWriter$_buildProjectElement_closure3$_closure11$_closure12: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.imports.UnusedImportRule: int countUsage(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.exceptions.ExceptionExtendsErrorRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildHeaderSection_closure4$_closure10: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.ruleset.FilteredRuleSet$_getRules_closure1$_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.JUnitUtil$_isTestMethod_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27: java.lang.Object doCall(org.codenarc.rule.Violation)>",
    "<org.codenarc.ruleset.FilteredRuleSet: void addExclude(java.lang.String)>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_visitMethod_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonRule: boolean endsWithSemicolon(java.lang.String,int)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonAstVisitor$_removeAnyViolationsForSameLine_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.rule.convention.NoJavaUtilDateAstVisitor$_visitImports_closure1: java.lang.Object doCall(org.codehaus.groovy.ast.ImportNode)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3$_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.InlineViolationsParser: java.lang.String inlineViolation(java.lang.String)>",
    "<org.codenarc.rule.junit.UnnecessaryFailAstVisitor: void visitCatchStatement(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.rule.groovyism.AssignCollectionUniqueAstVisitor: void visitDeclarationExpression(org.codehaus.groovy.ast.expr.DeclarationExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInFieldDeclarationAstVisitor: boolean contains(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.InlineViolationsParser: void parseLine(java.lang.String,int)>",
    "<org.codenarc.rule.formatting.BracesForClassRule: void applyToClassNode(org.codehaus.groovy.ast.ClassNode,int,java.lang.String,java.util.List)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitBlockStatement_closure6: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBooleanExpressionAstVisitor: void visitNotExpression(org.codehaus.groovy.ast.expr.NotExpression)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_getMethodCallsAndMapKeys_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.tool.GenerateUtil$_sortRules_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.UseAssertTrueInsteadOfNegationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateMapLiteralAstVisitor$_visitMapExpression_closure1: org.codehaus.groovy.ast.expr.MapExpression getExpression()>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor$_processParameters_closure1: java.lang.String getMethodName()>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor: java.lang.String extractMethodName(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryObjectReferencesAstVisitor$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.SwallowThreadDeathRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCatchBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.UnusedImportRule$_findReference_closure3: java.lang.String getAlias()>",
    "<org.codenarc.rule.generic.IllegalStringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_getAnonymousClasses_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.AbstractClassWithoutAbstractMethodAstVisitor: boolean skipSuperClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.design.PublicInstanceFieldAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor: void addViolation(org.gmetrics.result.MetricResult,java.lang.String)>",
    "<org.codenarc.rule.concurrency.SynchronizedReadObjectMethodAstVisitor: boolean isSynchronizedBlock(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.concurrency.SynchronizedOnStringAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceAstVisitor: void processMethodNode(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.dry.DuplicateMapLiteralAstVisitor$_visitMapExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitListExpression_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor$_addViolationsForInstanceFields_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.ClassJavadocRule$_applyTo_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_buildProjectElement_closure3$_closure11: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.exceptions.ExceptionNotThrownAstVisitor: boolean isLastStatementAnExceptionConstructorCall(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBooleanInstantiationAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_getAnonymousClasses_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.braces.IfStatementBracesRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.FileResults$_getNumberOfFilesWithViolations_closure2: int getMaxPriority()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure2: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule: java.util.List getViolations(org.codenarc.rule.AstVisitor,org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.basic.IntegerGetIntegerAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.UnsafeImplementationAsMapRule: void <init>()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_findMatchingSuperClassMethod_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_generateAllPossibleParameterSignatures_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor: void addViolationWithMessage(org.codehaus.groovy.ast.expr.MethodCallExpression,org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolations_closure3$_closure6: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.imports.AbstractImportRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.CommentsUtil: boolean hasTextOnNextLine(org.codenarc.source.SourceCode,int)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.ruleset.MovedRules$MovedToRuleSet: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor: boolean hibernateWouldCreateColumnFor(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.formatting.LineLengthRule: boolean sourceViolatesLineLengthRule(java.lang.String)>",
    "<org.codenarc.rule.basic.EmptyWhileStatementAstVisitor: void visitWhileLoop(org.codehaus.groovy.ast.stmt.WhileStatement)>",
    "<org.codenarc.rule.junit.JUnitTearDownCallsSuperRule: void <init>()>",
    "<org.codenarc.rule.exceptions.ExceptionNotThrownAstVisitor: org.codehaus.groovy.ast.stmt.Statement getLastStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure15$_closure16: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor$_visitCatchStatement_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateListLiteralAstVisitor$_visitListExpression_closure1: org.codehaus.groovy.ast.expr.ListExpression getExpression()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_visitMethodEx_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule$_addOrderingViolations_closure1: java.lang.String getEarlyPattern()>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_applyTo_closure2: java.util.List getViolations()>",
    "<org.codenarc.ant.CodeNarcTask: void execute()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryConstructorAstVisitor: boolean isEmptyOrJustCallsSuper(org.codehaus.groovy.ast.ConstructorNode)>",
    "<org.codenarc.CodeNarc$_execute_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToOrMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.imports.UnnecessaryGroovyImportRule$_applyTo_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToPutAtMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule: void this$dist$set$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.basic.BitwiseOperatorInConditionalAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ParameterReassignmentAstVisitor: boolean isReassigningAParameter(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.analyzer.AnalyzerException: void <init>(java.lang.Throwable)>",
    "<org.codenarc.rule.concurrency.DoubleCheckedLockingRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.PublicFinalizeMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_generateAllPossibleParameterSignatures_closure4: org.codehaus.groovy.ast.MethodNode getMethodNode()>",
    "<org.codenarc.results.FileResults: int getNumberOfFilesWithViolations(int,boolean)>",
    "<org.codenarc.rule.basic.AssertWithinFinallyBlockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BlockStartsWithBlankLineAstVisitor: void checkForViolations(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.junit.JUnitAssertAlwaysFailsRule: void <init>()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToDivMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsServletContextReferenceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.RuleSetUtil$_loadRuleScriptFile_closure1: java.lang.Class getRuleClass()>",
    "<org.codenarc.rule.groovyism.UseCollectNestedAstVisitor: void checkForCallToClosureParameter(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.SpaceAroundMapEntryColonAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: boolean isNotOpeningSquareBracket(java.lang.String,int)>",
    "<org.codenarc.rule.formatting.SpaceAfterIfAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.SpockIgnoreRestUsedAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildReportElement_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor: void extractTransients(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.imports.UnusedImportRule$_findReference_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.BlockStartsWithBlankLineAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor$_visitConstantExpression_closure1: org.codehaus.groovy.ast.expr.ConstantExpression getExpression()>",
    "<org.codenarc.util.ImportUtil$_sortImportsByLineNumber_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor: void visitCastExpression(org.codehaus.groovy.ast.expr.CastExpression)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19$_closure20: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsRule: void <init>()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryParenthesesForMethodCallWithClosureAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor: boolean isNotIgnoredMethodParameterName(org.codehaus.groovy.ast.Parameter)>",
    "<org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter: groovy.lang.Closure buildFileElement(org.codenarc.results.FileResults)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor$_isUsedInAnyAnnotationOnCurrentAnnotatedNode_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ConsecutiveUtils: boolean areJoinableConstants(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.design.CollectionReturnTracker$_expressionReturnsList_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_getMethodCallsAndMapKeys_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildViolationElement_closure6$_closure15: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor: boolean isIgnoredOneElementList(org.codehaus.groovy.ast.expr.ListExpression)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassEx_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14$_closure15: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10$_closure11: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.CompileStaticlVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.GroovyDslRuleSet$_evaluateDsl_closure2: groovy.lang.GroovyShell getShell()>",
    "<org.codenarc.util.PropertyUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.AssignmentToStaticFieldFromInstanceMethodAstVisitor: void <init>()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure7$_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.MovedRules: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor$_visitMethodCallExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.FieldReferenceAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unused.AbstractLastStatementInBlockAstVisitor: void <init>()>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure18: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.concurrency.ThreadLocalNotStaticFinalAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.InsecureRandomRule: void <init>()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor: boolean doesExtendClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.AbstractRuleTestCase: void testThatInvalidCodeHasNoViolations()>",
    "<org.codenarc.rule.junit.UseAssertFalseInsteadOfNegationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.jdbc.JdbcStatementReferenceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor: void visitClassComplete(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.convention.MethodReturnTypeRequiredAstVisitor: boolean isNotIgnoredMethodName(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor: boolean isUsedInAnyAnnotationOnCurrentAnnotatedNode(org.codehaus.groovy.ast.expr.ConstantExpression)>",
    "<org.codenarc.util.BaselineResultsProcessor$_processResults_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationAstVisitor$_visitConstructorCallExpression_closure1: java.lang.Object doCall(java.lang.Class)>",
    "<org.codenarc.rule.concurrency.SynchronizedOnStringAstVisitor: void visitSynchronizedStatement(org.codehaus.groovy.ast.stmt.SynchronizedStatement)>",
    "<org.codenarc.rule.design.LocaleSetDefaultAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfFilesWithViolations_closure4: int getMaxPriority()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void visitSwitch(org.codehaus.groovy.ast.stmt.SwitchStatement)>",
    "<org.codenarc.rule.naming.ParameterNameRule: void validate()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCallToSubstringAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.naming.InterfaceNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryModOneAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.size.NestedBlockDepthRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.junit.UseAssertTrueInsteadOfNegationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor: void addViolationsForMultipleFieldDeclarations(java.util.Collection)>",
    "<org.codenarc.report.JsonReportWriter$_buildPackageElements_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.SynchronizedMethodAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.serialization.EnumCustomSerializationIgnoredRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.size.MethodCountAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleregistry.RuleRegistryInitializer: void initializeRuleRegistry()>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_visitMethod_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToRightShiftMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor: void processParameters(org.codehaus.groovy.ast.Parameter[],java.lang.String)>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: java.lang.String line(int)>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor$_visitForLoop_closure2: org.codehaus.groovy.ast.stmt.ForStatement getForLoop()>",
    "<org.codenarc.ruleset.CompositeRuleSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.CollectAllIsDeprecatedAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.design.AbstractClassWithPublicConstructorAstVisitor$_visitClassEx_closure1: org.codehaus.groovy.ast.ClassNode getNode()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementAstVisitor: boolean isValidElseBlock(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor$_hasTrailingComma_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.naming.VariableNameAstVisitor$_visitDeclarationExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ThrowExceptionFromFinallyBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.MissingBlankLineAfterPackageRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.naming.FactoryMethodNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor$_visitMethodCallExpression_closure2: org.codehaus.groovy.ast.expr.MethodCallExpression getExpression()>",
    "<org.codenarc.CodeNarc$_parseArgs_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.AbstractClassNameRule: boolean isReady()>",
    "<org.codenarc.rule.basic.EmptyCatchBlockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateMapLiteralAstVisitor: void visitMapExpression(org.codehaus.groovy.ast.expr.MapExpression)>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.junit.JUnitPublicPropertyRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_collectAllPrivateMethods_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.source.SourceFile: void <init>(java.io.File)>",
    "<org.codenarc.rule.design.NestedForLoopAstVisitor: void <init>()>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: boolean isNotExpressionWithPropertyAccessForName(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildBodySection_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_collectAllPrivateFields_closure2$_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure11$_closure13: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.CustomCompilerPhaseSourceDecorator: java.lang.String getText()>",
    "<org.codenarc.rule.junit.JUnitLostTestRule: void <init>()>",
    "<org.codenarc.report.JsonReportWriter: void writeReport(java.io.Writer,org.codenarc.AnalysisContext,org.codenarc.results.Results)>",
    "<org.codenarc.util.io.ClassPathResource: java.io.InputStream getInputStream()>",
    "<org.codenarc.rule.generic.IllegalClassReferenceRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.design.CloneWithoutCloneableRule: void <init>()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_visitMethodEx_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.report.TextReportWriter: void writeFileViolations(java.io.Writer,org.codenarc.results.FileResults)>",
    "<org.codenarc.rule.basic.DuplicateSetValueAstVisitor: void visitCastExpression(org.codehaus.groovy.ast.expr.CastExpression)>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterAstVisitor: void <init>()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationToGetClassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: java.lang.Boolean memoizedMethodPriv$isSingleLineClassClassNode(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryModOneRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor: boolean isEmpty(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.serialization.SerialVersionUIDAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_visitClosureExpression_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure13: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.InterfaceNameSameAsSuperInterfaceAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter: java.lang.Object this$dist$get$3(java.lang.String)>",
    "<org.codenarc.rule.formatting.BlankLineBeforePackageRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor: boolean isFloatTypeName(java.lang.String)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_writeReport_closure1$_closure8: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.JUnitUtil$_isAssertCallWithNonNullConstantValue_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.dry.DuplicateStringLiteralRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.serialization.SerialPersistentFieldsAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.formatting.SpaceAfterClosingBraceAstVisitor: boolean isNotAllowedCharacterAfterClass(java.lang.String,int)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_getFirstValue_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.dry.DuplicateListLiteralAstVisitor$_visitListExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.XmlReportWriter: groovy.lang.Closure buildViolationElement(org.codenarc.rule.Violation)>",
    "<org.codenarc.report.XmlReportWriter$_buildFileElement_closure5$_closure16: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor: java.util.List getAnonymousClasses()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementAstVisitor$_visitIfElse_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterCodeVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ant.CodeNarcTask: org.codenarc.analyzer.SourceAnalyzer createSourceAnalyzer()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure26: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckAstVisitor: boolean isNotNullCheckAgainstThisReference(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.formatting.AbstractSpaceAroundBraceAstVisitor: int indexOfClosingBrace(java.lang.String,int)>",
    "<org.codenarc.rule.junit.CoupledTestCaseAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.exceptions.CatchExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.UnsafeImplementationAsMapAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.BuilderMethodWithSideEffectsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ImplementationAsTypeRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToPlusMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.convention.TernaryCouldBeElvisAstVisitor: boolean areTheSame(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor: void <init>(java.util.List,java.util.Set)>",
    "<org.codenarc.report.XmlReportWriter$_buildRulesElement_closure9$_closure19: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure15: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalClassMemberAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: boolean isOwnedByClassOrItsOuterClass(org.codehaus.groovy.ast.FieldNode,org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.dry.DuplicateListLiteralAstVisitor: void visitListExpression(org.codehaus.groovy.ast.expr.ListExpression)>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_getViolations_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.CouldBeSwitchStatementAstVisitor: java.lang.Boolean isSameLeftExpressionAsPreviousIfStatement(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.util.BaselineResultsProcessor$_addFilesWithViolations_closure3: java.util.List getMap()>",
    "<org.codenarc.rule.basic.ComparisonWithSelfAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsNotBlankLineAfterOpeningBrace_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor$_visitMethodCallExpression_closure2: org.codehaus.groovy.ast.expr.MethodCallExpression getCall()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor$_expressionContainsBannedCharacters_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_visitMethodEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainWithServiceReferenceRule: void <init>()>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer$_processDirectory_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_visitMethod_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.JsonReportWriter$_buildPackageElements_closure1: java.util.Map getPackageItem()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor$_closureReturnsCollection_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter: java.util.List buildPackageElements(org.codenarc.results.Results)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_writeReport_closure1$_closure8: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_setupFlexibleIndentForAnyClosureParameterBlocks_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThreadYieldAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor$_visitCatchStatement_closure2: java.util.List getLoggerNames()>",
    "<org.codenarc.tool.GenerateCodeNarcRulesProperties$_main_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectMapKeys_closure6: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.comments.JavadocEmptyVersionTagRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule$_applyTo_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ParameterCountAstVisitor: java.lang.String getName(org.codehaus.groovy.ast.ConstructorNode)>",
    "<org.codenarc.rule.security.UnsafeImplementationAsMapAstVisitor: java.util.List getMethodsImplementedByCoercion(org.codehaus.groovy.ast.expr.MapExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInMethodDeclarationAstVisitor: boolean contains(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor: boolean closureReturnsCollection(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.basic.EmptyInstanceInitializerRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void processTernaryExpression(org.codehaus.groovy.ast.expr.TernaryExpression)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectMapKeys_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.AbstractJavadocMissingDescriptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.StaticConnectionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3$_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitCatchStatement_closure3: org.codehaus.groovy.ast.stmt.CatchStatement getStatement()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14$_closure16: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor: org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility getVisibility(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.basic.AbstractFinallyAstVisitor: void visitTryCatchFinally(org.codehaus.groovy.ast.stmt.TryCatchStatement)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitMapExpression_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor: void <init>()>",
    "<org.codenarc.rule.generic.IllegalClassReferenceRule: void <init>()>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInMethodDeclarationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.IntegerGetIntegerRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor$_extractTransients_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.source.AbstractSourceCode$_removeGrabTransformation_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor$_isNamedArgumentsListContainingThis_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.JsonReportWriter: java.util.Map buildProjectElement(org.codenarc.AnalysisContext)>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.report.XmlReportWriter$_buildFileElement_closure5$_closure16: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure26: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.formatting.AbstractSpaceAroundBraceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.jdbc.JdbcStatementReferenceRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.jdbc.JdbcConnectionReferenceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.FieldNameAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildViolationElement_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfFilesWithViolations_closure4: boolean getRecursive()>",
    "<org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule: java.lang.Object this$dist$invoke$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.generic.IllegalClassReferenceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.PrintlnAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor: boolean hasTrailingComma(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.report.AbstractHtmlReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.RuleSetDelegate$_findRule_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: boolean isCharacterPrecedingClosureInvalid(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_visitMethod_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateStringLiteralRule: void <init>()>",
    "<org.codenarc.rule.ClassReferenceAstVisitor: void checkNodeType(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.CommentsUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.ruleset.ListRuleSet: void <init>(java.util.List)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckAstVisitor: void visitBooleanExpression(org.codehaus.groovy.ast.expr.BooleanExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCastAstVisitor: boolean isUnnecessaryCast(org.codehaus.groovy.ast.expr.CastExpression)>",
    "<org.codenarc.report.AbstractReportWriter: java.lang.String getCodeNarcVersion()>",
    "<org.codenarc.tool.GenerateRuleIndexPage$_main_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.UnsafeArrayDeclarationAstVisitor: boolean isArray(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.formatting.BracesForMethodAstVisitor: boolean lineContainsMethodName(java.lang.String,org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDotClassAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_collectAllPrivateMethods_closure2$_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCatchBlockAstVisitor$_visitTryCatchFinally_closure1: java.lang.Object doCall(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.rule.junit.JUnitUtil$_isTestMethod_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintAstVisitor: void <init>()>",
    "<org.codenarc.rule.junit.JUnitPublicPropertyRule: void <init>()>",
    "<org.codenarc.rule.generic.RequiredRegexRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.junit.UseAssertTrueInsteadOfAssertEqualsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule: void this$dist$set$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean isTrueExpression(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure6: org.codenarc.results.FileResults getResults()>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19$_closure21: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.tool.GenerateRuleSetAllRules: void <clinit>()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectIncludedProperties_closure7: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.ruleset.ListRuleSet$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.DuplicateMapKeyAstVisitor$_visitMapExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PublicInstanceFieldAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertyLockingAstVisitor: void addViolationOnMismatch(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.basic.RemoveAllOnSelfAstVisitor: boolean isMethodNamed(org.codehaus.groovy.ast.expr.MethodCallExpression,java.lang.String)>",
    "<org.codenarc.rule.design.InstanceofRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.StringSourceAnalyzer: void <init>(java.lang.String)>",
    "<org.codenarc.util.SourceCodeUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule$_applyTo_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceAfterWhileAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.SystemOutPrintRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.formatting.BracesForForLoopAstVisitor$_findLastLineOfForExpressions_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.MissingNewInThrowStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionAstVisitor: boolean hasJUnit4Annotation(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.ruleset.MovedRules$MovedToRuleSet: java.lang.String messageFor(java.lang.String)>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule$_applyTo_closure1: java.util.List getViolations()>",
    "<org.codenarc.report.IdeTextReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.ExceptionExtendsThrowableAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_processMethodOrConstructorCall_closure3: org.codehaus.groovy.ast.expr.MethodCall getCall()>",
    "<org.codenarc.rule.grails.ClassConstraintsAndMapping$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.size.ClassSizeAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.InlineViolationsParser$ParseResult: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.convention.ImplicitReturnStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.WaitOutsideOfWhileLoopAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationAstVisitor$_visitConstructorCallExpression_closure1: org.codehaus.groovy.ast.expr.ConstructorCallExpression getCall()>",
    "<org.codenarc.rule.formatting.BracesForClassRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.naming.VariableNameRule: void <init>()>",
    "<org.codenarc.rule.logging.LoggerWithWrongModifiersRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter$_buildPackageElements_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.jdbc.DirectConnectionManagementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalClassMemberRule: void <init>()>",
    "<org.codenarc.rule.generic.IllegalClassMemberAstVisitor: boolean matchesIgnoreMethodsWithAnnotationNames(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.design.AbstractClassWithPublicConstructorAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateUtil$_createSortedListOfAllRules_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.CloneableWithoutCloneRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_getAnonymousClasses_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24: java.lang.Object doCall(org.codenarc.report.SortableHtmlReportWriter$ViolationAndPath)>",
    "<org.codenarc.rule.ClassReferenceAstVisitor: java.lang.String formatViolationMessage(java.lang.String)>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: void visitClassComplete(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure15: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.BracesForForLoopAstVisitor$_findLastLineOfForExpressions_closure1: java.lang.Integer getLoopExpressionLastLine()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure25: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.braces.WhileStatementBracesRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.BaselineResultsProcessor$_removeMatchingViolation_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer: boolean matches(org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.InlineViolationsParser: java.util.Map createViolation(int,java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.concurrency.StaticMatcherFieldAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolations_closure3$_closure6: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToModMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_addViolationOnMismatch_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.BigDecimalInstantiationAstVisitor: boolean isConstructorCallAViolation(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceRule: boolean isReady()>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertSingleViolation(java.lang.String,groovy.lang.Closure)>",
    "<org.codenarc.rule.junit.UseAssertTrueInsteadOfAssertEqualsAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor: boolean isClosureParameterOutsideParentheses(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet: void <clinit>()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectIncludedProperties_closure8: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor: java.util.Set collectIncludedProperties(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.CollectAllIsDeprecatedAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor: void addViolationIfDuplicate(org.codehaus.groovy.ast.expr.Expression,boolean)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBigIntegerInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UseAssertTrueInsteadOfAssertEqualsRule: void <init>()>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsRule: void <clinit>()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_getFileResults_closure4: java.util.List getFileResults()>",
    "<org.codenarc.rule.concurrency.StaticCalendarFieldAstVisitor: boolean isCalendarFactoryMethodCall(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.naming.FieldNameAstVisitor: boolean isIgnoredPropertyName(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.size.MethodCountRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DryUtil: boolean haveTheSameConstantOrLiteralValue(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterAstVisitor$_hasItParameter_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.serialization.SerializableClassMustDefineSerialVersionUIDAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4: boolean getAllPackages()>",
    "<org.codenarc.rule.design.BooleanMethodReturnsNullAstVisitor: boolean codeReturnsBoolean(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.comments.ClassJavadocRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.BaselineResultsProcessor: void processResults(org.codenarc.results.Results)>",
    "<org.codenarc.rule.naming.MethodNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter: java.util.Map buildReportElement()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_getFirstValue_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueAstVisitor: boolean isConvertibleToDouble(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectionCallAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure5$_closure13: org.codenarc.results.FileResults getResults()>",
    "<org.codenarc.rule.junit.SpockIgnoreRestUsedAstVisitor$_visitMethod_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildRulesElement_closure9$_closure19: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCallToSubstringAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.ChainedTestRule: void <init>()>",
    "<org.codenarc.rule.exceptions.ThrowThrowableRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitListExpression_closure4: org.codehaus.groovy.ast.expr.ListExpression getListExpression()>",
    "<org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule$1: void <init>(org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_visitMethod_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.SynchronizedReadObjectMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: boolean isNotAutoBoxed(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.ruleset.MovedRules$MovedToRuleSet: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure19: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_findSuperClassMethods_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsNotBlankLineAfterOpeningBrace_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBooleanExpressionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor: void <init>(java.util.Map,java.util.List)>",
    "<org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildBodySection_closure2$_closure8: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.CloseWithoutCloseableRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor$_visitMethodEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule$1: void <init>(org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule,java.lang.Object)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void visitConstructor(org.codehaus.groovy.ast.ConstructorNode)>",
    "<org.codenarc.rule.junit.JUnitTearDownCallsSuperAstVisitor$_visitMethod_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: void <init>()>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterAstVisitor: boolean hasItParameter(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.junit.UseAssertNullInsteadOfAssertEqualsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.CyclomaticComplexityAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule$_addOrderingViolations_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.FilteredRuleSet$_getRules_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.XmlReportWriter$_buildMessageElement_closure8: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4$_closure13: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.FilteredRuleSet: void <init>(org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_writeReport_closure1$_closure8: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.design.ArrayReturnTracker: void callBackForArrayReturns(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility: org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility $INIT(java.lang.Object[])>",
    "<org.codenarc.rule.formatting.BracesForTryCatchFinallyAstVisitor: void visitTryCatchFinally(org.codehaus.groovy.ast.stmt.TryCatchStatement)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySubstringAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_writeReport_closure1: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryTearDownAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.AbstractSourceCode: int getAstCompilerPhase()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_getAnonymousClasses_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.generic.StatelessClassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.VariableNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIntegerInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.PackageNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.CrapMetricAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void checkForCorrectColumn(org.codehaus.groovy.ast.ASTNode,java.lang.String,int)>",
    "<org.codenarc.rule.formatting.BlockStartsWithBlankLineAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule$_applyTo_closure1: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.formatting.BracesForTryCatchFinallyAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectIncludedProperties_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.UnsafeArrayDeclarationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor$_visitMethodCallExpression_closure1: org.codehaus.groovy.ast.expr.MethodCallExpression getCall()>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor$_visitConstructorOrMethod_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule: java.lang.Object this$dist$get$3(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor$_visitCastExpression_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUnnecessarySetUpAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildMessageElement_closure7: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.LocaleSetDefaultRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter: java.lang.String getViolationLocationString(org.codenarc.rule.Violation,java.lang.String)>",
    "<org.codenarc.rule.design.BooleanMethodReturnsNullAstVisitor: boolean closureReturnsBoolean(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertyLockingRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitImports_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor$_visitMethodEx_closure2: org.codehaus.groovy.ast.MethodNode getNode()>",
    "<org.codenarc.rule.formatting.SpaceAfterForRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure4$_closure12: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.AbstractClassWithPublicConstructorAstVisitor$_visitClassEx_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.results.FileResults$_getNumberOfViolationsWithPriority_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.grails.GrailsDomainCantReferenceServiceAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.exceptions.ThrowExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure20: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void handleNestedNode(org.codehaus.groovy.ast.ASTNode,groovy.lang.Closure)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildLogo_closure6: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.concurrency.SynchronizedOnBoxedPrimitiveRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildFileElement_closure5$_closure16$_closure17: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDuplicateMappingAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.XmlReportWriter$_buildViolationElement_closure6: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: java.lang.Boolean isSingleLineClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateListLiteralRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_getFirstValue_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.CoupledTestCaseAstVisitor: boolean isMethodCallOnSameClass(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule: java.util.List getViolations(org.codenarc.rule.AstVisitor,org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor: java.lang.Object this$dist$get$4(java.lang.String)>",
    "<org.codenarc.rule.convention.NoJavaUtilDateAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.report.HtmlReportWriter: groovy.lang.Closure buildSummaryByPackage(org.codenarc.results.Results)>",
    "<org.codenarc.rule.InlineViolationsParser: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.exceptions.ReturnNullFromCatchBlockAstVisitor: void visitCatchStatement(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.rule.NullReturnTracker: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildProjectElement_closure3: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.ant.CodeNarcTask$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.CompositeRuleSet: void addRule(org.codenarc.rule.Rule)>",
    "<org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_writeReport_closure1$_closure10: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule: void this$dist$set$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BracesForForLoopRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_applyTo_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.AbcMetricAstVisitor: org.gmetrics.metric.Metric createMetric()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.EmptyMethodInAbstractClassAstVisitor: boolean isAbstract(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitClassComplete_closure5: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.concurrency.StaticMatcherFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UseAssertEqualsInsteadOfAssertTrueRule: void <init>()>",
    "<org.codenarc.rule.concurrency.StaticSimpleDateFormatFieldAstVisitor: void addSimpleDateFormatViolation(org.codehaus.groovy.ast.FieldNode,java.lang.String)>",
    "<org.codenarc.rule.basic.HardcodedWindowsRootDirectoryAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ClassNameSameAsFilenameRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.naming.ObjectOverrideMisspelledMethodNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolations_closure3$_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasOneStaticFieldOfItself_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_buildRulesElement_closure9$_closure19$_closure20$_closure21: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule$_applyTo_closure2: java.util.List getViolations()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: boolean isIgnoredVariable(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.util.io.ClassPathResource: void <init>(java.lang.String)>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildLogo_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitSetUpCallsSuperAstVisitor$_visitMethod_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildCSS_closure2$_closure9: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_addInitializedField_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.exceptions.CatchNullPointerExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportParser: java.util.Map parseBaselineXmlReport(java.io.InputStream)>",
    "<org.codenarc.rule.naming.InterfaceNameAstVisitor: boolean shouldVisit(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.ObjectFinalizeAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.convention.PublicMethodsBeforeNonPublicMethodsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_collectAllPrivateMethods_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor$_checkMethods_closure1: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedVariableRule: java.util.List getAnonymousClasses(java.util.List)>",
    "<org.codenarc.rule.FieldReferenceAstVisitor$_visitMethodEx_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.ParameterReassignmentRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.braces.ForStatementBracesRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter$_buildRulesElement_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.StaticSimpleDateFormatFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor$_visitForLoop_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor$_isEmpty_closure1$_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BlockStartsWithBlankLineAstVisitor: void addViolation(int)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasState_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.CloneWithoutCloneableAstVisitor: org.codehaus.groovy.ast.MethodNode cloneMethod(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.convention.ParameterReassignmentAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.source.AbstractSourceCode: boolean isValid()>",
    "<org.codenarc.rule.logging.SystemErrPrintAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.basic.EmptySynchronizedStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.AbstractFinallyAstVisitor$_isStatementWithinFinally_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertTwoViolations_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ClassNameSameAsSuperclassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.AbstractReportWriter: java.lang.String getDescriptionProperty(org.codenarc.rule.Rule)>",
    "<org.codenarc.rule.size.MethodCountAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.logging.LoggerForDifferentClassAstVisitor: boolean isCapitalized(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryReturnKeywordRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportUtil: java.lang.String removeIllegalCharacters(java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTransientModifierRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ModifiersUtil: java.util.List parseModifiersList(java.lang.String)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure19: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: void visitDeclarationExpression(org.codehaus.groovy.ast.expr.DeclarationExpression)>",
    "<org.codenarc.rule.AbstractRuleTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_addInitializedField_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_visitMethod_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.imports.ImportFromSamePackageRule$_applyTo_closure1: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.ant.ReportOption: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.MissingBlankLineAfterImportsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter$_writeSummary_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.generic.IllegalSubclassAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToPlusMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.DuplicateSetValueAstVisitor: boolean isSetLiteral(org.codehaus.groovy.ast.expr.CastExpression)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.logging.LogUtil: boolean isMatchingLoggerDefinition(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.report.AbstractReportWriter: void writeReport(org.codenarc.AnalysisContext,org.codenarc.results.Results)>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.AbstractClassNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.FinalClassWithProtectedMemberAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildScript_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequired: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.ConsecutiveStringConcatenationAstVisitor: boolean areJoinableConstants(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.grails.GrailsServletContextReferenceAstVisitor: void visitVariableExpression(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildProjectElement_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.CodeNarc: void setDefaultsIfNecessary()>",
    "<org.codenarc.rule.concurrency.SynchronizedOnGetClassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInFieldDeclarationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsBlankLineAfterOpeningBrace_closure4: java.lang.Integer getClassStartLine()>",
    "<org.codenarc.rule.AbstractConstructorCallAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17: org.codenarc.results.Results getResults()>",
    "<org.codenarc.ruleset.GroovyDslRuleSet: void <init>(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryReturnKeywordAstVisitor: org.codehaus.groovy.ast.stmt.Statement getLastStatement(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitClassEx_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildReportElement_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_getAnonymousClasses_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.PrintStackTraceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCatchBlockAstVisitor: void visitTryCatchFinally(org.codehaus.groovy.ast.stmt.TryCatchStatement)>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor: void visitListExpression(org.codehaus.groovy.ast.expr.ListExpression)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitUtil: boolean isTearDownMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.XmlReportWriter: groovy.lang.Closure buildMessageElement(org.codenarc.rule.Violation)>",
    "<org.codenarc.rule.security.NonFinalSubclassOfSensitiveInterfaceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer$_processDirectory_closure1: org.codenarc.ruleset.RuleSet getRuleSet()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDotClassAstVisitor: void visitPropertyExpression(org.codehaus.groovy.ast.expr.PropertyExpression)>",
    "<org.codenarc.rule.basic.EmptyIfStatementAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitConstructorOrMethod_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.util.ModifiersUtil$_matchesAnyModifiers_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonRule: void processPackage(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.convention.IfStatementCouldBeTernaryAstVisitor: boolean hasNoElseBlock(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_writeReport_closure1$_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.SynchronizedReadObjectMethodAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.CouldBeSwitchStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BlockEndsWithBlankLineRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateNumberLiteralRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAfterSwitchAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.generic.IllegalClassMemberRule: boolean isReady()>",
    "<org.codenarc.rule.grails.GrailsMassAssignmentRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.FactoryMethodNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryConstructorRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitTearDownCallsSuperAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildViolationElement_closure6: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitCaseStatement_closure6: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.AbstractClassWithPublicConstructorRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ParameterCountAstVisitor: java.lang.String getName(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_getAnonymousClasses_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12$_closure15$_closure16: org.codenarc.results.Results getResults()>",
    "<org.codenarc.results.DirectoryResults$_removeViolation_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_isAnnotatedWithOverride_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_setRuleProperties_closure4: org.codenarc.rule.Rule getRule()>",
    "<org.codenarc.rule.design.SimpleDateFormatMissingLocaleAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21$_closure22: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsPublicControllerMethodAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12: org.codenarc.results.Results getResults()>",
    "<org.codenarc.util.ImportUtil$_sourceLineAndNumberForStarImport_closure2: org.codehaus.groovy.ast.ImportNode getImportNode()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySetterAstVisitor: void addUnnecessarySetterViolation(org.codehaus.groovy.ast.expr.MethodCallExpression,java.lang.String)>",
    "<org.codenarc.rule.formatting.BracesForClassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure18: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ant.CodeNarcTask$_classLoaderForPaths_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.ruleset.TopLevelDelegate$_rule_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildReportElement_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleElements_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ConstantExpressionExtractor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.TrailingWhitespaceRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.report.HtmlReportWriter: groovy.lang.Closure buildSummaryByPackageRow(org.codenarc.results.Results,boolean)>",
    "<org.codenarc.CodeNarcRunner$_execute_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.NestedForLoopRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor$_argumentsContainThis_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.concurrency.SystemRunFinalizersOnExitAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoDefAstVisitor$_visitDeclarationExpression_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30$_closure32: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.BooleanMethodReturnsNullAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.AssignmentToStaticFieldFromInstanceMethodAstVisitor: void visitMethodComplete(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.JsonReportWriter$_buildRulesElement_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule$_applyTo_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllSummaryByPackageRowsRecursively_closure3: org.codenarc.results.Results getResults()>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_findRule_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: void visitDeclarationExpression(org.codehaus.groovy.ast.expr.DeclarationExpression)>",
    "<org.codenarc.test.AbstractTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ParameterCountAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitSwitch_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUtil: boolean isAssertCallWithConstantValue(org.codehaus.groovy.ast.expr.MethodCallExpression,java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor: java.lang.String getParameterDefinitionAsString(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.exceptions.CatchThrowableRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor$_closureReturnsCollection_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor$_checkMethods_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor$_visitMethodCallExpression_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.exceptions.CatchRuntimeExceptionRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.basic.DuplicateSetValueAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildReportElement_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor$_visitClassEx_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.imports.DuplicateImportRule$_applyTo_closure1: java.util.List getViolations()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySubstringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor: void handleClosure(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.util.ModifiersUtil: boolean matchesModifiers(java.lang.Integer,java.lang.Integer)>",
    "<org.codenarc.source.AbstractSourceCode$_removeGrabTransformation_closure1$_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.exceptions.CatchRuntimeExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_uniqueAndSortedDeclaringClassNames_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: void checkStatementExpression(org.codehaus.groovy.ast.MethodNode,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.junit.JUnitAssertAlwaysSucceedsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase: java.util.List manuallyApplyRule(java.lang.String)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckAstVisitor: boolean isSuperReference(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.generic.IllegalSubclassAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.convention.NoTabCharacterRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.naming.PropertyNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleregistry.PropertiesFileRuleRegistry: java.lang.Class getRuleClass(java.lang.String)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$ViolationAndPath: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.logging.MultipleLoggersRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementAstVisitor: java.lang.Object collectIfsAndElses(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.jdbc.DirectConnectionManagementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ant.CodeNarcTask$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.util.ImportUtil$_sourceLineAndNumberForStarImport_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.JUnitAssertAlwaysSucceedsAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.naming.MethodNameAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unused.ReferenceCollector: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.util.CodeNarcVersion: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfViolationsWithPriority_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintAstVisitor$_visitMethodCallExpression_closure1: org.codehaus.groovy.ast.expr.MethodCallExpression getCall()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationAstVisitor$_visitConstructorCallExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure25: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule: java.lang.Object this$dist$invoke$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitBlockStatement_closure2: org.codehaus.groovy.ast.stmt.BlockStatement getBlock()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryOverridingMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.RuleSetBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryTearDownRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.Violation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_writeReport_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitWhileLoop_closure4: org.codehaus.groovy.ast.stmt.WhileStatement getWhileStatement()>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor$_visitMethodCallExpression_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToPutAtMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.dry.DryUtil: boolean areTheSameConstantOrLiteralMapEntryExpression(org.codehaus.groovy.ast.expr.MapEntryExpression,org.codehaus.groovy.ast.expr.MapEntryExpression)>",
    "<org.codenarc.util.io.UrlResource: void <init>(java.lang.String)>",
    "<org.codenarc.rule.grails.GrailsPublicControllerMethodAstVisitor: boolean isIgnoredMethodName(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.imports.UnnecessaryGroovyImportRule$_applyTo_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: java.lang.String extractVariableOrFieldName(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.formatting.BracesForIfElseAstVisitor: void visitElseClosingBrace(org.codenarc.rule.formatting.BracesForIfElseRule,org.codehaus.groovy.ast.stmt.IfStatement,java.lang.String)>",
    "<org.codenarc.rule.dry.DuplicateMapLiteralAstVisitor$_visitMapExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.VolatileArrayFieldAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_containsKey_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor$_visitMethodCallExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.DeadCodeAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure7: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.BitwiseOperatorInConditionalAstVisitor: void addViolationBitwiseConditional(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor$_addViolationsForInstanceFields_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitConstructorOrMethod_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.ClassConstraintsAndMapping: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.AbstractSingleSpaceAfterKeywordAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_writeReport_closure1$_closure10: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.AssignCollectionUniqueRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.RequiredStringRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.basic.DuplicateCaseStatementAstVisitor$_visitSwitch_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportUtil: groovy.lang.Closure cdata(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckBeforeInstanceOfAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.unused.AbstractLastStatementInBlockAstVisitor: boolean isLastStatementInBlock(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_collectAllPrivateMethods_closure2$_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.BracesForTryCatchFinallyAstVisitor$_visitCatch_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.PrintlnAstVisitor$_visitClassEx_closure2: java.lang.Object doCall(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.concurrency.StaticDateFormatFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.AbstractImportRule$_findLineNumberOfFirstClassDeclaration_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainHasToStringAstVisitor$_visitClassComplete_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility: void <init>(java.lang.String,int,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDoubleInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitForLoop_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter: void <init>()>",
    "<org.codenarc.rule.basic.AssertWithinFinallyBlockAstVisitor: void visitAssertStatement(org.codehaus.groovy.ast.stmt.AssertStatement)>",
    "<org.codenarc.report.BaselineViolation: void <init>(java.util.HashMap)>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processImports_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitClosureExpression_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.SystemRunFinalizersOnExitRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BlockEndsWithBlankLineAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.rule.logging.MultipleLoggersAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.CodeNarc: org.codenarc.analyzer.SourceAnalyzer createSourceAnalyzer()>",
    "<org.codenarc.util.io.ClassPathResource: java.io.InputStream getInputStream(java.lang.String)>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure2$_closure3: java.util.List getViolations()>",
    "<org.codenarc.report.XmlReportUtil$_cdata_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildFileElement_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassEx_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor: void visitConstantExpression(org.codehaus.groovy.ast.expr.ConstantExpression)>",
    "<org.codenarc.rule.formatting.LineLengthRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor$_isUsedInAnyAnnotationOnCurrentAnnotatedNode_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.logging.LoggerForDifferentClassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToLeftShiftMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsPublicControllerMethodRule: void <init>()>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_applyTo_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBigIntegerInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateRuleIndexPage: void <clinit>()>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionAstVisitor$_hasJUnit4Annotation_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.BaselineResultsProcessor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ParameterCountRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.UseOfNotifyMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.AbstractSourceCode$_getLineNumberForCharacterIndex_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.ImplicitReturnStatementAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.DeadCodeRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildProjectElement_closure3$_closure9$_closure10: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.AbstractClassWithoutAbstractMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27$_closure29: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.BooleanMethodReturnsNullRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitPublicFieldRule: void <init>()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitClosureExpression_closure2: org.codehaus.groovy.ast.expr.ClosureExpression getExpression()>",
    "<org.codenarc.report.XmlReportWriter$_buildProjectElement_closure3$_closure11: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_containsKey_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.CatchExceptionRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.dry.DuplicateListLiteralAstVisitor: void <init>()>",
    "<org.codenarc.rule.basic.BrokenOddnessCheckAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.basic.EqualsAndHashCodeAstVisitor$_visitClassEx_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryModOneAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.SourceCodeUtil: java.util.List nodeSourceLines(org.codenarc.source.SourceCode,org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.report.InlineXmlReportWriter$_buildViolationElement_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.StaticFieldsBeforeInstanceFieldsAstVisitor$_visitClassComplete_closure1: java.lang.Boolean getHasDeclaredInstanceField()>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: java.lang.String getPenultimateLine(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllSummaryByPackageRowsRecursively_closure3$_closure13: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure5: org.codenarc.results.FileResults getResults()>",
    "<org.codenarc.rule.basic.DuplicateCaseStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase: void removeSuppressedViolations(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleElements_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.ExceptionNotThrownRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor$_closureReturnsCollection_closure2: java.lang.Boolean getReturnsArray()>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_configure_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.exceptions.ConfusingClassNamedExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationAstVisitor$_visitConstructorCallExpression_closure1: org.codehaus.groovy.ast.expr.Expression getArgument()>",
    "<org.codenarc.rule.basic.MultipleUnaryOperatorsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.JavadocEmptyFirstLineRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.exceptions.CatchArrayIndexOutOfBoundsExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.dry.DuplicateStringLiteralRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.braces.ElseBlockBracesAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.ruleset.CompositeRuleSet: void addRuleSet(org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.WildcardPattern: boolean matches(java.lang.String)>",
    "<org.codenarc.results.FileResults: java.lang.String toString()>",
    "<org.codenarc.rule.security.FileCreateTempFileAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitCatchStatement_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceAstVisitor: void addOpeningBraceViolation(org.codehaus.groovy.ast.ASTNode,java.lang.String)>",
    "<org.codenarc.rule.junit.JUnitUtil$_isAssertCallWithConstantValue_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor: void addMethodViolation(org.codehaus.groovy.ast.MethodNode,org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility)>",
    "<org.codenarc.rule.formatting.BracesForForLoopAstVisitor$_findLastLineOfForExpressions_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDotClassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsNotBlankLineAfterOpeningBrace_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.RuleSetDelegate: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ReturnFromFinallyBlockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBooleanExpressionAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionAstVisitor: boolean isJUnit3MatchingMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.TextReportWriter: void writePackageViolations(java.io.Writer,org.codenarc.results.Results)>",
    "<org.codenarc.ruleregistry.PropertiesFileRuleRegistry: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceRule: void <init>()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildScript_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.results.FileResults$_getNumberOfViolationsWithPriority_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: void visitSwitch(org.codehaus.groovy.ast.stmt.SwitchStatement)>",
    "<org.codenarc.rule.imports.DuplicateImportRule: void checkImport(java.lang.String,int,java.util.Set,java.util.List)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildBodySection_closure2$_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor: void visitClassComplete(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.basic.ExplicitGarbageCollectionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectIncludedProperties_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer$_processDirectory_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationRule: void <init>()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10$_closure11: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.FinalClassWithProtectedMemberAstVisitor: boolean isProtected(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: int nestingLevelForClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.junit.UseAssertTrueInsteadOfAssertEqualsAstVisitor: void visitAssertStatement(org.codehaus.groovy.ast.stmt.AssertStatement)>",
    "<org.codenarc.rule.grails.GrailsStatelessServiceRule: void <init>()>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_visitMethod_closure3: org.codehaus.groovy.ast.MethodNode getNode()>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolations_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor$_visitBlockStatement_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.security.SystemExitAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.design.PublicInstanceFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.FinalClassWithProtectedMemberAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults$_getTotalNumberOfFiles_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter: java.util.List getFileResults(org.codenarc.results.Results)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure7$_closure8: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildHeaderSection_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.PathUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner$_createRuleSet_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintAstVisitor$_visitMethodCallExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.HashtableIsObsoleteRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.dry.DuplicateMapLiteralAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_visitMethod_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportParser: java.util.Map parseBaselineXmlReport(java.lang.String)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer: void <init>()>",
    "<org.codenarc.rule.dry.DuplicateNumberLiteralRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.FieldReferenceAstVisitor$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsRule: void setGormStaticMethodsNames(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.ConsecutiveLiteralAppendsAstVisitor: boolean isChainedAppend(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.ExplicitStackInstantiationRule$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.formatting.SpaceBeforeClosingBraceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule$1: void <init>(org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule,java.lang.Object)>",
    "<org.codenarc.rule.security.InsecureRandomAstVisitor: boolean isJavaLangMathCall(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.util.MultilineCommentChecker: void processLine(java.lang.String)>",
    "<org.codenarc.report.XmlReportWriter$_buildViolationElement_closure6$_closure18: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.formatting.SpaceAroundClosureArrowAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.source.AbstractSourceCode$_removeGrabTransformation_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer$_processDirectory_closure1: java.lang.String getDir()>",
    "<org.codenarc.util.ImportUtil: java.util.Map sourceLineAndNumberForImport(org.codenarc.source.SourceCode,org.codehaus.groovy.ast.ImportNode)>",
    "<org.codenarc.report.XmlReportWriter$_buildFileElement_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildScript_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter: groovy.lang.Closure buildFileElement(org.codenarc.results.Results)>",
    "<org.codenarc.rule.design.CloneableWithoutCloneAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCastRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitTearDownCallsSuperRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor: boolean isAnonymousInnerClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.FieldReferenceAstVisitor: void visitPropertyExpression(org.codehaus.groovy.ast.expr.PropertyExpression)>",
    "<org.codenarc.rule.basic.ReturnFromFinallyBlockAstVisitor: void visitReturnStatement(org.codehaus.groovy.ast.stmt.ReturnStatement)>",
    "<org.codenarc.report.XmlReportWriter$_buildFileElement_closure5: org.codenarc.results.FileResults getResults()>",
    "<org.codenarc.rule.exceptions.MissingNewInThrowStatementAstVisitor: boolean isFirstLetterUpperCase(java.lang.String)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.braces.ElseBlockBracesRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.source.AbstractSourceCode: java.util.Map getMethodCallExpressions()>",
    "<org.codenarc.rule.formatting.SpaceAroundMapEntryColonAstVisitor: void visitMapEntryExpression(org.codehaus.groovy.ast.expr.MapEntryExpression)>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertNoViolations(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryConstructorAstVisitor: void analyzeConstructor(org.codehaus.groovy.ast.ConstructorNode)>",
    "<org.codenarc.rule.naming.FieldNameRule: void validate()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14$_closure15: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.UseAssertNullInsteadOfAssertEqualsAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitClassEx_closure1: org.codehaus.groovy.ast.ClassNode getNode()>",
    "<org.codenarc.report.XmlReportWriter$_buildProjectElement_closure3$_closure11$_closure12: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.ReturnNullFromCatchBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor$_processParameters_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void addClosureFields(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.source.AbstractSourceCode: void <clinit>()>",
    "<org.codenarc.rule.convention.LongLiteralWithLowerCaseLAstVisitor: void visitConstantExpression(org.codehaus.groovy.ast.expr.ConstantExpression)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.results.FileResults: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ConstantIfExpressionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor$_visitMethodEx_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.imports.ImportFromSamePackageRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ModifiersUtil$_matchesAnyModifiers_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ConfusingTernaryAstVisitor: void addViolationForBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression,org.codehaus.groovy.ast.expr.TernaryExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBigDecimalInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.VolatileLongOrDoubleFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor: void collectMapKeys(org.codehaus.groovy.ast.expr.MethodCallExpression,java.util.Map)>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterAstVisitor: java.util.List getViolations()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.dry.DuplicateMapLiteralRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: java.lang.String createMessage(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.basic.EmptyIfStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.comments.ClassJavadocRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitClosureExpression_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryOverridingMethodAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.dry.DuplicateMapLiteralRule: void <init>()>",
    "<org.codenarc.report.JsonReportWriter$_buildPackageElements_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.BaselineViolation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.InvertedIfElseRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToPowerMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure4$_closure11: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.VariableUsageFinder: void visitVariableExpression(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsNotBlankLineAfterOpeningBrace_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.size.CrapMetricRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.util.WildcardPattern$_matches_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBigDecimalInstantiationAstVisitor: boolean isTypeSuffixNecessary(java.lang.Object)>",
    "<org.codenarc.util.ModifiersUtil: boolean matchesAnyModifiers(java.lang.Integer,java.util.List)>",
    "<org.codenarc.rule.groovyism.ConstantExpressionExtractor$_extractFromExpression_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer: org.codenarc.rule.Rule findRule(org.codenarc.ruleset.RuleSet,java.lang.String)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_applyProperties_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ClassNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12$_closure15$_closure16: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.AbstractReportWriter$_getSortedRules_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildBodySection_closure2: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor: void findViolations(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure5$_closure13: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundMapEntryColonAstVisitor: java.lang.String violationMessage(java.lang.String,java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.basic.DoubleNegativeRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_findRule_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.MathRandomTracker: void callBackForMathRandomReturns(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.grails.ClassConstraintsAndMapping$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter$_writeReportToFile_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean hasNoElseBlock(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_addInitializedField_closure4: java.lang.String getVarName()>",
    "<org.codenarc.rule.size.CrapMetricRule: boolean doesCoberturaXmlFileExist()>",
    "<org.codenarc.rule.basic.ConstantTernaryExpressionAstVisitor: void visitTernaryExpression(org.codehaus.groovy.ast.expr.TernaryExpression)>",
    "<org.codenarc.rule.concurrency.SynchronizedReadObjectMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.MovedRules: org.codenarc.ruleset.MovedRules$MovedToRuleSet movedTo(java.lang.String)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasSingletonAnnotation_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.InstanceofAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.FieldReferenceAstVisitor$_visitMethodEx_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.util.ImportUtil$_sortImportsByLineNumber_closure4: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.AbstractRuleTestCase: java.lang.String removeInlineViolations(java.lang.String)>",
    "<org.codenarc.rule.basic.HardcodedWindowsRootDirectoryAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.formatting.BracesForMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EqualsOverloadedAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.results.DirectoryResults: int getNumberOfFilesWithViolations(int,boolean)>",
    "<org.codenarc.rule.groovyism.ConstantExpressionExtractor: java.util.List extractFromExpression(org.codehaus.groovy.ast.expr.ListExpression)>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure6: java.io.Writer getWriter()>",
    "<org.codenarc.rule.basic.EqualsAndHashCodeAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.DoubleCheckedLockingAstVisitor: org.codehaus.groovy.ast.stmt.SynchronizedStatement getSynchronizedStatement(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertyLockingAstVisitor: java.lang.String getGuardName(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.junit.JUnitUtil: boolean isSetUpMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.grails.GrailsDuplicateMappingRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.CommentsUtil: void <clinit>()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.CoupledTestCaseRule: void <init>()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySafeNavigationOperatorAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_visitClassComplete_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_buildFileElement_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.ConsecutiveStringConcatenationAstVisitor: boolean isNumberLiteral(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.junit.JUnitUtil$_isAssertCallWithConstantValue_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.util.WildcardPattern$_convertStringWithWildcardsToRegex_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ComparisonOfTwoConstantsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: void checkNonEmptyLineNumber(int,int)>",
    "<org.codenarc.rule.groovyism.ConstantExpressionExtractor$_extractFrom_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure5$_closure13: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInFieldDeclarationAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertyLockingAstVisitor: boolean isReadLocked(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24: java.lang.Object call(org.codenarc.report.SortableHtmlReportWriter$ViolationAndPath)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertyLockingAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolation_closure4: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_visitDeclarationExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: void visitParameters(org.codehaus.groovy.ast.Parameter[])>",
    "<org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.ClassReferenceAstVisitor: void checkType(java.lang.String,org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.convention.InvertedConditionAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.report.JsonReportWriter$_buildPackageElements_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.size.CrapMetricRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameRule: void <init>()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_afterBlock_closure2: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolations_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer: void initializeWildcardPatterns()>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor$_checkMethods_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.GroovyVersion: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter: void initializeDefaultResourceBundle()>",
    "<org.codenarc.rule.imports.ImportFromSamePackageRule: java.lang.String getClassNameNoPackage(java.lang.String)>",
    "<org.codenarc.rule.junit.JUnitLostTestAstVisitor$_visitClass_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor$_visitMethodEx_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.ruleset.MovedRules$Renamed: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.basic.DuplicateSetValueAstVisitor$_visitCastExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter: groovy.lang.Closure buildAllSummaryByPackageRowsRecursively(org.codenarc.results.Results)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitClassEx_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter: java.lang.Object this$dist$invoke$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.design.InstanceofAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.generic.RequiredStringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ImportUtil: java.util.Map sourceLineAndNumberForStarImport(org.codenarc.source.SourceCode,org.codehaus.groovy.ast.ImportNode)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_addViolationOnMismatch_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.CoupledTestCaseRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.FieldTypeRequiredRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor: void <init>(org.codenarc.rule.AbstractAstVisitor)>",
    "<org.codenarc.report.HtmlReportWriter$_buildBodySection_closure1: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.exceptions.ExceptionNotThrownAstVisitor: void visitCatchStatement(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryToStringAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.security.SystemExitAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BlockEndsWithBlankLineAstVisitor: java.lang.String lastButOneCodeLine(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassEx_closure2: java.lang.Object doCall(java.util.Collection)>",
    "<org.codenarc.rule.serialization.EnumCustomSerializationIgnoredAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionAstVisitor$_hasJUnit4Annotation_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure18: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter: groovy.lang.Closure buildPackageSection(org.codenarc.results.Results)>",
    "<org.codenarc.ant.Report: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter$_writePackageViolations_closure2: java.io.Writer getWriter()>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitConstructorOrMethod_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.source.AbstractSourceCode$_removeGrabTransformation_closure1$_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.braces.ForStatementBracesAstVisitor: void visitForLoop(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.rule.basic.DuplicateCaseStatementAstVisitor$_visitSwitch_closure2: java.lang.Object doCall(java.lang.Object,org.codehaus.groovy.ast.stmt.CaseStatement)>",
    "<org.codenarc.rule.formatting.BracesForTryCatchFinallyAstVisitor: void visitFinally(org.codenarc.rule.formatting.BracesForTryCatchFinallyRule,org.codehaus.groovy.ast.stmt.TryCatchStatement)>",
    "<org.codenarc.rule.junit.JUnitUtil: boolean isLiteralWithValueThatEvaluatesTo(org.codehaus.groovy.ast.expr.Expression,boolean)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToAndMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_generateAllPossibleParameterSignatures_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.BracesForClassRule$_applyTo_closure1: java.lang.Object doCall(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildBodySection_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UnnecessaryFailAstVisitor$_visitCatchStatement_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: void addViolation(org.codehaus.groovy.ast.ASTNode,java.lang.String,int)>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.UseAssertTrueInsteadOfNegationRule: void <init>()>",
    "<org.codenarc.rule.design.BooleanReturnTracker: void checkReturnValues(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30$_closure32: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.EmptyMethodAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.util.ConsecutiveUtils: boolean isJoinableType(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor: java.lang.Object this$dist$invoke$4(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_getMethodCallsAndMapKeys_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: void addViolation(java.lang.String,int)>",
    "<org.codenarc.report.XmlReportWriter$_buildRulesElement_closure9$_closure19$_closure20$_closure21: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitConstructorOrMethod_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor$_processParameters_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBooleanInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitSetUpCallsSuperRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceBeforeClosingBraceAstVisitor: void addOpeningBraceViolation(org.codehaus.groovy.ast.ASTNode,java.lang.String)>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule$_applyTo_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor$_addViolationsForInstanceFields_closure3: java.lang.Object doCall(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor$_visitCatchStatement_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.EmptyFinallyBlockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.design.BooleanMethodReturnsNullAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor$_visitMethodCallExpression_closure1: org.codehaus.groovy.ast.expr.MethodCallExpression getCall()>",
    "<org.codenarc.ruleset.GroovyDslRuleSet: void evaluateDsl(groovy.lang.GroovyShell)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_getAnonymousClasses_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.SynchronizedOnBoxedPrimitiveAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterClosingBraceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults$_getTotalNumberOfFiles_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule$1: void <init>(org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule,java.lang.Object)>",
    "<org.codenarc.rule.basic.BooleanGetBooleanRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.source.AbstractSourceCode$_removeGrabTransformation_closure1$_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildBodySection_closure2$_closure8: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.BracesForTryCatchFinallyRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.BooleanGetBooleanAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure29: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.generic.IllegalClassReferenceRule: boolean isReady()>",
    "<org.codenarc.rule.convention.ParameterReassignmentAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.report.AbstractReportWriter: java.util.List getSortedRules(org.codenarc.AnalysisContext)>",
    "<org.codenarc.util.ImportUtil: java.util.Map sourceLineAndNumberForNonStarImport(org.codenarc.source.SourceCode,org.codehaus.groovy.ast.ImportNode)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure11: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_writeReport_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitBlockStatement_closure6: org.codehaus.groovy.ast.stmt.BlockStatement getBlock()>",
    "<org.codenarc.rule.logging.SystemOutPrintAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.InsecureRandomAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: void checkIfThereIsBlankLineBeforeClosingBrace(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitImports_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCastAstVisitor: void visitCastExpression(org.codehaus.groovy.ast.expr.CastExpression)>",
    "<org.codenarc.rule.grails.GrailsDuplicateMappingAstVisitor: void <init>()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor$_visitArgumentlistExpression_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_buildViolationElement_closure6$_closure18: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule: java.lang.Object this$dist$invoke$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.exceptions.SwallowThreadDeathAstVisitor: void <init>()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27$_closure29: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.TextReportWriter$_writePackageViolations_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDoubleInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.RuleSetBuilder: org.codenarc.ruleset.RuleSet getRuleSet()>",
    "<org.codenarc.rule.concurrency.UseOfNotifyMethodAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_increaseIndentForClosureBlocks_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.BracesForTryCatchFinallyAstVisitor$_visitCatch_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceAfterClosingBraceAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitCaseStatement_closure6: org.codehaus.groovy.ast.stmt.CaseStatement getStatement()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasSingletonAnnotation_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.util.ModifiersUtil$_parseModifiersList_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.CouldBeSwitchStatementAstVisitor: java.lang.Boolean inSupportedOperation(org.codehaus.groovy.syntax.Token)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGetterAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.junit.ChainedTestAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_afterBlock_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitSynchronizedStatement_closure7: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.ListRuleSet$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_applyTo_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.NestedSynchronizationAstVisitor: void visitSynchronizedStatement(org.codehaus.groovy.ast.stmt.SynchronizedStatement)>",
    "<org.codenarc.rule.imports.ImportFromSamePackageRule: boolean hasAlias(org.codehaus.groovy.ast.ImportNode)>",
    "<org.codenarc.rule.concurrency.SynchronizedOnStringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundClosureArrowRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.AssignCollectionUniqueAstVisitor: boolean isFalseConstant(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_getViolations_closure1: org.codenarc.rule.AstVisitor getVisitor()>",
    "<org.codenarc.rule.naming.InterfaceNameSameAsSuperInterfaceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonAstVisitor$_removeAnyViolationsForSameLine_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.MovedRules$Renamed: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor: void visitMethodComplete(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.source.AbstractSourceCode: java.util.List getLines()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor: void <init>(java.util.Set,java.util.Set)>",
    "<org.codenarc.util.BaselineResultsProcessor: boolean sameMessage(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonRule$_processImports_closure1: java.util.List getViolations()>",
    "<org.codenarc.report.XmlReportWriter: groovy.lang.Closure buildProjectElement(org.codenarc.AnalysisContext)>",
    "<org.codenarc.report.TextReportWriter$_writeSummary_closure1: org.codenarc.results.Results getResults()>",
    "<org.codenarc.report.InlineXmlReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor$_visitMethodCallExpression_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.JavadocEmptyReturnTagRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ComparisonWithSelfRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.BaselineResultsProcessor$_processResults_closure1$_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildViolationElement_closure6$_closure18: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.SynchronizedOnThisRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalClassMemberAstVisitor: void visitProperty(org.codehaus.groovy.ast.PropertyNode)>",
    "<org.codenarc.report.InlineXmlReportWriter$_buildViolationElement_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.FieldReferenceAstVisitor: void <init>(java.util.Collection)>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor$_isEmpty_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor: void visitImports(org.codehaus.groovy.ast.ModuleNode)>",
    "<org.codenarc.util.ImportUtil: java.util.Map sourceLineAndNumberForImport(org.codenarc.source.SourceCode,java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor$_visitForLoop_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule: java.util.List addOrderingViolations(org.codenarc.source.SourceCode,java.lang.String,java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.naming.InterfaceNameSameAsSuperInterfaceAstVisitor$_visitClassEx_closure1: org.codehaus.groovy.ast.ClassNode getNode()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitClosureExpression_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassComplete_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor: void visitVariableExpression(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.ruleset.GroovyDslRuleSet$_evaluateDsl_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTernaryExpressionAstVisitor: void visitTernaryExpression(org.codehaus.groovy.ast.expr.TernaryExpression)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure29: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.jdbc.DirectConnectionManagementAstVisitor: boolean isJavaSQLDriverManagerCall(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ConstantIfExpressionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainWithServiceReferenceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.FieldNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionRule: void <init>()>",
    "<org.codenarc.rule.groovyism.UseCollectManyAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.ruleset.RuleSetUtil$_loadRuleScriptFile_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckBeforeInstanceOfRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterCatchRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.AbcMetricAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor$_visitMethodCallExpression_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.FieldTypeRequiredAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.JavadocMissingParamDescriptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToPowerMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12$_closure15: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateRuleSetAllRulesByCategory: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults: void <init>()>",
    "<org.codenarc.source.AbstractSourceCode: void init()>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor$_argumentsContainThis_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.CompositeRuleSet: void <init>()>",
    "<org.codenarc.rule.basic.ConstantAssertExpressionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ObjectOverrideMisspelledMethodNameAstVisitor: void checkForMethodNameWithIncorrectCase(org.codehaus.groovy.ast.MethodNode,java.lang.String,java.util.List)>",
    "<org.codenarc.rule.junit.JUnitPublicFieldAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildBodySection_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor: boolean isMainMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.imports.UnusedImportRule: java.lang.String findReference(org.codenarc.source.SourceCode,java.lang.String)>",
    "<org.codenarc.rule.exceptions.ExceptionNotThrownAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.BaselineResultsProcessor: void removeMatchingViolation(org.codenarc.results.Results,java.util.List,org.codenarc.report.BaselineViolation)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryFloatInstantiationAstVisitor: void <init>()>",
    "<org.codenarc.report.XmlReportUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.CustomCompilerPhaseSourceDecorator: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ConstantAssertExpressionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBooleanExpressionAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.serialization.SerialVersionUIDRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_visitMethod_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.CouldBeElvisAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassComplete_closure6: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.imports.UnusedImportRule$_findReference_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.dry.DuplicateListLiteralAstVisitor$_visitListExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.UnsafeArrayDeclarationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineViolation: boolean equals(java.lang.Object)>",
    "<org.codenarc.analyzer.StringSourceAnalyzer: org.codenarc.results.Results analyze(org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.rule.unnecessary.ConsecutiveStringConcatenationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: boolean methodExcluded(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor$_visitStaticMethodCallExpression_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.TextReportWriter$_writePackageViolations_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor$_visitDeclarationExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryStringInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitListExpression_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainHasToStringAstVisitor: void visitClassComplete(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.XmlReportWriter$_buildFileElement_closure5$_closure16$_closure17: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: java.lang.Boolean isSingleLineClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.concurrency.ThreadLocalNotStaticFinalAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.grails.ClassConstraintsAndMapping$_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitTestMethodWithoutAssertAstVisitor: boolean checksException(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.basic.DuplicateCaseStatementAstVisitor$_visitSwitch_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildHeaderSection_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.NestedSynchronizationAstVisitor$_visitClosureExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ParameterNameAstVisitor$_processParameters_closure1: java.lang.String getMethodName()>",
    "<org.codenarc.rule.generic.IllegalRegexRule: boolean isReady()>",
    "<org.codenarc.rule.generic.IllegalClassMemberAstVisitor: boolean matchesIgnoreMethodNames(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitWhileLoop_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void visitCaseStatement(org.codehaus.groovy.ast.stmt.CaseStatement)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitForLoop_closure5: org.codehaus.groovy.ast.stmt.ForStatement getForStatement()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasState_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.AbstractFinallyAstVisitor$_isStatementWithinFinally_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.naming.FactoryMethodNameAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.exceptions.MissingNewInThrowStatementAstVisitor: void visitThrowStatement(org.codehaus.groovy.ast.stmt.ThrowStatement)>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolation_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryFinalOnPrivateMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ClosureAsLastMethodParameterAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ClassForNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTernaryExpressionAstVisitor: boolean areTrueAndFalse(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4$_closure13$_closure15: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.GroovyDslRuleSet$_createGroovyShell_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BracesForClassRule$_applyTo_closure1: java.util.List getViolations()>",
    "<org.codenarc.rule.generic.IllegalSubclassRule: boolean isReady()>",
    "<org.codenarc.rule.InlineViolationsParser$ParseResult: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure4$_closure11: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.SystemRunFinalizersOnExitAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_collectAllPrivateFields_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: boolean isNotAnIgnoredOverrideMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCatchBlockAstVisitor$_visitTryCatchFinally_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.util.WildcardPattern: void <init>(java.lang.String,boolean)>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor: boolean isNamedArgumentsListContainingThis(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processStaticImports_closure2: java.util.List getViolations()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToMethodAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.ruleset.RuleSetDelegate$_methodMissing_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.StubRule: void <init>(int)>",
    "<org.codenarc.rule.imports.ImportFromSamePackageRule$_applyTo_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsNotBlankLineAfterOpeningBrace_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.test.AbstractTestCase: java.lang.String getName()>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.util.SourceCodeUtil: java.util.List sourceLinesBetweenNodes(org.codenarc.source.SourceCode,org.codehaus.groovy.ast.ASTNode,org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.basic.ComparisonOfTwoConstantsAstVisitor: void addViolationIfBothAreConstantsOrLiterals(org.codehaus.groovy.ast.ASTNode,org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_visitClassComplete_closure2: org.codenarc.rule.grails.ClassConstraintsAndMapping getConstraintsAndMapping()>",
    "<org.codenarc.rule.junit.JUnitTearDownCallsSuperAstVisitor$_visitMethod_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.RemoveAllOnSelfAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.FilteredRuleSet$_getRules_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.CodeNarcRunner: org.codenarc.ruleset.RuleSet createRuleSet()>",
    "<org.codenarc.test.AbstractTestCase: void setUpAbstractTestCase()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure29: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.comments.JavadocMissingThrowsDescriptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.InlineViolationsParser$ParseResult: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor$_extractTransients_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean isFalseExpression(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.basic.ExplicitGarbageCollectionAstVisitor: boolean isPropertyExpression(org.codehaus.groovy.ast.expr.Expression,java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIntegerInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule$_applyTo_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.NonFinalSubclassOfSensitiveInterfaceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ClassNameSameAsFilenameRule$_applyTo_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_visitDeclarationExpression_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedObjectRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_visitMethod_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.naming.ParameterNameAstVisitor$_processParameters_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.AbstractReportWriter: java.lang.String getResourceBundleString(java.lang.String,java.lang.String,boolean)>",
    "<org.codenarc.util.ModifiersUtil$_matchesAnyModifiers_closure1: java.lang.Integer getActualModifiers()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.RuleSetUtil$_loadRuleScriptFile_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.DuplicateCaseStatementAstVisitor: void visitSwitch(org.codehaus.groovy.ast.stmt.SwitchStatement)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsMassAssignmentAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ImportUtil$_sourceLineAndNumberForImport_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.results.DirectoryResults: int getNumberOfViolationsWithPriority(int)>",
    "<org.codenarc.rule.formatting.BracesForForLoopAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.ReferenceCollector: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.AssertionTrap$_methodNamesCountsAsAssertion_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor: void checkPackageName(java.lang.String,org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.grails.GrailsDomainHasEqualsRule: void <init>()>",
    "<org.codenarc.rule.logging.LoggerForDifferentClassAstVisitor: boolean isEqualToCurrentClassOrClassName(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean areTrueAndFalseExpressions(org.codehaus.groovy.ast.stmt.Statement,org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.ruleset.MovedRules$Renamed: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.concurrency.StaticSimpleDateFormatFieldAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.InterfaceNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckAstVisitor: boolean isPropertyInvocation(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.rule.junit.UseAssertSameInsteadOfAssertTrueAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: void afterBlock()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.rule.exceptions.ThrowNullPointerExceptionRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor: void processType(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_applyProperties_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor: void processParameters(org.codehaus.groovy.ast.Parameter[],java.lang.String)>",
    "<org.codenarc.rule.unused.UnusedObjectAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.UseCollectNestedAstVisitor: org.codehaus.groovy.ast.Parameter getClosureParameter(org.codehaus.groovy.ast.expr.ClosureExpression,org.codehaus.groovy.ast.Parameter)>",
    "<org.codenarc.report.XmlReportWriter$_buildMessageElement_closure8: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.logging.LoggerForDifferentClassAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.AbstractJavadocMissingDescriptionRule: void <init>()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_visitMethod_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptySwitchStatementAstVisitor: void visitSwitch(org.codehaus.groovy.ast.stmt.SwitchStatement)>",
    "<org.codenarc.report.ReportWriterFactory: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule$_addOrderingViolations_closure1: java.lang.String getMessage()>",
    "<org.codenarc.rule.formatting.BlockEndsWithBlankLineAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21$_closure23: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.logging.LoggerWithWrongModifiersAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_applyTo_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: int getLineNumberForCharacterIndex(int)>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4$_closure13: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassComplete_closure5: java.lang.Object doCall(java.util.Collection)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToMinusMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.junit.JUnitFailWithoutMessageRuleAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectMapKeys_closure6: java.util.Map getResult()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildMessageElement_closure7: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: boolean isNotExpressionWithMethodCallOnName(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.rule.formatting.LineLengthRule: boolean flagIfRegularLine(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationToGetClassAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.BracesForForLoopAstVisitor: int findLastLineOfForExpressions(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.rule.security.PublicFinalizeMethodAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.naming.VariableNameAstVisitor$_visitDeclarationExpression_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_buildSourceLineElement_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EqualsAndHashCodeAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.UnsafeArrayDeclarationAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.BaselineResultsProcessor$_processResults_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.JavaIoPackageAccessAstVisitor: void visitPropertyExpression(org.codehaus.groovy.ast.expr.PropertyExpression)>",
    "<org.codenarc.rule.security.SystemExitRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitTestMethodWithoutAssertAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterAstVisitor$_hasItParameter_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.naming.ClassNameSameAsFilenameRule$_applyTo_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.InstanceofRule: void <init>()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor$_closure1: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.exceptions.CatchArrayIndexOutOfBoundsExceptionRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.logging.LoggerForDifferentClassAstVisitor: boolean isEqualToCurrentClassName(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.results.DirectoryResults$_removeViolation_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.imports.AbstractImportRule: void eachImportLine(org.codenarc.source.SourceCode,groovy.lang.Closure)>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_writeReport_closure1: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor$_isEmpty_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ConstantExpressionExtractor: java.util.List extractFromExpression(org.codehaus.groovy.ast.expr.ConstantExpression)>",
    "<org.codenarc.rule.naming.ParameterNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ParameterNameAstVisitor$_processParameters_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor$_visitCastExpression_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_applyProperties_closure2: org.codenarc.ruleset.RuleSet getRuleSet()>",
    "<org.codenarc.rule.exceptions.ReturnNullFromCatchBlockAstVisitor: boolean shouldVisitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4$_closure13$_closure15: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildButtons_closure6$_closure30: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildBodySection_closure1$_closure8: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceAfterSwitchRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12$_closure15: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure7$_closure9: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToRightShiftMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.IfStatementCouldBeTernaryAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.ruleset.XmlFileRuleSet: void <init>(java.lang.String)>",
    "<org.codenarc.rule.naming.ClassNameSameAsFilenameRule: java.lang.String classNodeType(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19$_closure21$_closure22: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor$_isExpressionUsedInAnnotation_closure2: org.codehaus.groovy.ast.expr.ConstantExpression getExpression()>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processStaticImports_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.exceptions.ThrowNullPointerExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.LoggerForDifferentClassAstVisitor: boolean isLoggerForDerivedClass(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInMethodDeclarationAstVisitor: java.lang.String removeDistractingParts(java.lang.String)>",
    "<org.codenarc.rule.groovyism.ClosureAsLastMethodParameterRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_findSuperClassMethods_closure7: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure7$_closure9: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner: org.codenarc.results.Results execute()>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllPackageSections_closure5$_closure17: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarc$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.GroovyVersion: boolean isNotGroovyVersion2()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: boolean isGetterSynchronizedAndSetterUnsychronized(java.util.List,java.lang.String)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: java.util.Map getIndentLevelsMap()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBooleanExpressionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToEqualsMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.basic.ForLoopShouldBeWhileLoopRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarc: void parseReport(java.lang.String)>",
    "<org.codenarc.ruleset.MovedRules$MovedToRuleSet: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.codenarc.tool.GenerateCodeNarcRulesProperties$_main_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_getMethodCallsAndMapKeys_closure5: java.lang.Object doCall(org.codehaus.groovy.ast.stmt.ExpressionStatement)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure4$_closure12: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBooleanInstantiationAstVisitor: boolean isConstructorCallAViolation(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor$_visitStaticMethodCallExpression_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor$_visitMethodCallExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.AbstractSourceCode$_removeGrabTransformation_closure1$_closure3$_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_writeReport_closure1$_closure10: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstanceOfCheckRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor$_visitBlockStatement_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceAfterClosingBraceAstVisitor: boolean isNotAllowedCharacterAfterClosure(java.lang.String,int)>",
    "<org.codenarc.rule.basic.ForLoopShouldBeWhileLoopAstVisitor: void visitForLoop(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonAstVisitor$_removeAnyViolationsForSameLine_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_configure_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterCodeVisitor: void visitVariableExpression(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.rule.imports.UnusedImportRule$_findReference_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.AstUtil: boolean respondsTo(java.lang.Object,java.lang.String)>",
    "<org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ant.CodeNarcTask: void addFileset(org.apache.tools.ant.types.FileSet)>",
    "<org.codenarc.rule.groovyism.ExplicitStackInstantiationRule$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.concurrency.NestedSynchronizationAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionAstVisitor$_hasJUnit4Annotation_closure1: org.codehaus.groovy.ast.MethodNode getNode()>",
    "<org.codenarc.rule.FieldReferenceAstVisitor: java.util.List getOuterClassNames()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21$_closure22: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.generic.IllegalStringRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_afterBlock_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.JsonReportWriter: boolean isRoot(org.codenarc.results.Results)>",
    "<org.codenarc.rule.design.AbstractClassWithPublicConstructorAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.NoTabCharacterRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassEx_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTernaryExpressionAstVisitor: boolean isBooleanConditionalExpression(org.codehaus.groovy.ast.expr.BooleanExpression)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitConstructorOrMethod_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitPublicFieldAstVisitor: void visitClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.tool.GenerateAll: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ParameterReassignmentAstVisitor: void <init>()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure19: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToXorMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.HardCodedWindowsFileSeparatorRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.LineLengthRule: boolean lineExceedsMaxLength(java.lang.String)>",
    "<org.codenarc.report.AbstractHtmlReportWriter: groovy.lang.Closure buildRuleDescriptions(org.codenarc.AnalysisContext)>",
    "<org.codenarc.rule.convention.IfStatementCouldBeTernaryAstVisitor: boolean isBlockWithSingleReturnStatement(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor: void visitProperty(org.codehaus.groovy.ast.PropertyNode)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21$_closure23: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: java.util.List generateAllPossibleParameterSignatures(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor$_visitMethodCallExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.JUnitPublicNonTestMethodAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.imports.UnnecessaryGroovyImportRule$_applyTo_closure1: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: boolean isSpockBlockLabel(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.BrokenNullCheckRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_processMethodOrConstructorCall_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.StaticConnectionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.JavaIoPackageAccessAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.basic.DeadCodeAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThreadLocalNotStaticFinalRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.SpockIgnoreRestUsedRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor: java.util.List getAnonymousClasses()>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor$_processParameters_closure1: java.lang.String getMethodName()>",
    "<org.codenarc.rule.formatting.BlankLineBeforePackageRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasOneStaticFieldNamedInstance_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.StaticFieldsBeforeInstanceFieldsAstVisitor$_visitClassComplete_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.NoDefAstVisitor$_visitParameters_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.basic.ConstantTernaryExpressionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarc: void checkMaxViolations(org.codenarc.results.Results,int,int)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_initializeImportNames_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarc$__clinit__closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_buildViolationElement_closure6: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitCaseStatement_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueAstVisitor: int getActualArgumentIndex(java.util.List)>",
    "<org.codenarc.report.InlineXmlReportWriter$_buildViolationElement_closure1$_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer: void applyProperties(java.util.Properties,org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.rule.ClassReferenceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor$_isNamedArgumentsListContainingThis_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalSubclassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BracesForMethodAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_addViolationOnMismatch_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.imports.UnnecessaryGroovyImportRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.imports.UnusedImportRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.CouldBeSwitchStatementAstVisitor: void <init>()>",
    "<org.codenarc.rule.generic.IllegalRegexRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.CommonThrowAstVisitor: void visitThrowStatement(org.codehaus.groovy.ast.stmt.ThrowStatement)>",
    "<org.codenarc.rule.imports.AbstractImportRule$_findLineNumberOfFirstClassDeclaration_closure1: java.lang.Integer getFirstLineNumber()>",
    "<org.codenarc.report.BaselineXmlReportWriter: groovy.lang.Closure buildViolationElement(org.codenarc.rule.Violation)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: java.util.List setupFlexibleIndentForAnyClosureParameterBlocks(org.codehaus.groovy.ast.expr.ArgumentListExpression)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_uniqueAndSortedDeclaringClassNames_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.CollectionReturnTracker: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure4$_closure11: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_buildReportElement_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.logging.PrintlnAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.JavaIoPackageAccessAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToMinusMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ClassNameSameAsSuperclassAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void addViolationForOperator(org.codehaus.groovy.ast.ASTNode,java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor: void saveCurrentAnnotatedNode(org.codehaus.groovy.ast.AnnotatedNode)>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor$_visitConstructorOrMethod_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsStatelessServiceRule: boolean shouldIgnoreField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.report.ReportWriterFactory: org.codenarc.report.ReportWriter getReportWriter(java.lang.String,java.util.Map)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryReturnKeywordAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySelfAssignmentAstVisitor: boolean propertyExpressionsAreEqual(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.basic.ExplicitGarbageCollectionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfViolationsWithPriority_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.CodeNarc$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.exceptions.ExceptionExtendsErrorAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure19: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsAstVisitor$_visitMethodCallExpression_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.ComparisonOfTwoConstantsAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.imports.DuplicateImportRule$_applyTo_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor$_isEmpty_closure1$_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27: java.lang.Object call(org.codenarc.rule.Violation)>",
    "<org.codenarc.rule.logging.LoggerWithWrongModifiersAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor$_visitBlockStatement_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementAstVisitor$_visitIfElse_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.size.CrapMetricRule: void <init>()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertyLockingAstVisitor: void <init>()>",
    "<org.codenarc.rule.formatting.SpaceAroundMapEntryColonAstVisitor: int columnIndexForColon(org.codehaus.groovy.ast.expr.MapEntryExpression)>",
    "<org.codenarc.rule.basic.ForLoopShouldBeWhileLoopAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor$_visitDeclarationExpression_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.EmptyForStatementAstVisitor: void visitForLoop(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.ant.CodeNarcTask: void <init>()>",
    "<org.codenarc.rule.groovyism.GStringAsMapKeyAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.AbstractFinallyAstVisitor: boolean isStatementWithinFinally(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor$_methodReturnsArray_closure1: java.lang.Boolean getReturnsArray()>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.concurrency.BusyWaitRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor$_extractTransients_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure14: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor$_processParameters_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor: boolean argumentsContainThis(org.codehaus.groovy.ast.expr.TupleExpression)>",
    "<org.codenarc.rule.jdbc.JdbcResultSetReferenceRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.design.NestedForLoopAstVisitor: void visitForLoop(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_generateAllPossibleParameterSignatures_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.CouldBeSwitchStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet: java.io.InputStream getSchemaXmlInputStream()>",
    "<org.codenarc.rule.dry.DryUtil: boolean haveTheSameListLiteralValue(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.design.BooleanMethodReturnsNullAstVisitor: boolean methodReturnsBoolean(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.generic.IllegalClassMemberAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.groovyism.ExplicitStackInstantiationRule: java.lang.Object this$dist$get$3(java.lang.String)>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: java.util.List getLines()>",
    "<org.codenarc.util.ImportUtil$_sourceLineAndNumberForStarImport_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor$_visitMethodCallExpression_closure1: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.CyclomaticComplexityRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_writeReport_closure1: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.VirtualResults: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_containsKey_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.util.BaselineResultsProcessor$_removeMatchingViolation_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.ruleset.MovedRules: void <clinit>()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonAstVisitor$_removeAnyViolationsForSameLine_closure1: int getLineNumber()>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: boolean isMethodCallOnName(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.CodeNarc$_parseArgs_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.DuplicateMapKeyAstVisitor$_visitMapExpression_closure2: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_addClosureFields_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.PropertyNameRule: void <init>()>",
    "<org.codenarc.util.ImportUtil$_sortImportsByLineNumber_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.LineLengthRule: boolean sourceLineIsImport(java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitCatchStatement_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter: java.lang.String getFormattedTimestamp()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.logging.PrintlnAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.design.SimpleDateFormatMissingLocaleRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure18$_closure22: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.ruleset.RuleSets: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitLostTestAstVisitor: void visitClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4$_closure14: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4: org.codenarc.results.Results getResults()>",
    "<org.codenarc.report.BaselineViolation: void <init>()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor$_closureReturnsArray_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitClassEx_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.convention.CompileStaticlVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.basic.ComparisonWithSelfAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.security.UnsafeImplementationAsMapAstVisitor: void visitCastExpression(org.codehaus.groovy.ast.expr.CastExpression)>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor$_processParameters_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.AssignmentToStaticFieldFromInstanceMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.serialization.SerializableClassMustDefineSerialVersionUIDAstVisitor$_visitClassEx_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure26: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySetterRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ClassSizeAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.naming.AbstractClassNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.basic.EmptyForStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTernaryExpressionAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure13: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.BracesForClassRule: java.util.List findOpeningBraceLine(org.codenarc.source.SourceCode,org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_getFileResults_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.XmlReportWriter$_buildProjectElement_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.AbstractRuleTestCase$_removeSuppressedViolations_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor$_visitConstructorOrMethod_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor: void visitMethodPointerExpression(org.codehaus.groovy.ast.expr.MethodPointerExpression)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor: boolean isSingleton(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.grails.GrailsDomainHasEqualsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ConfusingTernaryAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$ViolationAndPath: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.naming.PackageNameMatchesFilePathRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.comments.ClassJavadocRule$_applyTo_closure1: java.util.List getViolations()>",
    "<org.codenarc.rule.junit.JUnitAssertAlwaysFailsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.CatchIllegalMonitorStateExceptionRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitConstructorOrMethod_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: boolean isNotOpeningParenthesis(java.lang.String,int)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryObjectReferencesAstVisitor$_visitBlockStatement_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.ToStringReturnsNullAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonRule$_processImports_closure1: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_generateAllPossibleParameterSignatures_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: int columnForIndentLevel(int)>",
    "<org.codenarc.util.WildcardPattern$_matches_closure2: java.lang.String getString()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitSwitch_closure7: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCatchBlockAstVisitor$_visitTryCatchFinally_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.ClassConstraintsAndMapping$_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.basic.HardCodedWindowsFileSeparatorAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.WildcardPattern$_matches_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildProjectElement_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.InterfaceNameSameAsSuperInterfaceAstVisitor$_visitClassEx_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInVariableDeclarationAstVisitor: void visitExpressionStatement(org.codehaus.groovy.ast.stmt.ExpressionStatement)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor: java.lang.String violationMessage(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.MissingBlankLineAfterPackageRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.size.CrapMetricRule: java.lang.Object createCrapMetric()>",
    "<org.codenarc.rule.exceptions.ThrowRuntimeExceptionRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor: void <init>()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitBlockStatement_closure6: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.NoDefAstVisitor$_visitParameters_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.StaticDateFormatFieldAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ConstantAssertExpressionAstVisitor: void visitAssertStatement(org.codehaus.groovy.ast.stmt.AssertStatement)>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer: java.util.List getSourceDirectories()>",
    "<org.codenarc.ruleset.RuleSetUtil: boolean isXmlFile(java.lang.String)>",
    "<org.codenarc.rule.design.ToStringReturnsNullRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitClosureExpression_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryObjectReferencesAstVisitor$_visitBlockStatement_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySelfAssignmentRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.SpockIgnoreRestUsedAstVisitor: void visitClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_processMethodOrConstructorCall_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCatchBlockAstVisitor$_visitTryCatchFinally_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor$_methodReturnsCollection_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: java.lang.String getLine(int)>",
    "<org.codenarc.report.ReportWriterFactory$_getReportWriter_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.EmptyMethodInAbstractClassAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.junit.JUnitAssertAlwaysFailsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTernaryExpressionAstVisitor: boolean isOperationThatReturnsABoolean(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.ant.CodeNarcTask: org.apache.tools.ant.types.Path createClasspath()>",
    "<org.codenarc.rule.basic.EmptyCatchBlockAstVisitor: void visitCatchStatement(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.ConsecutiveStringConcatenationAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_applyTo_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInMethodDeclarationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.InlineXmlReportWriter: groovy.lang.Closure buildViolationElement(org.codenarc.rule.Violation)>",
    "<org.codenarc.rule.concurrency.ThreadGroupAstVisitor: boolean isConstructorNamed(org.codehaus.groovy.ast.expr.ConstructorCallExpression,java.lang.Class)>",
    "<org.codenarc.report.XmlReportWriter$_buildViolationElement_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGetterAstVisitor: boolean isSpockMethod(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTernaryExpressionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitConstructorOrMethod_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.braces.IfStatementBracesAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_collectAllPrivateMethods_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: boolean isNotDollar(java.lang.String,int)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_getMethodCallsAndMapKeys_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildRulesElement_closure9: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.exceptions.MissingNewInThrowStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsAstVisitor$_visitMethodCallExpression_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.util.BaselineResultsProcessor: java.lang.String scrub(java.lang.String)>",
    "<org.codenarc.report.BaselineXmlReportWriter: groovy.lang.Closure buildProjectElement(org.codenarc.AnalysisContext)>",
    "<org.codenarc.rule.formatting.SpaceAfterClosingBraceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.NullReturnTracker: boolean expressionReturnsNull(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.results.FileResults$_getNumberOfFilesWithViolations_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.imports.DuplicateImportRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.InlineXmlReportWriter: groovy.lang.Closure buildDescriptionElement(org.codenarc.rule.Rule)>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTernaryExpressionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.CollectAllIsDeprecatedRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.FieldTypeRequiredAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.report.XmlReportWriter$_buildProjectElement_closure3$_closure11: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure2$_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.ConsecutiveBlankLinesRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule$_addOrderingViolations_closure1: java.lang.Boolean getNonStaticFound()>",
    "<org.codenarc.rule.generic.StatelessClassRule: void setAddToIgnoreFieldNames(java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$ViolationAndPath: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.formatting.SpaceBeforeClosingBraceAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_getMethodCallsAndMapKeys_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_visitClassComplete_closure2: org.codehaus.groovy.ast.ClassNode getNode()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean hasElseBlock(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule: java.lang.Object this$dist$invoke$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ImportUtil$_getAllImports_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCallForLastElementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThreadGroupRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.LineLengthRule: boolean sourceLineIsPackage(java.lang.String)>",
    "<org.codenarc.rule.basic.DuplicateMapKeyRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsBlankLineAfterOpeningBrace_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DryUtil: boolean haveTheSameConstantPropertyExpression(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.basic.RemoveAllOnSelfAstVisitor: int getArity(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor$_methodReturnsCollection_closure1: java.lang.Boolean getReturnsCollection()>",
    "<org.codenarc.rule.formatting.SpaceAfterClosingBraceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyMethodAstVisitor$_visitMethod_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_collectAllPrivateFields_closure2$_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.io.ClassPathResource: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.AssignCollectionUniqueAstVisitor: boolean isChainedUnique(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.convention.VariableTypeRequiredAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_writeReport_closure1$_closure10: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.imports.UnusedImportRule: java.lang.String findReference(org.codenarc.source.SourceCode,java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonAstVisitor: void visitStatement(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19$_closure21: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.AbstractReportWriter: boolean isEnabled(org.codenarc.rule.Rule)>",
    "<org.codenarc.rule.convention.VectorIsObsoleteRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitImports_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.CodeNarcVersion: java.lang.String readCodeNarcVersion()>",
    "<org.codenarc.source.SourceCodeCriteria: boolean matches(org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_addInitializedField_closure3: java.lang.String getVarName()>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor: boolean isIgnoredOneElementMap(org.codehaus.groovy.ast.expr.MapExpression)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitSynchronizedStatement_closure7: org.codehaus.groovy.ast.stmt.SynchronizedStatement getStatement()>",
    "<org.codenarc.report.InlineXmlReportWriter$_buildViolationElement_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryConstructorAstVisitor: boolean isEmptyConstructor(org.codehaus.groovy.ast.ConstructorNode)>",
    "<org.codenarc.rule.concurrency.WaitOutsideOfWhileLoopRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: void removeInitializedField(java.lang.String)>",
    "<org.codenarc.rule.comments.ClassJavadocRule$_applyTo_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateCodeNarcRulesProperties$_main_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceAstVisitor: boolean checkIsEmptyBlock(java.lang.String,int)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor: boolean methodReturnsArray(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.basic.DuplicateMapKeyAstVisitor$_visitMapExpression_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean isOnlyAConstantOrLiteralExpression(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor$_visitMethodEx_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19$_closure21$_closure22: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainHasEqualsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor: void handleClosure(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.basic.DuplicateCaseStatementAstVisitor$_visitSwitch_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.AbstractClassWithoutAbstractMethodAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.InlineViolationsParser: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_visitClassEx_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ParameterCountAstVisitor$_isOverridden_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryObjectReferencesAstVisitor: void <init>()>",
    "<org.codenarc.rule.formatting.SpaceBeforeClosingBraceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueRule: void <init>()>",
    "<org.codenarc.report.AbstractReportWriter: void <clinit>()>",
    "<org.codenarc.util.PathUtil: java.lang.String removeLeadingSlash(java.lang.String)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_addViolationOnMismatch_closure1: java.lang.String getSetterName()>",
    "<org.codenarc.rule.exceptions.ThrowErrorRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor: void visitCatchStatement(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.rule.braces.WhileStatementBracesAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor$_processParameters_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.CloneableWithoutCloneAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27$_closure28: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryTearDownRule: void <init>()>",
    "<org.codenarc.rule.dry.DryUtil: boolean areTheSameConstantOrLiteralMaps(org.codehaus.groovy.ast.expr.MapExpression,org.codehaus.groovy.ast.expr.MapExpression)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: void checkIfThereIsNotBlankLineAfterOpeningBrace(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.AbstractSpaceAroundBraceAstVisitor: java.lang.String sourceLineOrEmpty(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToAndMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitSynchronizedStatement_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToGetAtMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.FieldNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.InterfaceNameSameAsSuperInterfaceAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.EqualsOverloadedAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BracesForIfElseRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_visitDeclarationExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyCatchBlockAstVisitor: boolean doesContainIgnoreWord(java.lang.String)>",
    "<org.codenarc.rule.exceptions.CatchThrowableRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void visitForLoop(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.rule.groovyism.UseCollectNestedAstVisitor: org.codehaus.groovy.ast.expr.Expression getMethodCallParameterThatIsAClosure(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor: void visitMethodComplete(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryParenthesesForMethodCallWithClosureAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule$_applyTo_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllPackageSections_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure7: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ant.CodeNarcTask: void setClasspathRef(org.apache.tools.ant.types.Reference)>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ParameterReassignmentAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean isReturnTrue(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.size.ParameterCountAstVisitor: void checkParametersCount(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.basic.EqualsOverloadedRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInMethodDeclarationAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.concurrency.SynchronizedOnThisAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor: java.util.Set collectIncludedProperties(org.codehaus.groovy.ast.expr.MapExpression)>",
    "<org.codenarc.rule.design.BooleanReturnTracker: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule$_applyTo_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitForLoop_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInFieldDeclarationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.MethodSizeAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.rule.formatting.SpaceAroundClosureArrowAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter$_writeReportToFile_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTransientModifierAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassComplete_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitLostTestAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.formatting.BracesForIfElseAstVisitor: void visitElseOpeningBrace(org.codenarc.rule.formatting.BracesForIfElseRule,org.codehaus.groovy.ast.stmt.IfStatement,java.lang.String)>",
    "<org.codenarc.util.ImportUtil: java.util.List sortImportsByLineNumber(java.util.List,org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.convention.NoJavaUtilDateRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ModifiersUtil$_parseModifiers_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ParameterCountAstVisitor: boolean isOverridden(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.comments.JavadocConsecutiveEmptyLinesRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor: void processMethodOrConstructorCall(org.codehaus.groovy.ast.expr.MethodCall)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryFloatInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.SourceFile: java.lang.String getName()>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_collectAllPrivateFields_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.VariableTypeRequiredAstVisitor$_visitDeclarationExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.SimpleDateFormatMissingLocaleAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor: void addViolationIfDoubleQuoted(org.codehaus.groovy.ast.expr.ConstantExpression)>",
    "<org.codenarc.rule.concurrency.SynchronizedReadObjectMethodAstVisitor$_isSerializable_closure1: java.lang.Boolean getIsSerializable()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySetterAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.ThrowRuntimeExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor$_isEmpty_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter: groovy.lang.Closure buildAllViolationsSection(org.codenarc.results.Results)>",
    "<org.codenarc.rule.formatting.ClosureStatementOnOpeningLineOfMultipleLineClosureAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.ruleset.MovedRules: java.lang.String getMovedOrRenamedMessageForRuleName(java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27$_closure28: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitUtil: boolean isAssertCallWithValueMatching(org.codehaus.groovy.ast.expr.MethodCallExpression,java.lang.String,groovy.lang.Closure)>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter$_writePackageViolations_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.MethodReturnTypeRequiredAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBigDecimalInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildProjectElement_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalClassMemberRule: void setIllegalMethodModifiers(java.lang.String)>",
    "<org.codenarc.rule.exceptions.ThrowThrowableRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.MultipleUnaryOperatorsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UseAssertEqualsInsteadOfAssertTrueRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.RemoveAllOnSelfAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.CodeNarcRunner: void <init>()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.InvertedConditionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase: void testThatUnrelatedCodeHasNoViolations()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27$_closure28: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.AssertionTrap: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryObjectReferencesAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule$_addOrderingViolations_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceAfterWhileRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: void visitClassComplete(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.basic.EmptySynchronizedStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DryUtil: boolean areTheSameConstantOrLiteralLists(org.codehaus.groovy.ast.expr.ListExpression,org.codehaus.groovy.ast.expr.ListExpression)>",
    "<org.codenarc.rule.comments.JavadocEmptyFirstLineRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor: boolean expressionContainsBannedCharacters(org.codehaus.groovy.ast.expr.ConstantExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.formatting.AbstractSingleSpaceAfterKeywordAstVisitor: void checkForSingleSpaceAndOpeningParenthesis(org.codehaus.groovy.ast.ASTNode,java.lang.String)>",
    "<org.codenarc.rule.basic.DuplicateMapKeyAstVisitor$_visitMapExpression_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToGetAtMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.AbstractSpaceAroundBraceAstVisitor: boolean isNotInsideGString()>",
    "<org.codenarc.rule.unnecessary.VariableUsageFinder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.FieldReferenceAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.logging.PrintStackTraceAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.util.BaselineResultsProcessor: void addFilesWithViolations(java.util.List,org.codenarc.results.Results)>",
    "<org.codenarc.rule.design.LocaleSetDefaultAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.report.HtmlReportWriter: java.lang.String toString()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure6: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.source.SourceString: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_addInitializedField_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.naming.ParameterNameRule: void <init>()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildProjectElement_closure3$_closure9$_closure10: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.exceptions.CatchNullPointerExceptionRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasState_closure1: org.codehaus.groovy.ast.ClassNode getClassNode()>",
    "<org.codenarc.rule.formatting.SpaceBeforeClosingBraceAstVisitor: boolean checkIsEmptyBlock(java.lang.String,int)>",
    "<org.codenarc.report.XmlReportWriter$_buildMessageElement_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.ImportFromSamePackageRule$_applyTo_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildCSS_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.serialization.EnumCustomSerializationIgnoredAstVisitor: boolean isWriteReplaceMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.ruleset.MovedRules$Renamed: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ImplicitReturnStatementAstVisitor: boolean isEmptyMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.groovyism.AssignCollectionUniqueAstVisitor: boolean isMatchingUniqueCall(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12$_closure15: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildProjectElement_closure3$_closure9: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.dry.DryUtil: boolean haveTheSameMapLiteralValue(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.ruleregistry.RuleRegistryInitializer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.AssertionTrap: boolean methodNamesCountsAsAssertion(java.lang.Object)>",
    "<org.codenarc.util.PathUtil: java.lang.String removePathPrefix(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertViolations(java.lang.String,java.util.Map[])>",
    "<org.codenarc.rule.junit.JUnitPublicFieldAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToRightShiftMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor$_visitCatchStatement_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void processElvisExpression(org.codehaus.groovy.ast.expr.ElvisOperatorExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInVariableDeclarationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitTestMethodWithoutAssertRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateRuleIndexPage$_main_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule: void this$dist$set$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.naming.PackageNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter: void writeTitle(java.io.Writer)>",
    "<org.codenarc.util.io.DefaultResourceFactory: org.codenarc.util.io.Resource getResource(java.lang.String)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalRule$_getViolations_closure1: org.codenarc.rule.AstVisitor getVisitor()>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule$_applyTo_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfViolationsWithPriority_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.PackageNameMatchesFilePathRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarc: void <init>()>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor$_visitMethodEx_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.MovedRules$Renamed: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.basic.BitwiseOperatorInConditionalRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.BigDecimalInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure2$_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ToStringReturnsNullAstVisitor: void checkForImplicitNullReturns(org.codehaus.groovy.ast.MethodNode,java.lang.String)>",
    "<org.codenarc.util.ImportUtil$_sourceLineAndNumberForImport_closure1: java.lang.String getAlias()>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer$_processDirectory_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaRule: void <init>()>",
    "<org.codenarc.rule.unused.ReferenceCollector: void <init>()>",
    "<org.codenarc.rule.comments.AbstractJavadocEmptyTagRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.concurrency.NestedSynchronizationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.GroovyDslRuleSet: void <clinit>()>",
    "<org.codenarc.rule.serialization.EnumCustomSerializationIgnoredAstVisitor: boolean isPrivateStaticFinalField(org.codehaus.groovy.ast.FieldNode,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor: void suppressException(java.lang.Class,groovy.lang.Closure)>",
    "<org.codenarc.report.BaselineXmlReportParser: java.lang.String unescapeXml(java.lang.String)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_visitDeclarationExpression_closure1: org.codehaus.groovy.ast.expr.DeclarationExpression getDeclarationExpression()>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule$_applyTo_closure1: java.util.List getViolations()>",
    "<org.codenarc.rule.convention.IfStatementCouldBeTernaryAstVisitor: java.lang.String getReturnValue(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.util.io.ClassPathResource: boolean exists()>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.ruleset.TopLevelDelegate: void rule(java.lang.Class,java.util.Map)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_visitMethodEx_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.NullReturnTracker: void visitReturnStatement(org.codehaus.groovy.ast.stmt.ReturnStatement)>",
    "<org.codenarc.rule.design.BuilderMethodWithSideEffectsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.naming.ObjectOverrideMisspelledMethodNameAstVisitor: void checkForExactMethodName(org.codehaus.groovy.ast.MethodNode,java.lang.String,java.util.List,java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor$_visitMethodEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonRule$_processImports_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToPowerMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20: java.lang.Object doCall(org.codenarc.rule.Rule,java.lang.Object)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: java.lang.String getPath()>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor: boolean lastExpressionIsEndOfExpression(org.codehaus.groovy.ast.expr.ListExpression)>",
    "<org.codenarc.rule.grails.GrailsDuplicateMappingAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.ant.CodeNarcTask: void checkMaxViolations(org.codenarc.results.Results)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure26: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.imports.UnnecessaryGroovyImportRule$_applyTo_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.JUnitLostTestRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_visitMethod_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: boolean isChainedMethodCallOnDifferentLine(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitImports_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter: java.lang.String getRuleDescriptionOrDefaultMessage(org.codenarc.rule.Rule)>",
    "<org.codenarc.rule.generic.IllegalClassMemberRule: void setIllegalPropertyModifiers(java.lang.String)>",
    "<org.codenarc.util.io.UrlResource: boolean exists()>",
    "<org.codenarc.util.WildcardPattern$_convertStringWithWildcardsToRegex_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_flexibleCheckForCorrectColumn_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPublicModifierAstVisitor: java.lang.String getDeclaration(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.comments.ClassJavadocRule$_applyTo_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildCSS_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor: void visitVariableExpression(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void checkStatementIndent(org.codehaus.groovy.ast.stmt.Statement,org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.results.FileResults$_getNumberOfFilesWithViolations_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BlockEndsWithBlankLineAstVisitor: void addViolation(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.basic.HardCodedWindowsFileSeparatorAstVisitor: void addViolationForWindowsSeparator(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.CustomCompilerPhaseSourceDecorator: java.lang.String toString()>",
    "<org.codenarc.rule.exceptions.CatchErrorRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_getViolations_closure1: java.lang.Object doCall(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor: boolean isMethodCall(org.codehaus.groovy.ast.expr.MethodCallExpression,java.lang.String)>",
    "<org.codenarc.rule.security.FileCreateTempFileAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.SynchronizedOnThisAstVisitor: void visitSynchronizedStatement(org.codehaus.groovy.ast.stmt.SynchronizedStatement)>",
    "<org.codenarc.rule.concurrency.StaticSimpleDateFormatFieldAstVisitor: boolean isSimpleDateFormatConstructorCall(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.PrintlnAstVisitor$_visitClassEx_closure1: java.lang.Object doCall(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.logging.PrintStackTraceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor$_visitCatchStatement_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.jdbc.JdbcResultSetReferenceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsAstVisitor$_visitMethodCallExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_uniqueAndSortedDeclaringClassNames_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.basic.EmptyFinallyBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.RuleSetUtil: void <clinit>()>",
    "<org.codenarc.tool.GenerateUtil: java.util.Properties getRuleExtraInformation()>",
    "<org.codenarc.rule.convention.NoDefAstVisitor$_visitDeclarationExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.FileEndsWithoutNewlineRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_getViolations_closure1: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.junit.JUnitLostTestAstVisitor$_visitClass_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.concurrency.SynchronizedReadObjectMethodAstVisitor$_isSerializable_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.braces.ForStatementBracesAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: void checkTypeIfNotDynamicallyTyped(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.basic.DoubleNegativeAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.PrintlnAstVisitor$_visitClassEx_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ImportUtil$_sourceLineAndNumberForImport_closure1: java.lang.String getClassName()>",
    "<org.codenarc.util.ModifiersUtil: void <clinit>()>",
    "<org.codenarc.util.PathUtil: java.lang.String getName(java.lang.String)>",
    "<org.codenarc.rule.serialization.EnumCustomSerializationIgnoredAstVisitor: boolean isWriteObjectMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.groovyism.UseCollectNestedAstVisitor: void visitClassComplete(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.exceptions.CommonCatchAstVisitor: void visitCatchStatement(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsNotBlankLineAfterOpeningBrace_closure3: java.lang.Integer getClassStartLine()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitClosureExpression_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.concurrency.SynchronizedReadObjectMethodAstVisitor$_isSerializable_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processImports_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.ClassReferenceAstVisitor: void <init>(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCallToSubstringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCallForLastElementAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.generic.StatelessClassRule: boolean matchesIgnoreFieldTypes(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToMinusMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.DuplicateSetValueRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.ImportFromSamePackageRule$_applyTo_closure1: java.util.List getViolations()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_getMethodCallsAndMapKeys_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure11: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.basic.BrokenOddnessCheckRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.AbstractJavadocMissingDescriptionRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertTwoViolations_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.InlineViolationsParser$_parseLine_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.VolatileLongOrDoubleFieldVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.ruleset.RuleSetUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.BusyWaitAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.VirtualResults: java.util.List getViolations()>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckAstVisitor: boolean isMethodInvocation(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.rule.dry.DryUtil: boolean haveTheSameConstantValue(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.report.JsonReportWriter: boolean isWriteAsSingleLine()>",
    "<org.codenarc.report.TextReportWriter: void writeViolation(java.io.Writer,org.codenarc.rule.Violation,java.lang.String)>",
    "<org.codenarc.rule.grails.GrailsPublicControllerMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults: java.util.List getViolations()>",
    "<org.codenarc.rule.groovyism.ExplicitTypeInstantiationAstVisitor: void <init>(java.lang.String)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToEqualsMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.StringSourceAnalyzer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor$_processParameters_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildMessageElement_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitPublicNonTestMethodRule: void <init>()>",
    "<org.codenarc.rule.design.CollectionReturnTracker$_expressionReturnsList_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueAstVisitor: void findViolations(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.security.UnsafeArrayDeclarationAstVisitor: boolean isPublicStaticFinal(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor$_visitConstructorOrMethod_closure2: org.codehaus.groovy.ast.MethodNode getNode()>",
    "<org.codenarc.source.AbstractSourceCode$_getLineNumberForCharacterIndex_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitSetUpCallsSuperRule: void <init>()>",
    "<org.codenarc.rule.imports.AbstractImportRule$_findLineNumberOfFirstClassDeclaration_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processStaticImports_closure2: java.lang.Object doCall(java.lang.Object,org.codehaus.groovy.ast.ImportNode)>",
    "<org.codenarc.rule.concurrency.StaticConnectionAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.CodeNarc$_parseArgs_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor$_visitMethodCallExpression_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryOverridingMethodAstVisitor: boolean isSingleLineMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean isSingleStatementBlock(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.tool.GenerateCodeNarcRulesProperties: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UseAssertEqualsInsteadOfAssertTrueAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.ruleset.TopLevelDelegate: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportParser: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.CloneableWithoutCloneAstVisitor: boolean hasCloneMethod(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.results.DirectoryResults: int getNumberOfFilesWithViolations(int)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPublicModifierRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCallForLastElementAstVisitor: boolean isSubtractOneOnObject(java.lang.String,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor: void visitClassComplete(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolation_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryToStringAstVisitor: void visitDeclarationExpression(org.codehaus.groovy.ast.expr.DeclarationExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryLongInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsMassAssignmentAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_findMatchingSuperClassMethod_closure5: java.util.List getParameters()>",
    "<org.codenarc.rule.security.InsecureRandomAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildButtons_closure6$_closure30: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule: java.lang.Object this$dist$get$3(java.lang.String)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor: java.lang.String violationMessage(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.grails.GrailsStatelessServiceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstanceOfCheckAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySafeNavigationOperatorRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.JavadocEmptyLastLineRule: void <clinit>()>",
    "<org.codenarc.rule.formatting.SpaceBeforeClosingBraceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.AbstractHtmlReportWriter: boolean isDirectoryContainingFilesWithViolations(org.codenarc.results.Results)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_getViolations_closure1$_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.JsonReportWriter: java.lang.Object[] buildRulesElement(org.codenarc.AnalysisContext)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassEx_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitUnnecessarySetUpRule: void <init>()>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor$_visitMethodCallExpression_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.UseAssertSameInsteadOfAssertTrueAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.generic.IllegalClassMemberRule: void setAllowedMethodModifiers(java.lang.String)>",
    "<org.codenarc.source.AbstractSourceCode$_removeGrabTransformation_closure1$_closure3$_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalRule: java.util.List getViolations(org.codenarc.rule.AstVisitor,org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.design.CloneableWithoutCloneAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.FinalClassWithProtectedMemberAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryToStringAstVisitor: boolean isStringType(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.grails.GrailsDuplicateMappingRule: void <init>()>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor: boolean isExpressionUsedInAnnotation(org.codehaus.groovy.ast.expr.ConstantExpression,org.codehaus.groovy.ast.AnnotationNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCallForLastElementAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.naming.PackageNameMatchesFilePathRule: java.lang.String removeTrailingPeriod(java.lang.String)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14$_closure16: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor$_processParameters_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: boolean isSingleLineClassViolation()>",
    "<org.codenarc.rule.convention.StaticFieldsBeforeInstanceFieldsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.design.AssignmentToStaticFieldFromInstanceMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildProjectElement_closure3$_closure9: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildProjectElement_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.BracesForTryCatchFinallyAstVisitor: void visitCatch(org.codenarc.rule.formatting.BracesForTryCatchFinallyRule,org.codehaus.groovy.ast.stmt.TryCatchStatement)>",
    "<org.codenarc.rule.security.UnsafeImplementationAsMapRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ComparisonWithSelfAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: int rightMostColumn(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor$_visitCatchStatement_closure2: java.lang.Object doCall(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.ruleset.FilteredRuleSet$_getRules_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BlockStartsWithBlankLineAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_setRuleProperties_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.serialization.SerialPersistentFieldsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBigDecimalInstantiationAstVisitor: boolean shouldSkipViolation(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInVariableDeclarationAstVisitor: boolean contains(java.lang.String,java.lang.String)>",
    "<org.codenarc.report.XmlReportWriter$_buildSourceLineElement_closure7: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.XmlReportWriter: groovy.lang.Closure buildPackageElement(org.codenarc.results.Results)>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueAstVisitor: void visitStaticMethodCallExpression(org.codehaus.groovy.ast.expr.StaticMethodCallExpression)>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: boolean isBinaryExpressionWithMethodCallOnName(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.ruleset.RuleSetUtil: org.codenarc.ruleset.RuleSet loadRuleSetFile(java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCatchBlockAstVisitor$_visitTryCatchFinally_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationAstVisitor: void <init>(java.lang.Class,java.util.List,java.lang.String)>",
    "<org.codenarc.rule.exceptions.CommonThrowAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainHasToStringAstVisitor: boolean isNotInnerEnum(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.basic.EmptyFinallyBlockAstVisitor: void visitTryCatchFinally(org.codehaus.groovy.ast.stmt.TryCatchStatement)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor$_methodReturnsCollection_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.util.ImportUtil$_sourceLineAndNumberForImport_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.results.DirectoryResults: java.lang.String toString()>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor$_getParameterDefinitionAsString_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor$_hasTrailingComma_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitSetUpCallsSuperAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.AnalyzerException: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter: boolean isWriteToStandardOut()>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule$_applyTo_closure2: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: boolean isPropertyAccessForName(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.rule.design.BooleanReturnTracker: boolean isNull(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.design.AbstractClassWithoutAbstractMethodAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.util.ModifiersUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.InlineViolationsParser$ParseResult: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitClosureExpression_closure8: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor$_isExpressionUsedInAnnotation_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3: java.lang.String getVarName()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void visitCatchStatement(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolations_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToModMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void visitCastExpression(org.codehaus.groovy.ast.expr.CastExpression)>",
    "<org.codenarc.report.XmlReportWriter: groovy.lang.Closure buildPackageElements(org.codenarc.results.Results)>",
    "<org.codenarc.rule.comments.JavadocConsecutiveEmptyLinesRule: void <clinit>()>",
    "<org.codenarc.report.HtmlReportWriter$_buildBodySection_closure1: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.ruleset.RuleSetBuilder: void <init>()>",
    "<org.codenarc.rule.formatting.LineLengthRule: boolean flagIfPackage(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGetterAstVisitor: void addUnnecessaryGetterViolation(org.codehaus.groovy.ast.expr.MethodCallExpression,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPublicModifierAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor$_getParameterDefinitionAsString_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure14: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.imports.ImportFromSamePackageRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.util.WildcardPattern: java.lang.String convertStringWithWildcardsToRegex(java.lang.String)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor: boolean isNotElementOfAnnotation(org.codehaus.groovy.ast.expr.ConstantExpression)>",
    "<org.codenarc.rule.convention.NoJavaUtilDateAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule: java.util.Map collectAllPrivateMethods(org.codehaus.groovy.ast.ModuleNode)>",
    "<org.codenarc.rule.security.ObjectFinalizeAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.braces.IfStatementBracesAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThreadGroupAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitClassComplete_closure5: java.lang.Object doCall(org.codehaus.groovy.ast.AnnotationNode)>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void checkMethodParameter(org.codehaus.groovy.ast.Parameter)>",
    "<org.codenarc.ant.CodeNarcTask$_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.results.DirectoryResults$_getTotalNumberOfFiles_closure5: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.LongLiteralWithLowerCaseLAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_addViolationsForMultipleFieldDeclarations_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3$_closure4: java.lang.String getVarName()>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor$_visitCatchStatement_closure2: org.codehaus.groovy.ast.stmt.CatchStatement getStatement()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: void <init>()>",
    "<org.codenarc.rule.generic.RequiredRegexRule: boolean isReady()>",
    "<org.codenarc.report.InlineXmlReportWriter$_buildViolationElement_closure1$_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonRule: void checkLastLineForSemicolon(org.codenarc.source.SourceCode,java.util.List,org.codehaus.groovy.ast.AnnotatedNode)>",
    "<org.codenarc.report.ReportWriterFactory$_getReportWriter_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.DuplicateMapKeyAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.StaticCalendarFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.AbstractSpaceAroundBraceAstVisitor: boolean isNotWhitespace(java.lang.String,int)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor: void <init>(java.lang.Class,java.util.Set)>",
    "<org.codenarc.rule.formatting.BracesForClassRule$_applyTo_closure1: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.design.AssignmentToStaticFieldFromInstanceMethodAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.convention.MethodReturnTypeRequiredAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.design.CloneWithoutCloneableAstVisitor: boolean isCloneable(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor$_visitDeclarationExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.UseOfNotifyMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_getViolations_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateUtil$_createSortedListOfAllRules_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.jdbc.DirectConnectionManagementAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.grails.GrailsDomainHasToStringAstVisitor$_visitClassComplete_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainCantReferenceServiceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitPublicPropertyAstVisitor: boolean isIgnoredPropertyName(org.codehaus.groovy.ast.PropertyNode)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIntegerInstantiationAstVisitor: void <init>()>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.source.AbstractSourceCode: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter: java.lang.String getHtmlRuleDescription(org.codenarc.rule.Rule)>",
    "<org.codenarc.rule.groovyism.ExplicitStackInstantiationRule$1: void <init>(org.codenarc.rule.groovyism.ExplicitStackInstantiationRule,java.lang.Object)>",
    "<org.codenarc.rule.basic.EqualsAndHashCodeAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UseAssertSameInsteadOfAssertTrueRule: void <init>()>",
    "<org.codenarc.rule.exceptions.ConfusingClassNamedExceptionAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.junit.JUnitPublicPropertyAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.formatting.BracesForIfElseAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure25: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor: void visitMethodComplete(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryObjectReferencesAstVisitor: void accumulateOrError(java.lang.String,org.codehaus.groovy.ast.stmt.ExpressionStatement)>",
    "<org.codenarc.rule.grails.ClassConstraintsAndMapping: void <init>()>",
    "<org.codenarc.ant.CodeNarcTask: org.codenarc.results.Results executeRunnerWithConfiguredClasspath(java.lang.Object)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitClosureExpression_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner$_execute_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertViolation(org.codenarc.rule.Violation,java.lang.Integer,java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: boolean methodExcluded(java.util.regex.Pattern,java.lang.String)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_processMethodOrConstructorCall_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameRule$_toSet_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.ExceptionExtendsThrowableRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30$_closure31: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule: java.util.List collectAllPrivateFields(org.codehaus.groovy.ast.ModuleNode)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasOneStaticFieldNamedInstance_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.RuleSets: void <clinit>()>",
    "<org.codenarc.rule.exceptions.ReturnNullFromCatchBlockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedArrayRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure19: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: void visitCastExpression(org.codehaus.groovy.ast.expr.CastExpression)>",
    "<org.codenarc.report.XmlReportUtil$_cdata_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationAstVisitor$_visitConstructorCallExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildButtons_closure6: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertyLockingAstVisitor: boolean isWriteLocked(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueAstVisitor: void <clinit>()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure26: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.ConsecutiveBlankLinesRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter: java.lang.String formatSourceLine(java.lang.String,int)>",
    "<org.codenarc.rule.formatting.SpaceAroundMapEntryColonAstVisitor: java.lang.String mapEntrySourceLine(org.codehaus.groovy.ast.expr.MapEntryExpression)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure24: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure11$_closure13$_closure14: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.InlineViolationsParser: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<org.codenarc.rule.StubRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUtil$_isAssertCallWithConstantValue_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.results.DirectoryResults: int getNumberOfViolationsWithPriority(int,boolean)>",
    "<org.codenarc.rule.groovyism.ExplicitTypeInstantiationAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.basic.EqualsOverloadedAstVisitor: boolean onlyArgumentHasTypeObject(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19$_closure20: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: int firstNonWhitespaceColumn(java.lang.String)>",
    "<org.codenarc.rule.logging.PrintlnAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_addViolationsForMultipleFieldDeclarations_closure7: java.lang.Object doCall(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_addClosureFields_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalRule$_getViolations_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10$_closure11: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule$1: void <init>(org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule,java.lang.Object)>",
    "<org.codenarc.source.AbstractSourceCode$_getLineNumberForCharacterIndex_closure2: java.lang.Integer getLineCount()>",
    "<org.codenarc.rule.formatting.BracesForTryCatchFinallyAstVisitor$_visitCatch_closure1: org.codenarc.rule.formatting.BracesForTryCatchFinallyRule getMyRule()>",
    "<org.codenarc.rule.concurrency.StaticMatcherFieldAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.concurrency.VolatileArrayFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor$_visitBlockStatement_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyTryBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildViolationElement_closure6: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.NoJavaUtilDateAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: boolean isNamedLikeAConstant(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.report.SortableHtmlReportWriter: java.lang.String toString()>",
    "<org.codenarc.ruleset.XmlFileRuleSet$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.NullResultsProcessor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.StatelessClassRule: boolean isReady()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: java.lang.String parentPackageName(java.lang.String)>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor: boolean isSubclass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllPackageSections_closure5$_closure17: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.comments.AbstractJavadocEmptyTagRule: java.lang.String buildRegex()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.convention.ConfusingTernaryRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.AbstractSourceCode: java.lang.String line(int)>",
    "<org.codenarc.rule.convention.InvertedIfElseAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainHasEqualsAstVisitor$_visitClassComplete_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure18: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.comments.JavadocEmptyAuthorTagRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_writeReport_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure19$_closure23: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCallForLastElementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.WildcardPattern$_convertStringWithWildcardsToRegex_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.util.io.DefaultResourceFactory: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4$_closure13: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule$_addOrderingViolations_closure1: java.lang.Object doCall(int,java.lang.String)>",
    "<org.codenarc.tool.GenerateRuleIndexPage: void main(java.lang.String[])>",
    "<org.codenarc.rule.groovyism.GStringAsMapKeyAstVisitor: void visitMapEntryExpression(org.codehaus.groovy.ast.expr.MapEntryExpression)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_generateAllPossibleParameterSignatures_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processImports_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintRule: void <init>()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySubstringAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.CompareToWithoutComparableRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_removeInitializedField_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.naming.ParameterNameAstVisitor: void processParameters(org.codehaus.groovy.ast.Parameter[],java.lang.String)>",
    "<org.codenarc.rule.convention.InvertedConditionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.InlineXmlReportWriter$_buildViolationElement_closure1$_closure3: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.formatting.BlockStartsWithBlankLineAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.AbstractSourceCode: int getLineNumberForCharacterIndex(int)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure4: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: void visitIfElseThatIsTheLastStatementInABlock(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor$_visitConstructorOrMethod_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.basic.EmptyCatchBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.MultipleLoggersAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ParameterCountAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UseAssertFalseInsteadOfNegationRule: void <init>()>",
    "<org.codenarc.tool.GenerateRuleSetAllRulesByCategory: void main(java.lang.String[])>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor: boolean isOneLiner(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor$_methodReturnsArray_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.ClassForNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor: void visitMapExpression(org.codehaus.groovy.ast.expr.MapExpression)>",
    "<org.codenarc.test.AbstractTestCase: void <init>()>",
    "<org.codenarc.rule.security.JavaIoPackageAccessRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.AddEmptyStringAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.basic.DuplicateSetValueAstVisitor$_visitCastExpression_closure1: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean isReturnFalse(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.junit.UseAssertFalseInsteadOfNegationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.EmptyMethodInAbstractClassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.WildcardPattern$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsServletContextReferenceRule: void <init>()>",
    "<org.codenarc.util.SourceCodeUtil: java.util.List sourceLinesBetween(org.codenarc.source.SourceCode,int,int,int,int)>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor$_visitMethodEx_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.DeadCodeAstVisitor$_visitBlockStatement_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertyLockingAstVisitor: void saveMethodInfo(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.IdeTextReportWriter: java.lang.String getViolationLocationString(org.codenarc.rule.Violation,java.lang.String)>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.AssignmentInConditionalAstVisitor: void addViolationIfAssignment(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.MultipleUnaryOperatorsAstVisitor: void checkForSecondUnaryOperator(org.codehaus.groovy.ast.expr.Expression,java.lang.Class)>",
    "<org.codenarc.rule.unused.UnusedArrayAstVisitor: void visitExpressionStatement(org.codehaus.groovy.ast.stmt.ExpressionStatement)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.junit.UnnecessaryFailRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor$_visitConstructorOrMethod_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor$_visitListExpression_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer: java.util.List collectViolations(org.codenarc.source.SourceCode,org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.rule.basic.HardCodedWindowsRootDirectoryRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitTypeInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCastAstVisitor: void <clinit>()>",
    "<org.codenarc.results.DirectoryResults: void <init>(java.lang.String,int)>",
    "<org.codenarc.rule.convention.FieldTypeRequiredAstVisitor: boolean isIgnoredFieldName(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementAstVisitor: boolean allBranchesReturn(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.tool.GenerateCodeNarcRulesProperties$_main_closure1$_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllSummaryByPackageRowsRecursively_closure3$_closure13: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitConstructorOrMethod_closure1: org.codehaus.groovy.ast.MethodNode getNode()>",
    "<org.codenarc.rule.AbstractRuleTestCase: void setUpAbstractRuleTestCase()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitLostTestAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BracesForTryCatchFinallyAstVisitor$_visitCatch_closure1: java.lang.Object doCall(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.rule.logging.LogUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ConsecutiveUtils: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.braces.WhileStatementBracesAstVisitor: void visitWhileLoop(org.codehaus.groovy.ast.stmt.WhileStatement)>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.VariableTypeRequiredRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ClassSizeRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.PrintlnAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.source.SourceCode$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EqualsAndHashCodeAstVisitor$_visitClassEx_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule$_addOrderingViolations_closure1: java.util.List getViolations()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27$_closure29: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ant.CodeNarcTask: void checkMaxViolationForPriority(int,int,java.lang.String)>",
    "<org.codenarc.ruleset.RuleSetDelegate$_methodMissing_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.SortableHtmlReportWriter: groovy.lang.Closure buildSummary(org.codenarc.results.Results)>",
    "<org.codenarc.rule.exceptions.MissingNewInThrowStatementAstVisitor: boolean looksLikeAnExceptionType(java.lang.String)>",
    "<org.codenarc.tool.GenerateRuleSetAllRules: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.GroovyDslRuleSet$_createGroovyShell_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10$_closure11$_closure12: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.basic.DuplicateSetValueAstVisitor$_visitCastExpression_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.size.CrapMetricAstVisitor: void <init>(org.gmetrics.metric.crap.CrapMetric)>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.SourceString: void setPath(java.lang.String)>",
    "<org.codenarc.rule.serialization.SerialVersionUIDAstVisitor: void visitProperty(org.codehaus.groovy.ast.PropertyNode)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.SimpleDateFormatMissingLocaleAstVisitor: boolean hasMinimumParameterCount(org.codehaus.groovy.ast.expr.ConstructorCallExpression,int)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckAstVisitor: boolean isNotNullCheckAgainstSuperReference(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.logging.LoggerForDifferentClassAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitMapExpression_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.grails.GrailsDomainHasToStringAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: boolean isExpressionAccessingMemberNamed(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.rule.InlineViolationsParser: org.codenarc.rule.InlineViolationsParser$ParseResult parse(java.lang.String)>",
    "<org.codenarc.rule.convention.CouldBeElvisRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.CloseWithoutCloseableAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: boolean isSingleLineClassViolation()>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionAstVisitor: void <clinit>()>",
    "<org.codenarc.util.BaselineResultsProcessor$_removeMatchingViolation_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryStringInstantiationAstVisitor: boolean isConstructorCallAViolation(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.basic.EmptyCatchBlockAstVisitor: boolean isExceptionIgnored(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor$_argumentsContainThis_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.DeadCodeAstVisitor: boolean statementForcesMethodReturn(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_initializeImportNames_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.CouldBeSwitchStatementAstVisitor: java.lang.Boolean isSupportedLeftExpressionType(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.grails.GrailsDomainHasToStringRule: void <init>()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitMapExpression_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor: void <init>()>",
    "<org.codenarc.report.XmlReportWriter$_buildRulesElement_closure9$_closure19$_closure20: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_isAnnotatedWithOverride_closure6: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaRule$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.naming.PropertyNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ant.CodeNarcTask: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildRulesElement_closure9$_closure19$_closure20: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintAstVisitor$_visitMethodCallExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.BaselineResultsProcessor$_processResults_closure1$_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryTearDownAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllPackageSections_closure5: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.grails.GrailsDomainHasEqualsAstVisitor$_visitClassComplete_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.SpockIgnoreRestUsedRule: void <init>()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ToStringReturnsNullAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer: void processFile(java.lang.String,org.codenarc.results.DirectoryResults,org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.rule.exceptions.ExceptionExtendsThrowableAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.CloneableWithoutCloneAstVisitor$_visitClassEx_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.StaticFieldsBeforeInstanceFieldsAstVisitor: void visitClassComplete(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.ruleset.MovedRules: org.codenarc.ruleset.MovedRules$Renamed renamedTo(java.lang.String)>",
    "<org.codenarc.ruleset.RuleSetUtil: org.codenarc.rule.Rule loadRuleScriptFile(java.lang.String)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_visitMethod_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_buildFileElement_closure5$_closure16: org.codenarc.results.FileResults getResults()>",
    "<org.codenarc.util.BaselineResultsProcessor$_removeMatchingViolation_closure2: org.codenarc.report.BaselineViolation getBaselineViolation()>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitClassEx_closure4: org.codehaus.groovy.ast.ClassNode getNode()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_getViolations_closure1$_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure5$_closure13$_closure14: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_initializeImportNames_closure5: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: org.codehaus.groovy.ast.stmt.Statement getStatement(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonAstVisitor: void removeAnyViolationsForSameLine(int)>",
    "<org.codenarc.rule.FieldReferenceAstVisitor: java.util.Collection getUnreferencedFields()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryLongInstantiationAstVisitor: void <init>()>",
    "<org.codenarc.rule.AbstractAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.ant.CodeNarcTask$_classLoaderForPaths_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_getFirstValue_closure4: java.util.List getKeys()>",
    "<org.codenarc.report.XmlReportWriter$_writeReport_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.JUnitSetUpCallsSuperAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void flexibleCheckForCorrectColumn(org.codehaus.groovy.ast.ASTNode,java.lang.String)>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.design.CloneWithoutCloneableRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.DoubleCheckedLockingAstVisitor: java.lang.String getNullCheckVariableName(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.report.SortableHtmlReportWriter: java.util.List getFileResults(org.codenarc.results.Results,java.util.List)>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor: boolean isDoubleTypeName(java.lang.String)>",
    "<org.codenarc.rule.basic.DeadCodeAstVisitor$_visitBlockStatement_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.results.FileResults$_getNumberOfViolationsWithPriority_closure1: int getPriority()>",
    "<org.codenarc.report.XmlReportWriter: groovy.lang.Closure buildSourceLineElement(org.codenarc.rule.Violation)>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertValidRegex(java.lang.String,java.lang.String)>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfViolationsWithPriority_closure3: boolean getRecursive()>",
    "<org.codenarc.report.BaselineXmlReportWriter: void writeReport(java.io.Writer,org.codenarc.AnalysisContext,org.codenarc.results.Results)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure11$_closure13: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.ConsecutiveLiteralAppendsAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueAstVisitor: boolean isJUnitAssert(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.basic.AssertWithinFinallyBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processImports_closure1: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.basic.RemoveAllOnSelfRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor: void checkClass(org.gmetrics.result.ClassMetricResult,org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.source.CustomCompilerPhaseSourceDecorator: void <init>(org.codenarc.source.SourceCode,int)>",
    "<org.codenarc.tool.GenerateUtil: java.util.List createSortedListOfAllRules()>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: void processMethodNode(org.codehaus.groovy.ast.MethodNode,java.lang.String)>",
    "<org.codenarc.rule.junit.JUnitUtil: boolean isAssertCallWithLiteralValue(org.codehaus.groovy.ast.expr.MethodCallExpression,java.lang.String,boolean)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.naming.PackageNameMatchesFilePathRule: boolean isReady()>",
    "<org.codenarc.rule.junit.JUnitPublicPropertyAstVisitor: void visitProperty(org.codehaus.groovy.ast.PropertyNode)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsNotBlankLineAfterOpeningBrace_closure2: java.lang.Integer getClassStartLine()>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure6: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule: java.lang.Object this$dist$get$3(java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.PrintlnAstVisitor$_visitClassEx_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GStringAsMapKeyRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfFilesWithViolations_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor$_visitCastExpression_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.source.SourceString: void <init>(java.lang.String,java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryParenthesesForMethodCallWithClosureRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.StatelessClassRule: boolean matchesIgnoreFieldNames(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaRule$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertInlineViolations(java.lang.String)>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: java.lang.String getName()>",
    "<org.codenarc.rule.basic.DeadCodeAstVisitor$_visitBlockStatement_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllSummaryByPackageRowsRecursively_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.BaselineViolation: void <init>(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationToGetClassAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.FileResults$_getNumberOfViolationsWithPriority_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUtil$_isAssertCallWithNonNullConstantValue_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoJavaUtilDateAstVisitor$_visitImports_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter: void writeReport(java.io.Writer,org.codenarc.AnalysisContext,org.codenarc.results.Results)>",
    "<org.codenarc.rule.formatting.ClosureStatementOnOpeningLineOfMultipleLineClosureAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_writeReport_closure1$_closure8: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.junit.AssertionTrap$_methodNamesCountsAsAssertion_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildViolationElement_closure6$_closure15: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.ArrayReturnTracker: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule$1: void <init>(org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule,java.lang.Object)>",
    "<org.codenarc.ruleset.MovedRules$Renamed: java.lang.String messageFor(java.lang.String)>",
    "<org.codenarc.util.ModifiersUtil: int parseSingleModifier(java.lang.String)>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule: java.lang.Object this$dist$invoke$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.ruleset.RuleSetDelegate$_findRule_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_visitMethodEx_closure1: org.codehaus.groovy.ast.MethodNode getNode()>",
    "<org.codenarc.rule.formatting.MissingBlankLineAfterImportsRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor: void visitListExpression(org.codehaus.groovy.ast.expr.ListExpression)>",
    "<org.codenarc.report.SortableHtmlReportWriter: groovy.lang.Closure buildBodySection(org.codenarc.AnalysisContext,org.codenarc.results.Results)>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unnecessary.AddEmptyStringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ClassNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UseAssertTrueInsteadOfAssertEqualsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.CloneableWithoutCloneAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_increaseIndentForClosureBlocks_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UseAssertSameInsteadOfAssertTrueRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGetterAstVisitor: void addViolationsIfGetter(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.AbstractConstructorCallAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDuplicateMappingAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameRule$_toSet_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.results.FileResults: int getNumberOfViolationsWithPriority(int)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure13: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor: boolean hasOneStaticFieldOfItself(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.grails.GrailsMassAssignmentAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.convention.ConfusingTernaryAstVisitor: void addViolationForNotExpression(org.codehaus.groovy.ast.expr.TernaryExpression,org.codehaus.groovy.ast.expr.NotExpression)>",
    "<org.codenarc.rule.groovyism.UseCollectNestedAstVisitor: void <init>()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildButtons_closure6$_closure30: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.util.io.UrlResource: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalClassMemberRule: void setAllowedFieldModifiers(java.lang.String)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildViolationElement_closure6: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.JUnitUtil$_isAssertCallWithNonNullConstantValue_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyStaticInitializerAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule$_applyTo_closure2: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.InlineViolationsParser$ParseResult: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.logging.SystemErrPrintRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectionCallAstVisitor: void <clinit>()>",
    "<org.codenarc.util.ImportUtil: java.util.List getNonStaticImportsSortedByLineNumber(org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.security.NonFinalPublicFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.TopLevelDelegate: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.basic.EmptyElseBlockAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.AbstractRuleTestCase$_removeSuppressedViolations_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor: boolean hasSingletonAnnotation(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.rule.size.MethodSizeAstVisitor: boolean isIgnoredMethodName(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeRule: void <init>()>",
    "<org.codenarc.rule.serialization.EnumCustomSerializationIgnoredAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryConstructorAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.util.WildcardPattern$_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure2$_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter: void writeFooter(java.io.Writer)>",
    "<org.codenarc.rule.basic.EmptyForStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility: org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility valueOf(java.lang.String)>",
    "<org.codenarc.rule.design.CloseWithoutCloseableAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryStringInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.InlineViolationsParser$_parseLine_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ComparisonOfTwoConstantsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitPublicNonTestMethodRule: void setIgnoreMethodsWithAnnotations(java.lang.String)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14$_closure16: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4: org.codenarc.results.Results getResults()>",
    "<org.codenarc.report.HtmlReportWriter$_buildBodySection_closure1$_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter: boolean isRoot(org.codenarc.results.Results)>",
    "<org.codenarc.rule.convention.NoDefRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_flexibleCheckForCorrectColumn_closure8: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.serialization.SerializableClassMustDefineSerialVersionUIDAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.tool.GenerateRuleSetAllRules: void main(java.lang.String[])>",
    "<org.codenarc.rule.concurrency.SynchronizedMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleregistry.PropertiesFileRuleRegistry: void <clinit>()>",
    "<org.codenarc.rule.naming.ClassNameSameAsFilenameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_writeReport_closure1$_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.VolatileArrayFieldAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_findRule_closure3: java.lang.String getName()>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitClassEx_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.comments.ClassJavadocRule$_applyTo_closure1: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.junit.JUnitFailWithoutMessageRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoJavaUtilDateAstVisitor: void visitImports(org.codehaus.groovy.ast.ModuleNode)>",
    "<org.codenarc.rule.convention.NoDefAstVisitor$_visitParameters_closure2: java.lang.Object doCall(org.codehaus.groovy.ast.Parameter)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySelfAssignmentAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.basic.DuplicateCaseStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14$_closure15: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor: void addViolationWithMessage(org.codehaus.groovy.ast.expr.MethodCallExpression,org.codehaus.groovy.ast.expr.PropertyExpression)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: boolean isMatchingField(org.codehaus.groovy.ast.FieldNode,java.lang.String)>",
    "<org.codenarc.rule.convention.IfStatementCouldBeTernaryAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.security.InsecureRandomRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EqualsAndHashCodeAstVisitor$_visitClassEx_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer: org.codenarc.results.Results analyze(org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.rule.ClassReferenceAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.AbstractRuleTestCase: java.lang.String inlineViolation(java.lang.String)>",
    "<org.codenarc.rule.convention.HashtableIsObsoleteRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.test.AbstractTestCase: java.lang.String classNameNoPackage()>",
    "<org.codenarc.rule.design.InstanceofAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.basic.DuplicateSetValueAstVisitor: boolean isDuplicate(org.codehaus.groovy.ast.expr.Expression,java.util.List)>",
    "<org.codenarc.rule.basic.EmptyClassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarc$__clinit__closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ThrowExceptionFromFinallyBlockAstVisitor: void visitThrowStatement(org.codehaus.groovy.ast.stmt.ThrowStatement)>",
    "<org.codenarc.rule.InlineViolationsParser: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThreadYieldAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.basic.EmptyMethodAstVisitor$_visitMethod_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: void visitVariableExpression(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.rule.junit.CoupledTestCaseAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: java.util.Collection interfaceMethods(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.JsonReportWriter: java.util.Map buildFileElement(org.codenarc.results.FileResults)>",
    "<org.codenarc.report.XmlReportUtil$_cdata_closure1: java.lang.String getText()>",
    "<org.codenarc.rule.basic.ThrowExceptionFromFinallyBlockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyStaticInitializerRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter$_getSortedRules_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.JsonReportWriter: java.util.Map buildViolationElement(org.codenarc.rule.Violation)>",
    "<org.codenarc.rule.junit.UseAssertNullInsteadOfAssertEqualsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalClassMemberAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.concurrency.NestedSynchronizationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30$_closure32: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.SpockIgnoreRestUsedAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21: org.codenarc.rule.Rule getRule()>",
    "<org.codenarc.report.XmlReportWriter: void writeReport(java.io.Writer,org.codenarc.AnalysisContext,org.codenarc.results.Results)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitListExpression_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.BracesForMethodAstVisitor: boolean containsOpeningBraceAfterParenthesis(java.lang.String)>",
    "<org.codenarc.util.CodeNarcVersion: void <clinit>()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure11: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void <init>()>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_findRule_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.BusyWaitAstVisitor: void addViolationIfBusyWait(org.codehaus.groovy.ast.stmt.LoopingStatement)>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_collectAllPrivateFields_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTernaryExpressionAstVisitor: boolean areBothTheSame(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.concurrency.StaticDateFormatFieldAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: boolean isGetterUnsynchronizedAndSetterSychronized(java.util.List,java.lang.String)>",
    "<org.codenarc.rule.convention.PublicMethodsBeforeNonPublicMethodsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.junit.CoupledTestCaseAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitClassComplete_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.InlineViolationsParser: java.lang.String unescape(java.lang.String)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToEqualsMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_getViolations_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToMultiplyMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.SwallowThreadDeathAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonRule$_processImports_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceAfterElseAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter: java.util.Map buildSummaryElement(org.codenarc.results.Results)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.groovyism.UseCollectManyAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void visitWhileLoop(org.codehaus.groovy.ast.stmt.WhileStatement)>",
    "<org.codenarc.ruleset.MovedRules$Renamed: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.concurrency.StaticCalendarFieldAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsPublicControllerMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.AssignCollectionSortRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure19$_closure23: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.AbstractRuleTestCase: org.codenarc.source.SourceCode prepareSourceCode(java.lang.String)>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_applyTo_closure2: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.ruleset.FilteredRuleSet: java.util.List getRules()>",
    "<org.codenarc.rule.comments.JavadocEmptyLastLineRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateUtil: java.util.List sortRules(java.util.List)>",
    "<org.codenarc.rule.convention.PublicMethodsBeforeNonPublicMethodsAstVisitor: void visitMethodComplete(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.basic.EmptySynchronizedStatementAstVisitor: void visitSynchronizedStatement(org.codehaus.groovy.ast.stmt.SynchronizedStatement)>",
    "<org.codenarc.rule.formatting.SpaceBeforeClosingBraceAstVisitor: void processMethodNode(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.formatting.SpaceAfterClosingBraceAstVisitor: void addClosingBraceViolation(org.codehaus.groovy.ast.ASTNode,java.lang.String)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildProjectElement_closure3$_closure9: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.Violation: java.lang.String toString()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: org.codehaus.groovy.ast.MethodNode getFirstValue(java.util.Map,java.util.List)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor$_expressionContainsBannedCharacters_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor$_visitConstantExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ParameterReassignmentAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.InterfaceNameSameAsSuperInterfaceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.exceptions.CatchIndexOutOfBoundsExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.TrailingCommaRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildLogo_closure6: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor$_processParameters_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure11$_closure13: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.imports.DuplicateImportRule$_applyTo_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.imports.UnusedImportRule: void processImports(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleScriptElements_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySetterAstVisitor: boolean isSuperCall(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.BlockEndsWithBlankLineAstVisitor: void checkForViolations(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor$_visitConstantExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.TopLevelDelegate: void <init>()>",
    "<org.codenarc.rule.junit.JUnitPublicNonTestMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.LoggerWithWrongModifiersAstVisitor: void addViolationForField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.UseCollectNestedRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConstantExpressionExtractor: java.util.List extractFrom(org.codehaus.groovy.ast.AnnotationNode)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassComplete_closure5: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_visitMethod_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.naming.AbstractTypeNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ReturnFromFinallyBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarc$_execute_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.InsecureRandomAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter: java.lang.String buildTitle()>",
    "<org.codenarc.rule.junit.JUnitLostTestAstVisitor$_visitClass_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitClosureExpression_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectIncludedProperties_closure8: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.results.FileResults: org.codenarc.results.Results findResultsForPath(java.lang.String)>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BlockStartsWithBlankLineRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertViolation(org.codenarc.rule.Violation,java.lang.Integer,java.lang.String)>",
    "<org.codenarc.rule.exceptions.ThrowExceptionRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.naming.AbstractClassNameAstVisitor: boolean shouldVisit(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: void visitVariableExpression(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor$_visitConstructorOrMethod_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBigIntegerInstantiationAstVisitor: void <init>()>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19$_closure21$_closure22: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.source.SourceCodeCriteria: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BracesForIfElseAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_setRuleProperties_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.ComparisonOfTwoConstantsAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleScriptElements_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.JavadocConsecutiveEmptyLinesRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.logging.MultipleLoggersAstVisitor: void <init>()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildButtons_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_getViolations_closure1: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_getMethodCallsAndMapKeys_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.StaticDateFormatFieldAstVisitor: boolean isDateFormatFactoryMethodCall(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGetterAstVisitor: boolean isMatchingGetterMethodName(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryObjectReferencesAstVisitor$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildCSS_closure2$_closure9: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfFilesWithViolations_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_findSuperClassMethods_closure7: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure19: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCastAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: boolean isNotDollarInsideGString(java.lang.String,int)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor$_methodReturnsArray_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure5$_closure13$_closure14: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_visitMethod_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_increaseIndentForClosureBlocks_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceAstVisitor: void visitMapEntryExpression(org.codehaus.groovy.ast.expr.MapEntryExpression)>",
    "<org.codenarc.rule.security.NonFinalPublicFieldAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule: org.codenarc.rule.AstVisitor getAstVisitor(org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.AssignmentToStaticFieldFromInstanceMethodAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure29: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.HardCodedWindowsFileSeparatorAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.UnnecessaryFailAstVisitor$_visitCatchStatement_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_visitMethod_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllPackageSections_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.io.UrlResource: java.io.InputStream getInputStream()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildScript_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.DoubleNegativeAstVisitor: void visitNotExpression(org.codehaus.groovy.ast.expr.NotExpression)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_writeReport_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.AssignCollectionSortAstVisitor: void visitDeclarationExpression(org.codehaus.groovy.ast.expr.DeclarationExpression)>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor$_visitArgumentlistExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void checkAssignmentWithinString(org.codehaus.groovy.ast.ASTNode,java.lang.String)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: void addInitializedField(java.lang.String)>",
    "<org.codenarc.report.BaselineViolation: java.lang.String toString()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12$_closure15$_closure16: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryObjectReferencesRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults$_getViolations_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.IndentationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_removeInitializedField_closure5: java.lang.String getVarName()>",
    "<org.codenarc.rule.generic.IllegalStringRule: boolean isReady()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor: void <init>()>",
    "<org.codenarc.ant.Report: void <init>()>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule$_applyTo_closure1: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.imports.UnusedImportRule$_findReference_closure3: java.lang.String getClassName()>",
    "<org.codenarc.source.SourceCode: void <clinit>()>",
    "<org.codenarc.rule.braces.ElseBlockBracesAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BlockEndsWithBlankLineAstVisitor: void visitTryCatchFinally(org.codehaus.groovy.ast.stmt.TryCatchStatement)>",
    "<org.codenarc.util.ModifiersUtil$_parseModifiers_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_setupFlexibleIndentForAnyClosureParameterBlocks_closure5: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.CompareToWithoutComparableAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryFinalOnPrivateMethodAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.junit.JUnitUtil: boolean isTestMethod(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.naming.ConfusingMethodNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_findMatchingSuperClassMethod_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.InlineViolationsParser$ParseResult: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.generic.IllegalClassMemberRule: void setAllowedPropertyModifiers(java.lang.String)>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule: void this$dist$set$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.convention.NoDoubleRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.SourceFile: java.lang.String getText()>",
    "<org.codenarc.ruleset.MovedRules: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure18$_closure22: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertTwoViolations(java.lang.String,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.String)>",
    "<org.codenarc.rule.unused.UnusedObjectRule: void <init>()>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: void checkType(java.lang.String,org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitBlockStatement_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitTestMethodWithoutAssertRule: void <init>()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14: boolean getAllPackages()>",
    "<org.codenarc.report.TextReportWriter: void writeSummary(java.io.Writer,org.codenarc.results.Results)>",
    "<org.codenarc.results.DirectoryResults: void removeViolation(org.codenarc.rule.Violation)>",
    "<org.codenarc.rule.basic.EmptyTryBlockAstVisitor: void visitTryCatchFinally(org.codehaus.groovy.ast.stmt.TryCatchStatement)>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsRule: java.lang.String getGormStaticMethodsNames()>",
    "<org.codenarc.rule.basic.ExplicitGarbageCollectionAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.ruleset.RuleSetUtil$_loadRuleScriptFile_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.VectorIsObsoleteRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.AbstractSourceCode: void logCompilationError(java.lang.Throwable)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasOneStaticFieldOfItself_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_findSuperClassMethods_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10$_closure11$_closure12: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule$_applyTo_closure2: java.util.List getViolations()>",
    "<org.codenarc.rule.basic.BrokenOddnessCheckAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.IfStatementCouldBeTernaryRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassComplete_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.exceptions.CommonCatchAstVisitor: void <init>(java.lang.String)>",
    "<org.codenarc.rule.basic.BigDecimalInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.InterfaceNameRule: boolean isReady()>",
    "<org.codenarc.rule.basic.EmptyElseBlockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptySwitchStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3$_closure4: org.codehaus.groovy.ast.expr.VariableExpression getVarExpression()>",
    "<org.codenarc.rule.comments.JavadocEmptyExceptionTagRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.CouldBeSwitchStatementAstVisitor: void checkIfStatementCanBeSwitch(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor: boolean isPossibleViolation(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor$_isUsedInAnyAnnotationOnCurrentAnnotatedNode_closure1: org.codehaus.groovy.ast.expr.ConstantExpression getConstantExpression()>",
    "<org.codenarc.report.XmlReportWriter$_writeReport_closure1: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.formatting.BracesForClassRule: boolean definesAnnotationType(java.lang.String)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void visitSynchronizedStatement(org.codehaus.groovy.ast.stmt.SynchronizedStatement)>",
    "<org.codenarc.rule.formatting.IndentationRule: void <init>()>",
    "<org.codenarc.rule.unused.AbstractLastStatementInBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor$_processParameters_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.ruleregistry.RuleRegistryHolder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.SpockIgnoreRestUsedAstVisitor$_visitMethod_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.AbstractReportWriter: void writeReportToFile(org.codenarc.AnalysisContext,org.codenarc.results.Results)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasSingletonAnnotation_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: java.lang.Boolean memoizedMethodPriv$isSingleLineClassClassNode(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.ruleset.RuleSetDelegate: void <init>(org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_visitClassEx_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitStackInstantiationRule: java.lang.Object this$dist$invoke$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule: void this$dist$set$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.comments.JavadocEmptySeeTagRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintAstVisitor: java.util.Collection extractImportedConstraints(java.lang.String)>",
    "<org.codenarc.rule.concurrency.ThreadGroupAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.NonFinalPublicFieldAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolations_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.AbstractReportWriter: java.lang.String getDescriptionForRule(org.codenarc.rule.Rule)>",
    "<org.codenarc.util.ImportUtil: java.lang.String packageNameForImport(org.codehaus.groovy.ast.ImportNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure24: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.AbstractReportWriter$_getSortedRules_closure5: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.basic.AbstractFinallyAstVisitor$_isStatementWithinFinally_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor$_visitMethodEx_closure1: java.lang.String getMethodName()>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: void checkIfThereIsNotBlankLineBeforeClosingBrace(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: boolean containsKey(java.util.Map,java.util.List)>",
    "<org.codenarc.util.BaselineResultsProcessor$_processResults_closure1: java.lang.Object doCall(org.codenarc.results.FileResults)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInMethodDeclarationAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.rule.design.BooleanMethodReturnsNullAstVisitor: void handleClosure(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.naming.VariableNameAstVisitor$_visitDeclarationExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_writeReport_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.SynchronizedReadObjectMethodAstVisitor$_isSerializable_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor: void visitDeclarationExpression(org.codehaus.groovy.ast.expr.DeclarationExpression)>",
    "<org.codenarc.rule.size.MethodSizeRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_setupFlexibleIndentForAnyClosureParameterBlocks_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.ConsecutiveLiteralAppendsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalRule$_getViolations_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.EmptyMethodInAbstractClassAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor: boolean isProcessingAnnotatedNode()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor$_visitConstructorOrMethod_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedObjectAstVisitor: void visitExpressionStatement(org.codehaus.groovy.ast.stmt.ExpressionStatement)>",
    "<org.codenarc.CodeNarcRunner$_createRuleSet_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.serialization.SerializableClassMustDefineSerialVersionUIDAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.formatting.BracesForClassRule$_applyTo_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.security.PublicFinalizeMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThreadGroupAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.report.XmlReportWriter$_buildViolationElement_closure6: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.report.SortableHtmlReportWriter$ViolationAndPath: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: void visitIfElseThatIsNotTheLastStatementInABlock(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.basic.EmptyIfStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitTestMethodWithoutAssertAstVisitor: boolean checksTimeout(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.junit.JUnitFailWithoutMessageRuleAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter$_buildPackageElements_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToMultiplyMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_getFileResults_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.AbstractSpaceAroundBraceAstVisitor: boolean isNotCharacter(java.lang.String,char,int)>",
    "<org.codenarc.rule.logging.SystemErrPrintAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: java.lang.String uniqueAndSortedDeclaringClassNames(java.util.Collection)>",
    "<org.codenarc.rule.imports.ImportFromSamePackageRule$_applyTo_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.naming.ConfusingMethodNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: java.lang.String getLastLine(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToMethodAstVisitor: void safelyAddViolation(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_visitClassComplete_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure4$_closure12: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor$_expressionContainsBannedCharacters_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.ImplicitReturnStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure26: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.ConsecutiveStringConcatenationAstVisitor: boolean isJoinableType(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToGetAtMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitImports_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.serialization.SerializableClassMustDefineSerialVersionUIDRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure5: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.dry.DuplicateListLiteralRule: void <init>()>",
    "<org.codenarc.report.JsonReportWriter$_buildFileElement_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.SourceString: java.lang.String toString()>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility: org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility next()>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: void <init>()>",
    "<org.codenarc.rule.basic.BitwiseOperatorInConditionalAstVisitor: java.util.List collectChildren(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.logging.PrintlnRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ComparisonWithSelfAstVisitor: void addViolationIfBothAreTheSameVariable(org.codehaus.groovy.ast.ASTNode,org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor$_visitMethodCallExpression_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: boolean isComparisonWithNull(org.codehaus.groovy.ast.expr.BinaryExpression,java.lang.String)>",
    "<org.codenarc.tool.GenerateRuleIndexPage: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor$_extractTransients_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitTestMethodWithoutAssertAstVisitor: boolean statementContainsAssertions(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.CompositeRuleSet: java.util.List getRules()>",
    "<org.codenarc.util.PathUtil: java.lang.String getParentPath(java.lang.String)>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility: org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility previous()>",
    "<org.codenarc.rule.formatting.BracesForForLoopAstVisitor: void visitForLoop(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.util.BaselineResultsProcessor: java.util.List buildFilesWithViolations(org.codenarc.results.Results)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: void <init>()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitBlockStatement_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.MovedRules: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.basic.BooleanGetBooleanAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_visitMethod_closure3: org.codehaus.groovy.ast.MethodNode getNode()>",
    "<org.codenarc.rule.generic.IllegalClassMemberRule: void setIllegalFieldModifiers(java.lang.String)>",
    "<org.codenarc.rule.design.AssignmentToStaticFieldFromInstanceMethodAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.basic.ClassForNameAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.ConstantExpressionExtractor: java.util.List extractFromExpression(org.codehaus.groovy.ast.expr.AnnotationConstantExpression)>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterAstVisitor$_hasItParameter_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_initializeImportNames_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.RuleSetUtil: void assertClassImplementsRuleInterface(java.lang.Class)>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor: void visitMapExpression(org.codehaus.groovy.ast.expr.MapExpression)>",
    "<org.codenarc.results.DirectoryResults: org.codenarc.results.Results findResultsForPath(java.lang.String)>",
    "<org.codenarc.rule.naming.PropertyNameRule: void validate()>",
    "<org.codenarc.rule.logging.LoggerForDifferentClassAstVisitor: boolean isEqualToCurrentClass(java.lang.String,java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter: void this$dist$set$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.util.BaselineResultsProcessor$_addFilesWithViolations_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.grails.GrailsDomainHasToStringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.FileCreateTempFileRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.JavadocMissingExceptionDescriptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.ConsecutiveStringConcatenationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.AbstractTypeNameAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.ruleset.MovedRules$MovedToRuleSet: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsRule: void <init>()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.BracesForMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: void <init>()>",
    "<org.codenarc.ruleset.GroovyDslRuleSet$_evaluateDsl_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitStackInstantiationRule: void this$dist$set$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildBodySection_closure2: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySafeNavigationOperatorAstVisitor: void checkExpression(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor: boolean isThisExpression(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.formatting.AbstractSpaceAroundBraceAstVisitor: void <init>()>",
    "<org.codenarc.report.AbstractReportWriter$_writeReportToFile_closure3: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.junit.ChainedTestRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.FilteredRuleSet$_getRules_closure1$_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.MathRandomTracker: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.PackageNameMatchesFilePathRule: java.lang.String mismatchMessage(java.lang.String)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_addViolationOnMismatch_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.IntegerGetIntegerAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor: boolean hasState(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.util.ImportUtil$_sourceLineAndNumberForImport_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor: void this$dist$set$4(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter: groovy.lang.Closure buildRulesElement(org.codenarc.AnalysisContext)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckAstVisitor: boolean isNullCheckAgainstSuperReference(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.design.CloneWithoutCloneableAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ParameterCountRule: void setMaxParameters(int)>",
    "<org.codenarc.rule.convention.InvertedIfElseAstVisitor: void dispatchToIfWithoutSuper(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.report.HtmlReportWriter: groovy.lang.Closure buildBodySection(org.codenarc.AnalysisContext,org.codenarc.results.Results)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30$_closure31: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.VariableTypeRequiredAstVisitor: void visitDeclarationExpression(org.codehaus.groovy.ast.expr.DeclarationExpression)>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: int leftMostColumn(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitClosureExpression_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitClosureExpression_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter: groovy.lang.Closure buildFileElements(org.codenarc.results.Results)>",
    "<org.codenarc.rule.comments.JavadocEmptyThrowsTagRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ConstantTernaryExpressionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.FileResults: int getNumberOfFilesWithViolations(int)>",
    "<org.codenarc.rule.serialization.SerializableClassMustDefineSerialVersionUIDAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults: int getTotalNumberOfFiles(boolean)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPublicModifierAstVisitor: void <clinit>()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet: void <init>(java.io.Reader)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12$_closure15$_closure16: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.ruleset.MovedRules$MovedToRuleSet: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasOneStaticFieldOfItself_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConstantExpressionExtractor$_extractFromExpression_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults: void <init>(java.lang.String)>",
    "<org.codenarc.ruleregistry.PropertiesFileRuleRegistry: void loadRules()>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.dry.DryUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UnnecessaryFailAstVisitor: void addViolationIfFail(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.design.AbstractClassWithPublicConstructorAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.ConsecutiveStringConcatenationAstVisitor: java.lang.String escape(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectionCallRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsBlankLineAfterOpeningBrace_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.CommonCatchAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryToStringAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor$_visitMethodEx_closure1: org.codehaus.groovy.ast.MethodNode getNode()>",
    "<org.codenarc.rule.basic.EmptyElseBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTransientModifierAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: boolean isAnnotatedWithOverride(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.analyzer.StringSourceAnalyzer: java.util.List getSourceDirectories()>",
    "<org.codenarc.rule.concurrency.WaitOutsideOfWhileLoopAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void visitTernaryExpression(org.codehaus.groovy.ast.expr.TernaryExpression)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: void <init>()>",
    "<org.codenarc.rule.basic.EqualsOverloadedAstVisitor: boolean isEqualsMethodWithOneArgument(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_getViolations_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildButtons_closure6: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitTestMethodWithoutAssertAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.convention.TernaryCouldBeElvisRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.ExceptionExtendsErrorAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.groovyism.ClosureAsLastMethodParameterAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.ruleset.MovedRules$Renamed: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.comments.JavadocEmptyFirstLineRule: void <clinit>()>",
    "<org.codenarc.rule.unnecessary.AddEmptyStringAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryFloatInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.UnnecessaryGroovyImportRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.ObjectFinalizeRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.VolatileLongOrDoubleFieldVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.basic.DuplicateMapKeyAstVisitor: void visitMapExpression(org.codehaus.groovy.ast.expr.MapExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonRule: void processImports(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildScript_closure1$_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalRegexRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.ruleset.TopLevelDelegate: void rule(java.lang.Class)>",
    "<org.codenarc.rule.InlineViolationsParser$ParseResult: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.StaticCalendarFieldAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitClosureExpression_closure8: org.codehaus.groovy.ast.expr.ClosureExpression getExpression()>",
    "<org.codenarc.rule.naming.FieldNameRule: void <init>()>",
    "<org.codenarc.rule.comments.AbstractJavadocMissingDescriptionRule: java.lang.String buildRegex()>",
    "<org.codenarc.report.AbstractReportWriter: java.lang.String substituteMessageParametersIfPresent(org.codenarc.rule.Rule,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean areReturningTrueAndFalse(org.codehaus.groovy.ast.stmt.Statement,org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.convention.TernaryCouldBeElvisAstVisitor: void visitTernaryExpression(org.codehaus.groovy.ast.expr.TernaryExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstanceOfCheckAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.formatting.BlockStartsWithBlankLineAstVisitor: void visitTryCatchFinally(org.codehaus.groovy.ast.stmt.TryCatchStatement)>",
    "<org.codenarc.rule.convention.VariableTypeRequiredAstVisitor: boolean matchesIgnoredName(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToLeftShiftMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyStaticInitializerAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsBlankLineAfterOpeningBrace_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer: void <clinit>()>",
    "<org.codenarc.util.BaselineResultsProcessor$_processResults_closure1: java.lang.Object call(org.codenarc.results.FileResults)>",
    "<org.codenarc.rule.basic.EqualsOverloadedAstVisitor: void addViolationIfOverloaded(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllSummaryByPackageRowsRecursively_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14$_closure16: org.codenarc.results.Results getResults()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure19$_closure23: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.EqualsAndHashCodeAstVisitor$_visitClassEx_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: boolean isAStaticFinalFieldValue(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.junit.JUnitUtil$_isTestMethod_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainHasEqualsAstVisitor: void visitClassComplete(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.exceptions.CommonThrowAstVisitor: void <init>(java.util.List)>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.XmlReportWriter: java.util.Map buildPackageAttributeMap(org.codenarc.results.Results)>",
    "<org.codenarc.report.BaselineXmlReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.WildcardPattern: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.FieldNameAstVisitor: void <init>()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildHeaderSection_closure4$_closure10: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.InlineXmlReportWriter: groovy.lang.Closure buildRulesElement(org.codenarc.AnalysisContext)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21$_closure22$_closure24: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.ListRuleSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.CatchErrorRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectIncludedProperties_closure9: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThreadYieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PublicInstanceFieldAstVisitor: java.lang.String createErrorMessage(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.ruleset.MovedRules: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule: java.lang.Object this$dist$invoke$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildProjectElement_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure15$_closure16: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToMultiplyMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.design.NestedForLoopAstVisitor: boolean isForNested()>",
    "<org.codenarc.report.AbstractReportWriter$_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter: boolean isDirectoryContainingFiles(org.codenarc.results.Results)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToCompareToMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor$_visitListExpression_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processStaticImports_closure2: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPublicModifierAstVisitor: void checkDeclaration(org.codehaus.groovy.ast.ASTNode,java.lang.String,java.lang.String)>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4$_closure14: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarc$_execute_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.CollectionReturnTracker: void expressionReturnsList(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_addClosureFields_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_buildRulesElement_closure9: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitImports_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.size.ParameterCountAstVisitor$_isOverridden_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ClassNameRule: void validate()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.DuplicateImportRule: void checkStaticImport(java.lang.String,int,java.util.Set,java.util.List)>",
    "<org.codenarc.rule.basic.EmptyWhileStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.AbstractJavadocEmptyTagRule: void <init>()>",
    "<org.codenarc.analyzer.AnalyzerException: void <init>(java.lang.String)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_configure_closure1: org.codenarc.ruleset.RuleSet getRuleSet()>",
    "<org.codenarc.rule.convention.VariableTypeRequiredAstVisitor$_visitDeclarationExpression_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.ClosureStatementOnOpeningLineOfMultipleLineClosureRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_visitClosureExpression_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDoubleInstantiationAstVisitor: void <init>()>",
    "<org.codenarc.rule.junit.JUnitPublicFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor: java.lang.Integer getLineNumber(org.gmetrics.result.MetricResult)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_writeReport_closure1: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameRule$_toSet_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPublicModifierAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceAstVisitor: boolean isLambdaExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.exceptions.CatchIndexOutOfBoundsExceptionRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor: java.lang.String getSourceLine(java.lang.Integer)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19$_closure21: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter: groovy.lang.Closure buildFileSection(org.codenarc.results.Results)>",
    "<org.codenarc.rule.formatting.BracesForIfElseAstVisitor: void visitElse(org.codenarc.rule.formatting.BracesForIfElseRule,org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.design.CompareToWithoutComparableAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.util.ModifiersUtil: int parseModifiers(java.lang.String)>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: java.util.regex.Pattern getMatcherPattern()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_visitClassComplete_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ant.CodeNarcTask: void <clinit>()>",
    "<org.codenarc.rule.formatting.SpaceAfterForAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitAssertAlwaysSucceedsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.TopLevelDelegate: void rule(java.lang.Class,groovy.lang.Closure)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.AbstractSourceCode: void setSuppressionAnalyzer(org.codenarc.analyzer.SuppressionAnalyzer)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor: java.lang.String parentPackageName(java.lang.String)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3: org.codehaus.groovy.ast.expr.VariableExpression getVarExpression()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToLeftShiftMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildScript_closure1$_closure7: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.StatelessSingletonRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedMethodParameterRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ant.CodeNarcTask: org.codenarc.results.Results executeCodeNarcRunner(java.lang.Object)>",
    "<org.codenarc.rule.concurrency.StaticCalendarFieldAstVisitor: void addCalendarViolation(org.codehaus.groovy.ast.FieldNode,java.lang.String)>",
    "<org.codenarc.rule.naming.ObjectOverrideMisspelledMethodNameAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor$_closureReturnsArray_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.UnnecessaryFailAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: void <init>(org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryToStringAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet: void setRuleProperties(groovy.util.Node,org.codenarc.rule.Rule)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.CommentsUtil: java.lang.String group(java.lang.String)>",
    "<org.codenarc.rule.junit.JUnitUtil: boolean isAssertCallWithNonNullConstantValue(org.codehaus.groovy.ast.expr.MethodCallExpression,java.lang.String)>",
    "<org.codenarc.rule.FieldReferenceAstVisitor$_visitMethodEx_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.StaticFieldsBeforeInstanceFieldsAstVisitor$_visitClassComplete_closure1: org.codehaus.groovy.ast.ClassNode getNode()>",
    "<org.codenarc.rule.junit.UseAssertFalseInsteadOfNegationAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: java.util.List increaseIndentForClosureBlocks(org.codehaus.groovy.ast.expr.ArgumentListExpression)>",
    "<org.codenarc.rule.junit.JUnitAssertAlwaysFailsAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.util.WildcardPattern$_matches_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySetterAstVisitor: void addViolationsIfSetter(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.concurrency.SynchronizedOnGetClassAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BlockEndsWithBlankLineAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.basic.EmptyMethodAstVisitor$_visitMethod_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.DuplicateMapKeyAstVisitor$_visitMapExpression_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.concurrency.SynchronizedOnBoxedPrimitiveAstVisitor: void visitSynchronizedStatement(org.codehaus.groovy.ast.stmt.SynchronizedStatement)>",
    "<org.codenarc.rule.FieldReferenceAstVisitor$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitWhileLoop_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.AssignCollectionUniqueAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_containsKey_closure3: java.util.List getKeys()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildViolationElement_closure6$_closure15: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.XmlFileRuleSet: void <clinit>()>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: boolean isBinaryExpressionWithPropertyAccessForName(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToMethodAstVisitor: void <init>(java.lang.String,int)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsBlankLineAfterOpeningBrace_closure5: java.lang.Integer getClassStartLine()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UnnecessaryFailRule: void <init>()>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryConstructorAstVisitor: boolean containsOnlyCallToSuper(org.codehaus.groovy.ast.ConstructorNode)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_addInitializedField_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unused.UnusedArrayAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBooleanInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.serialization.SerialVersionUIDAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: void addViolationOnMismatch(java.util.List,java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.serialization.EnumCustomSerializationIgnoredAstVisitor: void visitMethodComplete(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.imports.UnusedImportRule: void processStaticImports(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule$_addOrderingViolations_closure1: java.lang.String getLatePattern()>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility: org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility[] values()>",
    "<org.codenarc.rule.design.FinalClassWithProtectedMemberRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementAstVisitor$_allBranchesReturn_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.exceptions.ThrowErrorRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.GroovyDslRuleSet: groovy.lang.GroovyShell createGroovyShell()>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUnnecessarySetUpRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCatchBlockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToOrMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGetterAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoJavaUtilDateAstVisitor$_visitImports_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalRule: boolean isDefinedInJpaEntity(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.exceptions.ConfusingClassNamedExceptionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterClosingBraceAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.rule.formatting.AbstractSpaceAroundBraceAstVisitor: java.lang.String lastSourceLineOrEmpty(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.naming.VariableNameAstVisitor: void visitDeclarationExpression(org.codehaus.groovy.ast.expr.DeclarationExpression)>",
    "<org.codenarc.rule.design.ConstantsOnlyInterfaceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateUtil$_sortRules_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor$_visitForLoop_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure11$_closure13$_closure14: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor$_extractTransients_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_getAnonymousClasses_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryOverridingMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19$_closure20: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.tool.GenerateCodeNarcRulesProperties: void main(java.lang.String[])>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21$_closure22$_closure24: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.tool.GenerateRuleSetAllRulesByCategory$_main_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarc: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.CatchIllegalMonitorStateExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: boolean isValid()>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolations_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.UnnecessaryGroovyImportRule$_applyTo_closure1: java.util.List getViolations()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.SourceCodeCriteria: boolean includesPath(java.lang.String)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToOrMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.PropertyNameAstVisitor: void visitProperty(org.codehaus.groovy.ast.PropertyNode)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3$_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.DoubleCheckedLockingAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_getAnonymousClasses_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure20: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_removeInitializedField_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertTwoViolations(java.lang.String,java.lang.Integer,java.lang.String,java.lang.Object,java.lang.Integer,java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.basic.BigDecimalInstantiationAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceAfterIfRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateMapLiteralAstVisitor: void <init>()>",
    "<org.codenarc.rule.size.MethodSizeAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.MultipleUnaryOperatorsAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.basic.EmptyInstanceInitializerAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor: boolean hasAnnotation(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.SpaceBeforeClosingBraceAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor: void resetCurrentAnnotatedNode()>",
    "<org.codenarc.results.FileResults: java.util.List getViolations()>",
    "<org.codenarc.rule.exceptions.SwallowThreadDeathAstVisitor: void visitCatchStatement(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.CodeNarc: void execute(java.lang.String[])>",
    "<org.codenarc.rule.design.CollectionReturnTracker$_expressionReturnsList_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor$_visitBlockStatement_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.InlineXmlReportWriter$_buildDescriptionElement_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processStaticImports_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasState_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.ExplicitStackInstantiationRule$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ParameterReassignmentAstVisitor: boolean isCurrentParameterName(java.lang.String)>",
    "<org.codenarc.report.HtmlReportWriter$_buildBodySection_closure1$_closure8: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor: void visitForLoop(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.results.DirectoryResults$_getViolations_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter: java.util.Map buildPackageAttributeMap(org.codenarc.results.Results)>",
    "<org.codenarc.rule.naming.ParameterNameAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsBlankLineAfterOpeningBrace_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.XmlReportWriter$_buildRulesElement_closure9$_closure19$_closure20: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.LocaleSetDefaultAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.IfStatementCouldBeTernaryAstVisitor: boolean isReturnStatementWithConstantOrLiteralValue(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.size.CyclomaticComplexityAstVisitor: org.gmetrics.metric.Metric createMetric()>",
    "<org.codenarc.rule.unused.AbstractLastStatementInBlockAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.rule.convention.StaticFieldsBeforeInstanceFieldsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.CouldBeElvisAstVisitor: void addViolationCouldBeElvis(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor: java.util.Map getMethodCallsAndMapKeys(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.junit.AssertionTrap: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.StaticFieldsBeforeInstanceFieldsAstVisitor$_visitClassComplete_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.SourceFile: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.InlineXmlReportWriter$_buildDescriptionElement_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.AbstractFinallyAstVisitor: void <init>()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryLongInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter$_writeReportToFile_closure3: org.codenarc.results.Results getResults()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarc: void main(java.lang.String[])>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor: boolean closureReturnsArray(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.util.ImportUtil$_getAllImports_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor: boolean methodReturnsCollection(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConstantExpressionExtractor$_extractFrom_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: java.lang.String getText()>",
    "<org.codenarc.tool.GenerateCodeNarcRulesProperties$_main_closure1$_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.ConsecutiveLiteralAppendsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.InterfaceNameSameAsSuperInterfaceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.TrailingWhitespaceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitStackInstantiationRule$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure15$_closure16: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_findSuperClassMethods_closure8: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.ParameterReassignmentAstVisitor: void visitMethodComplete(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure15: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.naming.ParameterNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ClassNameSameAsSuperclassAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.tool.GenerateRuleSetAllRulesByCategory: void <clinit>()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.naming.FieldNameAstVisitor: boolean isProperty(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor$_isExpressionUsedInAnnotation_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule: void addViolationForSunImport(org.codehaus.groovy.ast.ImportNode,org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.formatting.BracesForClassRule$_applyTo_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitAssertAlwaysSucceedsRule: void <init>()>",
    "<org.codenarc.rule.convention.LongLiteralWithLowerCaseLRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.FileResults: void <init>(java.lang.String,java.util.List)>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4$_closure14: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: void visitMapEntryExpression(org.codehaus.groovy.ast.expr.MapEntryExpression)>",
    "<org.codenarc.rule.exceptions.ReturnNullFromCatchBlockAstVisitor: org.codehaus.groovy.ast.stmt.Statement getLastStatement(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.rule.design.AbstractClassWithoutAbstractMethodAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_writeReport_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.util.PropertyUtil: void setPropertyFromString(java.lang.Object,java.lang.String,java.lang.String)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitTearDownCallsSuperAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.HtmlReportWriter: groovy.lang.Closure buildAllPackageSections(org.codenarc.results.Results)>",
    "<org.codenarc.rule.concurrency.StaticDateFormatFieldAstVisitor: void addDateFormatViolation(org.codehaus.groovy.ast.FieldNode,java.lang.String)>",
    "<org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundMapEntryColonAstVisitor: void handleMapExpression(org.codehaus.groovy.ast.expr.MapEntryExpression)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameRule: java.util.Set toSet(java.lang.String)>",
    "<org.codenarc.report.AbstractReportWriter$_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ForLoopShouldBeWhileLoopAstVisitor: boolean hasOnlyConditionExpr(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.rule.AbstractRuleTestCase: java.util.List applyRuleTo(java.lang.String)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_getViolations_closure1: org.codenarc.rule.AstVisitor getVisitor()>",
    "<org.codenarc.rule.formatting.LineLengthRule: boolean flagIfImport(java.lang.String)>",
    "<org.codenarc.ruleset.FilteredRuleSet$_getRules_closure1$_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.RequiredStringRule: boolean isReady()>",
    "<org.codenarc.source.AbstractSourceCode$_removeGrabTransformation_closure1$_closure3$_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.util.BaselineResultsProcessor: void <clinit>()>",
    "<org.codenarc.rule.basic.EqualsAndHashCodeAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildCSS_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void <init>()>",
    "<org.codenarc.rule.convention.MethodReturnTypeRequiredRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildReportElement_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.size.AbcMetricRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.UseCollectManyRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_collectAllPrivateFields_closure2$_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.AbstractSourceCode: java.lang.String normalizePath(java.lang.String)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitBlockStatement_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_addViolationOnMismatch_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10: org.codenarc.results.Results getResults()>",
    "<org.codenarc.util.io.DefaultResourceFactory: boolean isUrl(java.lang.String)>",
    "<org.codenarc.rule.security.JavaIoPackageAccessRule: void <init>()>",
    "<org.codenarc.rule.convention.StaticFieldsBeforeInstanceFieldsAstVisitor$_visitClassComplete_closure1: java.lang.Object doCall(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.convention.NoDefRule: void setExcludeRegex(java.lang.String)>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: void addOpeningBraceViolation(org.codehaus.groovy.ast.ASTNode,java.lang.String)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10$_closure11$_closure12: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.GroovyDslRuleSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPublicModifierAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.BaselineResultsProcessor$_addFilesWithViolations_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.SpockIgnoreRestUsedAstVisitor$_visitMethod_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.naming.PackageNameAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.SpaceAfterClosingBraceAstVisitor: void processMethodNode(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.comments.ClassJavadocRule: java.lang.String sourceCodeNameWithoutExtension(org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.security.JavaIoPackageAccessAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter$_buildPackageElements_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.grails.GrailsServletContextReferenceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_addViolationsForMultipleFieldDeclarations_closure7: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.exceptions.SwallowThreadDeathAstVisitor: void visitThrowStatement(org.codehaus.groovy.ast.stmt.ThrowStatement)>",
    "<org.codenarc.rule.dry.DuplicateStringLiteralRule: java.util.Set parseIgnoreValues()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: void <init>()>",
    "<org.codenarc.rule.imports.AbstractImportRule: int findLineNumberOfFirstClassDeclaration(org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.dry.DuplicateListLiteralAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.DuplicateCaseStatementAstVisitor$_visitSwitch_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.AssignCollectionSortAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectIncludedProperties_closure9: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.IfStatementCouldBeTernaryAstVisitor: boolean isOnlyReturnStatement(org.codehaus.groovy.ast.ASTNode)>"
  ],
  "1.6": [
    "<org.codenarc.tool.GenerateCodeNarcRulesProperties$_main_closure1$_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor$_visitMethodEx_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.ReportWriterFactory: org.codenarc.report.ReportWriter getReportWriter(java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure11$_closure13$_closure14: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.SynchronizedOnReentrantLockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGetterRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.BaselineResultsProcessor$_processResults_closure1: java.util.Map getBaselineViolationsMap()>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processImports_closure1: java.util.List getViolations()>",
    "<org.codenarc.rule.jdbc.JdbcConnectionReferenceRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: java.lang.String extractPropertyName(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.AnalysisContext: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitClosureExpression_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.VariableNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.CrapMetricRule: void <clinit>()>",
    "<org.codenarc.rule.grails.ClassConstraintsAndMapping$_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_writeReport_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.FilteredRuleSet: void addInclude(java.lang.String)>",
    "<org.codenarc.rule.concurrency.NestedSynchronizationAstVisitor$_visitClosureExpression_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.util.MultilineCommentChecker: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor: void whenOneStatementClosureFound(java.util.List,groovy.lang.Closure)>",
    "<org.codenarc.ruleset.RuleSetDelegate: org.codenarc.rule.Rule findRule(java.lang.String)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassComplete_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertyLockingAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20: java.lang.Object call(org.codenarc.rule.Rule,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryFinalOnPrivateMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: boolean isAGetterMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule: java.lang.Object this$dist$get$3(java.lang.String)>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility: void <clinit>()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_addViolationOnMismatch_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfViolationsWithPriority_closure3: int getPriority()>",
    "<org.codenarc.report.AbstractReportWriter$_getSortedRules_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.StatelessClassAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.ClassConstraintsAndMapping$_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ImportUtil$_sourceLineAndNumberForStarImport_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildBodySection_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.dry.DuplicateNumberLiteralRule: void <init>()>",
    "<org.codenarc.results.FileResults: int getNumberOfViolationsWithPriority(int,boolean)>",
    "<org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_collectAllPrivateMethods_closure2$_closure4: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.results.FileResults: java.util.List getChildren()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_writeReport_closure1$_closure8: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_writeReport_closure1: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor: void addViolationForMultipleDeclarations(java.util.Collection)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor$_closureReturnsArray_closure2: java.lang.Boolean getReturnsArray()>",
    "<org.codenarc.rule.groovyism.UseCollectNestedAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UseAssertEqualsInsteadOfAssertTrueAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.FileResults$_getNumberOfFilesWithViolations_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer: void configure(org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsNotBlankLineAfterOpeningBrace_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySelfAssignmentAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: boolean variableNotExcluded(java.util.regex.Pattern,java.lang.String)>",
    "<org.codenarc.rule.comments.JavadocEmptySinceTagRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitTestMethodWithoutAssertRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.naming.ObjectOverrideMisspelledMethodNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.AbstractClassWithoutAbstractMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.ClassReferenceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: void <init>()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildBodySection_closure2$_closure8: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.convention.VariableTypeRequiredAstVisitor$_visitDeclarationExpression_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_isAnnotatedWithOverride_closure6: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.basic.AbstractFinallyAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.BusyWaitAstVisitor: void visitForLoop(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure7$_closure8: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.tool.GenerateRuleSetAllRulesByCategory$_main_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.FilteredRuleSet$_getRules_closure1$_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.source.SourceFile: java.lang.String toString()>",
    "<org.codenarc.source.CustomCompilerPhaseSourceDecorator: org.codenarc.analyzer.SuppressionAnalyzer getSuppressionAnalyzer()>",
    "<org.codenarc.rule.design.AssignmentToStaticFieldFromInstanceMethodAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.concurrency.SynchronizedReadObjectMethodAstVisitor: boolean isSerializable(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor$_visitMethodEx_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.AssignCollectionSortAstVisitor: boolean isChainedSort(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToXorMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildBodySection_closure1$_closure8: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckBeforeInstanceOfAstVisitor: void addViolationIfTargetsMatch(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule: org.codenarc.rule.AstVisitor getAstVisitor(org.codenarc.source.SourceCode)>",
    "<org.codenarc.report.BaselineXmlReportWriter: groovy.lang.Closure buildMessageElement(org.codenarc.rule.Violation)>",
    "<org.codenarc.util.ImportUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitSetUpCallsSuperAstVisitor$_visitMethod_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllSummaryByPackageRowsRecursively_closure3$_closure13: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.size.CrapMetricRule: boolean isReady()>",
    "<org.codenarc.rule.dry.DuplicateNumberLiteralRule: void <clinit>()>",
    "<org.codenarc.rule.naming.ClassNameSameAsFilenameRule$_applyTo_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.formatting.FileEndsWithoutNewlineRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildScript_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: boolean isBrokenNullCheck(org.codehaus.groovy.ast.expr.BinaryExpression,java.lang.String,java.lang.String)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure18: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule: java.lang.Object this$dist$get$3(java.lang.String)>",
    "<org.codenarc.ruleset.TopLevelDelegate$_rule_closure1: org.codenarc.rule.Rule getRule()>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfFilesWithViolations_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceBeforeClosingBraceAstVisitor: void visitMapEntryExpression(org.codehaus.groovy.ast.expr.MapEntryExpression)>",
    "<org.codenarc.rule.convention.TernaryCouldBeElvisAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.FileCreateTempFileRule: void <init>()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_applyProperties_closure2: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.CollectionReturnTracker$_expressionReturnsList_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.CompileStaticRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.JavadocEmptyParamTagRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.WildcardPattern$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitTestMethodWithoutAssertAstVisitor: boolean hasTestAnnotationWithMember(org.codehaus.groovy.ast.ASTNode,java.lang.String)>",
    "<org.codenarc.ruleset.MovedRules$MovedToRuleSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryToStringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.WildcardPattern: boolean containsWildcards(java.lang.String)>",
    "<org.codenarc.rule.concurrency.DoubleCheckedLockingAstVisitor: void addViolationOnDoubleLocking(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor: boolean isIgnoredMethodName(java.lang.String)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor: void checkTypeIfNotDynamicallyTyped(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.InlineViolationsParser$ParseResult: void <init>()>",
    "<org.codenarc.rule.formatting.SpaceAroundMapEntryColonRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.LineLengthRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_findMatchingSuperClassMethod_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.DuplicateImportRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.util.BaselineResultsProcessor: void <init>(org.codenarc.util.io.Resource)>",
    "<org.codenarc.rule.concurrency.StaticSimpleDateFormatFieldAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.generic.StatelessClassRule: boolean shouldIgnoreField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.imports.AbstractImportRule$_findLineNumberOfFirstClassDeclaration_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.JsonReportWriter$_buildRulesElement_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30$_closure31: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.concurrency.SynchronizedMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4$_closure13$_closure15: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter$_writeSummary_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_visitClassEx_closure1: org.codehaus.groovy.ast.ClassNode getNode()>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor$_visitConstructorOrMethod_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.RuleSetDelegate$_findRule_closure2: java.lang.String getName()>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor: org.gmetrics.metric.Metric getMetric()>",
    "<org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule: java.lang.Object this$dist$get$3(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInVariableDeclarationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.LineLengthRule: boolean lineMatchesIgnoreLineRegex(java.lang.String)>",
    "<org.codenarc.ruleset.XmlFileRuleSet$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.ruleset.FilteredRuleSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: void saveMethodInfo(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.generic.IllegalClassMemberRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UseAssertTrueInsteadOfNegationAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.report.XmlReportWriter$_buildProjectElement_closure3: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.ruleset.GroovyDslRuleSet$_evaluateDsl_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectionCallAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: java.util.Map findSuperClassMethods(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertSingleViolation(java.lang.String,java.lang.Integer,java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainHasEqualsAstVisitor: boolean isNotInnerEnum(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.naming.VariableNameAstVisitor$_visitDeclarationExpression_closure1: org.codehaus.groovy.ast.expr.DeclarationExpression getDeclarationExpression()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToPlusMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.ConsecutiveStringConcatenationAstVisitor: void <clinit>()>",
    "<org.codenarc.source.AbstractSourceCode$_getLineNumberForCharacterIndex_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.util.GroovyVersion: boolean isGroovyVersion2()>",
    "<org.codenarc.rule.formatting.BlockEndsWithBlankLineAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToAndMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.SystemOutPrintAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.concurrency.SynchronizedOnReentrantLockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.SynchronizedOnReentrantLockAstVisitor: void visitSynchronizedStatement(org.codehaus.groovy.ast.stmt.SynchronizedStatement)>",
    "<org.codenarc.rule.basic.EqualsAndHashCodeRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ConstantIfExpressionAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.tool.GenerateCodeNarcRulesProperties: void <clinit>()>",
    "<org.codenarc.rule.naming.MethodNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBigDecimalInstantiationAstVisitor: void <init>()>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: boolean matches(java.util.regex.Pattern,java.lang.String)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToModMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor: void visitPropertyExpression(org.codehaus.groovy.ast.expr.PropertyExpression)>",
    "<org.codenarc.results.VirtualResults: void <init>(java.util.List)>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: boolean dynamicTypedAndNotExcludedVariable(org.codehaus.groovy.ast.Variable)>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintAstVisitor$_visitMethodCallExpression_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void checkAssignmentWithinDeclaration(org.codehaus.groovy.ast.expr.BinaryExpression,java.lang.String)>",
    "<org.codenarc.rule.generic.RequiredRegexRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.TopLevelDelegate: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToCompareToMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToCompareToMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckBeforeInstanceOfAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor: boolean hasOneStaticFieldNamedInstance(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.concurrency.SynchronizedOnGetClassAstVisitor: void visitSynchronizedStatement(org.codehaus.groovy.ast.stmt.SynchronizedStatement)>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildBodySection_closure2$_closure8: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolation_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25: org.codenarc.report.SortableHtmlReportWriter$ViolationAndPath getVp()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure14: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor: void visitVariableExpression(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.ruleset.XmlFileRuleSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.PathUtil: java.lang.String normalizePath(java.lang.String)>",
    "<org.codenarc.report.InlineXmlReportWriter$_buildViolationElement_closure1: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_getMethodCallsAndMapKeys_closure5: java.util.Map getResult()>",
    "<org.codenarc.rule.convention.CouldBeElvisAstVisitor: org.codehaus.groovy.ast.expr.Expression getSingleStatementExpressionOrNull(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_writeReport_closure1$_closure8: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.util.ImportUtil: java.util.List getAllImports(org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalRule$_getViolations_closure1: java.lang.Object doCall(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer: org.codenarc.results.DirectoryResults processDirectory(java.lang.String,org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.rule.groovyism.ExplicitStackInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasOneStaticFieldOfItself_closure2: org.codehaus.groovy.ast.ClassNode getClassNode()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryConstructorAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.NestedForLoopAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToXorMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.ruleset.MovedRules$MovedToRuleSet: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.util.ModifiersUtil$_parseModifiersList_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueAstVisitor: org.codehaus.groovy.ast.expr.Expression getActualArgument(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.ruleset.RuleSetDelegate$_findRule_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.UseCollectNestedAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToDivMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryConstructorAstVisitor: boolean hasAnnotations(org.codehaus.groovy.ast.ConstructorNode)>",
    "<org.codenarc.ruleset.RuleSetDelegate: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.AbstractReportWriter: java.lang.String getHtmlDescriptionForRule(org.codenarc.rule.Rule)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: org.codehaus.groovy.ast.MethodNode findMatchingSuperClassMethod(java.lang.String,java.util.List)>",
    "<org.codenarc.rule.formatting.BracesForForLoopAstVisitor$_findLastLineOfForExpressions_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: void markVariableAsReferenced(java.lang.String,org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.rule.basic.HardcodedWindowsRootDirectoryAstVisitor: void addViolationForWindowsPath(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.groovyism.UseCollectNestedAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.basic.EmptySwitchStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitFailWithoutMessageRule: void <init>()>",
    "<org.codenarc.rule.basic.AssignmentInConditionalRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_visitMethod_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.AssignmentToStaticFieldFromInstanceMethodAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: org.codehaus.groovy.ast.ModuleNode getAst()>",
    "<org.codenarc.rule.basic.EmptyInstanceInitializerAstVisitor: void visitObjectInitializerStatements(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasOneStaticFieldNamedInstance_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.AbstractFinallyAstVisitor$_isStatementWithinFinally_closure1: org.codehaus.groovy.ast.stmt.Statement getStatement()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.FieldReferenceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12$_closure15: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.basic.EmptyTryBlockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults$_removeViolation_closure2: org.codenarc.rule.Violation getV()>",
    "<org.codenarc.rule.generic.StatelessClassAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: void beforeBlock()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21$_closure22: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.BuilderMethodWithSideEffectsAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: void checkIfThereIsBlankLineAfterOpeningBrace(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.convention.IfStatementCouldBeTernaryAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.NonFinalSubclassOfSensitiveInterfaceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.InlineViolationsParser: void <init>()>",
    "<org.codenarc.rule.serialization.SerialPersistentFieldsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementAstVisitor$_allBranchesReturn_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21$_closure23: org.codenarc.rule.Rule getRule()>",
    "<org.codenarc.rule.junit.UseAssertNullInsteadOfAssertEqualsRule: void <init>()>",
    "<org.codenarc.rule.junit.ChainedTestAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.source.CustomCompilerPhaseSourceDecorator: java.lang.String getName()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_visitClassEx_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.JsonReportWriter$_buildFileElement_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.comments.AbstractJavadocEmptyTagRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: java.util.List allExceptLastElement(java.util.List)>",
    "<org.codenarc.ruleset.TopLevelDelegate$_rule_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.BaselineViolation: int hashCode()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToPutAtMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyWhileStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter: groovy.lang.Closure buildFileElement(org.codenarc.results.FileResults)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckAstVisitor: boolean isNullCheckAgainstThisReference(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.InlineViolationsParser$_parseLine_closure1: int getLineNumber()>",
    "<org.codenarc.ant.CodeNarcTask: java.lang.ClassLoader classLoaderForPaths(java.lang.String[],java.lang.ClassLoader)>",
    "<org.codenarc.rule.comments.JavadocEmptyLastLineRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitMapExpression_closure5: org.codehaus.groovy.ast.expr.MapExpression getMapExpression()>",
    "<org.codenarc.rule.design.CloneWithoutCloneableAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.convention.NoFloatRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ConstantsOnlyInterfaceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitPublicNonTestMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ParameterNameAstVisitor$_processParameters_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.DeadCodeAstVisitor$_visitBlockStatement_closure1: org.codehaus.groovy.ast.stmt.BlockStatement getBlock()>",
    "<org.codenarc.report.XmlReportWriter$_buildSourceLineElement_closure7: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ConstantsOnlyInterfaceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.AbstractClassWithPublicConstructorAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.TextReportWriter$_writeSummary_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.source.CustomCompilerPhaseSourceDecorator: java.lang.String getPath()>",
    "<org.codenarc.rule.basic.AssignmentInConditionalAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor: void visitConstantExpression(org.codehaus.groovy.ast.expr.ConstantExpression)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure18: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitUnnecessarySetUpAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: java.lang.Number isPrivate(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.dry.DuplicateNumberLiteralRule: java.util.Set parseIgnoreValues()>",
    "<org.codenarc.report.HtmlReportWriter$_buildBodySection_closure1$_closure8: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.imports.UnusedImportRule: boolean isImportStatementForAlias(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToDivMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor: void <init>()>",
    "<org.codenarc.rule.basic.DuplicateSetValueAstVisitor: void addViolationForDuplicate(org.codehaus.groovy.ast.expr.ConstantExpression)>",
    "<org.codenarc.util.BaselineResultsProcessor$_processResults_closure1$_closure4: org.codenarc.results.FileResults getFileResults()>",
    "<org.codenarc.report.XmlReportWriter$_buildProjectElement_closure3$_closure11$_closure12: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.imports.UnusedImportRule: int countUsage(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.exceptions.ExceptionExtendsErrorRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildHeaderSection_closure4$_closure10: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.ruleset.FilteredRuleSet$_getRules_closure1$_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.JUnitUtil$_isTestMethod_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27: java.lang.Object doCall(org.codenarc.rule.Violation)>",
    "<org.codenarc.ruleset.FilteredRuleSet: void addExclude(java.lang.String)>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_visitMethod_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonAstVisitor$_removeAnyViolationsForSameLine_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.rule.convention.NoJavaUtilDateAstVisitor$_visitImports_closure1: java.lang.Object doCall(org.codehaus.groovy.ast.ImportNode)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3$_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.InlineViolationsParser: java.lang.String inlineViolation(java.lang.String)>",
    "<org.codenarc.rule.junit.UnnecessaryFailAstVisitor: void visitCatchStatement(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.rule.groovyism.AssignCollectionUniqueAstVisitor: void visitDeclarationExpression(org.codehaus.groovy.ast.expr.DeclarationExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInFieldDeclarationAstVisitor: boolean contains(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.InlineViolationsParser: void parseLine(java.lang.String,int)>",
    "<org.codenarc.rule.formatting.BracesForClassRule: void applyToClassNode(org.codehaus.groovy.ast.ClassNode,int,java.lang.String,java.util.List)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitBlockStatement_closure6: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBooleanExpressionAstVisitor: void visitNotExpression(org.codehaus.groovy.ast.expr.NotExpression)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_getMethodCallsAndMapKeys_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.tool.GenerateUtil$_sortRules_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.UseAssertTrueInsteadOfNegationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateMapLiteralAstVisitor$_visitMapExpression_closure1: org.codehaus.groovy.ast.expr.MapExpression getExpression()>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor$_processParameters_closure1: java.lang.String getMethodName()>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor: java.lang.String extractMethodName(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryObjectReferencesAstVisitor$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.SwallowThreadDeathRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCatchBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.UnusedImportRule$_findReference_closure3: java.lang.String getAlias()>",
    "<org.codenarc.rule.generic.IllegalStringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_getAnonymousClasses_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.AbstractClassWithoutAbstractMethodAstVisitor: boolean skipSuperClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.design.PublicInstanceFieldAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor: void addViolation(org.gmetrics.result.MetricResult,java.lang.String)>",
    "<org.codenarc.rule.concurrency.SynchronizedReadObjectMethodAstVisitor: boolean isSynchronizedBlock(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.concurrency.SynchronizedOnStringAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceAstVisitor: void processMethodNode(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.dry.DuplicateMapLiteralAstVisitor$_visitMapExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitListExpression_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor$_addViolationsForInstanceFields_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.ClassJavadocRule$_applyTo_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_buildProjectElement_closure3$_closure11: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.exceptions.ExceptionNotThrownAstVisitor: boolean isLastStatementAnExceptionConstructorCall(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBooleanInstantiationAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_getAnonymousClasses_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.braces.IfStatementBracesRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.FileResults$_getNumberOfFilesWithViolations_closure2: int getMaxPriority()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure2: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule: java.util.List getViolations(org.codenarc.rule.AstVisitor,org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.basic.IntegerGetIntegerAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.UnsafeImplementationAsMapRule: void <init>()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_findMatchingSuperClassMethod_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_generateAllPossibleParameterSignatures_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor: void addViolationWithMessage(org.codehaus.groovy.ast.expr.MethodCallExpression,org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolations_closure3$_closure6: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.imports.AbstractImportRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.CommentsUtil: boolean hasTextOnNextLine(org.codenarc.source.SourceCode,int)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.ruleset.MovedRules$MovedToRuleSet: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor: boolean hibernateWouldCreateColumnFor(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.formatting.LineLengthRule: boolean sourceViolatesLineLengthRule(java.lang.String)>",
    "<org.codenarc.rule.basic.EmptyWhileStatementAstVisitor: void visitWhileLoop(org.codehaus.groovy.ast.stmt.WhileStatement)>",
    "<org.codenarc.rule.junit.JUnitTearDownCallsSuperRule: void <init>()>",
    "<org.codenarc.rule.exceptions.ExceptionNotThrownAstVisitor: org.codehaus.groovy.ast.stmt.Statement getLastStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure15$_closure16: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor$_visitCatchStatement_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateListLiteralAstVisitor$_visitListExpression_closure1: org.codehaus.groovy.ast.expr.ListExpression getExpression()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_visitMethodEx_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule$_addOrderingViolations_closure1: java.lang.String getEarlyPattern()>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_applyTo_closure2: java.util.List getViolations()>",
    "<org.codenarc.ant.CodeNarcTask: void execute()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryConstructorAstVisitor: boolean isEmptyOrJustCallsSuper(org.codehaus.groovy.ast.ConstructorNode)>",
    "<org.codenarc.CodeNarc$_execute_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToOrMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.imports.UnnecessaryGroovyImportRule$_applyTo_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToPutAtMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule: void this$dist$set$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.basic.BitwiseOperatorInConditionalAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ParameterReassignmentAstVisitor: boolean isReassigningAParameter(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.analyzer.AnalyzerException: void <init>(java.lang.Throwable)>",
    "<org.codenarc.rule.concurrency.DoubleCheckedLockingRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.PublicFinalizeMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_generateAllPossibleParameterSignatures_closure4: org.codehaus.groovy.ast.MethodNode getMethodNode()>",
    "<org.codenarc.results.FileResults: int getNumberOfFilesWithViolations(int,boolean)>",
    "<org.codenarc.rule.basic.AssertWithinFinallyBlockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BlockStartsWithBlankLineAstVisitor: void checkForViolations(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.junit.JUnitAssertAlwaysFailsRule: void <init>()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToDivMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsServletContextReferenceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.RuleSetUtil$_loadRuleScriptFile_closure1: java.lang.Class getRuleClass()>",
    "<org.codenarc.rule.groovyism.UseCollectNestedAstVisitor: void checkForCallToClosureParameter(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.SpaceAroundMapEntryColonAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: boolean isNotOpeningSquareBracket(java.lang.String,int)>",
    "<org.codenarc.rule.formatting.SpaceAfterIfAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.SpockIgnoreRestUsedAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildReportElement_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor: void extractTransients(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.imports.UnusedImportRule$_findReference_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.BlockStartsWithBlankLineAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor$_visitConstantExpression_closure1: org.codehaus.groovy.ast.expr.ConstantExpression getExpression()>",
    "<org.codenarc.util.ImportUtil$_sortImportsByLineNumber_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor: void visitCastExpression(org.codehaus.groovy.ast.expr.CastExpression)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19$_closure20: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsRule: void <init>()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryParenthesesForMethodCallWithClosureAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor: boolean isNotIgnoredMethodParameterName(org.codehaus.groovy.ast.Parameter)>",
    "<org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter: groovy.lang.Closure buildFileElement(org.codenarc.results.FileResults)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor$_isUsedInAnyAnnotationOnCurrentAnnotatedNode_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ConsecutiveUtils: boolean areJoinableConstants(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.design.CollectionReturnTracker$_expressionReturnsList_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_getMethodCallsAndMapKeys_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildViolationElement_closure6$_closure15: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor: boolean isIgnoredOneElementList(org.codehaus.groovy.ast.expr.ListExpression)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassEx_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14$_closure15: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10$_closure11: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.CompileStaticlVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.GroovyDslRuleSet$_evaluateDsl_closure2: groovy.lang.GroovyShell getShell()>",
    "<org.codenarc.util.PropertyUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.AssignmentToStaticFieldFromInstanceMethodAstVisitor: void <init>()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure7$_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.MovedRules: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor$_visitMethodCallExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.FieldReferenceAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unused.AbstractLastStatementInBlockAstVisitor: void <init>()>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure18: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.concurrency.ThreadLocalNotStaticFinalAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.InsecureRandomRule: void <init>()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor: boolean doesExtendClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.AbstractRuleTestCase: void testThatInvalidCodeHasNoViolations()>",
    "<org.codenarc.rule.junit.UseAssertFalseInsteadOfNegationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.jdbc.JdbcStatementReferenceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor: void visitClassComplete(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.convention.MethodReturnTypeRequiredAstVisitor: boolean isNotIgnoredMethodName(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor: boolean isUsedInAnyAnnotationOnCurrentAnnotatedNode(org.codehaus.groovy.ast.expr.ConstantExpression)>",
    "<org.codenarc.util.BaselineResultsProcessor$_processResults_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationAstVisitor$_visitConstructorCallExpression_closure1: java.lang.Object doCall(java.lang.Class)>",
    "<org.codenarc.rule.concurrency.SynchronizedOnStringAstVisitor: void visitSynchronizedStatement(org.codehaus.groovy.ast.stmt.SynchronizedStatement)>",
    "<org.codenarc.rule.design.LocaleSetDefaultAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfFilesWithViolations_closure4: int getMaxPriority()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void visitSwitch(org.codehaus.groovy.ast.stmt.SwitchStatement)>",
    "<org.codenarc.rule.naming.ParameterNameRule: void validate()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCallToSubstringAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.naming.InterfaceNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryModOneAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.size.NestedBlockDepthRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.junit.UseAssertTrueInsteadOfNegationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor: void addViolationsForMultipleFieldDeclarations(java.util.Collection)>",
    "<org.codenarc.report.JsonReportWriter$_buildPackageElements_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.SynchronizedMethodAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.serialization.EnumCustomSerializationIgnoredRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.size.MethodCountAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleregistry.RuleRegistryInitializer: void initializeRuleRegistry()>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_visitMethod_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToRightShiftMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor: void processParameters(org.codehaus.groovy.ast.Parameter[],java.lang.String)>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: java.lang.String line(int)>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor$_visitForLoop_closure2: org.codehaus.groovy.ast.stmt.ForStatement getForLoop()>",
    "<org.codenarc.ruleset.CompositeRuleSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.CollectAllIsDeprecatedAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.design.AbstractClassWithPublicConstructorAstVisitor$_visitClassEx_closure1: org.codehaus.groovy.ast.ClassNode getNode()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementAstVisitor: boolean isValidElseBlock(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor$_hasTrailingComma_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.naming.VariableNameAstVisitor$_visitDeclarationExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ThrowExceptionFromFinallyBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.MissingBlankLineAfterPackageRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.naming.FactoryMethodNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor$_visitMethodCallExpression_closure2: org.codehaus.groovy.ast.expr.MethodCallExpression getExpression()>",
    "<org.codenarc.CodeNarc$_parseArgs_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.AbstractClassNameRule: boolean isReady()>",
    "<org.codenarc.rule.basic.EmptyCatchBlockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateMapLiteralAstVisitor: void visitMapExpression(org.codehaus.groovy.ast.expr.MapExpression)>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.junit.JUnitPublicPropertyRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_collectAllPrivateMethods_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.source.SourceFile: void <init>(java.io.File)>",
    "<org.codenarc.rule.design.NestedForLoopAstVisitor: void <init>()>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: boolean isNotExpressionWithPropertyAccessForName(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildBodySection_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_collectAllPrivateFields_closure2$_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure11$_closure13: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.CustomCompilerPhaseSourceDecorator: java.lang.String getText()>",
    "<org.codenarc.rule.junit.JUnitLostTestRule: void <init>()>",
    "<org.codenarc.report.JsonReportWriter: void writeReport(java.io.Writer,org.codenarc.AnalysisContext,org.codenarc.results.Results)>",
    "<org.codenarc.util.io.ClassPathResource: java.io.InputStream getInputStream()>",
    "<org.codenarc.rule.generic.IllegalClassReferenceRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.design.CloneWithoutCloneableRule: void <init>()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_visitMethodEx_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.report.TextReportWriter: void writeFileViolations(java.io.Writer,org.codenarc.results.FileResults)>",
    "<org.codenarc.rule.basic.DuplicateSetValueAstVisitor: void visitCastExpression(org.codehaus.groovy.ast.expr.CastExpression)>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterAstVisitor: void <init>()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationToGetClassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: java.lang.Boolean memoizedMethodPriv$isSingleLineClassClassNode(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryModOneRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor: boolean isEmpty(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.serialization.SerialVersionUIDAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_visitClosureExpression_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure13: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.InterfaceNameSameAsSuperInterfaceAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter: java.lang.Object this$dist$get$3(java.lang.String)>",
    "<org.codenarc.rule.formatting.BlankLineBeforePackageRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor: boolean isFloatTypeName(java.lang.String)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_writeReport_closure1$_closure8: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.JUnitUtil$_isAssertCallWithNonNullConstantValue_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.dry.DuplicateStringLiteralRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.serialization.SerialPersistentFieldsAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.formatting.SpaceAfterClosingBraceAstVisitor: boolean isNotAllowedCharacterAfterClass(java.lang.String,int)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_getFirstValue_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.dry.DuplicateListLiteralAstVisitor$_visitListExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.XmlReportWriter: groovy.lang.Closure buildViolationElement(org.codenarc.rule.Violation)>",
    "<org.codenarc.report.XmlReportWriter$_buildFileElement_closure5$_closure16: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor: java.util.List getAnonymousClasses()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementAstVisitor$_visitIfElse_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterCodeVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ant.CodeNarcTask: org.codenarc.analyzer.SourceAnalyzer createSourceAnalyzer()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure26: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckAstVisitor: boolean isNotNullCheckAgainstThisReference(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.formatting.AbstractSpaceAroundBraceAstVisitor: int indexOfClosingBrace(java.lang.String,int)>",
    "<org.codenarc.rule.junit.CoupledTestCaseAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.exceptions.CatchExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.UnsafeImplementationAsMapAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.BuilderMethodWithSideEffectsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ImplementationAsTypeRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToPlusMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.convention.TernaryCouldBeElvisAstVisitor: boolean areTheSame(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor: void <init>(java.util.List,java.util.Set)>",
    "<org.codenarc.report.XmlReportWriter$_buildRulesElement_closure9$_closure19: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure15: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalClassMemberAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: boolean isOwnedByClassOrItsOuterClass(org.codehaus.groovy.ast.FieldNode,org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.dry.DuplicateListLiteralAstVisitor: void visitListExpression(org.codehaus.groovy.ast.expr.ListExpression)>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_getViolations_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.CouldBeSwitchStatementAstVisitor: java.lang.Boolean isSameLeftExpressionAsPreviousIfStatement(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.util.BaselineResultsProcessor$_addFilesWithViolations_closure3: java.util.List getMap()>",
    "<org.codenarc.rule.basic.ComparisonWithSelfAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsNotBlankLineAfterOpeningBrace_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor$_visitMethodCallExpression_closure2: org.codehaus.groovy.ast.expr.MethodCallExpression getCall()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor$_expressionContainsBannedCharacters_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_visitMethodEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainWithServiceReferenceRule: void <init>()>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer$_processDirectory_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_visitMethod_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.JsonReportWriter$_buildPackageElements_closure1: java.util.Map getPackageItem()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor$_closureReturnsCollection_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter: java.util.List buildPackageElements(org.codenarc.results.Results)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_writeReport_closure1$_closure8: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_setupFlexibleIndentForAnyClosureParameterBlocks_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThreadYieldAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor$_visitCatchStatement_closure2: java.util.List getLoggerNames()>",
    "<org.codenarc.tool.GenerateCodeNarcRulesProperties$_main_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectMapKeys_closure6: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.comments.JavadocEmptyVersionTagRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule$_applyTo_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ParameterCountAstVisitor: java.lang.String getName(org.codehaus.groovy.ast.ConstructorNode)>",
    "<org.codenarc.rule.security.UnsafeImplementationAsMapAstVisitor: java.util.List getMethodsImplementedByCoercion(org.codehaus.groovy.ast.expr.MapExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInMethodDeclarationAstVisitor: boolean contains(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor: boolean closureReturnsCollection(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.basic.EmptyInstanceInitializerRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void processTernaryExpression(org.codehaus.groovy.ast.expr.TernaryExpression)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectMapKeys_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.AbstractJavadocMissingDescriptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.StaticConnectionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3$_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitCatchStatement_closure3: org.codehaus.groovy.ast.stmt.CatchStatement getStatement()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14$_closure16: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor: org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility getVisibility(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.basic.AbstractFinallyAstVisitor: void visitTryCatchFinally(org.codehaus.groovy.ast.stmt.TryCatchStatement)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitMapExpression_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor: void <init>()>",
    "<org.codenarc.rule.generic.IllegalClassReferenceRule: void <init>()>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInMethodDeclarationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.IntegerGetIntegerRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor$_extractTransients_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.source.AbstractSourceCode$_removeGrabTransformation_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor$_isNamedArgumentsListContainingThis_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.JsonReportWriter: java.util.Map buildProjectElement(org.codenarc.AnalysisContext)>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.report.XmlReportWriter$_buildFileElement_closure5$_closure16: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure26: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.formatting.AbstractSpaceAroundBraceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.jdbc.JdbcStatementReferenceRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.jdbc.JdbcConnectionReferenceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.FieldNameAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildViolationElement_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfFilesWithViolations_closure4: boolean getRecursive()>",
    "<org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule: java.lang.Object this$dist$invoke$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.generic.IllegalClassReferenceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.PrintlnAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor: boolean hasTrailingComma(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.report.AbstractHtmlReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.RuleSetDelegate$_findRule_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: boolean isCharacterPrecedingClosureInvalid(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_visitMethod_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateStringLiteralRule: void <init>()>",
    "<org.codenarc.rule.ClassReferenceAstVisitor: void checkNodeType(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.CommentsUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.ruleset.ListRuleSet: void <init>(java.util.List)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckAstVisitor: void visitBooleanExpression(org.codehaus.groovy.ast.expr.BooleanExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCastAstVisitor: boolean isUnnecessaryCast(org.codehaus.groovy.ast.expr.CastExpression)>",
    "<org.codenarc.report.AbstractReportWriter: java.lang.String getCodeNarcVersion()>",
    "<org.codenarc.tool.GenerateRuleIndexPage$_main_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.UnsafeArrayDeclarationAstVisitor: boolean isArray(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.formatting.BracesForMethodAstVisitor: boolean lineContainsMethodName(java.lang.String,org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDotClassAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_collectAllPrivateMethods_closure2$_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCatchBlockAstVisitor$_visitTryCatchFinally_closure1: java.lang.Object doCall(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.rule.junit.JUnitUtil$_isTestMethod_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintAstVisitor: void <init>()>",
    "<org.codenarc.rule.junit.JUnitPublicPropertyRule: void <init>()>",
    "<org.codenarc.rule.generic.RequiredRegexRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.junit.UseAssertTrueInsteadOfAssertEqualsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule: void this$dist$set$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean isTrueExpression(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure6: org.codenarc.results.FileResults getResults()>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19$_closure21: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.tool.GenerateRuleSetAllRules: void <clinit>()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectIncludedProperties_closure7: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.ruleset.ListRuleSet$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.DuplicateMapKeyAstVisitor$_visitMapExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PublicInstanceFieldAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertyLockingAstVisitor: void addViolationOnMismatch(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.basic.RemoveAllOnSelfAstVisitor: boolean isMethodNamed(org.codehaus.groovy.ast.expr.MethodCallExpression,java.lang.String)>",
    "<org.codenarc.rule.design.InstanceofRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.StringSourceAnalyzer: void <init>(java.lang.String)>",
    "<org.codenarc.util.SourceCodeUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule$_applyTo_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceAfterWhileAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.SystemOutPrintRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.formatting.BracesForForLoopAstVisitor$_findLastLineOfForExpressions_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.MissingNewInThrowStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionAstVisitor: boolean hasJUnit4Annotation(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.ruleset.MovedRules$MovedToRuleSet: java.lang.String messageFor(java.lang.String)>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule$_applyTo_closure1: java.util.List getViolations()>",
    "<org.codenarc.report.IdeTextReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.ExceptionExtendsThrowableAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_processMethodOrConstructorCall_closure3: org.codehaus.groovy.ast.expr.MethodCall getCall()>",
    "<org.codenarc.rule.grails.ClassConstraintsAndMapping$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.size.ClassSizeAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.InlineViolationsParser$ParseResult: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.convention.ImplicitReturnStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.WaitOutsideOfWhileLoopAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationAstVisitor$_visitConstructorCallExpression_closure1: org.codehaus.groovy.ast.expr.ConstructorCallExpression getCall()>",
    "<org.codenarc.rule.formatting.BracesForClassRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.naming.VariableNameRule: void <init>()>",
    "<org.codenarc.rule.logging.LoggerWithWrongModifiersRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter$_buildPackageElements_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.jdbc.DirectConnectionManagementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalClassMemberRule: void <init>()>",
    "<org.codenarc.rule.generic.IllegalClassMemberAstVisitor: boolean matchesIgnoreMethodsWithAnnotationNames(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.design.AbstractClassWithPublicConstructorAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateUtil$_createSortedListOfAllRules_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.CloneableWithoutCloneRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_getAnonymousClasses_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24: java.lang.Object doCall(org.codenarc.report.SortableHtmlReportWriter$ViolationAndPath)>",
    "<org.codenarc.rule.ClassReferenceAstVisitor: java.lang.String formatViolationMessage(java.lang.String)>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: void visitClassComplete(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure15: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.BracesForForLoopAstVisitor$_findLastLineOfForExpressions_closure1: java.lang.Integer getLoopExpressionLastLine()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure25: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.braces.WhileStatementBracesRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.BaselineResultsProcessor$_removeMatchingViolation_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer: boolean matches(org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.InlineViolationsParser: java.util.Map createViolation(int,java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.concurrency.StaticMatcherFieldAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolations_closure3$_closure6: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToModMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_addViolationOnMismatch_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.BigDecimalInstantiationAstVisitor: boolean isConstructorCallAViolation(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceRule: boolean isReady()>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertSingleViolation(java.lang.String,groovy.lang.Closure)>",
    "<org.codenarc.rule.junit.UseAssertTrueInsteadOfAssertEqualsAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor: boolean isClosureParameterOutsideParentheses(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet: void <clinit>()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectIncludedProperties_closure8: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor: java.util.Set collectIncludedProperties(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.CollectAllIsDeprecatedAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor: void addViolationIfDuplicate(org.codehaus.groovy.ast.expr.Expression,boolean)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBigIntegerInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UseAssertTrueInsteadOfAssertEqualsRule: void <init>()>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsRule: void <clinit>()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_getFileResults_closure4: java.util.List getFileResults()>",
    "<org.codenarc.rule.concurrency.StaticCalendarFieldAstVisitor: boolean isCalendarFactoryMethodCall(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.naming.FieldNameAstVisitor: boolean isIgnoredPropertyName(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.size.MethodCountRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DryUtil: boolean haveTheSameConstantOrLiteralValue(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterAstVisitor$_hasItParameter_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.serialization.SerializableClassMustDefineSerialVersionUIDAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4: boolean getAllPackages()>",
    "<org.codenarc.rule.design.BooleanMethodReturnsNullAstVisitor: boolean codeReturnsBoolean(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.comments.ClassJavadocRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.BaselineResultsProcessor: void processResults(org.codenarc.results.Results)>",
    "<org.codenarc.rule.naming.MethodNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter: java.util.Map buildReportElement()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_getFirstValue_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueAstVisitor: boolean isConvertibleToDouble(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectionCallAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure5$_closure13: org.codenarc.results.FileResults getResults()>",
    "<org.codenarc.rule.junit.SpockIgnoreRestUsedAstVisitor$_visitMethod_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildRulesElement_closure9$_closure19: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCallToSubstringAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.ChainedTestRule: void <init>()>",
    "<org.codenarc.rule.exceptions.ThrowThrowableRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitListExpression_closure4: org.codehaus.groovy.ast.expr.ListExpression getListExpression()>",
    "<org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule$1: void <init>(org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_visitMethod_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.SynchronizedReadObjectMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: boolean isNotAutoBoxed(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.ruleset.MovedRules$MovedToRuleSet: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure19: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_findSuperClassMethods_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsNotBlankLineAfterOpeningBrace_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBooleanExpressionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor: void <init>(java.util.Map,java.util.List)>",
    "<org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildBodySection_closure2$_closure8: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.CloseWithoutCloseableRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor$_visitMethodEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule$1: void <init>(org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule,java.lang.Object)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void visitConstructor(org.codehaus.groovy.ast.ConstructorNode)>",
    "<org.codenarc.rule.junit.JUnitTearDownCallsSuperAstVisitor$_visitMethod_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: void <init>()>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterAstVisitor: boolean hasItParameter(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.junit.UseAssertNullInsteadOfAssertEqualsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.CyclomaticComplexityAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule$_addOrderingViolations_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.FilteredRuleSet$_getRules_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.XmlReportWriter$_buildMessageElement_closure8: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4$_closure13: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.FilteredRuleSet: void <init>(org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_writeReport_closure1$_closure8: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.design.ArrayReturnTracker: void callBackForArrayReturns(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility: org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility $INIT(java.lang.Object[])>",
    "<org.codenarc.rule.formatting.BracesForTryCatchFinallyAstVisitor: void visitTryCatchFinally(org.codehaus.groovy.ast.stmt.TryCatchStatement)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySubstringAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_writeReport_closure1: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryTearDownAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.AbstractSourceCode: int getAstCompilerPhase()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_getAnonymousClasses_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.generic.StatelessClassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.VariableNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIntegerInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.PackageNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.CrapMetricAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void checkForCorrectColumn(org.codehaus.groovy.ast.ASTNode,java.lang.String,int)>",
    "<org.codenarc.rule.formatting.BlockStartsWithBlankLineAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule$_applyTo_closure1: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.formatting.BracesForTryCatchFinallyAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectIncludedProperties_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.UnsafeArrayDeclarationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor$_visitMethodCallExpression_closure1: org.codehaus.groovy.ast.expr.MethodCallExpression getCall()>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor$_visitConstructorOrMethod_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule: java.lang.Object this$dist$get$3(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor$_visitCastExpression_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUnnecessarySetUpAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildMessageElement_closure7: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.LocaleSetDefaultRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter: java.lang.String getViolationLocationString(org.codenarc.rule.Violation,java.lang.String)>",
    "<org.codenarc.rule.design.BooleanMethodReturnsNullAstVisitor: boolean closureReturnsBoolean(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertyLockingRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitImports_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor$_visitMethodEx_closure2: org.codehaus.groovy.ast.MethodNode getNode()>",
    "<org.codenarc.rule.formatting.SpaceAfterForRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure4$_closure12: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.AbstractClassWithPublicConstructorAstVisitor$_visitClassEx_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.results.FileResults$_getNumberOfViolationsWithPriority_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.grails.GrailsDomainCantReferenceServiceAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.exceptions.ThrowExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure20: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void handleNestedNode(org.codehaus.groovy.ast.ASTNode,groovy.lang.Closure)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildLogo_closure6: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.concurrency.SynchronizedOnBoxedPrimitiveRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildFileElement_closure5$_closure16$_closure17: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDuplicateMappingAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.XmlReportWriter$_buildViolationElement_closure6: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: java.lang.Boolean isSingleLineClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateListLiteralRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_getFirstValue_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.CoupledTestCaseAstVisitor: boolean isMethodCallOnSameClass(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule: java.util.List getViolations(org.codenarc.rule.AstVisitor,org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor: java.lang.Object this$dist$get$4(java.lang.String)>",
    "<org.codenarc.rule.convention.NoJavaUtilDateAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.report.HtmlReportWriter: groovy.lang.Closure buildSummaryByPackage(org.codenarc.results.Results)>",
    "<org.codenarc.rule.InlineViolationsParser: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.exceptions.ReturnNullFromCatchBlockAstVisitor: void visitCatchStatement(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.rule.NullReturnTracker: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildProjectElement_closure3: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.ant.CodeNarcTask$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.CompositeRuleSet: void addRule(org.codenarc.rule.Rule)>",
    "<org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_writeReport_closure1$_closure10: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule: void this$dist$set$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BracesForForLoopRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_applyTo_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.AbcMetricAstVisitor: org.gmetrics.metric.Metric createMetric()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.EmptyMethodInAbstractClassAstVisitor: boolean isAbstract(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitClassComplete_closure5: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.concurrency.StaticMatcherFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UseAssertEqualsInsteadOfAssertTrueRule: void <init>()>",
    "<org.codenarc.rule.concurrency.StaticSimpleDateFormatFieldAstVisitor: void addSimpleDateFormatViolation(org.codehaus.groovy.ast.FieldNode,java.lang.String)>",
    "<org.codenarc.rule.basic.HardcodedWindowsRootDirectoryAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ClassNameSameAsFilenameRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.naming.ObjectOverrideMisspelledMethodNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolations_closure3$_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasOneStaticFieldOfItself_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_buildRulesElement_closure9$_closure19$_closure20$_closure21: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule$_applyTo_closure2: java.util.List getViolations()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: boolean isIgnoredVariable(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.util.io.ClassPathResource: void <init>(java.lang.String)>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildLogo_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitSetUpCallsSuperAstVisitor$_visitMethod_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildCSS_closure2$_closure9: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_addInitializedField_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.exceptions.CatchNullPointerExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportParser: java.util.Map parseBaselineXmlReport(java.io.InputStream)>",
    "<org.codenarc.rule.naming.InterfaceNameAstVisitor: boolean shouldVisit(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.ObjectFinalizeAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.convention.PublicMethodsBeforeNonPublicMethodsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_collectAllPrivateMethods_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor$_checkMethods_closure1: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedVariableRule: java.util.List getAnonymousClasses(java.util.List)>",
    "<org.codenarc.rule.FieldReferenceAstVisitor$_visitMethodEx_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.ParameterReassignmentRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.braces.ForStatementBracesRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter$_buildRulesElement_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.StaticSimpleDateFormatFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor$_visitForLoop_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor$_isEmpty_closure1$_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BlockStartsWithBlankLineAstVisitor: void addViolation(int)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasState_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.CloneWithoutCloneableAstVisitor: org.codehaus.groovy.ast.MethodNode cloneMethod(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.convention.ParameterReassignmentAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.source.AbstractSourceCode: boolean isValid()>",
    "<org.codenarc.rule.logging.SystemErrPrintAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.basic.EmptySynchronizedStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.AbstractFinallyAstVisitor$_isStatementWithinFinally_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertTwoViolations_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ClassNameSameAsSuperclassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.AbstractReportWriter: java.lang.String getDescriptionProperty(org.codenarc.rule.Rule)>",
    "<org.codenarc.rule.size.MethodCountAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.logging.LoggerForDifferentClassAstVisitor: boolean isCapitalized(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryReturnKeywordRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportUtil: java.lang.String removeIllegalCharacters(java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTransientModifierRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ModifiersUtil: java.util.List parseModifiersList(java.lang.String)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure19: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: void visitDeclarationExpression(org.codehaus.groovy.ast.expr.DeclarationExpression)>",
    "<org.codenarc.rule.AbstractRuleTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_addInitializedField_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_visitMethod_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.imports.ImportFromSamePackageRule$_applyTo_closure1: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.ant.ReportOption: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.MissingBlankLineAfterImportsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter$_writeSummary_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.generic.IllegalSubclassAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToPlusMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.DuplicateSetValueAstVisitor: boolean isSetLiteral(org.codehaus.groovy.ast.expr.CastExpression)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.logging.LogUtil: boolean isMatchingLoggerDefinition(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.report.AbstractReportWriter: void writeReport(org.codenarc.AnalysisContext,org.codenarc.results.Results)>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.AbstractClassNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.FinalClassWithProtectedMemberAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildScript_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequired: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.ConsecutiveStringConcatenationAstVisitor: boolean areJoinableConstants(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.grails.GrailsServletContextReferenceAstVisitor: void visitVariableExpression(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildProjectElement_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.CodeNarc: void setDefaultsIfNecessary()>",
    "<org.codenarc.rule.concurrency.SynchronizedOnGetClassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInFieldDeclarationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsBlankLineAfterOpeningBrace_closure4: java.lang.Integer getClassStartLine()>",
    "<org.codenarc.rule.AbstractConstructorCallAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17: org.codenarc.results.Results getResults()>",
    "<org.codenarc.ruleset.GroovyDslRuleSet: void <init>(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryReturnKeywordAstVisitor: org.codehaus.groovy.ast.stmt.Statement getLastStatement(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitClassEx_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildReportElement_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_getAnonymousClasses_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.PrintStackTraceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCatchBlockAstVisitor: void visitTryCatchFinally(org.codehaus.groovy.ast.stmt.TryCatchStatement)>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor: void visitListExpression(org.codehaus.groovy.ast.expr.ListExpression)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitUtil: boolean isTearDownMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.XmlReportWriter: groovy.lang.Closure buildMessageElement(org.codenarc.rule.Violation)>",
    "<org.codenarc.rule.security.NonFinalSubclassOfSensitiveInterfaceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer$_processDirectory_closure1: org.codenarc.ruleset.RuleSet getRuleSet()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDotClassAstVisitor: void visitPropertyExpression(org.codehaus.groovy.ast.expr.PropertyExpression)>",
    "<org.codenarc.rule.basic.EmptyIfStatementAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitConstructorOrMethod_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.util.ModifiersUtil$_matchesAnyModifiers_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonRule: void processPackage(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.convention.IfStatementCouldBeTernaryAstVisitor: boolean hasNoElseBlock(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_writeReport_closure1$_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.SynchronizedReadObjectMethodAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.CouldBeSwitchStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BlockEndsWithBlankLineRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateNumberLiteralRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAfterSwitchAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.generic.IllegalClassMemberRule: boolean isReady()>",
    "<org.codenarc.rule.grails.GrailsMassAssignmentRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.FactoryMethodNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryConstructorRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitTearDownCallsSuperAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildViolationElement_closure6: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitCaseStatement_closure6: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.AbstractClassWithPublicConstructorRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ParameterCountAstVisitor: java.lang.String getName(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_getAnonymousClasses_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12$_closure15$_closure16: org.codenarc.results.Results getResults()>",
    "<org.codenarc.results.DirectoryResults$_removeViolation_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_isAnnotatedWithOverride_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_setRuleProperties_closure4: org.codenarc.rule.Rule getRule()>",
    "<org.codenarc.rule.design.SimpleDateFormatMissingLocaleAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21$_closure22: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsPublicControllerMethodAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12: org.codenarc.results.Results getResults()>",
    "<org.codenarc.util.ImportUtil$_sourceLineAndNumberForStarImport_closure2: org.codehaus.groovy.ast.ImportNode getImportNode()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySetterAstVisitor: void addUnnecessarySetterViolation(org.codehaus.groovy.ast.expr.MethodCallExpression,java.lang.String)>",
    "<org.codenarc.rule.formatting.BracesForClassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure18: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ant.CodeNarcTask$_classLoaderForPaths_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.ruleset.TopLevelDelegate$_rule_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildReportElement_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleElements_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ConstantExpressionExtractor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.TrailingWhitespaceRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.report.HtmlReportWriter: groovy.lang.Closure buildSummaryByPackageRow(org.codenarc.results.Results,boolean)>",
    "<org.codenarc.CodeNarcRunner$_execute_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.NestedForLoopRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor$_argumentsContainThis_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.concurrency.SystemRunFinalizersOnExitAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoDefAstVisitor$_visitDeclarationExpression_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30$_closure32: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.BooleanMethodReturnsNullAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.AssignmentToStaticFieldFromInstanceMethodAstVisitor: void visitMethodComplete(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.JsonReportWriter$_buildRulesElement_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule$_applyTo_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllSummaryByPackageRowsRecursively_closure3: org.codenarc.results.Results getResults()>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_findRule_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: void visitDeclarationExpression(org.codehaus.groovy.ast.expr.DeclarationExpression)>",
    "<org.codenarc.test.AbstractTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ParameterCountAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitSwitch_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUtil: boolean isAssertCallWithConstantValue(org.codehaus.groovy.ast.expr.MethodCallExpression,java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor: java.lang.String getParameterDefinitionAsString(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.exceptions.CatchThrowableRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor$_closureReturnsCollection_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor$_checkMethods_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor$_visitMethodCallExpression_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.exceptions.CatchRuntimeExceptionRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.basic.DuplicateSetValueAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildReportElement_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor$_visitClassEx_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.imports.DuplicateImportRule$_applyTo_closure1: java.util.List getViolations()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySubstringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor: void handleClosure(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.util.ModifiersUtil: boolean matchesModifiers(java.lang.Integer,java.lang.Integer)>",
    "<org.codenarc.source.AbstractSourceCode$_removeGrabTransformation_closure1$_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.exceptions.CatchRuntimeExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_uniqueAndSortedDeclaringClassNames_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: void checkStatementExpression(org.codehaus.groovy.ast.MethodNode,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.junit.JUnitAssertAlwaysSucceedsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase: java.util.List manuallyApplyRule(java.lang.String)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckAstVisitor: boolean isSuperReference(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.generic.IllegalSubclassAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.convention.NoTabCharacterRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.naming.PropertyNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleregistry.PropertiesFileRuleRegistry: java.lang.Class getRuleClass(java.lang.String)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$ViolationAndPath: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.logging.MultipleLoggersRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementAstVisitor: java.lang.Object collectIfsAndElses(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.jdbc.DirectConnectionManagementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ant.CodeNarcTask$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.util.ImportUtil$_sourceLineAndNumberForStarImport_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.JUnitAssertAlwaysSucceedsAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.naming.MethodNameAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unused.ReferenceCollector: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.util.CodeNarcVersion: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfViolationsWithPriority_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintAstVisitor$_visitMethodCallExpression_closure1: org.codehaus.groovy.ast.expr.MethodCallExpression getCall()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationAstVisitor$_visitConstructorCallExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure25: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule: java.lang.Object this$dist$invoke$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitBlockStatement_closure2: org.codehaus.groovy.ast.stmt.BlockStatement getBlock()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryOverridingMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.RuleSetBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryTearDownRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.Violation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_writeReport_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitWhileLoop_closure4: org.codehaus.groovy.ast.stmt.WhileStatement getWhileStatement()>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor$_visitMethodCallExpression_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToPutAtMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.dry.DryUtil: boolean areTheSameConstantOrLiteralMapEntryExpression(org.codehaus.groovy.ast.expr.MapEntryExpression,org.codehaus.groovy.ast.expr.MapEntryExpression)>",
    "<org.codenarc.util.io.UrlResource: void <init>(java.lang.String)>",
    "<org.codenarc.rule.grails.GrailsPublicControllerMethodAstVisitor: boolean isIgnoredMethodName(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.imports.UnnecessaryGroovyImportRule$_applyTo_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: java.lang.String extractVariableOrFieldName(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.formatting.BracesForIfElseAstVisitor: void visitElseClosingBrace(org.codenarc.rule.formatting.BracesForIfElseRule,org.codehaus.groovy.ast.stmt.IfStatement,java.lang.String)>",
    "<org.codenarc.rule.dry.DuplicateMapLiteralAstVisitor$_visitMapExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.VolatileArrayFieldAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_containsKey_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor$_visitMethodCallExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.DeadCodeAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure7: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.BitwiseOperatorInConditionalAstVisitor: void addViolationBitwiseConditional(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor$_addViolationsForInstanceFields_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitConstructorOrMethod_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.ClassConstraintsAndMapping: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.AbstractSingleSpaceAfterKeywordAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_writeReport_closure1$_closure10: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.AssignCollectionUniqueRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.RequiredStringRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.basic.DuplicateCaseStatementAstVisitor$_visitSwitch_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportUtil: groovy.lang.Closure cdata(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckBeforeInstanceOfAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.unused.AbstractLastStatementInBlockAstVisitor: boolean isLastStatementInBlock(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_collectAllPrivateMethods_closure2$_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.BracesForTryCatchFinallyAstVisitor$_visitCatch_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.PrintlnAstVisitor$_visitClassEx_closure2: java.lang.Object doCall(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.concurrency.StaticDateFormatFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.AbstractImportRule$_findLineNumberOfFirstClassDeclaration_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainHasToStringAstVisitor$_visitClassComplete_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility: void <init>(java.lang.String,int,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDoubleInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitForLoop_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter: void <init>()>",
    "<org.codenarc.rule.basic.AssertWithinFinallyBlockAstVisitor: void visitAssertStatement(org.codehaus.groovy.ast.stmt.AssertStatement)>",
    "<org.codenarc.report.BaselineViolation: void <init>(java.util.HashMap)>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processImports_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitClosureExpression_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.SystemRunFinalizersOnExitRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BlockEndsWithBlankLineAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.rule.logging.MultipleLoggersAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.CodeNarc: org.codenarc.analyzer.SourceAnalyzer createSourceAnalyzer()>",
    "<org.codenarc.util.io.ClassPathResource: java.io.InputStream getInputStream(java.lang.String)>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure2$_closure3: java.util.List getViolations()>",
    "<org.codenarc.report.XmlReportUtil$_cdata_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildFileElement_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassEx_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor: void visitConstantExpression(org.codehaus.groovy.ast.expr.ConstantExpression)>",
    "<org.codenarc.rule.formatting.LineLengthRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor$_isUsedInAnyAnnotationOnCurrentAnnotatedNode_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.logging.LoggerForDifferentClassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToLeftShiftMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsPublicControllerMethodRule: void <init>()>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_applyTo_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBigIntegerInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateRuleIndexPage: void <clinit>()>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionAstVisitor$_hasJUnit4Annotation_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.BaselineResultsProcessor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ParameterCountRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.UseOfNotifyMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.AbstractSourceCode$_getLineNumberForCharacterIndex_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.ImplicitReturnStatementAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.DeadCodeRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildProjectElement_closure3$_closure9$_closure10: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.AbstractClassWithoutAbstractMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27$_closure29: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.BooleanMethodReturnsNullRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitPublicFieldRule: void <init>()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitClosureExpression_closure2: org.codehaus.groovy.ast.expr.ClosureExpression getExpression()>",
    "<org.codenarc.report.XmlReportWriter$_buildProjectElement_closure3$_closure11: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_containsKey_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.CatchExceptionRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.dry.DuplicateListLiteralAstVisitor: void <init>()>",
    "<org.codenarc.rule.basic.BrokenOddnessCheckAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.basic.EqualsAndHashCodeAstVisitor$_visitClassEx_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryModOneAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.SourceCodeUtil: java.util.List nodeSourceLines(org.codenarc.source.SourceCode,org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.report.InlineXmlReportWriter$_buildViolationElement_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.StaticFieldsBeforeInstanceFieldsAstVisitor$_visitClassComplete_closure1: java.lang.Boolean getHasDeclaredInstanceField()>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: java.lang.String getPenultimateLine(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllSummaryByPackageRowsRecursively_closure3$_closure13: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure5: org.codenarc.results.FileResults getResults()>",
    "<org.codenarc.rule.basic.DuplicateCaseStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase: void removeSuppressedViolations(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleElements_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.ExceptionNotThrownRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor$_closureReturnsCollection_closure2: java.lang.Boolean getReturnsArray()>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_configure_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.exceptions.ConfusingClassNamedExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationAstVisitor$_visitConstructorCallExpression_closure1: org.codehaus.groovy.ast.expr.Expression getArgument()>",
    "<org.codenarc.rule.basic.MultipleUnaryOperatorsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.JavadocEmptyFirstLineRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.exceptions.CatchArrayIndexOutOfBoundsExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.dry.DuplicateStringLiteralRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.braces.ElseBlockBracesAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.ruleset.CompositeRuleSet: void addRuleSet(org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.WildcardPattern: boolean matches(java.lang.String)>",
    "<org.codenarc.results.FileResults: java.lang.String toString()>",
    "<org.codenarc.rule.security.FileCreateTempFileAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitCatchStatement_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceAstVisitor: void addOpeningBraceViolation(org.codehaus.groovy.ast.ASTNode,java.lang.String)>",
    "<org.codenarc.rule.junit.JUnitUtil$_isAssertCallWithConstantValue_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor: void addMethodViolation(org.codehaus.groovy.ast.MethodNode,org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility)>",
    "<org.codenarc.rule.formatting.BracesForForLoopAstVisitor$_findLastLineOfForExpressions_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDotClassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsNotBlankLineAfterOpeningBrace_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.RuleSetDelegate: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ReturnFromFinallyBlockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBooleanExpressionAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionAstVisitor: boolean isJUnit3MatchingMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.TextReportWriter: void writePackageViolations(java.io.Writer,org.codenarc.results.Results)>",
    "<org.codenarc.ruleregistry.PropertiesFileRuleRegistry: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceRule: void <init>()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildScript_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.results.FileResults$_getNumberOfViolationsWithPriority_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: void visitSwitch(org.codehaus.groovy.ast.stmt.SwitchStatement)>",
    "<org.codenarc.rule.imports.DuplicateImportRule: void checkImport(java.lang.String,int,java.util.Set,java.util.List)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildBodySection_closure2$_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor: void visitClassComplete(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.basic.ExplicitGarbageCollectionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectIncludedProperties_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer$_processDirectory_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationRule: void <init>()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10$_closure11: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.FinalClassWithProtectedMemberAstVisitor: boolean isProtected(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: int nestingLevelForClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.junit.UseAssertTrueInsteadOfAssertEqualsAstVisitor: void visitAssertStatement(org.codehaus.groovy.ast.stmt.AssertStatement)>",
    "<org.codenarc.rule.grails.GrailsStatelessServiceRule: void <init>()>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_visitMethod_closure3: org.codehaus.groovy.ast.MethodNode getNode()>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolations_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor$_visitBlockStatement_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.security.SystemExitAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.design.PublicInstanceFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.FinalClassWithProtectedMemberAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults$_getTotalNumberOfFiles_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter: java.util.List getFileResults(org.codenarc.results.Results)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure7$_closure8: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildHeaderSection_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.PathUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner$_createRuleSet_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintAstVisitor$_visitMethodCallExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.HashtableIsObsoleteRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.dry.DuplicateMapLiteralAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_visitMethod_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportParser: java.util.Map parseBaselineXmlReport(java.lang.String)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer: void <init>()>",
    "<org.codenarc.rule.dry.DuplicateNumberLiteralRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.FieldReferenceAstVisitor$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsRule: void setGormStaticMethodsNames(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.ConsecutiveLiteralAppendsAstVisitor: boolean isChainedAppend(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.ExplicitStackInstantiationRule$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.formatting.SpaceBeforeClosingBraceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule$1: void <init>(org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule,java.lang.Object)>",
    "<org.codenarc.rule.security.InsecureRandomAstVisitor: boolean isJavaLangMathCall(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.util.MultilineCommentChecker: void processLine(java.lang.String)>",
    "<org.codenarc.report.XmlReportWriter$_buildViolationElement_closure6$_closure18: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.formatting.SpaceAroundClosureArrowAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.source.AbstractSourceCode$_removeGrabTransformation_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer$_processDirectory_closure1: java.lang.String getDir()>",
    "<org.codenarc.util.ImportUtil: java.util.Map sourceLineAndNumberForImport(org.codenarc.source.SourceCode,org.codehaus.groovy.ast.ImportNode)>",
    "<org.codenarc.report.XmlReportWriter$_buildFileElement_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildScript_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter: groovy.lang.Closure buildFileElement(org.codenarc.results.Results)>",
    "<org.codenarc.rule.design.CloneableWithoutCloneAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCastRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitTearDownCallsSuperRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor: boolean isAnonymousInnerClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.FieldReferenceAstVisitor: void visitPropertyExpression(org.codehaus.groovy.ast.expr.PropertyExpression)>",
    "<org.codenarc.rule.basic.ReturnFromFinallyBlockAstVisitor: void visitReturnStatement(org.codehaus.groovy.ast.stmt.ReturnStatement)>",
    "<org.codenarc.report.XmlReportWriter$_buildFileElement_closure5: org.codenarc.results.FileResults getResults()>",
    "<org.codenarc.rule.exceptions.MissingNewInThrowStatementAstVisitor: boolean isFirstLetterUpperCase(java.lang.String)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.braces.ElseBlockBracesRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.source.AbstractSourceCode: java.util.Map getMethodCallExpressions()>",
    "<org.codenarc.rule.formatting.SpaceAroundMapEntryColonAstVisitor: void visitMapEntryExpression(org.codehaus.groovy.ast.expr.MapEntryExpression)>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertNoViolations(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryConstructorAstVisitor: void analyzeConstructor(org.codehaus.groovy.ast.ConstructorNode)>",
    "<org.codenarc.rule.naming.FieldNameRule: void validate()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14$_closure15: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.UseAssertNullInsteadOfAssertEqualsAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitClassEx_closure1: org.codehaus.groovy.ast.ClassNode getNode()>",
    "<org.codenarc.report.XmlReportWriter$_buildProjectElement_closure3$_closure11$_closure12: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.ReturnNullFromCatchBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor$_processParameters_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void addClosureFields(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.source.AbstractSourceCode: void <clinit>()>",
    "<org.codenarc.rule.convention.LongLiteralWithLowerCaseLAstVisitor: void visitConstantExpression(org.codehaus.groovy.ast.expr.ConstantExpression)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.results.FileResults: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ConstantIfExpressionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor$_visitMethodEx_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.imports.ImportFromSamePackageRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ModifiersUtil$_matchesAnyModifiers_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ConfusingTernaryAstVisitor: void addViolationForBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression,org.codehaus.groovy.ast.expr.TernaryExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBigDecimalInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.VolatileLongOrDoubleFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor: void collectMapKeys(org.codehaus.groovy.ast.expr.MethodCallExpression,java.util.Map)>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterAstVisitor: java.util.List getViolations()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.dry.DuplicateMapLiteralRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: java.lang.String createMessage(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.basic.EmptyIfStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.comments.ClassJavadocRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitClosureExpression_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryOverridingMethodAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.dry.DuplicateMapLiteralRule: void <init>()>",
    "<org.codenarc.report.JsonReportWriter$_buildPackageElements_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.BaselineViolation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.InvertedIfElseRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToPowerMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure4$_closure11: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.VariableUsageFinder: void visitVariableExpression(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsNotBlankLineAfterOpeningBrace_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.size.CrapMetricRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.util.WildcardPattern$_matches_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBigDecimalInstantiationAstVisitor: boolean isTypeSuffixNecessary(java.lang.Object)>",
    "<org.codenarc.util.ModifiersUtil: boolean matchesAnyModifiers(java.lang.Integer,java.util.List)>",
    "<org.codenarc.rule.groovyism.ConstantExpressionExtractor$_extractFromExpression_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer: org.codenarc.rule.Rule findRule(org.codenarc.ruleset.RuleSet,java.lang.String)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_applyProperties_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ClassNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12$_closure15$_closure16: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.AbstractReportWriter$_getSortedRules_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildBodySection_closure2: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor: void findViolations(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure5$_closure13: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundMapEntryColonAstVisitor: java.lang.String violationMessage(java.lang.String,java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.basic.DoubleNegativeRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_findRule_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.MathRandomTracker: void callBackForMathRandomReturns(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.grails.ClassConstraintsAndMapping$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter$_writeReportToFile_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean hasNoElseBlock(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_addInitializedField_closure4: java.lang.String getVarName()>",
    "<org.codenarc.rule.size.CrapMetricRule: boolean doesCoberturaXmlFileExist()>",
    "<org.codenarc.rule.basic.ConstantTernaryExpressionAstVisitor: void visitTernaryExpression(org.codehaus.groovy.ast.expr.TernaryExpression)>",
    "<org.codenarc.rule.concurrency.SynchronizedReadObjectMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.MovedRules: org.codenarc.ruleset.MovedRules$MovedToRuleSet movedTo(java.lang.String)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasSingletonAnnotation_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.InstanceofAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.FieldReferenceAstVisitor$_visitMethodEx_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.util.ImportUtil$_sortImportsByLineNumber_closure4: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.AbstractRuleTestCase: java.lang.String removeInlineViolations(java.lang.String)>",
    "<org.codenarc.rule.basic.HardcodedWindowsRootDirectoryAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.formatting.BracesForMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EqualsOverloadedAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.results.DirectoryResults: int getNumberOfFilesWithViolations(int,boolean)>",
    "<org.codenarc.rule.groovyism.ConstantExpressionExtractor: java.util.List extractFromExpression(org.codehaus.groovy.ast.expr.ListExpression)>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure6: java.io.Writer getWriter()>",
    "<org.codenarc.rule.basic.EqualsAndHashCodeAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.DoubleCheckedLockingAstVisitor: org.codehaus.groovy.ast.stmt.SynchronizedStatement getSynchronizedStatement(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertyLockingAstVisitor: java.lang.String getGuardName(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.junit.JUnitUtil: boolean isSetUpMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.grails.GrailsDuplicateMappingRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.CommentsUtil: void <clinit>()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.CoupledTestCaseRule: void <init>()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySafeNavigationOperatorAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_visitClassComplete_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_buildFileElement_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.ConsecutiveStringConcatenationAstVisitor: boolean isNumberLiteral(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.junit.JUnitUtil$_isAssertCallWithConstantValue_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.util.WildcardPattern$_convertStringWithWildcardsToRegex_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ComparisonOfTwoConstantsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: void checkNonEmptyLineNumber(int,int)>",
    "<org.codenarc.rule.groovyism.ConstantExpressionExtractor$_extractFrom_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure5$_closure13: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInFieldDeclarationAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertyLockingAstVisitor: boolean isReadLocked(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24: java.lang.Object call(org.codenarc.report.SortableHtmlReportWriter$ViolationAndPath)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertyLockingAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolation_closure4: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_visitDeclarationExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: void visitParameters(org.codehaus.groovy.ast.Parameter[])>",
    "<org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.ClassReferenceAstVisitor: void checkType(java.lang.String,org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.convention.InvertedConditionAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.report.JsonReportWriter$_buildPackageElements_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.size.CrapMetricRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameRule: void <init>()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_afterBlock_closure2: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolations_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer: void initializeWildcardPatterns()>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor$_checkMethods_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.GroovyVersion: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter: void initializeDefaultResourceBundle()>",
    "<org.codenarc.rule.imports.ImportFromSamePackageRule: java.lang.String getClassNameNoPackage(java.lang.String)>",
    "<org.codenarc.rule.junit.JUnitLostTestAstVisitor$_visitClass_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor$_visitMethodEx_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.ruleset.MovedRules$Renamed: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.basic.DuplicateSetValueAstVisitor$_visitCastExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter: groovy.lang.Closure buildAllSummaryByPackageRowsRecursively(org.codenarc.results.Results)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitClassEx_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter: java.lang.Object this$dist$invoke$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.design.InstanceofAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.generic.RequiredStringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ImportUtil: java.util.Map sourceLineAndNumberForStarImport(org.codenarc.source.SourceCode,org.codehaus.groovy.ast.ImportNode)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_addViolationOnMismatch_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.CoupledTestCaseRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.FieldTypeRequiredRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor: void <init>(org.codenarc.rule.AbstractAstVisitor)>",
    "<org.codenarc.report.HtmlReportWriter$_buildBodySection_closure1: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.exceptions.ExceptionNotThrownAstVisitor: void visitCatchStatement(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryToStringAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.security.SystemExitAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BlockEndsWithBlankLineAstVisitor: java.lang.String lastButOneCodeLine(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassEx_closure2: java.lang.Object doCall(java.util.Collection)>",
    "<org.codenarc.rule.serialization.EnumCustomSerializationIgnoredAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionAstVisitor$_hasJUnit4Annotation_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure18: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter: groovy.lang.Closure buildPackageSection(org.codenarc.results.Results)>",
    "<org.codenarc.ant.Report: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter$_writePackageViolations_closure2: java.io.Writer getWriter()>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitConstructorOrMethod_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.source.AbstractSourceCode$_removeGrabTransformation_closure1$_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.braces.ForStatementBracesAstVisitor: void visitForLoop(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.rule.basic.DuplicateCaseStatementAstVisitor$_visitSwitch_closure2: java.lang.Object doCall(java.lang.Object,org.codehaus.groovy.ast.stmt.CaseStatement)>",
    "<org.codenarc.rule.formatting.BracesForTryCatchFinallyAstVisitor: void visitFinally(org.codenarc.rule.formatting.BracesForTryCatchFinallyRule,org.codehaus.groovy.ast.stmt.TryCatchStatement)>",
    "<org.codenarc.rule.junit.JUnitUtil: boolean isLiteralWithValueThatEvaluatesTo(org.codehaus.groovy.ast.expr.Expression,boolean)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToAndMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_generateAllPossibleParameterSignatures_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.BracesForClassRule$_applyTo_closure1: java.lang.Object doCall(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildBodySection_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UnnecessaryFailAstVisitor$_visitCatchStatement_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: void addViolation(org.codehaus.groovy.ast.ASTNode,java.lang.String,int)>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.UseAssertTrueInsteadOfNegationRule: void <init>()>",
    "<org.codenarc.rule.design.BooleanReturnTracker: void checkReturnValues(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30$_closure32: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.EmptyMethodAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.util.ConsecutiveUtils: boolean isJoinableType(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor: java.lang.Object this$dist$invoke$4(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_getMethodCallsAndMapKeys_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: void addViolation(java.lang.String,int)>",
    "<org.codenarc.report.XmlReportWriter$_buildRulesElement_closure9$_closure19$_closure20$_closure21: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitConstructorOrMethod_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor$_processParameters_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBooleanInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitSetUpCallsSuperRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceBeforeClosingBraceAstVisitor: void addOpeningBraceViolation(org.codehaus.groovy.ast.ASTNode,java.lang.String)>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule$_applyTo_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor$_addViolationsForInstanceFields_closure3: java.lang.Object doCall(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor$_visitCatchStatement_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.EmptyFinallyBlockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.design.BooleanMethodReturnsNullAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor$_visitMethodCallExpression_closure1: org.codehaus.groovy.ast.expr.MethodCallExpression getCall()>",
    "<org.codenarc.ruleset.GroovyDslRuleSet: void evaluateDsl(groovy.lang.GroovyShell)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_getAnonymousClasses_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.SynchronizedOnBoxedPrimitiveAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterClosingBraceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults$_getTotalNumberOfFiles_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule$1: void <init>(org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule,java.lang.Object)>",
    "<org.codenarc.rule.basic.BooleanGetBooleanRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.source.AbstractSourceCode$_removeGrabTransformation_closure1$_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildBodySection_closure2$_closure8: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.BracesForTryCatchFinallyRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.BooleanGetBooleanAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure29: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.generic.IllegalClassReferenceRule: boolean isReady()>",
    "<org.codenarc.rule.convention.ParameterReassignmentAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.report.AbstractReportWriter: java.util.List getSortedRules(org.codenarc.AnalysisContext)>",
    "<org.codenarc.util.ImportUtil: java.util.Map sourceLineAndNumberForNonStarImport(org.codenarc.source.SourceCode,org.codehaus.groovy.ast.ImportNode)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure11: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_writeReport_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitBlockStatement_closure6: org.codehaus.groovy.ast.stmt.BlockStatement getBlock()>",
    "<org.codenarc.rule.logging.SystemOutPrintAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.InsecureRandomAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: void checkIfThereIsBlankLineBeforeClosingBrace(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitImports_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCastAstVisitor: void visitCastExpression(org.codehaus.groovy.ast.expr.CastExpression)>",
    "<org.codenarc.rule.grails.GrailsDuplicateMappingAstVisitor: void <init>()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor$_visitArgumentlistExpression_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_buildViolationElement_closure6$_closure18: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule: java.lang.Object this$dist$invoke$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.exceptions.SwallowThreadDeathAstVisitor: void <init>()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27$_closure29: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.TextReportWriter$_writePackageViolations_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDoubleInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.RuleSetBuilder: org.codenarc.ruleset.RuleSet getRuleSet()>",
    "<org.codenarc.rule.concurrency.UseOfNotifyMethodAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_increaseIndentForClosureBlocks_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.BracesForTryCatchFinallyAstVisitor$_visitCatch_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceAfterClosingBraceAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitCaseStatement_closure6: org.codehaus.groovy.ast.stmt.CaseStatement getStatement()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasSingletonAnnotation_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.util.ModifiersUtil$_parseModifiersList_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.CouldBeSwitchStatementAstVisitor: java.lang.Boolean inSupportedOperation(org.codehaus.groovy.syntax.Token)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGetterAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.junit.ChainedTestAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_afterBlock_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitSynchronizedStatement_closure7: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.ListRuleSet$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_applyTo_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.NestedSynchronizationAstVisitor: void visitSynchronizedStatement(org.codehaus.groovy.ast.stmt.SynchronizedStatement)>",
    "<org.codenarc.rule.imports.ImportFromSamePackageRule: boolean hasAlias(org.codehaus.groovy.ast.ImportNode)>",
    "<org.codenarc.rule.concurrency.SynchronizedOnStringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundClosureArrowRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.AssignCollectionUniqueAstVisitor: boolean isFalseConstant(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_getViolations_closure1: org.codenarc.rule.AstVisitor getVisitor()>",
    "<org.codenarc.rule.naming.InterfaceNameSameAsSuperInterfaceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonAstVisitor$_removeAnyViolationsForSameLine_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.MovedRules$Renamed: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor: void visitMethodComplete(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.source.AbstractSourceCode: java.util.List getLines()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor: void <init>(java.util.Set,java.util.Set)>",
    "<org.codenarc.util.BaselineResultsProcessor: boolean sameMessage(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonRule$_processImports_closure1: java.util.List getViolations()>",
    "<org.codenarc.report.XmlReportWriter: groovy.lang.Closure buildProjectElement(org.codenarc.AnalysisContext)>",
    "<org.codenarc.report.TextReportWriter$_writeSummary_closure1: org.codenarc.results.Results getResults()>",
    "<org.codenarc.report.InlineXmlReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor$_visitMethodCallExpression_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.JavadocEmptyReturnTagRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ComparisonWithSelfRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.BaselineResultsProcessor$_processResults_closure1$_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildViolationElement_closure6$_closure18: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.SynchronizedOnThisRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalClassMemberAstVisitor: void visitProperty(org.codehaus.groovy.ast.PropertyNode)>",
    "<org.codenarc.report.InlineXmlReportWriter$_buildViolationElement_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.FieldReferenceAstVisitor: void <init>(java.util.Collection)>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor$_isEmpty_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor: void visitImports(org.codehaus.groovy.ast.ModuleNode)>",
    "<org.codenarc.util.ImportUtil: java.util.Map sourceLineAndNumberForImport(org.codenarc.source.SourceCode,java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor$_visitForLoop_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule: java.util.List addOrderingViolations(org.codenarc.source.SourceCode,java.lang.String,java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.naming.InterfaceNameSameAsSuperInterfaceAstVisitor$_visitClassEx_closure1: org.codehaus.groovy.ast.ClassNode getNode()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitClosureExpression_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassComplete_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor: void visitVariableExpression(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.ruleset.GroovyDslRuleSet$_evaluateDsl_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTernaryExpressionAstVisitor: void visitTernaryExpression(org.codehaus.groovy.ast.expr.TernaryExpression)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure29: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.jdbc.DirectConnectionManagementAstVisitor: boolean isJavaSQLDriverManagerCall(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ConstantIfExpressionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainWithServiceReferenceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.FieldNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionRule: void <init>()>",
    "<org.codenarc.rule.groovyism.UseCollectManyAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.ruleset.RuleSetUtil$_loadRuleScriptFile_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckBeforeInstanceOfRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterCatchRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.AbcMetricAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor$_visitMethodCallExpression_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.FieldTypeRequiredAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.JavadocMissingParamDescriptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToPowerMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12$_closure15: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateRuleSetAllRulesByCategory: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults: void <init>()>",
    "<org.codenarc.source.AbstractSourceCode: void init()>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor$_argumentsContainThis_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.CompositeRuleSet: void <init>()>",
    "<org.codenarc.rule.basic.ConstantAssertExpressionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ObjectOverrideMisspelledMethodNameAstVisitor: void checkForMethodNameWithIncorrectCase(org.codehaus.groovy.ast.MethodNode,java.lang.String,java.util.List)>",
    "<org.codenarc.rule.junit.JUnitPublicFieldAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildBodySection_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor: boolean isMainMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.imports.UnusedImportRule: java.lang.String findReference(org.codenarc.source.SourceCode,java.lang.String)>",
    "<org.codenarc.rule.exceptions.ExceptionNotThrownAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.BaselineResultsProcessor: void removeMatchingViolation(org.codenarc.results.Results,java.util.List,org.codenarc.report.BaselineViolation)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryFloatInstantiationAstVisitor: void <init>()>",
    "<org.codenarc.report.XmlReportUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.CustomCompilerPhaseSourceDecorator: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ConstantAssertExpressionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBooleanExpressionAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.serialization.SerialVersionUIDRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_visitMethod_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.CouldBeElvisAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassComplete_closure6: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.imports.UnusedImportRule$_findReference_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.dry.DuplicateListLiteralAstVisitor$_visitListExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.UnsafeArrayDeclarationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineViolation: boolean equals(java.lang.Object)>",
    "<org.codenarc.analyzer.StringSourceAnalyzer: org.codenarc.results.Results analyze(org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.rule.unnecessary.ConsecutiveStringConcatenationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: boolean methodExcluded(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor$_visitStaticMethodCallExpression_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.TextReportWriter$_writePackageViolations_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor$_visitDeclarationExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryStringInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitListExpression_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainHasToStringAstVisitor: void visitClassComplete(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.XmlReportWriter$_buildFileElement_closure5$_closure16$_closure17: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: java.lang.Boolean isSingleLineClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.concurrency.ThreadLocalNotStaticFinalAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.grails.ClassConstraintsAndMapping$_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitTestMethodWithoutAssertAstVisitor: boolean checksException(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.basic.DuplicateCaseStatementAstVisitor$_visitSwitch_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildHeaderSection_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.NestedSynchronizationAstVisitor$_visitClosureExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ParameterNameAstVisitor$_processParameters_closure1: java.lang.String getMethodName()>",
    "<org.codenarc.rule.generic.IllegalRegexRule: boolean isReady()>",
    "<org.codenarc.rule.generic.IllegalClassMemberAstVisitor: boolean matchesIgnoreMethodNames(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitWhileLoop_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void visitCaseStatement(org.codehaus.groovy.ast.stmt.CaseStatement)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitForLoop_closure5: org.codehaus.groovy.ast.stmt.ForStatement getForStatement()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasState_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.AbstractFinallyAstVisitor$_isStatementWithinFinally_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.naming.FactoryMethodNameAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.exceptions.MissingNewInThrowStatementAstVisitor: void visitThrowStatement(org.codehaus.groovy.ast.stmt.ThrowStatement)>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolation_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryFinalOnPrivateMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ClosureAsLastMethodParameterAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ClassForNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTernaryExpressionAstVisitor: boolean areTrueAndFalse(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4$_closure13$_closure15: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.GroovyDslRuleSet$_createGroovyShell_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BracesForClassRule$_applyTo_closure1: java.util.List getViolations()>",
    "<org.codenarc.rule.generic.IllegalSubclassRule: boolean isReady()>",
    "<org.codenarc.rule.InlineViolationsParser$ParseResult: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure4$_closure11: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.SystemRunFinalizersOnExitAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_collectAllPrivateFields_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: boolean isNotAnIgnoredOverrideMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCatchBlockAstVisitor$_visitTryCatchFinally_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.util.WildcardPattern: void <init>(java.lang.String,boolean)>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor: boolean isNamedArgumentsListContainingThis(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processStaticImports_closure2: java.util.List getViolations()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToMethodAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.ruleset.RuleSetDelegate$_methodMissing_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.StubRule: void <init>(int)>",
    "<org.codenarc.rule.imports.ImportFromSamePackageRule$_applyTo_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsNotBlankLineAfterOpeningBrace_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.test.AbstractTestCase: java.lang.String getName()>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.util.SourceCodeUtil: java.util.List sourceLinesBetweenNodes(org.codenarc.source.SourceCode,org.codehaus.groovy.ast.ASTNode,org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.basic.ComparisonOfTwoConstantsAstVisitor: void addViolationIfBothAreConstantsOrLiterals(org.codehaus.groovy.ast.ASTNode,org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_visitClassComplete_closure2: org.codenarc.rule.grails.ClassConstraintsAndMapping getConstraintsAndMapping()>",
    "<org.codenarc.rule.junit.JUnitTearDownCallsSuperAstVisitor$_visitMethod_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.RemoveAllOnSelfAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.FilteredRuleSet$_getRules_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.CodeNarcRunner: org.codenarc.ruleset.RuleSet createRuleSet()>",
    "<org.codenarc.test.AbstractTestCase: void setUpAbstractTestCase()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure29: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.comments.JavadocMissingThrowsDescriptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.InlineViolationsParser$ParseResult: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor$_extractTransients_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean isFalseExpression(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.basic.ExplicitGarbageCollectionAstVisitor: boolean isPropertyExpression(org.codehaus.groovy.ast.expr.Expression,java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIntegerInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule$_applyTo_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.NonFinalSubclassOfSensitiveInterfaceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ClassNameSameAsFilenameRule$_applyTo_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_visitDeclarationExpression_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedObjectRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_visitMethod_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.naming.ParameterNameAstVisitor$_processParameters_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.AbstractReportWriter: java.lang.String getResourceBundleString(java.lang.String,java.lang.String,boolean)>",
    "<org.codenarc.util.ModifiersUtil$_matchesAnyModifiers_closure1: java.lang.Integer getActualModifiers()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.RuleSetUtil$_loadRuleScriptFile_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.DuplicateCaseStatementAstVisitor: void visitSwitch(org.codehaus.groovy.ast.stmt.SwitchStatement)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsMassAssignmentAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ImportUtil$_sourceLineAndNumberForImport_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.results.DirectoryResults: int getNumberOfViolationsWithPriority(int)>",
    "<org.codenarc.rule.formatting.BracesForForLoopAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.ReferenceCollector: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.AssertionTrap$_methodNamesCountsAsAssertion_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor: void checkPackageName(java.lang.String,org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.grails.GrailsDomainHasEqualsRule: void <init>()>",
    "<org.codenarc.rule.logging.LoggerForDifferentClassAstVisitor: boolean isEqualToCurrentClassOrClassName(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean areTrueAndFalseExpressions(org.codehaus.groovy.ast.stmt.Statement,org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.ruleset.MovedRules$Renamed: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.concurrency.StaticSimpleDateFormatFieldAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.InterfaceNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckAstVisitor: boolean isPropertyInvocation(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.rule.junit.UseAssertSameInsteadOfAssertTrueAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: void afterBlock()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.rule.exceptions.ThrowNullPointerExceptionRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor: void processType(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_applyProperties_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor: void processParameters(org.codehaus.groovy.ast.Parameter[],java.lang.String)>",
    "<org.codenarc.rule.unused.UnusedObjectAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.UseCollectNestedAstVisitor: org.codehaus.groovy.ast.Parameter getClosureParameter(org.codehaus.groovy.ast.expr.ClosureExpression,org.codehaus.groovy.ast.Parameter)>",
    "<org.codenarc.report.XmlReportWriter$_buildMessageElement_closure8: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.logging.LoggerForDifferentClassAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.AbstractJavadocMissingDescriptionRule: void <init>()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_visitMethod_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptySwitchStatementAstVisitor: void visitSwitch(org.codehaus.groovy.ast.stmt.SwitchStatement)>",
    "<org.codenarc.report.ReportWriterFactory: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule$_addOrderingViolations_closure1: java.lang.String getMessage()>",
    "<org.codenarc.rule.formatting.BlockEndsWithBlankLineAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21$_closure23: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.logging.LoggerWithWrongModifiersAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_applyTo_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: int getLineNumberForCharacterIndex(int)>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4$_closure13: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassComplete_closure5: java.lang.Object doCall(java.util.Collection)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToMinusMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.junit.JUnitFailWithoutMessageRuleAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectMapKeys_closure6: java.util.Map getResult()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildMessageElement_closure7: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: boolean isNotExpressionWithMethodCallOnName(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.rule.formatting.LineLengthRule: boolean flagIfRegularLine(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationToGetClassAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.BracesForForLoopAstVisitor: int findLastLineOfForExpressions(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.rule.security.PublicFinalizeMethodAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.naming.VariableNameAstVisitor$_visitDeclarationExpression_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_buildSourceLineElement_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EqualsAndHashCodeAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.UnsafeArrayDeclarationAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.BaselineResultsProcessor$_processResults_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.JavaIoPackageAccessAstVisitor: void visitPropertyExpression(org.codehaus.groovy.ast.expr.PropertyExpression)>",
    "<org.codenarc.rule.security.SystemExitRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitTestMethodWithoutAssertAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterAstVisitor$_hasItParameter_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.naming.ClassNameSameAsFilenameRule$_applyTo_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.InstanceofRule: void <init>()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor$_closure1: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.exceptions.CatchArrayIndexOutOfBoundsExceptionRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.logging.LoggerForDifferentClassAstVisitor: boolean isEqualToCurrentClassName(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.results.DirectoryResults$_removeViolation_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.imports.AbstractImportRule: void eachImportLine(org.codenarc.source.SourceCode,groovy.lang.Closure)>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_writeReport_closure1: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor$_isEmpty_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ConstantExpressionExtractor: java.util.List extractFromExpression(org.codehaus.groovy.ast.expr.ConstantExpression)>",
    "<org.codenarc.rule.naming.ParameterNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ParameterNameAstVisitor$_processParameters_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor$_visitCastExpression_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_applyProperties_closure2: org.codenarc.ruleset.RuleSet getRuleSet()>",
    "<org.codenarc.rule.exceptions.ReturnNullFromCatchBlockAstVisitor: boolean shouldVisitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4$_closure13$_closure15: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildButtons_closure6$_closure30: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildBodySection_closure1$_closure8: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceAfterSwitchRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12$_closure15: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure7$_closure9: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToRightShiftMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.IfStatementCouldBeTernaryAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.ruleset.XmlFileRuleSet: void <init>(java.lang.String)>",
    "<org.codenarc.rule.naming.ClassNameSameAsFilenameRule: java.lang.String classNodeType(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19$_closure21$_closure22: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor$_isExpressionUsedInAnnotation_closure2: org.codehaus.groovy.ast.expr.ConstantExpression getExpression()>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processStaticImports_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.exceptions.ThrowNullPointerExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.LoggerForDifferentClassAstVisitor: boolean isLoggerForDerivedClass(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInMethodDeclarationAstVisitor: java.lang.String removeDistractingParts(java.lang.String)>",
    "<org.codenarc.rule.groovyism.ClosureAsLastMethodParameterRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_findSuperClassMethods_closure7: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure7$_closure9: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner: org.codenarc.results.Results execute()>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllPackageSections_closure5$_closure17: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarc$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.GroovyVersion: boolean isNotGroovyVersion2()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: boolean isGetterSynchronizedAndSetterUnsychronized(java.util.List,java.lang.String)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: java.util.Map getIndentLevelsMap()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBooleanExpressionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToEqualsMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.basic.ForLoopShouldBeWhileLoopRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarc: void parseReport(java.lang.String)>",
    "<org.codenarc.ruleset.MovedRules$MovedToRuleSet: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.codenarc.tool.GenerateCodeNarcRulesProperties$_main_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_getMethodCallsAndMapKeys_closure5: java.lang.Object doCall(org.codehaus.groovy.ast.stmt.ExpressionStatement)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure4$_closure12: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBooleanInstantiationAstVisitor: boolean isConstructorCallAViolation(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor$_visitStaticMethodCallExpression_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor$_visitMethodCallExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.AbstractSourceCode$_removeGrabTransformation_closure1$_closure3$_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_writeReport_closure1$_closure10: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstanceOfCheckRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor$_visitBlockStatement_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceAfterClosingBraceAstVisitor: boolean isNotAllowedCharacterAfterClosure(java.lang.String,int)>",
    "<org.codenarc.rule.basic.ForLoopShouldBeWhileLoopAstVisitor: void visitForLoop(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonAstVisitor$_removeAnyViolationsForSameLine_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_configure_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterCodeVisitor: void visitVariableExpression(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.rule.imports.UnusedImportRule$_findReference_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.AstUtil: boolean respondsTo(java.lang.Object,java.lang.String)>",
    "<org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ant.CodeNarcTask: void addFileset(org.apache.tools.ant.types.FileSet)>",
    "<org.codenarc.rule.groovyism.ExplicitStackInstantiationRule$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.concurrency.NestedSynchronizationAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionAstVisitor$_hasJUnit4Annotation_closure1: org.codehaus.groovy.ast.MethodNode getNode()>",
    "<org.codenarc.rule.FieldReferenceAstVisitor: java.util.List getOuterClassNames()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21$_closure22: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.generic.IllegalStringRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_afterBlock_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.JsonReportWriter: boolean isRoot(org.codenarc.results.Results)>",
    "<org.codenarc.rule.design.AbstractClassWithPublicConstructorAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.NoTabCharacterRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassEx_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTernaryExpressionAstVisitor: boolean isBooleanConditionalExpression(org.codehaus.groovy.ast.expr.BooleanExpression)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitConstructorOrMethod_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitPublicFieldAstVisitor: void visitClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.tool.GenerateAll: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ParameterReassignmentAstVisitor: void <init>()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure19: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToXorMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.HardCodedWindowsFileSeparatorRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.LineLengthRule: boolean lineExceedsMaxLength(java.lang.String)>",
    "<org.codenarc.report.AbstractHtmlReportWriter: groovy.lang.Closure buildRuleDescriptions(org.codenarc.AnalysisContext)>",
    "<org.codenarc.rule.convention.IfStatementCouldBeTernaryAstVisitor: boolean isBlockWithSingleReturnStatement(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor: void visitProperty(org.codehaus.groovy.ast.PropertyNode)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21$_closure23: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: java.util.List generateAllPossibleParameterSignatures(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor$_visitMethodCallExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.JUnitPublicNonTestMethodAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.imports.UnnecessaryGroovyImportRule$_applyTo_closure1: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: boolean isSpockBlockLabel(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.BrokenNullCheckRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_processMethodOrConstructorCall_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.StaticConnectionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.JavaIoPackageAccessAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.basic.DeadCodeAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThreadLocalNotStaticFinalRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.SpockIgnoreRestUsedRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor: java.util.List getAnonymousClasses()>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor$_processParameters_closure1: java.lang.String getMethodName()>",
    "<org.codenarc.rule.formatting.BlankLineBeforePackageRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasOneStaticFieldNamedInstance_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.StaticFieldsBeforeInstanceFieldsAstVisitor$_visitClassComplete_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.NoDefAstVisitor$_visitParameters_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.basic.ConstantTernaryExpressionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarc: void checkMaxViolations(org.codenarc.results.Results,int,int)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_initializeImportNames_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarc$__clinit__closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_buildViolationElement_closure6: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitCaseStatement_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueAstVisitor: int getActualArgumentIndex(java.util.List)>",
    "<org.codenarc.report.InlineXmlReportWriter$_buildViolationElement_closure1$_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer: void applyProperties(java.util.Properties,org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.rule.ClassReferenceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor$_isNamedArgumentsListContainingThis_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalSubclassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BracesForMethodAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_addViolationOnMismatch_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.imports.UnnecessaryGroovyImportRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.imports.UnusedImportRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.CouldBeSwitchStatementAstVisitor: void <init>()>",
    "<org.codenarc.rule.generic.IllegalRegexRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.CommonThrowAstVisitor: void visitThrowStatement(org.codehaus.groovy.ast.stmt.ThrowStatement)>",
    "<org.codenarc.rule.imports.AbstractImportRule$_findLineNumberOfFirstClassDeclaration_closure1: java.lang.Integer getFirstLineNumber()>",
    "<org.codenarc.report.BaselineXmlReportWriter: groovy.lang.Closure buildViolationElement(org.codenarc.rule.Violation)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: java.util.List setupFlexibleIndentForAnyClosureParameterBlocks(org.codehaus.groovy.ast.expr.ArgumentListExpression)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_uniqueAndSortedDeclaringClassNames_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.CollectionReturnTracker: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure4$_closure11: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_buildReportElement_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.logging.PrintlnAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.JavaIoPackageAccessAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToMinusMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ClassNameSameAsSuperclassAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void addViolationForOperator(org.codehaus.groovy.ast.ASTNode,java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor: void saveCurrentAnnotatedNode(org.codehaus.groovy.ast.AnnotatedNode)>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor$_visitConstructorOrMethod_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsStatelessServiceRule: boolean shouldIgnoreField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.report.ReportWriterFactory: org.codenarc.report.ReportWriter getReportWriter(java.lang.String,java.util.Map)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryReturnKeywordAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySelfAssignmentAstVisitor: boolean propertyExpressionsAreEqual(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.basic.ExplicitGarbageCollectionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfViolationsWithPriority_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.CodeNarc$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.exceptions.ExceptionExtendsErrorAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure19: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsAstVisitor$_visitMethodCallExpression_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.ComparisonOfTwoConstantsAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.imports.DuplicateImportRule$_applyTo_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor$_isEmpty_closure1$_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27: java.lang.Object call(org.codenarc.rule.Violation)>",
    "<org.codenarc.rule.logging.LoggerWithWrongModifiersAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor$_visitBlockStatement_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementAstVisitor$_visitIfElse_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.size.CrapMetricRule: void <init>()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertyLockingAstVisitor: void <init>()>",
    "<org.codenarc.rule.formatting.SpaceAroundMapEntryColonAstVisitor: int columnIndexForColon(org.codehaus.groovy.ast.expr.MapEntryExpression)>",
    "<org.codenarc.rule.basic.ForLoopShouldBeWhileLoopAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor$_visitDeclarationExpression_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.EmptyForStatementAstVisitor: void visitForLoop(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.ant.CodeNarcTask: void <init>()>",
    "<org.codenarc.rule.groovyism.GStringAsMapKeyAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.AbstractFinallyAstVisitor: boolean isStatementWithinFinally(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor$_methodReturnsArray_closure1: java.lang.Boolean getReturnsArray()>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.concurrency.BusyWaitRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor$_extractTransients_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure14: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor$_processParameters_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor: boolean argumentsContainThis(org.codehaus.groovy.ast.expr.TupleExpression)>",
    "<org.codenarc.rule.jdbc.JdbcResultSetReferenceRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.design.NestedForLoopAstVisitor: void visitForLoop(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_generateAllPossibleParameterSignatures_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.CouldBeSwitchStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet: java.io.InputStream getSchemaXmlInputStream()>",
    "<org.codenarc.rule.dry.DryUtil: boolean haveTheSameListLiteralValue(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.design.BooleanMethodReturnsNullAstVisitor: boolean methodReturnsBoolean(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.generic.IllegalClassMemberAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.groovyism.ExplicitStackInstantiationRule: java.lang.Object this$dist$get$3(java.lang.String)>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: java.util.List getLines()>",
    "<org.codenarc.util.ImportUtil$_sourceLineAndNumberForStarImport_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor$_visitMethodCallExpression_closure1: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.CyclomaticComplexityRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_writeReport_closure1: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.VirtualResults: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_containsKey_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.util.BaselineResultsProcessor$_removeMatchingViolation_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.ruleset.MovedRules: void <clinit>()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonAstVisitor$_removeAnyViolationsForSameLine_closure1: int getLineNumber()>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: boolean isMethodCallOnName(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.CodeNarc$_parseArgs_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.DuplicateMapKeyAstVisitor$_visitMapExpression_closure2: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_addClosureFields_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.PropertyNameRule: void <init>()>",
    "<org.codenarc.util.ImportUtil$_sortImportsByLineNumber_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.LineLengthRule: boolean sourceLineIsImport(java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitCatchStatement_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter: java.lang.String getFormattedTimestamp()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.logging.PrintlnAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.design.SimpleDateFormatMissingLocaleRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure18$_closure22: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.ruleset.RuleSets: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitLostTestAstVisitor: void visitClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4$_closure14: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4: org.codenarc.results.Results getResults()>",
    "<org.codenarc.report.BaselineViolation: void <init>()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor$_closureReturnsArray_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitClassEx_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.convention.CompileStaticlVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.basic.ComparisonWithSelfAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.security.UnsafeImplementationAsMapAstVisitor: void visitCastExpression(org.codehaus.groovy.ast.expr.CastExpression)>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor$_processParameters_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.AssignmentToStaticFieldFromInstanceMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.serialization.SerializableClassMustDefineSerialVersionUIDAstVisitor$_visitClassEx_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure26: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySetterRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ClassSizeAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.naming.AbstractClassNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.basic.EmptyForStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTernaryExpressionAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure13: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.BracesForClassRule: java.util.List findOpeningBraceLine(org.codenarc.source.SourceCode,org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_getFileResults_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.XmlReportWriter$_buildProjectElement_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.AbstractRuleTestCase$_removeSuppressedViolations_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor$_visitConstructorOrMethod_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor: void visitMethodPointerExpression(org.codehaus.groovy.ast.expr.MethodPointerExpression)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor: boolean isSingleton(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.grails.GrailsDomainHasEqualsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ConfusingTernaryAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$ViolationAndPath: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.naming.PackageNameMatchesFilePathRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.comments.ClassJavadocRule$_applyTo_closure1: java.util.List getViolations()>",
    "<org.codenarc.rule.junit.JUnitAssertAlwaysFailsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.CatchIllegalMonitorStateExceptionRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitConstructorOrMethod_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: boolean isNotOpeningParenthesis(java.lang.String,int)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryObjectReferencesAstVisitor$_visitBlockStatement_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.ToStringReturnsNullAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonRule$_processImports_closure1: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_generateAllPossibleParameterSignatures_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: int columnForIndentLevel(int)>",
    "<org.codenarc.util.WildcardPattern$_matches_closure2: java.lang.String getString()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitSwitch_closure7: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCatchBlockAstVisitor$_visitTryCatchFinally_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.ClassConstraintsAndMapping$_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.basic.HardCodedWindowsFileSeparatorAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.WildcardPattern$_matches_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildProjectElement_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.InterfaceNameSameAsSuperInterfaceAstVisitor$_visitClassEx_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInVariableDeclarationAstVisitor: void visitExpressionStatement(org.codehaus.groovy.ast.stmt.ExpressionStatement)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor: java.lang.String violationMessage(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.MissingBlankLineAfterPackageRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.size.CrapMetricRule: java.lang.Object createCrapMetric()>",
    "<org.codenarc.rule.exceptions.ThrowRuntimeExceptionRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor: void <init>()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitBlockStatement_closure6: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.NoDefAstVisitor$_visitParameters_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.StaticDateFormatFieldAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ConstantAssertExpressionAstVisitor: void visitAssertStatement(org.codehaus.groovy.ast.stmt.AssertStatement)>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer: java.util.List getSourceDirectories()>",
    "<org.codenarc.ruleset.RuleSetUtil: boolean isXmlFile(java.lang.String)>",
    "<org.codenarc.rule.design.ToStringReturnsNullRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitClosureExpression_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryObjectReferencesAstVisitor$_visitBlockStatement_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySelfAssignmentRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.SpockIgnoreRestUsedAstVisitor: void visitClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_processMethodOrConstructorCall_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCatchBlockAstVisitor$_visitTryCatchFinally_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor$_methodReturnsCollection_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: java.lang.String getLine(int)>",
    "<org.codenarc.report.ReportWriterFactory$_getReportWriter_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.EmptyMethodInAbstractClassAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.junit.JUnitAssertAlwaysFailsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTernaryExpressionAstVisitor: boolean isOperationThatReturnsABoolean(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.ant.CodeNarcTask: org.apache.tools.ant.types.Path createClasspath()>",
    "<org.codenarc.rule.basic.EmptyCatchBlockAstVisitor: void visitCatchStatement(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.ConsecutiveStringConcatenationAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_applyTo_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInMethodDeclarationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.InlineXmlReportWriter: groovy.lang.Closure buildViolationElement(org.codenarc.rule.Violation)>",
    "<org.codenarc.rule.concurrency.ThreadGroupAstVisitor: boolean isConstructorNamed(org.codehaus.groovy.ast.expr.ConstructorCallExpression,java.lang.Class)>",
    "<org.codenarc.report.XmlReportWriter$_buildViolationElement_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGetterAstVisitor: boolean isSpockMethod(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTernaryExpressionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitConstructorOrMethod_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.braces.IfStatementBracesAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_collectAllPrivateMethods_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: boolean isNotDollar(java.lang.String,int)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_getMethodCallsAndMapKeys_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildRulesElement_closure9: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.exceptions.MissingNewInThrowStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsAstVisitor$_visitMethodCallExpression_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.util.BaselineResultsProcessor: java.lang.String scrub(java.lang.String)>",
    "<org.codenarc.report.BaselineXmlReportWriter: groovy.lang.Closure buildProjectElement(org.codenarc.AnalysisContext)>",
    "<org.codenarc.rule.formatting.SpaceAfterClosingBraceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.NullReturnTracker: boolean expressionReturnsNull(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.results.FileResults$_getNumberOfFilesWithViolations_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.imports.DuplicateImportRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.InlineXmlReportWriter: groovy.lang.Closure buildDescriptionElement(org.codenarc.rule.Rule)>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTernaryExpressionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.CollectAllIsDeprecatedRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.FieldTypeRequiredAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.report.XmlReportWriter$_buildProjectElement_closure3$_closure11: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure2$_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.ConsecutiveBlankLinesRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule$_addOrderingViolations_closure1: java.lang.Boolean getNonStaticFound()>",
    "<org.codenarc.rule.generic.StatelessClassRule: void setAddToIgnoreFieldNames(java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$ViolationAndPath: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.formatting.SpaceBeforeClosingBraceAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_getMethodCallsAndMapKeys_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_visitClassComplete_closure2: org.codehaus.groovy.ast.ClassNode getNode()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean hasElseBlock(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule: java.lang.Object this$dist$invoke$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ImportUtil$_getAllImports_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCallForLastElementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThreadGroupRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.LineLengthRule: boolean sourceLineIsPackage(java.lang.String)>",
    "<org.codenarc.rule.basic.DuplicateMapKeyRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsBlankLineAfterOpeningBrace_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DryUtil: boolean haveTheSameConstantPropertyExpression(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.basic.RemoveAllOnSelfAstVisitor: int getArity(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor$_methodReturnsCollection_closure1: java.lang.Boolean getReturnsCollection()>",
    "<org.codenarc.rule.formatting.SpaceAfterClosingBraceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyMethodAstVisitor$_visitMethod_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_collectAllPrivateFields_closure2$_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.io.ClassPathResource: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.AssignCollectionUniqueAstVisitor: boolean isChainedUnique(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.convention.VariableTypeRequiredAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_writeReport_closure1$_closure10: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.imports.UnusedImportRule: java.lang.String findReference(org.codenarc.source.SourceCode,java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonAstVisitor: void visitStatement(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19$_closure21: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.AbstractReportWriter: boolean isEnabled(org.codenarc.rule.Rule)>",
    "<org.codenarc.rule.convention.VectorIsObsoleteRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitImports_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.CodeNarcVersion: java.lang.String readCodeNarcVersion()>",
    "<org.codenarc.source.SourceCodeCriteria: boolean matches(org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_addInitializedField_closure3: java.lang.String getVarName()>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor: boolean isIgnoredOneElementMap(org.codehaus.groovy.ast.expr.MapExpression)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitSynchronizedStatement_closure7: org.codehaus.groovy.ast.stmt.SynchronizedStatement getStatement()>",
    "<org.codenarc.report.InlineXmlReportWriter$_buildViolationElement_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryConstructorAstVisitor: boolean isEmptyConstructor(org.codehaus.groovy.ast.ConstructorNode)>",
    "<org.codenarc.rule.concurrency.WaitOutsideOfWhileLoopRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: void removeInitializedField(java.lang.String)>",
    "<org.codenarc.rule.comments.ClassJavadocRule$_applyTo_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateCodeNarcRulesProperties$_main_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceAstVisitor: boolean checkIsEmptyBlock(java.lang.String,int)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor: boolean methodReturnsArray(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.basic.DuplicateMapKeyAstVisitor$_visitMapExpression_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean isOnlyAConstantOrLiteralExpression(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor$_visitMethodEx_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19$_closure21$_closure22: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainHasEqualsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor: void handleClosure(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.basic.DuplicateCaseStatementAstVisitor$_visitSwitch_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.AbstractClassWithoutAbstractMethodAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.InlineViolationsParser: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_visitClassEx_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ParameterCountAstVisitor$_isOverridden_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryObjectReferencesAstVisitor: void <init>()>",
    "<org.codenarc.rule.formatting.SpaceBeforeClosingBraceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueRule: void <init>()>",
    "<org.codenarc.report.AbstractReportWriter: void <clinit>()>",
    "<org.codenarc.util.PathUtil: java.lang.String removeLeadingSlash(java.lang.String)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_addViolationOnMismatch_closure1: java.lang.String getSetterName()>",
    "<org.codenarc.rule.exceptions.ThrowErrorRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor: void visitCatchStatement(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.rule.braces.WhileStatementBracesAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor$_processParameters_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.CloneableWithoutCloneAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27$_closure28: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryTearDownRule: void <init>()>",
    "<org.codenarc.rule.dry.DryUtil: boolean areTheSameConstantOrLiteralMaps(org.codehaus.groovy.ast.expr.MapExpression,org.codehaus.groovy.ast.expr.MapExpression)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: void checkIfThereIsNotBlankLineAfterOpeningBrace(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.AbstractSpaceAroundBraceAstVisitor: java.lang.String sourceLineOrEmpty(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToAndMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitSynchronizedStatement_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToGetAtMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.FieldNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.InterfaceNameSameAsSuperInterfaceAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.EqualsOverloadedAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BracesForIfElseRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_visitDeclarationExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyCatchBlockAstVisitor: boolean doesContainIgnoreWord(java.lang.String)>",
    "<org.codenarc.rule.exceptions.CatchThrowableRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void visitForLoop(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.rule.groovyism.UseCollectNestedAstVisitor: org.codehaus.groovy.ast.expr.Expression getMethodCallParameterThatIsAClosure(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor: void visitMethodComplete(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryParenthesesForMethodCallWithClosureAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule$_applyTo_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllPackageSections_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure7: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ant.CodeNarcTask: void setClasspathRef(org.apache.tools.ant.types.Reference)>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ParameterReassignmentAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean isReturnTrue(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.size.ParameterCountAstVisitor: void checkParametersCount(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.basic.EqualsOverloadedRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInMethodDeclarationAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.concurrency.SynchronizedOnThisAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor: java.util.Set collectIncludedProperties(org.codehaus.groovy.ast.expr.MapExpression)>",
    "<org.codenarc.rule.design.BooleanReturnTracker: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule$_applyTo_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitForLoop_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInFieldDeclarationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.MethodSizeAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.rule.formatting.SpaceAroundClosureArrowAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter$_writeReportToFile_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTransientModifierAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassComplete_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitLostTestAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.formatting.BracesForIfElseAstVisitor: void visitElseOpeningBrace(org.codenarc.rule.formatting.BracesForIfElseRule,org.codehaus.groovy.ast.stmt.IfStatement,java.lang.String)>",
    "<org.codenarc.util.ImportUtil: java.util.List sortImportsByLineNumber(java.util.List,org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.convention.NoJavaUtilDateRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ModifiersUtil$_parseModifiers_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ParameterCountAstVisitor: boolean isOverridden(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.comments.JavadocConsecutiveEmptyLinesRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor: void processMethodOrConstructorCall(org.codehaus.groovy.ast.expr.MethodCall)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryFloatInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.SourceFile: java.lang.String getName()>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_collectAllPrivateFields_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.VariableTypeRequiredAstVisitor$_visitDeclarationExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.SimpleDateFormatMissingLocaleAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor: void addViolationIfDoubleQuoted(org.codehaus.groovy.ast.expr.ConstantExpression)>",
    "<org.codenarc.rule.concurrency.SynchronizedReadObjectMethodAstVisitor$_isSerializable_closure1: java.lang.Boolean getIsSerializable()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySetterAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.ThrowRuntimeExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor$_isEmpty_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter: groovy.lang.Closure buildAllViolationsSection(org.codenarc.results.Results)>",
    "<org.codenarc.rule.formatting.ClosureStatementOnOpeningLineOfMultipleLineClosureAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.ruleset.MovedRules: java.lang.String getMovedOrRenamedMessageForRuleName(java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27$_closure28: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitUtil: boolean isAssertCallWithValueMatching(org.codehaus.groovy.ast.expr.MethodCallExpression,java.lang.String,groovy.lang.Closure)>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter$_writePackageViolations_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.MethodReturnTypeRequiredAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBigDecimalInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildProjectElement_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalClassMemberRule: void setIllegalMethodModifiers(java.lang.String)>",
    "<org.codenarc.rule.exceptions.ThrowThrowableRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.MultipleUnaryOperatorsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UseAssertEqualsInsteadOfAssertTrueRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.RemoveAllOnSelfAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.CodeNarcRunner: void <init>()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.InvertedConditionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase: void testThatUnrelatedCodeHasNoViolations()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27$_closure28: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.AssertionTrap: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryObjectReferencesAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule$_addOrderingViolations_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceAfterWhileRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: void visitClassComplete(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.basic.EmptySynchronizedStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DryUtil: boolean areTheSameConstantOrLiteralLists(org.codehaus.groovy.ast.expr.ListExpression,org.codehaus.groovy.ast.expr.ListExpression)>",
    "<org.codenarc.rule.comments.JavadocEmptyFirstLineRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor: boolean expressionContainsBannedCharacters(org.codehaus.groovy.ast.expr.ConstantExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.formatting.AbstractSingleSpaceAfterKeywordAstVisitor: void checkForSingleSpaceAndOpeningParenthesis(org.codehaus.groovy.ast.ASTNode,java.lang.String)>",
    "<org.codenarc.rule.basic.DuplicateMapKeyAstVisitor$_visitMapExpression_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToGetAtMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.AbstractSpaceAroundBraceAstVisitor: boolean isNotInsideGString()>",
    "<org.codenarc.rule.unnecessary.VariableUsageFinder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.FieldReferenceAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.logging.PrintStackTraceAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.util.BaselineResultsProcessor: void addFilesWithViolations(java.util.List,org.codenarc.results.Results)>",
    "<org.codenarc.rule.design.LocaleSetDefaultAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.report.HtmlReportWriter: java.lang.String toString()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure6: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.source.SourceString: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_addInitializedField_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.naming.ParameterNameRule: void <init>()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildProjectElement_closure3$_closure9$_closure10: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.exceptions.CatchNullPointerExceptionRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasState_closure1: org.codehaus.groovy.ast.ClassNode getClassNode()>",
    "<org.codenarc.rule.formatting.SpaceBeforeClosingBraceAstVisitor: boolean checkIsEmptyBlock(java.lang.String,int)>",
    "<org.codenarc.report.XmlReportWriter$_buildMessageElement_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.ImportFromSamePackageRule$_applyTo_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildCSS_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.serialization.EnumCustomSerializationIgnoredAstVisitor: boolean isWriteReplaceMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.ruleset.MovedRules$Renamed: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ImplicitReturnStatementAstVisitor: boolean isEmptyMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.groovyism.AssignCollectionUniqueAstVisitor: boolean isMatchingUniqueCall(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12$_closure15: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildProjectElement_closure3$_closure9: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.dry.DryUtil: boolean haveTheSameMapLiteralValue(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.ruleregistry.RuleRegistryInitializer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.AssertionTrap: boolean methodNamesCountsAsAssertion(java.lang.Object)>",
    "<org.codenarc.util.PathUtil: java.lang.String removePathPrefix(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertViolations(java.lang.String,java.util.Map[])>",
    "<org.codenarc.rule.junit.JUnitPublicFieldAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToRightShiftMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor$_visitCatchStatement_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void processElvisExpression(org.codehaus.groovy.ast.expr.ElvisOperatorExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInVariableDeclarationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitTestMethodWithoutAssertRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateRuleIndexPage$_main_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule: void this$dist$set$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.naming.PackageNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter: void writeTitle(java.io.Writer)>",
    "<org.codenarc.util.io.DefaultResourceFactory: org.codenarc.util.io.Resource getResource(java.lang.String)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalRule$_getViolations_closure1: org.codenarc.rule.AstVisitor getVisitor()>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule$_applyTo_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfViolationsWithPriority_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.PackageNameMatchesFilePathRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarc: void <init>()>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor$_visitMethodEx_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.MovedRules$Renamed: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.basic.BitwiseOperatorInConditionalRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.BigDecimalInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure2$_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ToStringReturnsNullAstVisitor: void checkForImplicitNullReturns(org.codehaus.groovy.ast.MethodNode,java.lang.String)>",
    "<org.codenarc.util.ImportUtil$_sourceLineAndNumberForImport_closure1: java.lang.String getAlias()>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer$_processDirectory_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaRule: void <init>()>",
    "<org.codenarc.rule.unused.ReferenceCollector: void <init>()>",
    "<org.codenarc.rule.comments.AbstractJavadocEmptyTagRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.concurrency.NestedSynchronizationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.GroovyDslRuleSet: void <clinit>()>",
    "<org.codenarc.rule.serialization.EnumCustomSerializationIgnoredAstVisitor: boolean isPrivateStaticFinalField(org.codehaus.groovy.ast.FieldNode,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor: void suppressException(java.lang.Class,groovy.lang.Closure)>",
    "<org.codenarc.report.BaselineXmlReportParser: java.lang.String unescapeXml(java.lang.String)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_visitDeclarationExpression_closure1: org.codehaus.groovy.ast.expr.DeclarationExpression getDeclarationExpression()>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule$_applyTo_closure1: java.util.List getViolations()>",
    "<org.codenarc.rule.convention.IfStatementCouldBeTernaryAstVisitor: java.lang.String getReturnValue(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.util.io.ClassPathResource: boolean exists()>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.ruleset.TopLevelDelegate: void rule(java.lang.Class,java.util.Map)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_visitMethodEx_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.NullReturnTracker: void visitReturnStatement(org.codehaus.groovy.ast.stmt.ReturnStatement)>",
    "<org.codenarc.rule.design.BuilderMethodWithSideEffectsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.naming.ObjectOverrideMisspelledMethodNameAstVisitor: void checkForExactMethodName(org.codehaus.groovy.ast.MethodNode,java.lang.String,java.util.List,java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor$_visitMethodEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonRule$_processImports_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToPowerMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20: java.lang.Object doCall(org.codenarc.rule.Rule,java.lang.Object)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: java.lang.String getPath()>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor: boolean lastExpressionIsEndOfExpression(org.codehaus.groovy.ast.expr.ListExpression)>",
    "<org.codenarc.rule.grails.GrailsDuplicateMappingAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.ant.CodeNarcTask: void checkMaxViolations(org.codenarc.results.Results)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure26: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.imports.UnnecessaryGroovyImportRule$_applyTo_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.JUnitLostTestRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_visitMethod_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: boolean isChainedMethodCallOnDifferentLine(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitImports_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter: java.lang.String getRuleDescriptionOrDefaultMessage(org.codenarc.rule.Rule)>",
    "<org.codenarc.rule.generic.IllegalClassMemberRule: void setIllegalPropertyModifiers(java.lang.String)>",
    "<org.codenarc.util.io.UrlResource: boolean exists()>",
    "<org.codenarc.util.WildcardPattern$_convertStringWithWildcardsToRegex_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_flexibleCheckForCorrectColumn_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPublicModifierAstVisitor: java.lang.String getDeclaration(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.comments.ClassJavadocRule$_applyTo_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildCSS_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor: void visitVariableExpression(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void checkStatementIndent(org.codehaus.groovy.ast.stmt.Statement,org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.results.FileResults$_getNumberOfFilesWithViolations_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BlockEndsWithBlankLineAstVisitor: void addViolation(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.basic.HardCodedWindowsFileSeparatorAstVisitor: void addViolationForWindowsSeparator(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.CustomCompilerPhaseSourceDecorator: java.lang.String toString()>",
    "<org.codenarc.rule.exceptions.CatchErrorRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_getViolations_closure1: java.lang.Object doCall(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor: boolean isMethodCall(org.codehaus.groovy.ast.expr.MethodCallExpression,java.lang.String)>",
    "<org.codenarc.rule.security.FileCreateTempFileAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.SynchronizedOnThisAstVisitor: void visitSynchronizedStatement(org.codehaus.groovy.ast.stmt.SynchronizedStatement)>",
    "<org.codenarc.rule.concurrency.StaticSimpleDateFormatFieldAstVisitor: boolean isSimpleDateFormatConstructorCall(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.PrintlnAstVisitor$_visitClassEx_closure1: java.lang.Object doCall(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.logging.PrintStackTraceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor$_visitCatchStatement_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.jdbc.JdbcResultSetReferenceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsAstVisitor$_visitMethodCallExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_uniqueAndSortedDeclaringClassNames_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.basic.EmptyFinallyBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.RuleSetUtil: void <clinit>()>",
    "<org.codenarc.tool.GenerateUtil: java.util.Properties getRuleExtraInformation()>",
    "<org.codenarc.rule.convention.NoDefAstVisitor$_visitDeclarationExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.FileEndsWithoutNewlineRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_getViolations_closure1: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.junit.JUnitLostTestAstVisitor$_visitClass_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.concurrency.SynchronizedReadObjectMethodAstVisitor$_isSerializable_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.braces.ForStatementBracesAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: void checkTypeIfNotDynamicallyTyped(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.basic.DoubleNegativeAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.PrintlnAstVisitor$_visitClassEx_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ImportUtil$_sourceLineAndNumberForImport_closure1: java.lang.String getClassName()>",
    "<org.codenarc.util.ModifiersUtil: void <clinit>()>",
    "<org.codenarc.util.PathUtil: java.lang.String getName(java.lang.String)>",
    "<org.codenarc.rule.serialization.EnumCustomSerializationIgnoredAstVisitor: boolean isWriteObjectMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.groovyism.UseCollectNestedAstVisitor: void visitClassComplete(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.exceptions.CommonCatchAstVisitor: void visitCatchStatement(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsNotBlankLineAfterOpeningBrace_closure3: java.lang.Integer getClassStartLine()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitClosureExpression_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.concurrency.SynchronizedReadObjectMethodAstVisitor$_isSerializable_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processImports_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.ClassReferenceAstVisitor: void <init>(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCallToSubstringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCallForLastElementAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.generic.StatelessClassRule: boolean matchesIgnoreFieldTypes(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToMinusMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.DuplicateSetValueRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.ImportFromSamePackageRule$_applyTo_closure1: java.util.List getViolations()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_getMethodCallsAndMapKeys_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure11: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.basic.BrokenOddnessCheckRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.AbstractJavadocMissingDescriptionRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertTwoViolations_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.InlineViolationsParser$_parseLine_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.VolatileLongOrDoubleFieldVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.ruleset.RuleSetUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.BusyWaitAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.VirtualResults: java.util.List getViolations()>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckAstVisitor: boolean isMethodInvocation(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.rule.dry.DryUtil: boolean haveTheSameConstantValue(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.report.JsonReportWriter: boolean isWriteAsSingleLine()>",
    "<org.codenarc.report.TextReportWriter: void writeViolation(java.io.Writer,org.codenarc.rule.Violation,java.lang.String)>",
    "<org.codenarc.rule.grails.GrailsPublicControllerMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults: java.util.List getViolations()>",
    "<org.codenarc.rule.groovyism.ExplicitTypeInstantiationAstVisitor: void <init>(java.lang.String)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToEqualsMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.StringSourceAnalyzer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor$_processParameters_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildMessageElement_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitPublicNonTestMethodRule: void <init>()>",
    "<org.codenarc.rule.design.CollectionReturnTracker$_expressionReturnsList_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueAstVisitor: void findViolations(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.security.UnsafeArrayDeclarationAstVisitor: boolean isPublicStaticFinal(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor$_visitConstructorOrMethod_closure2: org.codehaus.groovy.ast.MethodNode getNode()>",
    "<org.codenarc.source.AbstractSourceCode$_getLineNumberForCharacterIndex_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitSetUpCallsSuperRule: void <init>()>",
    "<org.codenarc.rule.imports.AbstractImportRule$_findLineNumberOfFirstClassDeclaration_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processStaticImports_closure2: java.lang.Object doCall(java.lang.Object,org.codehaus.groovy.ast.ImportNode)>",
    "<org.codenarc.rule.concurrency.StaticConnectionAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.CodeNarc$_parseArgs_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor$_visitMethodCallExpression_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryOverridingMethodAstVisitor: boolean isSingleLineMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean isSingleStatementBlock(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.tool.GenerateCodeNarcRulesProperties: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UseAssertEqualsInsteadOfAssertTrueAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.ruleset.TopLevelDelegate: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportParser: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.CloneableWithoutCloneAstVisitor: boolean hasCloneMethod(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.results.DirectoryResults: int getNumberOfFilesWithViolations(int)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPublicModifierRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCallForLastElementAstVisitor: boolean isSubtractOneOnObject(java.lang.String,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor: void visitClassComplete(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolation_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryToStringAstVisitor: void visitDeclarationExpression(org.codehaus.groovy.ast.expr.DeclarationExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryLongInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsMassAssignmentAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_findMatchingSuperClassMethod_closure5: java.util.List getParameters()>",
    "<org.codenarc.rule.security.InsecureRandomAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildButtons_closure6$_closure30: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule: java.lang.Object this$dist$get$3(java.lang.String)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor: java.lang.String violationMessage(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.grails.GrailsStatelessServiceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstanceOfCheckAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySafeNavigationOperatorRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.JavadocEmptyLastLineRule: void <clinit>()>",
    "<org.codenarc.rule.formatting.SpaceBeforeClosingBraceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.AbstractHtmlReportWriter: boolean isDirectoryContainingFilesWithViolations(org.codenarc.results.Results)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_getViolations_closure1$_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.JsonReportWriter: java.lang.Object[] buildRulesElement(org.codenarc.AnalysisContext)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassEx_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitUnnecessarySetUpRule: void <init>()>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor$_visitMethodCallExpression_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.UseAssertSameInsteadOfAssertTrueAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.generic.IllegalClassMemberRule: void setAllowedMethodModifiers(java.lang.String)>",
    "<org.codenarc.source.AbstractSourceCode$_removeGrabTransformation_closure1$_closure3$_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalRule: java.util.List getViolations(org.codenarc.rule.AstVisitor,org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.design.CloneableWithoutCloneAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.FinalClassWithProtectedMemberAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryToStringAstVisitor: boolean isStringType(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.grails.GrailsDuplicateMappingRule: void <init>()>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor: boolean isExpressionUsedInAnnotation(org.codehaus.groovy.ast.expr.ConstantExpression,org.codehaus.groovy.ast.AnnotationNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCallForLastElementAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.naming.PackageNameMatchesFilePathRule: java.lang.String removeTrailingPeriod(java.lang.String)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14$_closure16: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor$_processParameters_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: boolean isSingleLineClassViolation()>",
    "<org.codenarc.rule.convention.StaticFieldsBeforeInstanceFieldsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.design.AssignmentToStaticFieldFromInstanceMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildProjectElement_closure3$_closure9: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildProjectElement_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.BracesForTryCatchFinallyAstVisitor: void visitCatch(org.codenarc.rule.formatting.BracesForTryCatchFinallyRule,org.codehaus.groovy.ast.stmt.TryCatchStatement)>",
    "<org.codenarc.rule.security.UnsafeImplementationAsMapRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ComparisonWithSelfAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: int rightMostColumn(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor$_visitCatchStatement_closure2: java.lang.Object doCall(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.ruleset.FilteredRuleSet$_getRules_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BlockStartsWithBlankLineAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_setRuleProperties_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.serialization.SerialPersistentFieldsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBigDecimalInstantiationAstVisitor: boolean shouldSkipViolation(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInVariableDeclarationAstVisitor: boolean contains(java.lang.String,java.lang.String)>",
    "<org.codenarc.report.XmlReportWriter$_buildSourceLineElement_closure7: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.XmlReportWriter: groovy.lang.Closure buildPackageElement(org.codenarc.results.Results)>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueAstVisitor: void visitStaticMethodCallExpression(org.codehaus.groovy.ast.expr.StaticMethodCallExpression)>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: boolean isBinaryExpressionWithMethodCallOnName(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.ruleset.RuleSetUtil: org.codenarc.ruleset.RuleSet loadRuleSetFile(java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCatchBlockAstVisitor$_visitTryCatchFinally_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationAstVisitor: void <init>(java.lang.Class,java.util.List,java.lang.String)>",
    "<org.codenarc.rule.exceptions.CommonThrowAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainHasToStringAstVisitor: boolean isNotInnerEnum(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.basic.EmptyFinallyBlockAstVisitor: void visitTryCatchFinally(org.codehaus.groovy.ast.stmt.TryCatchStatement)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor$_methodReturnsCollection_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.util.ImportUtil$_sourceLineAndNumberForImport_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.results.DirectoryResults: java.lang.String toString()>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor$_getParameterDefinitionAsString_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor$_hasTrailingComma_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitSetUpCallsSuperAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.AnalyzerException: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter: boolean isWriteToStandardOut()>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule$_applyTo_closure2: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: boolean isPropertyAccessForName(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.rule.design.BooleanReturnTracker: boolean isNull(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.design.AbstractClassWithoutAbstractMethodAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.util.ModifiersUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.InlineViolationsParser$ParseResult: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitClosureExpression_closure8: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor$_isExpressionUsedInAnnotation_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3: java.lang.String getVarName()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void visitCatchStatement(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolations_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToModMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void visitCastExpression(org.codehaus.groovy.ast.expr.CastExpression)>",
    "<org.codenarc.report.XmlReportWriter: groovy.lang.Closure buildPackageElements(org.codenarc.results.Results)>",
    "<org.codenarc.rule.comments.JavadocConsecutiveEmptyLinesRule: void <clinit>()>",
    "<org.codenarc.report.HtmlReportWriter$_buildBodySection_closure1: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.ruleset.RuleSetBuilder: void <init>()>",
    "<org.codenarc.rule.formatting.LineLengthRule: boolean flagIfPackage(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGetterAstVisitor: void addUnnecessaryGetterViolation(org.codehaus.groovy.ast.expr.MethodCallExpression,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPublicModifierAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor$_getParameterDefinitionAsString_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure14: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.imports.ImportFromSamePackageRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.util.WildcardPattern: java.lang.String convertStringWithWildcardsToRegex(java.lang.String)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor: boolean isNotElementOfAnnotation(org.codehaus.groovy.ast.expr.ConstantExpression)>",
    "<org.codenarc.rule.convention.NoJavaUtilDateAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule: java.util.Map collectAllPrivateMethods(org.codehaus.groovy.ast.ModuleNode)>",
    "<org.codenarc.rule.security.ObjectFinalizeAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.braces.IfStatementBracesAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThreadGroupAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitClassComplete_closure5: java.lang.Object doCall(org.codehaus.groovy.ast.AnnotationNode)>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void checkMethodParameter(org.codehaus.groovy.ast.Parameter)>",
    "<org.codenarc.ant.CodeNarcTask$_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.results.DirectoryResults$_getTotalNumberOfFiles_closure5: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.LongLiteralWithLowerCaseLAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_addViolationsForMultipleFieldDeclarations_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3$_closure4: java.lang.String getVarName()>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor$_visitCatchStatement_closure2: org.codehaus.groovy.ast.stmt.CatchStatement getStatement()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: void <init>()>",
    "<org.codenarc.rule.generic.RequiredRegexRule: boolean isReady()>",
    "<org.codenarc.report.InlineXmlReportWriter$_buildViolationElement_closure1$_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonRule: void checkLastLineForSemicolon(org.codenarc.source.SourceCode,java.util.List,org.codehaus.groovy.ast.AnnotatedNode)>",
    "<org.codenarc.report.ReportWriterFactory$_getReportWriter_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.DuplicateMapKeyAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.StaticCalendarFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.AbstractSpaceAroundBraceAstVisitor: boolean isNotWhitespace(java.lang.String,int)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor: void <init>(java.lang.Class,java.util.Set)>",
    "<org.codenarc.rule.formatting.BracesForClassRule$_applyTo_closure1: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.design.AssignmentToStaticFieldFromInstanceMethodAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.convention.MethodReturnTypeRequiredAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.design.CloneWithoutCloneableAstVisitor: boolean isCloneable(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor$_visitDeclarationExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.UseOfNotifyMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_getViolations_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateUtil$_createSortedListOfAllRules_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.jdbc.DirectConnectionManagementAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.grails.GrailsDomainHasToStringAstVisitor$_visitClassComplete_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainCantReferenceServiceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitPublicPropertyAstVisitor: boolean isIgnoredPropertyName(org.codehaus.groovy.ast.PropertyNode)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIntegerInstantiationAstVisitor: void <init>()>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.source.AbstractSourceCode: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter: java.lang.String getHtmlRuleDescription(org.codenarc.rule.Rule)>",
    "<org.codenarc.rule.groovyism.ExplicitStackInstantiationRule$1: void <init>(org.codenarc.rule.groovyism.ExplicitStackInstantiationRule,java.lang.Object)>",
    "<org.codenarc.rule.basic.EqualsAndHashCodeAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UseAssertSameInsteadOfAssertTrueRule: void <init>()>",
    "<org.codenarc.rule.exceptions.ConfusingClassNamedExceptionAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.junit.JUnitPublicPropertyAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.formatting.BracesForIfElseAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure25: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor: void visitMethodComplete(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryObjectReferencesAstVisitor: void accumulateOrError(java.lang.String,org.codehaus.groovy.ast.stmt.ExpressionStatement)>",
    "<org.codenarc.rule.grails.ClassConstraintsAndMapping: void <init>()>",
    "<org.codenarc.ant.CodeNarcTask: org.codenarc.results.Results executeRunnerWithConfiguredClasspath(java.lang.Object)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitClosureExpression_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner$_execute_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertViolation(org.codenarc.rule.Violation,java.lang.Integer,java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: boolean methodExcluded(java.util.regex.Pattern,java.lang.String)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_processMethodOrConstructorCall_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameRule$_toSet_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.ExceptionExtendsThrowableRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30$_closure31: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule: java.util.List collectAllPrivateFields(org.codehaus.groovy.ast.ModuleNode)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasOneStaticFieldNamedInstance_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.RuleSets: void <clinit>()>",
    "<org.codenarc.rule.exceptions.ReturnNullFromCatchBlockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedArrayRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure19: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: void visitCastExpression(org.codehaus.groovy.ast.expr.CastExpression)>",
    "<org.codenarc.report.XmlReportUtil$_cdata_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationAstVisitor$_visitConstructorCallExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildButtons_closure6: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertyLockingAstVisitor: boolean isWriteLocked(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueAstVisitor: void <clinit>()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure26: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.ConsecutiveBlankLinesRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter: java.lang.String formatSourceLine(java.lang.String,int)>",
    "<org.codenarc.rule.formatting.SpaceAroundMapEntryColonAstVisitor: java.lang.String mapEntrySourceLine(org.codehaus.groovy.ast.expr.MapEntryExpression)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure24: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure11$_closure13$_closure14: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.InlineViolationsParser: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<org.codenarc.rule.StubRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUtil$_isAssertCallWithConstantValue_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.results.DirectoryResults: int getNumberOfViolationsWithPriority(int,boolean)>",
    "<org.codenarc.rule.groovyism.ExplicitTypeInstantiationAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.basic.EqualsOverloadedAstVisitor: boolean onlyArgumentHasTypeObject(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19$_closure20: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: int firstNonWhitespaceColumn(java.lang.String)>",
    "<org.codenarc.rule.logging.PrintlnAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_addViolationsForMultipleFieldDeclarations_closure7: java.lang.Object doCall(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_addClosureFields_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalRule$_getViolations_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10$_closure11: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule$1: void <init>(org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule,java.lang.Object)>",
    "<org.codenarc.source.AbstractSourceCode$_getLineNumberForCharacterIndex_closure2: java.lang.Integer getLineCount()>",
    "<org.codenarc.rule.formatting.BracesForTryCatchFinallyAstVisitor$_visitCatch_closure1: org.codenarc.rule.formatting.BracesForTryCatchFinallyRule getMyRule()>",
    "<org.codenarc.rule.concurrency.StaticMatcherFieldAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.concurrency.VolatileArrayFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor$_visitBlockStatement_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyTryBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildViolationElement_closure6: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.NoJavaUtilDateAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: boolean isNamedLikeAConstant(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.report.SortableHtmlReportWriter: java.lang.String toString()>",
    "<org.codenarc.ruleset.XmlFileRuleSet$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.NullResultsProcessor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.StatelessClassRule: boolean isReady()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: java.lang.String parentPackageName(java.lang.String)>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor: boolean isSubclass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllPackageSections_closure5$_closure17: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.comments.AbstractJavadocEmptyTagRule: java.lang.String buildRegex()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.convention.ConfusingTernaryRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.AbstractSourceCode: java.lang.String line(int)>",
    "<org.codenarc.rule.convention.InvertedIfElseAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainHasEqualsAstVisitor$_visitClassComplete_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure18: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.comments.JavadocEmptyAuthorTagRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_writeReport_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure19$_closure23: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCallForLastElementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.WildcardPattern$_convertStringWithWildcardsToRegex_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.util.io.DefaultResourceFactory: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4$_closure13: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule$_addOrderingViolations_closure1: java.lang.Object doCall(int,java.lang.String)>",
    "<org.codenarc.tool.GenerateRuleIndexPage: void main(java.lang.String[])>",
    "<org.codenarc.rule.groovyism.GStringAsMapKeyAstVisitor: void visitMapEntryExpression(org.codehaus.groovy.ast.expr.MapEntryExpression)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_generateAllPossibleParameterSignatures_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processImports_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintRule: void <init>()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySubstringAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.CompareToWithoutComparableRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_removeInitializedField_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.naming.ParameterNameAstVisitor: void processParameters(org.codehaus.groovy.ast.Parameter[],java.lang.String)>",
    "<org.codenarc.rule.convention.InvertedConditionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.InlineXmlReportWriter$_buildViolationElement_closure1$_closure3: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.formatting.BlockStartsWithBlankLineAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.AbstractSourceCode: int getLineNumberForCharacterIndex(int)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure4: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: void visitIfElseThatIsTheLastStatementInABlock(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor$_visitConstructorOrMethod_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.basic.EmptyCatchBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.MultipleLoggersAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ParameterCountAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UseAssertFalseInsteadOfNegationRule: void <init>()>",
    "<org.codenarc.tool.GenerateRuleSetAllRulesByCategory: void main(java.lang.String[])>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor: boolean isOneLiner(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor$_methodReturnsArray_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.ClassForNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor: void visitMapExpression(org.codehaus.groovy.ast.expr.MapExpression)>",
    "<org.codenarc.test.AbstractTestCase: void <init>()>",
    "<org.codenarc.rule.security.JavaIoPackageAccessRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.AddEmptyStringAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.basic.DuplicateSetValueAstVisitor$_visitCastExpression_closure1: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean isReturnFalse(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.junit.UseAssertFalseInsteadOfNegationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.EmptyMethodInAbstractClassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.WildcardPattern$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsServletContextReferenceRule: void <init>()>",
    "<org.codenarc.util.SourceCodeUtil: java.util.List sourceLinesBetween(org.codenarc.source.SourceCode,int,int,int,int)>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor$_visitMethodEx_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.DeadCodeAstVisitor$_visitBlockStatement_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertyLockingAstVisitor: void saveMethodInfo(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.IdeTextReportWriter: java.lang.String getViolationLocationString(org.codenarc.rule.Violation,java.lang.String)>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.AssignmentInConditionalAstVisitor: void addViolationIfAssignment(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.MultipleUnaryOperatorsAstVisitor: void checkForSecondUnaryOperator(org.codehaus.groovy.ast.expr.Expression,java.lang.Class)>",
    "<org.codenarc.rule.unused.UnusedArrayAstVisitor: void visitExpressionStatement(org.codehaus.groovy.ast.stmt.ExpressionStatement)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.junit.UnnecessaryFailRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor$_visitConstructorOrMethod_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor$_visitListExpression_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer: java.util.List collectViolations(org.codenarc.source.SourceCode,org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.rule.basic.HardCodedWindowsRootDirectoryRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitTypeInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCastAstVisitor: void <clinit>()>",
    "<org.codenarc.results.DirectoryResults: void <init>(java.lang.String,int)>",
    "<org.codenarc.rule.convention.FieldTypeRequiredAstVisitor: boolean isIgnoredFieldName(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementAstVisitor: boolean allBranchesReturn(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.tool.GenerateCodeNarcRulesProperties$_main_closure1$_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllSummaryByPackageRowsRecursively_closure3$_closure13: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitConstructorOrMethod_closure1: org.codehaus.groovy.ast.MethodNode getNode()>",
    "<org.codenarc.rule.AbstractRuleTestCase: void setUpAbstractRuleTestCase()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitLostTestAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BracesForTryCatchFinallyAstVisitor$_visitCatch_closure1: java.lang.Object doCall(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.rule.logging.LogUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ConsecutiveUtils: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.braces.WhileStatementBracesAstVisitor: void visitWhileLoop(org.codehaus.groovy.ast.stmt.WhileStatement)>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.VariableTypeRequiredRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ClassSizeRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.PrintlnAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.source.SourceCode$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EqualsAndHashCodeAstVisitor$_visitClassEx_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule$_addOrderingViolations_closure1: java.util.List getViolations()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27$_closure29: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ant.CodeNarcTask: void checkMaxViolationForPriority(int,int,java.lang.String)>",
    "<org.codenarc.ruleset.RuleSetDelegate$_methodMissing_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.SortableHtmlReportWriter: groovy.lang.Closure buildSummary(org.codenarc.results.Results)>",
    "<org.codenarc.rule.exceptions.MissingNewInThrowStatementAstVisitor: boolean looksLikeAnExceptionType(java.lang.String)>",
    "<org.codenarc.tool.GenerateRuleSetAllRules: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.GroovyDslRuleSet$_createGroovyShell_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10$_closure11$_closure12: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.basic.DuplicateSetValueAstVisitor$_visitCastExpression_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.size.CrapMetricAstVisitor: void <init>(org.gmetrics.metric.crap.CrapMetric)>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.SourceString: void setPath(java.lang.String)>",
    "<org.codenarc.rule.serialization.SerialVersionUIDAstVisitor: void visitProperty(org.codehaus.groovy.ast.PropertyNode)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.SimpleDateFormatMissingLocaleAstVisitor: boolean hasMinimumParameterCount(org.codehaus.groovy.ast.expr.ConstructorCallExpression,int)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckAstVisitor: boolean isNotNullCheckAgainstSuperReference(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.logging.LoggerForDifferentClassAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitMapExpression_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.grails.GrailsDomainHasToStringAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: boolean isExpressionAccessingMemberNamed(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.rule.InlineViolationsParser: org.codenarc.rule.InlineViolationsParser$ParseResult parse(java.lang.String)>",
    "<org.codenarc.rule.convention.CouldBeElvisRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.CloseWithoutCloseableAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: boolean isSingleLineClassViolation()>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionAstVisitor: void <clinit>()>",
    "<org.codenarc.util.BaselineResultsProcessor$_removeMatchingViolation_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryStringInstantiationAstVisitor: boolean isConstructorCallAViolation(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.basic.EmptyCatchBlockAstVisitor: boolean isExceptionIgnored(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor$_argumentsContainThis_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.DeadCodeAstVisitor: boolean statementForcesMethodReturn(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_initializeImportNames_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.CouldBeSwitchStatementAstVisitor: java.lang.Boolean isSupportedLeftExpressionType(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.grails.GrailsDomainHasToStringRule: void <init>()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitMapExpression_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor: void <init>()>",
    "<org.codenarc.report.XmlReportWriter$_buildRulesElement_closure9$_closure19$_closure20: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_isAnnotatedWithOverride_closure6: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaRule$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.naming.PropertyNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ant.CodeNarcTask: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildRulesElement_closure9$_closure19$_closure20: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintAstVisitor$_visitMethodCallExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.BaselineResultsProcessor$_processResults_closure1$_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryTearDownAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllPackageSections_closure5: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.grails.GrailsDomainHasEqualsAstVisitor$_visitClassComplete_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.SpockIgnoreRestUsedRule: void <init>()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ToStringReturnsNullAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer: void processFile(java.lang.String,org.codenarc.results.DirectoryResults,org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.rule.exceptions.ExceptionExtendsThrowableAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.CloneableWithoutCloneAstVisitor$_visitClassEx_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.StaticFieldsBeforeInstanceFieldsAstVisitor: void visitClassComplete(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.ruleset.MovedRules: org.codenarc.ruleset.MovedRules$Renamed renamedTo(java.lang.String)>",
    "<org.codenarc.ruleset.RuleSetUtil: org.codenarc.rule.Rule loadRuleScriptFile(java.lang.String)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_visitMethod_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_buildFileElement_closure5$_closure16: org.codenarc.results.FileResults getResults()>",
    "<org.codenarc.util.BaselineResultsProcessor$_removeMatchingViolation_closure2: org.codenarc.report.BaselineViolation getBaselineViolation()>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitClassEx_closure4: org.codehaus.groovy.ast.ClassNode getNode()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_getViolations_closure1$_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure5$_closure13$_closure14: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_initializeImportNames_closure5: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: org.codehaus.groovy.ast.stmt.Statement getStatement(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonAstVisitor: void removeAnyViolationsForSameLine(int)>",
    "<org.codenarc.rule.FieldReferenceAstVisitor: java.util.Collection getUnreferencedFields()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryLongInstantiationAstVisitor: void <init>()>",
    "<org.codenarc.rule.AbstractAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.ant.CodeNarcTask$_classLoaderForPaths_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_getFirstValue_closure4: java.util.List getKeys()>",
    "<org.codenarc.report.XmlReportWriter$_writeReport_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.JUnitSetUpCallsSuperAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void flexibleCheckForCorrectColumn(org.codehaus.groovy.ast.ASTNode,java.lang.String)>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.design.CloneWithoutCloneableRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.DoubleCheckedLockingAstVisitor: java.lang.String getNullCheckVariableName(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.report.SortableHtmlReportWriter: java.util.List getFileResults(org.codenarc.results.Results,java.util.List)>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor: boolean isDoubleTypeName(java.lang.String)>",
    "<org.codenarc.rule.basic.DeadCodeAstVisitor$_visitBlockStatement_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.results.FileResults$_getNumberOfViolationsWithPriority_closure1: int getPriority()>",
    "<org.codenarc.report.XmlReportWriter: groovy.lang.Closure buildSourceLineElement(org.codenarc.rule.Violation)>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertValidRegex(java.lang.String,java.lang.String)>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfViolationsWithPriority_closure3: boolean getRecursive()>",
    "<org.codenarc.report.BaselineXmlReportWriter: void writeReport(java.io.Writer,org.codenarc.AnalysisContext,org.codenarc.results.Results)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure11$_closure13: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.ConsecutiveLiteralAppendsAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueAstVisitor: boolean isJUnitAssert(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.basic.AssertWithinFinallyBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processImports_closure1: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.basic.RemoveAllOnSelfRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor: void checkClass(org.gmetrics.result.ClassMetricResult,org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.source.CustomCompilerPhaseSourceDecorator: void <init>(org.codenarc.source.SourceCode,int)>",
    "<org.codenarc.tool.GenerateUtil: java.util.List createSortedListOfAllRules()>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: void processMethodNode(org.codehaus.groovy.ast.MethodNode,java.lang.String)>",
    "<org.codenarc.rule.junit.JUnitUtil: boolean isAssertCallWithLiteralValue(org.codehaus.groovy.ast.expr.MethodCallExpression,java.lang.String,boolean)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.naming.PackageNameMatchesFilePathRule: boolean isReady()>",
    "<org.codenarc.rule.junit.JUnitPublicPropertyAstVisitor: void visitProperty(org.codehaus.groovy.ast.PropertyNode)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsNotBlankLineAfterOpeningBrace_closure2: java.lang.Integer getClassStartLine()>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure6: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule: java.lang.Object this$dist$get$3(java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.PrintlnAstVisitor$_visitClassEx_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GStringAsMapKeyRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfFilesWithViolations_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor$_visitCastExpression_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.source.SourceString: void <init>(java.lang.String,java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryParenthesesForMethodCallWithClosureRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.StatelessClassRule: boolean matchesIgnoreFieldNames(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaRule$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertInlineViolations(java.lang.String)>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: java.lang.String getName()>",
    "<org.codenarc.rule.basic.DeadCodeAstVisitor$_visitBlockStatement_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllSummaryByPackageRowsRecursively_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.BaselineViolation: void <init>(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationToGetClassAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.FileResults$_getNumberOfViolationsWithPriority_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUtil$_isAssertCallWithNonNullConstantValue_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoJavaUtilDateAstVisitor$_visitImports_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter: void writeReport(java.io.Writer,org.codenarc.AnalysisContext,org.codenarc.results.Results)>",
    "<org.codenarc.rule.formatting.ClosureStatementOnOpeningLineOfMultipleLineClosureAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_writeReport_closure1$_closure8: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.junit.AssertionTrap$_methodNamesCountsAsAssertion_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildViolationElement_closure6$_closure15: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.ArrayReturnTracker: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule$1: void <init>(org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule,java.lang.Object)>",
    "<org.codenarc.ruleset.MovedRules$Renamed: java.lang.String messageFor(java.lang.String)>",
    "<org.codenarc.util.ModifiersUtil: int parseSingleModifier(java.lang.String)>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule: java.lang.Object this$dist$invoke$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.ruleset.RuleSetDelegate$_findRule_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_visitMethodEx_closure1: org.codehaus.groovy.ast.MethodNode getNode()>",
    "<org.codenarc.rule.formatting.MissingBlankLineAfterImportsRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor: void visitListExpression(org.codehaus.groovy.ast.expr.ListExpression)>",
    "<org.codenarc.report.SortableHtmlReportWriter: groovy.lang.Closure buildBodySection(org.codenarc.AnalysisContext,org.codenarc.results.Results)>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unnecessary.AddEmptyStringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ClassNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UseAssertTrueInsteadOfAssertEqualsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.CloneableWithoutCloneAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_increaseIndentForClosureBlocks_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UseAssertSameInsteadOfAssertTrueRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGetterAstVisitor: void addViolationsIfGetter(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.AbstractConstructorCallAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDuplicateMappingAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameRule$_toSet_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.results.FileResults: int getNumberOfViolationsWithPriority(int)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure13: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor: boolean hasOneStaticFieldOfItself(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.grails.GrailsMassAssignmentAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.convention.ConfusingTernaryAstVisitor: void addViolationForNotExpression(org.codehaus.groovy.ast.expr.TernaryExpression,org.codehaus.groovy.ast.expr.NotExpression)>",
    "<org.codenarc.rule.groovyism.UseCollectNestedAstVisitor: void <init>()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildButtons_closure6$_closure30: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.util.io.UrlResource: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalClassMemberRule: void setAllowedFieldModifiers(java.lang.String)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildViolationElement_closure6: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.JUnitUtil$_isAssertCallWithNonNullConstantValue_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyStaticInitializerAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule$_applyTo_closure2: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.InlineViolationsParser$ParseResult: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.logging.SystemErrPrintRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectionCallAstVisitor: void <clinit>()>",
    "<org.codenarc.util.ImportUtil: java.util.List getNonStaticImportsSortedByLineNumber(org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.security.NonFinalPublicFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.TopLevelDelegate: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.basic.EmptyElseBlockAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.AbstractRuleTestCase$_removeSuppressedViolations_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor: boolean hasSingletonAnnotation(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.rule.size.MethodSizeAstVisitor: boolean isIgnoredMethodName(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeRule: void <init>()>",
    "<org.codenarc.rule.serialization.EnumCustomSerializationIgnoredAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryConstructorAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.util.WildcardPattern$_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure2$_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter: void writeFooter(java.io.Writer)>",
    "<org.codenarc.rule.basic.EmptyForStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility: org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility valueOf(java.lang.String)>",
    "<org.codenarc.rule.design.CloseWithoutCloseableAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryStringInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.InlineViolationsParser$_parseLine_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ComparisonOfTwoConstantsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitPublicNonTestMethodRule: void setIgnoreMethodsWithAnnotations(java.lang.String)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14$_closure16: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4: org.codenarc.results.Results getResults()>",
    "<org.codenarc.report.HtmlReportWriter$_buildBodySection_closure1$_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter: boolean isRoot(org.codenarc.results.Results)>",
    "<org.codenarc.rule.convention.NoDefRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_flexibleCheckForCorrectColumn_closure8: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.serialization.SerializableClassMustDefineSerialVersionUIDAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.tool.GenerateRuleSetAllRules: void main(java.lang.String[])>",
    "<org.codenarc.rule.concurrency.SynchronizedMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleregistry.PropertiesFileRuleRegistry: void <clinit>()>",
    "<org.codenarc.rule.naming.ClassNameSameAsFilenameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_writeReport_closure1$_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.VolatileArrayFieldAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_findRule_closure3: java.lang.String getName()>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitClassEx_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.comments.ClassJavadocRule$_applyTo_closure1: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.junit.JUnitFailWithoutMessageRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoJavaUtilDateAstVisitor: void visitImports(org.codehaus.groovy.ast.ModuleNode)>",
    "<org.codenarc.rule.convention.NoDefAstVisitor$_visitParameters_closure2: java.lang.Object doCall(org.codehaus.groovy.ast.Parameter)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySelfAssignmentAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.basic.DuplicateCaseStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14$_closure15: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor: void addViolationWithMessage(org.codehaus.groovy.ast.expr.MethodCallExpression,org.codehaus.groovy.ast.expr.PropertyExpression)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: boolean isMatchingField(org.codehaus.groovy.ast.FieldNode,java.lang.String)>",
    "<org.codenarc.rule.convention.IfStatementCouldBeTernaryAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.security.InsecureRandomRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EqualsAndHashCodeAstVisitor$_visitClassEx_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer: org.codenarc.results.Results analyze(org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.rule.ClassReferenceAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.AbstractRuleTestCase: java.lang.String inlineViolation(java.lang.String)>",
    "<org.codenarc.rule.convention.HashtableIsObsoleteRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.test.AbstractTestCase: java.lang.String classNameNoPackage()>",
    "<org.codenarc.rule.design.InstanceofAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.basic.DuplicateSetValueAstVisitor: boolean isDuplicate(org.codehaus.groovy.ast.expr.Expression,java.util.List)>",
    "<org.codenarc.rule.basic.EmptyClassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarc$__clinit__closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ThrowExceptionFromFinallyBlockAstVisitor: void visitThrowStatement(org.codehaus.groovy.ast.stmt.ThrowStatement)>",
    "<org.codenarc.rule.InlineViolationsParser: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThreadYieldAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.basic.EmptyMethodAstVisitor$_visitMethod_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: void visitVariableExpression(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.rule.junit.CoupledTestCaseAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: java.util.Collection interfaceMethods(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.JsonReportWriter: java.util.Map buildFileElement(org.codenarc.results.FileResults)>",
    "<org.codenarc.report.XmlReportUtil$_cdata_closure1: java.lang.String getText()>",
    "<org.codenarc.rule.basic.ThrowExceptionFromFinallyBlockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyStaticInitializerRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter$_getSortedRules_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.JsonReportWriter: java.util.Map buildViolationElement(org.codenarc.rule.Violation)>",
    "<org.codenarc.rule.junit.UseAssertNullInsteadOfAssertEqualsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalClassMemberAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.concurrency.NestedSynchronizationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30$_closure32: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.SpockIgnoreRestUsedAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21: org.codenarc.rule.Rule getRule()>",
    "<org.codenarc.report.XmlReportWriter: void writeReport(java.io.Writer,org.codenarc.AnalysisContext,org.codenarc.results.Results)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitListExpression_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.BracesForMethodAstVisitor: boolean containsOpeningBraceAfterParenthesis(java.lang.String)>",
    "<org.codenarc.util.CodeNarcVersion: void <clinit>()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure11: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void <init>()>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_findRule_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.BusyWaitAstVisitor: void addViolationIfBusyWait(org.codehaus.groovy.ast.stmt.LoopingStatement)>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_collectAllPrivateFields_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTernaryExpressionAstVisitor: boolean areBothTheSame(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.concurrency.StaticDateFormatFieldAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: boolean isGetterUnsynchronizedAndSetterSychronized(java.util.List,java.lang.String)>",
    "<org.codenarc.rule.convention.PublicMethodsBeforeNonPublicMethodsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.junit.CoupledTestCaseAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitClassComplete_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.InlineViolationsParser: java.lang.String unescape(java.lang.String)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToEqualsMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_getViolations_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToMultiplyMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.SwallowThreadDeathAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonRule$_processImports_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceAfterElseAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter: java.util.Map buildSummaryElement(org.codenarc.results.Results)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.groovyism.UseCollectManyAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void visitWhileLoop(org.codehaus.groovy.ast.stmt.WhileStatement)>",
    "<org.codenarc.ruleset.MovedRules$Renamed: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.concurrency.StaticCalendarFieldAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsPublicControllerMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.AssignCollectionSortRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure19$_closure23: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.AbstractRuleTestCase: org.codenarc.source.SourceCode prepareSourceCode(java.lang.String)>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_applyTo_closure2: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.ruleset.FilteredRuleSet: java.util.List getRules()>",
    "<org.codenarc.rule.comments.JavadocEmptyLastLineRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateUtil: java.util.List sortRules(java.util.List)>",
    "<org.codenarc.rule.convention.PublicMethodsBeforeNonPublicMethodsAstVisitor: void visitMethodComplete(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.basic.EmptySynchronizedStatementAstVisitor: void visitSynchronizedStatement(org.codehaus.groovy.ast.stmt.SynchronizedStatement)>",
    "<org.codenarc.rule.formatting.SpaceBeforeClosingBraceAstVisitor: void processMethodNode(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.formatting.SpaceAfterClosingBraceAstVisitor: void addClosingBraceViolation(org.codehaus.groovy.ast.ASTNode,java.lang.String)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildProjectElement_closure3$_closure9: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.Violation: java.lang.String toString()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: org.codehaus.groovy.ast.MethodNode getFirstValue(java.util.Map,java.util.List)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor$_expressionContainsBannedCharacters_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor$_visitConstantExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ParameterReassignmentAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.InterfaceNameSameAsSuperInterfaceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.exceptions.CatchIndexOutOfBoundsExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.TrailingCommaRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildLogo_closure6: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor$_processParameters_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure11$_closure13: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.imports.DuplicateImportRule$_applyTo_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.imports.UnusedImportRule: void processImports(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleScriptElements_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySetterAstVisitor: boolean isSuperCall(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.BlockEndsWithBlankLineAstVisitor: void checkForViolations(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor$_visitConstantExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.TopLevelDelegate: void <init>()>",
    "<org.codenarc.rule.junit.JUnitPublicNonTestMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.LoggerWithWrongModifiersAstVisitor: void addViolationForField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.UseCollectNestedRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConstantExpressionExtractor: java.util.List extractFrom(org.codehaus.groovy.ast.AnnotationNode)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassComplete_closure5: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_visitMethod_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.naming.AbstractTypeNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ReturnFromFinallyBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarc$_execute_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.InsecureRandomAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter: java.lang.String buildTitle()>",
    "<org.codenarc.rule.junit.JUnitLostTestAstVisitor$_visitClass_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitClosureExpression_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectIncludedProperties_closure8: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.results.FileResults: org.codenarc.results.Results findResultsForPath(java.lang.String)>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BlockStartsWithBlankLineRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertViolation(org.codenarc.rule.Violation,java.lang.Integer,java.lang.String)>",
    "<org.codenarc.rule.exceptions.ThrowExceptionRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.naming.AbstractClassNameAstVisitor: boolean shouldVisit(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: void visitVariableExpression(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor$_visitConstructorOrMethod_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBigIntegerInstantiationAstVisitor: void <init>()>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19$_closure21$_closure22: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.source.SourceCodeCriteria: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BracesForIfElseAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_setRuleProperties_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.ComparisonOfTwoConstantsAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleScriptElements_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.JavadocConsecutiveEmptyLinesRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.logging.MultipleLoggersAstVisitor: void <init>()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildButtons_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_getViolations_closure1: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_getMethodCallsAndMapKeys_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.StaticDateFormatFieldAstVisitor: boolean isDateFormatFactoryMethodCall(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGetterAstVisitor: boolean isMatchingGetterMethodName(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryObjectReferencesAstVisitor$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildCSS_closure2$_closure9: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfFilesWithViolations_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_findSuperClassMethods_closure7: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure19: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCastAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: boolean isNotDollarInsideGString(java.lang.String,int)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor$_methodReturnsArray_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure5$_closure13$_closure14: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_visitMethod_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_increaseIndentForClosureBlocks_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceAstVisitor: void visitMapEntryExpression(org.codehaus.groovy.ast.expr.MapEntryExpression)>",
    "<org.codenarc.rule.security.NonFinalPublicFieldAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule: org.codenarc.rule.AstVisitor getAstVisitor(org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.AssignmentToStaticFieldFromInstanceMethodAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure29: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.HardCodedWindowsFileSeparatorAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.UnnecessaryFailAstVisitor$_visitCatchStatement_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_visitMethod_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllPackageSections_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.io.UrlResource: java.io.InputStream getInputStream()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildScript_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.DoubleNegativeAstVisitor: void visitNotExpression(org.codehaus.groovy.ast.expr.NotExpression)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_writeReport_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.AssignCollectionSortAstVisitor: void visitDeclarationExpression(org.codehaus.groovy.ast.expr.DeclarationExpression)>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor$_visitArgumentlistExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void checkAssignmentWithinString(org.codehaus.groovy.ast.ASTNode,java.lang.String)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: void addInitializedField(java.lang.String)>",
    "<org.codenarc.report.BaselineViolation: java.lang.String toString()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12$_closure15$_closure16: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryObjectReferencesRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults$_getViolations_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.IndentationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_removeInitializedField_closure5: java.lang.String getVarName()>",
    "<org.codenarc.rule.generic.IllegalStringRule: boolean isReady()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor: void <init>()>",
    "<org.codenarc.ant.Report: void <init>()>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule$_applyTo_closure1: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.imports.UnusedImportRule$_findReference_closure3: java.lang.String getClassName()>",
    "<org.codenarc.source.SourceCode: void <clinit>()>",
    "<org.codenarc.rule.braces.ElseBlockBracesAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BlockEndsWithBlankLineAstVisitor: void visitTryCatchFinally(org.codehaus.groovy.ast.stmt.TryCatchStatement)>",
    "<org.codenarc.util.ModifiersUtil$_parseModifiers_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_setupFlexibleIndentForAnyClosureParameterBlocks_closure5: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.CompareToWithoutComparableAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryFinalOnPrivateMethodAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.junit.JUnitUtil: boolean isTestMethod(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.naming.ConfusingMethodNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_findMatchingSuperClassMethod_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.InlineViolationsParser$ParseResult: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.generic.IllegalClassMemberRule: void setAllowedPropertyModifiers(java.lang.String)>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule: void this$dist$set$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.convention.NoDoubleRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.SourceFile: java.lang.String getText()>",
    "<org.codenarc.ruleset.MovedRules: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure18$_closure22: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertTwoViolations(java.lang.String,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.String)>",
    "<org.codenarc.rule.unused.UnusedObjectRule: void <init>()>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: void checkType(java.lang.String,org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitBlockStatement_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitTestMethodWithoutAssertRule: void <init>()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14: boolean getAllPackages()>",
    "<org.codenarc.report.TextReportWriter: void writeSummary(java.io.Writer,org.codenarc.results.Results)>",
    "<org.codenarc.results.DirectoryResults: void removeViolation(org.codenarc.rule.Violation)>",
    "<org.codenarc.rule.basic.EmptyTryBlockAstVisitor: void visitTryCatchFinally(org.codehaus.groovy.ast.stmt.TryCatchStatement)>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsRule: java.lang.String getGormStaticMethodsNames()>",
    "<org.codenarc.rule.basic.ExplicitGarbageCollectionAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.ruleset.RuleSetUtil$_loadRuleScriptFile_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.VectorIsObsoleteRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.AbstractSourceCode: void logCompilationError(java.lang.Throwable)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasOneStaticFieldOfItself_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_findSuperClassMethods_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10$_closure11$_closure12: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule$_applyTo_closure2: java.util.List getViolations()>",
    "<org.codenarc.rule.basic.BrokenOddnessCheckAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.IfStatementCouldBeTernaryRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassComplete_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.exceptions.CommonCatchAstVisitor: void <init>(java.lang.String)>",
    "<org.codenarc.rule.basic.BigDecimalInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.InterfaceNameRule: boolean isReady()>",
    "<org.codenarc.rule.basic.EmptyElseBlockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptySwitchStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3$_closure4: org.codehaus.groovy.ast.expr.VariableExpression getVarExpression()>",
    "<org.codenarc.rule.comments.JavadocEmptyExceptionTagRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.CouldBeSwitchStatementAstVisitor: void checkIfStatementCanBeSwitch(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor: boolean isPossibleViolation(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor$_isUsedInAnyAnnotationOnCurrentAnnotatedNode_closure1: org.codehaus.groovy.ast.expr.ConstantExpression getConstantExpression()>",
    "<org.codenarc.report.XmlReportWriter$_writeReport_closure1: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.formatting.BracesForClassRule: boolean definesAnnotationType(java.lang.String)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void visitSynchronizedStatement(org.codehaus.groovy.ast.stmt.SynchronizedStatement)>",
    "<org.codenarc.rule.formatting.IndentationRule: void <init>()>",
    "<org.codenarc.rule.unused.AbstractLastStatementInBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor$_processParameters_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.ruleregistry.RuleRegistryHolder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.SpockIgnoreRestUsedAstVisitor$_visitMethod_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.AbstractReportWriter: void writeReportToFile(org.codenarc.AnalysisContext,org.codenarc.results.Results)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasSingletonAnnotation_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: java.lang.Boolean memoizedMethodPriv$isSingleLineClassClassNode(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.ruleset.RuleSetDelegate: void <init>(org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_visitClassEx_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitStackInstantiationRule: java.lang.Object this$dist$invoke$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule: void this$dist$set$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.comments.JavadocEmptySeeTagRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintAstVisitor: java.util.Collection extractImportedConstraints(java.lang.String)>",
    "<org.codenarc.rule.concurrency.ThreadGroupAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.NonFinalPublicFieldAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolations_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.AbstractReportWriter: java.lang.String getDescriptionForRule(org.codenarc.rule.Rule)>",
    "<org.codenarc.util.ImportUtil: java.lang.String packageNameForImport(org.codehaus.groovy.ast.ImportNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure24: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.AbstractReportWriter$_getSortedRules_closure5: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.basic.AbstractFinallyAstVisitor$_isStatementWithinFinally_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor$_visitMethodEx_closure1: java.lang.String getMethodName()>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: void checkIfThereIsNotBlankLineBeforeClosingBrace(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: boolean containsKey(java.util.Map,java.util.List)>",
    "<org.codenarc.util.BaselineResultsProcessor$_processResults_closure1: java.lang.Object doCall(org.codenarc.results.FileResults)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInMethodDeclarationAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.rule.design.BooleanMethodReturnsNullAstVisitor: void handleClosure(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.naming.VariableNameAstVisitor$_visitDeclarationExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_writeReport_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.SynchronizedReadObjectMethodAstVisitor$_isSerializable_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor: void visitDeclarationExpression(org.codehaus.groovy.ast.expr.DeclarationExpression)>",
    "<org.codenarc.rule.size.MethodSizeRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_setupFlexibleIndentForAnyClosureParameterBlocks_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.ConsecutiveLiteralAppendsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalRule$_getViolations_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.EmptyMethodInAbstractClassAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor: boolean isProcessingAnnotatedNode()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor$_visitConstructorOrMethod_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedObjectAstVisitor: void visitExpressionStatement(org.codehaus.groovy.ast.stmt.ExpressionStatement)>",
    "<org.codenarc.CodeNarcRunner$_createRuleSet_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.serialization.SerializableClassMustDefineSerialVersionUIDAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.formatting.BracesForClassRule$_applyTo_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.security.PublicFinalizeMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThreadGroupAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.report.XmlReportWriter$_buildViolationElement_closure6: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.report.SortableHtmlReportWriter$ViolationAndPath: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: void visitIfElseThatIsNotTheLastStatementInABlock(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.basic.EmptyIfStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitTestMethodWithoutAssertAstVisitor: boolean checksTimeout(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.junit.JUnitFailWithoutMessageRuleAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter$_buildPackageElements_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToMultiplyMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_getFileResults_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.AbstractSpaceAroundBraceAstVisitor: boolean isNotCharacter(java.lang.String,char,int)>",
    "<org.codenarc.rule.logging.SystemErrPrintAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: java.lang.String uniqueAndSortedDeclaringClassNames(java.util.Collection)>",
    "<org.codenarc.rule.imports.ImportFromSamePackageRule$_applyTo_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.naming.ConfusingMethodNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: java.lang.String getLastLine(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToMethodAstVisitor: void safelyAddViolation(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_visitClassComplete_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure4$_closure12: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor$_expressionContainsBannedCharacters_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.ImplicitReturnStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure26: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.ConsecutiveStringConcatenationAstVisitor: boolean isJoinableType(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToGetAtMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitImports_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.serialization.SerializableClassMustDefineSerialVersionUIDRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure5: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.dry.DuplicateListLiteralRule: void <init>()>",
    "<org.codenarc.report.JsonReportWriter$_buildFileElement_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.SourceString: java.lang.String toString()>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility: org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility next()>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: void <init>()>",
    "<org.codenarc.rule.basic.BitwiseOperatorInConditionalAstVisitor: java.util.List collectChildren(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.logging.PrintlnRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ComparisonWithSelfAstVisitor: void addViolationIfBothAreTheSameVariable(org.codehaus.groovy.ast.ASTNode,org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor$_visitMethodCallExpression_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: boolean isComparisonWithNull(org.codehaus.groovy.ast.expr.BinaryExpression,java.lang.String)>",
    "<org.codenarc.tool.GenerateRuleIndexPage: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor$_extractTransients_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitTestMethodWithoutAssertAstVisitor: boolean statementContainsAssertions(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.CompositeRuleSet: java.util.List getRules()>",
    "<org.codenarc.util.PathUtil: java.lang.String getParentPath(java.lang.String)>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility: org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility previous()>",
    "<org.codenarc.rule.formatting.BracesForForLoopAstVisitor: void visitForLoop(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.util.BaselineResultsProcessor: java.util.List buildFilesWithViolations(org.codenarc.results.Results)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: void <init>()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitBlockStatement_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.MovedRules: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.basic.BooleanGetBooleanAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_visitMethod_closure3: org.codehaus.groovy.ast.MethodNode getNode()>",
    "<org.codenarc.rule.generic.IllegalClassMemberRule: void setIllegalFieldModifiers(java.lang.String)>",
    "<org.codenarc.rule.design.AssignmentToStaticFieldFromInstanceMethodAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.basic.ClassForNameAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.ConstantExpressionExtractor: java.util.List extractFromExpression(org.codehaus.groovy.ast.expr.AnnotationConstantExpression)>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterAstVisitor$_hasItParameter_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_initializeImportNames_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.RuleSetUtil: void assertClassImplementsRuleInterface(java.lang.Class)>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor: void visitMapExpression(org.codehaus.groovy.ast.expr.MapExpression)>",
    "<org.codenarc.results.DirectoryResults: org.codenarc.results.Results findResultsForPath(java.lang.String)>",
    "<org.codenarc.rule.naming.PropertyNameRule: void validate()>",
    "<org.codenarc.rule.logging.LoggerForDifferentClassAstVisitor: boolean isEqualToCurrentClass(java.lang.String,java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter: void this$dist$set$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.util.BaselineResultsProcessor$_addFilesWithViolations_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.grails.GrailsDomainHasToStringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.FileCreateTempFileRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.JavadocMissingExceptionDescriptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.ConsecutiveStringConcatenationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.AbstractTypeNameAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.ruleset.MovedRules$MovedToRuleSet: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsRule: void <init>()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.BracesForMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: void <init>()>",
    "<org.codenarc.ruleset.GroovyDslRuleSet$_evaluateDsl_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitStackInstantiationRule: void this$dist$set$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildBodySection_closure2: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySafeNavigationOperatorAstVisitor: void checkExpression(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor: boolean isThisExpression(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.formatting.AbstractSpaceAroundBraceAstVisitor: void <init>()>",
    "<org.codenarc.report.AbstractReportWriter$_writeReportToFile_closure3: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.junit.ChainedTestRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.FilteredRuleSet$_getRules_closure1$_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.MathRandomTracker: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.PackageNameMatchesFilePathRule: java.lang.String mismatchMessage(java.lang.String)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_addViolationOnMismatch_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.IntegerGetIntegerAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor: boolean hasState(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.util.ImportUtil$_sourceLineAndNumberForImport_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor: void this$dist$set$4(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter: groovy.lang.Closure buildRulesElement(org.codenarc.AnalysisContext)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckAstVisitor: boolean isNullCheckAgainstSuperReference(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.design.CloneWithoutCloneableAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ParameterCountRule: void setMaxParameters(int)>",
    "<org.codenarc.rule.convention.InvertedIfElseAstVisitor: void dispatchToIfWithoutSuper(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.report.HtmlReportWriter: groovy.lang.Closure buildBodySection(org.codenarc.AnalysisContext,org.codenarc.results.Results)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30$_closure31: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.VariableTypeRequiredAstVisitor: void visitDeclarationExpression(org.codehaus.groovy.ast.expr.DeclarationExpression)>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: int leftMostColumn(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitClosureExpression_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitClosureExpression_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter: groovy.lang.Closure buildFileElements(org.codenarc.results.Results)>",
    "<org.codenarc.rule.comments.JavadocEmptyThrowsTagRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ConstantTernaryExpressionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.FileResults: int getNumberOfFilesWithViolations(int)>",
    "<org.codenarc.rule.serialization.SerializableClassMustDefineSerialVersionUIDAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults: int getTotalNumberOfFiles(boolean)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPublicModifierAstVisitor: void <clinit>()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet: void <init>(java.io.Reader)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12$_closure15$_closure16: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.ruleset.MovedRules$MovedToRuleSet: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasOneStaticFieldOfItself_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConstantExpressionExtractor$_extractFromExpression_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults: void <init>(java.lang.String)>",
    "<org.codenarc.ruleregistry.PropertiesFileRuleRegistry: void loadRules()>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.dry.DryUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UnnecessaryFailAstVisitor: void addViolationIfFail(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.design.AbstractClassWithPublicConstructorAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.ConsecutiveStringConcatenationAstVisitor: java.lang.String escape(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectionCallRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsBlankLineAfterOpeningBrace_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.CommonCatchAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryToStringAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor$_visitMethodEx_closure1: org.codehaus.groovy.ast.MethodNode getNode()>",
    "<org.codenarc.rule.basic.EmptyElseBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTransientModifierAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: boolean isAnnotatedWithOverride(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.analyzer.StringSourceAnalyzer: java.util.List getSourceDirectories()>",
    "<org.codenarc.rule.concurrency.WaitOutsideOfWhileLoopAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void visitTernaryExpression(org.codehaus.groovy.ast.expr.TernaryExpression)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: void <init>()>",
    "<org.codenarc.rule.basic.EqualsOverloadedAstVisitor: boolean isEqualsMethodWithOneArgument(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_getViolations_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildButtons_closure6: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitTestMethodWithoutAssertAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.convention.TernaryCouldBeElvisRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.ExceptionExtendsErrorAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.groovyism.ClosureAsLastMethodParameterAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.ruleset.MovedRules$Renamed: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.comments.JavadocEmptyFirstLineRule: void <clinit>()>",
    "<org.codenarc.rule.unnecessary.AddEmptyStringAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryFloatInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.UnnecessaryGroovyImportRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.ObjectFinalizeRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.VolatileLongOrDoubleFieldVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.basic.DuplicateMapKeyAstVisitor: void visitMapExpression(org.codehaus.groovy.ast.expr.MapExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonRule: void processImports(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildScript_closure1$_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalRegexRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.ruleset.TopLevelDelegate: void rule(java.lang.Class)>",
    "<org.codenarc.rule.InlineViolationsParser$ParseResult: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.StaticCalendarFieldAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitClosureExpression_closure8: org.codehaus.groovy.ast.expr.ClosureExpression getExpression()>",
    "<org.codenarc.rule.naming.FieldNameRule: void <init>()>",
    "<org.codenarc.rule.comments.AbstractJavadocMissingDescriptionRule: java.lang.String buildRegex()>",
    "<org.codenarc.report.AbstractReportWriter: java.lang.String substituteMessageParametersIfPresent(org.codenarc.rule.Rule,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean areReturningTrueAndFalse(org.codehaus.groovy.ast.stmt.Statement,org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.convention.TernaryCouldBeElvisAstVisitor: void visitTernaryExpression(org.codehaus.groovy.ast.expr.TernaryExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstanceOfCheckAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.formatting.BlockStartsWithBlankLineAstVisitor: void visitTryCatchFinally(org.codehaus.groovy.ast.stmt.TryCatchStatement)>",
    "<org.codenarc.rule.convention.VariableTypeRequiredAstVisitor: boolean matchesIgnoredName(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToLeftShiftMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyStaticInitializerAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsBlankLineAfterOpeningBrace_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer: void <clinit>()>",
    "<org.codenarc.util.BaselineResultsProcessor$_processResults_closure1: java.lang.Object call(org.codenarc.results.FileResults)>",
    "<org.codenarc.rule.basic.EqualsOverloadedAstVisitor: void addViolationIfOverloaded(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllSummaryByPackageRowsRecursively_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14$_closure16: org.codenarc.results.Results getResults()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure19$_closure23: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.EqualsAndHashCodeAstVisitor$_visitClassEx_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: boolean isAStaticFinalFieldValue(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.junit.JUnitUtil$_isTestMethod_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainHasEqualsAstVisitor: void visitClassComplete(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.exceptions.CommonThrowAstVisitor: void <init>(java.util.List)>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.XmlReportWriter: java.util.Map buildPackageAttributeMap(org.codenarc.results.Results)>",
    "<org.codenarc.report.BaselineXmlReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.WildcardPattern: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.FieldNameAstVisitor: void <init>()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildHeaderSection_closure4$_closure10: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.InlineXmlReportWriter: groovy.lang.Closure buildRulesElement(org.codenarc.AnalysisContext)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21$_closure22$_closure24: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.ListRuleSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.CatchErrorRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectIncludedProperties_closure9: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThreadYieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PublicInstanceFieldAstVisitor: java.lang.String createErrorMessage(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.ruleset.MovedRules: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule: java.lang.Object this$dist$invoke$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildProjectElement_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure15$_closure16: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToMultiplyMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.design.NestedForLoopAstVisitor: boolean isForNested()>",
    "<org.codenarc.report.AbstractReportWriter$_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter: boolean isDirectoryContainingFiles(org.codenarc.results.Results)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToCompareToMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor$_visitListExpression_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processStaticImports_closure2: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPublicModifierAstVisitor: void checkDeclaration(org.codehaus.groovy.ast.ASTNode,java.lang.String,java.lang.String)>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4$_closure14: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarc$_execute_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.CollectionReturnTracker: void expressionReturnsList(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_addClosureFields_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_buildRulesElement_closure9: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitImports_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.size.ParameterCountAstVisitor$_isOverridden_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ClassNameRule: void validate()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.DuplicateImportRule: void checkStaticImport(java.lang.String,int,java.util.Set,java.util.List)>",
    "<org.codenarc.rule.basic.EmptyWhileStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.AbstractJavadocEmptyTagRule: void <init>()>",
    "<org.codenarc.analyzer.AnalyzerException: void <init>(java.lang.String)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_configure_closure1: org.codenarc.ruleset.RuleSet getRuleSet()>",
    "<org.codenarc.rule.convention.VariableTypeRequiredAstVisitor$_visitDeclarationExpression_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.ClosureStatementOnOpeningLineOfMultipleLineClosureRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_visitClosureExpression_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDoubleInstantiationAstVisitor: void <init>()>",
    "<org.codenarc.rule.junit.JUnitPublicFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor: java.lang.Integer getLineNumber(org.gmetrics.result.MetricResult)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_writeReport_closure1: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameRule$_toSet_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPublicModifierAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceAstVisitor: boolean isLambdaExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.exceptions.CatchIndexOutOfBoundsExceptionRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor: java.lang.String getSourceLine(java.lang.Integer)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19$_closure21: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter: groovy.lang.Closure buildFileSection(org.codenarc.results.Results)>",
    "<org.codenarc.rule.formatting.BracesForIfElseAstVisitor: void visitElse(org.codenarc.rule.formatting.BracesForIfElseRule,org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.design.CompareToWithoutComparableAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.util.ModifiersUtil: int parseModifiers(java.lang.String)>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: java.util.regex.Pattern getMatcherPattern()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_visitClassComplete_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ant.CodeNarcTask: void <clinit>()>",
    "<org.codenarc.rule.formatting.SpaceAfterForAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitAssertAlwaysSucceedsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.TopLevelDelegate: void rule(java.lang.Class,groovy.lang.Closure)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.AbstractSourceCode: void setSuppressionAnalyzer(org.codenarc.analyzer.SuppressionAnalyzer)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor: java.lang.String parentPackageName(java.lang.String)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3: org.codehaus.groovy.ast.expr.VariableExpression getVarExpression()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToLeftShiftMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildScript_closure1$_closure7: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.StatelessSingletonRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedMethodParameterRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ant.CodeNarcTask: org.codenarc.results.Results executeCodeNarcRunner(java.lang.Object)>",
    "<org.codenarc.rule.concurrency.StaticCalendarFieldAstVisitor: void addCalendarViolation(org.codehaus.groovy.ast.FieldNode,java.lang.String)>",
    "<org.codenarc.rule.naming.ObjectOverrideMisspelledMethodNameAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor$_closureReturnsArray_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.UnnecessaryFailAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: void <init>(org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryToStringAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet: void setRuleProperties(groovy.util.Node,org.codenarc.rule.Rule)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.CommentsUtil: java.lang.String group(java.lang.String)>",
    "<org.codenarc.rule.junit.JUnitUtil: boolean isAssertCallWithNonNullConstantValue(org.codehaus.groovy.ast.expr.MethodCallExpression,java.lang.String)>",
    "<org.codenarc.rule.FieldReferenceAstVisitor$_visitMethodEx_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.StaticFieldsBeforeInstanceFieldsAstVisitor$_visitClassComplete_closure1: org.codehaus.groovy.ast.ClassNode getNode()>",
    "<org.codenarc.rule.junit.UseAssertFalseInsteadOfNegationAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: java.util.List increaseIndentForClosureBlocks(org.codehaus.groovy.ast.expr.ArgumentListExpression)>",
    "<org.codenarc.rule.junit.JUnitAssertAlwaysFailsAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.util.WildcardPattern$_matches_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySetterAstVisitor: void addViolationsIfSetter(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.concurrency.SynchronizedOnGetClassAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BlockEndsWithBlankLineAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.basic.EmptyMethodAstVisitor$_visitMethod_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.DuplicateMapKeyAstVisitor$_visitMapExpression_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.concurrency.SynchronizedOnBoxedPrimitiveAstVisitor: void visitSynchronizedStatement(org.codehaus.groovy.ast.stmt.SynchronizedStatement)>",
    "<org.codenarc.rule.FieldReferenceAstVisitor$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitWhileLoop_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.AssignCollectionUniqueAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_containsKey_closure3: java.util.List getKeys()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildViolationElement_closure6$_closure15: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.XmlFileRuleSet: void <clinit>()>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: boolean isBinaryExpressionWithPropertyAccessForName(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToMethodAstVisitor: void <init>(java.lang.String,int)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsBlankLineAfterOpeningBrace_closure5: java.lang.Integer getClassStartLine()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UnnecessaryFailRule: void <init>()>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryConstructorAstVisitor: boolean containsOnlyCallToSuper(org.codehaus.groovy.ast.ConstructorNode)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_addInitializedField_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unused.UnusedArrayAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBooleanInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.serialization.SerialVersionUIDAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: void addViolationOnMismatch(java.util.List,java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.serialization.EnumCustomSerializationIgnoredAstVisitor: void visitMethodComplete(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.imports.UnusedImportRule: void processStaticImports(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule$_addOrderingViolations_closure1: java.lang.String getLatePattern()>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility: org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility[] values()>",
    "<org.codenarc.rule.design.FinalClassWithProtectedMemberRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementAstVisitor$_allBranchesReturn_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.exceptions.ThrowErrorRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.GroovyDslRuleSet: groovy.lang.GroovyShell createGroovyShell()>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUnnecessarySetUpRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCatchBlockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToOrMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGetterAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoJavaUtilDateAstVisitor$_visitImports_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalRule: boolean isDefinedInJpaEntity(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.exceptions.ConfusingClassNamedExceptionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterClosingBraceAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.rule.formatting.AbstractSpaceAroundBraceAstVisitor: java.lang.String lastSourceLineOrEmpty(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.naming.VariableNameAstVisitor: void visitDeclarationExpression(org.codehaus.groovy.ast.expr.DeclarationExpression)>",
    "<org.codenarc.rule.design.ConstantsOnlyInterfaceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateUtil$_sortRules_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor$_visitForLoop_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure11$_closure13$_closure14: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor$_extractTransients_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_getAnonymousClasses_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryOverridingMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19$_closure20: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.tool.GenerateCodeNarcRulesProperties: void main(java.lang.String[])>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21$_closure22$_closure24: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.tool.GenerateRuleSetAllRulesByCategory$_main_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarc: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.CatchIllegalMonitorStateExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: boolean isValid()>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolations_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.UnnecessaryGroovyImportRule$_applyTo_closure1: java.util.List getViolations()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.SourceCodeCriteria: boolean includesPath(java.lang.String)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToOrMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.PropertyNameAstVisitor: void visitProperty(org.codehaus.groovy.ast.PropertyNode)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3$_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.DoubleCheckedLockingAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_getAnonymousClasses_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure20: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_removeInitializedField_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertTwoViolations(java.lang.String,java.lang.Integer,java.lang.String,java.lang.Object,java.lang.Integer,java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.basic.BigDecimalInstantiationAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceAfterIfRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateMapLiteralAstVisitor: void <init>()>",
    "<org.codenarc.rule.size.MethodSizeAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.MultipleUnaryOperatorsAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.basic.EmptyInstanceInitializerAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor: boolean hasAnnotation(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.SpaceBeforeClosingBraceAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor: void resetCurrentAnnotatedNode()>",
    "<org.codenarc.results.FileResults: java.util.List getViolations()>",
    "<org.codenarc.rule.exceptions.SwallowThreadDeathAstVisitor: void visitCatchStatement(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.CodeNarc: void execute(java.lang.String[])>",
    "<org.codenarc.rule.design.CollectionReturnTracker$_expressionReturnsList_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor$_visitBlockStatement_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.InlineXmlReportWriter$_buildDescriptionElement_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processStaticImports_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasState_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.ExplicitStackInstantiationRule$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ParameterReassignmentAstVisitor: boolean isCurrentParameterName(java.lang.String)>",
    "<org.codenarc.report.HtmlReportWriter$_buildBodySection_closure1$_closure8: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor: void visitForLoop(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.results.DirectoryResults$_getViolations_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter: java.util.Map buildPackageAttributeMap(org.codenarc.results.Results)>",
    "<org.codenarc.rule.naming.ParameterNameAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsBlankLineAfterOpeningBrace_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.XmlReportWriter$_buildRulesElement_closure9$_closure19$_closure20: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.LocaleSetDefaultAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.IfStatementCouldBeTernaryAstVisitor: boolean isReturnStatementWithConstantOrLiteralValue(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.size.CyclomaticComplexityAstVisitor: org.gmetrics.metric.Metric createMetric()>",
    "<org.codenarc.rule.unused.AbstractLastStatementInBlockAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.rule.convention.StaticFieldsBeforeInstanceFieldsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.CouldBeElvisAstVisitor: void addViolationCouldBeElvis(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor: java.util.Map getMethodCallsAndMapKeys(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.junit.AssertionTrap: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.StaticFieldsBeforeInstanceFieldsAstVisitor$_visitClassComplete_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.SourceFile: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.InlineXmlReportWriter$_buildDescriptionElement_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.AbstractFinallyAstVisitor: void <init>()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryLongInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter$_writeReportToFile_closure3: org.codenarc.results.Results getResults()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarc: void main(java.lang.String[])>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor: boolean closureReturnsArray(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.util.ImportUtil$_getAllImports_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor: boolean methodReturnsCollection(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConstantExpressionExtractor$_extractFrom_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: java.lang.String getText()>",
    "<org.codenarc.tool.GenerateCodeNarcRulesProperties$_main_closure1$_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.ConsecutiveLiteralAppendsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.InterfaceNameSameAsSuperInterfaceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.TrailingWhitespaceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitStackInstantiationRule$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure15$_closure16: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_findSuperClassMethods_closure8: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.ParameterReassignmentAstVisitor: void visitMethodComplete(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure15: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.naming.ParameterNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ClassNameSameAsSuperclassAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.tool.GenerateRuleSetAllRulesByCategory: void <clinit>()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.naming.FieldNameAstVisitor: boolean isProperty(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor$_isExpressionUsedInAnnotation_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule: void addViolationForSunImport(org.codehaus.groovy.ast.ImportNode,org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.formatting.BracesForClassRule$_applyTo_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitAssertAlwaysSucceedsRule: void <init>()>",
    "<org.codenarc.rule.convention.LongLiteralWithLowerCaseLRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.FileResults: void <init>(java.lang.String,java.util.List)>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4$_closure14: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: void visitMapEntryExpression(org.codehaus.groovy.ast.expr.MapEntryExpression)>",
    "<org.codenarc.rule.exceptions.ReturnNullFromCatchBlockAstVisitor: org.codehaus.groovy.ast.stmt.Statement getLastStatement(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.rule.design.AbstractClassWithoutAbstractMethodAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_writeReport_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.util.PropertyUtil: void setPropertyFromString(java.lang.Object,java.lang.String,java.lang.String)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitTearDownCallsSuperAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.HtmlReportWriter: groovy.lang.Closure buildAllPackageSections(org.codenarc.results.Results)>",
    "<org.codenarc.rule.concurrency.StaticDateFormatFieldAstVisitor: void addDateFormatViolation(org.codehaus.groovy.ast.FieldNode,java.lang.String)>",
    "<org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundMapEntryColonAstVisitor: void handleMapExpression(org.codehaus.groovy.ast.expr.MapEntryExpression)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameRule: java.util.Set toSet(java.lang.String)>",
    "<org.codenarc.report.AbstractReportWriter$_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ForLoopShouldBeWhileLoopAstVisitor: boolean hasOnlyConditionExpr(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.rule.AbstractRuleTestCase: java.util.List applyRuleTo(java.lang.String)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_getViolations_closure1: org.codenarc.rule.AstVisitor getVisitor()>",
    "<org.codenarc.rule.formatting.LineLengthRule: boolean flagIfImport(java.lang.String)>",
    "<org.codenarc.ruleset.FilteredRuleSet$_getRules_closure1$_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.RequiredStringRule: boolean isReady()>",
    "<org.codenarc.source.AbstractSourceCode$_removeGrabTransformation_closure1$_closure3$_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.util.BaselineResultsProcessor: void <clinit>()>",
    "<org.codenarc.rule.basic.EqualsAndHashCodeAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildCSS_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void <init>()>",
    "<org.codenarc.rule.convention.MethodReturnTypeRequiredRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildReportElement_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.size.AbcMetricRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.UseCollectManyRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_collectAllPrivateFields_closure2$_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.AbstractSourceCode: java.lang.String normalizePath(java.lang.String)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitBlockStatement_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_addViolationOnMismatch_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10: org.codenarc.results.Results getResults()>",
    "<org.codenarc.util.io.DefaultResourceFactory: boolean isUrl(java.lang.String)>",
    "<org.codenarc.rule.security.JavaIoPackageAccessRule: void <init>()>",
    "<org.codenarc.rule.convention.StaticFieldsBeforeInstanceFieldsAstVisitor$_visitClassComplete_closure1: java.lang.Object doCall(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.convention.NoDefRule: void setExcludeRegex(java.lang.String)>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: void addOpeningBraceViolation(org.codehaus.groovy.ast.ASTNode,java.lang.String)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10$_closure11$_closure12: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.GroovyDslRuleSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPublicModifierAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.BaselineResultsProcessor$_addFilesWithViolations_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.SpockIgnoreRestUsedAstVisitor$_visitMethod_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.naming.PackageNameAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.SpaceAfterClosingBraceAstVisitor: void processMethodNode(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.comments.ClassJavadocRule: java.lang.String sourceCodeNameWithoutExtension(org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.security.JavaIoPackageAccessAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter$_buildPackageElements_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.grails.GrailsServletContextReferenceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_addViolationsForMultipleFieldDeclarations_closure7: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.exceptions.SwallowThreadDeathAstVisitor: void visitThrowStatement(org.codehaus.groovy.ast.stmt.ThrowStatement)>",
    "<org.codenarc.rule.dry.DuplicateStringLiteralRule: java.util.Set parseIgnoreValues()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: void <init>()>",
    "<org.codenarc.rule.imports.AbstractImportRule: int findLineNumberOfFirstClassDeclaration(org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.dry.DuplicateListLiteralAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.DuplicateCaseStatementAstVisitor$_visitSwitch_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.AssignCollectionSortAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectIncludedProperties_closure9: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.IfStatementCouldBeTernaryAstVisitor: boolean isOnlyReturnStatement(org.codehaus.groovy.ast.ASTNode)>"
  ],
  "2.2.0": [
    "<org.codenarc.tool.GenerateCodeNarcRulesProperties$_main_closure1$_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor$_visitMethodEx_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.ReportWriterFactory: org.codenarc.report.ReportWriter getReportWriter(java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure11$_closure13$_closure14: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.SynchronizedOnReentrantLockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGetterRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processImports_closure1: java.util.List getViolations()>",
    "<org.codenarc.rule.jdbc.JdbcConnectionReferenceRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.formatting.BracesForMethodAstVisitor: java.lang.String joinThrowsLines(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: java.lang.String extractPropertyName(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.AnalysisContext: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.VariableNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.CrapMetricRule: void <clinit>()>",
    "<org.codenarc.rule.grails.ClassConstraintsAndMapping$_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_writeReport_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.FilteredRuleSet: void addInclude(java.lang.String)>",
    "<org.codenarc.rule.concurrency.NestedSynchronizationAstVisitor$_visitClosureExpression_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin$_removeMatchingViolation_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.util.MultilineCommentChecker: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor: void whenOneStatementClosureFound(java.util.List,groovy.lang.Closure)>",
    "<org.codenarc.ruleset.RuleSetDelegate: org.codenarc.rule.Rule findRule(java.lang.String)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassComplete_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertyLockingAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20: java.lang.Object call(org.codenarc.rule.Rule,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryFinalOnPrivateMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: boolean isAGetterMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule: java.lang.Object this$dist$get$3(java.lang.String)>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility: void <clinit>()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_addViolationOnMismatch_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.BaselineViolation: void <init>(java.util.Map)>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfViolationsWithPriority_closure3: int getPriority()>",
    "<org.codenarc.report.AbstractReportWriter$_getSortedRules_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.StatelessClassAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.ClassConstraintsAndMapping$_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ImportUtil$_sourceLineAndNumberForStarImport_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildBodySection_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.dry.DuplicateNumberLiteralRule: void <init>()>",
    "<org.codenarc.results.FileResults: int getNumberOfViolationsWithPriority(int,boolean)>",
    "<org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.OptionalMethodParameterAstVisitor$_processParameters_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_collectAllPrivateMethods_closure2$_closure4: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.results.FileResults: java.util.List getChildren()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_writeReport_closure1$_closure8: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.JsonFileRuleSet$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_writeReport_closure1: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor: void addViolationForMultipleDeclarations(java.util.Collection)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor$_closureReturnsArray_closure2: java.lang.Boolean getReturnsArray()>",
    "<org.codenarc.rule.groovyism.UseCollectNestedAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UseAssertEqualsInsteadOfAssertTrueAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.FileResults$_getNumberOfFilesWithViolations_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.MissingBlankLineBeforeAnnotatedFieldRuleAstVisitor: boolean isComment(java.lang.String)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsNotBlankLineAfterOpeningBrace_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySelfAssignmentAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.JavadocEmptySinceTagRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_visitConstructorOrMethod_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BracesForMethodAstVisitor$_hasOpeningBraceOnSameLine_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitTestMethodWithoutAssertRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.naming.ObjectOverrideMisspelledMethodNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.AbstractClassWithoutAbstractMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.ClassReferenceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: void <init>()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildBodySection_closure2$_closure8: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.convention.VariableTypeRequiredAstVisitor$_visitDeclarationExpression_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_isAnnotatedWithOverride_closure6: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.basic.AbstractFinallyAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.BusyWaitAstVisitor: void visitForLoop(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure7$_closure8: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: boolean memoizedMethodPriv$isSingleLineClassClassNode(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.tool.GenerateRuleSetAllRulesByCategory$_main_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.FilteredRuleSet$_getRules_closure1$_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.source.SourceFile: java.lang.String toString()>",
    "<org.codenarc.source.CustomCompilerPhaseSourceDecorator: org.codenarc.analyzer.SuppressionAnalyzer getSuppressionAnalyzer()>",
    "<org.codenarc.rule.design.AssignmentToStaticFieldFromInstanceMethodAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.concurrency.SynchronizedReadObjectMethodAstVisitor: boolean isSerializable(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor$_visitMethodEx_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.AssignCollectionSortAstVisitor: boolean isChainedSort(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToXorMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildBodySection_closure1$_closure8: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckBeforeInstanceOfAstVisitor: void addViolationIfTargetsMatch(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule: org.codenarc.rule.AstVisitor getAstVisitor(org.codenarc.source.SourceCode)>",
    "<org.codenarc.report.BaselineXmlReportWriter: groovy.lang.Closure buildMessageElement(org.codenarc.rule.Violation)>",
    "<org.codenarc.util.ImportUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitSetUpCallsSuperAstVisitor$_visitMethod_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.formatting.MissingBlankLineBeforeAnnotatedFieldRuleAstVisitor: boolean annotationIsNotOnFirstLineOfClass(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllSummaryByPackageRowsRecursively_closure3$_closure13: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.size.CrapMetricRule: boolean isReady()>",
    "<org.codenarc.rule.dry.DuplicateNumberLiteralRule: void <clinit>()>",
    "<org.codenarc.rule.naming.ClassNameSameAsFilenameRule$_applyTo_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.formatting.FileEndsWithoutNewlineRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildScript_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: boolean isBrokenNullCheck(org.codehaus.groovy.ast.expr.BinaryExpression,java.lang.String,java.lang.String)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure18: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule: java.lang.Object this$dist$get$3(java.lang.String)>",
    "<org.codenarc.ruleset.TopLevelDelegate$_rule_closure1: org.codenarc.rule.Rule getRule()>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfFilesWithViolations_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceBeforeClosingBraceAstVisitor: void visitMapEntryExpression(org.codehaus.groovy.ast.expr.MapEntryExpression)>",
    "<org.codenarc.rule.convention.TernaryCouldBeElvisAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.FileCreateTempFileRule: void <init>()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_applyProperties_closure2: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.CollectionReturnTracker$_expressionReturnsList_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.CompileStaticRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.JavadocEmptyParamTagRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.WildcardPattern$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitTestMethodWithoutAssertAstVisitor: boolean hasTestAnnotationWithMember(org.codehaus.groovy.ast.ASTNode,java.lang.String)>",
    "<org.codenarc.ruleset.MovedRules$MovedToRuleSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_visitConstructorOrMethod_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryToStringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.WildcardPattern: boolean containsWildcards(java.lang.String)>",
    "<org.codenarc.rule.concurrency.DoubleCheckedLockingAstVisitor: void addViolationOnDoubleLocking(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor: boolean isIgnoredMethodName(java.lang.String)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor: void checkTypeIfNotDynamicallyTyped(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.InlineViolationsParser$ParseResult: void <init>()>",
    "<org.codenarc.rule.formatting.SpaceAroundMapEntryColonRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.LineLengthRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_findMatchingSuperClassMethod_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.DuplicateImportRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.ruleset.TopLevelDelegate: void rule(java.lang.String,groovy.lang.Closure)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_visitConstructorOrMethod_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.concurrency.StaticSimpleDateFormatFieldAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.generic.StatelessClassRule: boolean shouldIgnoreField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.imports.AbstractImportRule$_findLineNumberOfFirstClassDeclaration_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceAfterMethodDeclarationNameRuleAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter$_buildRulesElement_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30$_closure31: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.concurrency.SynchronizedMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4$_closure13$_closure15: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter$_writeSummary_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_visitClassEx_closure1: org.codehaus.groovy.ast.ClassNode getNode()>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor$_visitConstructorOrMethod_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.RuleSetDelegate$_findRule_closure2: java.lang.String getName()>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor: org.gmetrics.metric.Metric getMetric()>",
    "<org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule: java.lang.Object this$dist$get$3(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInVariableDeclarationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.LineLengthRule: boolean lineMatchesIgnoreLineRegex(java.lang.String)>",
    "<org.codenarc.ruleset.XmlFileRuleSet$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.ruleset.FilteredRuleSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: void saveMethodInfo(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.generic.IllegalClassMemberRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UseAssertTrueInsteadOfNegationAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.ruleset.GroovyDslRuleSet$_evaluateDsl_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.XmlReportWriter$_buildProjectElement_closure3: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectionCallAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: java.util.Map findSuperClassMethods(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertSingleViolation(java.lang.String,java.lang.Integer,java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainHasEqualsAstVisitor: boolean isNotInnerEnum(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.naming.VariableNameAstVisitor$_visitDeclarationExpression_closure1: org.codehaus.groovy.ast.expr.DeclarationExpression getDeclarationExpression()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToPlusMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.ConsecutiveStringConcatenationAstVisitor: void <clinit>()>",
    "<org.codenarc.source.AbstractSourceCode$_getLineNumberForCharacterIndex_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.util.GroovyVersion: boolean isGroovyVersion2()>",
    "<org.codenarc.rule.formatting.BlockEndsWithBlankLineAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToAndMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.SystemOutPrintAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.concurrency.SynchronizedOnReentrantLockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.SynchronizedOnReentrantLockAstVisitor: void visitSynchronizedStatement(org.codehaus.groovy.ast.stmt.SynchronizedStatement)>",
    "<org.codenarc.rule.basic.EqualsAndHashCodeRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ConstantIfExpressionAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.tool.GenerateCodeNarcRulesProperties: void <clinit>()>",
    "<org.codenarc.rule.naming.MethodNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBigDecimalInstantiationAstVisitor: void <init>()>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: boolean matches(java.util.regex.Pattern,java.lang.String)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToModMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor: void visitPropertyExpression(org.codehaus.groovy.ast.expr.PropertyExpression)>",
    "<org.codenarc.rule.generic.RequiredRegexRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: boolean dynamicTypedAndNotExcludedVariable(org.codehaus.groovy.ast.Variable)>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintAstVisitor$_visitMethodCallExpression_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void checkAssignmentWithinDeclaration(org.codehaus.groovy.ast.expr.BinaryExpression,java.lang.String)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToCompareToMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.TopLevelDelegate: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToCompareToMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckBeforeInstanceOfAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor: boolean hasOneStaticFieldNamedInstance(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.concurrency.SynchronizedOnGetClassAstVisitor: void visitSynchronizedStatement(org.codehaus.groovy.ast.stmt.SynchronizedStatement)>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolation_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildBodySection_closure2$_closure8: org.codenarc.results.Results getResults()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25: org.codenarc.report.SortableHtmlReportWriter$ViolationAndPath getVp()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure14: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor: void visitVariableExpression(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.ruleset.XmlFileRuleSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.PathUtil: java.lang.String normalizePath(java.lang.String)>",
    "<org.codenarc.report.InlineXmlReportWriter$_buildViolationElement_closure1: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_getMethodCallsAndMapKeys_closure5: java.util.Map getResult()>",
    "<org.codenarc.rule.convention.CouldBeElvisAstVisitor: org.codehaus.groovy.ast.expr.Expression getSingleStatementExpressionOrNull(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_writeReport_closure1$_closure8: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.util.ImportUtil: java.util.List getAllImports(org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalRule$_getViolations_closure1: java.lang.Object doCall(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer: org.codenarc.results.DirectoryResults processDirectory(java.lang.String,org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.rule.groovyism.ExplicitStackInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasOneStaticFieldOfItself_closure2: org.codehaus.groovy.ast.ClassNode getClassNode()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryConstructorAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.NestedForLoopAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToXorMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.ruleset.MovedRules$MovedToRuleSet: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.util.ModifiersUtil$_parseModifiersList_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueAstVisitor: org.codehaus.groovy.ast.expr.Expression getActualArgument(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.ruleset.RuleSetDelegate$_findRule_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.UseCollectNestedAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToDivMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryConstructorAstVisitor: boolean hasAnnotations(org.codehaus.groovy.ast.ConstructorNode)>",
    "<org.codenarc.ruleset.RuleSetDelegate: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.AbstractReportWriter: java.lang.String getHtmlDescriptionForRule(org.codenarc.rule.Rule)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: org.codehaus.groovy.ast.MethodNode findMatchingSuperClassMethod(java.lang.String,java.util.List)>",
    "<org.codenarc.rule.formatting.BracesForForLoopAstVisitor$_findLastLineOfForExpressions_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: void markVariableAsReferenced(java.lang.String,org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.rule.basic.HardcodedWindowsRootDirectoryAstVisitor: void addViolationForWindowsPath(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.groovyism.UseCollectNestedAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.basic.EmptySwitchStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterNotOperatorRuleAstVisitor: boolean isFollowedByWhitespace(org.codehaus.groovy.ast.expr.NotExpression)>",
    "<org.codenarc.rule.junit.JUnitFailWithoutMessageRule: void <init>()>",
    "<org.codenarc.rule.basic.AssignmentInConditionalRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.AssignmentToStaticFieldFromInstanceMethodAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: org.codehaus.groovy.ast.ModuleNode getAst()>",
    "<org.codenarc.rule.basic.EmptyInstanceInitializerAstVisitor: void visitObjectInitializerStatements(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasOneStaticFieldNamedInstance_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.AbstractFinallyAstVisitor$_isStatementWithinFinally_closure1: org.codehaus.groovy.ast.stmt.Statement getStatement()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.FieldReferenceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_visitConstructorOrMethod_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12$_closure15: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.basic.EmptyTryBlockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults$_removeViolation_closure2: org.codenarc.rule.Violation getV()>",
    "<org.codenarc.rule.generic.StatelessClassAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: void beforeBlock()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21$_closure22: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.BuilderMethodWithSideEffectsAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: void checkIfThereIsBlankLineAfterOpeningBrace(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.convention.IfStatementCouldBeTernaryAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.NonFinalSubclassOfSensitiveInterfaceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.InlineViolationsParser: void <init>()>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin$_removeMatchingViolation_closure2: org.codenarc.report.BaselineViolation getBaselineViolation()>",
    "<org.codenarc.rule.serialization.SerialPersistentFieldsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementAstVisitor$_allBranchesReturn_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21$_closure23: org.codenarc.rule.Rule getRule()>",
    "<org.codenarc.rule.junit.UseAssertNullInsteadOfAssertEqualsRule: void <init>()>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin: void processReports(java.util.List)>",
    "<org.codenarc.rule.junit.ChainedTestAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.source.CustomCompilerPhaseSourceDecorator: java.lang.String getName()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_visitClassEx_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.JsonReportWriter$_buildFileElement_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.comments.AbstractJavadocEmptyTagRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: java.util.List allExceptLastElement(java.util.List)>",
    "<org.codenarc.ruleset.TopLevelDelegate$_rule_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.BaselineViolation: int hashCode()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToPutAtMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyWhileStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter: groovy.lang.Closure buildFileElement(org.codenarc.results.FileResults)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckAstVisitor: boolean isNullCheckAgainstThisReference(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.InlineViolationsParser$_parseLine_closure1: int getLineNumber()>",
    "<org.codenarc.rule.comments.JavadocEmptyLastLineRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitMapExpression_closure5: org.codehaus.groovy.ast.expr.MapExpression getMapExpression()>",
    "<org.codenarc.rule.design.CloneWithoutCloneableAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.convention.NoFloatRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ConstantsOnlyInterfaceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitPublicNonTestMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ParameterNameAstVisitor$_processParameters_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.DeadCodeAstVisitor$_visitBlockStatement_closure1: org.codehaus.groovy.ast.stmt.BlockStatement getBlock()>",
    "<org.codenarc.report.XmlReportWriter$_buildSourceLineElement_closure7: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ConstantsOnlyInterfaceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.AbstractClassWithPublicConstructorAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.TextReportWriter$_writeSummary_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.source.CustomCompilerPhaseSourceDecorator: java.lang.String getPath()>",
    "<org.codenarc.rule.basic.AssignmentInConditionalAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor: void visitConstantExpression(org.codehaus.groovy.ast.expr.ConstantExpression)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure18: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitUnnecessarySetUpAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: java.lang.Number isPrivate(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.dry.DuplicateNumberLiteralRule: java.util.Set parseIgnoreValues()>",
    "<org.codenarc.report.HtmlReportWriter$_buildBodySection_closure1$_closure8: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_visitConstructorOrMethod_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.imports.UnusedImportRule: boolean isImportStatementForAlias(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.formatting.SpaceAfterMethodCallNameRuleAstVisitor: boolean hasSingleLambdaArgument(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToDivMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor: void <init>()>",
    "<org.codenarc.rule.basic.DuplicateSetValueAstVisitor: void addViolationForDuplicate(org.codehaus.groovy.ast.expr.ConstantExpression)>",
    "<org.codenarc.report.XmlReportWriter$_buildProjectElement_closure3$_closure11$_closure12: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.imports.UnusedImportRule: int countUsage(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.exceptions.ExceptionExtendsErrorRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildHeaderSection_closure4$_closure10: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.ruleset.FilteredRuleSet$_getRules_closure1$_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.JUnitUtil$_isTestMethod_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27: java.lang.Object doCall(org.codenarc.rule.Violation)>",
    "<org.codenarc.ruleset.FilteredRuleSet: void addExclude(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonRule: boolean endsWithSemicolon(java.lang.String,int)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonAstVisitor$_removeAnyViolationsForSameLine_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3$_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.NoJavaUtilDateAstVisitor$_visitImports_closure1: java.lang.Object doCall(org.codehaus.groovy.ast.ImportNode)>",
    "<org.codenarc.rule.InlineViolationsParser: java.lang.String inlineViolation(java.lang.String)>",
    "<org.codenarc.rule.junit.UnnecessaryFailAstVisitor: void visitCatchStatement(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.rule.groovyism.AssignCollectionUniqueAstVisitor: void visitDeclarationExpression(org.codehaus.groovy.ast.expr.DeclarationExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInFieldDeclarationAstVisitor: boolean contains(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.InlineViolationsParser: void parseLine(java.lang.String,int)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBooleanExpressionAstVisitor: void visitNotExpression(org.codehaus.groovy.ast.expr.NotExpression)>",
    "<org.codenarc.rule.formatting.BracesForClassRule: void applyToClassNode(org.codehaus.groovy.ast.ClassNode,int,java.lang.String,java.util.List)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_getMethodCallsAndMapKeys_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.tool.GenerateUtil$_sortRules_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.UseAssertTrueInsteadOfNegationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateMapLiteralAstVisitor$_visitMapExpression_closure1: org.codehaus.groovy.ast.expr.MapExpression getExpression()>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor$_processParameters_closure1: java.lang.String getMethodName()>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor: java.lang.String extractMethodName(java.lang.Object)>",
    "<org.codenarc.tool.GenerateRuleIndexPages$_main_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryObjectReferencesAstVisitor$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.AstUtil: boolean classNodeImplementsType(org.codehaus.groovy.ast.ClassNode,java.lang.Class)>",
    "<org.codenarc.rule.exceptions.SwallowThreadDeathRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCatchBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.plugin.disablerules.LookupTable: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.UnusedImportRule$_findReference_closure3: java.lang.String getAlias()>",
    "<org.codenarc.rule.generic.IllegalStringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_getAnonymousClasses_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.AbstractClassWithoutAbstractMethodAstVisitor: boolean skipSuperClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.design.PublicInstanceFieldAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor: void addViolation(org.gmetrics.result.MetricResult,java.lang.String)>",
    "<org.codenarc.rule.concurrency.SynchronizedReadObjectMethodAstVisitor: boolean isSynchronizedBlock(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.concurrency.SynchronizedOnStringAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceAstVisitor: void processMethodNode(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.dry.DuplicateMapLiteralAstVisitor$_visitMapExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitListExpression_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateRuleIndexPages$_main_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.comments.ClassJavadocRule$_applyTo_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_visitConstructorOrMethod_closure3: org.codehaus.groovy.ast.MethodNode getNode()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor$_addViolationsForInstanceFields_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildProjectElement_closure3$_closure11: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.exceptions.ExceptionNotThrownAstVisitor: boolean isLastStatementAnExceptionConstructorCall(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBooleanInstantiationAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.design.OptionalFieldAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_getAnonymousClasses_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.braces.IfStatementBracesRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.FileResults$_getNumberOfFilesWithViolations_closure2: int getMaxPriority()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure2: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule: java.util.List getViolations(org.codenarc.rule.AstVisitor,org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.basic.IntegerGetIntegerAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.UnsafeImplementationAsMapRule: void <init>()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_findMatchingSuperClassMethod_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_generateAllPossibleParameterSignatures_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor: void addViolationWithMessage(org.codehaus.groovy.ast.expr.MethodCallExpression,org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_visitConstructorOrMethod_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.AbstractImportRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.CommentsUtil: boolean hasTextOnNextLine(org.codenarc.source.SourceCode,int)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.ruleset.MovedRules$MovedToRuleSet: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor: boolean hibernateWouldCreateColumnFor(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.formatting.LineLengthRule: boolean sourceViolatesLineLengthRule(java.lang.String)>",
    "<org.codenarc.rule.basic.EmptyWhileStatementAstVisitor: void visitWhileLoop(org.codehaus.groovy.ast.stmt.WhileStatement)>",
    "<org.codenarc.rule.formatting.BracesForMethodAstVisitor$_hasOpeningBraceOnSameLine_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.ExceptionNotThrownAstVisitor: org.codehaus.groovy.ast.stmt.Statement getLastStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure15$_closure16: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitTearDownCallsSuperRule: void <init>()>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor$_visitCatchStatement_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateListLiteralAstVisitor$_visitListExpression_closure1: org.codehaus.groovy.ast.expr.ListExpression getExpression()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_visitMethodEx_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule$_addOrderingViolations_closure1: java.lang.String getEarlyPattern()>",
    "<org.codenarc.CodeNarcRunner$_applyPluginsProcessViolationsForFile_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ant.CodeNarcTask: void execute()>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_applyTo_closure2: java.util.List getViolations()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryConstructorAstVisitor: boolean isEmptyOrJustCallsSuper(org.codehaus.groovy.ast.ConstructorNode)>",
    "<org.codenarc.CodeNarcRunner$_applyPluginsProcessViolationsForAllFiles_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.CodeNarc$_execute_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToOrMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.imports.UnnecessaryGroovyImportRule$_applyTo_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToPutAtMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule: void this$dist$set$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.basic.BitwiseOperatorInConditionalAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ParameterReassignmentAstVisitor: boolean isReassigningAParameter(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.analyzer.AnalyzerException: void <init>(java.lang.Throwable)>",
    "<org.codenarc.rule.concurrency.DoubleCheckedLockingRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.PublicFinalizeMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_generateAllPossibleParameterSignatures_closure4: org.codehaus.groovy.ast.MethodNode getMethodNode()>",
    "<org.codenarc.results.FileResults: int getNumberOfFilesWithViolations(int,boolean)>",
    "<org.codenarc.rule.basic.AssertWithinFinallyBlockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BlockStartsWithBlankLineAstVisitor: void checkForViolations(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.junit.JUnitAssertAlwaysFailsRule: void <init>()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToDivMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsServletContextReferenceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.RuleSetUtil$_loadRuleScriptFile_closure1: java.lang.Class getRuleClass()>",
    "<org.codenarc.rule.groovyism.UseCollectNestedAstVisitor: void checkForCallToClosureParameter(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.SpaceAroundMapEntryColonAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: boolean isNotOpeningSquareBracket(java.lang.String,int)>",
    "<org.codenarc.rule.formatting.SpaceAfterIfAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.SpockIgnoreRestUsedAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.CodeNarcRunner$_writeReports_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildReportElement_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor: void extractTransients(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.imports.UnusedImportRule$_findReference_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.BlockStartsWithBlankLineAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor$_visitConstantExpression_closure1: org.codehaus.groovy.ast.expr.ConstantExpression getExpression()>",
    "<org.codenarc.util.ImportUtil$_sortImportsByLineNumber_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor: void visitCastExpression(org.codehaus.groovy.ast.expr.CastExpression)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19$_closure20: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsRule: void <init>()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryParenthesesForMethodCallWithClosureAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor: boolean isNotIgnoredMethodParameterName(org.codehaus.groovy.ast.Parameter)>",
    "<org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter: groovy.lang.Closure buildFileElement(org.codenarc.results.FileResults)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor$_isUsedInAnyAnnotationOnCurrentAnnotatedNode_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ConsecutiveUtils: boolean areJoinableConstants(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.design.CollectionReturnTracker$_expressionReturnsList_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_getMethodCallsAndMapKeys_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildViolationElement_closure6$_closure15: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor: boolean isIgnoredOneElementList(org.codehaus.groovy.ast.expr.ListExpression)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassEx_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14$_closure15: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10$_closure11: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.CompileStaticlVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.GroovyDslRuleSet$_evaluateDsl_closure2: groovy.lang.GroovyShell getShell()>",
    "<org.codenarc.util.PropertyUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.AssignmentToStaticFieldFromInstanceMethodAstVisitor: void <init>()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure7$_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.MovedRules: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor$_visitMethodCallExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.FieldReferenceAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unused.AbstractLastStatementInBlockAstVisitor: void <init>()>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure18: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceInsideParenthesesAstVisitor: boolean hasSpaceAfterOpeningParenthesis(java.lang.String)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.concurrency.ThreadLocalNotStaticFinalAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.InsecureRandomRule: void <init>()>",
    "<org.codenarc.rule.AbstractRuleTestCase: void testThatInvalidCodeHasNoViolations()>",
    "<org.codenarc.rule.junit.UseAssertFalseInsteadOfNegationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor: boolean doesExtendClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.jdbc.JdbcStatementReferenceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor: void visitClassComplete(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.convention.MethodReturnTypeRequiredAstVisitor: boolean isNotIgnoredMethodName(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor: boolean isUsedInAnyAnnotationOnCurrentAnnotatedNode(org.codehaus.groovy.ast.expr.ConstantExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationAstVisitor$_visitConstructorCallExpression_closure1: java.lang.Object doCall(java.lang.Class)>",
    "<org.codenarc.rule.concurrency.SynchronizedOnStringAstVisitor: void visitSynchronizedStatement(org.codehaus.groovy.ast.stmt.SynchronizedStatement)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_setupFlexibleIndentForAnyClosureParameterBlocks_closure6: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.LocaleSetDefaultAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfFilesWithViolations_closure4: int getMaxPriority()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void visitSwitch(org.codehaus.groovy.ast.stmt.SwitchStatement)>",
    "<org.codenarc.rule.naming.ParameterNameRule: void validate()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCallToSubstringAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.naming.InterfaceNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryModOneAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.size.NestedBlockDepthRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.junit.UseAssertTrueInsteadOfNegationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor: void addViolationsForMultipleFieldDeclarations(java.util.Collection)>",
    "<org.codenarc.report.JsonReportWriter$_buildPackageElements_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.SynchronizedMethodAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.serialization.EnumCustomSerializationIgnoredRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.size.MethodCountAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleregistry.RuleRegistryInitializer: void initializeRuleRegistry()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToRightShiftMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor: void processParameters(org.codehaus.groovy.ast.Parameter[],java.lang.String)>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: java.lang.String line(int)>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor$_visitForLoop_closure2: org.codehaus.groovy.ast.stmt.ForStatement getForLoop()>",
    "<org.codenarc.ruleset.CompositeRuleSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.CollectAllIsDeprecatedAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.design.AbstractClassWithPublicConstructorAstVisitor$_visitClassEx_closure1: org.codehaus.groovy.ast.ClassNode getNode()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementAstVisitor: boolean isValidElseBlock(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor$_hasTrailingComma_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.naming.VariableNameAstVisitor$_visitDeclarationExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ThrowExceptionFromFinallyBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.MissingBlankLineAfterPackageRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.naming.FactoryMethodNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor$_visitMethodCallExpression_closure2: org.codehaus.groovy.ast.expr.MethodCallExpression getExpression()>",
    "<org.codenarc.CodeNarc$_parseArgs_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateNumberLiteralRule$_defineAdditionalChecksClosure_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.naming.AbstractClassNameRule: boolean isReady()>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor: void <init>(java.util.List,java.util.Set,groovy.lang.Closure)>",
    "<org.codenarc.rule.dry.DuplicateMapLiteralAstVisitor: void visitMapExpression(org.codehaus.groovy.ast.expr.MapExpression)>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.basic.EmptyCatchBlockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_collectAllPrivateMethods_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.JUnitPublicPropertyRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryToStringAstVisitor$_visitGStringExpression_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildBodySection_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.NestedForLoopAstVisitor: void <init>()>",
    "<org.codenarc.source.SourceFile: void <init>(java.io.File)>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_collectAllPrivateFields_closure2$_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: boolean isNotExpressionWithPropertyAccessForName(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure11$_closure13: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.CustomCompilerPhaseSourceDecorator: java.lang.String getText()>",
    "<org.codenarc.report.JsonReportWriter: void writeReport(java.io.Writer,org.codenarc.AnalysisContext,org.codenarc.results.Results)>",
    "<org.codenarc.util.io.ClassPathResource: java.io.InputStream getInputStream()>",
    "<org.codenarc.rule.generic.IllegalClassReferenceRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.design.CloneWithoutCloneableRule: void <init>()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_visitMethodEx_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.report.TextReportWriter: void writeFileViolations(java.io.Writer,org.codenarc.results.FileResults)>",
    "<org.codenarc.rule.basic.DuplicateSetValueAstVisitor: void visitCastExpression(org.codehaus.groovy.ast.expr.CastExpression)>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterAstVisitor: void <init>()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationToGetClassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: java.lang.Boolean memoizedMethodPriv$isSingleLineClassClassNode(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryModOneRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor: boolean isEmpty(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.serialization.SerialVersionUIDAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_visitClosureExpression_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure13: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.InterfaceNameSameAsSuperInterfaceAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter: java.lang.Object this$dist$get$3(java.lang.String)>",
    "<org.codenarc.rule.formatting.BlankLineBeforePackageRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor: boolean isFloatTypeName(java.lang.String)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_writeReport_closure1$_closure8: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.JUnitUtil$_isAssertCallWithNonNullConstantValue_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.dry.DuplicateStringLiteralRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.serialization.SerialPersistentFieldsAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.dry.DuplicateListLiteralAstVisitor$_visitListExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceAfterClosingBraceAstVisitor: boolean isNotAllowedCharacterAfterClass(java.lang.String,int)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_getFirstValue_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter: groovy.lang.Closure buildViolationElement(org.codenarc.rule.Violation)>",
    "<org.codenarc.report.XmlReportWriter$_buildFileElement_closure5$_closure16: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor: java.util.List getAnonymousClasses()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementAstVisitor$_visitIfElse_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterCodeVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure26: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ant.CodeNarcTask: org.codenarc.analyzer.SourceAnalyzer createSourceAnalyzer()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckAstVisitor: boolean isNotNullCheckAgainstThisReference(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.formatting.AbstractSpaceAroundBraceAstVisitor: int indexOfClosingBrace(java.lang.String,int)>",
    "<org.codenarc.rule.junit.CoupledTestCaseAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.exceptions.CatchExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.UnsafeImplementationAsMapAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.BuilderMethodWithSideEffectsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ImplementationAsTypeRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryObjectReferencesAstVisitor$_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToPlusMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.report.XmlReportWriter$_buildRulesElement_closure9$_closure19: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.TernaryCouldBeElvisAstVisitor: boolean areTheSame(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor: void <init>(java.util.List,java.util.Set)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure15: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalClassMemberAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_printRuleProcessingTimes_closure6: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: boolean isOwnedByClassOrItsOuterClass(org.codehaus.groovy.ast.FieldNode,org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.dry.DuplicateListLiteralAstVisitor: void visitListExpression(org.codehaus.groovy.ast.expr.ListExpression)>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_getViolations_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.CouldBeSwitchStatementAstVisitor: java.lang.Boolean isSameLeftExpressionAsPreviousIfStatement(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsNotBlankLineAfterOpeningBrace_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.ComparisonWithSelfAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.dry.DuplicateStringLiteralRule$_defineAdditionalChecksClosure_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor$_visitMethodCallExpression_closure2: org.codehaus.groovy.ast.expr.MethodCallExpression getCall()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor$_expressionContainsBannedCharacters_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_visitMethodEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainWithServiceReferenceRule: void <init>()>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer$_processDirectory_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter$_buildPackageElements_closure1: java.util.Map getPackageItem()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor$_closureReturnsCollection_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter: java.util.List buildPackageElements(org.codenarc.results.Results)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_writeReport_closure1$_closure8: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.concurrency.ThreadYieldAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor$_visitCatchStatement_closure2: java.util.List getLoggerNames()>",
    "<org.codenarc.tool.GenerateCodeNarcRulesProperties$_main_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectMapKeys_closure6: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.comments.JavadocEmptyVersionTagRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule$_applyTo_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ParameterCountAstVisitor: java.lang.String getName(org.codehaus.groovy.ast.ConstructorNode)>",
    "<org.codenarc.rule.security.UnsafeImplementationAsMapAstVisitor: java.util.List getMethodsImplementedByCoercion(org.codehaus.groovy.ast.expr.MapExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInMethodDeclarationAstVisitor: boolean contains(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor: boolean closureReturnsCollection(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.basic.EmptyInstanceInitializerRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void processTernaryExpression(org.codehaus.groovy.ast.expr.TernaryExpression)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectMapKeys_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.AbstractJavadocMissingDescriptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner$_applyPluginsProcessViolationsForFile_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.StaticConnectionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3$_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14$_closure16: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitCatchStatement_closure3: org.codehaus.groovy.ast.stmt.CatchStatement getStatement()>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor: org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility getVisibility(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_recordMethodColumnAndSourceLineForClosureBlocks_closure7: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.basic.AbstractFinallyAstVisitor: void visitTryCatchFinally(org.codehaus.groovy.ast.stmt.TryCatchStatement)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitMapExpression_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor: void <init>()>",
    "<org.codenarc.rule.generic.IllegalClassReferenceRule: void <init>()>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInMethodDeclarationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.IntegerGetIntegerRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.OptionalMethodParameterAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor$_extractTransients_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.source.AbstractSourceCode$_removeGrabTransformation_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor$_isNamedArgumentsListContainingThis_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.report.XmlReportWriter$_buildFileElement_closure5$_closure16: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure26: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.formatting.AbstractSpaceAroundBraceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter: java.util.Map buildProjectElement(org.codenarc.AnalysisContext)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.jdbc.JdbcStatementReferenceRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.jdbc.JdbcConnectionReferenceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.FieldNameAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildViolationElement_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfFilesWithViolations_closure4: boolean getRecursive()>",
    "<org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule: java.lang.Object this$dist$invoke$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.generic.IllegalClassReferenceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.PrintlnAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor: boolean hasTrailingComma(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.report.CompactTextReportWriter$_writeFileViolations_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.JsonFileRuleSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.RuleSetDelegate$_findRule_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: boolean isCharacterPrecedingClosureInvalid(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.dry.DuplicateStringLiteralRule: void <init>()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_flexibleCheckForCorrectColumn_closure11: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.ClassReferenceAstVisitor: void checkNodeType(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.CommentsUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.ruleset.ListRuleSet: void <init>(java.util.List)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckAstVisitor: void visitBooleanExpression(org.codehaus.groovy.ast.expr.BooleanExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCastAstVisitor: boolean isUnnecessaryCast(org.codehaus.groovy.ast.expr.CastExpression)>",
    "<org.codenarc.report.AbstractReportWriter: java.lang.String getCodeNarcVersion()>",
    "<org.codenarc.ruleset.JsonReaderRuleSet: void <init>(java.io.Reader)>",
    "<org.codenarc.rule.security.UnsafeArrayDeclarationAstVisitor: boolean isArray(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDotClassAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_collectAllPrivateMethods_closure2$_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCatchBlockAstVisitor$_visitTryCatchFinally_closure1: java.lang.Object doCall(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.rule.junit.JUnitUtil$_isTestMethod_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin$_processViolationsForFile_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintAstVisitor: void <init>()>",
    "<org.codenarc.rule.generic.RequiredRegexRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.junit.UseAssertTrueInsteadOfAssertEqualsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitPublicPropertyRule: void <init>()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule: void this$dist$set$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean isTrueExpression(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure6: org.codenarc.results.FileResults getResults()>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19$_closure21: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectIncludedProperties_closure7: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.tool.GenerateRuleSetAllRules: void <clinit>()>",
    "<org.codenarc.ruleset.ListRuleSet$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.DuplicateMapKeyAstVisitor$_visitMapExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PublicInstanceFieldAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.plugin.disablerules.LookupTable: void <init>(java.lang.String)>",
    "<org.codenarc.rule.basic.RemoveAllOnSelfAstVisitor: boolean isMethodNamed(org.codehaus.groovy.ast.expr.MethodCallExpression,java.lang.String)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertyLockingAstVisitor: void addViolationOnMismatch(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.design.InstanceofRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.JsonFileRuleSet$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.StringSourceAnalyzer: void <init>(java.lang.String)>",
    "<org.codenarc.util.SourceCodeUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule$_applyTo_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceAfterWhileAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.SystemOutPrintRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.formatting.BracesForForLoopAstVisitor$_findLastLineOfForExpressions_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.MissingNewInThrowStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionAstVisitor: boolean hasJUnit4Annotation(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.ruleset.MovedRules$MovedToRuleSet: java.lang.String messageFor(java.lang.String)>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule$_applyTo_closure1: java.util.List getViolations()>",
    "<org.codenarc.report.IdeTextReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.ExceptionExtendsThrowableAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.grails.ClassConstraintsAndMapping$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_processMethodOrConstructorCall_closure3: org.codehaus.groovy.ast.expr.MethodCall getCall()>",
    "<org.codenarc.rule.size.ClassSizeAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.InlineViolationsParser$ParseResult: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer: void printRuleProcessingTimes()>",
    "<org.codenarc.rule.convention.ImplicitReturnStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.WaitOutsideOfWhileLoopAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationAstVisitor$_visitConstructorCallExpression_closure1: org.codehaus.groovy.ast.expr.ConstructorCallExpression getCall()>",
    "<org.codenarc.rule.formatting.BracesForClassRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.naming.VariableNameRule: void <init>()>",
    "<org.codenarc.rule.logging.LoggerWithWrongModifiersRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter$_buildPackageElements_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.jdbc.DirectConnectionManagementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalClassMemberRule: void <init>()>",
    "<org.codenarc.rule.basic.ParameterAssignmentInFilterClosureAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalClassMemberAstVisitor: boolean matchesIgnoreMethodsWithAnnotationNames(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.design.AbstractClassWithPublicConstructorAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateUtil$_createSortedListOfAllRules_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceAfterMethodCallNameRuleAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_getAnonymousClasses_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24: java.lang.Object doCall(org.codenarc.report.SortableHtmlReportWriter$ViolationAndPath)>",
    "<org.codenarc.rule.design.CloneableWithoutCloneRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: void visitClassComplete(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.ClassReferenceAstVisitor: java.lang.String formatViolationMessage(java.lang.String)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure15: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.BracesForForLoopAstVisitor$_findLastLineOfForExpressions_closure1: java.lang.Integer getLoopExpressionLastLine()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure25: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.braces.WhileStatementBracesRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer: boolean matches(org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.InlineViolationsParser: java.util.Map createViolation(int,java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.concurrency.StaticMatcherFieldAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolations_closure3$_closure6: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToModMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_addViolationOnMismatch_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.BigDecimalInstantiationAstVisitor: boolean isConstructorCallAViolation(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceRule: boolean isReady()>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertSingleViolation(java.lang.String,groovy.lang.Closure)>",
    "<org.codenarc.rule.junit.UseAssertTrueInsteadOfAssertEqualsAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor: boolean isClosureParameterOutsideParentheses(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectIncludedProperties_closure8: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet: void <clinit>()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor: java.util.Set collectIncludedProperties(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.CollectAllIsDeprecatedAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor: void addViolationIfDuplicate(org.codehaus.groovy.ast.expr.Expression,boolean)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBigIntegerInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UseAssertTrueInsteadOfAssertEqualsRule: void <init>()>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsRule: void <clinit>()>",
    "<org.codenarc.CodeNarcRunner: org.codenarc.ruleset.RuleSet buildRuleSet()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_getFileResults_closure4: java.util.List getFileResults()>",
    "<org.codenarc.rule.concurrency.StaticCalendarFieldAstVisitor: boolean isCalendarFactoryMethodCall(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.naming.FieldNameAstVisitor: boolean isIgnoredPropertyName(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.size.MethodCountRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DryUtil: boolean haveTheSameConstantOrLiteralValue(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterAstVisitor$_hasItParameter_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.serialization.SerializableClassMustDefineSerialVersionUIDAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4: boolean getAllPackages()>",
    "<org.codenarc.rule.design.BooleanMethodReturnsNullAstVisitor: boolean codeReturnsBoolean(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.comments.ClassJavadocRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.naming.MethodNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter: java.util.Map buildReportElement()>",
    "<org.codenarc.ruleset.JsonFileRuleSet: void <init>(java.lang.String)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_getFirstValue_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueAstVisitor: boolean isConvertibleToDouble(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectionCallAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure5$_closure13: org.codenarc.results.FileResults getResults()>",
    "<org.codenarc.rule.junit.SpockIgnoreRestUsedAstVisitor$_visitMethod_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildRulesElement_closure9$_closure19: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCallToSubstringAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.ChainedTestRule: void <init>()>",
    "<org.codenarc.rule.exceptions.ThrowThrowableRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitListExpression_closure4: org.codehaus.groovy.ast.expr.ListExpression getListExpression()>",
    "<org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule$1: void <init>(org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule,java.lang.Object)>",
    "<org.codenarc.rule.concurrency.SynchronizedReadObjectMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: boolean isNotAutoBoxed(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.ruleset.MovedRules$MovedToRuleSet: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure19: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_findSuperClassMethods_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsNotBlankLineAfterOpeningBrace_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBooleanExpressionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor: void <init>(java.util.Map,java.util.List)>",
    "<org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildBodySection_closure2$_closure8: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.CloseWithoutCloseableRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor$_visitMethodEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule$1: void <init>(org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule,java.lang.Object)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void visitConstructor(org.codehaus.groovy.ast.ConstructorNode)>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitTearDownCallsSuperAstVisitor$_visitMethod_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: void <init>()>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterAstVisitor: boolean hasItParameter(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.junit.UseAssertNullInsteadOfAssertEqualsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterNotOperatorRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.CyclomaticComplexityAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule$_addOrderingViolations_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.FilteredRuleSet$_getRules_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.XmlReportWriter$_buildMessageElement_closure8: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4$_closure13: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.FilteredRuleSet: void <init>(org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitClosureExpression_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.ArrayReturnTracker: void callBackForArrayReturns(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_writeReport_closure1$_closure8: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility: org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility $INIT(java.lang.Object[])>",
    "<org.codenarc.rule.formatting.BracesForTryCatchFinallyAstVisitor: void visitTryCatchFinally(org.codehaus.groovy.ast.stmt.TryCatchStatement)>",
    "<org.codenarc.CodeNarcRunner$_createInitialRuleSetFromFiles_closure6: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySubstringAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_writeReport_closure1: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin$_processViolationsForFile_closure1: org.codenarc.plugin.FileViolations getFileViolations()>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryTearDownAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.ConstructorsSkippingFieldReferenceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner$_createInitialRuleSetFromFiles_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.AbstractSourceCode: int getAstCompilerPhase()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_getAnonymousClasses_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.generic.StatelessClassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.VariableNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIntegerInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.PackageNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.CrapMetricAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void checkForCorrectColumn(org.codehaus.groovy.ast.ASTNode,java.lang.String,int)>",
    "<org.codenarc.rule.formatting.BlockStartsWithBlankLineAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule$_applyTo_closure1: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.formatting.BracesForTryCatchFinallyAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectIncludedProperties_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.UnsafeArrayDeclarationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor$_visitMethodCallExpression_closure1: org.codehaus.groovy.ast.expr.MethodCallExpression getCall()>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor$_visitConstructorOrMethod_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.plugin.disablerules.LookupTable: java.util.Set disabledRuleNamesForLineNumber(java.lang.Integer)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule: java.lang.Object this$dist$get$3(java.lang.String)>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor$_visitCastExpression_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUnnecessarySetUpAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildMessageElement_closure7: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.LocaleSetDefaultRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter: java.lang.String getViolationLocationString(org.codenarc.rule.Violation,java.lang.String)>",
    "<org.codenarc.rule.design.BooleanMethodReturnsNullAstVisitor: boolean closureReturnsBoolean(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertyLockingRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitImports_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor$_visitMethodEx_closure2: org.codehaus.groovy.ast.MethodNode getNode()>",
    "<org.codenarc.rule.formatting.SpaceAfterForRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure4$_closure12: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.AbstractClassWithPublicConstructorAstVisitor$_visitClassEx_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.results.FileResults$_getNumberOfViolationsWithPriority_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.grails.GrailsDomainCantReferenceServiceAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.exceptions.ThrowExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure20: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.ruleset.JsonReaderRuleSet: void setRuleProperties(java.util.Map,org.codenarc.rule.Rule)>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin$_processViolationsForFile_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildLogo_closure6: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void handleNestedNode(org.codehaus.groovy.ast.ASTNode,groovy.lang.Closure)>",
    "<org.codenarc.rule.concurrency.SynchronizedOnBoxedPrimitiveRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildFileElement_closure5$_closure16$_closure17: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDuplicateMappingAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.report.XmlReportWriter$_buildViolationElement_closure6: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: java.lang.Boolean isSingleLineClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateListLiteralRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_getFirstValue_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.CoupledTestCaseAstVisitor: boolean isMethodCallOnSameClass(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule: java.util.List getViolations(org.codenarc.rule.AstVisitor,org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor: java.lang.Object this$dist$get$4(java.lang.String)>",
    "<org.codenarc.rule.convention.NoJavaUtilDateAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitClosureExpression_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter: groovy.lang.Closure buildSummaryByPackage(org.codenarc.results.Results)>",
    "<org.codenarc.rule.InlineViolationsParser: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.exceptions.ReturnNullFromCatchBlockAstVisitor: void visitCatchStatement(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.rule.NullReturnTracker: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildProjectElement_closure3: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.ant.CodeNarcTask$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.CompositeRuleSet: void addRule(org.codenarc.rule.Rule)>",
    "<org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_writeReport_closure1$_closure10: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule: void this$dist$set$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BracesForForLoopRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_applyTo_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner: org.codenarc.ruleset.RuleSet createInitialRuleSet()>",
    "<org.codenarc.rule.size.AbcMetricAstVisitor: org.gmetrics.metric.Metric createMetric()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.EmptyMethodInAbstractClassAstVisitor: boolean isAbstract(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitClassComplete_closure5: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.concurrency.StaticMatcherFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UseAssertEqualsInsteadOfAssertTrueRule: void <init>()>",
    "<org.codenarc.rule.concurrency.StaticSimpleDateFormatFieldAstVisitor: void addSimpleDateFormatViolation(org.codehaus.groovy.ast.FieldNode,java.lang.String)>",
    "<org.codenarc.rule.basic.HardcodedWindowsRootDirectoryAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ClassNameSameAsFilenameRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.naming.ObjectOverrideMisspelledMethodNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolations_closure3$_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildRulesElement_closure9$_closure19$_closure20$_closure21: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasOneStaticFieldOfItself_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule$_applyTo_closure2: java.util.List getViolations()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: boolean isIgnoredVariable(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.util.io.ClassPathResource: void <init>(java.lang.String)>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildLogo_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitSetUpCallsSuperAstVisitor$_visitMethod_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner$_applyPluginsProcessRules_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildCSS_closure2$_closure9: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.JsonReaderRuleSet$_loadRuleElements_closure1: java.lang.Object doCall(java.lang.String,java.util.Map)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_addInitializedField_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.exceptions.CatchNullPointerExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportParser: java.util.Map parseBaselineXmlReport(java.io.InputStream)>",
    "<org.codenarc.rule.naming.InterfaceNameAstVisitor: boolean shouldVisit(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.SpaceInsideParenthesesAstVisitor: void visitClassComplete(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.ObjectFinalizeAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.convention.PublicMethodsBeforeNonPublicMethodsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_collectAllPrivateMethods_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor$_checkMethods_closure1: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedVariableRule: java.util.List getAnonymousClasses(java.util.List)>",
    "<org.codenarc.rule.FieldReferenceAstVisitor$_visitMethodEx_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.convention.ParameterReassignmentRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.braces.ForStatementBracesRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter$_buildRulesElement_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.StaticSimpleDateFormatFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor$_visitForLoop_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor$_isEmpty_closure1$_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BlockStartsWithBlankLineAstVisitor: void addViolation(int)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasState_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.CloneWithoutCloneableAstVisitor: org.codehaus.groovy.ast.MethodNode cloneMethod(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.convention.ParameterReassignmentAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.source.AbstractSourceCode: boolean isValid()>",
    "<org.codenarc.rule.logging.SystemErrPrintAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.plugin.disablerules.DisableRulesInCommentsPlugin$_processViolationsForFile_closure1: org.codenarc.plugin.disablerules.LookupTable getLookupTable()>",
    "<org.codenarc.rule.basic.EmptySynchronizedStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.AbstractFinallyAstVisitor$_isStatementWithinFinally_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertTwoViolations_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ClassNameSameAsSuperclassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.AbstractReportWriter: java.lang.String getDescriptionProperty(org.codenarc.rule.Rule)>",
    "<org.codenarc.rule.size.MethodCountAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.logging.LoggerForDifferentClassAstVisitor: boolean isCapitalized(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryReturnKeywordRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportUtil: java.lang.String removeIllegalCharacters(java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTransientModifierRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ModifiersUtil: java.util.List parseModifiersList(java.lang.String)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure19: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: void visitDeclarationExpression(org.codehaus.groovy.ast.expr.DeclarationExpression)>",
    "<org.codenarc.rule.AbstractRuleTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_addInitializedField_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.ImportFromSamePackageRule$_applyTo_closure1: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.ant.ReportOption: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.MissingBlankLineAfterImportsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter$_writeSummary_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.generic.IllegalSubclassAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.OptionalMethodParameterRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToPlusMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.basic.DuplicateSetValueAstVisitor: boolean isSetLiteral(org.codehaus.groovy.ast.expr.CastExpression)>",
    "<org.codenarc.rule.logging.LogUtil: boolean isMatchingLoggerDefinition(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.report.AbstractReportWriter: void writeReport(org.codenarc.AnalysisContext,org.codenarc.results.Results)>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.AbstractClassNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.FinalClassWithProtectedMemberAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildScript_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequired: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.ConsecutiveStringConcatenationAstVisitor: boolean areJoinableConstants(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.grails.GrailsServletContextReferenceAstVisitor: void visitVariableExpression(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildProjectElement_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.CodeNarc: void setDefaultsIfNecessary()>",
    "<org.codenarc.rule.concurrency.SynchronizedOnGetClassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInFieldDeclarationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsBlankLineAfterOpeningBrace_closure4: java.lang.Integer getClassStartLine()>",
    "<org.codenarc.rule.AbstractConstructorCallAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17: org.codenarc.results.Results getResults()>",
    "<org.codenarc.ruleset.GroovyDslRuleSet: void <init>(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryReturnKeywordAstVisitor: org.codehaus.groovy.ast.stmt.Statement getLastStatement(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildReportElement_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_getAnonymousClasses_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.PrintStackTraceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCatchBlockAstVisitor: void visitTryCatchFinally(org.codehaus.groovy.ast.stmt.TryCatchStatement)>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor: void visitListExpression(org.codehaus.groovy.ast.expr.ListExpression)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitUtil: boolean isTearDownMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.XmlReportWriter: groovy.lang.Closure buildMessageElement(org.codenarc.rule.Violation)>",
    "<org.codenarc.rule.security.NonFinalSubclassOfSensitiveInterfaceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer$_processDirectory_closure1: org.codenarc.ruleset.RuleSet getRuleSet()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDotClassAstVisitor: void visitPropertyExpression(org.codehaus.groovy.ast.expr.PropertyExpression)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitConstructorOrMethod_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.EmptyIfStatementAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.util.ModifiersUtil$_matchesAnyModifiers_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonRule: void processPackage(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.convention.IfStatementCouldBeTernaryAstVisitor: boolean hasNoElseBlock(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_writeReport_closure1$_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.SynchronizedReadObjectMethodAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.CouldBeSwitchStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BlockEndsWithBlankLineRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateNumberLiteralRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAfterSwitchAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.generic.IllegalClassMemberRule: boolean isReady()>",
    "<org.codenarc.rule.grails.GrailsMassAssignmentRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.FactoryMethodNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryConstructorRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitTearDownCallsSuperAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildViolationElement_closure6: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.report.CompactTextReportWriter$_writeFileViolations_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitCaseStatement_closure6: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.AbstractClassWithPublicConstructorRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_getAnonymousClasses_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.size.ParameterCountAstVisitor: java.lang.String getName(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12$_closure15$_closure16: org.codenarc.results.Results getResults()>",
    "<org.codenarc.results.DirectoryResults$_removeViolation_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_isAnnotatedWithOverride_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_setRuleProperties_closure4: org.codenarc.rule.Rule getRule()>",
    "<org.codenarc.rule.design.SimpleDateFormatMissingLocaleAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21$_closure22: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsPublicControllerMethodAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12: org.codenarc.results.Results getResults()>",
    "<org.codenarc.util.ImportUtil$_sourceLineAndNumberForStarImport_closure2: org.codehaus.groovy.ast.ImportNode getImportNode()>",
    "<org.codenarc.rule.formatting.BracesForClassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure18: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ant.CodeNarcTask$_classLoaderForPaths_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.ruleset.TopLevelDelegate$_rule_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: boolean nameExcluded(java.lang.String)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleElements_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildReportElement_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.TrailingWhitespaceRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.groovyism.ConstantExpressionExtractor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter: groovy.lang.Closure buildSummaryByPackageRow(org.codenarc.results.Results,boolean)>",
    "<org.codenarc.rule.design.NestedForLoopRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor$_argumentsContainThis_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.concurrency.SystemRunFinalizersOnExitAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30$_closure32: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.NoDefAstVisitor$_visitDeclarationExpression_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.BooleanMethodReturnsNullAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.AssignmentToStaticFieldFromInstanceMethodAstVisitor: void visitMethodComplete(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.JsonReportWriter$_buildRulesElement_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule$_applyTo_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllSummaryByPackageRowsRecursively_closure3: org.codenarc.results.Results getResults()>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_findRule_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: void visitDeclarationExpression(org.codehaus.groovy.ast.expr.DeclarationExpression)>",
    "<org.codenarc.test.AbstractTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ParameterCountAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.junit.JUnitUtil: boolean isAssertCallWithConstantValue(org.codehaus.groovy.ast.expr.MethodCallExpression,java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor: java.lang.String getParameterDefinitionAsString(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.CompactTextReportWriter$_writeFileViolations_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.exceptions.CatchThrowableRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor$_closureReturnsCollection_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor$_checkMethods_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor$_visitMethodCallExpression_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.exceptions.CatchRuntimeExceptionRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.basic.DuplicateSetValueAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildReportElement_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor$_visitClassEx_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.imports.DuplicateImportRule$_applyTo_closure1: java.util.List getViolations()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySubstringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor: void handleClosure(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.util.ModifiersUtil: boolean matchesModifiers(java.lang.Integer,java.lang.Integer)>",
    "<org.codenarc.source.AbstractSourceCode$_removeGrabTransformation_closure1$_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.exceptions.CatchRuntimeExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_uniqueAndSortedDeclaringClassNames_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: void checkStatementExpression(org.codehaus.groovy.ast.MethodNode,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.junit.JUnitAssertAlwaysSucceedsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase: java.util.List manuallyApplyRule(java.lang.String)>",
    "<org.codenarc.CodeNarcRunner: void registerPluginForClassName(java.lang.String)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_visitConstructorOrMethod_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckAstVisitor: boolean isSuperReference(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.generic.IllegalSubclassAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.convention.NoTabCharacterRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.naming.PropertyNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.ruleregistry.PropertiesFileRuleRegistry: java.lang.Class getRuleClass(java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$ViolationAndPath: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.logging.MultipleLoggersRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementAstVisitor: java.lang.Object collectIfsAndElses(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.jdbc.DirectConnectionManagementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ant.CodeNarcTask$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.util.ImportUtil$_sourceLineAndNumberForStarImport_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.JUnitAssertAlwaysSucceedsAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.naming.MethodNameAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unused.ReferenceCollector: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.util.CodeNarcVersion: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfViolationsWithPriority_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintAstVisitor$_visitMethodCallExpression_closure1: org.codehaus.groovy.ast.expr.MethodCallExpression getCall()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationAstVisitor$_visitConstructorCallExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure25: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule: java.lang.Object this$dist$invoke$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitBlockStatement_closure2: org.codehaus.groovy.ast.stmt.BlockStatement getBlock()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryOverridingMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.RuleSetBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryTearDownRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.Violation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_writeReport_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor$_visitMethodCallExpression_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitWhileLoop_closure4: org.codehaus.groovy.ast.stmt.WhileStatement getWhileStatement()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToPutAtMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner$_initializePlugins_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.dry.DryUtil: boolean areTheSameConstantOrLiteralMapEntryExpression(org.codehaus.groovy.ast.expr.MapEntryExpression,org.codehaus.groovy.ast.expr.MapEntryExpression)>",
    "<org.codenarc.util.io.UrlResource: void <init>(java.lang.String)>",
    "<org.codenarc.rule.grails.GrailsPublicControllerMethodAstVisitor: boolean isIgnoredMethodName(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.CompactTextReportWriter$_writeFileViolations_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateMapLiteralAstVisitor$_visitMapExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: java.lang.String extractVariableOrFieldName(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.formatting.BracesForIfElseAstVisitor: void visitElseClosingBrace(org.codenarc.rule.formatting.BracesForIfElseRule,org.codehaus.groovy.ast.stmt.IfStatement,java.lang.String)>",
    "<org.codenarc.rule.imports.UnnecessaryGroovyImportRule$_applyTo_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.VolatileArrayFieldAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_containsKey_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor$_visitMethodCallExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_flexibleCheckForCorrectColumn_closure11: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.DeadCodeAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure7: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.BracesForMethodAstVisitor$_joinThrowsLines_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.BitwiseOperatorInConditionalAstVisitor: void addViolationBitwiseConditional(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor$_addViolationsForInstanceFields_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitConstructorOrMethod_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.ClassConstraintsAndMapping: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.AbstractSingleSpaceAfterKeywordAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.OptionalFieldAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_writeReport_closure1$_closure10: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.AssignCollectionUniqueRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.RequiredStringRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.basic.DuplicateCaseStatementAstVisitor$_visitSwitch_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportUtil: groovy.lang.Closure cdata(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckBeforeInstanceOfAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.unused.AbstractLastStatementInBlockAstVisitor: boolean isLastStatementInBlock(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_collectAllPrivateMethods_closure2$_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.plugin.disablerules.LookupTable$_buildLookupTable_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BracesForTryCatchFinallyAstVisitor$_visitCatch_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.PrintlnAstVisitor$_visitClassEx_closure2: java.lang.Object doCall(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.concurrency.StaticDateFormatFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.AbstractImportRule$_findLineNumberOfFirstClassDeclaration_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainHasToStringAstVisitor$_visitClassComplete_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.ant.CodeNarcTask: java.net.URLClassLoader classLoaderForPaths(java.lang.String[],java.lang.ClassLoader)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDoubleInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitForLoop_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter: void <init>()>",
    "<org.codenarc.rule.basic.AssertWithinFinallyBlockAstVisitor: void visitAssertStatement(org.codehaus.groovy.ast.stmt.AssertStatement)>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitClosureExpression_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processImports_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.SystemRunFinalizersOnExitRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceInsideParenthesesAstVisitor$_visitClassComplete_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.BlockEndsWithBlankLineAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.rule.logging.MultipleLoggersAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.CodeNarc: org.codenarc.analyzer.SourceAnalyzer createSourceAnalyzer()>",
    "<org.codenarc.util.io.ClassPathResource: java.io.InputStream getInputStream(java.lang.String)>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure2$_closure3: java.util.List getViolations()>",
    "<org.codenarc.report.XmlReportUtil$_cdata_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildFileElement_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.OptionalFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassEx_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceInsideParenthesesAstVisitor$_visitClassComplete_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor$_isUsedInAnyAnnotationOnCurrentAnnotatedNode_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor: void visitConstantExpression(org.codehaus.groovy.ast.expr.ConstantExpression)>",
    "<org.codenarc.rule.formatting.LineLengthRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.logging.LoggerForDifferentClassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToLeftShiftMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsPublicControllerMethodRule: void <init>()>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_applyTo_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBigIntegerInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionAstVisitor$_hasJUnit4Annotation_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ParameterCountRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.UseOfNotifyMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.AbstractSourceCode$_getLineNumberForCharacterIndex_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.ImplicitReturnStatementAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.DeadCodeRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildProjectElement_closure3$_closure9$_closure10: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.AbstractClassWithoutAbstractMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27$_closure29: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.BooleanMethodReturnsNullRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.AssignmentTracker: void addViolationIfAssignment(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.junit.JUnitPublicFieldRule: void <init>()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitClosureExpression_closure2: org.codehaus.groovy.ast.expr.ClosureExpression getExpression()>",
    "<org.codenarc.report.XmlReportWriter$_buildProjectElement_closure3$_closure11: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_containsKey_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer: void <clinit>()>",
    "<org.codenarc.rule.design.OptionalMethodParameterAstVisitor$_processParameters_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.CatchExceptionRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.dry.DuplicateListLiteralAstVisitor: void <init>()>",
    "<org.codenarc.rule.formatting.SpaceAfterMethodDeclarationNameRuleAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.rule.basic.BrokenOddnessCheckAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.basic.EqualsAndHashCodeAstVisitor$_visitClassEx_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryModOneAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.SourceCodeUtil: java.util.List nodeSourceLines(org.codenarc.source.SourceCode,org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.report.InlineXmlReportWriter$_buildViolationElement_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.StaticFieldsBeforeInstanceFieldsAstVisitor$_visitClassComplete_closure1: java.lang.Boolean getHasDeclaredInstanceField()>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: java.lang.String getPenultimateLine(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllSummaryByPackageRowsRecursively_closure3$_closure13: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure5: org.codenarc.results.FileResults getResults()>",
    "<org.codenarc.rule.basic.DuplicateCaseStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase: void removeSuppressedViolations(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleElements_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.ExceptionNotThrownRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor$_closureReturnsCollection_closure2: java.lang.Boolean getReturnsArray()>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_configure_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.exceptions.ConfusingClassNamedExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationAstVisitor$_visitConstructorCallExpression_closure1: org.codehaus.groovy.ast.expr.Expression getArgument()>",
    "<org.codenarc.rule.basic.MultipleUnaryOperatorsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.JavadocEmptyFirstLineRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.exceptions.CatchArrayIndexOutOfBoundsExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.dry.DuplicateStringLiteralRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.braces.ElseBlockBracesAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.ruleset.CompositeRuleSet: void addRuleSet(org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitBlockStatement_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.WildcardPattern: boolean matches(java.lang.String)>",
    "<org.codenarc.results.FileResults: java.lang.String toString()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitCatchStatement_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.security.FileCreateTempFileAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceAstVisitor: void addOpeningBraceViolation(org.codehaus.groovy.ast.ASTNode,java.lang.String)>",
    "<org.codenarc.rule.junit.JUnitUtil$_isAssertCallWithConstantValue_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor: void addMethodViolation(org.codehaus.groovy.ast.MethodNode,org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility)>",
    "<org.codenarc.rule.formatting.BracesForForLoopAstVisitor$_findLastLineOfForExpressions_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDotClassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceInsideParenthesesAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsNotBlankLineAfterOpeningBrace_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.RuleSetDelegate: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ReturnFromFinallyBlockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBooleanExpressionAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionAstVisitor: boolean isJUnit3MatchingMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.TextReportWriter: void writePackageViolations(java.io.Writer,org.codenarc.results.Results)>",
    "<org.codenarc.ruleregistry.PropertiesFileRuleRegistry: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceRule: void <init>()>",
    "<org.codenarc.report.CompactTextReportWriter$_writeFileViolations_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildScript_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.results.FileResults$_getNumberOfViolationsWithPriority_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: void visitSwitch(org.codehaus.groovy.ast.stmt.SwitchStatement)>",
    "<org.codenarc.rule.imports.DuplicateImportRule: void checkImport(java.lang.String,int,java.util.Set,java.util.List)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildBodySection_closure2$_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor: void visitClassComplete(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.basic.ExplicitGarbageCollectionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectIncludedProperties_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer$_processDirectory_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationRule: void <init>()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10$_closure11: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.FinalClassWithProtectedMemberAstVisitor: boolean isProtected(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: int nestingLevelForClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.junit.UseAssertTrueInsteadOfAssertEqualsAstVisitor: void visitAssertStatement(org.codehaus.groovy.ast.stmt.AssertStatement)>",
    "<org.codenarc.rule.grails.GrailsStatelessServiceRule: void <init>()>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolations_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor$_visitBlockStatement_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.security.SystemExitAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.design.PublicInstanceFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.FinalClassWithProtectedMemberAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults$_getTotalNumberOfFiles_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter: java.util.List getFileResults(org.codenarc.results.Results)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure7$_closure8: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildHeaderSection_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.PathUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintAstVisitor$_visitMethodCallExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.HashtableIsObsoleteRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.dry.DuplicateMapLiteralAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportParser: java.util.Map parseBaselineXmlReport(java.lang.String)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer: void <init>()>",
    "<org.codenarc.rule.dry.DuplicateNumberLiteralRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.FieldReferenceAstVisitor$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsRule: void setGormStaticMethodsNames(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.ConsecutiveLiteralAppendsAstVisitor: boolean isChainedAppend(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.ExplicitStackInstantiationRule$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.formatting.SpaceBeforeClosingBraceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule$1: void <init>(org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule,java.lang.Object)>",
    "<org.codenarc.rule.security.InsecureRandomAstVisitor: boolean isJavaLangMathCall(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.util.MultilineCommentChecker: void processLine(java.lang.String)>",
    "<org.codenarc.report.XmlReportWriter$_buildViolationElement_closure6$_closure18: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.formatting.SpaceAroundClosureArrowAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.source.AbstractSourceCode$_removeGrabTransformation_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer$_processDirectory_closure1: java.lang.String getDir()>",
    "<org.codenarc.util.ImportUtil: java.util.Map sourceLineAndNumberForImport(org.codenarc.source.SourceCode,org.codehaus.groovy.ast.ImportNode)>",
    "<org.codenarc.report.XmlReportWriter$_buildFileElement_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildScript_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter: groovy.lang.Closure buildFileElement(org.codenarc.results.Results)>",
    "<org.codenarc.rule.design.CloneableWithoutCloneAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCastRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitTearDownCallsSuperRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor: boolean isAnonymousInnerClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.FieldReferenceAstVisitor: void visitPropertyExpression(org.codehaus.groovy.ast.expr.PropertyExpression)>",
    "<org.codenarc.rule.basic.ReturnFromFinallyBlockAstVisitor: void visitReturnStatement(org.codehaus.groovy.ast.stmt.ReturnStatement)>",
    "<org.codenarc.report.XmlReportWriter$_buildFileElement_closure5: org.codenarc.results.FileResults getResults()>",
    "<org.codenarc.rule.exceptions.MissingNewInThrowStatementAstVisitor: boolean isFirstLetterUpperCase(java.lang.String)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.braces.ElseBlockBracesRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer: void measureRuleProcessingTime(org.codenarc.rule.Rule,groovy.lang.Closure)>",
    "<org.codenarc.source.AbstractSourceCode: java.util.Map getMethodCallExpressions()>",
    "<org.codenarc.rule.formatting.SpaceAroundMapEntryColonAstVisitor: void visitMapEntryExpression(org.codehaus.groovy.ast.expr.MapEntryExpression)>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertNoViolations(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryConstructorAstVisitor: void analyzeConstructor(org.codehaus.groovy.ast.ConstructorNode)>",
    "<org.codenarc.rule.naming.FieldNameRule: void validate()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14$_closure15: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.UseAssertNullInsteadOfAssertEqualsAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitClassEx_closure1: org.codehaus.groovy.ast.ClassNode getNode()>",
    "<org.codenarc.report.XmlReportWriter$_buildProjectElement_closure3$_closure11$_closure12: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.ReturnNullFromCatchBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor$_processParameters_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void addClosureFields(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.source.AbstractSourceCode: void <clinit>()>",
    "<org.codenarc.rule.convention.LongLiteralWithLowerCaseLAstVisitor: void visitConstantExpression(org.codehaus.groovy.ast.expr.ConstantExpression)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.results.FileResults: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ConstantIfExpressionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor$_visitMethodEx_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: boolean isSingleLineClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.imports.ImportFromSamePackageRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ModifiersUtil$_matchesAnyModifiers_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner$_registerPluginsForClassNames_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.ConfusingTernaryAstVisitor: void addViolationForBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression,org.codehaus.groovy.ast.expr.TernaryExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBigDecimalInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.VolatileLongOrDoubleFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor: void collectMapKeys(org.codehaus.groovy.ast.expr.MethodCallExpression,java.util.Map)>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterAstVisitor: java.util.List getViolations()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.dry.DuplicateMapLiteralRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceInsideParenthesesAstVisitor: int startOfCommentIndex(java.lang.String)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: java.lang.String createMessage(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.basic.EmptyIfStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.comments.ClassJavadocRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.formatting.MissingBlankLineBeforeAnnotatedFieldRuleAstVisitor: boolean annotationsNotOnSameLineAsFieldDeclaration(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitClosureExpression_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryOverridingMethodAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.dry.DuplicateMapLiteralRule: void <init>()>",
    "<org.codenarc.report.JsonReportWriter$_buildPackageElements_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.BaselineViolation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.InvertedIfElseRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToPowerMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure4$_closure11: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.VariableUsageFinder: void visitVariableExpression(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsNotBlankLineAfterOpeningBrace_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.size.CrapMetricRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.util.WildcardPattern$_matches_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.groovyism.ConstantExpressionExtractor$_extractFromExpression_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBigDecimalInstantiationAstVisitor: boolean isTypeSuffixNecessary(java.lang.Object)>",
    "<org.codenarc.util.ModifiersUtil: boolean matchesAnyModifiers(java.lang.Integer,java.util.List)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer: org.codenarc.rule.Rule findRule(org.codenarc.ruleset.RuleSet,java.lang.String)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_applyProperties_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ClassNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12$_closure15$_closure16: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.AbstractReportWriter$_getSortedRules_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.OptionalCollectionReturnTypeAstVisitor: void <clinit>()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildBodySection_closure2: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.formatting.SpaceAfterMethodCallNameRuleAstVisitor: boolean hasPrecedingWhitespace(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor: void findViolations(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure5$_closure13: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundMapEntryColonAstVisitor: java.lang.String violationMessage(java.lang.String,java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.basic.DoubleNegativeRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_findRule_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.MathRandomTracker: void callBackForMathRandomReturns(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.grails.ClassConstraintsAndMapping$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.plugin.disablerules.DisableRulesInCommentsPlugin$_processViolationsForFile_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.AbstractReportWriter$_writeReportToFile_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean hasNoElseBlock(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_addInitializedField_closure4: java.lang.String getVarName()>",
    "<org.codenarc.rule.size.CrapMetricRule: boolean doesCoberturaXmlFileExist()>",
    "<org.codenarc.rule.basic.ConstantTernaryExpressionAstVisitor: void visitTernaryExpression(org.codehaus.groovy.ast.expr.TernaryExpression)>",
    "<org.codenarc.rule.concurrency.SynchronizedReadObjectMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.MovedRules: org.codenarc.ruleset.MovedRules$MovedToRuleSet movedTo(java.lang.String)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_flexibleCheckForCorrectColumn_closure10: java.lang.Integer getChainedMethodDotColumn()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasSingletonAnnotation_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.InstanceofAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.FieldReferenceAstVisitor$_visitMethodEx_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.util.ImportUtil$_sortImportsByLineNumber_closure4: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.plugin.FileViolations: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.HardcodedWindowsRootDirectoryAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.AbstractRuleTestCase: java.lang.String removeInlineViolations(java.lang.String)>",
    "<org.codenarc.rule.formatting.BracesForMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EqualsOverloadedAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.results.DirectoryResults: int getNumberOfFilesWithViolations(int,boolean)>",
    "<org.codenarc.rule.groovyism.ConstantExpressionExtractor: java.util.List extractFromExpression(org.codehaus.groovy.ast.expr.ListExpression)>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure6: java.io.Writer getWriter()>",
    "<org.codenarc.rule.basic.EqualsAndHashCodeAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.ConstructorsSkippingFieldReferenceAstVisitor: void <init>(java.util.Collection)>",
    "<org.codenarc.rule.concurrency.DoubleCheckedLockingAstVisitor: org.codehaus.groovy.ast.stmt.SynchronizedStatement getSynchronizedStatement(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitBlockStatement_closure8: org.codehaus.groovy.ast.stmt.BlockStatement getBlock()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertyLockingAstVisitor: java.lang.String getGuardName(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.junit.JUnitUtil: boolean isSetUpMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.grails.GrailsDuplicateMappingRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.CommentsUtil: void <clinit>()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.CoupledTestCaseRule: void <init>()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySafeNavigationOperatorAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_visitClassComplete_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_buildFileElement_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.ConsecutiveStringConcatenationAstVisitor: boolean isNumberLiteral(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.junit.JUnitUtil$_isAssertCallWithConstantValue_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.util.WildcardPattern$_convertStringWithWildcardsToRegex_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer: void configure(org.codenarc.ruleset.RuleSet,java.lang.String)>",
    "<org.codenarc.rule.basic.ComparisonOfTwoConstantsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConstantExpressionExtractor$_extractFrom_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: void checkNonEmptyLineNumber(int,int)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure5$_closure13: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInFieldDeclarationAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertyLockingAstVisitor: boolean isReadLocked(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24: java.lang.Object call(org.codenarc.report.SortableHtmlReportWriter$ViolationAndPath)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertyLockingAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolation_closure4: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_visitDeclarationExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: void visitParameters(org.codehaus.groovy.ast.Parameter[])>",
    "<org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.ClassReferenceAstVisitor: void checkType(java.lang.String,org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.convention.InvertedConditionAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.report.JsonReportWriter$_buildPackageElements_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateRuleIndexPages$_main_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.size.CrapMetricRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameRule: void <init>()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolations_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_afterBlock_closure2: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer: void initializeWildcardPatterns()>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor$_checkMethods_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.GroovyVersion: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter: void initializeDefaultResourceBundle()>",
    "<org.codenarc.rule.imports.ImportFromSamePackageRule: java.lang.String getClassNameNoPackage(java.lang.String)>",
    "<org.codenarc.rule.junit.JUnitLostTestAstVisitor$_visitClass_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor$_visitMethodEx_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.ruleset.MovedRules$Renamed: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.basic.DuplicateSetValueAstVisitor$_visitCastExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter: groovy.lang.Closure buildAllSummaryByPackageRowsRecursively(org.codenarc.results.Results)>",
    "<org.codenarc.report.SortableHtmlReportWriter: java.lang.Object this$dist$invoke$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.design.InstanceofAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.generic.RequiredStringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterMethodCallNameRuleAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ImportUtil: java.util.Map sourceLineAndNumberForStarImport(org.codenarc.source.SourceCode,org.codehaus.groovy.ast.ImportNode)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_addViolationOnMismatch_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.CoupledTestCaseRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.FieldTypeRequiredRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor: void <init>(org.codenarc.rule.AbstractAstVisitor)>",
    "<org.codenarc.report.HtmlReportWriter$_buildBodySection_closure1: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.exceptions.ExceptionNotThrownAstVisitor: void visitCatchStatement(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_printRuleProcessingTimes_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryToStringAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.security.SystemExitAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BlockEndsWithBlankLineAstVisitor: java.lang.String lastButOneCodeLine(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.tool.GenerateRuleIndexPages$_main_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassEx_closure2: java.lang.Object doCall(java.util.Collection)>",
    "<org.codenarc.rule.serialization.EnumCustomSerializationIgnoredAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionAstVisitor$_hasJUnit4Annotation_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure18: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter: groovy.lang.Closure buildPackageSection(org.codenarc.results.Results)>",
    "<org.codenarc.tool.GenerateRuleIndexPages$_main_closure1: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.ant.Report: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter$_writePackageViolations_closure2: java.io.Writer getWriter()>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitConstructorOrMethod_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.source.AbstractSourceCode$_removeGrabTransformation_closure1$_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.braces.ForStatementBracesAstVisitor: void visitForLoop(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.rule.basic.DuplicateCaseStatementAstVisitor$_visitSwitch_closure2: java.lang.Object doCall(java.lang.Object,org.codehaus.groovy.ast.stmt.CaseStatement)>",
    "<org.codenarc.rule.formatting.BracesForTryCatchFinallyAstVisitor: void visitFinally(org.codenarc.rule.formatting.BracesForTryCatchFinallyRule,org.codehaus.groovy.ast.stmt.TryCatchStatement)>",
    "<org.codenarc.rule.junit.JUnitUtil: boolean isLiteralWithValueThatEvaluatesTo(org.codehaus.groovy.ast.expr.Expression,boolean)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToAndMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_generateAllPossibleParameterSignatures_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.BracesForClassRule$_applyTo_closure1: java.lang.Object doCall(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildBodySection_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UnnecessaryFailAstVisitor$_visitCatchStatement_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: void addViolation(org.codehaus.groovy.ast.ASTNode,java.lang.String,int)>",
    "<org.codenarc.rule.junit.UseAssertTrueInsteadOfNegationRule: void <init>()>",
    "<org.codenarc.rule.design.BooleanReturnTracker: void checkReturnValues(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30$_closure32: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.EmptyMethodAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.util.ConsecutiveUtils: boolean isJoinableType(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor: java.lang.Object this$dist$invoke$4(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_getMethodCallsAndMapKeys_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: void addViolation(java.lang.String,int)>",
    "<org.codenarc.report.XmlReportWriter$_buildRulesElement_closure9$_closure19$_closure20$_closure21: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitConstructorOrMethod_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor$_processParameters_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBooleanInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitSetUpCallsSuperRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceBeforeClosingBraceAstVisitor: void addOpeningBraceViolation(org.codehaus.groovy.ast.ASTNode,java.lang.String)>",
    "<org.codenarc.rule.design.OptionalCollectionReturnTypeRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule$_applyTo_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor$_visitCatchStatement_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor$_addViolationsForInstanceFields_closure3: java.lang.Object doCall(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.basic.EmptyFinallyBlockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner: org.codenarc.ruleset.RuleSet createInitialRuleSetFromFiles()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.design.BooleanMethodReturnsNullAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor$_visitMethodCallExpression_closure1: org.codehaus.groovy.ast.expr.MethodCallExpression getCall()>",
    "<org.codenarc.ruleset.GroovyDslRuleSet: void evaluateDsl(groovy.lang.GroovyShell)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_getAnonymousClasses_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.SynchronizedOnBoxedPrimitiveAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterClosingBraceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults$_getTotalNumberOfFiles_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule$1: void <init>(org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule,java.lang.Object)>",
    "<org.codenarc.rule.basic.BooleanGetBooleanRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.source.AbstractSourceCode$_removeGrabTransformation_closure1$_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildBodySection_closure2$_closure8: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.report.CompactTextReportWriter: void writeFileViolations(java.io.Writer,org.codenarc.results.FileResults)>",
    "<org.codenarc.rule.formatting.SpaceInsideParenthesesAstVisitor: java.lang.String stripComments(java.lang.String)>",
    "<org.codenarc.CodeNarcRunner$_writeReports_closure8: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.formatting.BracesForTryCatchFinallyRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.BooleanGetBooleanAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure29: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.generic.IllegalClassReferenceRule: boolean isReady()>",
    "<org.codenarc.rule.convention.ParameterReassignmentAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.report.AbstractReportWriter: java.util.List getSortedRules(org.codenarc.AnalysisContext)>",
    "<org.codenarc.util.ImportUtil: java.util.Map sourceLineAndNumberForNonStarImport(org.codenarc.source.SourceCode,org.codehaus.groovy.ast.ImportNode)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure11: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_writeReport_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateRuleIndexPages: void <clinit>()>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.SystemOutPrintAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.InsecureRandomAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: void checkIfThereIsBlankLineBeforeClosingBrace(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitImports_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCastAstVisitor: void visitCastExpression(org.codehaus.groovy.ast.expr.CastExpression)>",
    "<org.codenarc.rule.grails.GrailsDuplicateMappingAstVisitor: void <init>()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor$_visitArgumentlistExpression_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_buildViolationElement_closure6$_closure18: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule: java.lang.Object this$dist$invoke$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23: org.codenarc.results.Results getResults()>",
    "<org.codenarc.CodeNarcRunner: void initializePluginsFromSystemProperty()>",
    "<org.codenarc.rule.exceptions.SwallowThreadDeathAstVisitor: void <init>()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27$_closure29: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.TextReportWriter$_writePackageViolations_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDoubleInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.RuleSetBuilder: org.codenarc.ruleset.RuleSet getRuleSet()>",
    "<org.codenarc.rule.concurrency.UseOfNotifyMethodAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.BracesForTryCatchFinallyAstVisitor$_visitCatch_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceAfterClosingBraceAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitCaseStatement_closure6: org.codehaus.groovy.ast.stmt.CaseStatement getStatement()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasSingletonAnnotation_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.util.ModifiersUtil$_parseModifiersList_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.CouldBeSwitchStatementAstVisitor: java.lang.Boolean inSupportedOperation(org.codehaus.groovy.syntax.Token)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGetterAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.junit.ChainedTestAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_afterBlock_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitSynchronizedStatement_closure7: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.ListRuleSet$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.plugin.disablerules.DisableRulesInCommentsPlugin: void processViolationsForFile(org.codenarc.plugin.FileViolations)>",
    "<org.codenarc.rule.formatting.BracesForMethodAstVisitor$_hasOpeningBraceOnSameLine_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_applyTo_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.NestedSynchronizationAstVisitor: void visitSynchronizedStatement(org.codehaus.groovy.ast.stmt.SynchronizedStatement)>",
    "<org.codenarc.rule.imports.ImportFromSamePackageRule: boolean hasAlias(org.codehaus.groovy.ast.ImportNode)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_printRuleProcessingTimes_closure5: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.concurrency.SynchronizedOnStringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundClosureArrowRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.AssignCollectionUniqueAstVisitor: boolean isFalseConstant(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.CollectAllIsDeprecatedRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_getViolations_closure1: org.codenarc.rule.AstVisitor getVisitor()>",
    "<org.codenarc.rule.naming.InterfaceNameSameAsSuperInterfaceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateRuleIndexPages$_main_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonAstVisitor$_removeAnyViolationsForSameLine_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.MovedRules$Renamed: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor: void visitMethodComplete(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.source.AbstractSourceCode: java.util.List getLines()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor: void <init>(java.util.Set,java.util.Set)>",
    "<org.codenarc.report.XmlReportWriter: groovy.lang.Closure buildProjectElement(org.codenarc.AnalysisContext)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonRule$_processImports_closure1: java.util.List getViolations()>",
    "<org.codenarc.report.InlineXmlReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter$_writeSummary_closure1: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor$_visitMethodCallExpression_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.JavadocEmptyReturnTagRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ComparisonWithSelfRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterAstVisitor: void setSourceCode(org.codenarc.source.SourceCode)>",
    "<org.codenarc.report.XmlReportWriter$_buildViolationElement_closure6$_closure18: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.SynchronizedOnThisRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalClassMemberAstVisitor: void visitProperty(org.codehaus.groovy.ast.PropertyNode)>",
    "<org.codenarc.report.InlineXmlReportWriter$_buildViolationElement_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.FieldReferenceAstVisitor: void <init>(java.util.Collection)>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor$_isEmpty_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor: void visitImports(org.codehaus.groovy.ast.ModuleNode)>",
    "<org.codenarc.util.ImportUtil: java.util.Map sourceLineAndNumberForImport(org.codenarc.source.SourceCode,java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor$_visitForLoop_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule: java.util.List addOrderingViolations(org.codenarc.source.SourceCode,java.lang.String,java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.naming.InterfaceNameSameAsSuperInterfaceAstVisitor$_visitClassEx_closure1: org.codehaus.groovy.ast.ClassNode getNode()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassComplete_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor: void visitVariableExpression(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.ruleset.GroovyDslRuleSet$_evaluateDsl_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTernaryExpressionAstVisitor: void visitTernaryExpression(org.codehaus.groovy.ast.expr.TernaryExpression)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure29: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.jdbc.DirectConnectionManagementAstVisitor: boolean isJavaSQLDriverManagerCall(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ConstantIfExpressionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainWithServiceReferenceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.FieldNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionRule: void <init>()>",
    "<org.codenarc.ruleset.RuleSetUtil$_loadRuleScriptFile_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.UseCollectManyAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckBeforeInstanceOfRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin: void <init>(org.codenarc.util.io.Resource)>",
    "<org.codenarc.rule.formatting.SpaceAfterCatchRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor$_visitMethodCallExpression_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.size.AbcMetricAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.FieldTypeRequiredAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: java.lang.String findFirstLineAfterOpeningBrace(int)>",
    "<org.codenarc.rule.comments.JavadocMissingParamDescriptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToPowerMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12$_closure15: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateRuleSetAllRulesByCategory: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults: void <init>()>",
    "<org.codenarc.source.AbstractSourceCode: void init()>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor$_argumentsContainThis_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.CompositeRuleSet: void <init>()>",
    "<org.codenarc.rule.basic.ConstantAssertExpressionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ObjectOverrideMisspelledMethodNameAstVisitor: void checkForMethodNameWithIncorrectCase(org.codehaus.groovy.ast.MethodNode,java.lang.String,java.util.List)>",
    "<org.codenarc.rule.junit.JUnitPublicFieldAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildBodySection_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor: boolean isMainMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.imports.UnusedImportRule: java.lang.String findReference(org.codenarc.source.SourceCode,java.lang.String)>",
    "<org.codenarc.rule.exceptions.ExceptionNotThrownAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryFloatInstantiationAstVisitor: void <init>()>",
    "<org.codenarc.source.CustomCompilerPhaseSourceDecorator: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ConstantAssertExpressionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBooleanExpressionAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.serialization.SerialVersionUIDRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.CouldBeElvisAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassComplete_closure6: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.imports.UnusedImportRule$_findReference_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.dry.DuplicateListLiteralAstVisitor$_visitListExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.UnsafeArrayDeclarationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineViolation: boolean equals(java.lang.Object)>",
    "<org.codenarc.analyzer.StringSourceAnalyzer: org.codenarc.results.Results analyze(org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.rule.unnecessary.ConsecutiveStringConcatenationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor$_visitStaticMethodCallExpression_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.TextReportWriter$_writePackageViolations_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor$_visitDeclarationExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryStringInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitListExpression_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainHasToStringAstVisitor: void visitClassComplete(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.XmlReportWriter$_buildFileElement_closure5$_closure16$_closure17: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.basic.DuplicateCaseStatementAstVisitor$_visitSwitch_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildHeaderSection_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.concurrency.ThreadLocalNotStaticFinalAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.grails.ClassConstraintsAndMapping$_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitTestMethodWithoutAssertAstVisitor: boolean checksException(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.NestedSynchronizationAstVisitor$_visitClosureExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ParameterNameAstVisitor$_processParameters_closure1: java.lang.String getMethodName()>",
    "<org.codenarc.rule.generic.IllegalRegexRule: boolean isReady()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitWhileLoop_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.generic.IllegalClassMemberAstVisitor: boolean matchesIgnoreMethodNames(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void visitCaseStatement(org.codehaus.groovy.ast.stmt.CaseStatement)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitForLoop_closure5: org.codehaus.groovy.ast.stmt.ForStatement getForStatement()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasState_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.AbstractFinallyAstVisitor$_isStatementWithinFinally_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.naming.FactoryMethodNameAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.exceptions.MissingNewInThrowStatementAstVisitor: void visitThrowStatement(org.codehaus.groovy.ast.stmt.ThrowStatement)>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolation_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryFinalOnPrivateMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ClosureAsLastMethodParameterAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryToStringAstVisitor: boolean isToStringMethodCall(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTernaryExpressionAstVisitor: boolean areTrueAndFalse(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.basic.ClassForNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4$_closure13$_closure15: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.GroovyDslRuleSet$_createGroovyShell_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BracesForClassRule$_applyTo_closure1: java.util.List getViolations()>",
    "<org.codenarc.rule.generic.IllegalSubclassRule: boolean isReady()>",
    "<org.codenarc.rule.InlineViolationsParser$ParseResult: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure4$_closure11: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_collectAllPrivateFields_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.SystemRunFinalizersOnExitAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: boolean isNotAnIgnoredOverrideMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCatchBlockAstVisitor$_visitTryCatchFinally_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.util.WildcardPattern: void <init>(java.lang.String,boolean)>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor: boolean isNamedArgumentsListContainingThis(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processStaticImports_closure2: java.util.List getViolations()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToMethodAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.ruleset.RuleSetDelegate$_methodMissing_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.ImportFromSamePackageRule$_applyTo_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsNotBlankLineAfterOpeningBrace_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.test.AbstractTestCase: java.lang.String getName()>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.util.SourceCodeUtil: java.util.List sourceLinesBetweenNodes(org.codenarc.source.SourceCode,org.codehaus.groovy.ast.ASTNode,org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.basic.ComparisonOfTwoConstantsAstVisitor: void addViolationIfBothAreConstantsOrLiterals(org.codehaus.groovy.ast.ASTNode,org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_visitClassComplete_closure2: org.codenarc.rule.grails.ClassConstraintsAndMapping getConstraintsAndMapping()>",
    "<org.codenarc.rule.junit.JUnitTearDownCallsSuperAstVisitor$_visitMethod_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.RemoveAllOnSelfAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.FilteredRuleSet$_getRules_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.test.AbstractTestCase: void setUpAbstractTestCase()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure29: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.comments.JavadocMissingThrowsDescriptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.InlineViolationsParser$ParseResult: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor$_extractTransients_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean isFalseExpression(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.basic.ExplicitGarbageCollectionAstVisitor: boolean isPropertyExpression(org.codehaus.groovy.ast.expr.Expression,java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIntegerInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule$_applyTo_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterNotOperatorRuleAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.NonFinalSubclassOfSensitiveInterfaceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ClassNameSameAsFilenameRule$_applyTo_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_visitDeclarationExpression_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedObjectRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ParameterNameAstVisitor$_processParameters_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.AbstractReportWriter: java.lang.String getResourceBundleString(java.lang.String,java.lang.String,boolean)>",
    "<org.codenarc.util.ModifiersUtil$_matchesAnyModifiers_closure1: java.lang.Integer getActualModifiers()>",
    "<org.codenarc.ruleset.RuleSetUtil$_loadRuleScriptFile_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.DuplicateCaseStatementAstVisitor: void visitSwitch(org.codehaus.groovy.ast.stmt.SwitchStatement)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsMassAssignmentAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ImportUtil$_sourceLineAndNumberForImport_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.results.DirectoryResults: int getNumberOfViolationsWithPriority(int)>",
    "<org.codenarc.rule.formatting.BracesForForLoopAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.ReferenceCollector: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.AssertionTrap$_methodNamesCountsAsAssertion_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor: void checkPackageName(java.lang.String,org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.grails.GrailsDomainHasEqualsRule: void <init>()>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolations_closure3$_closure6: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.CodeNarcRunner$_registerPluginsForClassNames_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.LoggerForDifferentClassAstVisitor: boolean isEqualToCurrentClassOrClassName(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean areTrueAndFalseExpressions(org.codehaus.groovy.ast.stmt.Statement,org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.ruleset.MovedRules$Renamed: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.concurrency.StaticSimpleDateFormatFieldAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.InterfaceNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_recordMethodColumnAndSourceLineForClosureBlocks_closure7: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckAstVisitor: boolean isPropertyInvocation(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.rule.junit.UseAssertSameInsteadOfAssertTrueAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: void afterBlock()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.rule.exceptions.ThrowNullPointerExceptionRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_applyProperties_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor: void processType(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor: void processParameters(org.codehaus.groovy.ast.Parameter[],java.lang.String)>",
    "<org.codenarc.rule.unused.UnusedObjectAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.UseCollectNestedAstVisitor: org.codehaus.groovy.ast.Parameter getClosureParameter(org.codehaus.groovy.ast.expr.ClosureExpression,org.codehaus.groovy.ast.Parameter)>",
    "<org.codenarc.report.XmlReportWriter$_buildMessageElement_closure8: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.logging.LoggerForDifferentClassAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.AbstractJavadocMissingDescriptionRule: void <init>()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.basic.EmptySwitchStatementAstVisitor: void visitSwitch(org.codehaus.groovy.ast.stmt.SwitchStatement)>",
    "<org.codenarc.report.ReportWriterFactory: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule$_addOrderingViolations_closure1: java.lang.String getMessage()>",
    "<org.codenarc.rule.formatting.BlockEndsWithBlankLineAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21$_closure23: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.logging.LoggerWithWrongModifiersAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_applyTo_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: int getLineNumberForCharacterIndex(int)>",
    "<org.codenarc.rule.basic.ParameterAssignmentInFilterClosureAstVisitor: void <clinit>()>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4$_closure13: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassComplete_closure5: java.lang.Object doCall(java.util.Collection)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_visitConstructorOrMethod_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToMinusMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.junit.JUnitFailWithoutMessageRuleAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectMapKeys_closure6: java.util.Map getResult()>",
    "<org.codenarc.rule.basic.ParameterAssignmentInFilterClosureRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildMessageElement_closure7: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: boolean isNotExpressionWithMethodCallOnName(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.tool.GenerateRuleIndexPages$_main_closure2$_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.LineLengthRule: boolean flagIfRegularLine(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationToGetClassAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.BracesForForLoopAstVisitor: int findLastLineOfForExpressions(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.rule.security.PublicFinalizeMethodAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.naming.VariableNameAstVisitor$_visitDeclarationExpression_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_buildSourceLineElement_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EqualsAndHashCodeAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.UnsafeArrayDeclarationAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolations_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.security.JavaIoPackageAccessAstVisitor: void visitPropertyExpression(org.codehaus.groovy.ast.expr.PropertyExpression)>",
    "<org.codenarc.rule.security.SystemExitRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitTestMethodWithoutAssertAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterAstVisitor$_hasItParameter_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.InstanceofRule: void <init>()>",
    "<org.codenarc.rule.naming.ClassNameSameAsFilenameRule$_applyTo_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor$_closure1: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.exceptions.CatchArrayIndexOutOfBoundsExceptionRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.logging.LoggerForDifferentClassAstVisitor: boolean isEqualToCurrentClassName(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.results.DirectoryResults$_removeViolation_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_flexibleCheckForCorrectColumn_closure12: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.imports.AbstractImportRule: void eachImportLine(org.codenarc.source.SourceCode,groovy.lang.Closure)>",
    "<org.codenarc.report.XmlReportWriter$_writeReport_closure1: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor$_isEmpty_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ConstantExpressionExtractor: java.util.List extractFromExpression(org.codehaus.groovy.ast.expr.ConstantExpression)>",
    "<org.codenarc.rule.naming.ParameterNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ParameterNameAstVisitor$_processParameters_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor$_visitCastExpression_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_applyProperties_closure2: org.codenarc.ruleset.RuleSet getRuleSet()>",
    "<org.codenarc.rule.exceptions.ReturnNullFromCatchBlockAstVisitor: boolean shouldVisitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4$_closure13$_closure15: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.tool.GenerateRuleIndexPages: void main(java.lang.String[])>",
    "<org.codenarc.report.HtmlReportWriter$_buildBodySection_closure1$_closure8: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceAfterSwitchRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildButtons_closure6$_closure30: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12$_closure15: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure7$_closure9: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer: java.lang.String getActualPropertiesFile(java.lang.String)>",
    "<org.codenarc.rule.convention.IfStatementCouldBeTernaryAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.ruleset.XmlFileRuleSet: void <init>(java.lang.String)>",
    "<org.codenarc.rule.naming.ClassNameSameAsFilenameRule: java.lang.String classNodeType(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToRightShiftMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor$_isExpressionUsedInAnnotation_closure2: org.codehaus.groovy.ast.expr.ConstantExpression getExpression()>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19$_closure21$_closure22: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processStaticImports_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer: void <init>()>",
    "<org.codenarc.rule.exceptions.ThrowNullPointerExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.LoggerForDifferentClassAstVisitor: boolean isLoggerForDerivedClass(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInMethodDeclarationAstVisitor: java.lang.String removeDistractingParts(java.lang.String)>",
    "<org.codenarc.rule.groovyism.ClosureAsLastMethodParameterRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_findSuperClassMethods_closure7: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure7$_closure9: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner: org.codenarc.results.Results execute()>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllPackageSections_closure5$_closure17: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarc$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.GroovyVersion: boolean isNotGroovyVersion2()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: boolean isGetterSynchronizedAndSetterUnsychronized(java.util.List,java.lang.String)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: java.util.Map getIndentLevelsMap()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBooleanExpressionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToEqualsMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.basic.ForLoopShouldBeWhileLoopRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarc: void parseReport(java.lang.String)>",
    "<org.codenarc.ruleset.MovedRules$MovedToRuleSet: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.codenarc.tool.GenerateCodeNarcRulesProperties$_main_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_getMethodCallsAndMapKeys_closure5: java.lang.Object doCall(org.codehaus.groovy.ast.stmt.ExpressionStatement)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure4$_closure12: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBooleanInstantiationAstVisitor: boolean isConstructorCallAViolation(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor$_visitStaticMethodCallExpression_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor$_visitMethodCallExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.AbstractSourceCode$_removeGrabTransformation_closure1$_closure3$_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_writeReport_closure1$_closure10: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstanceOfCheckRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor$_visitBlockStatement_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAfterClosingBraceAstVisitor: boolean isNotAllowedCharacterAfterClosure(java.lang.String,int)>",
    "<org.codenarc.rule.basic.ForLoopShouldBeWhileLoopAstVisitor: void visitForLoop(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonAstVisitor$_removeAnyViolationsForSameLine_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_configure_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterCodeVisitor: void visitVariableExpression(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.rule.imports.UnusedImportRule$_findReference_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.AstUtil: boolean respondsTo(java.lang.Object,java.lang.String)>",
    "<org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ant.CodeNarcTask: void addFileset(org.apache.tools.ant.types.FileSet)>",
    "<org.codenarc.rule.groovyism.ExplicitStackInstantiationRule$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.concurrency.NestedSynchronizationAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionAstVisitor$_hasJUnit4Annotation_closure1: org.codehaus.groovy.ast.MethodNode getNode()>",
    "<org.codenarc.rule.FieldReferenceAstVisitor: java.util.List getOuterClassNames()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21$_closure22: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.generic.IllegalStringRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_afterBlock_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.JsonReportWriter: boolean isRoot(org.codenarc.results.Results)>",
    "<org.codenarc.rule.design.AbstractClassWithPublicConstructorAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.NoTabCharacterRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassEx_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTernaryExpressionAstVisitor: boolean isBooleanConditionalExpression(org.codehaus.groovy.ast.expr.BooleanExpression)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitConstructorOrMethod_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitPublicFieldAstVisitor: void visitClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.tool.GenerateAll: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ParameterReassignmentAstVisitor: void <init>()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure19: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToXorMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.HardCodedWindowsFileSeparatorRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.LineLengthRule: boolean lineExceedsMaxLength(java.lang.String)>",
    "<org.codenarc.report.AbstractHtmlReportWriter: groovy.lang.Closure buildRuleDescriptions(org.codenarc.AnalysisContext)>",
    "<org.codenarc.rule.convention.IfStatementCouldBeTernaryAstVisitor: boolean isBlockWithSingleReturnStatement(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor: void visitProperty(org.codehaus.groovy.ast.PropertyNode)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21$_closure23: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: java.util.List generateAllPossibleParameterSignatures(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor$_visitMethodCallExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.JUnitPublicNonTestMethodAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.imports.UnnecessaryGroovyImportRule$_applyTo_closure1: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: boolean isSpockBlockLabel(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.BrokenNullCheckRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_processMethodOrConstructorCall_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.StaticConnectionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.JavaIoPackageAccessAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.basic.DeadCodeAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThreadLocalNotStaticFinalRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.SpockIgnoreRestUsedRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor: java.util.List getAnonymousClasses()>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor$_processParameters_closure1: java.lang.String getMethodName()>",
    "<org.codenarc.rule.formatting.BlankLineBeforePackageRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasOneStaticFieldNamedInstance_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.StaticFieldsBeforeInstanceFieldsAstVisitor$_visitClassComplete_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.NoDefAstVisitor$_visitParameters_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.CodeNarcRunner: java.util.List applyPluginsProcessRules(org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.CodeNarc: void checkMaxViolations(org.codenarc.results.Results,int,int)>",
    "<org.codenarc.rule.basic.ConstantTernaryExpressionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarc$__clinit__closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_buildViolationElement_closure6: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_initializeImportNames_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitCaseStatement_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueAstVisitor: int getActualArgumentIndex(java.util.List)>",
    "<org.codenarc.report.InlineXmlReportWriter$_buildViolationElement_closure1$_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer: void applyProperties(java.util.Properties,org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.rule.ClassReferenceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor$_isNamedArgumentsListContainingThis_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalSubclassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_addViolationOnMismatch_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.BracesForMethodAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.rule.imports.UnnecessaryGroovyImportRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.imports.UnusedImportRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.CouldBeSwitchStatementAstVisitor: void <init>()>",
    "<org.codenarc.rule.generic.IllegalRegexRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.CommonThrowAstVisitor: void visitThrowStatement(org.codehaus.groovy.ast.stmt.ThrowStatement)>",
    "<org.codenarc.rule.imports.AbstractImportRule$_findLineNumberOfFirstClassDeclaration_closure1: java.lang.Integer getFirstLineNumber()>",
    "<org.codenarc.report.BaselineXmlReportWriter: groovy.lang.Closure buildViolationElement(org.codenarc.rule.Violation)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: java.util.List setupFlexibleIndentForAnyClosureParameterBlocks(org.codehaus.groovy.ast.expr.ArgumentListExpression)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_uniqueAndSortedDeclaringClassNames_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.CollectionReturnTracker: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure4$_closure11: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_buildReportElement_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.logging.PrintlnAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.JavaIoPackageAccessAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.ClosureAsLastMethodParameterAstVisitor: boolean isNotIgnoredMethodName(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToMinusMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ClassNameSameAsSuperclassAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void addViolationForOperator(org.codehaus.groovy.ast.ASTNode,java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor$_visitConstructorOrMethod_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsStatelessServiceRule: boolean shouldIgnoreField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.report.ReportWriterFactory: org.codenarc.report.ReportWriter getReportWriter(java.lang.String,java.util.Map)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryReturnKeywordAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySelfAssignmentAstVisitor: boolean propertyExpressionsAreEqual(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_visitConstructorOrMethod_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ExplicitGarbageCollectionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfViolationsWithPriority_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.CodeNarc$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.exceptions.ExceptionExtendsErrorAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure19: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsAstVisitor$_visitMethodCallExpression_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.ComparisonOfTwoConstantsAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.imports.DuplicateImportRule$_applyTo_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor$_isEmpty_closure1$_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27: java.lang.Object call(org.codenarc.rule.Violation)>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor$_visitBlockStatement_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.logging.LoggerWithWrongModifiersAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementAstVisitor$_visitIfElse_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.size.CrapMetricRule: void <init>()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertyLockingAstVisitor: void <init>()>",
    "<org.codenarc.rule.formatting.SpaceAroundMapEntryColonAstVisitor: int columnIndexForColon(org.codehaus.groovy.ast.expr.MapEntryExpression)>",
    "<org.codenarc.rule.basic.ForLoopShouldBeWhileLoopAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor$_visitDeclarationExpression_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.EmptyForStatementAstVisitor: void visitForLoop(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.ant.CodeNarcTask: void <init>()>",
    "<org.codenarc.rule.groovyism.GStringAsMapKeyAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.AbstractFinallyAstVisitor: boolean isStatementWithinFinally(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor$_methodReturnsArray_closure1: java.lang.Boolean getReturnsArray()>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.concurrency.BusyWaitRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitLostTestRule: void <init>()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor$_extractTransients_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure14: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor$_processParameters_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor: boolean argumentsContainThis(org.codehaus.groovy.ast.expr.TupleExpression)>",
    "<org.codenarc.rule.jdbc.JdbcResultSetReferenceRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.design.NestedForLoopAstVisitor: void visitForLoop(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_generateAllPossibleParameterSignatures_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.CouldBeSwitchStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet: java.io.InputStream getSchemaXmlInputStream()>",
    "<org.codenarc.rule.dry.DryUtil: boolean haveTheSameListLiteralValue(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.design.BooleanMethodReturnsNullAstVisitor: boolean methodReturnsBoolean(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.generic.IllegalClassMemberAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.groovyism.ExplicitStackInstantiationRule: java.lang.Object this$dist$get$3(java.lang.String)>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: java.util.List getLines()>",
    "<org.codenarc.util.ImportUtil$_sourceLineAndNumberForStarImport_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceInsideParenthesesAstVisitor: boolean hasSpaceBeforeClosingParenthesis(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor$_visitMethodCallExpression_closure1: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.CyclomaticComplexityRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_writeReport_closure1: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.VirtualResults: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_containsKey_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.MovedRules: void <clinit>()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonAstVisitor$_removeAnyViolationsForSameLine_closure1: int getLineNumber()>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: boolean isMethodCallOnName(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.CodeNarc$_parseArgs_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.DuplicateMapKeyAstVisitor$_visitMapExpression_closure2: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_addClosureFields_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.PropertyNameRule: void <init>()>",
    "<org.codenarc.util.ImportUtil$_sortImportsByLineNumber_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.LineLengthRule: boolean sourceLineIsImport(java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitCatchStatement_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter: java.lang.String getFormattedTimestamp()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.logging.PrintlnAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.design.SimpleDateFormatMissingLocaleRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure18$_closure22: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.BracesForMethodAstVisitor$_joinThrowsLines_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.ruleset.RuleSets: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitLostTestAstVisitor: void visitClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4$_closure14: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor$_closureReturnsArray_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineViolation: void <init>()>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin: java.lang.String scrub(java.lang.String)>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitClassEx_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.convention.CompileStaticlVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.basic.ComparisonWithSelfAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.security.UnsafeImplementationAsMapAstVisitor: void visitCastExpression(org.codehaus.groovy.ast.expr.CastExpression)>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor$_processParameters_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.AssignmentToStaticFieldFromInstanceMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure26: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.serialization.SerializableClassMustDefineSerialVersionUIDAstVisitor$_visitClassEx_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.plugin.disablerules.DisableRulesInCommentsPlugin: boolean isViolationDisabled(org.codenarc.plugin.disablerules.LookupTable,org.codenarc.rule.Violation)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySetterRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ClassSizeAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.naming.AbstractClassNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.basic.EmptyForStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTernaryExpressionAstVisitor: void <clinit>()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure13: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.formatting.MissingBlankLineBeforeAnnotatedFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_getFileResults_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.BracesForClassRule: java.util.List findOpeningBraceLine(org.codenarc.source.SourceCode,org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.StubRule$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildProjectElement_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.AbstractRuleTestCase$_removeSuppressedViolations_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor$_visitConstructorOrMethod_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor: void visitMethodPointerExpression(org.codehaus.groovy.ast.expr.MethodPointerExpression)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor: boolean isSingleton(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.grails.GrailsDomainHasEqualsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ConfusingTernaryAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$ViolationAndPath: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.naming.PackageNameMatchesFilePathRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.comments.ClassJavadocRule$_applyTo_closure1: java.util.List getViolations()>",
    "<org.codenarc.rule.junit.JUnitAssertAlwaysFailsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.CatchIllegalMonitorStateExceptionRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitConstructorOrMethod_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryObjectReferencesAstVisitor$_visitBlockStatement_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: boolean isNotOpeningParenthesis(java.lang.String,int)>",
    "<org.codenarc.rule.design.ToStringReturnsNullAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonRule$_processImports_closure1: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_generateAllPossibleParameterSignatures_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: int columnForIndentLevel(int)>",
    "<org.codenarc.util.WildcardPattern$_matches_closure2: java.lang.String getString()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCatchBlockAstVisitor$_visitTryCatchFinally_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.ClassConstraintsAndMapping$_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.basic.HardCodedWindowsFileSeparatorAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.WildcardPattern$_matches_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildProjectElement_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.InterfaceNameSameAsSuperInterfaceAstVisitor$_visitClassEx_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInVariableDeclarationAstVisitor: void visitExpressionStatement(org.codehaus.groovy.ast.stmt.ExpressionStatement)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor: java.lang.String violationMessage(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.MissingBlankLineAfterPackageRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.size.CrapMetricRule: java.lang.Object createCrapMetric()>",
    "<org.codenarc.rule.exceptions.ThrowRuntimeExceptionRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor: void <init>()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_setupFlexibleIndentForAnyClosureParameterBlocks_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoDefAstVisitor$_visitParameters_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.StaticDateFormatFieldAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ConstantAssertExpressionAstVisitor: void visitAssertStatement(org.codehaus.groovy.ast.stmt.AssertStatement)>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer: java.util.List getSourceDirectories()>",
    "<org.codenarc.ruleset.RuleSetUtil: boolean isXmlFile(java.lang.String)>",
    "<org.codenarc.rule.design.ToStringReturnsNullRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitClosureExpression_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryObjectReferencesAstVisitor$_visitBlockStatement_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySelfAssignmentRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.SpockIgnoreRestUsedAstVisitor: void visitClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_processMethodOrConstructorCall_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.CodeNarcRunner$_applyPluginsProcessRules_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCatchBlockAstVisitor$_visitTryCatchFinally_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor$_methodReturnsCollection_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: java.lang.String getLine(int)>",
    "<org.codenarc.report.ReportWriterFactory$_getReportWriter_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.EmptyMethodInAbstractClassAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.junit.JUnitAssertAlwaysFailsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTernaryExpressionAstVisitor: boolean isOperationThatReturnsABoolean(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.ant.CodeNarcTask: org.apache.tools.ant.types.Path createClasspath()>",
    "<org.codenarc.rule.basic.EmptyCatchBlockAstVisitor: void visitCatchStatement(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.rule.formatting.MissingBlankLineBeforeAnnotatedFieldRuleAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_applyTo_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.ConsecutiveStringConcatenationAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.InlineXmlReportWriter: groovy.lang.Closure buildViolationElement(org.codenarc.rule.Violation)>",
    "<org.codenarc.rule.concurrency.ThreadGroupAstVisitor: boolean isConstructorNamed(org.codehaus.groovy.ast.expr.ConstructorCallExpression,java.lang.Class)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInMethodDeclarationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildViolationElement_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGetterAstVisitor: boolean isSpockMethod(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTernaryExpressionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitConstructorOrMethod_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.braces.IfStatementBracesAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_collectAllPrivateMethods_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: boolean isNotDollar(java.lang.String,int)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_getMethodCallsAndMapKeys_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildRulesElement_closure9: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.exceptions.MissingNewInThrowStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsAstVisitor$_visitMethodCallExpression_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter: groovy.lang.Closure buildProjectElement(org.codenarc.AnalysisContext)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: boolean isValidColumn(int)>",
    "<org.codenarc.rule.formatting.SpaceAfterClosingBraceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.NullReturnTracker: boolean expressionReturnsNull(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.results.FileResults$_getNumberOfFilesWithViolations_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.imports.DuplicateImportRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.InlineXmlReportWriter: groovy.lang.Closure buildDescriptionElement(org.codenarc.rule.Rule)>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTernaryExpressionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner$_applyPluginsProcessRules_closure3: java.util.List getRules()>",
    "<org.codenarc.rule.design.OptionalMethodParameterAstVisitor$_processParameters_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.FieldTypeRequiredAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.report.XmlReportWriter$_buildProjectElement_closure3$_closure11: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure2$_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.ConsecutiveBlankLinesRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule$_addOrderingViolations_closure1: java.lang.Boolean getNonStaticFound()>",
    "<org.codenarc.rule.generic.StatelessClassRule: void setAddToIgnoreFieldNames(java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$ViolationAndPath: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.formatting.SpaceBeforeClosingBraceAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: boolean methodExcluded(java.lang.String)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_getMethodCallsAndMapKeys_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_visitClassComplete_closure2: org.codehaus.groovy.ast.ClassNode getNode()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean hasElseBlock(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule: java.lang.Object this$dist$invoke$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ImportUtil$_getAllImports_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCallForLastElementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThreadGroupRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.LineLengthRule: boolean sourceLineIsPackage(java.lang.String)>",
    "<org.codenarc.rule.basic.DuplicateMapKeyRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsBlankLineAfterOpeningBrace_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DryUtil: boolean haveTheSameConstantPropertyExpression(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_flexibleCheckForCorrectColumn_closure12: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.RemoveAllOnSelfAstVisitor: int getArity(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySetterAstVisitor: void addUnnecessarySetterViolation(org.codehaus.groovy.ast.expr.MethodCallExpression,java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor$_methodReturnsCollection_closure1: java.lang.Boolean getReturnsCollection()>",
    "<org.codenarc.rule.formatting.SpaceAfterClosingBraceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyMethodAstVisitor$_visitMethod_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin: void initialize()>",
    "<org.codenarc.plugin.disablerules.LookupTable: void checkForCodeNarcDisable(java.lang.String)>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_collectAllPrivateFields_closure2$_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.GroovyDslRuleSet$_createGroovyShell_closure1: java.lang.Object doCall(groovy.lang.Closure)>",
    "<org.codenarc.util.io.ClassPathResource: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.AssignCollectionUniqueAstVisitor: boolean isChainedUnique(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.convention.VariableTypeRequiredAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_writeReport_closure1$_closure10: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.imports.UnusedImportRule: java.lang.String findReference(org.codenarc.source.SourceCode,java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonAstVisitor: void visitStatement(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19$_closure21: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.AbstractReportWriter: boolean isEnabled(org.codenarc.rule.Rule)>",
    "<org.codenarc.rule.convention.VectorIsObsoleteRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.formatting.SpaceAfterNotOperatorRuleAstVisitor: void visitNotExpression(org.codehaus.groovy.ast.expr.NotExpression)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitImports_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.CodeNarcVersion: java.lang.String readCodeNarcVersion()>",
    "<org.codenarc.source.SourceCodeCriteria: boolean matches(org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_addInitializedField_closure3: java.lang.String getVarName()>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor: boolean isIgnoredOneElementMap(org.codehaus.groovy.ast.expr.MapExpression)>",
    "<org.codenarc.report.InlineXmlReportWriter$_buildViolationElement_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitSynchronizedStatement_closure7: org.codehaus.groovy.ast.stmt.SynchronizedStatement getStatement()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryConstructorAstVisitor: boolean isEmptyConstructor(org.codehaus.groovy.ast.ConstructorNode)>",
    "<org.codenarc.rule.concurrency.WaitOutsideOfWhileLoopRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: void removeInitializedField(java.lang.String)>",
    "<org.codenarc.rule.comments.ClassJavadocRule$_applyTo_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateCodeNarcRulesProperties$_main_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceAstVisitor: boolean checkIsEmptyBlock(java.lang.String,int)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor: boolean methodReturnsArray(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.rule.basic.DuplicateMapKeyAstVisitor$_visitMapExpression_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean isOnlyAConstantOrLiteralExpression(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor$_visitMethodEx_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19$_closure21$_closure22: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_visitConstructorOrMethod_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.grails.GrailsDomainHasEqualsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.design.OptionalMethodParameterAstVisitor$_processParameters_closure1: java.lang.String getMethodName()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor: void handleClosure(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.basic.DuplicateCaseStatementAstVisitor$_visitSwitch_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.AbstractClassWithoutAbstractMethodAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.InlineViolationsParser: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_visitClassEx_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ParameterCountAstVisitor$_isOverridden_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryObjectReferencesAstVisitor: void <init>()>",
    "<org.codenarc.rule.formatting.SpaceBeforeClosingBraceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueRule: void <init>()>",
    "<org.codenarc.report.AbstractReportWriter: void <clinit>()>",
    "<org.codenarc.util.PathUtil: java.lang.String removeLeadingSlash(java.lang.String)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_addViolationOnMismatch_closure1: java.lang.String getSetterName()>",
    "<org.codenarc.rule.exceptions.ThrowErrorRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor: void visitCatchStatement(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.rule.braces.WhileStatementBracesAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor$_processParameters_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.CloneableWithoutCloneAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27$_closure28: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryTearDownRule: void <init>()>",
    "<org.codenarc.rule.dry.DryUtil: boolean areTheSameConstantOrLiteralMaps(org.codehaus.groovy.ast.expr.MapExpression,org.codehaus.groovy.ast.expr.MapExpression)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: void checkIfThereIsNotBlankLineAfterOpeningBrace(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.AbstractSpaceAroundBraceAstVisitor: java.lang.String sourceLineOrEmpty(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToAndMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitSynchronizedStatement_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToGetAtMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.FieldNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.InterfaceNameSameAsSuperInterfaceAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.EqualsOverloadedAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BracesForIfElseRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_visitDeclarationExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyCatchBlockAstVisitor: boolean doesContainIgnoreWord(java.lang.String)>",
    "<org.codenarc.rule.exceptions.CatchThrowableRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void visitForLoop(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.rule.groovyism.UseCollectNestedAstVisitor: org.codehaus.groovy.ast.expr.Expression getMethodCallParameterThatIsAClosure(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor: void visitMethodComplete(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryParenthesesForMethodCallWithClosureAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule$_applyTo_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllPackageSections_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure7: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ant.CodeNarcTask: void setClasspathRef(org.apache.tools.ant.types.Reference)>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ParameterReassignmentAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean isReturnTrue(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.size.ParameterCountAstVisitor: void checkParametersCount(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.basic.EqualsOverloadedRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInMethodDeclarationAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.concurrency.SynchronizedOnThisAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor: java.util.Set collectIncludedProperties(org.codehaus.groovy.ast.expr.MapExpression)>",
    "<org.codenarc.rule.design.BooleanReturnTracker: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateStringLiteralRule: groovy.lang.Closure defineAdditionalChecksClosure()>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule$_applyTo_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitForLoop_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.util.SourceCodeUtil: boolean containsOnlyAsciiCharacters(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInFieldDeclarationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.MethodSizeAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.rule.formatting.SpaceAroundClosureArrowAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter$_writeReportToFile_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTransientModifierAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassComplete_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitLostTestAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.formatting.BracesForIfElseAstVisitor: void visitElseOpeningBrace(org.codenarc.rule.formatting.BracesForIfElseRule,org.codehaus.groovy.ast.stmt.IfStatement,java.lang.String)>",
    "<org.codenarc.util.ImportUtil: java.util.List sortImportsByLineNumber(java.util.List,org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.convention.NoJavaUtilDateRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ModifiersUtil$_parseModifiers_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ParameterCountAstVisitor: boolean isOverridden(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.comments.JavadocConsecutiveEmptyLinesRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor: void processMethodOrConstructorCall(org.codehaus.groovy.ast.expr.MethodCall)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryFloatInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.SourceFile: java.lang.String getName()>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_collectAllPrivateFields_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.VariableTypeRequiredAstVisitor$_visitDeclarationExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.SimpleDateFormatMissingLocaleAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor: void addViolationIfDoubleQuoted(org.codehaus.groovy.ast.expr.ConstantExpression)>",
    "<org.codenarc.rule.naming.VariableNameAstVisitor: boolean hasFieldAnnotation(org.codehaus.groovy.ast.expr.DeclarationExpression)>",
    "<org.codenarc.rule.concurrency.SynchronizedReadObjectMethodAstVisitor$_isSerializable_closure1: java.lang.Boolean getIsSerializable()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySetterAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.ThrowRuntimeExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor$_isEmpty_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter: groovy.lang.Closure buildAllViolationsSection(org.codenarc.results.Results)>",
    "<org.codenarc.rule.dry.DuplicateNumberLiteralRule$_defineAdditionalChecksClosure_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClosureStatementOnOpeningLineOfMultipleLineClosureAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.ruleset.MovedRules: java.lang.String getMovedOrRenamedMessageForRuleName(java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27$_closure28: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitUtil: boolean isAssertCallWithValueMatching(org.codehaus.groovy.ast.expr.MethodCallExpression,java.lang.String,groovy.lang.Closure)>",
    "<org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter$_writePackageViolations_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.MethodReturnTypeRequiredAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBigDecimalInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildProjectElement_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalClassMemberRule: void setIllegalMethodModifiers(java.lang.String)>",
    "<org.codenarc.rule.exceptions.ThrowThrowableRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.MultipleUnaryOperatorsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UseAssertEqualsInsteadOfAssertTrueRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.RemoveAllOnSelfAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.CodeNarcRunner: void <init>()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.InvertedConditionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase: void testThatUnrelatedCodeHasNoViolations()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27$_closure28: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.AssertionTrap: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryObjectReferencesAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule$_addOrderingViolations_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceAfterWhileRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: void visitClassComplete(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.basic.EmptySynchronizedStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DryUtil: boolean areTheSameConstantOrLiteralLists(org.codehaus.groovy.ast.expr.ListExpression,org.codehaus.groovy.ast.expr.ListExpression)>",
    "<org.codenarc.rule.comments.JavadocEmptyFirstLineRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor: boolean expressionContainsBannedCharacters(org.codehaus.groovy.ast.expr.ConstantExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.formatting.AbstractSingleSpaceAfterKeywordAstVisitor: void checkForSingleSpaceAndOpeningParenthesis(org.codehaus.groovy.ast.ASTNode,java.lang.String)>",
    "<org.codenarc.rule.basic.DuplicateMapKeyAstVisitor$_visitMapExpression_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToGetAtMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.AbstractSpaceAroundBraceAstVisitor: boolean isNotInsideGString()>",
    "<org.codenarc.rule.formatting.TrailingWhitespaceRule$_applyTo_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.CompactTextReportWriter$_writeFileViolations_closure4: java.lang.String getFile()>",
    "<org.codenarc.rule.unnecessary.VariableUsageFinder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.FieldReferenceAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.logging.PrintStackTraceAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.design.LocaleSetDefaultAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.report.HtmlReportWriter: java.lang.String toString()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure6: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.source.SourceString: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_addInitializedField_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceAfterMethodCallNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ParameterNameRule: void <init>()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildProjectElement_closure3$_closure9$_closure10: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.exceptions.CatchNullPointerExceptionRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasState_closure1: org.codehaus.groovy.ast.ClassNode getClassNode()>",
    "<org.codenarc.rule.formatting.SpaceBeforeClosingBraceAstVisitor: boolean checkIsEmptyBlock(java.lang.String,int)>",
    "<org.codenarc.report.XmlReportWriter$_buildMessageElement_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.ImportFromSamePackageRule$_applyTo_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildCSS_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.serialization.EnumCustomSerializationIgnoredAstVisitor: boolean isWriteReplaceMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.ruleset.MovedRules$Renamed: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ImplicitReturnStatementAstVisitor: boolean isEmptyMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.groovyism.AssignCollectionUniqueAstVisitor: boolean isMatchingUniqueCall(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildProjectElement_closure3$_closure9: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12$_closure15: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.dry.DryUtil: boolean haveTheSameMapLiteralValue(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.ruleregistry.RuleRegistryInitializer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.AssertionTrap: boolean methodNamesCountsAsAssertion(java.lang.Object)>",
    "<org.codenarc.util.PathUtil: java.lang.String removePathPrefix(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertViolations(java.lang.String,java.util.Map[])>",
    "<org.codenarc.rule.junit.JUnitPublicFieldAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToRightShiftMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor$_visitCatchStatement_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void processElvisExpression(org.codehaus.groovy.ast.expr.ElvisOperatorExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInVariableDeclarationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitTestMethodWithoutAssertRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule: void this$dist$set$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.naming.PackageNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule$_applyTo_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.report.TextReportWriter: void writeTitle(java.io.Writer)>",
    "<org.codenarc.util.io.DefaultResourceFactory: org.codenarc.util.io.Resource getResource(java.lang.String)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalRule$_getViolations_closure1: org.codenarc.rule.AstVisitor getVisitor()>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfViolationsWithPriority_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.PackageNameMatchesFilePathRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarc: void <init>()>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor$_visitMethodEx_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.MovedRules$Renamed: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.basic.BitwiseOperatorInConditionalRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.BigDecimalInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure2$_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ToStringReturnsNullAstVisitor: void checkForImplicitNullReturns(org.codehaus.groovy.ast.MethodNode,java.lang.String)>",
    "<org.codenarc.util.ImportUtil$_sourceLineAndNumberForImport_closure1: java.lang.String getAlias()>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer$_processDirectory_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaRule: void <init>()>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin$_addFilesWithViolations_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.ReferenceCollector: void <init>()>",
    "<org.codenarc.rule.comments.AbstractJavadocEmptyTagRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.concurrency.NestedSynchronizationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.GroovyDslRuleSet: void <clinit>()>",
    "<org.codenarc.rule.serialization.EnumCustomSerializationIgnoredAstVisitor: boolean isPrivateStaticFinalField(org.codehaus.groovy.ast.FieldNode,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor: void suppressException(java.lang.Class,groovy.lang.Closure)>",
    "<org.codenarc.report.BaselineXmlReportParser: java.lang.String unescapeXml(java.lang.String)>",
    "<org.codenarc.CodeNarcRunner: java.lang.String buildCountsText(org.codenarc.results.Results)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_visitDeclarationExpression_closure1: org.codehaus.groovy.ast.expr.DeclarationExpression getDeclarationExpression()>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule$_applyTo_closure1: java.util.List getViolations()>",
    "<org.codenarc.rule.convention.IfStatementCouldBeTernaryAstVisitor: java.lang.String getReturnValue(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.util.io.ClassPathResource: boolean exists()>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.ruleset.TopLevelDelegate: void rule(java.lang.Class,java.util.Map)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_visitMethodEx_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.NullReturnTracker: void visitReturnStatement(org.codehaus.groovy.ast.stmt.ReturnStatement)>",
    "<org.codenarc.rule.design.BuilderMethodWithSideEffectsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.naming.ObjectOverrideMisspelledMethodNameAstVisitor: void checkForExactMethodName(org.codehaus.groovy.ast.MethodNode,java.lang.String,java.util.List,java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor$_visitMethodEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonRule$_processImports_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToPowerMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20: java.lang.Object doCall(org.codenarc.rule.Rule,java.lang.Object)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: java.lang.String getPath()>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor: boolean lastExpressionIsEndOfExpression(org.codehaus.groovy.ast.expr.ListExpression)>",
    "<org.codenarc.rule.grails.GrailsDuplicateMappingAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.ant.CodeNarcTask: void checkMaxViolations(org.codenarc.results.Results)>",
    "<org.codenarc.rule.imports.UnnecessaryGroovyImportRule$_applyTo_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure26: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitLostTestRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: boolean isChainedMethodCallOnDifferentLine(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitImports_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter: java.lang.String getRuleDescriptionOrDefaultMessage(org.codenarc.rule.Rule)>",
    "<org.codenarc.rule.generic.IllegalClassMemberRule: void setIllegalPropertyModifiers(java.lang.String)>",
    "<org.codenarc.util.io.UrlResource: boolean exists()>",
    "<org.codenarc.util.WildcardPattern$_convertStringWithWildcardsToRegex_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.comments.ClassJavadocRule$_applyTo_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPublicModifierAstVisitor: java.lang.String getDeclaration(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildCSS_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor: void visitVariableExpression(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void checkStatementIndent(org.codehaus.groovy.ast.stmt.Statement,org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.results.FileResults$_getNumberOfFilesWithViolations_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BlockEndsWithBlankLineAstVisitor: void addViolation(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer: void setRuleProperty(org.codenarc.rule.Rule,java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.basic.HardCodedWindowsFileSeparatorAstVisitor: void addViolationForWindowsSeparator(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.source.CustomCompilerPhaseSourceDecorator: java.lang.String toString()>",
    "<org.codenarc.rule.exceptions.CatchErrorRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_getViolations_closure1: java.lang.Object doCall(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor: boolean isMethodCall(org.codehaus.groovy.ast.expr.MethodCallExpression,java.lang.String)>",
    "<org.codenarc.rule.security.FileCreateTempFileAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.SynchronizedOnThisAstVisitor: void visitSynchronizedStatement(org.codehaus.groovy.ast.stmt.SynchronizedStatement)>",
    "<org.codenarc.rule.concurrency.StaticSimpleDateFormatFieldAstVisitor: boolean isSimpleDateFormatConstructorCall(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.MissingBlankLineBeforeAnnotatedFieldRuleAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterMethodDeclarationNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.PrintlnAstVisitor$_visitClassEx_closure1: java.lang.Object doCall(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.logging.PrintStackTraceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor$_visitCatchStatement_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.jdbc.JdbcResultSetReferenceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsAstVisitor$_visitMethodCallExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_uniqueAndSortedDeclaringClassNames_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.basic.EmptyFinallyBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.RuleSetUtil: void <clinit>()>",
    "<org.codenarc.tool.GenerateUtil: java.util.Properties getRuleExtraInformation()>",
    "<org.codenarc.rule.convention.NoDefAstVisitor$_visitDeclarationExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitLostTestAstVisitor$_visitClass_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.FileEndsWithoutNewlineRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_getViolations_closure1: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.concurrency.SynchronizedReadObjectMethodAstVisitor$_isSerializable_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.braces.ForStatementBracesAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: void checkTypeIfNotDynamicallyTyped(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin: void <clinit>()>",
    "<org.codenarc.rule.basic.DoubleNegativeAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.PrintlnAstVisitor$_visitClassEx_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ImportUtil$_sourceLineAndNumberForImport_closure1: java.lang.String getClassName()>",
    "<org.codenarc.util.ModifiersUtil: void <clinit>()>",
    "<org.codenarc.util.PathUtil: java.lang.String getName(java.lang.String)>",
    "<org.codenarc.rule.serialization.EnumCustomSerializationIgnoredAstVisitor: boolean isWriteObjectMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.groovyism.UseCollectNestedAstVisitor: void visitClassComplete(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.exceptions.CommonCatchAstVisitor: void visitCatchStatement(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsNotBlankLineAfterOpeningBrace_closure3: java.lang.Integer getClassStartLine()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitClosureExpression_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.concurrency.SynchronizedReadObjectMethodAstVisitor$_isSerializable_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterAstVisitor: void setRule(org.codenarc.rule.Rule)>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processImports_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.ClassReferenceAstVisitor: void <init>(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCallToSubstringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCallForLastElementAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.generic.StatelessClassRule: boolean matchesIgnoreFieldTypes(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToMinusMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.DuplicateSetValueRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ClosureAsLastMethodParameterAstVisitor: boolean isClosure(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_getMethodCallsAndMapKeys_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.imports.ImportFromSamePackageRule$_applyTo_closure1: java.util.List getViolations()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure11: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.basic.BrokenOddnessCheckRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.AbstractJavadocMissingDescriptionRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertTwoViolations_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.InlineViolationsParser$_parseLine_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.VolatileLongOrDoubleFieldVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.ruleset.RuleSetUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.BusyWaitAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.VirtualResults: java.util.List getViolations()>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckAstVisitor: boolean isMethodInvocation(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.rule.dry.DryUtil: boolean haveTheSameConstantValue(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.report.JsonReportWriter: boolean isWriteAsSingleLine()>",
    "<org.codenarc.plugin.FileViolations: java.lang.String toString()>",
    "<org.codenarc.report.TextReportWriter: void writeViolation(java.io.Writer,org.codenarc.rule.Violation,java.lang.String)>",
    "<org.codenarc.results.DirectoryResults: java.util.List getViolations()>",
    "<org.codenarc.rule.grails.GrailsPublicControllerMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToEqualsMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.StringSourceAnalyzer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor$_processParameters_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildMessageElement_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitPublicNonTestMethodRule: void <init>()>",
    "<org.codenarc.rule.design.CollectionReturnTracker$_expressionReturnsList_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueAstVisitor: void findViolations(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.security.UnsafeArrayDeclarationAstVisitor: boolean isPublicStaticFinal(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor$_visitConstructorOrMethod_closure2: org.codehaus.groovy.ast.MethodNode getNode()>",
    "<org.codenarc.source.AbstractSourceCode$_getLineNumberForCharacterIndex_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitSetUpCallsSuperRule: void <init>()>",
    "<org.codenarc.tool.GenerateRuleIndexPages: void generateIndexByNameFile(java.util.Map,int,java.util.Properties)>",
    "<org.codenarc.rule.imports.AbstractImportRule$_findLineNumberOfFirstClassDeclaration_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processStaticImports_closure2: java.lang.Object doCall(java.lang.Object,org.codehaus.groovy.ast.ImportNode)>",
    "<org.codenarc.CodeNarc$_parseArgs_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.concurrency.StaticConnectionAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.dry.DuplicateStringLiteralRule$_defineAdditionalChecksClosure_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor$_visitMethodCallExpression_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryOverridingMethodAstVisitor: boolean isSingleLineMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean isSingleStatementBlock(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.tool.GenerateCodeNarcRulesProperties: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UseAssertEqualsInsteadOfAssertTrueAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.ruleset.TopLevelDelegate: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportParser: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.CloneableWithoutCloneAstVisitor: boolean hasCloneMethod(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.ruleset.RuleSetUtil: boolean isJsonFile(java.lang.String)>",
    "<org.codenarc.results.DirectoryResults: int getNumberOfFilesWithViolations(int)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPublicModifierRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCallForLastElementAstVisitor: boolean isSubtractOneOnObject(java.lang.String,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor: void visitClassComplete(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolation_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryToStringAstVisitor: void visitDeclarationExpression(org.codehaus.groovy.ast.expr.DeclarationExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryLongInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsMassAssignmentAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_findMatchingSuperClassMethod_closure5: java.util.List getParameters()>",
    "<org.codenarc.rule.security.InsecureRandomAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildButtons_closure6$_closure30: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule: java.lang.Object this$dist$get$3(java.lang.String)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor: java.lang.String violationMessage(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.grails.GrailsStatelessServiceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstanceOfCheckAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySafeNavigationOperatorRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.JavadocEmptyLastLineRule: void <clinit>()>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_printRuleProcessingTimes_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceBeforeClosingBraceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.AbstractHtmlReportWriter: boolean isDirectoryContainingFilesWithViolations(org.codenarc.results.Results)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_getViolations_closure1$_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.JsonReportWriter: java.lang.Object[] buildRulesElement(org.codenarc.AnalysisContext)>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor: void <init>(java.lang.Class,java.util.Set,groovy.lang.Closure)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassEx_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.plugin.AbstractCodeNarcPlugin: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUnnecessarySetUpRule: void <init>()>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor$_visitMethodCallExpression_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.UseAssertSameInsteadOfAssertTrueAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.generic.IllegalClassMemberRule: void setAllowedMethodModifiers(java.lang.String)>",
    "<org.codenarc.source.AbstractSourceCode$_removeGrabTransformation_closure1$_closure3$_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalRule: java.util.List getViolations(org.codenarc.rule.AstVisitor,org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.design.CloneableWithoutCloneAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.CompactTextReportWriter$_writeFileViolations_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.FinalClassWithProtectedMemberAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryToStringAstVisitor: boolean isStringType(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.grails.GrailsDuplicateMappingRule: void <init>()>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor: boolean isExpressionUsedInAnnotation(org.codehaus.groovy.ast.expr.ConstantExpression,org.codehaus.groovy.ast.AnnotationNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCallForLastElementAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.naming.PackageNameMatchesFilePathRule: java.lang.String removeTrailingPeriod(java.lang.String)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14$_closure16: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor$_processParameters_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.RuleSetBuilder: void ruleset(groovy.lang.Closure)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: boolean isSingleLineClassViolation()>",
    "<org.codenarc.rule.convention.StaticFieldsBeforeInstanceFieldsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.design.AssignmentToStaticFieldFromInstanceMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildProjectElement_closure3$_closure9: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildProjectElement_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.BracesForTryCatchFinallyAstVisitor: void visitCatch(org.codenarc.rule.formatting.BracesForTryCatchFinallyRule,org.codehaus.groovy.ast.stmt.TryCatchStatement)>",
    "<org.codenarc.rule.security.UnsafeImplementationAsMapRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ComparisonWithSelfAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.plugin.disablerules.LookupTable: java.util.Set parseRuleNames(java.lang.String,java.lang.String)>",
    "<org.codenarc.CodeNarcRunner: void applyPluginsProcessViolationsForAllFiles(org.codenarc.results.Results)>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: int rightMostColumn(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor$_visitCatchStatement_closure2: java.lang.Object doCall(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.ruleset.FilteredRuleSet$_getRules_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BlockStartsWithBlankLineAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_setRuleProperties_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.serialization.SerialPersistentFieldsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_increaseIndentForClosureBlocks_closure5: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBigDecimalInstantiationAstVisitor: boolean shouldSkipViolation(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInVariableDeclarationAstVisitor: boolean contains(java.lang.String,java.lang.String)>",
    "<org.codenarc.report.XmlReportWriter$_buildSourceLineElement_closure7: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.XmlReportWriter: groovy.lang.Closure buildPackageElement(org.codenarc.results.Results)>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueAstVisitor: void visitStaticMethodCallExpression(org.codehaus.groovy.ast.expr.StaticMethodCallExpression)>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: boolean isBinaryExpressionWithMethodCallOnName(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.ruleset.RuleSetUtil: org.codenarc.ruleset.RuleSet loadRuleSetFile(java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceInsideParenthesesRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCatchBlockAstVisitor$_visitTryCatchFinally_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.CommonThrowAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor$_methodReturnsCollection_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor$_getParameterDefinitionAsString_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainHasToStringAstVisitor: boolean isNotInnerEnum(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.util.ImportUtil$_sourceLineAndNumberForImport_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.EmptyFinallyBlockAstVisitor: void visitTryCatchFinally(org.codehaus.groovy.ast.stmt.TryCatchStatement)>",
    "<org.codenarc.results.DirectoryResults: java.lang.String toString()>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor$_hasTrailingComma_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitSetUpCallsSuperAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.AnalyzerException: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter: boolean isWriteToStandardOut()>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule$_applyTo_closure2: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: boolean isPropertyAccessForName(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.rule.design.BooleanReturnTracker: boolean isNull(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.design.AbstractClassWithoutAbstractMethodAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryToStringAstVisitor$_visitGStringExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_visitConstructorOrMethod_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ModifiersUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.InlineViolationsParser$ParseResult: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitClosureExpression_closure8: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor$_isExpressionUsedInAnnotation_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3: java.lang.String getVarName()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void visitCatchStatement(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolations_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToModMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void visitCastExpression(org.codehaus.groovy.ast.expr.CastExpression)>",
    "<org.codenarc.report.XmlReportWriter: groovy.lang.Closure buildPackageElements(org.codenarc.results.Results)>",
    "<org.codenarc.rule.comments.JavadocConsecutiveEmptyLinesRule: void <clinit>()>",
    "<org.codenarc.report.HtmlReportWriter$_buildBodySection_closure1: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.ruleset.RuleSetBuilder: void <init>()>",
    "<org.codenarc.rule.formatting.LineLengthRule: boolean flagIfPackage(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGetterAstVisitor: void addUnnecessaryGetterViolation(org.codehaus.groovy.ast.expr.MethodCallExpression,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPublicModifierAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor$_getParameterDefinitionAsString_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure14: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.imports.ImportFromSamePackageRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.util.WildcardPattern: java.lang.String convertStringWithWildcardsToRegex(java.lang.String)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor: boolean isNotElementOfAnnotation(org.codehaus.groovy.ast.expr.ConstantExpression)>",
    "<org.codenarc.rule.convention.NoJavaUtilDateAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule: java.util.Map collectAllPrivateMethods(org.codehaus.groovy.ast.ModuleNode)>",
    "<org.codenarc.rule.security.ObjectFinalizeAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.braces.IfStatementBracesAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThreadGroupAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.plugin.disablerules.LookupTable: void setDisabledRulesByLine(int)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitClassComplete_closure5: java.lang.Object doCall(org.codehaus.groovy.ast.AnnotationNode)>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void checkMethodParameter(org.codehaus.groovy.ast.Parameter)>",
    "<org.codenarc.rule.formatting.SpaceAfterMethodCallNameRuleAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.results.DirectoryResults$_getTotalNumberOfFiles_closure5: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.ant.CodeNarcTask$_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.LongLiteralWithLowerCaseLAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_addViolationsForMultipleFieldDeclarations_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3$_closure4: java.lang.String getVarName()>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor$_visitCatchStatement_closure2: org.codehaus.groovy.ast.stmt.CatchStatement getStatement()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: void <init>()>",
    "<org.codenarc.rule.generic.RequiredRegexRule: boolean isReady()>",
    "<org.codenarc.report.InlineXmlReportWriter$_buildViolationElement_closure1$_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonRule: void checkLastLineForSemicolon(org.codenarc.source.SourceCode,java.util.List,org.codehaus.groovy.ast.AnnotatedNode)>",
    "<org.codenarc.report.ReportWriterFactory$_getReportWriter_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.DuplicateMapKeyAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.StaticCalendarFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.AbstractSpaceAroundBraceAstVisitor: boolean isNotWhitespace(java.lang.String,int)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor: void <init>(java.lang.Class,java.util.Set)>",
    "<org.codenarc.rule.formatting.BracesForClassRule$_applyTo_closure1: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.design.AssignmentToStaticFieldFromInstanceMethodAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.convention.MethodReturnTypeRequiredAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.design.CloneWithoutCloneableAstVisitor: boolean isCloneable(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.ruleset.JsonReaderRuleSet$_setRuleProperties_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor$_visitDeclarationExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.UseOfNotifyMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_getViolations_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateUtil$_createSortedListOfAllRules_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.jdbc.DirectConnectionManagementAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.grails.GrailsDomainHasToStringAstVisitor$_visitClassComplete_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainCantReferenceServiceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitPublicPropertyAstVisitor: boolean isIgnoredPropertyName(org.codehaus.groovy.ast.PropertyNode)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryToStringAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIntegerInstantiationAstVisitor: void <init>()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.source.AbstractSourceCode: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter: java.lang.String getHtmlRuleDescription(org.codenarc.rule.Rule)>",
    "<org.codenarc.rule.groovyism.ExplicitStackInstantiationRule$1: void <init>(org.codenarc.rule.groovyism.ExplicitStackInstantiationRule,java.lang.Object)>",
    "<org.codenarc.rule.basic.EqualsAndHashCodeAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UseAssertSameInsteadOfAssertTrueRule: void <init>()>",
    "<org.codenarc.rule.exceptions.ConfusingClassNamedExceptionAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.junit.JUnitPublicPropertyAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.formatting.BracesForIfElseAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure25: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor: void visitMethodComplete(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.CodeNarcRunner$_applyPluginsProcessViolationsForFile_closure5: org.codenarc.plugin.FileViolations getFileViolations()>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryObjectReferencesAstVisitor: void accumulateOrError(java.lang.String,org.codehaus.groovy.ast.stmt.ExpressionStatement)>",
    "<org.codenarc.rule.grails.ClassConstraintsAndMapping: void <init>()>",
    "<org.codenarc.ant.CodeNarcTask: org.codenarc.results.Results executeRunnerWithConfiguredClasspath(java.lang.Object)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitClosureExpression_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertViolation(org.codenarc.rule.Violation,java.lang.Integer,java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_processMethodOrConstructorCall_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameRule$_toSet_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner: void registerPlugin(org.codenarc.plugin.CodeNarcPlugin)>",
    "<org.codenarc.rule.exceptions.ExceptionExtendsThrowableRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30$_closure31: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule: java.util.List collectAllPrivateFields(org.codehaus.groovy.ast.ModuleNode)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasOneStaticFieldNamedInstance_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.RuleSets: void <clinit>()>",
    "<org.codenarc.rule.exceptions.ReturnNullFromCatchBlockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedArrayRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure19: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: void visitCastExpression(org.codehaus.groovy.ast.expr.CastExpression)>",
    "<org.codenarc.report.XmlReportUtil$_cdata_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationAstVisitor$_visitConstructorCallExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildButtons_closure6: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.ruleset.JsonReaderRuleSet$_setRuleProperties_closure2: org.codenarc.rule.Rule getRule()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertyLockingAstVisitor: boolean isWriteLocked(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure26: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.ConsecutiveBlankLinesRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitClassEx_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter: java.lang.String formatSourceLine(java.lang.String,int)>",
    "<org.codenarc.rule.formatting.SpaceAroundMapEntryColonAstVisitor: java.lang.String mapEntrySourceLine(org.codehaus.groovy.ast.expr.MapEntryExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryToStringAstVisitor$_visitGStringExpression_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure24: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure11$_closure13$_closure14: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.InlineViolationsParser: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<org.codenarc.rule.StubRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUtil$_isAssertCallWithConstantValue_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.results.DirectoryResults: int getNumberOfViolationsWithPriority(int,boolean)>",
    "<org.codenarc.rule.groovyism.ExplicitTypeInstantiationAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.basic.EqualsOverloadedAstVisitor: boolean onlyArgumentHasTypeObject(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19$_closure20: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: int firstNonWhitespaceColumn(java.lang.String)>",
    "<org.codenarc.rule.logging.PrintlnAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_addClosureFields_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_addViolationsForMultipleFieldDeclarations_closure7: java.lang.Object doCall(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalRule$_getViolations_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10$_closure11: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule$1: void <init>(org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule,java.lang.Object)>",
    "<org.codenarc.source.AbstractSourceCode$_getLineNumberForCharacterIndex_closure2: java.lang.Integer getLineCount()>",
    "<org.codenarc.rule.formatting.BracesForTryCatchFinallyAstVisitor$_visitCatch_closure1: org.codenarc.rule.formatting.BracesForTryCatchFinallyRule getMyRule()>",
    "<org.codenarc.rule.concurrency.StaticMatcherFieldAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.concurrency.VolatileArrayFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor$_visitBlockStatement_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyTryBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_flexibleCheckForCorrectColumn_closure12: java.lang.Integer getChainedMethodDotColumn()>",
    "<org.codenarc.report.CompactTextReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildViolationElement_closure6: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.NoJavaUtilDateAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: boolean isNamedLikeAConstant(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.report.SortableHtmlReportWriter: java.lang.String toString()>",
    "<org.codenarc.ruleset.XmlFileRuleSet$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.StatelessClassRule: boolean isReady()>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_visitConstructorOrMethod_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: java.lang.String parentPackageName(java.lang.String)>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllPackageSections_closure5$_closure17: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor: boolean isSubclass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.comments.AbstractJavadocEmptyTagRule: java.lang.String buildRegex()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.convention.ConfusingTernaryRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.AbstractSourceCode: java.lang.String line(int)>",
    "<org.codenarc.rule.convention.InvertedIfElseAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainHasEqualsAstVisitor$_visitClassComplete_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.basic.ParameterAssignmentInFilterClosureAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin: void removeMatchingViolation(java.util.List,org.codenarc.report.BaselineViolation)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure18: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.comments.JavadocEmptyAuthorTagRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_writeReport_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure19$_closure23: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCallForLastElementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.WildcardPattern$_convertStringWithWildcardsToRegex_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.util.SourceCodeUtil$_containsOnlyAsciiCharacters_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4$_closure13: org.codenarc.results.Results getResults()>",
    "<org.codenarc.util.io.DefaultResourceFactory: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.ConstructorsSkippingFieldReferenceAstVisitor: org.codehaus.groovy.ast.ASTNode getMethodContext()>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule$_addOrderingViolations_closure1: java.lang.Object doCall(int,java.lang.String)>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processImports_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GStringAsMapKeyAstVisitor: void visitMapEntryExpression(org.codehaus.groovy.ast.expr.MapEntryExpression)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_generateAllPossibleParameterSignatures_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintRule: void <init>()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySubstringAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.CompareToWithoutComparableRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_removeInitializedField_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.naming.ParameterNameAstVisitor: void processParameters(org.codehaus.groovy.ast.Parameter[],java.lang.String)>",
    "<org.codenarc.rule.convention.InvertedConditionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.InlineXmlReportWriter$_buildViolationElement_closure1$_closure3: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.formatting.BlockStartsWithBlankLineAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.AbstractSourceCode: int getLineNumberForCharacterIndex(int)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure4: org.codenarc.results.Results getResults()>",
    "<org.codenarc.CodeNarcRunner: void writeReports(org.codenarc.AnalysisContext,org.codenarc.results.Results)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: void visitIfElseThatIsTheLastStatementInABlock(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner: void registerPluginsForClassNames(java.lang.String)>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor$_visitConstructorOrMethod_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.ruleset.JsonFileRuleSet: void <clinit>()>",
    "<org.codenarc.rule.basic.EmptyCatchBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitSwitch_closure9: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.MultipleLoggersAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ParameterCountAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UseAssertFalseInsteadOfNegationRule: void <init>()>",
    "<org.codenarc.tool.GenerateRuleSetAllRulesByCategory: void main(java.lang.String[])>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor: boolean isOneLiner(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor$_methodReturnsArray_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.CompactTextReportWriter$_writeFileViolations_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor: void visitMapExpression(org.codehaus.groovy.ast.expr.MapExpression)>",
    "<org.codenarc.test.AbstractTestCase: void <init>()>",
    "<org.codenarc.rule.basic.ClassForNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.JavaIoPackageAccessRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_flexibleCheckForCorrectColumn_closure10: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.JsonReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.AddEmptyStringAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.basic.DuplicateSetValueAstVisitor$_visitCastExpression_closure1: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean isReturnFalse(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.junit.UseAssertFalseInsteadOfNegationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.EmptyMethodInAbstractClassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.WildcardPattern$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsServletContextReferenceRule: void <init>()>",
    "<org.codenarc.util.SourceCodeUtil: java.util.List sourceLinesBetween(org.codenarc.source.SourceCode,int,int,int,int)>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor$_visitMethodEx_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.DeadCodeAstVisitor$_visitBlockStatement_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertyLockingAstVisitor: void saveMethodInfo(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.IdeTextReportWriter: java.lang.String getViolationLocationString(org.codenarc.rule.Violation,java.lang.String)>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.AssignmentInConditionalAstVisitor: void addViolationIfAssignment(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.MultipleUnaryOperatorsAstVisitor: void checkForSecondUnaryOperator(org.codehaus.groovy.ast.expr.Expression,java.lang.Class)>",
    "<org.codenarc.rule.unused.UnusedArrayAstVisitor: void visitExpressionStatement(org.codehaus.groovy.ast.stmt.ExpressionStatement)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.junit.UnnecessaryFailRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor$_visitConstructorOrMethod_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor$_visitListExpression_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer: java.util.List collectViolations(org.codenarc.source.SourceCode,org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.rule.basic.HardCodedWindowsRootDirectoryRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitTypeInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_visitConstructorOrMethod_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCastAstVisitor: void <clinit>()>",
    "<org.codenarc.results.DirectoryResults: void <init>(java.lang.String,int)>",
    "<org.codenarc.rule.convention.FieldTypeRequiredAstVisitor: boolean isIgnoredFieldName(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.tool.GenerateCodeNarcRulesProperties$_main_closure1$_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementAstVisitor: boolean allBranchesReturn(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_visitConstructorOrMethod_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllSummaryByPackageRowsRecursively_closure3$_closure13: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitConstructorOrMethod_closure1: org.codehaus.groovy.ast.MethodNode getNode()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.AbstractRuleTestCase: void setUpAbstractRuleTestCase()>",
    "<org.codenarc.rule.junit.JUnitLostTestAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BracesForTryCatchFinallyAstVisitor$_visitCatch_closure1: java.lang.Object doCall(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.rule.logging.LogUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ConsecutiveUtils: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.braces.WhileStatementBracesAstVisitor: void visitWhileLoop(org.codehaus.groovy.ast.stmt.WhileStatement)>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.VariableTypeRequiredRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ClassSizeRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.AssignmentTracker: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.PrintlnAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_increaseIndentForClosureBlocks_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.EqualsAndHashCodeAstVisitor$_visitClassEx_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule$_addOrderingViolations_closure1: java.util.List getViolations()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27$_closure29: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ant.CodeNarcTask: void checkMaxViolationForPriority(int,int,java.lang.String)>",
    "<org.codenarc.ruleset.RuleSetDelegate$_methodMissing_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.SortableHtmlReportWriter: groovy.lang.Closure buildSummary(org.codenarc.results.Results)>",
    "<org.codenarc.rule.exceptions.MissingNewInThrowStatementAstVisitor: boolean looksLikeAnExceptionType(java.lang.String)>",
    "<org.codenarc.tool.GenerateRuleSetAllRules: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.GroovyDslRuleSet$_createGroovyShell_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10$_closure11$_closure12: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.basic.DuplicateSetValueAstVisitor$_visitCastExpression_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.SourceString: void setPath(java.lang.String)>",
    "<org.codenarc.rule.serialization.SerialVersionUIDAstVisitor: void visitProperty(org.codehaus.groovy.ast.PropertyNode)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin: void addFilesWithViolations(java.util.List,org.codenarc.results.Results)>",
    "<org.codenarc.rule.design.SimpleDateFormatMissingLocaleAstVisitor: boolean hasMinimumParameterCount(org.codehaus.groovy.ast.expr.ConstructorCallExpression,int)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckAstVisitor: boolean isNotNullCheckAgainstSuperReference(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.logging.LoggerForDifferentClassAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitMapExpression_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.grails.GrailsDomainHasToStringAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: boolean isExpressionAccessingMemberNamed(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.rule.InlineViolationsParser: org.codenarc.rule.InlineViolationsParser$ParseResult parse(java.lang.String)>",
    "<org.codenarc.rule.convention.CouldBeElvisRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.CloseWithoutCloseableAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: boolean isSingleLineClassViolation()>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionAstVisitor: void <clinit>()>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryStringInstantiationAstVisitor: boolean isConstructorCallAViolation(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.basic.EmptyCatchBlockAstVisitor: boolean isExceptionIgnored(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor$_argumentsContainThis_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.DeadCodeAstVisitor: boolean statementForcesMethodReturn(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_initializeImportNames_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.CouldBeSwitchStatementAstVisitor: java.lang.Boolean isSupportedLeftExpressionType(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.grails.GrailsDomainHasToStringRule: void <init>()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitMapExpression_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor: void <init>()>",
    "<org.codenarc.report.XmlReportWriter$_buildRulesElement_closure9$_closure19$_closure20: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_isAnnotatedWithOverride_closure6: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaRule$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.naming.PropertyNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ant.CodeNarcTask: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildRulesElement_closure9$_closure19$_closure20: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.CompactTextReportWriter$_writeFileViolations_closure4: java.io.Writer getWriter()>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner$_applyPluginsProcessViolationsForAllFiles_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintAstVisitor$_visitMethodCallExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainHasEqualsAstVisitor$_visitClassComplete_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryTearDownAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllPackageSections_closure5: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.junit.SpockIgnoreRestUsedRule: void <init>()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ToStringReturnsNullAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer: void processFile(java.lang.String,org.codenarc.results.DirectoryResults,org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.rule.exceptions.ExceptionExtendsThrowableAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.CloneableWithoutCloneAstVisitor$_visitClassEx_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.StaticFieldsBeforeInstanceFieldsAstVisitor: void visitClassComplete(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.ruleset.MovedRules: org.codenarc.ruleset.MovedRules$Renamed renamedTo(java.lang.String)>",
    "<org.codenarc.ruleset.RuleSetUtil: org.codenarc.rule.Rule loadRuleScriptFile(java.lang.String)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.report.XmlReportWriter$_buildFileElement_closure5$_closure16: org.codenarc.results.FileResults getResults()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_getViolations_closure1$_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitClassEx_closure4: org.codehaus.groovy.ast.ClassNode getNode()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure5$_closure13$_closure14: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_initializeImportNames_closure5: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: org.codehaus.groovy.ast.stmt.Statement getStatement(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonAstVisitor: void removeAnyViolationsForSameLine(int)>",
    "<org.codenarc.rule.FieldReferenceAstVisitor: java.util.Collection getUnreferencedFields()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryLongInstantiationAstVisitor: void <init>()>",
    "<org.codenarc.rule.AbstractAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.ant.CodeNarcTask$_classLoaderForPaths_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_getFirstValue_closure4: java.util.List getKeys()>",
    "<org.codenarc.report.XmlReportWriter$_writeReport_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.JUnitSetUpCallsSuperAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.design.CloneWithoutCloneableRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.DoubleCheckedLockingAstVisitor: java.lang.String getNullCheckVariableName(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.report.SortableHtmlReportWriter: java.util.List getFileResults(org.codenarc.results.Results,java.util.List)>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor: boolean isDoubleTypeName(java.lang.String)>",
    "<org.codenarc.rule.basic.DeadCodeAstVisitor$_visitBlockStatement_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.results.FileResults$_getNumberOfViolationsWithPriority_closure1: int getPriority()>",
    "<org.codenarc.rule.formatting.SpaceInsideParenthesesAstVisitor$_visitClassComplete_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.ruleset.XmlFileRuleSet$_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor: boolean checkAdditional(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.report.XmlReportWriter: groovy.lang.Closure buildSourceLineElement(org.codenarc.rule.Violation)>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfViolationsWithPriority_closure3: boolean getRecursive()>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertValidRegex(java.lang.String,java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure11$_closure13: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter: void writeReport(java.io.Writer,org.codenarc.AnalysisContext,org.codenarc.results.Results)>",
    "<org.codenarc.rule.unnecessary.ConsecutiveLiteralAppendsAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueAstVisitor: boolean isJUnitAssert(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.basic.AssertWithinFinallyBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processImports_closure1: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.basic.RemoveAllOnSelfRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor: void checkClass(org.gmetrics.result.ClassMetricResult,org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.source.CustomCompilerPhaseSourceDecorator: void <init>(org.codenarc.source.SourceCode,int)>",
    "<org.codenarc.tool.GenerateUtil: java.util.List createSortedListOfAllRules()>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: void processMethodNode(org.codehaus.groovy.ast.MethodNode,java.lang.String)>",
    "<org.codenarc.rule.basic.AssignmentTracker: boolean isPropertyOrSubPropertyOfVariableName(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.rule.junit.JUnitUtil: boolean isAssertCallWithLiteralValue(org.codehaus.groovy.ast.expr.MethodCallExpression,java.lang.String,boolean)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.naming.PackageNameMatchesFilePathRule: boolean isReady()>",
    "<org.codenarc.rule.junit.JUnitPublicPropertyAstVisitor: void visitProperty(org.codehaus.groovy.ast.PropertyNode)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsNotBlankLineAfterOpeningBrace_closure2: java.lang.Integer getClassStartLine()>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure6: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule: java.lang.Object this$dist$get$3(java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.PrintlnAstVisitor$_visitClassEx_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GStringAsMapKeyRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfFilesWithViolations_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor$_visitCastExpression_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.source.SourceString: void <init>(java.lang.String,java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryParenthesesForMethodCallWithClosureRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceInsideParenthesesAstVisitor: void processSourceLine(java.lang.String,int)>",
    "<org.codenarc.rule.generic.StatelessClassRule: boolean matchesIgnoreFieldNames(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaRule$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertInlineViolations(java.lang.String)>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: java.lang.String getName()>",
    "<org.codenarc.rule.basic.DeadCodeAstVisitor$_visitBlockStatement_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllSummaryByPackageRowsRecursively_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationToGetClassAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.FileResults$_getNumberOfViolationsWithPriority_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUtil$_isAssertCallWithNonNullConstantValue_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoJavaUtilDateAstVisitor$_visitImports_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter: void writeReport(java.io.Writer,org.codenarc.AnalysisContext,org.codenarc.results.Results)>",
    "<org.codenarc.rule.formatting.ClosureStatementOnOpeningLineOfMultipleLineClosureAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_writeReport_closure1$_closure8: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.junit.AssertionTrap$_methodNamesCountsAsAssertion_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildViolationElement_closure6$_closure15: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void registerConstructorCalls(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.design.ArrayReturnTracker: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule$1: void <init>(org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule,java.lang.Object)>",
    "<org.codenarc.ruleset.MovedRules$Renamed: java.lang.String messageFor(java.lang.String)>",
    "<org.codenarc.util.ModifiersUtil: int parseSingleModifier(java.lang.String)>",
    "<org.codenarc.ruleset.RuleSetDelegate$_findRule_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule: java.lang.Object this$dist$invoke$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_visitMethodEx_closure1: org.codehaus.groovy.ast.MethodNode getNode()>",
    "<org.codenarc.rule.formatting.MissingBlankLineAfterImportsRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor: void visitListExpression(org.codehaus.groovy.ast.expr.ListExpression)>",
    "<org.codenarc.tool.GenerateRuleIndexPages: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter: groovy.lang.Closure buildBodySection(org.codenarc.AnalysisContext,org.codenarc.results.Results)>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unnecessary.AddEmptyStringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ClassNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UseAssertTrueInsteadOfAssertEqualsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.CloneableWithoutCloneAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.junit.UseAssertSameInsteadOfAssertTrueRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGetterAstVisitor: void addViolationsIfGetter(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.AbstractConstructorCallAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDuplicateMappingAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_setupFlexibleIndentForAnyClosureParameterBlocks_closure6: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.plugin.FileViolations: void <init>(org.codenarc.results.FileResults)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameRule$_toSet_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.results.FileResults: int getNumberOfViolationsWithPriority(int)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure13: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor: boolean hasOneStaticFieldOfItself(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.grails.GrailsMassAssignmentAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.CodeNarcRunner$_writeReports_closure8: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.ConfusingTernaryAstVisitor: void addViolationForNotExpression(org.codehaus.groovy.ast.expr.TernaryExpression,org.codehaus.groovy.ast.expr.NotExpression)>",
    "<org.codenarc.rule.groovyism.UseCollectNestedAstVisitor: void <init>()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildButtons_closure6$_closure30: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.util.io.UrlResource: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalClassMemberRule: void setAllowedFieldModifiers(java.lang.String)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildViolationElement_closure6: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.JUnitUtil$_isAssertCallWithNonNullConstantValue_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyStaticInitializerAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule$_applyTo_closure2: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.InlineViolationsParser$ParseResult: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.logging.SystemErrPrintRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.plugin.disablerules.LookupTable: void <clinit>()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_flexibleCheckForCorrectColumn_closure13: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectionCallAstVisitor: void <clinit>()>",
    "<org.codenarc.util.ImportUtil: java.util.List getNonStaticImportsSortedByLineNumber(org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.security.NonFinalPublicFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.TopLevelDelegate: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.basic.EmptyElseBlockAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.AbstractRuleTestCase$_removeSuppressedViolations_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor: boolean hasSingletonAnnotation(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.size.MethodSizeAstVisitor: boolean isIgnoredMethodName(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeRule: void <init>()>",
    "<org.codenarc.rule.serialization.EnumCustomSerializationIgnoredAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryConstructorAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.util.WildcardPattern$_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure2$_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter: void writeFooter(java.io.Writer)>",
    "<org.codenarc.rule.basic.EmptyForStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner: void applyPluginsProcessViolationsForFile(org.codenarc.results.FileResults)>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility: org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility valueOf(java.lang.String)>",
    "<org.codenarc.rule.design.CloseWithoutCloseableAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryStringInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.InlineViolationsParser$_parseLine_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ComparisonOfTwoConstantsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitPublicNonTestMethodRule: void setIgnoreMethodsWithAnnotations(java.lang.String)>",
    "<org.codenarc.ruleset.JsonFileRuleSet$_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14$_closure16: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4: org.codenarc.results.Results getResults()>",
    "<org.codenarc.report.HtmlReportWriter$_buildBodySection_closure1$_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter: boolean isRoot(org.codenarc.results.Results)>",
    "<org.codenarc.rule.convention.NoDefRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.serialization.SerializableClassMustDefineSerialVersionUIDAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.tool.GenerateRuleSetAllRules: void main(java.lang.String[])>",
    "<org.codenarc.rule.concurrency.SynchronizedMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleregistry.PropertiesFileRuleRegistry: void <clinit>()>",
    "<org.codenarc.rule.naming.ClassNameSameAsFilenameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_writeReport_closure1$_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.VolatileArrayFieldAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_findRule_closure3: java.lang.String getName()>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitClassEx_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.comments.ClassJavadocRule$_applyTo_closure1: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.junit.JUnitFailWithoutMessageRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ParameterCountAstVisitor$_isOverridden_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.NoJavaUtilDateAstVisitor: void visitImports(org.codehaus.groovy.ast.ModuleNode)>",
    "<org.codenarc.rule.convention.NoDefAstVisitor$_visitParameters_closure2: java.lang.Object doCall(org.codehaus.groovy.ast.Parameter)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySelfAssignmentAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.basic.DuplicateCaseStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.OptionalCollectionReturnTypeAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14$_closure15: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor: void addViolationWithMessage(org.codehaus.groovy.ast.expr.MethodCallExpression,org.codehaus.groovy.ast.expr.PropertyExpression)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: boolean isMatchingField(org.codehaus.groovy.ast.FieldNode,java.lang.String)>",
    "<org.codenarc.rule.convention.IfStatementCouldBeTernaryAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.CodeNarcRunner$_writeReports_closure7: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.basic.EqualsAndHashCodeAstVisitor$_visitClassEx_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin$_addFilesWithViolations_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer: org.codenarc.results.Results analyze(org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.rule.ClassReferenceAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.security.InsecureRandomRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase: java.lang.String inlineViolation(java.lang.String)>",
    "<org.codenarc.rule.convention.HashtableIsObsoleteRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.InstanceofAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.basic.DuplicateSetValueAstVisitor: boolean isDuplicate(org.codehaus.groovy.ast.expr.Expression,java.util.List)>",
    "<org.codenarc.rule.basic.EmptyClassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarc$__clinit__closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ThrowExceptionFromFinallyBlockAstVisitor: void visitThrowStatement(org.codehaus.groovy.ast.stmt.ThrowStatement)>",
    "<org.codenarc.rule.InlineViolationsParser: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThreadYieldAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.basic.EmptyMethodAstVisitor$_visitMethod_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: void visitVariableExpression(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.rule.junit.CoupledTestCaseAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: java.util.Collection interfaceMethods(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.JsonReportWriter: java.util.Map buildFileElement(org.codenarc.results.FileResults)>",
    "<org.codenarc.report.XmlReportUtil$_cdata_closure1: java.lang.String getText()>",
    "<org.codenarc.rule.basic.ThrowExceptionFromFinallyBlockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyStaticInitializerRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter$_getSortedRules_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.JsonReportWriter: java.util.Map buildViolationElement(org.codenarc.rule.Violation)>",
    "<org.codenarc.rule.junit.UseAssertNullInsteadOfAssertEqualsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalClassMemberAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.concurrency.NestedSynchronizationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30$_closure32: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitSwitch_closure9: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.SpockIgnoreRestUsedAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21: org.codenarc.rule.Rule getRule()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitListExpression_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.report.XmlReportWriter: void writeReport(java.io.Writer,org.codenarc.AnalysisContext,org.codenarc.results.Results)>",
    "<org.codenarc.util.CodeNarcVersion: void <clinit>()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure11: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void <init>()>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_findRule_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.BusyWaitAstVisitor: void addViolationIfBusyWait(org.codehaus.groovy.ast.stmt.LoopingStatement)>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_collectAllPrivateFields_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitBlockStatement_closure8: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTernaryExpressionAstVisitor: boolean areBothTheSame(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.concurrency.StaticDateFormatFieldAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: boolean isGetterUnsynchronizedAndSetterSychronized(java.util.List,java.lang.String)>",
    "<org.codenarc.rule.convention.PublicMethodsBeforeNonPublicMethodsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.junit.CoupledTestCaseAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitClassComplete_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.InlineViolationsParser: java.lang.String unescape(java.lang.String)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToEqualsMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_getViolations_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToMultiplyMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.SwallowThreadDeathAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonRule$_processImports_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceAfterElseAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter: java.util.Map buildSummaryElement(org.codenarc.results.Results)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.groovyism.UseCollectManyAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void visitWhileLoop(org.codehaus.groovy.ast.stmt.WhileStatement)>",
    "<org.codenarc.ruleset.MovedRules$Renamed: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.concurrency.StaticCalendarFieldAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsPublicControllerMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitClassEx_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure19$_closure23: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.AssignCollectionSortRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase: org.codenarc.source.SourceCode prepareSourceCode(java.lang.String)>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_applyTo_closure2: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.ruleset.FilteredRuleSet: java.util.List getRules()>",
    "<org.codenarc.rule.comments.JavadocEmptyLastLineRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateUtil: java.util.List sortRules(java.util.List)>",
    "<org.codenarc.rule.convention.PublicMethodsBeforeNonPublicMethodsAstVisitor: void visitMethodComplete(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.basic.EmptySynchronizedStatementAstVisitor: void visitSynchronizedStatement(org.codehaus.groovy.ast.stmt.SynchronizedStatement)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor$_expressionContainsBannedCharacters_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceBeforeClosingBraceAstVisitor: void processMethodNode(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.formatting.SpaceAfterClosingBraceAstVisitor: void addClosingBraceViolation(org.codehaus.groovy.ast.ASTNode,java.lang.String)>",
    "<org.codenarc.rule.Violation: java.lang.String toString()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildProjectElement_closure3$_closure9: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: org.codehaus.groovy.ast.MethodNode getFirstValue(java.util.Map,java.util.List)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor$_visitConstantExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ParameterReassignmentAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.InterfaceNameSameAsSuperInterfaceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.exceptions.CatchIndexOutOfBoundsExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.TrailingCommaRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildLogo_closure6: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor$_processParameters_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure11$_closure13: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule$_applyTo_closure1: java.lang.Object doCall(org.codehaus.groovy.ast.ImportNode)>",
    "<org.codenarc.rule.imports.DuplicateImportRule$_applyTo_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.imports.UnusedImportRule: void processImports(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleScriptElements_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySetterAstVisitor: boolean isSuperCall(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.BlockEndsWithBlankLineAstVisitor: void checkForViolations(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor$_visitConstantExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.TopLevelDelegate: void <init>()>",
    "<org.codenarc.rule.junit.JUnitPublicNonTestMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.LoggerWithWrongModifiersAstVisitor: void addViolationForField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.UseCollectNestedRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConstantExpressionExtractor: java.util.List extractFrom(org.codehaus.groovy.ast.AnnotationNode)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassComplete_closure5: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.naming.AbstractTypeNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ReturnFromFinallyBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarc$_execute_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.InsecureRandomAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter: java.lang.String buildTitle()>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin$_removeMatchingViolation_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.JUnitLostTestAstVisitor$_visitClass_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitClosureExpression_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectIncludedProperties_closure8: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin$_addFilesWithViolations_closure3: java.util.List getMap()>",
    "<org.codenarc.results.FileResults: org.codenarc.results.Results findResultsForPath(java.lang.String)>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BlockStartsWithBlankLineRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertViolation(org.codenarc.rule.Violation,java.lang.Integer,java.lang.String)>",
    "<org.codenarc.rule.exceptions.ThrowExceptionRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.naming.AbstractClassNameAstVisitor: boolean shouldVisit(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: void visitVariableExpression(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor$_visitConstructorOrMethod_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19$_closure21$_closure22: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBigIntegerInstantiationAstVisitor: void <init>()>",
    "<org.codenarc.source.SourceCodeCriteria: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BracesForIfElseAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_setRuleProperties_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.ComparisonOfTwoConstantsAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleScriptElements_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.JavadocConsecutiveEmptyLinesRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.logging.MultipleLoggersAstVisitor: void <init>()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildButtons_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_getViolations_closure1: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_getMethodCallsAndMapKeys_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.StaticDateFormatFieldAstVisitor: boolean isDateFormatFactoryMethodCall(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryObjectReferencesAstVisitor$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGetterAstVisitor: boolean isMatchingGetterMethodName(java.lang.String)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildCSS_closure2$_closure9: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfFilesWithViolations_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_findSuperClassMethods_closure7: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure19: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCastAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: boolean isNotDollarInsideGString(java.lang.String,int)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor$_methodReturnsArray_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure5$_closure13$_closure14: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceAstVisitor: void visitMapEntryExpression(org.codehaus.groovy.ast.expr.MapEntryExpression)>",
    "<org.codenarc.rule.security.NonFinalPublicFieldAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule: org.codenarc.rule.AstVisitor getAstVisitor(org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.AssignmentToStaticFieldFromInstanceMethodAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure29: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateNumberLiteralRule$_defineAdditionalChecksClosure_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.basic.HardCodedWindowsFileSeparatorAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.UnnecessaryFailAstVisitor$_visitCatchStatement_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllPackageSections_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.io.UrlResource: java.io.InputStream getInputStream()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildScript_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_writeReport_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.DoubleNegativeAstVisitor: void visitNotExpression(org.codehaus.groovy.ast.expr.NotExpression)>",
    "<org.codenarc.rule.groovyism.AssignCollectionSortAstVisitor: void visitDeclarationExpression(org.codehaus.groovy.ast.expr.DeclarationExpression)>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor$_visitArgumentlistExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void checkAssignmentWithinString(org.codehaus.groovy.ast.ASTNode,java.lang.String)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: void addInitializedField(java.lang.String)>",
    "<org.codenarc.report.BaselineViolation: java.lang.String toString()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12$_closure15$_closure16: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryObjectReferencesRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults$_getViolations_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.IndentationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_removeInitializedField_closure5: java.lang.String getVarName()>",
    "<org.codenarc.rule.generic.IllegalStringRule: boolean isReady()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor: void <init>()>",
    "<org.codenarc.ant.Report: void <init>()>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule$_applyTo_closure1: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.imports.UnusedImportRule$_findReference_closure3: java.lang.String getClassName()>",
    "<org.codenarc.plugin.disablerules.DisableRulesInCommentsPlugin: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.braces.ElseBlockBracesAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ModifiersUtil$_parseModifiers_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.BlockEndsWithBlankLineAstVisitor: void visitTryCatchFinally(org.codehaus.groovy.ast.stmt.TryCatchStatement)>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_visitConstructorOrMethod_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.CompareToWithoutComparableAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryFinalOnPrivateMethodAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.junit.JUnitUtil: boolean isTestMethod(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.ruleset.JsonReaderRuleSet$_loadRuleElements_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.naming.ConfusingMethodNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_findMatchingSuperClassMethod_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.InlineViolationsParser$ParseResult: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.generic.IllegalClassMemberRule: void setAllowedPropertyModifiers(java.lang.String)>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule: void this$dist$set$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.convention.NoDoubleRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.SourceFile: java.lang.String getText()>",
    "<org.codenarc.ruleset.MovedRules: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure18$_closure22: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertTwoViolations(java.lang.String,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.String)>",
    "<org.codenarc.rule.unused.UnusedObjectRule: void <init>()>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: void checkType(java.lang.String,org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: int indentLevelFromColumn(int)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitBlockStatement_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitTestMethodWithoutAssertRule: void <init>()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14: boolean getAllPackages()>",
    "<org.codenarc.report.TextReportWriter: void writeSummary(java.io.Writer,org.codenarc.results.Results)>",
    "<org.codenarc.results.DirectoryResults: void removeViolation(org.codenarc.rule.Violation)>",
    "<org.codenarc.rule.basic.EmptyTryBlockAstVisitor: void visitTryCatchFinally(org.codehaus.groovy.ast.stmt.TryCatchStatement)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_flexibleCheckForCorrectColumn_closure13: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsRule: java.lang.String getGormStaticMethodsNames()>",
    "<org.codenarc.rule.basic.ExplicitGarbageCollectionAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.ruleset.RuleSetUtil$_loadRuleScriptFile_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.VectorIsObsoleteRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.AbstractSourceCode: void logCompilationError(java.lang.Throwable)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasOneStaticFieldOfItself_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_findSuperClassMethods_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10$_closure11$_closure12: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule$_applyTo_closure2: java.util.List getViolations()>",
    "<org.codenarc.rule.basic.BrokenOddnessCheckAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.IfStatementCouldBeTernaryRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassComplete_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.basic.BigDecimalInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.InterfaceNameRule: boolean isReady()>",
    "<org.codenarc.rule.basic.EmptyElseBlockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptySwitchStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3$_closure4: org.codehaus.groovy.ast.expr.VariableExpression getVarExpression()>",
    "<org.codenarc.rule.comments.JavadocEmptyExceptionTagRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.CouldBeSwitchStatementAstVisitor: void checkIfStatementCanBeSwitch(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor: boolean isPossibleViolation(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_printRuleProcessingTimes_closure5: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor$_isUsedInAnyAnnotationOnCurrentAnnotatedNode_closure1: org.codehaus.groovy.ast.expr.ConstantExpression getConstantExpression()>",
    "<org.codenarc.report.XmlReportWriter$_writeReport_closure1: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.dry.DuplicateNumberLiteralRule: groovy.lang.Closure defineAdditionalChecksClosure()>",
    "<org.codenarc.rule.formatting.BracesForClassRule: boolean definesAnnotationType(java.lang.String)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void visitSynchronizedStatement(org.codehaus.groovy.ast.stmt.SynchronizedStatement)>",
    "<org.codenarc.rule.formatting.IndentationRule: void <init>()>",
    "<org.codenarc.rule.unused.AbstractLastStatementInBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor$_processParameters_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.ruleregistry.RuleRegistryHolder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.SpockIgnoreRestUsedAstVisitor$_visitMethod_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.AbstractReportWriter: void writeReportToFile(org.codenarc.AnalysisContext,org.codenarc.results.Results)>",
    "<org.codenarc.tool.GenerateRuleIndexPages$_main_closure2$_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasSingletonAnnotation_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.ruleset.RuleSetDelegate: void <init>(org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_visitClassEx_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitStackInstantiationRule: java.lang.Object this$dist$invoke$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule: void this$dist$set$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_flexibleCheckForCorrectColumn_closure12: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.JavadocEmptySeeTagRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintAstVisitor: java.util.Collection extractImportedConstraints(java.lang.String)>",
    "<org.codenarc.rule.basic.ParameterAssignmentInFilterClosureAstVisitor: java.util.List createParameterNameList(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.concurrency.ThreadGroupAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.NonFinalPublicFieldAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.report.AbstractReportWriter: java.lang.String getDescriptionForRule(org.codenarc.rule.Rule)>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin$_removeMatchingViolation_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure24: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.AbstractReportWriter$_getSortedRules_closure5: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.basic.AbstractFinallyAstVisitor$_isStatementWithinFinally_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.util.ImportUtil: java.lang.String packageNameForImport(org.codehaus.groovy.ast.ImportNode)>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor$_visitMethodEx_closure1: java.lang.String getMethodName()>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: void checkIfThereIsNotBlankLineBeforeClosingBrace(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.naming.VariableNameAstVisitor$_visitDeclarationExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_writeReport_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitBlockStatement_closure8: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInMethodDeclarationAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.rule.concurrency.SynchronizedReadObjectMethodAstVisitor$_isSerializable_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.BooleanMethodReturnsNullAstVisitor: void handleClosure(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: boolean containsKey(java.util.Map,java.util.List)>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor: void visitDeclarationExpression(org.codehaus.groovy.ast.expr.DeclarationExpression)>",
    "<org.codenarc.rule.size.MethodSizeRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.ConsecutiveLiteralAppendsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalRule$_getViolations_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void flexibleCheckForCorrectColumn(org.codehaus.groovy.ast.ASTNode,java.lang.String,org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.rule.design.EmptyMethodInAbstractClassAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor: boolean isProcessingAnnotatedNode()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor$_visitConstructorOrMethod_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedObjectAstVisitor: void visitExpressionStatement(org.codehaus.groovy.ast.stmt.ExpressionStatement)>",
    "<org.codenarc.ruleset.JsonReaderRuleSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.serialization.SerializableClassMustDefineSerialVersionUIDAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.formatting.BracesForClassRule$_applyTo_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.security.PublicFinalizeMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildViolationElement_closure6: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.ThreadGroupAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.report.SortableHtmlReportWriter$ViolationAndPath: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: void visitIfElseThatIsNotTheLastStatementInABlock(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.basic.EmptyIfStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitTestMethodWithoutAssertAstVisitor: boolean checksTimeout(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.junit.JUnitFailWithoutMessageRuleAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter$_buildPackageElements_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToMultiplyMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_getFileResults_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.AbstractSpaceAroundBraceAstVisitor: boolean isNotCharacter(java.lang.String,char,int)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_visitConstructorOrMethod_closure3: org.codehaus.groovy.ast.MethodNode getNode()>",
    "<org.codenarc.rule.logging.SystemErrPrintAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.ImportFromSamePackageRule$_applyTo_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: java.lang.String uniqueAndSortedDeclaringClassNames(java.util.Collection)>",
    "<org.codenarc.rule.naming.ConfusingMethodNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: java.lang.String getLastLine(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToMethodAstVisitor: void safelyAddViolation(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule$_applyTo_closure2: java.lang.Object doCall(java.lang.String,org.codehaus.groovy.ast.ImportNode)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_visitClassComplete_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure4$_closure12: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor$_expressionContainsBannedCharacters_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.ImplicitReturnStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure26: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.ConsecutiveStringConcatenationAstVisitor: boolean isJoinableType(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitImports_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToGetAtMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.serialization.SerializableClassMustDefineSerialVersionUIDRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure5: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.dry.DuplicateListLiteralRule: void <init>()>",
    "<org.codenarc.report.JsonReportWriter$_buildFileElement_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.SourceString: java.lang.String toString()>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility: org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility next()>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: void <init>()>",
    "<org.codenarc.rule.basic.BitwiseOperatorInConditionalAstVisitor: java.util.List collectChildren(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.logging.PrintlnRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ComparisonWithSelfAstVisitor: void addViolationIfBothAreTheSameVariable(org.codehaus.groovy.ast.ASTNode,org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor$_visitMethodCallExpression_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: boolean isComparisonWithNull(org.codehaus.groovy.ast.expr.BinaryExpression,java.lang.String)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor$_extractTransients_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitTestMethodWithoutAssertAstVisitor: boolean statementContainsAssertions(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.CompactTextReportWriter$_writeFileViolations_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.CompositeRuleSet: java.util.List getRules()>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure3$_closure7: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.util.PathUtil: java.lang.String getParentPath(java.lang.String)>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility: org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility previous()>",
    "<org.codenarc.rule.formatting.BracesForForLoopAstVisitor: void visitForLoop(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.rule.design.OptionalCollectionReturnTypeAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.ruleset.TopLevelDelegate: void ruleset(java.lang.String,groovy.lang.Closure)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: void <init>()>",
    "<org.codenarc.ruleset.MovedRules: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.basic.BooleanGetBooleanAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.generic.IllegalClassMemberRule: void setIllegalFieldModifiers(java.lang.String)>",
    "<org.codenarc.rule.design.AssignmentToStaticFieldFromInstanceMethodAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.formatting.BracesForMethodAstVisitor: boolean isMultilineWithOpeningBraceInNewLine(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.dry.DuplicateStringLiteralRule$_defineAdditionalChecksClosure_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ClassForNameAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.ConstantExpressionExtractor: java.util.List extractFromExpression(org.codehaus.groovy.ast.expr.AnnotationConstantExpression)>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterAstVisitor$_hasItParameter_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_initializeImportNames_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.RuleSetUtil: void assertClassImplementsRuleInterface(java.lang.Class)>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor: void visitMapExpression(org.codehaus.groovy.ast.expr.MapExpression)>",
    "<org.codenarc.results.DirectoryResults: org.codenarc.results.Results findResultsForPath(java.lang.String)>",
    "<org.codenarc.rule.naming.PropertyNameRule: void validate()>",
    "<org.codenarc.rule.logging.LoggerForDifferentClassAstVisitor: boolean isEqualToCurrentClass(java.lang.String,java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter: void this$dist$set$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainHasToStringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.FileCreateTempFileRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.JavadocMissingExceptionDescriptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.ConsecutiveStringConcatenationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner$_writeReports_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.AbstractTypeNameAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.ruleset.MovedRules$MovedToRuleSet: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsRule: void <init>()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.BracesForMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: void <init>()>",
    "<org.codenarc.ruleset.GroovyDslRuleSet$_evaluateDsl_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitStackInstantiationRule: void this$dist$set$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildBodySection_closure2: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_flexibleCheckForCorrectColumn_closure10: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySafeNavigationOperatorAstVisitor: void checkExpression(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.formatting.BracesForMethodAstVisitor: boolean hasOpeningBraceOnSameLine(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor: boolean isThisExpression(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.formatting.AbstractSpaceAroundBraceAstVisitor: void <init>()>",
    "<org.codenarc.report.AbstractReportWriter$_writeReportToFile_closure3: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.junit.ChainedTestRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.FilteredRuleSet$_getRules_closure1$_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.MathRandomTracker: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.PackageNameMatchesFilePathRule: java.lang.String mismatchMessage(java.lang.String)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_addViolationOnMismatch_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.IntegerGetIntegerAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor: boolean hasState(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.util.ImportUtil$_sourceLineAndNumberForImport_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor: void this$dist$set$4(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter: groovy.lang.Closure buildRulesElement(org.codenarc.AnalysisContext)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckAstVisitor: boolean isNullCheckAgainstSuperReference(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.design.CloneWithoutCloneableAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ParameterCountRule: void setMaxParameters(int)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30$_closure31: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.rule.convention.InvertedIfElseAstVisitor: void dispatchToIfWithoutSuper(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.report.HtmlReportWriter: groovy.lang.Closure buildBodySection(org.codenarc.AnalysisContext,org.codenarc.results.Results)>",
    "<org.codenarc.rule.convention.VariableTypeRequiredAstVisitor: void visitDeclarationExpression(org.codehaus.groovy.ast.expr.DeclarationExpression)>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: int leftMostColumn(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitClosureExpression_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitClosureExpression_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter: groovy.lang.Closure buildFileElements(org.codenarc.results.Results)>",
    "<org.codenarc.rule.comments.JavadocEmptyThrowsTagRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ConstantTernaryExpressionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.FileResults: int getNumberOfFilesWithViolations(int)>",
    "<org.codenarc.rule.serialization.SerializableClassMustDefineSerialVersionUIDAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults: int getTotalNumberOfFiles(boolean)>",
    "<org.codenarc.rule.formatting.SpaceInsideParenthesesAstVisitor: boolean matchesAndNotWithinString(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPublicModifierAstVisitor: void <clinit>()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet: void <init>(java.io.Reader)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12$_closure15$_closure16: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.ruleset.MovedRules$MovedToRuleSet: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasOneStaticFieldOfItself_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConstantExpressionExtractor$_extractFromExpression_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults: void <init>(java.lang.String)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleregistry.PropertiesFileRuleRegistry: void loadRules()>",
    "<org.codenarc.rule.dry.DryUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UnnecessaryFailAstVisitor: void addViolationIfFail(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.design.AbstractClassWithPublicConstructorAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.ConsecutiveStringConcatenationAstVisitor: java.lang.String escape(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectionCallRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsBlankLineAfterOpeningBrace_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.CommonCatchAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryToStringAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor$_visitMethodEx_closure1: org.codehaus.groovy.ast.MethodNode getNode()>",
    "<org.codenarc.rule.basic.EmptyElseBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void recordMethodColumnAndSourceLineForClosureBlocks(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTransientModifierAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: boolean isAnnotatedWithOverride(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_flexibleCheckForCorrectColumn_closure10: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UnnecessaryFailRule: void <init>()>",
    "<org.codenarc.analyzer.StringSourceAnalyzer: java.util.List getSourceDirectories()>",
    "<org.codenarc.rule.concurrency.WaitOutsideOfWhileLoopAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void visitTernaryExpression(org.codehaus.groovy.ast.expr.TernaryExpression)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: void <init>()>",
    "<org.codenarc.rule.basic.EqualsOverloadedAstVisitor: boolean isEqualsMethodWithOneArgument(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_getViolations_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure3$_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildButtons_closure6: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitTestMethodWithoutAssertAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.CompactTextReportWriter$_writeFileViolations_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.TernaryCouldBeElvisRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.ExceptionExtendsErrorAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.groovyism.ClosureAsLastMethodParameterAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.ruleset.MovedRules$Renamed: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.AddEmptyStringAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryFloatInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.UnnecessaryGroovyImportRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.ObjectFinalizeRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.VolatileLongOrDoubleFieldVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.basic.DuplicateMapKeyAstVisitor: void visitMapExpression(org.codehaus.groovy.ast.expr.MapExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonRule: void processImports(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildScript_closure1$_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalRegexRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.ruleset.TopLevelDelegate: void rule(java.lang.Class)>",
    "<org.codenarc.rule.InlineViolationsParser$ParseResult: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.StaticCalendarFieldAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitClosureExpression_closure8: org.codehaus.groovy.ast.expr.ClosureExpression getExpression()>",
    "<org.codenarc.rule.naming.FieldNameRule: void <init>()>",
    "<org.codenarc.rule.comments.AbstractJavadocMissingDescriptionRule: java.lang.String buildRegex()>",
    "<org.codenarc.report.AbstractReportWriter: java.lang.String substituteMessageParametersIfPresent(org.codenarc.rule.Rule,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean areReturningTrueAndFalse(org.codehaus.groovy.ast.stmt.Statement,org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.convention.TernaryCouldBeElvisAstVisitor: void visitTernaryExpression(org.codehaus.groovy.ast.expr.TernaryExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstanceOfCheckAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.formatting.BlockStartsWithBlankLineAstVisitor: void visitTryCatchFinally(org.codehaus.groovy.ast.stmt.TryCatchStatement)>",
    "<org.codenarc.rule.convention.VariableTypeRequiredAstVisitor: boolean matchesIgnoredName(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToLeftShiftMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyStaticInitializerAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsBlankLineAfterOpeningBrace_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.JsonReaderRuleSet$_loadRuleElements_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceInsideParenthesesAstVisitor: boolean isOdd(int)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer: void <clinit>()>",
    "<org.codenarc.rule.basic.EqualsOverloadedAstVisitor: void addViolationIfOverloaded(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllSummaryByPackageRowsRecursively_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure19$_closure23: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14$_closure16: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.basic.EqualsAndHashCodeAstVisitor$_visitClassEx_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: boolean isAStaticFinalFieldValue(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.junit.JUnitUtil$_isTestMethod_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainHasEqualsAstVisitor: void visitClassComplete(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin: boolean sameMessage(java.lang.String,java.lang.String)>",
    "<org.codenarc.report.XmlReportWriter: java.util.Map buildPackageAttributeMap(org.codenarc.results.Results)>",
    "<org.codenarc.report.BaselineXmlReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.WildcardPattern: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.FieldNameAstVisitor: void <init>()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildHeaderSection_closure4$_closure10: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.InlineXmlReportWriter: groovy.lang.Closure buildRulesElement(org.codenarc.AnalysisContext)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21$_closure22$_closure24: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.ListRuleSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.CatchErrorRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectIncludedProperties_closure9: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThreadYieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PublicInstanceFieldAstVisitor: java.lang.String createErrorMessage(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.ruleset.MovedRules: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule: java.lang.Object this$dist$invoke$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildProjectElement_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure15$_closure16: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToMultiplyMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.design.NestedForLoopAstVisitor: boolean isForNested()>",
    "<org.codenarc.report.AbstractReportWriter$_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter: boolean isDirectoryContainingFiles(org.codenarc.results.Results)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToCompareToMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor$_visitListExpression_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processStaticImports_closure2: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPublicModifierAstVisitor: void checkDeclaration(org.codehaus.groovy.ast.ASTNode,java.lang.String,java.lang.String)>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4$_closure14: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarc$_execute_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.CollectionReturnTracker: void expressionReturnsList(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_addClosureFields_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_buildRulesElement_closure9: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitImports_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.size.ParameterCountAstVisitor$_isOverridden_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ClassNameRule: void validate()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.DuplicateImportRule: void checkStaticImport(java.lang.String,int,java.util.Set,java.util.List)>",
    "<org.codenarc.rule.basic.EmptyWhileStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.AbstractJavadocEmptyTagRule: void <init>()>",
    "<org.codenarc.analyzer.AnalyzerException: void <init>(java.lang.String)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_configure_closure1: org.codenarc.ruleset.RuleSet getRuleSet()>",
    "<org.codenarc.rule.convention.VariableTypeRequiredAstVisitor$_visitDeclarationExpression_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.ClosureStatementOnOpeningLineOfMultipleLineClosureRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_visitClosureExpression_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDoubleInstantiationAstVisitor: void <init>()>",
    "<org.codenarc.rule.junit.JUnitPublicFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor: java.lang.Integer getLineNumber(org.gmetrics.result.MetricResult)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_writeReport_closure1: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameRule$_toSet_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPublicModifierAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceAstVisitor: boolean isLambdaExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.exceptions.CatchIndexOutOfBoundsExceptionRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor: java.lang.String getSourceLine(java.lang.Integer)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19$_closure21: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter: groovy.lang.Closure buildFileSection(org.codenarc.results.Results)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.BracesForIfElseAstVisitor: void visitElse(org.codenarc.rule.formatting.BracesForIfElseRule,org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.design.CompareToWithoutComparableAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.util.ModifiersUtil: int parseModifiers(java.lang.String)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_visitClassComplete_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ant.CodeNarcTask: void <clinit>()>",
    "<org.codenarc.rule.formatting.SpaceAfterForAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitAssertAlwaysSucceedsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.TopLevelDelegate: void rule(java.lang.Class,groovy.lang.Closure)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor: java.lang.String parentPackageName(java.lang.String)>",
    "<org.codenarc.plugin.disablerules.LookupTable$_buildLookupTable_closure1: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3: org.codehaus.groovy.ast.expr.VariableExpression getVarExpression()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildScript_closure1$_closure7: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToLeftShiftMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.util.SourceCodeUtil$_containsOnlyAsciiCharacters_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.StatelessSingletonRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedMethodParameterRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ant.CodeNarcTask: org.codenarc.results.Results executeCodeNarcRunner(java.lang.Object)>",
    "<org.codenarc.rule.concurrency.StaticCalendarFieldAstVisitor: void addCalendarViolation(org.codehaus.groovy.ast.FieldNode,java.lang.String)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor$_closureReturnsArray_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.naming.ObjectOverrideMisspelledMethodNameAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.junit.UnnecessaryFailAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: void <init>(org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryToStringAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet: void setRuleProperties(groovy.util.Node,org.codenarc.rule.Rule)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.CommentsUtil: java.lang.String group(java.lang.String)>",
    "<org.codenarc.rule.junit.JUnitUtil: boolean isAssertCallWithNonNullConstantValue(org.codehaus.groovy.ast.expr.MethodCallExpression,java.lang.String)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure3: org.codenarc.rule.Rule getRule()>",
    "<org.codenarc.rule.FieldReferenceAstVisitor$_visitMethodEx_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.StaticFieldsBeforeInstanceFieldsAstVisitor$_visitClassComplete_closure1: org.codehaus.groovy.ast.ClassNode getNode()>",
    "<org.codenarc.rule.junit.UseAssertFalseInsteadOfNegationAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: java.util.List increaseIndentForClosureBlocks(org.codehaus.groovy.ast.expr.ArgumentListExpression)>",
    "<org.codenarc.rule.junit.JUnitAssertAlwaysFailsAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.util.WildcardPattern$_matches_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySetterAstVisitor: void addViolationsIfSetter(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.concurrency.SynchronizedOnGetClassAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BlockEndsWithBlankLineAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.basic.EmptyMethodAstVisitor$_visitMethod_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.DuplicateMapKeyAstVisitor$_visitMapExpression_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.concurrency.SynchronizedOnBoxedPrimitiveAstVisitor: void visitSynchronizedStatement(org.codehaus.groovy.ast.stmt.SynchronizedStatement)>",
    "<org.codenarc.rule.FieldReferenceAstVisitor$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitWhileLoop_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.AssignCollectionUniqueAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_containsKey_closure3: java.util.List getKeys()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildViolationElement_closure6$_closure15: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.XmlFileRuleSet: void <clinit>()>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: boolean isBinaryExpressionWithPropertyAccessForName(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.plugin.disablerules.LookupTable: void checkForCodeNarcEnable(java.lang.String)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsBlankLineAfterOpeningBrace_closure5: java.lang.Integer getClassStartLine()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.CompactTextReportWriter$_writeFileViolations_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryConstructorAstVisitor: boolean containsOnlyCallToSuper(org.codehaus.groovy.ast.ConstructorNode)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_addInitializedField_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unused.UnusedArrayAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBooleanInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.serialization.SerialVersionUIDAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: void addViolationOnMismatch(java.util.List,java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.serialization.EnumCustomSerializationIgnoredAstVisitor: void visitMethodComplete(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.imports.UnusedImportRule: void processStaticImports(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule$_addOrderingViolations_closure1: java.lang.String getLatePattern()>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility: org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility[] values()>",
    "<org.codenarc.rule.design.FinalClassWithProtectedMemberRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementAstVisitor$_allBranchesReturn_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.exceptions.ThrowErrorRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.GroovyDslRuleSet: groovy.lang.GroovyShell createGroovyShell()>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUnnecessarySetUpRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.TrailingWhitespaceRule$_applyTo_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCatchBlockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToOrMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGetterAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoJavaUtilDateAstVisitor$_visitImports_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalRule: boolean isDefinedInJpaEntity(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.exceptions.ConfusingClassNamedExceptionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterClosingBraceAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.rule.formatting.AbstractSpaceAroundBraceAstVisitor: java.lang.String lastSourceLineOrEmpty(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.naming.VariableNameAstVisitor: void visitDeclarationExpression(org.codehaus.groovy.ast.expr.DeclarationExpression)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_visitConstructorOrMethod_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ConstantsOnlyInterfaceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateUtil$_sortRules_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor$_visitForLoop_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure11$_closure13$_closure14: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor$_extractTransients_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_getAnonymousClasses_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryOverridingMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19$_closure20: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.tool.GenerateCodeNarcRulesProperties: void main(java.lang.String[])>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21$_closure22$_closure24: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.tool.GenerateRuleSetAllRulesByCategory$_main_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarc: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.CatchIllegalMonitorStateExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: boolean isValid()>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolations_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.UnnecessaryGroovyImportRule$_applyTo_closure1: java.util.List getViolations()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.SourceCodeCriteria: boolean includesPath(java.lang.String)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToOrMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.PropertyNameAstVisitor: void visitProperty(org.codehaus.groovy.ast.PropertyNode)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3$_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.DoubleCheckedLockingAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_getAnonymousClasses_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure20: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_removeInitializedField_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertTwoViolations(java.lang.String,java.lang.Integer,java.lang.String,java.lang.Object,java.lang.Integer,java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_recordMethodColumnAndSourceLineForClosureBlocks_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.BigDecimalInstantiationAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.formatting.SpaceAfterIfRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateMapLiteralAstVisitor: void <init>()>",
    "<org.codenarc.rule.design.OptionalMethodParameterAstVisitor: void processParameters(org.codehaus.groovy.ast.Parameter[],java.lang.String)>",
    "<org.codenarc.rule.size.MethodSizeAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.MultipleUnaryOperatorsAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.basic.EmptyInstanceInitializerAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_increaseIndentForClosureBlocks_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor: boolean hasAnnotation(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.SpaceBeforeClosingBraceAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor: void resetCurrentAnnotatedNode()>",
    "<org.codenarc.results.FileResults: java.util.List getViolations()>",
    "<org.codenarc.rule.exceptions.SwallowThreadDeathAstVisitor: void visitCatchStatement(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.CodeNarc: void execute(java.lang.String[])>",
    "<org.codenarc.rule.design.CollectionReturnTracker$_expressionReturnsList_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor$_visitBlockStatement_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.CompactTextReportWriter$_writeFileViolations_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.InlineXmlReportWriter$_buildDescriptionElement_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processStaticImports_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasState_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.ExplicitStackInstantiationRule$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ParameterReassignmentAstVisitor: boolean isCurrentParameterName(java.lang.String)>",
    "<org.codenarc.report.HtmlReportWriter$_buildBodySection_closure1$_closure8: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.formatting.TrailingWhitespaceRule$_applyTo_closure1: java.util.List getViolations()>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor: void visitForLoop(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.results.DirectoryResults$_getViolations_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter: java.util.Map buildPackageAttributeMap(org.codenarc.results.Results)>",
    "<org.codenarc.rule.naming.ParameterNameAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.plugin.disablerules.DisableRulesInCommentsPlugin$_processViolationsForFile_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsBlankLineAfterOpeningBrace_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.XmlReportWriter$_buildRulesElement_closure9$_closure19$_closure20: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.LocaleSetDefaultAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.IfStatementCouldBeTernaryAstVisitor: boolean isReturnStatementWithConstantOrLiteralValue(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.size.CyclomaticComplexityAstVisitor: org.gmetrics.metric.Metric createMetric()>",
    "<org.codenarc.tool.GenerateRuleIndexPages: void generateIndexByCategoryFile(java.util.Map,int,java.util.Properties)>",
    "<org.codenarc.rule.unused.AbstractLastStatementInBlockAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.rule.convention.StaticFieldsBeforeInstanceFieldsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.CouldBeElvisAstVisitor: void addViolationCouldBeElvis(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor: java.util.Map getMethodCallsAndMapKeys(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.junit.AssertionTrap: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.SuppressionAnalyzer: void <clinit>()>",
    "<org.codenarc.rule.convention.StaticFieldsBeforeInstanceFieldsAstVisitor$_visitClassComplete_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.SourceFile: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.InlineXmlReportWriter$_buildDescriptionElement_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.AbstractFinallyAstVisitor: void <init>()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryLongInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter$_writeReportToFile_closure3: org.codenarc.results.Results getResults()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarc: void main(java.lang.String[])>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor: boolean closureReturnsArray(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.util.ImportUtil$_getAllImports_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor: boolean methodReturnsCollection(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConstantExpressionExtractor$_extractFrom_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: java.lang.String getText()>",
    "<org.codenarc.tool.GenerateCodeNarcRulesProperties$_main_closure1$_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.ConsecutiveLiteralAppendsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.InterfaceNameSameAsSuperInterfaceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.StubRule$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.TrailingWhitespaceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitStackInstantiationRule$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure15$_closure16: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_findSuperClassMethods_closure8: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.ParameterReassignmentAstVisitor: void visitMethodComplete(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.CodeNarcRunner$_writeReports_closure8: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.naming.ParameterNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure15: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.naming.ClassNameSameAsSuperclassAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.tool.GenerateRuleSetAllRulesByCategory: void <clinit>()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.naming.FieldNameAstVisitor: boolean isProperty(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor$_isExpressionUsedInAnnotation_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule: void addViolationForSunImport(org.codehaus.groovy.ast.ImportNode,org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.ruleset.JsonReaderRuleSet$_setRuleProperties_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.BracesForClassRule$_applyTo_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitAssertAlwaysSucceedsRule: void <init>()>",
    "<org.codenarc.rule.convention.LongLiteralWithLowerCaseLRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4$_closure14: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: void visitMapEntryExpression(org.codehaus.groovy.ast.expr.MapEntryExpression)>",
    "<org.codenarc.rule.exceptions.ReturnNullFromCatchBlockAstVisitor: org.codehaus.groovy.ast.stmt.Statement getLastStatement(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.rule.design.AbstractClassWithoutAbstractMethodAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.CodeNarcRunner: org.codenarc.ruleset.RuleSet createInitialRuleSetFromString()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_writeReport_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.util.PropertyUtil: void setPropertyFromString(java.lang.Object,java.lang.String,java.lang.String)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitTearDownCallsSuperAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.HtmlReportWriter: groovy.lang.Closure buildAllPackageSections(org.codenarc.results.Results)>",
    "<org.codenarc.rule.concurrency.StaticDateFormatFieldAstVisitor: void addDateFormatViolation(org.codehaus.groovy.ast.FieldNode,java.lang.String)>",
    "<org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundMapEntryColonAstVisitor: void handleMapExpression(org.codehaus.groovy.ast.expr.MapEntryExpression)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameRule: java.util.Set toSet(java.lang.String)>",
    "<org.codenarc.plugin.disablerules.LookupTable$_buildLookupTable_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.AbstractReportWriter$_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ForLoopShouldBeWhileLoopAstVisitor: boolean hasOnlyConditionExpr(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonAstVisitor: void checkNode(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.AbstractRuleTestCase: java.util.List applyRuleTo(java.lang.String)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_getViolations_closure1: org.codenarc.rule.AstVisitor getVisitor()>",
    "<org.codenarc.rule.formatting.LineLengthRule: boolean flagIfImport(java.lang.String)>",
    "<org.codenarc.ruleset.FilteredRuleSet$_getRules_closure1$_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.RequiredStringRule: boolean isReady()>",
    "<org.codenarc.rule.basic.EqualsAndHashCodeAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.source.AbstractSourceCode$_removeGrabTransformation_closure1$_closure3$_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildCSS_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.MethodReturnTypeRequiredRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void <init>()>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.AbcMetricRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildReportElement_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.UseCollectManyRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_collectAllPrivateFields_closure2$_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.AbstractSourceCode: java.lang.String normalizePath(java.lang.String)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitBlockStatement_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_addViolationOnMismatch_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10: org.codenarc.results.Results getResults()>",
    "<org.codenarc.util.io.DefaultResourceFactory: boolean isUrl(java.lang.String)>",
    "<org.codenarc.ruleset.RuleSetUtil: org.codenarc.ruleset.RuleSet loadRuleSetFromString(java.lang.String)>",
    "<org.codenarc.rule.security.JavaIoPackageAccessRule: void <init>()>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin: void processViolationsForFile(org.codenarc.plugin.FileViolations)>",
    "<org.codenarc.rule.convention.StaticFieldsBeforeInstanceFieldsAstVisitor$_visitClassComplete_closure1: java.lang.Object doCall(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.convention.NoDefRule: void setExcludeRegex(java.lang.String)>",
    "<org.codenarc.rule.formatting.TrailingWhitespaceRule$_applyTo_closure1: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: void addOpeningBraceViolation(org.codehaus.groovy.ast.ASTNode,java.lang.String)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10$_closure11$_closure12: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.GroovyDslRuleSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPublicModifierAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.SpockIgnoreRestUsedAstVisitor$_visitMethod_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.naming.PackageNameAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.SpaceAfterClosingBraceAstVisitor: void processMethodNode(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.comments.ClassJavadocRule: java.lang.String sourceCodeNameWithoutExtension(org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.security.JavaIoPackageAccessAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter$_buildPackageElements_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.CodeNarcRunner$_initializePlugins_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsServletContextReferenceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_addViolationsForMultipleFieldDeclarations_closure7: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.exceptions.SwallowThreadDeathAstVisitor: void visitThrowStatement(org.codehaus.groovy.ast.stmt.ThrowStatement)>",
    "<org.codenarc.rule.dry.DuplicateStringLiteralRule: java.util.Set parseIgnoreValues()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: void <init>()>",
    "<org.codenarc.rule.imports.AbstractImportRule: int findLineNumberOfFirstClassDeclaration(org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.dry.DuplicateListLiteralAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.DuplicateCaseStatementAstVisitor$_visitSwitch_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.AssignCollectionSortAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectIncludedProperties_closure9: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.IfStatementCouldBeTernaryAstVisitor: boolean isOnlyReturnStatement(org.codehaus.groovy.ast.ASTNode)>"
  ],
  "2.1.0": [
    "<org.codenarc.tool.GenerateCodeNarcRulesProperties$_main_closure1$_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor$_visitMethodEx_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.ReportWriterFactory: org.codenarc.report.ReportWriter getReportWriter(java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure11$_closure13$_closure14: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.SynchronizedOnReentrantLockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGetterRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processImports_closure1: java.util.List getViolations()>",
    "<org.codenarc.rule.jdbc.JdbcConnectionReferenceRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.formatting.BracesForMethodAstVisitor: java.lang.String joinThrowsLines(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: java.lang.String extractPropertyName(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.AnalysisContext: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.VariableNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.CrapMetricRule: void <clinit>()>",
    "<org.codenarc.rule.grails.ClassConstraintsAndMapping$_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_writeReport_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.FilteredRuleSet: void addInclude(java.lang.String)>",
    "<org.codenarc.rule.concurrency.NestedSynchronizationAstVisitor$_visitClosureExpression_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin$_removeMatchingViolation_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.util.MultilineCommentChecker: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor: void whenOneStatementClosureFound(java.util.List,groovy.lang.Closure)>",
    "<org.codenarc.ruleset.RuleSetDelegate: org.codenarc.rule.Rule findRule(java.lang.String)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassComplete_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertyLockingAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20: java.lang.Object call(org.codenarc.rule.Rule,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryFinalOnPrivateMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: boolean isAGetterMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule: java.lang.Object this$dist$get$3(java.lang.String)>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility: void <clinit>()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_addViolationOnMismatch_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.BaselineViolation: void <init>(java.util.Map)>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfViolationsWithPriority_closure3: int getPriority()>",
    "<org.codenarc.report.AbstractReportWriter$_getSortedRules_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.StatelessClassAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.ClassConstraintsAndMapping$_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ImportUtil$_sourceLineAndNumberForStarImport_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildBodySection_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.dry.DuplicateNumberLiteralRule: void <init>()>",
    "<org.codenarc.results.FileResults: int getNumberOfViolationsWithPriority(int,boolean)>",
    "<org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.OptionalMethodParameterAstVisitor$_processParameters_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_collectAllPrivateMethods_closure2$_closure4: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.results.FileResults: java.util.List getChildren()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_writeReport_closure1$_closure8: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.JsonFileRuleSet$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_writeReport_closure1: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor: void addViolationForMultipleDeclarations(java.util.Collection)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor$_closureReturnsArray_closure2: java.lang.Boolean getReturnsArray()>",
    "<org.codenarc.rule.groovyism.UseCollectNestedAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UseAssertEqualsInsteadOfAssertTrueAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.FileResults$_getNumberOfFilesWithViolations_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.MissingBlankLineBeforeAnnotatedFieldRuleAstVisitor: boolean isComment(java.lang.String)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsNotBlankLineAfterOpeningBrace_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySelfAssignmentAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.JavadocEmptySinceTagRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_visitConstructorOrMethod_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BracesForMethodAstVisitor$_hasOpeningBraceOnSameLine_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitTestMethodWithoutAssertRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.naming.ObjectOverrideMisspelledMethodNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.AbstractClassWithoutAbstractMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.ClassReferenceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: void <init>()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildBodySection_closure2$_closure8: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.convention.VariableTypeRequiredAstVisitor$_visitDeclarationExpression_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_isAnnotatedWithOverride_closure6: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.basic.AbstractFinallyAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.BusyWaitAstVisitor: void visitForLoop(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure7$_closure8: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: boolean memoizedMethodPriv$isSingleLineClassClassNode(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.tool.GenerateRuleSetAllRulesByCategory$_main_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.FilteredRuleSet$_getRules_closure1$_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.source.SourceFile: java.lang.String toString()>",
    "<org.codenarc.source.CustomCompilerPhaseSourceDecorator: org.codenarc.analyzer.SuppressionAnalyzer getSuppressionAnalyzer()>",
    "<org.codenarc.rule.design.AssignmentToStaticFieldFromInstanceMethodAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.concurrency.SynchronizedReadObjectMethodAstVisitor: boolean isSerializable(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor$_visitMethodEx_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.AssignCollectionSortAstVisitor: boolean isChainedSort(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToXorMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildBodySection_closure1$_closure8: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckBeforeInstanceOfAstVisitor: void addViolationIfTargetsMatch(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule: org.codenarc.rule.AstVisitor getAstVisitor(org.codenarc.source.SourceCode)>",
    "<org.codenarc.report.BaselineXmlReportWriter: groovy.lang.Closure buildMessageElement(org.codenarc.rule.Violation)>",
    "<org.codenarc.util.ImportUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitSetUpCallsSuperAstVisitor$_visitMethod_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllSummaryByPackageRowsRecursively_closure3$_closure13: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.size.CrapMetricRule: boolean isReady()>",
    "<org.codenarc.rule.dry.DuplicateNumberLiteralRule: void <clinit>()>",
    "<org.codenarc.rule.naming.ClassNameSameAsFilenameRule$_applyTo_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.formatting.FileEndsWithoutNewlineRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildScript_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: boolean isBrokenNullCheck(org.codehaus.groovy.ast.expr.BinaryExpression,java.lang.String,java.lang.String)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure18: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule: java.lang.Object this$dist$get$3(java.lang.String)>",
    "<org.codenarc.ruleset.TopLevelDelegate$_rule_closure1: org.codenarc.rule.Rule getRule()>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfFilesWithViolations_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceBeforeClosingBraceAstVisitor: void visitMapEntryExpression(org.codehaus.groovy.ast.expr.MapEntryExpression)>",
    "<org.codenarc.rule.convention.TernaryCouldBeElvisAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.FileCreateTempFileRule: void <init>()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_applyProperties_closure2: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.CollectionReturnTracker$_expressionReturnsList_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.CompileStaticRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.JavadocEmptyParamTagRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.WildcardPattern$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitTestMethodWithoutAssertAstVisitor: boolean hasTestAnnotationWithMember(org.codehaus.groovy.ast.ASTNode,java.lang.String)>",
    "<org.codenarc.ruleset.MovedRules$MovedToRuleSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_visitConstructorOrMethod_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryToStringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.WildcardPattern: boolean containsWildcards(java.lang.String)>",
    "<org.codenarc.rule.concurrency.DoubleCheckedLockingAstVisitor: void addViolationOnDoubleLocking(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor: boolean isIgnoredMethodName(java.lang.String)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor: void checkTypeIfNotDynamicallyTyped(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.InlineViolationsParser$ParseResult: void <init>()>",
    "<org.codenarc.rule.formatting.SpaceAroundMapEntryColonRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.LineLengthRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_findMatchingSuperClassMethod_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.DuplicateImportRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.ruleset.TopLevelDelegate: void rule(java.lang.String,groovy.lang.Closure)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_visitConstructorOrMethod_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.concurrency.StaticSimpleDateFormatFieldAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.generic.StatelessClassRule: boolean shouldIgnoreField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.imports.AbstractImportRule$_findLineNumberOfFirstClassDeclaration_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceAfterMethodDeclarationNameRuleAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter$_buildRulesElement_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30$_closure31: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.concurrency.SynchronizedMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4$_closure13$_closure15: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter$_writeSummary_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_visitClassEx_closure1: org.codehaus.groovy.ast.ClassNode getNode()>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor$_visitConstructorOrMethod_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.RuleSetDelegate$_findRule_closure2: java.lang.String getName()>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor: org.gmetrics.metric.Metric getMetric()>",
    "<org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule: java.lang.Object this$dist$get$3(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInVariableDeclarationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.LineLengthRule: boolean lineMatchesIgnoreLineRegex(java.lang.String)>",
    "<org.codenarc.ruleset.XmlFileRuleSet$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.ruleset.FilteredRuleSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: void saveMethodInfo(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.generic.IllegalClassMemberRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UseAssertTrueInsteadOfNegationAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.ruleset.GroovyDslRuleSet$_evaluateDsl_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.XmlReportWriter$_buildProjectElement_closure3: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectionCallAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: java.util.Map findSuperClassMethods(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertSingleViolation(java.lang.String,java.lang.Integer,java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainHasEqualsAstVisitor: boolean isNotInnerEnum(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.naming.VariableNameAstVisitor$_visitDeclarationExpression_closure1: org.codehaus.groovy.ast.expr.DeclarationExpression getDeclarationExpression()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToPlusMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.ConsecutiveStringConcatenationAstVisitor: void <clinit>()>",
    "<org.codenarc.source.AbstractSourceCode$_getLineNumberForCharacterIndex_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.util.GroovyVersion: boolean isGroovyVersion2()>",
    "<org.codenarc.rule.formatting.BlockEndsWithBlankLineAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToAndMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.SystemOutPrintAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.concurrency.SynchronizedOnReentrantLockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.SynchronizedOnReentrantLockAstVisitor: void visitSynchronizedStatement(org.codehaus.groovy.ast.stmt.SynchronizedStatement)>",
    "<org.codenarc.rule.basic.EqualsAndHashCodeRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ConstantIfExpressionAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.tool.GenerateCodeNarcRulesProperties: void <clinit>()>",
    "<org.codenarc.rule.naming.MethodNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBigDecimalInstantiationAstVisitor: void <init>()>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: boolean matches(java.util.regex.Pattern,java.lang.String)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToModMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor: void visitPropertyExpression(org.codehaus.groovy.ast.expr.PropertyExpression)>",
    "<org.codenarc.rule.generic.RequiredRegexRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: boolean dynamicTypedAndNotExcludedVariable(org.codehaus.groovy.ast.Variable)>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintAstVisitor$_visitMethodCallExpression_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void checkAssignmentWithinDeclaration(org.codehaus.groovy.ast.expr.BinaryExpression,java.lang.String)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToCompareToMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.TopLevelDelegate: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToCompareToMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckBeforeInstanceOfAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor: boolean hasOneStaticFieldNamedInstance(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.concurrency.SynchronizedOnGetClassAstVisitor: void visitSynchronizedStatement(org.codehaus.groovy.ast.stmt.SynchronizedStatement)>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolation_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildBodySection_closure2$_closure8: org.codenarc.results.Results getResults()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25: org.codenarc.report.SortableHtmlReportWriter$ViolationAndPath getVp()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure14: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor: void visitVariableExpression(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.ruleset.XmlFileRuleSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.PathUtil: java.lang.String normalizePath(java.lang.String)>",
    "<org.codenarc.report.InlineXmlReportWriter$_buildViolationElement_closure1: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_getMethodCallsAndMapKeys_closure5: java.util.Map getResult()>",
    "<org.codenarc.rule.convention.CouldBeElvisAstVisitor: org.codehaus.groovy.ast.expr.Expression getSingleStatementExpressionOrNull(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_writeReport_closure1$_closure8: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.util.ImportUtil: java.util.List getAllImports(org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalRule$_getViolations_closure1: java.lang.Object doCall(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer: org.codenarc.results.DirectoryResults processDirectory(java.lang.String,org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.rule.groovyism.ExplicitStackInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasOneStaticFieldOfItself_closure2: org.codehaus.groovy.ast.ClassNode getClassNode()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryConstructorAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.NestedForLoopAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToXorMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.ruleset.MovedRules$MovedToRuleSet: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.util.ModifiersUtil$_parseModifiersList_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueAstVisitor: org.codehaus.groovy.ast.expr.Expression getActualArgument(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.ruleset.RuleSetDelegate$_findRule_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.UseCollectNestedAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToDivMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryConstructorAstVisitor: boolean hasAnnotations(org.codehaus.groovy.ast.ConstructorNode)>",
    "<org.codenarc.ruleset.RuleSetDelegate: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.AbstractReportWriter: java.lang.String getHtmlDescriptionForRule(org.codenarc.rule.Rule)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: org.codehaus.groovy.ast.MethodNode findMatchingSuperClassMethod(java.lang.String,java.util.List)>",
    "<org.codenarc.rule.formatting.BracesForForLoopAstVisitor$_findLastLineOfForExpressions_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: void markVariableAsReferenced(java.lang.String,org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.rule.basic.HardcodedWindowsRootDirectoryAstVisitor: void addViolationForWindowsPath(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.groovyism.UseCollectNestedAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.basic.EmptySwitchStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterNotOperatorRuleAstVisitor: boolean isFollowedByWhitespace(org.codehaus.groovy.ast.expr.NotExpression)>",
    "<org.codenarc.rule.junit.JUnitFailWithoutMessageRule: void <init>()>",
    "<org.codenarc.rule.basic.AssignmentInConditionalRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.AssignmentToStaticFieldFromInstanceMethodAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: org.codehaus.groovy.ast.ModuleNode getAst()>",
    "<org.codenarc.rule.basic.EmptyInstanceInitializerAstVisitor: void visitObjectInitializerStatements(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasOneStaticFieldNamedInstance_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.AbstractFinallyAstVisitor$_isStatementWithinFinally_closure1: org.codehaus.groovy.ast.stmt.Statement getStatement()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.FieldReferenceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_visitConstructorOrMethod_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12$_closure15: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.basic.EmptyTryBlockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults$_removeViolation_closure2: org.codenarc.rule.Violation getV()>",
    "<org.codenarc.rule.generic.StatelessClassAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: void beforeBlock()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21$_closure22: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.BuilderMethodWithSideEffectsAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: void checkIfThereIsBlankLineAfterOpeningBrace(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.convention.IfStatementCouldBeTernaryAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.NonFinalSubclassOfSensitiveInterfaceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.InlineViolationsParser: void <init>()>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin$_removeMatchingViolation_closure2: org.codenarc.report.BaselineViolation getBaselineViolation()>",
    "<org.codenarc.rule.serialization.SerialPersistentFieldsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementAstVisitor$_allBranchesReturn_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21$_closure23: org.codenarc.rule.Rule getRule()>",
    "<org.codenarc.rule.junit.UseAssertNullInsteadOfAssertEqualsRule: void <init>()>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin: void processReports(java.util.List)>",
    "<org.codenarc.rule.junit.ChainedTestAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.source.CustomCompilerPhaseSourceDecorator: java.lang.String getName()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_visitClassEx_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.JsonReportWriter$_buildFileElement_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.comments.AbstractJavadocEmptyTagRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: java.util.List allExceptLastElement(java.util.List)>",
    "<org.codenarc.ruleset.TopLevelDelegate$_rule_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.BaselineViolation: int hashCode()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToPutAtMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyWhileStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter: groovy.lang.Closure buildFileElement(org.codenarc.results.FileResults)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckAstVisitor: boolean isNullCheckAgainstThisReference(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.InlineViolationsParser$_parseLine_closure1: int getLineNumber()>",
    "<org.codenarc.rule.comments.JavadocEmptyLastLineRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitMapExpression_closure5: org.codehaus.groovy.ast.expr.MapExpression getMapExpression()>",
    "<org.codenarc.rule.design.CloneWithoutCloneableAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.convention.NoFloatRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ConstantsOnlyInterfaceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitPublicNonTestMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ParameterNameAstVisitor$_processParameters_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.DeadCodeAstVisitor$_visitBlockStatement_closure1: org.codehaus.groovy.ast.stmt.BlockStatement getBlock()>",
    "<org.codenarc.report.XmlReportWriter$_buildSourceLineElement_closure7: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ConstantsOnlyInterfaceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.AbstractClassWithPublicConstructorAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.TextReportWriter$_writeSummary_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.source.CustomCompilerPhaseSourceDecorator: java.lang.String getPath()>",
    "<org.codenarc.rule.basic.AssignmentInConditionalAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor: void visitConstantExpression(org.codehaus.groovy.ast.expr.ConstantExpression)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure18: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitUnnecessarySetUpAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: java.lang.Number isPrivate(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.dry.DuplicateNumberLiteralRule: java.util.Set parseIgnoreValues()>",
    "<org.codenarc.report.HtmlReportWriter$_buildBodySection_closure1$_closure8: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_visitConstructorOrMethod_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.imports.UnusedImportRule: boolean isImportStatementForAlias(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToDivMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor: void <init>()>",
    "<org.codenarc.rule.basic.DuplicateSetValueAstVisitor: void addViolationForDuplicate(org.codehaus.groovy.ast.expr.ConstantExpression)>",
    "<org.codenarc.report.XmlReportWriter$_buildProjectElement_closure3$_closure11$_closure12: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.imports.UnusedImportRule: int countUsage(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.exceptions.ExceptionExtendsErrorRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildHeaderSection_closure4$_closure10: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.ruleset.FilteredRuleSet$_getRules_closure1$_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.JUnitUtil$_isTestMethod_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27: java.lang.Object doCall(org.codenarc.rule.Violation)>",
    "<org.codenarc.ruleset.FilteredRuleSet: void addExclude(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonRule: boolean endsWithSemicolon(java.lang.String,int)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonAstVisitor$_removeAnyViolationsForSameLine_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3$_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.NoJavaUtilDateAstVisitor$_visitImports_closure1: java.lang.Object doCall(org.codehaus.groovy.ast.ImportNode)>",
    "<org.codenarc.rule.InlineViolationsParser: java.lang.String inlineViolation(java.lang.String)>",
    "<org.codenarc.rule.junit.UnnecessaryFailAstVisitor: void visitCatchStatement(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.rule.groovyism.AssignCollectionUniqueAstVisitor: void visitDeclarationExpression(org.codehaus.groovy.ast.expr.DeclarationExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInFieldDeclarationAstVisitor: boolean contains(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.InlineViolationsParser: void parseLine(java.lang.String,int)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBooleanExpressionAstVisitor: void visitNotExpression(org.codehaus.groovy.ast.expr.NotExpression)>",
    "<org.codenarc.rule.formatting.BracesForClassRule: void applyToClassNode(org.codehaus.groovy.ast.ClassNode,int,java.lang.String,java.util.List)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_getMethodCallsAndMapKeys_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.tool.GenerateUtil$_sortRules_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.UseAssertTrueInsteadOfNegationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateMapLiteralAstVisitor$_visitMapExpression_closure1: org.codehaus.groovy.ast.expr.MapExpression getExpression()>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor$_processParameters_closure1: java.lang.String getMethodName()>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor: java.lang.String extractMethodName(java.lang.Object)>",
    "<org.codenarc.tool.GenerateRuleIndexPages$_main_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryObjectReferencesAstVisitor$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.AstUtil: boolean classNodeImplementsType(org.codehaus.groovy.ast.ClassNode,java.lang.Class)>",
    "<org.codenarc.rule.exceptions.SwallowThreadDeathRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCatchBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.plugin.disablerules.LookupTable: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.UnusedImportRule$_findReference_closure3: java.lang.String getAlias()>",
    "<org.codenarc.rule.generic.IllegalStringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_getAnonymousClasses_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.AbstractClassWithoutAbstractMethodAstVisitor: boolean skipSuperClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.design.PublicInstanceFieldAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor: void addViolation(org.gmetrics.result.MetricResult,java.lang.String)>",
    "<org.codenarc.rule.concurrency.SynchronizedReadObjectMethodAstVisitor: boolean isSynchronizedBlock(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.concurrency.SynchronizedOnStringAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceAstVisitor: void processMethodNode(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.dry.DuplicateMapLiteralAstVisitor$_visitMapExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitListExpression_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateRuleIndexPages$_main_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.comments.ClassJavadocRule$_applyTo_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_visitConstructorOrMethod_closure3: org.codehaus.groovy.ast.MethodNode getNode()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor$_addViolationsForInstanceFields_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildProjectElement_closure3$_closure11: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.exceptions.ExceptionNotThrownAstVisitor: boolean isLastStatementAnExceptionConstructorCall(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBooleanInstantiationAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.design.OptionalFieldAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_getAnonymousClasses_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.braces.IfStatementBracesRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.FileResults$_getNumberOfFilesWithViolations_closure2: int getMaxPriority()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure2: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule: java.util.List getViolations(org.codenarc.rule.AstVisitor,org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.basic.IntegerGetIntegerAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.UnsafeImplementationAsMapRule: void <init>()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_findMatchingSuperClassMethod_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_generateAllPossibleParameterSignatures_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor: void addViolationWithMessage(org.codehaus.groovy.ast.expr.MethodCallExpression,org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_visitConstructorOrMethod_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.AbstractImportRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.CommentsUtil: boolean hasTextOnNextLine(org.codenarc.source.SourceCode,int)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.ruleset.MovedRules$MovedToRuleSet: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor: boolean hibernateWouldCreateColumnFor(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.formatting.LineLengthRule: boolean sourceViolatesLineLengthRule(java.lang.String)>",
    "<org.codenarc.rule.basic.EmptyWhileStatementAstVisitor: void visitWhileLoop(org.codehaus.groovy.ast.stmt.WhileStatement)>",
    "<org.codenarc.rule.formatting.BracesForMethodAstVisitor$_hasOpeningBraceOnSameLine_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.ExceptionNotThrownAstVisitor: org.codehaus.groovy.ast.stmt.Statement getLastStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure15$_closure16: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitTearDownCallsSuperRule: void <init>()>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor$_visitCatchStatement_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateListLiteralAstVisitor$_visitListExpression_closure1: org.codehaus.groovy.ast.expr.ListExpression getExpression()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_visitMethodEx_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule$_addOrderingViolations_closure1: java.lang.String getEarlyPattern()>",
    "<org.codenarc.CodeNarcRunner$_applyPluginsProcessViolationsForFile_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ant.CodeNarcTask: void execute()>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_applyTo_closure2: java.util.List getViolations()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryConstructorAstVisitor: boolean isEmptyOrJustCallsSuper(org.codehaus.groovy.ast.ConstructorNode)>",
    "<org.codenarc.CodeNarcRunner$_applyPluginsProcessViolationsForAllFiles_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.CodeNarc$_execute_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToOrMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.imports.UnnecessaryGroovyImportRule$_applyTo_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToPutAtMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule: void this$dist$set$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.basic.BitwiseOperatorInConditionalAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ParameterReassignmentAstVisitor: boolean isReassigningAParameter(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.analyzer.AnalyzerException: void <init>(java.lang.Throwable)>",
    "<org.codenarc.rule.concurrency.DoubleCheckedLockingRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.PublicFinalizeMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_generateAllPossibleParameterSignatures_closure4: org.codehaus.groovy.ast.MethodNode getMethodNode()>",
    "<org.codenarc.results.FileResults: int getNumberOfFilesWithViolations(int,boolean)>",
    "<org.codenarc.rule.basic.AssertWithinFinallyBlockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BlockStartsWithBlankLineAstVisitor: void checkForViolations(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.junit.JUnitAssertAlwaysFailsRule: void <init>()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToDivMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsServletContextReferenceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.RuleSetUtil$_loadRuleScriptFile_closure1: java.lang.Class getRuleClass()>",
    "<org.codenarc.rule.groovyism.UseCollectNestedAstVisitor: void checkForCallToClosureParameter(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.SpaceAroundMapEntryColonAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: boolean isNotOpeningSquareBracket(java.lang.String,int)>",
    "<org.codenarc.rule.formatting.SpaceAfterIfAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.SpockIgnoreRestUsedAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.CodeNarcRunner$_writeReports_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildReportElement_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor: void extractTransients(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.imports.UnusedImportRule$_findReference_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.BlockStartsWithBlankLineAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor$_visitConstantExpression_closure1: org.codehaus.groovy.ast.expr.ConstantExpression getExpression()>",
    "<org.codenarc.util.ImportUtil$_sortImportsByLineNumber_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor: void visitCastExpression(org.codehaus.groovy.ast.expr.CastExpression)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19$_closure20: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsRule: void <init>()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryParenthesesForMethodCallWithClosureAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor: boolean isNotIgnoredMethodParameterName(org.codehaus.groovy.ast.Parameter)>",
    "<org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter: groovy.lang.Closure buildFileElement(org.codenarc.results.FileResults)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor$_isUsedInAnyAnnotationOnCurrentAnnotatedNode_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ConsecutiveUtils: boolean areJoinableConstants(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.design.CollectionReturnTracker$_expressionReturnsList_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_getMethodCallsAndMapKeys_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildViolationElement_closure6$_closure15: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor: boolean isIgnoredOneElementList(org.codehaus.groovy.ast.expr.ListExpression)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassEx_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14$_closure15: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10$_closure11: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.CompileStaticlVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.GroovyDslRuleSet$_evaluateDsl_closure2: groovy.lang.GroovyShell getShell()>",
    "<org.codenarc.util.PropertyUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.AssignmentToStaticFieldFromInstanceMethodAstVisitor: void <init>()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure7$_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.MovedRules: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor$_visitMethodCallExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.FieldReferenceAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unused.AbstractLastStatementInBlockAstVisitor: void <init>()>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure18: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceInsideParenthesesAstVisitor: boolean hasSpaceAfterOpeningParenthesis(java.lang.String)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.concurrency.ThreadLocalNotStaticFinalAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.InsecureRandomRule: void <init>()>",
    "<org.codenarc.rule.AbstractRuleTestCase: void testThatInvalidCodeHasNoViolations()>",
    "<org.codenarc.rule.junit.UseAssertFalseInsteadOfNegationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor: boolean doesExtendClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.jdbc.JdbcStatementReferenceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor: void visitClassComplete(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.convention.MethodReturnTypeRequiredAstVisitor: boolean isNotIgnoredMethodName(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor: boolean isUsedInAnyAnnotationOnCurrentAnnotatedNode(org.codehaus.groovy.ast.expr.ConstantExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationAstVisitor$_visitConstructorCallExpression_closure1: java.lang.Object doCall(java.lang.Class)>",
    "<org.codenarc.rule.concurrency.SynchronizedOnStringAstVisitor: void visitSynchronizedStatement(org.codehaus.groovy.ast.stmt.SynchronizedStatement)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_setupFlexibleIndentForAnyClosureParameterBlocks_closure6: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.LocaleSetDefaultAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfFilesWithViolations_closure4: int getMaxPriority()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void visitSwitch(org.codehaus.groovy.ast.stmt.SwitchStatement)>",
    "<org.codenarc.rule.naming.ParameterNameRule: void validate()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCallToSubstringAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.naming.InterfaceNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryModOneAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.size.NestedBlockDepthRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.junit.UseAssertTrueInsteadOfNegationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor: void addViolationsForMultipleFieldDeclarations(java.util.Collection)>",
    "<org.codenarc.report.JsonReportWriter$_buildPackageElements_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.SynchronizedMethodAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.serialization.EnumCustomSerializationIgnoredRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.size.MethodCountAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleregistry.RuleRegistryInitializer: void initializeRuleRegistry()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToRightShiftMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor: void processParameters(org.codehaus.groovy.ast.Parameter[],java.lang.String)>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: java.lang.String line(int)>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor$_visitForLoop_closure2: org.codehaus.groovy.ast.stmt.ForStatement getForLoop()>",
    "<org.codenarc.ruleset.CompositeRuleSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.CollectAllIsDeprecatedAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.design.AbstractClassWithPublicConstructorAstVisitor$_visitClassEx_closure1: org.codehaus.groovy.ast.ClassNode getNode()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementAstVisitor: boolean isValidElseBlock(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor$_hasTrailingComma_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.naming.VariableNameAstVisitor$_visitDeclarationExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ThrowExceptionFromFinallyBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.MissingBlankLineAfterPackageRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.naming.FactoryMethodNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor$_visitMethodCallExpression_closure2: org.codehaus.groovy.ast.expr.MethodCallExpression getExpression()>",
    "<org.codenarc.CodeNarc$_parseArgs_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateNumberLiteralRule$_defineAdditionalChecksClosure_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.naming.AbstractClassNameRule: boolean isReady()>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor: void <init>(java.util.List,java.util.Set,groovy.lang.Closure)>",
    "<org.codenarc.rule.dry.DuplicateMapLiteralAstVisitor: void visitMapExpression(org.codehaus.groovy.ast.expr.MapExpression)>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.basic.EmptyCatchBlockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_collectAllPrivateMethods_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.JUnitPublicPropertyRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryToStringAstVisitor$_visitGStringExpression_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildBodySection_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.NestedForLoopAstVisitor: void <init>()>",
    "<org.codenarc.source.SourceFile: void <init>(java.io.File)>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_collectAllPrivateFields_closure2$_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: boolean isNotExpressionWithPropertyAccessForName(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure11$_closure13: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.CustomCompilerPhaseSourceDecorator: java.lang.String getText()>",
    "<org.codenarc.report.JsonReportWriter: void writeReport(java.io.Writer,org.codenarc.AnalysisContext,org.codenarc.results.Results)>",
    "<org.codenarc.util.io.ClassPathResource: java.io.InputStream getInputStream()>",
    "<org.codenarc.rule.generic.IllegalClassReferenceRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.design.CloneWithoutCloneableRule: void <init>()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_visitMethodEx_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.report.TextReportWriter: void writeFileViolations(java.io.Writer,org.codenarc.results.FileResults)>",
    "<org.codenarc.rule.basic.DuplicateSetValueAstVisitor: void visitCastExpression(org.codehaus.groovy.ast.expr.CastExpression)>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterAstVisitor: void <init>()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationToGetClassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: java.lang.Boolean memoizedMethodPriv$isSingleLineClassClassNode(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryModOneRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor: boolean isEmpty(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.serialization.SerialVersionUIDAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_visitClosureExpression_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure13: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.InterfaceNameSameAsSuperInterfaceAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter: java.lang.Object this$dist$get$3(java.lang.String)>",
    "<org.codenarc.rule.formatting.BlankLineBeforePackageRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor: boolean isFloatTypeName(java.lang.String)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_writeReport_closure1$_closure8: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.JUnitUtil$_isAssertCallWithNonNullConstantValue_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.dry.DuplicateStringLiteralRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.serialization.SerialPersistentFieldsAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.dry.DuplicateListLiteralAstVisitor$_visitListExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceAfterClosingBraceAstVisitor: boolean isNotAllowedCharacterAfterClass(java.lang.String,int)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_getFirstValue_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter: groovy.lang.Closure buildViolationElement(org.codenarc.rule.Violation)>",
    "<org.codenarc.report.XmlReportWriter$_buildFileElement_closure5$_closure16: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor: java.util.List getAnonymousClasses()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementAstVisitor$_visitIfElse_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterCodeVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure26: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ant.CodeNarcTask: org.codenarc.analyzer.SourceAnalyzer createSourceAnalyzer()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckAstVisitor: boolean isNotNullCheckAgainstThisReference(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.formatting.AbstractSpaceAroundBraceAstVisitor: int indexOfClosingBrace(java.lang.String,int)>",
    "<org.codenarc.rule.junit.CoupledTestCaseAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.exceptions.CatchExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.UnsafeImplementationAsMapAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.BuilderMethodWithSideEffectsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ImplementationAsTypeRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryObjectReferencesAstVisitor$_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToPlusMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.report.XmlReportWriter$_buildRulesElement_closure9$_closure19: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.TernaryCouldBeElvisAstVisitor: boolean areTheSame(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor: void <init>(java.util.List,java.util.Set)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure15: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalClassMemberAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_printRuleProcessingTimes_closure6: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: boolean isOwnedByClassOrItsOuterClass(org.codehaus.groovy.ast.FieldNode,org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.dry.DuplicateListLiteralAstVisitor: void visitListExpression(org.codehaus.groovy.ast.expr.ListExpression)>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_getViolations_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.CouldBeSwitchStatementAstVisitor: java.lang.Boolean isSameLeftExpressionAsPreviousIfStatement(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsNotBlankLineAfterOpeningBrace_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.ComparisonWithSelfAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.dry.DuplicateStringLiteralRule$_defineAdditionalChecksClosure_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor$_visitMethodCallExpression_closure2: org.codehaus.groovy.ast.expr.MethodCallExpression getCall()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor$_expressionContainsBannedCharacters_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_visitMethodEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainWithServiceReferenceRule: void <init>()>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer$_processDirectory_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter$_buildPackageElements_closure1: java.util.Map getPackageItem()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor$_closureReturnsCollection_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter: java.util.List buildPackageElements(org.codenarc.results.Results)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_writeReport_closure1$_closure8: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.concurrency.ThreadYieldAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor$_visitCatchStatement_closure2: java.util.List getLoggerNames()>",
    "<org.codenarc.tool.GenerateCodeNarcRulesProperties$_main_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectMapKeys_closure6: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.comments.JavadocEmptyVersionTagRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule$_applyTo_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ParameterCountAstVisitor: java.lang.String getName(org.codehaus.groovy.ast.ConstructorNode)>",
    "<org.codenarc.rule.security.UnsafeImplementationAsMapAstVisitor: java.util.List getMethodsImplementedByCoercion(org.codehaus.groovy.ast.expr.MapExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInMethodDeclarationAstVisitor: boolean contains(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor: boolean closureReturnsCollection(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.basic.EmptyInstanceInitializerRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void processTernaryExpression(org.codehaus.groovy.ast.expr.TernaryExpression)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectMapKeys_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.AbstractJavadocMissingDescriptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner$_applyPluginsProcessViolationsForFile_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.StaticConnectionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3$_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14$_closure16: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitCatchStatement_closure3: org.codehaus.groovy.ast.stmt.CatchStatement getStatement()>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor: org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility getVisibility(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_recordMethodColumnAndSourceLineForClosureBlocks_closure7: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.basic.AbstractFinallyAstVisitor: void visitTryCatchFinally(org.codehaus.groovy.ast.stmt.TryCatchStatement)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitMapExpression_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor: void <init>()>",
    "<org.codenarc.rule.generic.IllegalClassReferenceRule: void <init>()>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInMethodDeclarationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.IntegerGetIntegerRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.OptionalMethodParameterAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor$_extractTransients_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.source.AbstractSourceCode$_removeGrabTransformation_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor$_isNamedArgumentsListContainingThis_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.report.XmlReportWriter$_buildFileElement_closure5$_closure16: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure26: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.formatting.AbstractSpaceAroundBraceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter: java.util.Map buildProjectElement(org.codenarc.AnalysisContext)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.jdbc.JdbcStatementReferenceRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.jdbc.JdbcConnectionReferenceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.FieldNameAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildViolationElement_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfFilesWithViolations_closure4: boolean getRecursive()>",
    "<org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule: java.lang.Object this$dist$invoke$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.generic.IllegalClassReferenceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.PrintlnAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor: boolean hasTrailingComma(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.report.CompactTextReportWriter$_writeFileViolations_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.JsonFileRuleSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.RuleSetDelegate$_findRule_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: boolean isCharacterPrecedingClosureInvalid(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.dry.DuplicateStringLiteralRule: void <init>()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_flexibleCheckForCorrectColumn_closure11: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.ClassReferenceAstVisitor: void checkNodeType(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.CommentsUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.ruleset.ListRuleSet: void <init>(java.util.List)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckAstVisitor: void visitBooleanExpression(org.codehaus.groovy.ast.expr.BooleanExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCastAstVisitor: boolean isUnnecessaryCast(org.codehaus.groovy.ast.expr.CastExpression)>",
    "<org.codenarc.report.AbstractReportWriter: java.lang.String getCodeNarcVersion()>",
    "<org.codenarc.ruleset.JsonReaderRuleSet: void <init>(java.io.Reader)>",
    "<org.codenarc.rule.security.UnsafeArrayDeclarationAstVisitor: boolean isArray(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDotClassAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_collectAllPrivateMethods_closure2$_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCatchBlockAstVisitor$_visitTryCatchFinally_closure1: java.lang.Object doCall(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.rule.junit.JUnitUtil$_isTestMethod_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin$_processViolationsForFile_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintAstVisitor: void <init>()>",
    "<org.codenarc.rule.generic.RequiredRegexRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.junit.UseAssertTrueInsteadOfAssertEqualsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitPublicPropertyRule: void <init>()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule: void this$dist$set$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean isTrueExpression(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure6: org.codenarc.results.FileResults getResults()>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19$_closure21: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectIncludedProperties_closure7: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.tool.GenerateRuleSetAllRules: void <clinit>()>",
    "<org.codenarc.ruleset.ListRuleSet$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.DuplicateMapKeyAstVisitor$_visitMapExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PublicInstanceFieldAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.plugin.disablerules.LookupTable: void <init>(java.lang.String)>",
    "<org.codenarc.rule.basic.RemoveAllOnSelfAstVisitor: boolean isMethodNamed(org.codehaus.groovy.ast.expr.MethodCallExpression,java.lang.String)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertyLockingAstVisitor: void addViolationOnMismatch(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.design.InstanceofRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.JsonFileRuleSet$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.StringSourceAnalyzer: void <init>(java.lang.String)>",
    "<org.codenarc.util.SourceCodeUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule$_applyTo_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceAfterWhileAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.SystemOutPrintRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.formatting.BracesForForLoopAstVisitor$_findLastLineOfForExpressions_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.MissingNewInThrowStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionAstVisitor: boolean hasJUnit4Annotation(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.ruleset.MovedRules$MovedToRuleSet: java.lang.String messageFor(java.lang.String)>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule$_applyTo_closure1: java.util.List getViolations()>",
    "<org.codenarc.report.IdeTextReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.ExceptionExtendsThrowableAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.grails.ClassConstraintsAndMapping$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_processMethodOrConstructorCall_closure3: org.codehaus.groovy.ast.expr.MethodCall getCall()>",
    "<org.codenarc.rule.size.ClassSizeAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.InlineViolationsParser$ParseResult: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer: void printRuleProcessingTimes()>",
    "<org.codenarc.rule.convention.ImplicitReturnStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.WaitOutsideOfWhileLoopAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationAstVisitor$_visitConstructorCallExpression_closure1: org.codehaus.groovy.ast.expr.ConstructorCallExpression getCall()>",
    "<org.codenarc.rule.formatting.BracesForClassRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.naming.VariableNameRule: void <init>()>",
    "<org.codenarc.rule.logging.LoggerWithWrongModifiersRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter$_buildPackageElements_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.jdbc.DirectConnectionManagementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalClassMemberRule: void <init>()>",
    "<org.codenarc.rule.basic.ParameterAssignmentInFilterClosureAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalClassMemberAstVisitor: boolean matchesIgnoreMethodsWithAnnotationNames(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.design.AbstractClassWithPublicConstructorAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateUtil$_createSortedListOfAllRules_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceAfterMethodCallNameRuleAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_getAnonymousClasses_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24: java.lang.Object doCall(org.codenarc.report.SortableHtmlReportWriter$ViolationAndPath)>",
    "<org.codenarc.rule.design.CloneableWithoutCloneRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: void visitClassComplete(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.ClassReferenceAstVisitor: java.lang.String formatViolationMessage(java.lang.String)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure15: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.BracesForForLoopAstVisitor$_findLastLineOfForExpressions_closure1: java.lang.Integer getLoopExpressionLastLine()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure25: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.braces.WhileStatementBracesRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer: boolean matches(org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.InlineViolationsParser: java.util.Map createViolation(int,java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.concurrency.StaticMatcherFieldAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolations_closure3$_closure6: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToModMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_addViolationOnMismatch_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.BigDecimalInstantiationAstVisitor: boolean isConstructorCallAViolation(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceRule: boolean isReady()>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertSingleViolation(java.lang.String,groovy.lang.Closure)>",
    "<org.codenarc.rule.junit.UseAssertTrueInsteadOfAssertEqualsAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor: boolean isClosureParameterOutsideParentheses(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectIncludedProperties_closure8: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet: void <clinit>()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor: java.util.Set collectIncludedProperties(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.CollectAllIsDeprecatedAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor: void addViolationIfDuplicate(org.codehaus.groovy.ast.expr.Expression,boolean)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBigIntegerInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UseAssertTrueInsteadOfAssertEqualsRule: void <init>()>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsRule: void <clinit>()>",
    "<org.codenarc.CodeNarcRunner: org.codenarc.ruleset.RuleSet buildRuleSet()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_getFileResults_closure4: java.util.List getFileResults()>",
    "<org.codenarc.rule.concurrency.StaticCalendarFieldAstVisitor: boolean isCalendarFactoryMethodCall(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.naming.FieldNameAstVisitor: boolean isIgnoredPropertyName(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.size.MethodCountRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DryUtil: boolean haveTheSameConstantOrLiteralValue(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterAstVisitor$_hasItParameter_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.serialization.SerializableClassMustDefineSerialVersionUIDAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4: boolean getAllPackages()>",
    "<org.codenarc.rule.design.BooleanMethodReturnsNullAstVisitor: boolean codeReturnsBoolean(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.comments.ClassJavadocRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.naming.MethodNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter: java.util.Map buildReportElement()>",
    "<org.codenarc.ruleset.JsonFileRuleSet: void <init>(java.lang.String)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_getFirstValue_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueAstVisitor: boolean isConvertibleToDouble(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectionCallAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure5$_closure13: org.codenarc.results.FileResults getResults()>",
    "<org.codenarc.rule.junit.SpockIgnoreRestUsedAstVisitor$_visitMethod_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildRulesElement_closure9$_closure19: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCallToSubstringAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.ChainedTestRule: void <init>()>",
    "<org.codenarc.rule.exceptions.ThrowThrowableRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitListExpression_closure4: org.codehaus.groovy.ast.expr.ListExpression getListExpression()>",
    "<org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule$1: void <init>(org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule,java.lang.Object)>",
    "<org.codenarc.rule.concurrency.SynchronizedReadObjectMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: boolean isNotAutoBoxed(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.ruleset.MovedRules$MovedToRuleSet: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure19: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_findSuperClassMethods_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsNotBlankLineAfterOpeningBrace_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBooleanExpressionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor: void <init>(java.util.Map,java.util.List)>",
    "<org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildBodySection_closure2$_closure8: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.CloseWithoutCloseableRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor$_visitMethodEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule$1: void <init>(org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule,java.lang.Object)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void visitConstructor(org.codehaus.groovy.ast.ConstructorNode)>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitTearDownCallsSuperAstVisitor$_visitMethod_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: void <init>()>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterAstVisitor: boolean hasItParameter(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.junit.UseAssertNullInsteadOfAssertEqualsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterNotOperatorRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.CyclomaticComplexityAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule$_addOrderingViolations_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.FilteredRuleSet$_getRules_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.XmlReportWriter$_buildMessageElement_closure8: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4$_closure13: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.FilteredRuleSet: void <init>(org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitClosureExpression_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.ArrayReturnTracker: void callBackForArrayReturns(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_writeReport_closure1$_closure8: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility: org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility $INIT(java.lang.Object[])>",
    "<org.codenarc.rule.formatting.BracesForTryCatchFinallyAstVisitor: void visitTryCatchFinally(org.codehaus.groovy.ast.stmt.TryCatchStatement)>",
    "<org.codenarc.CodeNarcRunner$_createInitialRuleSetFromFiles_closure6: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySubstringAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_writeReport_closure1: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin$_processViolationsForFile_closure1: org.codenarc.plugin.FileViolations getFileViolations()>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryTearDownAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.ConstructorsSkippingFieldReferenceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner$_createInitialRuleSetFromFiles_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.AbstractSourceCode: int getAstCompilerPhase()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_getAnonymousClasses_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.generic.StatelessClassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.VariableNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIntegerInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.PackageNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.CrapMetricAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void checkForCorrectColumn(org.codehaus.groovy.ast.ASTNode,java.lang.String,int)>",
    "<org.codenarc.rule.formatting.BlockStartsWithBlankLineAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule$_applyTo_closure1: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.formatting.BracesForTryCatchFinallyAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectIncludedProperties_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.UnsafeArrayDeclarationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor$_visitMethodCallExpression_closure1: org.codehaus.groovy.ast.expr.MethodCallExpression getCall()>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor$_visitConstructorOrMethod_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.plugin.disablerules.LookupTable: java.util.Set disabledRuleNamesForLineNumber(java.lang.Integer)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule: java.lang.Object this$dist$get$3(java.lang.String)>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor$_visitCastExpression_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUnnecessarySetUpAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildMessageElement_closure7: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.LocaleSetDefaultRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter: java.lang.String getViolationLocationString(org.codenarc.rule.Violation,java.lang.String)>",
    "<org.codenarc.rule.design.BooleanMethodReturnsNullAstVisitor: boolean closureReturnsBoolean(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertyLockingRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitImports_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor$_visitMethodEx_closure2: org.codehaus.groovy.ast.MethodNode getNode()>",
    "<org.codenarc.rule.formatting.SpaceAfterForRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure4$_closure12: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.AbstractClassWithPublicConstructorAstVisitor$_visitClassEx_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.results.FileResults$_getNumberOfViolationsWithPriority_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.grails.GrailsDomainCantReferenceServiceAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.exceptions.ThrowExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure20: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.ruleset.JsonReaderRuleSet: void setRuleProperties(java.util.Map,org.codenarc.rule.Rule)>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin$_processViolationsForFile_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildLogo_closure6: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void handleNestedNode(org.codehaus.groovy.ast.ASTNode,groovy.lang.Closure)>",
    "<org.codenarc.rule.concurrency.SynchronizedOnBoxedPrimitiveRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildFileElement_closure5$_closure16$_closure17: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDuplicateMappingAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.report.XmlReportWriter$_buildViolationElement_closure6: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: java.lang.Boolean isSingleLineClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateListLiteralRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_getFirstValue_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.CoupledTestCaseAstVisitor: boolean isMethodCallOnSameClass(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule: java.util.List getViolations(org.codenarc.rule.AstVisitor,org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor: java.lang.Object this$dist$get$4(java.lang.String)>",
    "<org.codenarc.rule.convention.NoJavaUtilDateAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitClosureExpression_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter: groovy.lang.Closure buildSummaryByPackage(org.codenarc.results.Results)>",
    "<org.codenarc.rule.InlineViolationsParser: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.exceptions.ReturnNullFromCatchBlockAstVisitor: void visitCatchStatement(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.rule.NullReturnTracker: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildProjectElement_closure3: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.ant.CodeNarcTask$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.CompositeRuleSet: void addRule(org.codenarc.rule.Rule)>",
    "<org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_writeReport_closure1$_closure10: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule: void this$dist$set$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BracesForForLoopRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_applyTo_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner: org.codenarc.ruleset.RuleSet createInitialRuleSet()>",
    "<org.codenarc.rule.size.AbcMetricAstVisitor: org.gmetrics.metric.Metric createMetric()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.EmptyMethodInAbstractClassAstVisitor: boolean isAbstract(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitClassComplete_closure5: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.concurrency.StaticMatcherFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UseAssertEqualsInsteadOfAssertTrueRule: void <init>()>",
    "<org.codenarc.rule.concurrency.StaticSimpleDateFormatFieldAstVisitor: void addSimpleDateFormatViolation(org.codehaus.groovy.ast.FieldNode,java.lang.String)>",
    "<org.codenarc.rule.basic.HardcodedWindowsRootDirectoryAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ClassNameSameAsFilenameRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.naming.ObjectOverrideMisspelledMethodNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolations_closure3$_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildRulesElement_closure9$_closure19$_closure20$_closure21: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasOneStaticFieldOfItself_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule$_applyTo_closure2: java.util.List getViolations()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: boolean isIgnoredVariable(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.util.io.ClassPathResource: void <init>(java.lang.String)>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildLogo_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitSetUpCallsSuperAstVisitor$_visitMethod_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner$_applyPluginsProcessRules_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildCSS_closure2$_closure9: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.JsonReaderRuleSet$_loadRuleElements_closure1: java.lang.Object doCall(java.lang.String,java.util.Map)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_addInitializedField_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.exceptions.CatchNullPointerExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportParser: java.util.Map parseBaselineXmlReport(java.io.InputStream)>",
    "<org.codenarc.rule.naming.InterfaceNameAstVisitor: boolean shouldVisit(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.SpaceInsideParenthesesAstVisitor: void visitClassComplete(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.ObjectFinalizeAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.convention.PublicMethodsBeforeNonPublicMethodsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_collectAllPrivateMethods_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor$_checkMethods_closure1: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedVariableRule: java.util.List getAnonymousClasses(java.util.List)>",
    "<org.codenarc.rule.FieldReferenceAstVisitor$_visitMethodEx_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.convention.ParameterReassignmentRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.braces.ForStatementBracesRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter$_buildRulesElement_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.StaticSimpleDateFormatFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor$_visitForLoop_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor$_isEmpty_closure1$_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BlockStartsWithBlankLineAstVisitor: void addViolation(int)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasState_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.CloneWithoutCloneableAstVisitor: org.codehaus.groovy.ast.MethodNode cloneMethod(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.convention.ParameterReassignmentAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.source.AbstractSourceCode: boolean isValid()>",
    "<org.codenarc.rule.logging.SystemErrPrintAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.plugin.disablerules.DisableRulesInCommentsPlugin$_processViolationsForFile_closure1: org.codenarc.plugin.disablerules.LookupTable getLookupTable()>",
    "<org.codenarc.rule.basic.EmptySynchronizedStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.AbstractFinallyAstVisitor$_isStatementWithinFinally_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertTwoViolations_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ClassNameSameAsSuperclassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.AbstractReportWriter: java.lang.String getDescriptionProperty(org.codenarc.rule.Rule)>",
    "<org.codenarc.rule.size.MethodCountAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.logging.LoggerForDifferentClassAstVisitor: boolean isCapitalized(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryReturnKeywordRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportUtil: java.lang.String removeIllegalCharacters(java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTransientModifierRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ModifiersUtil: java.util.List parseModifiersList(java.lang.String)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure19: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: void visitDeclarationExpression(org.codehaus.groovy.ast.expr.DeclarationExpression)>",
    "<org.codenarc.rule.AbstractRuleTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_addInitializedField_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.ImportFromSamePackageRule$_applyTo_closure1: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.ant.ReportOption: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.MissingBlankLineAfterImportsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter$_writeSummary_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.generic.IllegalSubclassAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.OptionalMethodParameterRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToPlusMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.basic.DuplicateSetValueAstVisitor: boolean isSetLiteral(org.codehaus.groovy.ast.expr.CastExpression)>",
    "<org.codenarc.rule.logging.LogUtil: boolean isMatchingLoggerDefinition(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.report.AbstractReportWriter: void writeReport(org.codenarc.AnalysisContext,org.codenarc.results.Results)>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.AbstractClassNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.FinalClassWithProtectedMemberAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildScript_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequired: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.ConsecutiveStringConcatenationAstVisitor: boolean areJoinableConstants(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.grails.GrailsServletContextReferenceAstVisitor: void visitVariableExpression(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildProjectElement_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.CodeNarc: void setDefaultsIfNecessary()>",
    "<org.codenarc.rule.concurrency.SynchronizedOnGetClassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInFieldDeclarationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsBlankLineAfterOpeningBrace_closure4: java.lang.Integer getClassStartLine()>",
    "<org.codenarc.rule.AbstractConstructorCallAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17: org.codenarc.results.Results getResults()>",
    "<org.codenarc.ruleset.GroovyDslRuleSet: void <init>(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryReturnKeywordAstVisitor: org.codehaus.groovy.ast.stmt.Statement getLastStatement(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildReportElement_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_getAnonymousClasses_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.PrintStackTraceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCatchBlockAstVisitor: void visitTryCatchFinally(org.codehaus.groovy.ast.stmt.TryCatchStatement)>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor: void visitListExpression(org.codehaus.groovy.ast.expr.ListExpression)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitUtil: boolean isTearDownMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.XmlReportWriter: groovy.lang.Closure buildMessageElement(org.codenarc.rule.Violation)>",
    "<org.codenarc.rule.security.NonFinalSubclassOfSensitiveInterfaceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer$_processDirectory_closure1: org.codenarc.ruleset.RuleSet getRuleSet()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDotClassAstVisitor: void visitPropertyExpression(org.codehaus.groovy.ast.expr.PropertyExpression)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitConstructorOrMethod_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.EmptyIfStatementAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.util.ModifiersUtil$_matchesAnyModifiers_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonRule: void processPackage(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.convention.IfStatementCouldBeTernaryAstVisitor: boolean hasNoElseBlock(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_writeReport_closure1$_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.SynchronizedReadObjectMethodAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.CouldBeSwitchStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BlockEndsWithBlankLineRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateNumberLiteralRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAfterSwitchAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.generic.IllegalClassMemberRule: boolean isReady()>",
    "<org.codenarc.rule.grails.GrailsMassAssignmentRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.FactoryMethodNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryConstructorRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitTearDownCallsSuperAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildViolationElement_closure6: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.report.CompactTextReportWriter$_writeFileViolations_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitCaseStatement_closure6: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.AbstractClassWithPublicConstructorRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_getAnonymousClasses_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.size.ParameterCountAstVisitor: java.lang.String getName(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12$_closure15$_closure16: org.codenarc.results.Results getResults()>",
    "<org.codenarc.results.DirectoryResults$_removeViolation_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_isAnnotatedWithOverride_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_setRuleProperties_closure4: org.codenarc.rule.Rule getRule()>",
    "<org.codenarc.rule.design.SimpleDateFormatMissingLocaleAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21$_closure22: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsPublicControllerMethodAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12: org.codenarc.results.Results getResults()>",
    "<org.codenarc.util.ImportUtil$_sourceLineAndNumberForStarImport_closure2: org.codehaus.groovy.ast.ImportNode getImportNode()>",
    "<org.codenarc.rule.formatting.BracesForClassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure18: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ant.CodeNarcTask$_classLoaderForPaths_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.ruleset.TopLevelDelegate$_rule_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: boolean nameExcluded(java.lang.String)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleElements_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildReportElement_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.TrailingWhitespaceRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.groovyism.ConstantExpressionExtractor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter: groovy.lang.Closure buildSummaryByPackageRow(org.codenarc.results.Results,boolean)>",
    "<org.codenarc.rule.design.NestedForLoopRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor$_argumentsContainThis_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.concurrency.SystemRunFinalizersOnExitAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30$_closure32: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.NoDefAstVisitor$_visitDeclarationExpression_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.BooleanMethodReturnsNullAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.AssignmentToStaticFieldFromInstanceMethodAstVisitor: void visitMethodComplete(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.JsonReportWriter$_buildRulesElement_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule$_applyTo_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllSummaryByPackageRowsRecursively_closure3: org.codenarc.results.Results getResults()>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_findRule_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: void visitDeclarationExpression(org.codehaus.groovy.ast.expr.DeclarationExpression)>",
    "<org.codenarc.test.AbstractTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ParameterCountAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.junit.JUnitUtil: boolean isAssertCallWithConstantValue(org.codehaus.groovy.ast.expr.MethodCallExpression,java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor: java.lang.String getParameterDefinitionAsString(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.CompactTextReportWriter$_writeFileViolations_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.exceptions.CatchThrowableRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor$_closureReturnsCollection_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor$_checkMethods_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor$_visitMethodCallExpression_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.exceptions.CatchRuntimeExceptionRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.basic.DuplicateSetValueAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildReportElement_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor$_visitClassEx_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.imports.DuplicateImportRule$_applyTo_closure1: java.util.List getViolations()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySubstringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor: void handleClosure(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.util.ModifiersUtil: boolean matchesModifiers(java.lang.Integer,java.lang.Integer)>",
    "<org.codenarc.source.AbstractSourceCode$_removeGrabTransformation_closure1$_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.exceptions.CatchRuntimeExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_uniqueAndSortedDeclaringClassNames_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: void checkStatementExpression(org.codehaus.groovy.ast.MethodNode,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.junit.JUnitAssertAlwaysSucceedsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase: java.util.List manuallyApplyRule(java.lang.String)>",
    "<org.codenarc.CodeNarcRunner: void registerPluginForClassName(java.lang.String)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_visitConstructorOrMethod_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckAstVisitor: boolean isSuperReference(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.generic.IllegalSubclassAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.convention.NoTabCharacterRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.naming.PropertyNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.ruleregistry.PropertiesFileRuleRegistry: java.lang.Class getRuleClass(java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$ViolationAndPath: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.logging.MultipleLoggersRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementAstVisitor: java.lang.Object collectIfsAndElses(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.jdbc.DirectConnectionManagementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ant.CodeNarcTask$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.util.ImportUtil$_sourceLineAndNumberForStarImport_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.JUnitAssertAlwaysSucceedsAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.naming.MethodNameAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unused.ReferenceCollector: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.util.CodeNarcVersion: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfViolationsWithPriority_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintAstVisitor$_visitMethodCallExpression_closure1: org.codehaus.groovy.ast.expr.MethodCallExpression getCall()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationAstVisitor$_visitConstructorCallExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure25: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule: java.lang.Object this$dist$invoke$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitBlockStatement_closure2: org.codehaus.groovy.ast.stmt.BlockStatement getBlock()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryOverridingMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.RuleSetBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryTearDownRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.Violation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_writeReport_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor$_visitMethodCallExpression_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitWhileLoop_closure4: org.codehaus.groovy.ast.stmt.WhileStatement getWhileStatement()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToPutAtMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner$_initializePlugins_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.dry.DryUtil: boolean areTheSameConstantOrLiteralMapEntryExpression(org.codehaus.groovy.ast.expr.MapEntryExpression,org.codehaus.groovy.ast.expr.MapEntryExpression)>",
    "<org.codenarc.util.io.UrlResource: void <init>(java.lang.String)>",
    "<org.codenarc.rule.grails.GrailsPublicControllerMethodAstVisitor: boolean isIgnoredMethodName(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.CompactTextReportWriter$_writeFileViolations_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateMapLiteralAstVisitor$_visitMapExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: java.lang.String extractVariableOrFieldName(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.formatting.BracesForIfElseAstVisitor: void visitElseClosingBrace(org.codenarc.rule.formatting.BracesForIfElseRule,org.codehaus.groovy.ast.stmt.IfStatement,java.lang.String)>",
    "<org.codenarc.rule.imports.UnnecessaryGroovyImportRule$_applyTo_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.VolatileArrayFieldAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_containsKey_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor$_visitMethodCallExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_flexibleCheckForCorrectColumn_closure11: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.DeadCodeAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure7: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.BracesForMethodAstVisitor$_joinThrowsLines_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.BitwiseOperatorInConditionalAstVisitor: void addViolationBitwiseConditional(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor$_addViolationsForInstanceFields_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitConstructorOrMethod_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.ClassConstraintsAndMapping: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.AbstractSingleSpaceAfterKeywordAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.OptionalFieldAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_writeReport_closure1$_closure10: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.AssignCollectionUniqueRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.RequiredStringRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.basic.DuplicateCaseStatementAstVisitor$_visitSwitch_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportUtil: groovy.lang.Closure cdata(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckBeforeInstanceOfAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.unused.AbstractLastStatementInBlockAstVisitor: boolean isLastStatementInBlock(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_collectAllPrivateMethods_closure2$_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.plugin.disablerules.LookupTable$_buildLookupTable_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BracesForTryCatchFinallyAstVisitor$_visitCatch_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.PrintlnAstVisitor$_visitClassEx_closure2: java.lang.Object doCall(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.concurrency.StaticDateFormatFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.AbstractImportRule$_findLineNumberOfFirstClassDeclaration_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainHasToStringAstVisitor$_visitClassComplete_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.ant.CodeNarcTask: java.net.URLClassLoader classLoaderForPaths(java.lang.String[],java.lang.ClassLoader)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDoubleInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitForLoop_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter: void <init>()>",
    "<org.codenarc.rule.basic.AssertWithinFinallyBlockAstVisitor: void visitAssertStatement(org.codehaus.groovy.ast.stmt.AssertStatement)>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitClosureExpression_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processImports_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.SystemRunFinalizersOnExitRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceInsideParenthesesAstVisitor$_visitClassComplete_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.BlockEndsWithBlankLineAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.rule.logging.MultipleLoggersAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.CodeNarc: org.codenarc.analyzer.SourceAnalyzer createSourceAnalyzer()>",
    "<org.codenarc.util.io.ClassPathResource: java.io.InputStream getInputStream(java.lang.String)>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure2$_closure3: java.util.List getViolations()>",
    "<org.codenarc.report.XmlReportUtil$_cdata_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildFileElement_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.OptionalFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassEx_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceInsideParenthesesAstVisitor$_visitClassComplete_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor$_isUsedInAnyAnnotationOnCurrentAnnotatedNode_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor: void visitConstantExpression(org.codehaus.groovy.ast.expr.ConstantExpression)>",
    "<org.codenarc.rule.formatting.LineLengthRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.logging.LoggerForDifferentClassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToLeftShiftMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsPublicControllerMethodRule: void <init>()>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_applyTo_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBigIntegerInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionAstVisitor$_hasJUnit4Annotation_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ParameterCountRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.UseOfNotifyMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.AbstractSourceCode$_getLineNumberForCharacterIndex_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.ImplicitReturnStatementAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.DeadCodeRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildProjectElement_closure3$_closure9$_closure10: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.AbstractClassWithoutAbstractMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27$_closure29: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.BooleanMethodReturnsNullRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.AssignmentTracker: void addViolationIfAssignment(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.junit.JUnitPublicFieldRule: void <init>()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitClosureExpression_closure2: org.codehaus.groovy.ast.expr.ClosureExpression getExpression()>",
    "<org.codenarc.report.XmlReportWriter$_buildProjectElement_closure3$_closure11: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_containsKey_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer: void <clinit>()>",
    "<org.codenarc.rule.design.OptionalMethodParameterAstVisitor$_processParameters_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.CatchExceptionRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.dry.DuplicateListLiteralAstVisitor: void <init>()>",
    "<org.codenarc.rule.formatting.SpaceAfterMethodDeclarationNameRuleAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.rule.basic.BrokenOddnessCheckAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.basic.EqualsAndHashCodeAstVisitor$_visitClassEx_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryModOneAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.SourceCodeUtil: java.util.List nodeSourceLines(org.codenarc.source.SourceCode,org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.report.InlineXmlReportWriter$_buildViolationElement_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.StaticFieldsBeforeInstanceFieldsAstVisitor$_visitClassComplete_closure1: java.lang.Boolean getHasDeclaredInstanceField()>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: java.lang.String getPenultimateLine(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllSummaryByPackageRowsRecursively_closure3$_closure13: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure5: org.codenarc.results.FileResults getResults()>",
    "<org.codenarc.rule.basic.DuplicateCaseStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase: void removeSuppressedViolations(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleElements_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.ExceptionNotThrownRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor$_closureReturnsCollection_closure2: java.lang.Boolean getReturnsArray()>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_configure_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.exceptions.ConfusingClassNamedExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationAstVisitor$_visitConstructorCallExpression_closure1: org.codehaus.groovy.ast.expr.Expression getArgument()>",
    "<org.codenarc.rule.basic.MultipleUnaryOperatorsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.JavadocEmptyFirstLineRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.exceptions.CatchArrayIndexOutOfBoundsExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.dry.DuplicateStringLiteralRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.braces.ElseBlockBracesAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.ruleset.CompositeRuleSet: void addRuleSet(org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitBlockStatement_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.WildcardPattern: boolean matches(java.lang.String)>",
    "<org.codenarc.results.FileResults: java.lang.String toString()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitCatchStatement_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.security.FileCreateTempFileAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceAstVisitor: void addOpeningBraceViolation(org.codehaus.groovy.ast.ASTNode,java.lang.String)>",
    "<org.codenarc.rule.junit.JUnitUtil$_isAssertCallWithConstantValue_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor: void addMethodViolation(org.codehaus.groovy.ast.MethodNode,org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility)>",
    "<org.codenarc.rule.formatting.BracesForForLoopAstVisitor$_findLastLineOfForExpressions_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDotClassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceInsideParenthesesAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsNotBlankLineAfterOpeningBrace_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.RuleSetDelegate: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ReturnFromFinallyBlockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBooleanExpressionAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionAstVisitor: boolean isJUnit3MatchingMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.TextReportWriter: void writePackageViolations(java.io.Writer,org.codenarc.results.Results)>",
    "<org.codenarc.ruleregistry.PropertiesFileRuleRegistry: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceRule: void <init>()>",
    "<org.codenarc.report.CompactTextReportWriter$_writeFileViolations_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildScript_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.results.FileResults$_getNumberOfViolationsWithPriority_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: void visitSwitch(org.codehaus.groovy.ast.stmt.SwitchStatement)>",
    "<org.codenarc.rule.imports.DuplicateImportRule: void checkImport(java.lang.String,int,java.util.Set,java.util.List)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildBodySection_closure2$_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor: void visitClassComplete(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.basic.ExplicitGarbageCollectionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectIncludedProperties_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer$_processDirectory_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationRule: void <init>()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10$_closure11: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.FinalClassWithProtectedMemberAstVisitor: boolean isProtected(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: int nestingLevelForClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.junit.UseAssertTrueInsteadOfAssertEqualsAstVisitor: void visitAssertStatement(org.codehaus.groovy.ast.stmt.AssertStatement)>",
    "<org.codenarc.rule.grails.GrailsStatelessServiceRule: void <init>()>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolations_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor$_visitBlockStatement_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.security.SystemExitAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.design.PublicInstanceFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.FinalClassWithProtectedMemberAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults$_getTotalNumberOfFiles_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter: java.util.List getFileResults(org.codenarc.results.Results)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure7$_closure8: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildHeaderSection_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.PathUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintAstVisitor$_visitMethodCallExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.HashtableIsObsoleteRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.dry.DuplicateMapLiteralAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportParser: java.util.Map parseBaselineXmlReport(java.lang.String)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer: void <init>()>",
    "<org.codenarc.rule.dry.DuplicateNumberLiteralRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.FieldReferenceAstVisitor$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsRule: void setGormStaticMethodsNames(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.ConsecutiveLiteralAppendsAstVisitor: boolean isChainedAppend(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.ExplicitStackInstantiationRule$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.formatting.SpaceBeforeClosingBraceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule$1: void <init>(org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule,java.lang.Object)>",
    "<org.codenarc.rule.security.InsecureRandomAstVisitor: boolean isJavaLangMathCall(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.util.MultilineCommentChecker: void processLine(java.lang.String)>",
    "<org.codenarc.report.XmlReportWriter$_buildViolationElement_closure6$_closure18: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.formatting.SpaceAroundClosureArrowAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.source.AbstractSourceCode$_removeGrabTransformation_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer$_processDirectory_closure1: java.lang.String getDir()>",
    "<org.codenarc.util.ImportUtil: java.util.Map sourceLineAndNumberForImport(org.codenarc.source.SourceCode,org.codehaus.groovy.ast.ImportNode)>",
    "<org.codenarc.report.XmlReportWriter$_buildFileElement_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildScript_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter: groovy.lang.Closure buildFileElement(org.codenarc.results.Results)>",
    "<org.codenarc.rule.design.CloneableWithoutCloneAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCastRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitTearDownCallsSuperRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor: boolean isAnonymousInnerClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.FieldReferenceAstVisitor: void visitPropertyExpression(org.codehaus.groovy.ast.expr.PropertyExpression)>",
    "<org.codenarc.rule.basic.ReturnFromFinallyBlockAstVisitor: void visitReturnStatement(org.codehaus.groovy.ast.stmt.ReturnStatement)>",
    "<org.codenarc.report.XmlReportWriter$_buildFileElement_closure5: org.codenarc.results.FileResults getResults()>",
    "<org.codenarc.rule.exceptions.MissingNewInThrowStatementAstVisitor: boolean isFirstLetterUpperCase(java.lang.String)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.braces.ElseBlockBracesRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer: void measureRuleProcessingTime(org.codenarc.rule.Rule,groovy.lang.Closure)>",
    "<org.codenarc.source.AbstractSourceCode: java.util.Map getMethodCallExpressions()>",
    "<org.codenarc.rule.formatting.SpaceAroundMapEntryColonAstVisitor: void visitMapEntryExpression(org.codehaus.groovy.ast.expr.MapEntryExpression)>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertNoViolations(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryConstructorAstVisitor: void analyzeConstructor(org.codehaus.groovy.ast.ConstructorNode)>",
    "<org.codenarc.rule.naming.FieldNameRule: void validate()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14$_closure15: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.UseAssertNullInsteadOfAssertEqualsAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitClassEx_closure1: org.codehaus.groovy.ast.ClassNode getNode()>",
    "<org.codenarc.report.XmlReportWriter$_buildProjectElement_closure3$_closure11$_closure12: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.ReturnNullFromCatchBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor$_processParameters_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void addClosureFields(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.source.AbstractSourceCode: void <clinit>()>",
    "<org.codenarc.rule.convention.LongLiteralWithLowerCaseLAstVisitor: void visitConstantExpression(org.codehaus.groovy.ast.expr.ConstantExpression)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.results.FileResults: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ConstantIfExpressionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor$_visitMethodEx_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: boolean isSingleLineClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.imports.ImportFromSamePackageRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ModifiersUtil$_matchesAnyModifiers_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner$_registerPluginsForClassNames_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.ConfusingTernaryAstVisitor: void addViolationForBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression,org.codehaus.groovy.ast.expr.TernaryExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBigDecimalInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.VolatileLongOrDoubleFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor: void collectMapKeys(org.codehaus.groovy.ast.expr.MethodCallExpression,java.util.Map)>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterAstVisitor: java.util.List getViolations()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.dry.DuplicateMapLiteralRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceInsideParenthesesAstVisitor: int startOfCommentIndex(java.lang.String)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: java.lang.String createMessage(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.basic.EmptyIfStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.comments.ClassJavadocRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.formatting.MissingBlankLineBeforeAnnotatedFieldRuleAstVisitor: boolean annotationsNotOnSameLineAsFieldDeclaration(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitClosureExpression_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryOverridingMethodAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.dry.DuplicateMapLiteralRule: void <init>()>",
    "<org.codenarc.report.JsonReportWriter$_buildPackageElements_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.BaselineViolation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.InvertedIfElseRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToPowerMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure4$_closure11: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.VariableUsageFinder: void visitVariableExpression(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsNotBlankLineAfterOpeningBrace_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.size.CrapMetricRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.util.WildcardPattern$_matches_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.groovyism.ConstantExpressionExtractor$_extractFromExpression_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBigDecimalInstantiationAstVisitor: boolean isTypeSuffixNecessary(java.lang.Object)>",
    "<org.codenarc.util.ModifiersUtil: boolean matchesAnyModifiers(java.lang.Integer,java.util.List)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer: org.codenarc.rule.Rule findRule(org.codenarc.ruleset.RuleSet,java.lang.String)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_applyProperties_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ClassNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12$_closure15$_closure16: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.AbstractReportWriter$_getSortedRules_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.OptionalCollectionReturnTypeAstVisitor: void <clinit>()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildBodySection_closure2: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.formatting.SpaceAfterMethodCallNameRuleAstVisitor: boolean hasPrecedingWhitespace(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor: void findViolations(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure5$_closure13: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundMapEntryColonAstVisitor: java.lang.String violationMessage(java.lang.String,java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.basic.DoubleNegativeRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_findRule_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.MathRandomTracker: void callBackForMathRandomReturns(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.grails.ClassConstraintsAndMapping$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.plugin.disablerules.DisableRulesInCommentsPlugin$_processViolationsForFile_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.AbstractReportWriter$_writeReportToFile_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean hasNoElseBlock(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_addInitializedField_closure4: java.lang.String getVarName()>",
    "<org.codenarc.rule.size.CrapMetricRule: boolean doesCoberturaXmlFileExist()>",
    "<org.codenarc.rule.basic.ConstantTernaryExpressionAstVisitor: void visitTernaryExpression(org.codehaus.groovy.ast.expr.TernaryExpression)>",
    "<org.codenarc.rule.concurrency.SynchronizedReadObjectMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.MovedRules: org.codenarc.ruleset.MovedRules$MovedToRuleSet movedTo(java.lang.String)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_flexibleCheckForCorrectColumn_closure10: java.lang.Integer getChainedMethodDotColumn()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasSingletonAnnotation_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.InstanceofAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.FieldReferenceAstVisitor$_visitMethodEx_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.util.ImportUtil$_sortImportsByLineNumber_closure4: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.plugin.FileViolations: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.HardcodedWindowsRootDirectoryAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.AbstractRuleTestCase: java.lang.String removeInlineViolations(java.lang.String)>",
    "<org.codenarc.rule.formatting.BracesForMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EqualsOverloadedAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.results.DirectoryResults: int getNumberOfFilesWithViolations(int,boolean)>",
    "<org.codenarc.rule.groovyism.ConstantExpressionExtractor: java.util.List extractFromExpression(org.codehaus.groovy.ast.expr.ListExpression)>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure6: java.io.Writer getWriter()>",
    "<org.codenarc.rule.basic.EqualsAndHashCodeAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.ConstructorsSkippingFieldReferenceAstVisitor: void <init>(java.util.Collection)>",
    "<org.codenarc.rule.concurrency.DoubleCheckedLockingAstVisitor: org.codehaus.groovy.ast.stmt.SynchronizedStatement getSynchronizedStatement(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitBlockStatement_closure8: org.codehaus.groovy.ast.stmt.BlockStatement getBlock()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertyLockingAstVisitor: java.lang.String getGuardName(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.junit.JUnitUtil: boolean isSetUpMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.grails.GrailsDuplicateMappingRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.CommentsUtil: void <clinit>()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.CoupledTestCaseRule: void <init>()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySafeNavigationOperatorAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_visitClassComplete_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_buildFileElement_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.ConsecutiveStringConcatenationAstVisitor: boolean isNumberLiteral(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.junit.JUnitUtil$_isAssertCallWithConstantValue_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.util.WildcardPattern$_convertStringWithWildcardsToRegex_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer: void configure(org.codenarc.ruleset.RuleSet,java.lang.String)>",
    "<org.codenarc.rule.basic.ComparisonOfTwoConstantsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConstantExpressionExtractor$_extractFrom_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: void checkNonEmptyLineNumber(int,int)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure5$_closure13: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInFieldDeclarationAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertyLockingAstVisitor: boolean isReadLocked(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24: java.lang.Object call(org.codenarc.report.SortableHtmlReportWriter$ViolationAndPath)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertyLockingAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolation_closure4: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_visitDeclarationExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: void visitParameters(org.codehaus.groovy.ast.Parameter[])>",
    "<org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.ClassReferenceAstVisitor: void checkType(java.lang.String,org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.convention.InvertedConditionAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.report.JsonReportWriter$_buildPackageElements_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateRuleIndexPages$_main_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.size.CrapMetricRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameRule: void <init>()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolations_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_afterBlock_closure2: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer: void initializeWildcardPatterns()>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor$_checkMethods_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.GroovyVersion: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter: void initializeDefaultResourceBundle()>",
    "<org.codenarc.rule.imports.ImportFromSamePackageRule: java.lang.String getClassNameNoPackage(java.lang.String)>",
    "<org.codenarc.rule.junit.JUnitLostTestAstVisitor$_visitClass_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor$_visitMethodEx_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.ruleset.MovedRules$Renamed: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.basic.DuplicateSetValueAstVisitor$_visitCastExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter: groovy.lang.Closure buildAllSummaryByPackageRowsRecursively(org.codenarc.results.Results)>",
    "<org.codenarc.report.SortableHtmlReportWriter: java.lang.Object this$dist$invoke$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.design.InstanceofAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.generic.RequiredStringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterMethodCallNameRuleAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ImportUtil: java.util.Map sourceLineAndNumberForStarImport(org.codenarc.source.SourceCode,org.codehaus.groovy.ast.ImportNode)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_addViolationOnMismatch_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.CoupledTestCaseRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.FieldTypeRequiredRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor: void <init>(org.codenarc.rule.AbstractAstVisitor)>",
    "<org.codenarc.report.HtmlReportWriter$_buildBodySection_closure1: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.exceptions.ExceptionNotThrownAstVisitor: void visitCatchStatement(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_printRuleProcessingTimes_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryToStringAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.security.SystemExitAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BlockEndsWithBlankLineAstVisitor: java.lang.String lastButOneCodeLine(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.tool.GenerateRuleIndexPages$_main_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassEx_closure2: java.lang.Object doCall(java.util.Collection)>",
    "<org.codenarc.rule.serialization.EnumCustomSerializationIgnoredAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionAstVisitor$_hasJUnit4Annotation_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure18: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter: groovy.lang.Closure buildPackageSection(org.codenarc.results.Results)>",
    "<org.codenarc.tool.GenerateRuleIndexPages$_main_closure1: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.ant.Report: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter$_writePackageViolations_closure2: java.io.Writer getWriter()>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitConstructorOrMethod_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.source.AbstractSourceCode$_removeGrabTransformation_closure1$_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.braces.ForStatementBracesAstVisitor: void visitForLoop(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.rule.basic.DuplicateCaseStatementAstVisitor$_visitSwitch_closure2: java.lang.Object doCall(java.lang.Object,org.codehaus.groovy.ast.stmt.CaseStatement)>",
    "<org.codenarc.rule.formatting.BracesForTryCatchFinallyAstVisitor: void visitFinally(org.codenarc.rule.formatting.BracesForTryCatchFinallyRule,org.codehaus.groovy.ast.stmt.TryCatchStatement)>",
    "<org.codenarc.rule.junit.JUnitUtil: boolean isLiteralWithValueThatEvaluatesTo(org.codehaus.groovy.ast.expr.Expression,boolean)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToAndMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_generateAllPossibleParameterSignatures_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.BracesForClassRule$_applyTo_closure1: java.lang.Object doCall(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildBodySection_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UnnecessaryFailAstVisitor$_visitCatchStatement_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: void addViolation(org.codehaus.groovy.ast.ASTNode,java.lang.String,int)>",
    "<org.codenarc.rule.junit.UseAssertTrueInsteadOfNegationRule: void <init>()>",
    "<org.codenarc.rule.design.BooleanReturnTracker: void checkReturnValues(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30$_closure32: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.EmptyMethodAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.util.ConsecutiveUtils: boolean isJoinableType(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor: java.lang.Object this$dist$invoke$4(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_getMethodCallsAndMapKeys_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: void addViolation(java.lang.String,int)>",
    "<org.codenarc.report.XmlReportWriter$_buildRulesElement_closure9$_closure19$_closure20$_closure21: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitConstructorOrMethod_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor$_processParameters_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBooleanInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitSetUpCallsSuperRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceBeforeClosingBraceAstVisitor: void addOpeningBraceViolation(org.codehaus.groovy.ast.ASTNode,java.lang.String)>",
    "<org.codenarc.rule.design.OptionalCollectionReturnTypeRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule$_applyTo_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor$_visitCatchStatement_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor$_addViolationsForInstanceFields_closure3: java.lang.Object doCall(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.basic.EmptyFinallyBlockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner: org.codenarc.ruleset.RuleSet createInitialRuleSetFromFiles()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.design.BooleanMethodReturnsNullAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor$_visitMethodCallExpression_closure1: org.codehaus.groovy.ast.expr.MethodCallExpression getCall()>",
    "<org.codenarc.ruleset.GroovyDslRuleSet: void evaluateDsl(groovy.lang.GroovyShell)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_getAnonymousClasses_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.SynchronizedOnBoxedPrimitiveAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterClosingBraceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults$_getTotalNumberOfFiles_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule$1: void <init>(org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule,java.lang.Object)>",
    "<org.codenarc.rule.basic.BooleanGetBooleanRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.source.AbstractSourceCode$_removeGrabTransformation_closure1$_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildBodySection_closure2$_closure8: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.report.CompactTextReportWriter: void writeFileViolations(java.io.Writer,org.codenarc.results.FileResults)>",
    "<org.codenarc.rule.formatting.SpaceInsideParenthesesAstVisitor: java.lang.String stripComments(java.lang.String)>",
    "<org.codenarc.CodeNarcRunner$_writeReports_closure8: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.formatting.BracesForTryCatchFinallyRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.BooleanGetBooleanAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure29: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.generic.IllegalClassReferenceRule: boolean isReady()>",
    "<org.codenarc.rule.convention.ParameterReassignmentAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.report.AbstractReportWriter: java.util.List getSortedRules(org.codenarc.AnalysisContext)>",
    "<org.codenarc.util.ImportUtil: java.util.Map sourceLineAndNumberForNonStarImport(org.codenarc.source.SourceCode,org.codehaus.groovy.ast.ImportNode)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure11: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_writeReport_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateRuleIndexPages: void <clinit>()>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.SystemOutPrintAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.InsecureRandomAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: void checkIfThereIsBlankLineBeforeClosingBrace(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitImports_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCastAstVisitor: void visitCastExpression(org.codehaus.groovy.ast.expr.CastExpression)>",
    "<org.codenarc.rule.grails.GrailsDuplicateMappingAstVisitor: void <init>()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor$_visitArgumentlistExpression_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_buildViolationElement_closure6$_closure18: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule: java.lang.Object this$dist$invoke$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23: org.codenarc.results.Results getResults()>",
    "<org.codenarc.CodeNarcRunner: void initializePluginsFromSystemProperty()>",
    "<org.codenarc.rule.exceptions.SwallowThreadDeathAstVisitor: void <init>()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27$_closure29: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.TextReportWriter$_writePackageViolations_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDoubleInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.RuleSetBuilder: org.codenarc.ruleset.RuleSet getRuleSet()>",
    "<org.codenarc.rule.concurrency.UseOfNotifyMethodAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.BracesForTryCatchFinallyAstVisitor$_visitCatch_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceAfterClosingBraceAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitCaseStatement_closure6: org.codehaus.groovy.ast.stmt.CaseStatement getStatement()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasSingletonAnnotation_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.util.ModifiersUtil$_parseModifiersList_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.CouldBeSwitchStatementAstVisitor: java.lang.Boolean inSupportedOperation(org.codehaus.groovy.syntax.Token)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGetterAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.junit.ChainedTestAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_afterBlock_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitSynchronizedStatement_closure7: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.ListRuleSet$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.plugin.disablerules.DisableRulesInCommentsPlugin: void processViolationsForFile(org.codenarc.plugin.FileViolations)>",
    "<org.codenarc.rule.formatting.BracesForMethodAstVisitor$_hasOpeningBraceOnSameLine_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_applyTo_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.NestedSynchronizationAstVisitor: void visitSynchronizedStatement(org.codehaus.groovy.ast.stmt.SynchronizedStatement)>",
    "<org.codenarc.rule.imports.ImportFromSamePackageRule: boolean hasAlias(org.codehaus.groovy.ast.ImportNode)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_printRuleProcessingTimes_closure5: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.concurrency.SynchronizedOnStringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundClosureArrowRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.AssignCollectionUniqueAstVisitor: boolean isFalseConstant(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.CollectAllIsDeprecatedRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_getViolations_closure1: org.codenarc.rule.AstVisitor getVisitor()>",
    "<org.codenarc.rule.naming.InterfaceNameSameAsSuperInterfaceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateRuleIndexPages$_main_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonAstVisitor$_removeAnyViolationsForSameLine_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.MovedRules$Renamed: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor: void visitMethodComplete(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.source.AbstractSourceCode: java.util.List getLines()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor: void <init>(java.util.Set,java.util.Set)>",
    "<org.codenarc.report.XmlReportWriter: groovy.lang.Closure buildProjectElement(org.codenarc.AnalysisContext)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonRule$_processImports_closure1: java.util.List getViolations()>",
    "<org.codenarc.report.InlineXmlReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter$_writeSummary_closure1: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor$_visitMethodCallExpression_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.JavadocEmptyReturnTagRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ComparisonWithSelfRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterAstVisitor: void setSourceCode(org.codenarc.source.SourceCode)>",
    "<org.codenarc.report.XmlReportWriter$_buildViolationElement_closure6$_closure18: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.SynchronizedOnThisRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalClassMemberAstVisitor: void visitProperty(org.codehaus.groovy.ast.PropertyNode)>",
    "<org.codenarc.report.InlineXmlReportWriter$_buildViolationElement_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.FieldReferenceAstVisitor: void <init>(java.util.Collection)>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor$_isEmpty_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor: void visitImports(org.codehaus.groovy.ast.ModuleNode)>",
    "<org.codenarc.util.ImportUtil: java.util.Map sourceLineAndNumberForImport(org.codenarc.source.SourceCode,java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor$_visitForLoop_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule: java.util.List addOrderingViolations(org.codenarc.source.SourceCode,java.lang.String,java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.naming.InterfaceNameSameAsSuperInterfaceAstVisitor$_visitClassEx_closure1: org.codehaus.groovy.ast.ClassNode getNode()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassComplete_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor: void visitVariableExpression(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.ruleset.GroovyDslRuleSet$_evaluateDsl_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTernaryExpressionAstVisitor: void visitTernaryExpression(org.codehaus.groovy.ast.expr.TernaryExpression)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure29: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.jdbc.DirectConnectionManagementAstVisitor: boolean isJavaSQLDriverManagerCall(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ConstantIfExpressionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainWithServiceReferenceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.FieldNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionRule: void <init>()>",
    "<org.codenarc.ruleset.RuleSetUtil$_loadRuleScriptFile_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.UseCollectManyAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckBeforeInstanceOfRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin: void <init>(org.codenarc.util.io.Resource)>",
    "<org.codenarc.rule.formatting.SpaceAfterCatchRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor$_visitMethodCallExpression_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.size.AbcMetricAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.FieldTypeRequiredAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.JavadocMissingParamDescriptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToPowerMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12$_closure15: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateRuleSetAllRulesByCategory: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults: void <init>()>",
    "<org.codenarc.source.AbstractSourceCode: void init()>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor$_argumentsContainThis_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.CompositeRuleSet: void <init>()>",
    "<org.codenarc.rule.basic.ConstantAssertExpressionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ObjectOverrideMisspelledMethodNameAstVisitor: void checkForMethodNameWithIncorrectCase(org.codehaus.groovy.ast.MethodNode,java.lang.String,java.util.List)>",
    "<org.codenarc.rule.junit.JUnitPublicFieldAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildBodySection_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor: boolean isMainMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.imports.UnusedImportRule: java.lang.String findReference(org.codenarc.source.SourceCode,java.lang.String)>",
    "<org.codenarc.rule.exceptions.ExceptionNotThrownAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryFloatInstantiationAstVisitor: void <init>()>",
    "<org.codenarc.source.CustomCompilerPhaseSourceDecorator: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ConstantAssertExpressionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBooleanExpressionAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.serialization.SerialVersionUIDRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.CouldBeElvisAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassComplete_closure6: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.imports.UnusedImportRule$_findReference_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.dry.DuplicateListLiteralAstVisitor$_visitListExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.UnsafeArrayDeclarationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineViolation: boolean equals(java.lang.Object)>",
    "<org.codenarc.analyzer.StringSourceAnalyzer: org.codenarc.results.Results analyze(org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.rule.unnecessary.ConsecutiveStringConcatenationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor$_visitStaticMethodCallExpression_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.TextReportWriter$_writePackageViolations_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor$_visitDeclarationExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryStringInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitListExpression_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainHasToStringAstVisitor: void visitClassComplete(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.XmlReportWriter$_buildFileElement_closure5$_closure16$_closure17: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.basic.DuplicateCaseStatementAstVisitor$_visitSwitch_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildHeaderSection_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.concurrency.ThreadLocalNotStaticFinalAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.grails.ClassConstraintsAndMapping$_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitTestMethodWithoutAssertAstVisitor: boolean checksException(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.NestedSynchronizationAstVisitor$_visitClosureExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ParameterNameAstVisitor$_processParameters_closure1: java.lang.String getMethodName()>",
    "<org.codenarc.rule.generic.IllegalRegexRule: boolean isReady()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitWhileLoop_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.generic.IllegalClassMemberAstVisitor: boolean matchesIgnoreMethodNames(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void visitCaseStatement(org.codehaus.groovy.ast.stmt.CaseStatement)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitForLoop_closure5: org.codehaus.groovy.ast.stmt.ForStatement getForStatement()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasState_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.AbstractFinallyAstVisitor$_isStatementWithinFinally_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.naming.FactoryMethodNameAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.exceptions.MissingNewInThrowStatementAstVisitor: void visitThrowStatement(org.codehaus.groovy.ast.stmt.ThrowStatement)>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolation_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryFinalOnPrivateMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ClosureAsLastMethodParameterAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryToStringAstVisitor: boolean isToStringMethodCall(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTernaryExpressionAstVisitor: boolean areTrueAndFalse(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.basic.ClassForNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4$_closure13$_closure15: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.GroovyDslRuleSet$_createGroovyShell_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BracesForClassRule$_applyTo_closure1: java.util.List getViolations()>",
    "<org.codenarc.rule.generic.IllegalSubclassRule: boolean isReady()>",
    "<org.codenarc.rule.InlineViolationsParser$ParseResult: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure4$_closure11: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_collectAllPrivateFields_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.SystemRunFinalizersOnExitAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: boolean isNotAnIgnoredOverrideMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCatchBlockAstVisitor$_visitTryCatchFinally_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.util.WildcardPattern: void <init>(java.lang.String,boolean)>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor: boolean isNamedArgumentsListContainingThis(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processStaticImports_closure2: java.util.List getViolations()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToMethodAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.ruleset.RuleSetDelegate$_methodMissing_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.ImportFromSamePackageRule$_applyTo_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsNotBlankLineAfterOpeningBrace_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.test.AbstractTestCase: java.lang.String getName()>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.util.SourceCodeUtil: java.util.List sourceLinesBetweenNodes(org.codenarc.source.SourceCode,org.codehaus.groovy.ast.ASTNode,org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.basic.ComparisonOfTwoConstantsAstVisitor: void addViolationIfBothAreConstantsOrLiterals(org.codehaus.groovy.ast.ASTNode,org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_visitClassComplete_closure2: org.codenarc.rule.grails.ClassConstraintsAndMapping getConstraintsAndMapping()>",
    "<org.codenarc.rule.junit.JUnitTearDownCallsSuperAstVisitor$_visitMethod_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.RemoveAllOnSelfAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.FilteredRuleSet$_getRules_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.test.AbstractTestCase: void setUpAbstractTestCase()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure29: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.comments.JavadocMissingThrowsDescriptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.InlineViolationsParser$ParseResult: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor$_extractTransients_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean isFalseExpression(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.basic.ExplicitGarbageCollectionAstVisitor: boolean isPropertyExpression(org.codehaus.groovy.ast.expr.Expression,java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIntegerInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule$_applyTo_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterNotOperatorRuleAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.NonFinalSubclassOfSensitiveInterfaceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ClassNameSameAsFilenameRule$_applyTo_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_visitDeclarationExpression_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedObjectRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ParameterNameAstVisitor$_processParameters_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.AbstractReportWriter: java.lang.String getResourceBundleString(java.lang.String,java.lang.String,boolean)>",
    "<org.codenarc.util.ModifiersUtil$_matchesAnyModifiers_closure1: java.lang.Integer getActualModifiers()>",
    "<org.codenarc.ruleset.RuleSetUtil$_loadRuleScriptFile_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.DuplicateCaseStatementAstVisitor: void visitSwitch(org.codehaus.groovy.ast.stmt.SwitchStatement)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsMassAssignmentAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ImportUtil$_sourceLineAndNumberForImport_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.results.DirectoryResults: int getNumberOfViolationsWithPriority(int)>",
    "<org.codenarc.rule.formatting.BracesForForLoopAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.ReferenceCollector: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.AssertionTrap$_methodNamesCountsAsAssertion_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor: void checkPackageName(java.lang.String,org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.grails.GrailsDomainHasEqualsRule: void <init>()>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolations_closure3$_closure6: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.CodeNarcRunner$_registerPluginsForClassNames_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.LoggerForDifferentClassAstVisitor: boolean isEqualToCurrentClassOrClassName(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean areTrueAndFalseExpressions(org.codehaus.groovy.ast.stmt.Statement,org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.ruleset.MovedRules$Renamed: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.concurrency.StaticSimpleDateFormatFieldAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.InterfaceNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_recordMethodColumnAndSourceLineForClosureBlocks_closure7: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckAstVisitor: boolean isPropertyInvocation(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.rule.junit.UseAssertSameInsteadOfAssertTrueAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: void afterBlock()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.rule.exceptions.ThrowNullPointerExceptionRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_applyProperties_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor: void processType(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor: void processParameters(org.codehaus.groovy.ast.Parameter[],java.lang.String)>",
    "<org.codenarc.rule.unused.UnusedObjectAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.UseCollectNestedAstVisitor: org.codehaus.groovy.ast.Parameter getClosureParameter(org.codehaus.groovy.ast.expr.ClosureExpression,org.codehaus.groovy.ast.Parameter)>",
    "<org.codenarc.report.XmlReportWriter$_buildMessageElement_closure8: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.logging.LoggerForDifferentClassAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.AbstractJavadocMissingDescriptionRule: void <init>()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.basic.EmptySwitchStatementAstVisitor: void visitSwitch(org.codehaus.groovy.ast.stmt.SwitchStatement)>",
    "<org.codenarc.report.ReportWriterFactory: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule$_addOrderingViolations_closure1: java.lang.String getMessage()>",
    "<org.codenarc.rule.formatting.BlockEndsWithBlankLineAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21$_closure23: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.logging.LoggerWithWrongModifiersAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_applyTo_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: int getLineNumberForCharacterIndex(int)>",
    "<org.codenarc.rule.basic.ParameterAssignmentInFilterClosureAstVisitor: void <clinit>()>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4$_closure13: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassComplete_closure5: java.lang.Object doCall(java.util.Collection)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_visitConstructorOrMethod_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToMinusMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.junit.JUnitFailWithoutMessageRuleAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectMapKeys_closure6: java.util.Map getResult()>",
    "<org.codenarc.rule.basic.ParameterAssignmentInFilterClosureRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildMessageElement_closure7: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: boolean isNotExpressionWithMethodCallOnName(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.tool.GenerateRuleIndexPages$_main_closure2$_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.LineLengthRule: boolean flagIfRegularLine(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationToGetClassAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.BracesForForLoopAstVisitor: int findLastLineOfForExpressions(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.rule.security.PublicFinalizeMethodAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.naming.VariableNameAstVisitor$_visitDeclarationExpression_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_buildSourceLineElement_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EqualsAndHashCodeAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.UnsafeArrayDeclarationAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolations_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.security.JavaIoPackageAccessAstVisitor: void visitPropertyExpression(org.codehaus.groovy.ast.expr.PropertyExpression)>",
    "<org.codenarc.rule.security.SystemExitRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitTestMethodWithoutAssertAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterAstVisitor$_hasItParameter_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.InstanceofRule: void <init>()>",
    "<org.codenarc.rule.naming.ClassNameSameAsFilenameRule$_applyTo_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor$_closure1: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.exceptions.CatchArrayIndexOutOfBoundsExceptionRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.logging.LoggerForDifferentClassAstVisitor: boolean isEqualToCurrentClassName(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.results.DirectoryResults$_removeViolation_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_flexibleCheckForCorrectColumn_closure12: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.imports.AbstractImportRule: void eachImportLine(org.codenarc.source.SourceCode,groovy.lang.Closure)>",
    "<org.codenarc.report.XmlReportWriter$_writeReport_closure1: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor$_isEmpty_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ConstantExpressionExtractor: java.util.List extractFromExpression(org.codehaus.groovy.ast.expr.ConstantExpression)>",
    "<org.codenarc.rule.naming.ParameterNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ParameterNameAstVisitor$_processParameters_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor$_visitCastExpression_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_applyProperties_closure2: org.codenarc.ruleset.RuleSet getRuleSet()>",
    "<org.codenarc.rule.exceptions.ReturnNullFromCatchBlockAstVisitor: boolean shouldVisitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4$_closure13$_closure15: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.tool.GenerateRuleIndexPages: void main(java.lang.String[])>",
    "<org.codenarc.report.HtmlReportWriter$_buildBodySection_closure1$_closure8: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceAfterSwitchRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildButtons_closure6$_closure30: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12$_closure15: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure7$_closure9: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer: java.lang.String getActualPropertiesFile(java.lang.String)>",
    "<org.codenarc.rule.convention.IfStatementCouldBeTernaryAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.ruleset.XmlFileRuleSet: void <init>(java.lang.String)>",
    "<org.codenarc.rule.naming.ClassNameSameAsFilenameRule: java.lang.String classNodeType(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToRightShiftMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor$_isExpressionUsedInAnnotation_closure2: org.codehaus.groovy.ast.expr.ConstantExpression getExpression()>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19$_closure21$_closure22: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processStaticImports_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer: void <init>()>",
    "<org.codenarc.rule.exceptions.ThrowNullPointerExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.LoggerForDifferentClassAstVisitor: boolean isLoggerForDerivedClass(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInMethodDeclarationAstVisitor: java.lang.String removeDistractingParts(java.lang.String)>",
    "<org.codenarc.rule.groovyism.ClosureAsLastMethodParameterRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_findSuperClassMethods_closure7: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure7$_closure9: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner: org.codenarc.results.Results execute()>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllPackageSections_closure5$_closure17: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarc$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.GroovyVersion: boolean isNotGroovyVersion2()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: boolean isGetterSynchronizedAndSetterUnsychronized(java.util.List,java.lang.String)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: java.util.Map getIndentLevelsMap()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBooleanExpressionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToEqualsMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.basic.ForLoopShouldBeWhileLoopRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarc: void parseReport(java.lang.String)>",
    "<org.codenarc.ruleset.MovedRules$MovedToRuleSet: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.codenarc.tool.GenerateCodeNarcRulesProperties$_main_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_getMethodCallsAndMapKeys_closure5: java.lang.Object doCall(org.codehaus.groovy.ast.stmt.ExpressionStatement)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure4$_closure12: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBooleanInstantiationAstVisitor: boolean isConstructorCallAViolation(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor$_visitStaticMethodCallExpression_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor$_visitMethodCallExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.AbstractSourceCode$_removeGrabTransformation_closure1$_closure3$_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_writeReport_closure1$_closure10: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstanceOfCheckRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor$_visitBlockStatement_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAfterClosingBraceAstVisitor: boolean isNotAllowedCharacterAfterClosure(java.lang.String,int)>",
    "<org.codenarc.rule.basic.ForLoopShouldBeWhileLoopAstVisitor: void visitForLoop(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonAstVisitor$_removeAnyViolationsForSameLine_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_configure_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterCodeVisitor: void visitVariableExpression(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.rule.imports.UnusedImportRule$_findReference_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.AstUtil: boolean respondsTo(java.lang.Object,java.lang.String)>",
    "<org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ant.CodeNarcTask: void addFileset(org.apache.tools.ant.types.FileSet)>",
    "<org.codenarc.rule.groovyism.ExplicitStackInstantiationRule$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.concurrency.NestedSynchronizationAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionAstVisitor$_hasJUnit4Annotation_closure1: org.codehaus.groovy.ast.MethodNode getNode()>",
    "<org.codenarc.rule.FieldReferenceAstVisitor: java.util.List getOuterClassNames()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21$_closure22: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.generic.IllegalStringRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_afterBlock_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.JsonReportWriter: boolean isRoot(org.codenarc.results.Results)>",
    "<org.codenarc.rule.design.AbstractClassWithPublicConstructorAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.NoTabCharacterRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassEx_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTernaryExpressionAstVisitor: boolean isBooleanConditionalExpression(org.codehaus.groovy.ast.expr.BooleanExpression)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitConstructorOrMethod_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitPublicFieldAstVisitor: void visitClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.tool.GenerateAll: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ParameterReassignmentAstVisitor: void <init>()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure19: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToXorMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.HardCodedWindowsFileSeparatorRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.LineLengthRule: boolean lineExceedsMaxLength(java.lang.String)>",
    "<org.codenarc.report.AbstractHtmlReportWriter: groovy.lang.Closure buildRuleDescriptions(org.codenarc.AnalysisContext)>",
    "<org.codenarc.rule.convention.IfStatementCouldBeTernaryAstVisitor: boolean isBlockWithSingleReturnStatement(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor: void visitProperty(org.codehaus.groovy.ast.PropertyNode)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21$_closure23: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: java.util.List generateAllPossibleParameterSignatures(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor$_visitMethodCallExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.JUnitPublicNonTestMethodAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.imports.UnnecessaryGroovyImportRule$_applyTo_closure1: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: boolean isSpockBlockLabel(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.BrokenNullCheckRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_processMethodOrConstructorCall_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.StaticConnectionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.JavaIoPackageAccessAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.basic.DeadCodeAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThreadLocalNotStaticFinalRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.SpockIgnoreRestUsedRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor: java.util.List getAnonymousClasses()>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor$_processParameters_closure1: java.lang.String getMethodName()>",
    "<org.codenarc.rule.formatting.BlankLineBeforePackageRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasOneStaticFieldNamedInstance_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.StaticFieldsBeforeInstanceFieldsAstVisitor$_visitClassComplete_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.NoDefAstVisitor$_visitParameters_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.CodeNarcRunner: java.util.List applyPluginsProcessRules(org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.CodeNarc: void checkMaxViolations(org.codenarc.results.Results,int,int)>",
    "<org.codenarc.rule.basic.ConstantTernaryExpressionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarc$__clinit__closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_buildViolationElement_closure6: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_initializeImportNames_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitCaseStatement_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueAstVisitor: int getActualArgumentIndex(java.util.List)>",
    "<org.codenarc.report.InlineXmlReportWriter$_buildViolationElement_closure1$_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer: void applyProperties(java.util.Properties,org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.rule.ClassReferenceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor$_isNamedArgumentsListContainingThis_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalSubclassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_addViolationOnMismatch_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.BracesForMethodAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.rule.imports.UnnecessaryGroovyImportRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.imports.UnusedImportRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.CouldBeSwitchStatementAstVisitor: void <init>()>",
    "<org.codenarc.rule.generic.IllegalRegexRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.CommonThrowAstVisitor: void visitThrowStatement(org.codehaus.groovy.ast.stmt.ThrowStatement)>",
    "<org.codenarc.rule.imports.AbstractImportRule$_findLineNumberOfFirstClassDeclaration_closure1: java.lang.Integer getFirstLineNumber()>",
    "<org.codenarc.report.BaselineXmlReportWriter: groovy.lang.Closure buildViolationElement(org.codenarc.rule.Violation)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: java.util.List setupFlexibleIndentForAnyClosureParameterBlocks(org.codehaus.groovy.ast.expr.ArgumentListExpression)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_uniqueAndSortedDeclaringClassNames_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.CollectionReturnTracker: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure4$_closure11: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_buildReportElement_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.logging.PrintlnAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.JavaIoPackageAccessAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToMinusMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ClassNameSameAsSuperclassAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void addViolationForOperator(org.codehaus.groovy.ast.ASTNode,java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor$_visitConstructorOrMethod_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsStatelessServiceRule: boolean shouldIgnoreField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.report.ReportWriterFactory: org.codenarc.report.ReportWriter getReportWriter(java.lang.String,java.util.Map)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryReturnKeywordAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySelfAssignmentAstVisitor: boolean propertyExpressionsAreEqual(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_visitConstructorOrMethod_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ExplicitGarbageCollectionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfViolationsWithPriority_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.CodeNarc$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.exceptions.ExceptionExtendsErrorAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure19: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsAstVisitor$_visitMethodCallExpression_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.ComparisonOfTwoConstantsAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.imports.DuplicateImportRule$_applyTo_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor$_isEmpty_closure1$_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27: java.lang.Object call(org.codenarc.rule.Violation)>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor$_visitBlockStatement_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.logging.LoggerWithWrongModifiersAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementAstVisitor$_visitIfElse_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.size.CrapMetricRule: void <init>()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertyLockingAstVisitor: void <init>()>",
    "<org.codenarc.rule.formatting.SpaceAroundMapEntryColonAstVisitor: int columnIndexForColon(org.codehaus.groovy.ast.expr.MapEntryExpression)>",
    "<org.codenarc.rule.basic.ForLoopShouldBeWhileLoopAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor$_visitDeclarationExpression_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.EmptyForStatementAstVisitor: void visitForLoop(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.ant.CodeNarcTask: void <init>()>",
    "<org.codenarc.rule.groovyism.GStringAsMapKeyAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.AbstractFinallyAstVisitor: boolean isStatementWithinFinally(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor$_methodReturnsArray_closure1: java.lang.Boolean getReturnsArray()>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.concurrency.BusyWaitRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitLostTestRule: void <init>()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor$_extractTransients_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure14: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor$_processParameters_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor: boolean argumentsContainThis(org.codehaus.groovy.ast.expr.TupleExpression)>",
    "<org.codenarc.rule.jdbc.JdbcResultSetReferenceRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.design.NestedForLoopAstVisitor: void visitForLoop(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_generateAllPossibleParameterSignatures_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.CouldBeSwitchStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet: java.io.InputStream getSchemaXmlInputStream()>",
    "<org.codenarc.rule.dry.DryUtil: boolean haveTheSameListLiteralValue(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.design.BooleanMethodReturnsNullAstVisitor: boolean methodReturnsBoolean(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.generic.IllegalClassMemberAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.groovyism.ExplicitStackInstantiationRule: java.lang.Object this$dist$get$3(java.lang.String)>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: java.util.List getLines()>",
    "<org.codenarc.util.ImportUtil$_sourceLineAndNumberForStarImport_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceInsideParenthesesAstVisitor: boolean hasSpaceBeforeClosingParenthesis(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor$_visitMethodCallExpression_closure1: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.CyclomaticComplexityRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_writeReport_closure1: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.VirtualResults: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_containsKey_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.MovedRules: void <clinit>()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonAstVisitor$_removeAnyViolationsForSameLine_closure1: int getLineNumber()>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: boolean isMethodCallOnName(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.CodeNarc$_parseArgs_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.DuplicateMapKeyAstVisitor$_visitMapExpression_closure2: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_addClosureFields_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.PropertyNameRule: void <init>()>",
    "<org.codenarc.util.ImportUtil$_sortImportsByLineNumber_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.LineLengthRule: boolean sourceLineIsImport(java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitCatchStatement_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter: java.lang.String getFormattedTimestamp()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.logging.PrintlnAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.design.SimpleDateFormatMissingLocaleRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure18$_closure22: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.BracesForMethodAstVisitor$_joinThrowsLines_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.ruleset.RuleSets: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitLostTestAstVisitor: void visitClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4$_closure14: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor$_closureReturnsArray_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineViolation: void <init>()>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin: java.lang.String scrub(java.lang.String)>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitClassEx_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.convention.CompileStaticlVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.basic.ComparisonWithSelfAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.security.UnsafeImplementationAsMapAstVisitor: void visitCastExpression(org.codehaus.groovy.ast.expr.CastExpression)>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor$_processParameters_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.AssignmentToStaticFieldFromInstanceMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure26: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.serialization.SerializableClassMustDefineSerialVersionUIDAstVisitor$_visitClassEx_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.plugin.disablerules.DisableRulesInCommentsPlugin: boolean isViolationDisabled(org.codenarc.plugin.disablerules.LookupTable,org.codenarc.rule.Violation)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySetterRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ClassSizeAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.naming.AbstractClassNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.basic.EmptyForStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTernaryExpressionAstVisitor: void <clinit>()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure13: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.formatting.MissingBlankLineBeforeAnnotatedFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_getFileResults_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.BracesForClassRule: java.util.List findOpeningBraceLine(org.codenarc.source.SourceCode,org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.StubRule$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildProjectElement_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.AbstractRuleTestCase$_removeSuppressedViolations_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor$_visitConstructorOrMethod_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor: void visitMethodPointerExpression(org.codehaus.groovy.ast.expr.MethodPointerExpression)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor: boolean isSingleton(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.grails.GrailsDomainHasEqualsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ConfusingTernaryAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$ViolationAndPath: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.naming.PackageNameMatchesFilePathRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.comments.ClassJavadocRule$_applyTo_closure1: java.util.List getViolations()>",
    "<org.codenarc.rule.junit.JUnitAssertAlwaysFailsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.CatchIllegalMonitorStateExceptionRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitConstructorOrMethod_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryObjectReferencesAstVisitor$_visitBlockStatement_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: boolean isNotOpeningParenthesis(java.lang.String,int)>",
    "<org.codenarc.rule.design.ToStringReturnsNullAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonRule$_processImports_closure1: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_generateAllPossibleParameterSignatures_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: int columnForIndentLevel(int)>",
    "<org.codenarc.util.WildcardPattern$_matches_closure2: java.lang.String getString()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCatchBlockAstVisitor$_visitTryCatchFinally_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.ClassConstraintsAndMapping$_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.basic.HardCodedWindowsFileSeparatorAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.WildcardPattern$_matches_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildProjectElement_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.InterfaceNameSameAsSuperInterfaceAstVisitor$_visitClassEx_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInVariableDeclarationAstVisitor: void visitExpressionStatement(org.codehaus.groovy.ast.stmt.ExpressionStatement)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor: java.lang.String violationMessage(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.MissingBlankLineAfterPackageRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.size.CrapMetricRule: java.lang.Object createCrapMetric()>",
    "<org.codenarc.rule.exceptions.ThrowRuntimeExceptionRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor: void <init>()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_setupFlexibleIndentForAnyClosureParameterBlocks_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoDefAstVisitor$_visitParameters_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.StaticDateFormatFieldAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ConstantAssertExpressionAstVisitor: void visitAssertStatement(org.codehaus.groovy.ast.stmt.AssertStatement)>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer: java.util.List getSourceDirectories()>",
    "<org.codenarc.ruleset.RuleSetUtil: boolean isXmlFile(java.lang.String)>",
    "<org.codenarc.rule.design.ToStringReturnsNullRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitClosureExpression_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryObjectReferencesAstVisitor$_visitBlockStatement_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySelfAssignmentRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.SpockIgnoreRestUsedAstVisitor: void visitClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_processMethodOrConstructorCall_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.CodeNarcRunner$_applyPluginsProcessRules_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCatchBlockAstVisitor$_visitTryCatchFinally_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor$_methodReturnsCollection_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: java.lang.String getLine(int)>",
    "<org.codenarc.report.ReportWriterFactory$_getReportWriter_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.EmptyMethodInAbstractClassAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.junit.JUnitAssertAlwaysFailsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTernaryExpressionAstVisitor: boolean isOperationThatReturnsABoolean(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.ant.CodeNarcTask: org.apache.tools.ant.types.Path createClasspath()>",
    "<org.codenarc.rule.basic.EmptyCatchBlockAstVisitor: void visitCatchStatement(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.rule.formatting.MissingBlankLineBeforeAnnotatedFieldRuleAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_applyTo_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.ConsecutiveStringConcatenationAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.InlineXmlReportWriter: groovy.lang.Closure buildViolationElement(org.codenarc.rule.Violation)>",
    "<org.codenarc.rule.concurrency.ThreadGroupAstVisitor: boolean isConstructorNamed(org.codehaus.groovy.ast.expr.ConstructorCallExpression,java.lang.Class)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInMethodDeclarationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildViolationElement_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGetterAstVisitor: boolean isSpockMethod(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTernaryExpressionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitConstructorOrMethod_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.braces.IfStatementBracesAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_collectAllPrivateMethods_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: boolean isNotDollar(java.lang.String,int)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_getMethodCallsAndMapKeys_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildRulesElement_closure9: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.exceptions.MissingNewInThrowStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsAstVisitor$_visitMethodCallExpression_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter: groovy.lang.Closure buildProjectElement(org.codenarc.AnalysisContext)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: boolean isValidColumn(int)>",
    "<org.codenarc.rule.formatting.SpaceAfterClosingBraceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.NullReturnTracker: boolean expressionReturnsNull(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.results.FileResults$_getNumberOfFilesWithViolations_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.imports.DuplicateImportRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.InlineXmlReportWriter: groovy.lang.Closure buildDescriptionElement(org.codenarc.rule.Rule)>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTernaryExpressionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner$_applyPluginsProcessRules_closure3: java.util.List getRules()>",
    "<org.codenarc.rule.design.OptionalMethodParameterAstVisitor$_processParameters_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.FieldTypeRequiredAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.report.XmlReportWriter$_buildProjectElement_closure3$_closure11: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure2$_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.ConsecutiveBlankLinesRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule$_addOrderingViolations_closure1: java.lang.Boolean getNonStaticFound()>",
    "<org.codenarc.rule.generic.StatelessClassRule: void setAddToIgnoreFieldNames(java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$ViolationAndPath: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.formatting.SpaceBeforeClosingBraceAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: boolean methodExcluded(java.lang.String)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_getMethodCallsAndMapKeys_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_visitClassComplete_closure2: org.codehaus.groovy.ast.ClassNode getNode()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean hasElseBlock(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule: java.lang.Object this$dist$invoke$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ImportUtil$_getAllImports_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCallForLastElementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThreadGroupRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.LineLengthRule: boolean sourceLineIsPackage(java.lang.String)>",
    "<org.codenarc.rule.basic.DuplicateMapKeyRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsBlankLineAfterOpeningBrace_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DryUtil: boolean haveTheSameConstantPropertyExpression(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_flexibleCheckForCorrectColumn_closure12: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.RemoveAllOnSelfAstVisitor: int getArity(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySetterAstVisitor: void addUnnecessarySetterViolation(org.codehaus.groovy.ast.expr.MethodCallExpression,java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor$_methodReturnsCollection_closure1: java.lang.Boolean getReturnsCollection()>",
    "<org.codenarc.rule.formatting.SpaceAfterClosingBraceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyMethodAstVisitor$_visitMethod_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin: void initialize()>",
    "<org.codenarc.plugin.disablerules.LookupTable: void checkForCodeNarcDisable(java.lang.String)>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_collectAllPrivateFields_closure2$_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.GroovyDslRuleSet$_createGroovyShell_closure1: java.lang.Object doCall(groovy.lang.Closure)>",
    "<org.codenarc.util.io.ClassPathResource: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.AssignCollectionUniqueAstVisitor: boolean isChainedUnique(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.convention.VariableTypeRequiredAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_writeReport_closure1$_closure10: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.imports.UnusedImportRule: java.lang.String findReference(org.codenarc.source.SourceCode,java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonAstVisitor: void visitStatement(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19$_closure21: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.AbstractReportWriter: boolean isEnabled(org.codenarc.rule.Rule)>",
    "<org.codenarc.rule.convention.VectorIsObsoleteRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.formatting.SpaceAfterNotOperatorRuleAstVisitor: void visitNotExpression(org.codehaus.groovy.ast.expr.NotExpression)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitImports_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.CodeNarcVersion: java.lang.String readCodeNarcVersion()>",
    "<org.codenarc.source.SourceCodeCriteria: boolean matches(org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_addInitializedField_closure3: java.lang.String getVarName()>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor: boolean isIgnoredOneElementMap(org.codehaus.groovy.ast.expr.MapExpression)>",
    "<org.codenarc.report.InlineXmlReportWriter$_buildViolationElement_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitSynchronizedStatement_closure7: org.codehaus.groovy.ast.stmt.SynchronizedStatement getStatement()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryConstructorAstVisitor: boolean isEmptyConstructor(org.codehaus.groovy.ast.ConstructorNode)>",
    "<org.codenarc.rule.concurrency.WaitOutsideOfWhileLoopRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: void removeInitializedField(java.lang.String)>",
    "<org.codenarc.rule.comments.ClassJavadocRule$_applyTo_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateCodeNarcRulesProperties$_main_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceAstVisitor: boolean checkIsEmptyBlock(java.lang.String,int)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor: boolean methodReturnsArray(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.rule.basic.DuplicateMapKeyAstVisitor$_visitMapExpression_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean isOnlyAConstantOrLiteralExpression(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor$_visitMethodEx_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19$_closure21$_closure22: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_visitConstructorOrMethod_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.grails.GrailsDomainHasEqualsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.design.OptionalMethodParameterAstVisitor$_processParameters_closure1: java.lang.String getMethodName()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor: void handleClosure(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.basic.DuplicateCaseStatementAstVisitor$_visitSwitch_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.AbstractClassWithoutAbstractMethodAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.InlineViolationsParser: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_visitClassEx_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ParameterCountAstVisitor$_isOverridden_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryObjectReferencesAstVisitor: void <init>()>",
    "<org.codenarc.rule.formatting.SpaceBeforeClosingBraceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueRule: void <init>()>",
    "<org.codenarc.report.AbstractReportWriter: void <clinit>()>",
    "<org.codenarc.util.PathUtil: java.lang.String removeLeadingSlash(java.lang.String)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_addViolationOnMismatch_closure1: java.lang.String getSetterName()>",
    "<org.codenarc.rule.exceptions.ThrowErrorRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor: void visitCatchStatement(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.rule.braces.WhileStatementBracesAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor$_processParameters_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.CloneableWithoutCloneAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27$_closure28: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryTearDownRule: void <init>()>",
    "<org.codenarc.rule.dry.DryUtil: boolean areTheSameConstantOrLiteralMaps(org.codehaus.groovy.ast.expr.MapExpression,org.codehaus.groovy.ast.expr.MapExpression)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: void checkIfThereIsNotBlankLineAfterOpeningBrace(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.AbstractSpaceAroundBraceAstVisitor: java.lang.String sourceLineOrEmpty(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToAndMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitSynchronizedStatement_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToGetAtMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.FieldNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.InterfaceNameSameAsSuperInterfaceAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.EqualsOverloadedAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BracesForIfElseRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_visitDeclarationExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyCatchBlockAstVisitor: boolean doesContainIgnoreWord(java.lang.String)>",
    "<org.codenarc.rule.exceptions.CatchThrowableRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void visitForLoop(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.rule.groovyism.UseCollectNestedAstVisitor: org.codehaus.groovy.ast.expr.Expression getMethodCallParameterThatIsAClosure(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor: void visitMethodComplete(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryParenthesesForMethodCallWithClosureAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule$_applyTo_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllPackageSections_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure7: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ant.CodeNarcTask: void setClasspathRef(org.apache.tools.ant.types.Reference)>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ParameterReassignmentAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean isReturnTrue(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.size.ParameterCountAstVisitor: void checkParametersCount(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.basic.EqualsOverloadedRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_recordMethodColumnAndSourceLineForClosureBlocks_closure7: org.codehaus.groovy.ast.expr.MethodCallExpression getMethodCallExpression()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInMethodDeclarationAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.concurrency.SynchronizedOnThisAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor: java.util.Set collectIncludedProperties(org.codehaus.groovy.ast.expr.MapExpression)>",
    "<org.codenarc.rule.design.BooleanReturnTracker: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateStringLiteralRule: groovy.lang.Closure defineAdditionalChecksClosure()>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule$_applyTo_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitForLoop_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.util.SourceCodeUtil: boolean containsOnlyAsciiCharacters(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInFieldDeclarationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.MethodSizeAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.rule.formatting.SpaceAroundClosureArrowAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter$_writeReportToFile_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTransientModifierAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassComplete_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitLostTestAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.formatting.BracesForIfElseAstVisitor: void visitElseOpeningBrace(org.codenarc.rule.formatting.BracesForIfElseRule,org.codehaus.groovy.ast.stmt.IfStatement,java.lang.String)>",
    "<org.codenarc.util.ImportUtil: java.util.List sortImportsByLineNumber(java.util.List,org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.convention.NoJavaUtilDateRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ModifiersUtil$_parseModifiers_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ParameterCountAstVisitor: boolean isOverridden(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.comments.JavadocConsecutiveEmptyLinesRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor: void processMethodOrConstructorCall(org.codehaus.groovy.ast.expr.MethodCall)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryFloatInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.SourceFile: java.lang.String getName()>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_collectAllPrivateFields_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.VariableTypeRequiredAstVisitor$_visitDeclarationExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.SimpleDateFormatMissingLocaleAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor: void addViolationIfDoubleQuoted(org.codehaus.groovy.ast.expr.ConstantExpression)>",
    "<org.codenarc.rule.naming.VariableNameAstVisitor: boolean hasFieldAnnotation(org.codehaus.groovy.ast.expr.DeclarationExpression)>",
    "<org.codenarc.rule.concurrency.SynchronizedReadObjectMethodAstVisitor$_isSerializable_closure1: java.lang.Boolean getIsSerializable()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySetterAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.ThrowRuntimeExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor$_isEmpty_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter: groovy.lang.Closure buildAllViolationsSection(org.codenarc.results.Results)>",
    "<org.codenarc.rule.dry.DuplicateNumberLiteralRule$_defineAdditionalChecksClosure_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClosureStatementOnOpeningLineOfMultipleLineClosureAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.ruleset.MovedRules: java.lang.String getMovedOrRenamedMessageForRuleName(java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27$_closure28: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitUtil: boolean isAssertCallWithValueMatching(org.codehaus.groovy.ast.expr.MethodCallExpression,java.lang.String,groovy.lang.Closure)>",
    "<org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter$_writePackageViolations_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.MethodReturnTypeRequiredAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBigDecimalInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildProjectElement_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalClassMemberRule: void setIllegalMethodModifiers(java.lang.String)>",
    "<org.codenarc.rule.exceptions.ThrowThrowableRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.MultipleUnaryOperatorsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UseAssertEqualsInsteadOfAssertTrueRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.RemoveAllOnSelfAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.CodeNarcRunner: void <init>()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.InvertedConditionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase: void testThatUnrelatedCodeHasNoViolations()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27$_closure28: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.AssertionTrap: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryObjectReferencesAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule$_addOrderingViolations_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceAfterWhileRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: void visitClassComplete(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.basic.EmptySynchronizedStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DryUtil: boolean areTheSameConstantOrLiteralLists(org.codehaus.groovy.ast.expr.ListExpression,org.codehaus.groovy.ast.expr.ListExpression)>",
    "<org.codenarc.rule.comments.JavadocEmptyFirstLineRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor: boolean expressionContainsBannedCharacters(org.codehaus.groovy.ast.expr.ConstantExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.formatting.AbstractSingleSpaceAfterKeywordAstVisitor: void checkForSingleSpaceAndOpeningParenthesis(org.codehaus.groovy.ast.ASTNode,java.lang.String)>",
    "<org.codenarc.rule.basic.DuplicateMapKeyAstVisitor$_visitMapExpression_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToGetAtMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.AbstractSpaceAroundBraceAstVisitor: boolean isNotInsideGString()>",
    "<org.codenarc.rule.formatting.TrailingWhitespaceRule$_applyTo_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.CompactTextReportWriter$_writeFileViolations_closure4: java.lang.String getFile()>",
    "<org.codenarc.rule.unnecessary.VariableUsageFinder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.FieldReferenceAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.logging.PrintStackTraceAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.design.LocaleSetDefaultAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.report.HtmlReportWriter: java.lang.String toString()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure6: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.source.SourceString: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_addInitializedField_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceAfterMethodCallNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ParameterNameRule: void <init>()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildProjectElement_closure3$_closure9$_closure10: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.exceptions.CatchNullPointerExceptionRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasState_closure1: org.codehaus.groovy.ast.ClassNode getClassNode()>",
    "<org.codenarc.rule.formatting.SpaceBeforeClosingBraceAstVisitor: boolean checkIsEmptyBlock(java.lang.String,int)>",
    "<org.codenarc.report.XmlReportWriter$_buildMessageElement_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.ImportFromSamePackageRule$_applyTo_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildCSS_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.serialization.EnumCustomSerializationIgnoredAstVisitor: boolean isWriteReplaceMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.ruleset.MovedRules$Renamed: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ImplicitReturnStatementAstVisitor: boolean isEmptyMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.groovyism.AssignCollectionUniqueAstVisitor: boolean isMatchingUniqueCall(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildProjectElement_closure3$_closure9: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12$_closure15: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.dry.DryUtil: boolean haveTheSameMapLiteralValue(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.ruleregistry.RuleRegistryInitializer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.AssertionTrap: boolean methodNamesCountsAsAssertion(java.lang.Object)>",
    "<org.codenarc.util.PathUtil: java.lang.String removePathPrefix(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertViolations(java.lang.String,java.util.Map[])>",
    "<org.codenarc.rule.junit.JUnitPublicFieldAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToRightShiftMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor$_visitCatchStatement_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void processElvisExpression(org.codehaus.groovy.ast.expr.ElvisOperatorExpression)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void recordMethodColumnAndSourceLineForClosureBlocks(org.codehaus.groovy.ast.expr.MethodCallExpression,org.codehaus.groovy.ast.expr.ArgumentListExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInVariableDeclarationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitTestMethodWithoutAssertRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule: void this$dist$set$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.naming.PackageNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule$_applyTo_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.report.TextReportWriter: void writeTitle(java.io.Writer)>",
    "<org.codenarc.util.io.DefaultResourceFactory: org.codenarc.util.io.Resource getResource(java.lang.String)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalRule$_getViolations_closure1: org.codenarc.rule.AstVisitor getVisitor()>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfViolationsWithPriority_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.PackageNameMatchesFilePathRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarc: void <init>()>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor$_visitMethodEx_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.MovedRules$Renamed: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.basic.BitwiseOperatorInConditionalRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.BigDecimalInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure2$_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ToStringReturnsNullAstVisitor: void checkForImplicitNullReturns(org.codehaus.groovy.ast.MethodNode,java.lang.String)>",
    "<org.codenarc.util.ImportUtil$_sourceLineAndNumberForImport_closure1: java.lang.String getAlias()>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer$_processDirectory_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaRule: void <init>()>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin$_addFilesWithViolations_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.ReferenceCollector: void <init>()>",
    "<org.codenarc.rule.comments.AbstractJavadocEmptyTagRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.concurrency.NestedSynchronizationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.GroovyDslRuleSet: void <clinit>()>",
    "<org.codenarc.rule.serialization.EnumCustomSerializationIgnoredAstVisitor: boolean isPrivateStaticFinalField(org.codehaus.groovy.ast.FieldNode,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor: void suppressException(java.lang.Class,groovy.lang.Closure)>",
    "<org.codenarc.report.BaselineXmlReportParser: java.lang.String unescapeXml(java.lang.String)>",
    "<org.codenarc.CodeNarcRunner: java.lang.String buildCountsText(org.codenarc.results.Results)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_visitDeclarationExpression_closure1: org.codehaus.groovy.ast.expr.DeclarationExpression getDeclarationExpression()>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule$_applyTo_closure1: java.util.List getViolations()>",
    "<org.codenarc.rule.convention.IfStatementCouldBeTernaryAstVisitor: java.lang.String getReturnValue(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.util.io.ClassPathResource: boolean exists()>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.ruleset.TopLevelDelegate: void rule(java.lang.Class,java.util.Map)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_visitMethodEx_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.NullReturnTracker: void visitReturnStatement(org.codehaus.groovy.ast.stmt.ReturnStatement)>",
    "<org.codenarc.rule.design.BuilderMethodWithSideEffectsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.naming.ObjectOverrideMisspelledMethodNameAstVisitor: void checkForExactMethodName(org.codehaus.groovy.ast.MethodNode,java.lang.String,java.util.List,java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor$_visitMethodEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonRule$_processImports_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToPowerMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20: java.lang.Object doCall(org.codenarc.rule.Rule,java.lang.Object)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: java.lang.String getPath()>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor: boolean lastExpressionIsEndOfExpression(org.codehaus.groovy.ast.expr.ListExpression)>",
    "<org.codenarc.rule.grails.GrailsDuplicateMappingAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.ant.CodeNarcTask: void checkMaxViolations(org.codenarc.results.Results)>",
    "<org.codenarc.rule.imports.UnnecessaryGroovyImportRule$_applyTo_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure26: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitLostTestRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: boolean isChainedMethodCallOnDifferentLine(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitImports_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter: java.lang.String getRuleDescriptionOrDefaultMessage(org.codenarc.rule.Rule)>",
    "<org.codenarc.rule.generic.IllegalClassMemberRule: void setIllegalPropertyModifiers(java.lang.String)>",
    "<org.codenarc.util.io.UrlResource: boolean exists()>",
    "<org.codenarc.util.WildcardPattern$_convertStringWithWildcardsToRegex_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.comments.ClassJavadocRule$_applyTo_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPublicModifierAstVisitor: java.lang.String getDeclaration(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildCSS_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor: void visitVariableExpression(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void checkStatementIndent(org.codehaus.groovy.ast.stmt.Statement,org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.results.FileResults$_getNumberOfFilesWithViolations_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BlockEndsWithBlankLineAstVisitor: void addViolation(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer: void setRuleProperty(org.codenarc.rule.Rule,java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.basic.HardCodedWindowsFileSeparatorAstVisitor: void addViolationForWindowsSeparator(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.source.CustomCompilerPhaseSourceDecorator: java.lang.String toString()>",
    "<org.codenarc.rule.exceptions.CatchErrorRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_getViolations_closure1: java.lang.Object doCall(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor: boolean isMethodCall(org.codehaus.groovy.ast.expr.MethodCallExpression,java.lang.String)>",
    "<org.codenarc.rule.security.FileCreateTempFileAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.SynchronizedOnThisAstVisitor: void visitSynchronizedStatement(org.codehaus.groovy.ast.stmt.SynchronizedStatement)>",
    "<org.codenarc.rule.concurrency.StaticSimpleDateFormatFieldAstVisitor: boolean isSimpleDateFormatConstructorCall(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.MissingBlankLineBeforeAnnotatedFieldRuleAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterMethodDeclarationNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.PrintlnAstVisitor$_visitClassEx_closure1: java.lang.Object doCall(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.logging.PrintStackTraceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor$_visitCatchStatement_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.jdbc.JdbcResultSetReferenceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsAstVisitor$_visitMethodCallExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_uniqueAndSortedDeclaringClassNames_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.basic.EmptyFinallyBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.RuleSetUtil: void <clinit>()>",
    "<org.codenarc.tool.GenerateUtil: java.util.Properties getRuleExtraInformation()>",
    "<org.codenarc.rule.convention.NoDefAstVisitor$_visitDeclarationExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitLostTestAstVisitor$_visitClass_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.FileEndsWithoutNewlineRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_getViolations_closure1: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.concurrency.SynchronizedReadObjectMethodAstVisitor$_isSerializable_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.braces.ForStatementBracesAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: void checkTypeIfNotDynamicallyTyped(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin: void <clinit>()>",
    "<org.codenarc.rule.basic.DoubleNegativeAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.PrintlnAstVisitor$_visitClassEx_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ImportUtil$_sourceLineAndNumberForImport_closure1: java.lang.String getClassName()>",
    "<org.codenarc.util.ModifiersUtil: void <clinit>()>",
    "<org.codenarc.util.PathUtil: java.lang.String getName(java.lang.String)>",
    "<org.codenarc.rule.serialization.EnumCustomSerializationIgnoredAstVisitor: boolean isWriteObjectMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.groovyism.UseCollectNestedAstVisitor: void visitClassComplete(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.exceptions.CommonCatchAstVisitor: void visitCatchStatement(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsNotBlankLineAfterOpeningBrace_closure3: java.lang.Integer getClassStartLine()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitClosureExpression_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.concurrency.SynchronizedReadObjectMethodAstVisitor$_isSerializable_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterAstVisitor: void setRule(org.codenarc.rule.Rule)>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processImports_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.ClassReferenceAstVisitor: void <init>(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCallToSubstringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCallForLastElementAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.generic.StatelessClassRule: boolean matchesIgnoreFieldTypes(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToMinusMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.DuplicateSetValueRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_getMethodCallsAndMapKeys_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.imports.ImportFromSamePackageRule$_applyTo_closure1: java.util.List getViolations()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure11: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.basic.BrokenOddnessCheckRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.AbstractJavadocMissingDescriptionRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertTwoViolations_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.InlineViolationsParser$_parseLine_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.VolatileLongOrDoubleFieldVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.ruleset.RuleSetUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.BusyWaitAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.VirtualResults: java.util.List getViolations()>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckAstVisitor: boolean isMethodInvocation(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.rule.dry.DryUtil: boolean haveTheSameConstantValue(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.report.JsonReportWriter: boolean isWriteAsSingleLine()>",
    "<org.codenarc.plugin.FileViolations: java.lang.String toString()>",
    "<org.codenarc.report.TextReportWriter: void writeViolation(java.io.Writer,org.codenarc.rule.Violation,java.lang.String)>",
    "<org.codenarc.results.DirectoryResults: java.util.List getViolations()>",
    "<org.codenarc.rule.grails.GrailsPublicControllerMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToEqualsMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.StringSourceAnalyzer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor$_processParameters_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildMessageElement_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitPublicNonTestMethodRule: void <init>()>",
    "<org.codenarc.rule.design.CollectionReturnTracker$_expressionReturnsList_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueAstVisitor: void findViolations(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.security.UnsafeArrayDeclarationAstVisitor: boolean isPublicStaticFinal(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor$_visitConstructorOrMethod_closure2: org.codehaus.groovy.ast.MethodNode getNode()>",
    "<org.codenarc.source.AbstractSourceCode$_getLineNumberForCharacterIndex_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitSetUpCallsSuperRule: void <init>()>",
    "<org.codenarc.tool.GenerateRuleIndexPages: void generateIndexByNameFile(java.util.Map,int,java.util.Properties)>",
    "<org.codenarc.rule.imports.AbstractImportRule$_findLineNumberOfFirstClassDeclaration_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processStaticImports_closure2: java.lang.Object doCall(java.lang.Object,org.codehaus.groovy.ast.ImportNode)>",
    "<org.codenarc.CodeNarc$_parseArgs_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.concurrency.StaticConnectionAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.dry.DuplicateStringLiteralRule$_defineAdditionalChecksClosure_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor$_visitMethodCallExpression_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryOverridingMethodAstVisitor: boolean isSingleLineMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean isSingleStatementBlock(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.tool.GenerateCodeNarcRulesProperties: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UseAssertEqualsInsteadOfAssertTrueAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.ruleset.TopLevelDelegate: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportParser: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.CloneableWithoutCloneAstVisitor: boolean hasCloneMethod(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.ruleset.RuleSetUtil: boolean isJsonFile(java.lang.String)>",
    "<org.codenarc.results.DirectoryResults: int getNumberOfFilesWithViolations(int)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPublicModifierRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCallForLastElementAstVisitor: boolean isSubtractOneOnObject(java.lang.String,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor: void visitClassComplete(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolation_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryToStringAstVisitor: void visitDeclarationExpression(org.codehaus.groovy.ast.expr.DeclarationExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryLongInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsMassAssignmentAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_findMatchingSuperClassMethod_closure5: java.util.List getParameters()>",
    "<org.codenarc.rule.security.InsecureRandomAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildButtons_closure6$_closure30: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule: java.lang.Object this$dist$get$3(java.lang.String)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor: java.lang.String violationMessage(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.grails.GrailsStatelessServiceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstanceOfCheckAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySafeNavigationOperatorRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.JavadocEmptyLastLineRule: void <clinit>()>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_printRuleProcessingTimes_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceBeforeClosingBraceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.AbstractHtmlReportWriter: boolean isDirectoryContainingFilesWithViolations(org.codenarc.results.Results)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_getViolations_closure1$_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.JsonReportWriter: java.lang.Object[] buildRulesElement(org.codenarc.AnalysisContext)>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor: void <init>(java.lang.Class,java.util.Set,groovy.lang.Closure)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassEx_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.plugin.AbstractCodeNarcPlugin: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUnnecessarySetUpRule: void <init>()>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor$_visitMethodCallExpression_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.UseAssertSameInsteadOfAssertTrueAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.generic.IllegalClassMemberRule: void setAllowedMethodModifiers(java.lang.String)>",
    "<org.codenarc.source.AbstractSourceCode$_removeGrabTransformation_closure1$_closure3$_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalRule: java.util.List getViolations(org.codenarc.rule.AstVisitor,org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.design.CloneableWithoutCloneAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.CompactTextReportWriter$_writeFileViolations_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.FinalClassWithProtectedMemberAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryToStringAstVisitor: boolean isStringType(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.grails.GrailsDuplicateMappingRule: void <init>()>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor: boolean isExpressionUsedInAnnotation(org.codehaus.groovy.ast.expr.ConstantExpression,org.codehaus.groovy.ast.AnnotationNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCallForLastElementAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.naming.PackageNameMatchesFilePathRule: java.lang.String removeTrailingPeriod(java.lang.String)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14$_closure16: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor$_processParameters_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.RuleSetBuilder: void ruleset(groovy.lang.Closure)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: boolean isSingleLineClassViolation()>",
    "<org.codenarc.rule.convention.StaticFieldsBeforeInstanceFieldsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.design.AssignmentToStaticFieldFromInstanceMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildProjectElement_closure3$_closure9: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildProjectElement_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.BracesForTryCatchFinallyAstVisitor: void visitCatch(org.codenarc.rule.formatting.BracesForTryCatchFinallyRule,org.codehaus.groovy.ast.stmt.TryCatchStatement)>",
    "<org.codenarc.rule.security.UnsafeImplementationAsMapRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ComparisonWithSelfAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.plugin.disablerules.LookupTable: java.util.Set parseRuleNames(java.lang.String,java.lang.String)>",
    "<org.codenarc.CodeNarcRunner: void applyPluginsProcessViolationsForAllFiles(org.codenarc.results.Results)>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: int rightMostColumn(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor$_visitCatchStatement_closure2: java.lang.Object doCall(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.ruleset.FilteredRuleSet$_getRules_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BlockStartsWithBlankLineAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_setRuleProperties_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.serialization.SerialPersistentFieldsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_increaseIndentForClosureBlocks_closure5: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBigDecimalInstantiationAstVisitor: boolean shouldSkipViolation(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInVariableDeclarationAstVisitor: boolean contains(java.lang.String,java.lang.String)>",
    "<org.codenarc.report.XmlReportWriter$_buildSourceLineElement_closure7: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.XmlReportWriter: groovy.lang.Closure buildPackageElement(org.codenarc.results.Results)>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueAstVisitor: void visitStaticMethodCallExpression(org.codehaus.groovy.ast.expr.StaticMethodCallExpression)>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: boolean isBinaryExpressionWithMethodCallOnName(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.ruleset.RuleSetUtil: org.codenarc.ruleset.RuleSet loadRuleSetFile(java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceInsideParenthesesRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCatchBlockAstVisitor$_visitTryCatchFinally_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.CommonThrowAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor$_methodReturnsCollection_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor$_getParameterDefinitionAsString_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainHasToStringAstVisitor: boolean isNotInnerEnum(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.util.ImportUtil$_sourceLineAndNumberForImport_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.EmptyFinallyBlockAstVisitor: void visitTryCatchFinally(org.codehaus.groovy.ast.stmt.TryCatchStatement)>",
    "<org.codenarc.results.DirectoryResults: java.lang.String toString()>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor$_hasTrailingComma_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitSetUpCallsSuperAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.AnalyzerException: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter: boolean isWriteToStandardOut()>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule$_applyTo_closure2: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: boolean isPropertyAccessForName(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.rule.design.BooleanReturnTracker: boolean isNull(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.design.AbstractClassWithoutAbstractMethodAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryToStringAstVisitor$_visitGStringExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_visitConstructorOrMethod_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ModifiersUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.InlineViolationsParser$ParseResult: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitClosureExpression_closure8: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor$_isExpressionUsedInAnnotation_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3: java.lang.String getVarName()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void visitCatchStatement(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolations_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToModMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void visitCastExpression(org.codehaus.groovy.ast.expr.CastExpression)>",
    "<org.codenarc.report.XmlReportWriter: groovy.lang.Closure buildPackageElements(org.codenarc.results.Results)>",
    "<org.codenarc.rule.comments.JavadocConsecutiveEmptyLinesRule: void <clinit>()>",
    "<org.codenarc.report.HtmlReportWriter$_buildBodySection_closure1: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.ruleset.RuleSetBuilder: void <init>()>",
    "<org.codenarc.rule.formatting.LineLengthRule: boolean flagIfPackage(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGetterAstVisitor: void addUnnecessaryGetterViolation(org.codehaus.groovy.ast.expr.MethodCallExpression,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPublicModifierAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor$_getParameterDefinitionAsString_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure14: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.imports.ImportFromSamePackageRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.util.WildcardPattern: java.lang.String convertStringWithWildcardsToRegex(java.lang.String)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor: boolean isNotElementOfAnnotation(org.codehaus.groovy.ast.expr.ConstantExpression)>",
    "<org.codenarc.rule.convention.NoJavaUtilDateAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule: java.util.Map collectAllPrivateMethods(org.codehaus.groovy.ast.ModuleNode)>",
    "<org.codenarc.rule.security.ObjectFinalizeAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.braces.IfStatementBracesAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThreadGroupAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.plugin.disablerules.LookupTable: void setDisabledRulesByLine(int)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitClassComplete_closure5: java.lang.Object doCall(org.codehaus.groovy.ast.AnnotationNode)>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void checkMethodParameter(org.codehaus.groovy.ast.Parameter)>",
    "<org.codenarc.rule.formatting.SpaceAfterMethodCallNameRuleAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.results.DirectoryResults$_getTotalNumberOfFiles_closure5: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.ant.CodeNarcTask$_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.LongLiteralWithLowerCaseLAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_addViolationsForMultipleFieldDeclarations_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3$_closure4: java.lang.String getVarName()>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor$_visitCatchStatement_closure2: org.codehaus.groovy.ast.stmt.CatchStatement getStatement()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: void <init>()>",
    "<org.codenarc.rule.generic.RequiredRegexRule: boolean isReady()>",
    "<org.codenarc.report.InlineXmlReportWriter$_buildViolationElement_closure1$_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonRule: void checkLastLineForSemicolon(org.codenarc.source.SourceCode,java.util.List,org.codehaus.groovy.ast.AnnotatedNode)>",
    "<org.codenarc.report.ReportWriterFactory$_getReportWriter_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.DuplicateMapKeyAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.StaticCalendarFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.AbstractSpaceAroundBraceAstVisitor: boolean isNotWhitespace(java.lang.String,int)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor: void <init>(java.lang.Class,java.util.Set)>",
    "<org.codenarc.rule.formatting.BracesForClassRule$_applyTo_closure1: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.design.AssignmentToStaticFieldFromInstanceMethodAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.convention.MethodReturnTypeRequiredAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.design.CloneWithoutCloneableAstVisitor: boolean isCloneable(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.ruleset.JsonReaderRuleSet$_setRuleProperties_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor$_visitDeclarationExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.UseOfNotifyMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_getViolations_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateUtil$_createSortedListOfAllRules_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.jdbc.DirectConnectionManagementAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.grails.GrailsDomainHasToStringAstVisitor$_visitClassComplete_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainCantReferenceServiceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitPublicPropertyAstVisitor: boolean isIgnoredPropertyName(org.codehaus.groovy.ast.PropertyNode)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryToStringAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIntegerInstantiationAstVisitor: void <init>()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.source.AbstractSourceCode: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter: java.lang.String getHtmlRuleDescription(org.codenarc.rule.Rule)>",
    "<org.codenarc.rule.groovyism.ExplicitStackInstantiationRule$1: void <init>(org.codenarc.rule.groovyism.ExplicitStackInstantiationRule,java.lang.Object)>",
    "<org.codenarc.rule.basic.EqualsAndHashCodeAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UseAssertSameInsteadOfAssertTrueRule: void <init>()>",
    "<org.codenarc.rule.exceptions.ConfusingClassNamedExceptionAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.junit.JUnitPublicPropertyAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.formatting.BracesForIfElseAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure25: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor: void visitMethodComplete(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.CodeNarcRunner$_applyPluginsProcessViolationsForFile_closure5: org.codenarc.plugin.FileViolations getFileViolations()>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryObjectReferencesAstVisitor: void accumulateOrError(java.lang.String,org.codehaus.groovy.ast.stmt.ExpressionStatement)>",
    "<org.codenarc.rule.grails.ClassConstraintsAndMapping: void <init>()>",
    "<org.codenarc.ant.CodeNarcTask: org.codenarc.results.Results executeRunnerWithConfiguredClasspath(java.lang.Object)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitClosureExpression_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertViolation(org.codenarc.rule.Violation,java.lang.Integer,java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_processMethodOrConstructorCall_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameRule$_toSet_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner: void registerPlugin(org.codenarc.plugin.CodeNarcPlugin)>",
    "<org.codenarc.rule.exceptions.ExceptionExtendsThrowableRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30$_closure31: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule: java.util.List collectAllPrivateFields(org.codehaus.groovy.ast.ModuleNode)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasOneStaticFieldNamedInstance_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.RuleSets: void <clinit>()>",
    "<org.codenarc.rule.exceptions.ReturnNullFromCatchBlockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedArrayRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure19: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: void visitCastExpression(org.codehaus.groovy.ast.expr.CastExpression)>",
    "<org.codenarc.report.XmlReportUtil$_cdata_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationAstVisitor$_visitConstructorCallExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildButtons_closure6: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.ruleset.JsonReaderRuleSet$_setRuleProperties_closure2: org.codenarc.rule.Rule getRule()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertyLockingAstVisitor: boolean isWriteLocked(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure26: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.ConsecutiveBlankLinesRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitClassEx_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter: java.lang.String formatSourceLine(java.lang.String,int)>",
    "<org.codenarc.rule.formatting.SpaceAroundMapEntryColonAstVisitor: java.lang.String mapEntrySourceLine(org.codehaus.groovy.ast.expr.MapEntryExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryToStringAstVisitor$_visitGStringExpression_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure24: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure11$_closure13$_closure14: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.InlineViolationsParser: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<org.codenarc.rule.StubRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUtil$_isAssertCallWithConstantValue_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.results.DirectoryResults: int getNumberOfViolationsWithPriority(int,boolean)>",
    "<org.codenarc.rule.groovyism.ExplicitTypeInstantiationAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.basic.EqualsOverloadedAstVisitor: boolean onlyArgumentHasTypeObject(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19$_closure20: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: int firstNonWhitespaceColumn(java.lang.String)>",
    "<org.codenarc.rule.logging.PrintlnAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_addClosureFields_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_addViolationsForMultipleFieldDeclarations_closure7: java.lang.Object doCall(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalRule$_getViolations_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10$_closure11: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule$1: void <init>(org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule,java.lang.Object)>",
    "<org.codenarc.source.AbstractSourceCode$_getLineNumberForCharacterIndex_closure2: java.lang.Integer getLineCount()>",
    "<org.codenarc.rule.formatting.BracesForTryCatchFinallyAstVisitor$_visitCatch_closure1: org.codenarc.rule.formatting.BracesForTryCatchFinallyRule getMyRule()>",
    "<org.codenarc.rule.concurrency.StaticMatcherFieldAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.concurrency.VolatileArrayFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor$_visitBlockStatement_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyTryBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_flexibleCheckForCorrectColumn_closure12: java.lang.Integer getChainedMethodDotColumn()>",
    "<org.codenarc.report.CompactTextReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildViolationElement_closure6: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.NoJavaUtilDateAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: boolean isNamedLikeAConstant(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.report.SortableHtmlReportWriter: java.lang.String toString()>",
    "<org.codenarc.ruleset.XmlFileRuleSet$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.StatelessClassRule: boolean isReady()>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_visitConstructorOrMethod_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: java.lang.String parentPackageName(java.lang.String)>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllPackageSections_closure5$_closure17: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor: boolean isSubclass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.comments.AbstractJavadocEmptyTagRule: java.lang.String buildRegex()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.convention.ConfusingTernaryRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.AbstractSourceCode: java.lang.String line(int)>",
    "<org.codenarc.rule.convention.InvertedIfElseAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainHasEqualsAstVisitor$_visitClassComplete_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.basic.ParameterAssignmentInFilterClosureAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin: void removeMatchingViolation(java.util.List,org.codenarc.report.BaselineViolation)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure18: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.comments.JavadocEmptyAuthorTagRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_writeReport_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure19$_closure23: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCallForLastElementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.WildcardPattern$_convertStringWithWildcardsToRegex_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.util.SourceCodeUtil$_containsOnlyAsciiCharacters_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4$_closure13: org.codenarc.results.Results getResults()>",
    "<org.codenarc.util.io.DefaultResourceFactory: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.ConstructorsSkippingFieldReferenceAstVisitor: org.codehaus.groovy.ast.ASTNode getMethodContext()>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule$_addOrderingViolations_closure1: java.lang.Object doCall(int,java.lang.String)>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processImports_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GStringAsMapKeyAstVisitor: void visitMapEntryExpression(org.codehaus.groovy.ast.expr.MapEntryExpression)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_generateAllPossibleParameterSignatures_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintRule: void <init>()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySubstringAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.CompareToWithoutComparableRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_removeInitializedField_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.naming.ParameterNameAstVisitor: void processParameters(org.codehaus.groovy.ast.Parameter[],java.lang.String)>",
    "<org.codenarc.rule.convention.InvertedConditionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.InlineXmlReportWriter$_buildViolationElement_closure1$_closure3: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.formatting.BlockStartsWithBlankLineAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.AbstractSourceCode: int getLineNumberForCharacterIndex(int)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure4: org.codenarc.results.Results getResults()>",
    "<org.codenarc.CodeNarcRunner: void writeReports(org.codenarc.AnalysisContext,org.codenarc.results.Results)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: void visitIfElseThatIsTheLastStatementInABlock(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner: void registerPluginsForClassNames(java.lang.String)>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor$_visitConstructorOrMethod_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.ruleset.JsonFileRuleSet: void <clinit>()>",
    "<org.codenarc.rule.basic.EmptyCatchBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitSwitch_closure9: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.MultipleLoggersAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ParameterCountAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UseAssertFalseInsteadOfNegationRule: void <init>()>",
    "<org.codenarc.tool.GenerateRuleSetAllRulesByCategory: void main(java.lang.String[])>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor: boolean isOneLiner(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor$_methodReturnsArray_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.CompactTextReportWriter$_writeFileViolations_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor: void visitMapExpression(org.codehaus.groovy.ast.expr.MapExpression)>",
    "<org.codenarc.test.AbstractTestCase: void <init>()>",
    "<org.codenarc.rule.basic.ClassForNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.JavaIoPackageAccessRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_flexibleCheckForCorrectColumn_closure10: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.JsonReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.AddEmptyStringAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.basic.DuplicateSetValueAstVisitor$_visitCastExpression_closure1: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean isReturnFalse(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.junit.UseAssertFalseInsteadOfNegationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.EmptyMethodInAbstractClassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.WildcardPattern$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsServletContextReferenceRule: void <init>()>",
    "<org.codenarc.util.SourceCodeUtil: java.util.List sourceLinesBetween(org.codenarc.source.SourceCode,int,int,int,int)>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor$_visitMethodEx_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.DeadCodeAstVisitor$_visitBlockStatement_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertyLockingAstVisitor: void saveMethodInfo(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.IdeTextReportWriter: java.lang.String getViolationLocationString(org.codenarc.rule.Violation,java.lang.String)>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.AssignmentInConditionalAstVisitor: void addViolationIfAssignment(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.MultipleUnaryOperatorsAstVisitor: void checkForSecondUnaryOperator(org.codehaus.groovy.ast.expr.Expression,java.lang.Class)>",
    "<org.codenarc.rule.unused.UnusedArrayAstVisitor: void visitExpressionStatement(org.codehaus.groovy.ast.stmt.ExpressionStatement)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.junit.UnnecessaryFailRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor$_visitConstructorOrMethod_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor$_visitListExpression_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer: java.util.List collectViolations(org.codenarc.source.SourceCode,org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.rule.basic.HardCodedWindowsRootDirectoryRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitTypeInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_visitConstructorOrMethod_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCastAstVisitor: void <clinit>()>",
    "<org.codenarc.results.DirectoryResults: void <init>(java.lang.String,int)>",
    "<org.codenarc.rule.convention.FieldTypeRequiredAstVisitor: boolean isIgnoredFieldName(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.tool.GenerateCodeNarcRulesProperties$_main_closure1$_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementAstVisitor: boolean allBranchesReturn(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_visitConstructorOrMethod_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllSummaryByPackageRowsRecursively_closure3$_closure13: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitConstructorOrMethod_closure1: org.codehaus.groovy.ast.MethodNode getNode()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.AbstractRuleTestCase: void setUpAbstractRuleTestCase()>",
    "<org.codenarc.rule.junit.JUnitLostTestAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BracesForTryCatchFinallyAstVisitor$_visitCatch_closure1: java.lang.Object doCall(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.rule.logging.LogUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ConsecutiveUtils: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.braces.WhileStatementBracesAstVisitor: void visitWhileLoop(org.codehaus.groovy.ast.stmt.WhileStatement)>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.VariableTypeRequiredRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ClassSizeRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.AssignmentTracker: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.PrintlnAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_increaseIndentForClosureBlocks_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.EqualsAndHashCodeAstVisitor$_visitClassEx_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule$_addOrderingViolations_closure1: java.util.List getViolations()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27$_closure29: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ant.CodeNarcTask: void checkMaxViolationForPriority(int,int,java.lang.String)>",
    "<org.codenarc.ruleset.RuleSetDelegate$_methodMissing_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.SortableHtmlReportWriter: groovy.lang.Closure buildSummary(org.codenarc.results.Results)>",
    "<org.codenarc.rule.exceptions.MissingNewInThrowStatementAstVisitor: boolean looksLikeAnExceptionType(java.lang.String)>",
    "<org.codenarc.tool.GenerateRuleSetAllRules: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.GroovyDslRuleSet$_createGroovyShell_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10$_closure11$_closure12: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.basic.DuplicateSetValueAstVisitor$_visitCastExpression_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.SourceString: void setPath(java.lang.String)>",
    "<org.codenarc.rule.serialization.SerialVersionUIDAstVisitor: void visitProperty(org.codehaus.groovy.ast.PropertyNode)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin: void addFilesWithViolations(java.util.List,org.codenarc.results.Results)>",
    "<org.codenarc.rule.design.SimpleDateFormatMissingLocaleAstVisitor: boolean hasMinimumParameterCount(org.codehaus.groovy.ast.expr.ConstructorCallExpression,int)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckAstVisitor: boolean isNotNullCheckAgainstSuperReference(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.logging.LoggerForDifferentClassAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitMapExpression_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.grails.GrailsDomainHasToStringAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: boolean isExpressionAccessingMemberNamed(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.rule.InlineViolationsParser: org.codenarc.rule.InlineViolationsParser$ParseResult parse(java.lang.String)>",
    "<org.codenarc.rule.convention.CouldBeElvisRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.CloseWithoutCloseableAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: boolean isSingleLineClassViolation()>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionAstVisitor: void <clinit>()>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryStringInstantiationAstVisitor: boolean isConstructorCallAViolation(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.basic.EmptyCatchBlockAstVisitor: boolean isExceptionIgnored(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor$_argumentsContainThis_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.DeadCodeAstVisitor: boolean statementForcesMethodReturn(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_initializeImportNames_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.CouldBeSwitchStatementAstVisitor: java.lang.Boolean isSupportedLeftExpressionType(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.grails.GrailsDomainHasToStringRule: void <init>()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitMapExpression_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor: void <init>()>",
    "<org.codenarc.report.XmlReportWriter$_buildRulesElement_closure9$_closure19$_closure20: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_isAnnotatedWithOverride_closure6: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaRule$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.naming.PropertyNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ant.CodeNarcTask: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildRulesElement_closure9$_closure19$_closure20: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.CompactTextReportWriter$_writeFileViolations_closure4: java.io.Writer getWriter()>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner$_applyPluginsProcessViolationsForAllFiles_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintAstVisitor$_visitMethodCallExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainHasEqualsAstVisitor$_visitClassComplete_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryTearDownAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllPackageSections_closure5: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.junit.SpockIgnoreRestUsedRule: void <init>()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ToStringReturnsNullAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer: void processFile(java.lang.String,org.codenarc.results.DirectoryResults,org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.rule.exceptions.ExceptionExtendsThrowableAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.CloneableWithoutCloneAstVisitor$_visitClassEx_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.StaticFieldsBeforeInstanceFieldsAstVisitor: void visitClassComplete(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.ruleset.MovedRules: org.codenarc.ruleset.MovedRules$Renamed renamedTo(java.lang.String)>",
    "<org.codenarc.ruleset.RuleSetUtil: org.codenarc.rule.Rule loadRuleScriptFile(java.lang.String)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.report.XmlReportWriter$_buildFileElement_closure5$_closure16: org.codenarc.results.FileResults getResults()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_getViolations_closure1$_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitClassEx_closure4: org.codehaus.groovy.ast.ClassNode getNode()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure5$_closure13$_closure14: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_initializeImportNames_closure5: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: org.codehaus.groovy.ast.stmt.Statement getStatement(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonAstVisitor: void removeAnyViolationsForSameLine(int)>",
    "<org.codenarc.rule.FieldReferenceAstVisitor: java.util.Collection getUnreferencedFields()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryLongInstantiationAstVisitor: void <init>()>",
    "<org.codenarc.rule.AbstractAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.ant.CodeNarcTask$_classLoaderForPaths_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_getFirstValue_closure4: java.util.List getKeys()>",
    "<org.codenarc.report.XmlReportWriter$_writeReport_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.JUnitSetUpCallsSuperAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.design.CloneWithoutCloneableRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.DoubleCheckedLockingAstVisitor: java.lang.String getNullCheckVariableName(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.report.SortableHtmlReportWriter: java.util.List getFileResults(org.codenarc.results.Results,java.util.List)>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor: boolean isDoubleTypeName(java.lang.String)>",
    "<org.codenarc.rule.basic.DeadCodeAstVisitor$_visitBlockStatement_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.results.FileResults$_getNumberOfViolationsWithPriority_closure1: int getPriority()>",
    "<org.codenarc.rule.formatting.SpaceInsideParenthesesAstVisitor$_visitClassComplete_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.ruleset.XmlFileRuleSet$_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor: boolean checkAdditional(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.report.XmlReportWriter: groovy.lang.Closure buildSourceLineElement(org.codenarc.rule.Violation)>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfViolationsWithPriority_closure3: boolean getRecursive()>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertValidRegex(java.lang.String,java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure11$_closure13: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter: void writeReport(java.io.Writer,org.codenarc.AnalysisContext,org.codenarc.results.Results)>",
    "<org.codenarc.rule.unnecessary.ConsecutiveLiteralAppendsAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueAstVisitor: boolean isJUnitAssert(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.basic.AssertWithinFinallyBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processImports_closure1: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.basic.RemoveAllOnSelfRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor: void checkClass(org.gmetrics.result.ClassMetricResult,org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.source.CustomCompilerPhaseSourceDecorator: void <init>(org.codenarc.source.SourceCode,int)>",
    "<org.codenarc.tool.GenerateUtil: java.util.List createSortedListOfAllRules()>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: void processMethodNode(org.codehaus.groovy.ast.MethodNode,java.lang.String)>",
    "<org.codenarc.rule.basic.AssignmentTracker: boolean isPropertyOrSubPropertyOfVariableName(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.rule.junit.JUnitUtil: boolean isAssertCallWithLiteralValue(org.codehaus.groovy.ast.expr.MethodCallExpression,java.lang.String,boolean)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.naming.PackageNameMatchesFilePathRule: boolean isReady()>",
    "<org.codenarc.rule.junit.JUnitPublicPropertyAstVisitor: void visitProperty(org.codehaus.groovy.ast.PropertyNode)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsNotBlankLineAfterOpeningBrace_closure2: java.lang.Integer getClassStartLine()>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure6: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule: java.lang.Object this$dist$get$3(java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.PrintlnAstVisitor$_visitClassEx_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GStringAsMapKeyRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfFilesWithViolations_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor$_visitCastExpression_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.source.SourceString: void <init>(java.lang.String,java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryParenthesesForMethodCallWithClosureRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceInsideParenthesesAstVisitor: void processSourceLine(java.lang.String,int)>",
    "<org.codenarc.rule.generic.StatelessClassRule: boolean matchesIgnoreFieldNames(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaRule$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertInlineViolations(java.lang.String)>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: java.lang.String getName()>",
    "<org.codenarc.rule.basic.DeadCodeAstVisitor$_visitBlockStatement_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllSummaryByPackageRowsRecursively_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationToGetClassAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.FileResults$_getNumberOfViolationsWithPriority_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUtil$_isAssertCallWithNonNullConstantValue_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoJavaUtilDateAstVisitor$_visitImports_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter: void writeReport(java.io.Writer,org.codenarc.AnalysisContext,org.codenarc.results.Results)>",
    "<org.codenarc.rule.formatting.ClosureStatementOnOpeningLineOfMultipleLineClosureAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_writeReport_closure1$_closure8: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.junit.AssertionTrap$_methodNamesCountsAsAssertion_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildViolationElement_closure6$_closure15: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void registerConstructorCalls(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.design.ArrayReturnTracker: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule$1: void <init>(org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule,java.lang.Object)>",
    "<org.codenarc.ruleset.MovedRules$Renamed: java.lang.String messageFor(java.lang.String)>",
    "<org.codenarc.util.ModifiersUtil: int parseSingleModifier(java.lang.String)>",
    "<org.codenarc.ruleset.RuleSetDelegate$_findRule_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule: java.lang.Object this$dist$invoke$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_visitMethodEx_closure1: org.codehaus.groovy.ast.MethodNode getNode()>",
    "<org.codenarc.rule.formatting.MissingBlankLineAfterImportsRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor: void visitListExpression(org.codehaus.groovy.ast.expr.ListExpression)>",
    "<org.codenarc.tool.GenerateRuleIndexPages: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter: groovy.lang.Closure buildBodySection(org.codenarc.AnalysisContext,org.codenarc.results.Results)>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unnecessary.AddEmptyStringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ClassNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UseAssertTrueInsteadOfAssertEqualsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.CloneableWithoutCloneAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.junit.UseAssertSameInsteadOfAssertTrueRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGetterAstVisitor: void addViolationsIfGetter(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.AbstractConstructorCallAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDuplicateMappingAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_setupFlexibleIndentForAnyClosureParameterBlocks_closure6: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.plugin.FileViolations: void <init>(org.codenarc.results.FileResults)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameRule$_toSet_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.results.FileResults: int getNumberOfViolationsWithPriority(int)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure13: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor: boolean hasOneStaticFieldOfItself(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.grails.GrailsMassAssignmentAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.CodeNarcRunner$_writeReports_closure8: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.ConfusingTernaryAstVisitor: void addViolationForNotExpression(org.codehaus.groovy.ast.expr.TernaryExpression,org.codehaus.groovy.ast.expr.NotExpression)>",
    "<org.codenarc.rule.groovyism.UseCollectNestedAstVisitor: void <init>()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildButtons_closure6$_closure30: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.util.io.UrlResource: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalClassMemberRule: void setAllowedFieldModifiers(java.lang.String)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildViolationElement_closure6: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.JUnitUtil$_isAssertCallWithNonNullConstantValue_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyStaticInitializerAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule$_applyTo_closure2: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.InlineViolationsParser$ParseResult: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.logging.SystemErrPrintRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.plugin.disablerules.LookupTable: void <clinit>()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_flexibleCheckForCorrectColumn_closure13: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectionCallAstVisitor: void <clinit>()>",
    "<org.codenarc.util.ImportUtil: java.util.List getNonStaticImportsSortedByLineNumber(org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.security.NonFinalPublicFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.TopLevelDelegate: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.basic.EmptyElseBlockAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.AbstractRuleTestCase$_removeSuppressedViolations_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor: boolean hasSingletonAnnotation(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.size.MethodSizeAstVisitor: boolean isIgnoredMethodName(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeRule: void <init>()>",
    "<org.codenarc.rule.serialization.EnumCustomSerializationIgnoredAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryConstructorAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.util.WildcardPattern$_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure2$_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter: void writeFooter(java.io.Writer)>",
    "<org.codenarc.rule.basic.EmptyForStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner: void applyPluginsProcessViolationsForFile(org.codenarc.results.FileResults)>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility: org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility valueOf(java.lang.String)>",
    "<org.codenarc.rule.design.CloseWithoutCloseableAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryStringInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.InlineViolationsParser$_parseLine_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ComparisonOfTwoConstantsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitPublicNonTestMethodRule: void setIgnoreMethodsWithAnnotations(java.lang.String)>",
    "<org.codenarc.ruleset.JsonFileRuleSet$_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14$_closure16: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4: org.codenarc.results.Results getResults()>",
    "<org.codenarc.report.HtmlReportWriter$_buildBodySection_closure1$_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter: boolean isRoot(org.codenarc.results.Results)>",
    "<org.codenarc.rule.convention.NoDefRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.serialization.SerializableClassMustDefineSerialVersionUIDAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.tool.GenerateRuleSetAllRules: void main(java.lang.String[])>",
    "<org.codenarc.rule.concurrency.SynchronizedMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleregistry.PropertiesFileRuleRegistry: void <clinit>()>",
    "<org.codenarc.rule.naming.ClassNameSameAsFilenameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_writeReport_closure1$_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.VolatileArrayFieldAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_findRule_closure3: java.lang.String getName()>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitClassEx_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.comments.ClassJavadocRule$_applyTo_closure1: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.junit.JUnitFailWithoutMessageRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ParameterCountAstVisitor$_isOverridden_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.NoJavaUtilDateAstVisitor: void visitImports(org.codehaus.groovy.ast.ModuleNode)>",
    "<org.codenarc.rule.convention.NoDefAstVisitor$_visitParameters_closure2: java.lang.Object doCall(org.codehaus.groovy.ast.Parameter)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySelfAssignmentAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.basic.DuplicateCaseStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.OptionalCollectionReturnTypeAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14$_closure15: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor: void addViolationWithMessage(org.codehaus.groovy.ast.expr.MethodCallExpression,org.codehaus.groovy.ast.expr.PropertyExpression)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: boolean isMatchingField(org.codehaus.groovy.ast.FieldNode,java.lang.String)>",
    "<org.codenarc.rule.convention.IfStatementCouldBeTernaryAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.CodeNarcRunner$_writeReports_closure7: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.basic.EqualsAndHashCodeAstVisitor$_visitClassEx_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin$_addFilesWithViolations_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer: org.codenarc.results.Results analyze(org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.rule.ClassReferenceAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.security.InsecureRandomRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase: java.lang.String inlineViolation(java.lang.String)>",
    "<org.codenarc.rule.convention.HashtableIsObsoleteRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.InstanceofAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.basic.DuplicateSetValueAstVisitor: boolean isDuplicate(org.codehaus.groovy.ast.expr.Expression,java.util.List)>",
    "<org.codenarc.rule.basic.EmptyClassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarc$__clinit__closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ThrowExceptionFromFinallyBlockAstVisitor: void visitThrowStatement(org.codehaus.groovy.ast.stmt.ThrowStatement)>",
    "<org.codenarc.rule.InlineViolationsParser: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThreadYieldAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.basic.EmptyMethodAstVisitor$_visitMethod_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: void visitVariableExpression(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.rule.junit.CoupledTestCaseAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: java.util.Collection interfaceMethods(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.JsonReportWriter: java.util.Map buildFileElement(org.codenarc.results.FileResults)>",
    "<org.codenarc.report.XmlReportUtil$_cdata_closure1: java.lang.String getText()>",
    "<org.codenarc.rule.basic.ThrowExceptionFromFinallyBlockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyStaticInitializerRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter$_getSortedRules_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.JsonReportWriter: java.util.Map buildViolationElement(org.codenarc.rule.Violation)>",
    "<org.codenarc.rule.junit.UseAssertNullInsteadOfAssertEqualsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalClassMemberAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.concurrency.NestedSynchronizationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30$_closure32: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitSwitch_closure9: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.SpockIgnoreRestUsedAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21: org.codenarc.rule.Rule getRule()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitListExpression_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.report.XmlReportWriter: void writeReport(java.io.Writer,org.codenarc.AnalysisContext,org.codenarc.results.Results)>",
    "<org.codenarc.util.CodeNarcVersion: void <clinit>()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure11: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void <init>()>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_findRule_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.BusyWaitAstVisitor: void addViolationIfBusyWait(org.codehaus.groovy.ast.stmt.LoopingStatement)>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_collectAllPrivateFields_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitBlockStatement_closure8: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTernaryExpressionAstVisitor: boolean areBothTheSame(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.concurrency.StaticDateFormatFieldAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: boolean isGetterUnsynchronizedAndSetterSychronized(java.util.List,java.lang.String)>",
    "<org.codenarc.rule.convention.PublicMethodsBeforeNonPublicMethodsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.junit.CoupledTestCaseAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitClassComplete_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.InlineViolationsParser: java.lang.String unescape(java.lang.String)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToEqualsMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_getViolations_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToMultiplyMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.SwallowThreadDeathAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonRule$_processImports_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceAfterElseAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter: java.util.Map buildSummaryElement(org.codenarc.results.Results)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.groovyism.UseCollectManyAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void visitWhileLoop(org.codehaus.groovy.ast.stmt.WhileStatement)>",
    "<org.codenarc.ruleset.MovedRules$Renamed: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.concurrency.StaticCalendarFieldAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsPublicControllerMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitClassEx_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure19$_closure23: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.AssignCollectionSortRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase: org.codenarc.source.SourceCode prepareSourceCode(java.lang.String)>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_applyTo_closure2: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.ruleset.FilteredRuleSet: java.util.List getRules()>",
    "<org.codenarc.rule.comments.JavadocEmptyLastLineRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateUtil: java.util.List sortRules(java.util.List)>",
    "<org.codenarc.rule.convention.PublicMethodsBeforeNonPublicMethodsAstVisitor: void visitMethodComplete(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.basic.EmptySynchronizedStatementAstVisitor: void visitSynchronizedStatement(org.codehaus.groovy.ast.stmt.SynchronizedStatement)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor$_expressionContainsBannedCharacters_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceBeforeClosingBraceAstVisitor: void processMethodNode(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.formatting.SpaceAfterClosingBraceAstVisitor: void addClosingBraceViolation(org.codehaus.groovy.ast.ASTNode,java.lang.String)>",
    "<org.codenarc.rule.Violation: java.lang.String toString()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildProjectElement_closure3$_closure9: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: org.codehaus.groovy.ast.MethodNode getFirstValue(java.util.Map,java.util.List)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor$_visitConstantExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ParameterReassignmentAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.InterfaceNameSameAsSuperInterfaceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.exceptions.CatchIndexOutOfBoundsExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.TrailingCommaRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildLogo_closure6: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor$_processParameters_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure11$_closure13: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule$_applyTo_closure1: java.lang.Object doCall(org.codehaus.groovy.ast.ImportNode)>",
    "<org.codenarc.rule.imports.DuplicateImportRule$_applyTo_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.imports.UnusedImportRule: void processImports(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleScriptElements_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySetterAstVisitor: boolean isSuperCall(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.BlockEndsWithBlankLineAstVisitor: void checkForViolations(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor$_visitConstantExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.TopLevelDelegate: void <init>()>",
    "<org.codenarc.rule.junit.JUnitPublicNonTestMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.LoggerWithWrongModifiersAstVisitor: void addViolationForField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.UseCollectNestedRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConstantExpressionExtractor: java.util.List extractFrom(org.codehaus.groovy.ast.AnnotationNode)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassComplete_closure5: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.naming.AbstractTypeNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ReturnFromFinallyBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarc$_execute_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.InsecureRandomAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter: java.lang.String buildTitle()>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin$_removeMatchingViolation_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.JUnitLostTestAstVisitor$_visitClass_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitClosureExpression_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectIncludedProperties_closure8: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin$_addFilesWithViolations_closure3: java.util.List getMap()>",
    "<org.codenarc.results.FileResults: org.codenarc.results.Results findResultsForPath(java.lang.String)>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BlockStartsWithBlankLineRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertViolation(org.codenarc.rule.Violation,java.lang.Integer,java.lang.String)>",
    "<org.codenarc.rule.exceptions.ThrowExceptionRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.naming.AbstractClassNameAstVisitor: boolean shouldVisit(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: void visitVariableExpression(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor$_visitConstructorOrMethod_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19$_closure21$_closure22: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBigIntegerInstantiationAstVisitor: void <init>()>",
    "<org.codenarc.source.SourceCodeCriteria: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BracesForIfElseAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_setRuleProperties_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.ComparisonOfTwoConstantsAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleScriptElements_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.JavadocConsecutiveEmptyLinesRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.logging.MultipleLoggersAstVisitor: void <init>()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildButtons_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_getViolations_closure1: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_getMethodCallsAndMapKeys_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.StaticDateFormatFieldAstVisitor: boolean isDateFormatFactoryMethodCall(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryObjectReferencesAstVisitor$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGetterAstVisitor: boolean isMatchingGetterMethodName(java.lang.String)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildCSS_closure2$_closure9: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfFilesWithViolations_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_findSuperClassMethods_closure7: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure19: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCastAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: boolean isNotDollarInsideGString(java.lang.String,int)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor$_methodReturnsArray_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure5$_closure13$_closure14: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceAstVisitor: void visitMapEntryExpression(org.codehaus.groovy.ast.expr.MapEntryExpression)>",
    "<org.codenarc.rule.security.NonFinalPublicFieldAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule: org.codenarc.rule.AstVisitor getAstVisitor(org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.AssignmentToStaticFieldFromInstanceMethodAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure29: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateNumberLiteralRule$_defineAdditionalChecksClosure_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.basic.HardCodedWindowsFileSeparatorAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.UnnecessaryFailAstVisitor$_visitCatchStatement_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllPackageSections_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.io.UrlResource: java.io.InputStream getInputStream()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildScript_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_writeReport_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.DoubleNegativeAstVisitor: void visitNotExpression(org.codehaus.groovy.ast.expr.NotExpression)>",
    "<org.codenarc.rule.groovyism.AssignCollectionSortAstVisitor: void visitDeclarationExpression(org.codehaus.groovy.ast.expr.DeclarationExpression)>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor$_visitArgumentlistExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void checkAssignmentWithinString(org.codehaus.groovy.ast.ASTNode,java.lang.String)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: void addInitializedField(java.lang.String)>",
    "<org.codenarc.report.BaselineViolation: java.lang.String toString()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12$_closure15$_closure16: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryObjectReferencesRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults$_getViolations_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.IndentationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_removeInitializedField_closure5: java.lang.String getVarName()>",
    "<org.codenarc.rule.generic.IllegalStringRule: boolean isReady()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor: void <init>()>",
    "<org.codenarc.ant.Report: void <init>()>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule$_applyTo_closure1: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.imports.UnusedImportRule$_findReference_closure3: java.lang.String getClassName()>",
    "<org.codenarc.plugin.disablerules.DisableRulesInCommentsPlugin: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.braces.ElseBlockBracesAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ModifiersUtil$_parseModifiers_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.BlockEndsWithBlankLineAstVisitor: void visitTryCatchFinally(org.codehaus.groovy.ast.stmt.TryCatchStatement)>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_visitConstructorOrMethod_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.CompareToWithoutComparableAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryFinalOnPrivateMethodAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.junit.JUnitUtil: boolean isTestMethod(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.ruleset.JsonReaderRuleSet$_loadRuleElements_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.naming.ConfusingMethodNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_findMatchingSuperClassMethod_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.InlineViolationsParser$ParseResult: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.generic.IllegalClassMemberRule: void setAllowedPropertyModifiers(java.lang.String)>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule: void this$dist$set$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.convention.NoDoubleRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.SourceFile: java.lang.String getText()>",
    "<org.codenarc.ruleset.MovedRules: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure18$_closure22: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertTwoViolations(java.lang.String,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.String)>",
    "<org.codenarc.rule.unused.UnusedObjectRule: void <init>()>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: void checkType(java.lang.String,org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: int indentLevelFromColumn(int)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitBlockStatement_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitTestMethodWithoutAssertRule: void <init>()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14: boolean getAllPackages()>",
    "<org.codenarc.report.TextReportWriter: void writeSummary(java.io.Writer,org.codenarc.results.Results)>",
    "<org.codenarc.results.DirectoryResults: void removeViolation(org.codenarc.rule.Violation)>",
    "<org.codenarc.rule.basic.EmptyTryBlockAstVisitor: void visitTryCatchFinally(org.codehaus.groovy.ast.stmt.TryCatchStatement)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_flexibleCheckForCorrectColumn_closure13: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsRule: java.lang.String getGormStaticMethodsNames()>",
    "<org.codenarc.rule.basic.ExplicitGarbageCollectionAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.ruleset.RuleSetUtil$_loadRuleScriptFile_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.VectorIsObsoleteRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.AbstractSourceCode: void logCompilationError(java.lang.Throwable)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasOneStaticFieldOfItself_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_findSuperClassMethods_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10$_closure11$_closure12: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule$_applyTo_closure2: java.util.List getViolations()>",
    "<org.codenarc.rule.basic.BrokenOddnessCheckAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.IfStatementCouldBeTernaryRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassComplete_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.basic.BigDecimalInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.InterfaceNameRule: boolean isReady()>",
    "<org.codenarc.rule.basic.EmptyElseBlockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptySwitchStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3$_closure4: org.codehaus.groovy.ast.expr.VariableExpression getVarExpression()>",
    "<org.codenarc.rule.comments.JavadocEmptyExceptionTagRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.CouldBeSwitchStatementAstVisitor: void checkIfStatementCanBeSwitch(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor: boolean isPossibleViolation(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_printRuleProcessingTimes_closure5: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor$_isUsedInAnyAnnotationOnCurrentAnnotatedNode_closure1: org.codehaus.groovy.ast.expr.ConstantExpression getConstantExpression()>",
    "<org.codenarc.report.XmlReportWriter$_writeReport_closure1: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.dry.DuplicateNumberLiteralRule: groovy.lang.Closure defineAdditionalChecksClosure()>",
    "<org.codenarc.rule.formatting.BracesForClassRule: boolean definesAnnotationType(java.lang.String)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void visitSynchronizedStatement(org.codehaus.groovy.ast.stmt.SynchronizedStatement)>",
    "<org.codenarc.rule.formatting.IndentationRule: void <init>()>",
    "<org.codenarc.rule.unused.AbstractLastStatementInBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor$_processParameters_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.ruleregistry.RuleRegistryHolder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.SpockIgnoreRestUsedAstVisitor$_visitMethod_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.AbstractReportWriter: void writeReportToFile(org.codenarc.AnalysisContext,org.codenarc.results.Results)>",
    "<org.codenarc.tool.GenerateRuleIndexPages$_main_closure2$_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasSingletonAnnotation_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.ruleset.RuleSetDelegate: void <init>(org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_visitClassEx_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitStackInstantiationRule: java.lang.Object this$dist$invoke$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule: void this$dist$set$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_flexibleCheckForCorrectColumn_closure12: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.JavadocEmptySeeTagRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintAstVisitor: java.util.Collection extractImportedConstraints(java.lang.String)>",
    "<org.codenarc.rule.basic.ParameterAssignmentInFilterClosureAstVisitor: java.util.List createParameterNameList(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.concurrency.ThreadGroupAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.NonFinalPublicFieldAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.report.AbstractReportWriter: java.lang.String getDescriptionForRule(org.codenarc.rule.Rule)>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin$_removeMatchingViolation_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure24: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.AbstractReportWriter$_getSortedRules_closure5: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.basic.AbstractFinallyAstVisitor$_isStatementWithinFinally_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.util.ImportUtil: java.lang.String packageNameForImport(org.codehaus.groovy.ast.ImportNode)>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor$_visitMethodEx_closure1: java.lang.String getMethodName()>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: void checkIfThereIsNotBlankLineBeforeClosingBrace(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.naming.VariableNameAstVisitor$_visitDeclarationExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_writeReport_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitBlockStatement_closure8: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInMethodDeclarationAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.rule.concurrency.SynchronizedReadObjectMethodAstVisitor$_isSerializable_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.BooleanMethodReturnsNullAstVisitor: void handleClosure(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: boolean containsKey(java.util.Map,java.util.List)>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor: void visitDeclarationExpression(org.codehaus.groovy.ast.expr.DeclarationExpression)>",
    "<org.codenarc.rule.size.MethodSizeRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.ConsecutiveLiteralAppendsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalRule$_getViolations_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void flexibleCheckForCorrectColumn(org.codehaus.groovy.ast.ASTNode,java.lang.String,org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.rule.design.EmptyMethodInAbstractClassAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor: boolean isProcessingAnnotatedNode()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor$_visitConstructorOrMethod_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedObjectAstVisitor: void visitExpressionStatement(org.codehaus.groovy.ast.stmt.ExpressionStatement)>",
    "<org.codenarc.ruleset.JsonReaderRuleSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.serialization.SerializableClassMustDefineSerialVersionUIDAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.formatting.BracesForClassRule$_applyTo_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.security.PublicFinalizeMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildViolationElement_closure6: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.ThreadGroupAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.report.SortableHtmlReportWriter$ViolationAndPath: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: void visitIfElseThatIsNotTheLastStatementInABlock(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.basic.EmptyIfStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitTestMethodWithoutAssertAstVisitor: boolean checksTimeout(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.junit.JUnitFailWithoutMessageRuleAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter$_buildPackageElements_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToMultiplyMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_getFileResults_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.AbstractSpaceAroundBraceAstVisitor: boolean isNotCharacter(java.lang.String,char,int)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_visitConstructorOrMethod_closure3: org.codehaus.groovy.ast.MethodNode getNode()>",
    "<org.codenarc.rule.logging.SystemErrPrintAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.ImportFromSamePackageRule$_applyTo_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: java.lang.String uniqueAndSortedDeclaringClassNames(java.util.Collection)>",
    "<org.codenarc.rule.naming.ConfusingMethodNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: java.lang.String getLastLine(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToMethodAstVisitor: void safelyAddViolation(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule$_applyTo_closure2: java.lang.Object doCall(java.lang.String,org.codehaus.groovy.ast.ImportNode)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_visitClassComplete_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure4$_closure12: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor$_expressionContainsBannedCharacters_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.ImplicitReturnStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure26: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.ConsecutiveStringConcatenationAstVisitor: boolean isJoinableType(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitImports_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToGetAtMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.serialization.SerializableClassMustDefineSerialVersionUIDRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure5: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.dry.DuplicateListLiteralRule: void <init>()>",
    "<org.codenarc.report.JsonReportWriter$_buildFileElement_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.SourceString: java.lang.String toString()>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility: org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility next()>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: void <init>()>",
    "<org.codenarc.rule.basic.BitwiseOperatorInConditionalAstVisitor: java.util.List collectChildren(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.logging.PrintlnRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ComparisonWithSelfAstVisitor: void addViolationIfBothAreTheSameVariable(org.codehaus.groovy.ast.ASTNode,org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor$_visitMethodCallExpression_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: boolean isComparisonWithNull(org.codehaus.groovy.ast.expr.BinaryExpression,java.lang.String)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor$_extractTransients_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitTestMethodWithoutAssertAstVisitor: boolean statementContainsAssertions(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.CompactTextReportWriter$_writeFileViolations_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.CompositeRuleSet: java.util.List getRules()>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure3$_closure7: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.util.PathUtil: java.lang.String getParentPath(java.lang.String)>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility: org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility previous()>",
    "<org.codenarc.rule.formatting.BracesForForLoopAstVisitor: void visitForLoop(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.rule.design.OptionalCollectionReturnTypeAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.ruleset.TopLevelDelegate: void ruleset(java.lang.String,groovy.lang.Closure)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: void <init>()>",
    "<org.codenarc.ruleset.MovedRules: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.basic.BooleanGetBooleanAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.generic.IllegalClassMemberRule: void setIllegalFieldModifiers(java.lang.String)>",
    "<org.codenarc.rule.design.AssignmentToStaticFieldFromInstanceMethodAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.dry.DuplicateStringLiteralRule$_defineAdditionalChecksClosure_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ClassForNameAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.ConstantExpressionExtractor: java.util.List extractFromExpression(org.codehaus.groovy.ast.expr.AnnotationConstantExpression)>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterAstVisitor$_hasItParameter_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_initializeImportNames_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.RuleSetUtil: void assertClassImplementsRuleInterface(java.lang.Class)>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor: void visitMapExpression(org.codehaus.groovy.ast.expr.MapExpression)>",
    "<org.codenarc.results.DirectoryResults: org.codenarc.results.Results findResultsForPath(java.lang.String)>",
    "<org.codenarc.rule.naming.PropertyNameRule: void validate()>",
    "<org.codenarc.rule.logging.LoggerForDifferentClassAstVisitor: boolean isEqualToCurrentClass(java.lang.String,java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter: void this$dist$set$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainHasToStringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.FileCreateTempFileRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.JavadocMissingExceptionDescriptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.ConsecutiveStringConcatenationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner$_writeReports_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.AbstractTypeNameAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.ruleset.MovedRules$MovedToRuleSet: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsRule: void <init>()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.BracesForMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: void <init>()>",
    "<org.codenarc.ruleset.GroovyDslRuleSet$_evaluateDsl_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitStackInstantiationRule: void this$dist$set$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildBodySection_closure2: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_flexibleCheckForCorrectColumn_closure10: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySafeNavigationOperatorAstVisitor: void checkExpression(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.formatting.BracesForMethodAstVisitor: boolean hasOpeningBraceOnSameLine(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor: boolean isThisExpression(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.formatting.AbstractSpaceAroundBraceAstVisitor: void <init>()>",
    "<org.codenarc.report.AbstractReportWriter$_writeReportToFile_closure3: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.junit.ChainedTestRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.FilteredRuleSet$_getRules_closure1$_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.MathRandomTracker: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.PackageNameMatchesFilePathRule: java.lang.String mismatchMessage(java.lang.String)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_addViolationOnMismatch_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.IntegerGetIntegerAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor: boolean hasState(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.util.ImportUtil$_sourceLineAndNumberForImport_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor: void this$dist$set$4(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter: groovy.lang.Closure buildRulesElement(org.codenarc.AnalysisContext)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckAstVisitor: boolean isNullCheckAgainstSuperReference(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.design.CloneWithoutCloneableAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ParameterCountRule: void setMaxParameters(int)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30$_closure31: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.rule.convention.InvertedIfElseAstVisitor: void dispatchToIfWithoutSuper(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.report.HtmlReportWriter: groovy.lang.Closure buildBodySection(org.codenarc.AnalysisContext,org.codenarc.results.Results)>",
    "<org.codenarc.rule.convention.VariableTypeRequiredAstVisitor: void visitDeclarationExpression(org.codehaus.groovy.ast.expr.DeclarationExpression)>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: int leftMostColumn(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitClosureExpression_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitClosureExpression_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter: groovy.lang.Closure buildFileElements(org.codenarc.results.Results)>",
    "<org.codenarc.rule.comments.JavadocEmptyThrowsTagRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ConstantTernaryExpressionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.FileResults: int getNumberOfFilesWithViolations(int)>",
    "<org.codenarc.rule.serialization.SerializableClassMustDefineSerialVersionUIDAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults: int getTotalNumberOfFiles(boolean)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPublicModifierAstVisitor: void <clinit>()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet: void <init>(java.io.Reader)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12$_closure15$_closure16: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.ruleset.MovedRules$MovedToRuleSet: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasOneStaticFieldOfItself_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConstantExpressionExtractor$_extractFromExpression_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults: void <init>(java.lang.String)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleregistry.PropertiesFileRuleRegistry: void loadRules()>",
    "<org.codenarc.rule.dry.DryUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UnnecessaryFailAstVisitor: void addViolationIfFail(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.design.AbstractClassWithPublicConstructorAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.ConsecutiveStringConcatenationAstVisitor: java.lang.String escape(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectionCallRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsBlankLineAfterOpeningBrace_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.CommonCatchAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryToStringAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor$_visitMethodEx_closure1: org.codehaus.groovy.ast.MethodNode getNode()>",
    "<org.codenarc.rule.basic.EmptyElseBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTransientModifierAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_flexibleCheckForCorrectColumn_closure10: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: boolean isAnnotatedWithOverride(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.junit.UnnecessaryFailRule: void <init>()>",
    "<org.codenarc.analyzer.StringSourceAnalyzer: java.util.List getSourceDirectories()>",
    "<org.codenarc.rule.concurrency.WaitOutsideOfWhileLoopAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void visitTernaryExpression(org.codehaus.groovy.ast.expr.TernaryExpression)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: void <init>()>",
    "<org.codenarc.rule.basic.EqualsOverloadedAstVisitor: boolean isEqualsMethodWithOneArgument(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_getViolations_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure3$_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildButtons_closure6: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitTestMethodWithoutAssertAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.CompactTextReportWriter$_writeFileViolations_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.TernaryCouldBeElvisRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.ExceptionExtendsErrorAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.groovyism.ClosureAsLastMethodParameterAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.ruleset.MovedRules$Renamed: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.AddEmptyStringAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryFloatInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.UnnecessaryGroovyImportRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.ObjectFinalizeRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.VolatileLongOrDoubleFieldVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.basic.DuplicateMapKeyAstVisitor: void visitMapExpression(org.codehaus.groovy.ast.expr.MapExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonRule: void processImports(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildScript_closure1$_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalRegexRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.ruleset.TopLevelDelegate: void rule(java.lang.Class)>",
    "<org.codenarc.rule.InlineViolationsParser$ParseResult: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.StaticCalendarFieldAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitClosureExpression_closure8: org.codehaus.groovy.ast.expr.ClosureExpression getExpression()>",
    "<org.codenarc.rule.naming.FieldNameRule: void <init>()>",
    "<org.codenarc.rule.comments.AbstractJavadocMissingDescriptionRule: java.lang.String buildRegex()>",
    "<org.codenarc.report.AbstractReportWriter: java.lang.String substituteMessageParametersIfPresent(org.codenarc.rule.Rule,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean areReturningTrueAndFalse(org.codehaus.groovy.ast.stmt.Statement,org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.convention.TernaryCouldBeElvisAstVisitor: void visitTernaryExpression(org.codehaus.groovy.ast.expr.TernaryExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstanceOfCheckAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.formatting.BlockStartsWithBlankLineAstVisitor: void visitTryCatchFinally(org.codehaus.groovy.ast.stmt.TryCatchStatement)>",
    "<org.codenarc.rule.convention.VariableTypeRequiredAstVisitor: boolean matchesIgnoredName(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToLeftShiftMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyStaticInitializerAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsBlankLineAfterOpeningBrace_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.JsonReaderRuleSet$_loadRuleElements_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceInsideParenthesesAstVisitor: boolean isOdd(int)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer: void <clinit>()>",
    "<org.codenarc.rule.basic.EqualsOverloadedAstVisitor: void addViolationIfOverloaded(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllSummaryByPackageRowsRecursively_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure19$_closure23: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14$_closure16: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.basic.EqualsAndHashCodeAstVisitor$_visitClassEx_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: boolean isAStaticFinalFieldValue(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.junit.JUnitUtil$_isTestMethod_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainHasEqualsAstVisitor: void visitClassComplete(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin: boolean sameMessage(java.lang.String,java.lang.String)>",
    "<org.codenarc.report.XmlReportWriter: java.util.Map buildPackageAttributeMap(org.codenarc.results.Results)>",
    "<org.codenarc.report.BaselineXmlReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.WildcardPattern: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.FieldNameAstVisitor: void <init>()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildHeaderSection_closure4$_closure10: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.InlineXmlReportWriter: groovy.lang.Closure buildRulesElement(org.codenarc.AnalysisContext)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21$_closure22$_closure24: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.ListRuleSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.CatchErrorRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectIncludedProperties_closure9: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThreadYieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PublicInstanceFieldAstVisitor: java.lang.String createErrorMessage(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.ruleset.MovedRules: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule: java.lang.Object this$dist$invoke$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildProjectElement_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure15$_closure16: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToMultiplyMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.design.NestedForLoopAstVisitor: boolean isForNested()>",
    "<org.codenarc.report.AbstractReportWriter$_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter: boolean isDirectoryContainingFiles(org.codenarc.results.Results)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToCompareToMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor$_visitListExpression_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processStaticImports_closure2: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPublicModifierAstVisitor: void checkDeclaration(org.codehaus.groovy.ast.ASTNode,java.lang.String,java.lang.String)>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4$_closure14: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarc$_execute_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.CollectionReturnTracker: void expressionReturnsList(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_addClosureFields_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_buildRulesElement_closure9: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitImports_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.size.ParameterCountAstVisitor$_isOverridden_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ClassNameRule: void validate()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.DuplicateImportRule: void checkStaticImport(java.lang.String,int,java.util.Set,java.util.List)>",
    "<org.codenarc.rule.basic.EmptyWhileStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.AbstractJavadocEmptyTagRule: void <init>()>",
    "<org.codenarc.analyzer.AnalyzerException: void <init>(java.lang.String)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_configure_closure1: org.codenarc.ruleset.RuleSet getRuleSet()>",
    "<org.codenarc.rule.convention.VariableTypeRequiredAstVisitor$_visitDeclarationExpression_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.ClosureStatementOnOpeningLineOfMultipleLineClosureRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_visitClosureExpression_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDoubleInstantiationAstVisitor: void <init>()>",
    "<org.codenarc.rule.junit.JUnitPublicFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor: java.lang.Integer getLineNumber(org.gmetrics.result.MetricResult)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_writeReport_closure1: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameRule$_toSet_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPublicModifierAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceAstVisitor: boolean isLambdaExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.exceptions.CatchIndexOutOfBoundsExceptionRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor: java.lang.String getSourceLine(java.lang.Integer)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19$_closure21: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter: groovy.lang.Closure buildFileSection(org.codenarc.results.Results)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.BracesForIfElseAstVisitor: void visitElse(org.codenarc.rule.formatting.BracesForIfElseRule,org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.design.CompareToWithoutComparableAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.util.ModifiersUtil: int parseModifiers(java.lang.String)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_visitClassComplete_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ant.CodeNarcTask: void <clinit>()>",
    "<org.codenarc.rule.formatting.SpaceAfterForAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitAssertAlwaysSucceedsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.TopLevelDelegate: void rule(java.lang.Class,groovy.lang.Closure)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor: java.lang.String parentPackageName(java.lang.String)>",
    "<org.codenarc.plugin.disablerules.LookupTable$_buildLookupTable_closure1: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3: org.codehaus.groovy.ast.expr.VariableExpression getVarExpression()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildScript_closure1$_closure7: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToLeftShiftMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.util.SourceCodeUtil$_containsOnlyAsciiCharacters_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.StatelessSingletonRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedMethodParameterRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ant.CodeNarcTask: org.codenarc.results.Results executeCodeNarcRunner(java.lang.Object)>",
    "<org.codenarc.rule.concurrency.StaticCalendarFieldAstVisitor: void addCalendarViolation(org.codehaus.groovy.ast.FieldNode,java.lang.String)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor$_closureReturnsArray_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.naming.ObjectOverrideMisspelledMethodNameAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.junit.UnnecessaryFailAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: void <init>(org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryToStringAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet: void setRuleProperties(groovy.util.Node,org.codenarc.rule.Rule)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.CommentsUtil: java.lang.String group(java.lang.String)>",
    "<org.codenarc.rule.junit.JUnitUtil: boolean isAssertCallWithNonNullConstantValue(org.codehaus.groovy.ast.expr.MethodCallExpression,java.lang.String)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure3: org.codenarc.rule.Rule getRule()>",
    "<org.codenarc.rule.FieldReferenceAstVisitor$_visitMethodEx_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.StaticFieldsBeforeInstanceFieldsAstVisitor$_visitClassComplete_closure1: org.codehaus.groovy.ast.ClassNode getNode()>",
    "<org.codenarc.rule.junit.UseAssertFalseInsteadOfNegationAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: java.util.List increaseIndentForClosureBlocks(org.codehaus.groovy.ast.expr.ArgumentListExpression)>",
    "<org.codenarc.rule.junit.JUnitAssertAlwaysFailsAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.util.WildcardPattern$_matches_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySetterAstVisitor: void addViolationsIfSetter(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.concurrency.SynchronizedOnGetClassAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BlockEndsWithBlankLineAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.basic.EmptyMethodAstVisitor$_visitMethod_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.DuplicateMapKeyAstVisitor$_visitMapExpression_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.concurrency.SynchronizedOnBoxedPrimitiveAstVisitor: void visitSynchronizedStatement(org.codehaus.groovy.ast.stmt.SynchronizedStatement)>",
    "<org.codenarc.rule.FieldReferenceAstVisitor$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitWhileLoop_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.AssignCollectionUniqueAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_containsKey_closure3: java.util.List getKeys()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildViolationElement_closure6$_closure15: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.XmlFileRuleSet: void <clinit>()>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: boolean isBinaryExpressionWithPropertyAccessForName(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.plugin.disablerules.LookupTable: void checkForCodeNarcEnable(java.lang.String)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsBlankLineAfterOpeningBrace_closure5: java.lang.Integer getClassStartLine()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.CompactTextReportWriter$_writeFileViolations_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryConstructorAstVisitor: boolean containsOnlyCallToSuper(org.codehaus.groovy.ast.ConstructorNode)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_addInitializedField_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unused.UnusedArrayAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBooleanInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.serialization.SerialVersionUIDAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: void addViolationOnMismatch(java.util.List,java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.serialization.EnumCustomSerializationIgnoredAstVisitor: void visitMethodComplete(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.imports.UnusedImportRule: void processStaticImports(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule$_addOrderingViolations_closure1: java.lang.String getLatePattern()>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility: org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility[] values()>",
    "<org.codenarc.rule.design.FinalClassWithProtectedMemberRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementAstVisitor$_allBranchesReturn_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.exceptions.ThrowErrorRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.GroovyDslRuleSet: groovy.lang.GroovyShell createGroovyShell()>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUnnecessarySetUpRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.TrailingWhitespaceRule$_applyTo_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceInsideParenthesesAstVisitor: boolean matchesAndNotSurroundedByQuotes(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCatchBlockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToOrMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGetterAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoJavaUtilDateAstVisitor$_visitImports_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalRule: boolean isDefinedInJpaEntity(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.exceptions.ConfusingClassNamedExceptionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterClosingBraceAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.rule.formatting.AbstractSpaceAroundBraceAstVisitor: java.lang.String lastSourceLineOrEmpty(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.naming.VariableNameAstVisitor: void visitDeclarationExpression(org.codehaus.groovy.ast.expr.DeclarationExpression)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_visitConstructorOrMethod_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ConstantsOnlyInterfaceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateUtil$_sortRules_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor$_visitForLoop_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure11$_closure13$_closure14: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor$_extractTransients_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_getAnonymousClasses_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryOverridingMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19$_closure20: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.tool.GenerateCodeNarcRulesProperties: void main(java.lang.String[])>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21$_closure22$_closure24: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.tool.GenerateRuleSetAllRulesByCategory$_main_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarc: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.CatchIllegalMonitorStateExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: boolean isValid()>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolations_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.UnnecessaryGroovyImportRule$_applyTo_closure1: java.util.List getViolations()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.SourceCodeCriteria: boolean includesPath(java.lang.String)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToOrMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.PropertyNameAstVisitor: void visitProperty(org.codehaus.groovy.ast.PropertyNode)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3$_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.DoubleCheckedLockingAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_getAnonymousClasses_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure20: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_removeInitializedField_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertTwoViolations(java.lang.String,java.lang.Integer,java.lang.String,java.lang.Object,java.lang.Integer,java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_recordMethodColumnAndSourceLineForClosureBlocks_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.BigDecimalInstantiationAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.formatting.SpaceAfterIfRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateMapLiteralAstVisitor: void <init>()>",
    "<org.codenarc.rule.design.OptionalMethodParameterAstVisitor: void processParameters(org.codehaus.groovy.ast.Parameter[],java.lang.String)>",
    "<org.codenarc.rule.size.MethodSizeAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.MultipleUnaryOperatorsAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.basic.EmptyInstanceInitializerAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_increaseIndentForClosureBlocks_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor: boolean hasAnnotation(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.SpaceBeforeClosingBraceAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor: void resetCurrentAnnotatedNode()>",
    "<org.codenarc.results.FileResults: java.util.List getViolations()>",
    "<org.codenarc.rule.exceptions.SwallowThreadDeathAstVisitor: void visitCatchStatement(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.CodeNarc: void execute(java.lang.String[])>",
    "<org.codenarc.rule.design.CollectionReturnTracker$_expressionReturnsList_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor$_visitBlockStatement_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.CompactTextReportWriter$_writeFileViolations_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.InlineXmlReportWriter$_buildDescriptionElement_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processStaticImports_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasState_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.ExplicitStackInstantiationRule$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ParameterReassignmentAstVisitor: boolean isCurrentParameterName(java.lang.String)>",
    "<org.codenarc.report.HtmlReportWriter$_buildBodySection_closure1$_closure8: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.formatting.TrailingWhitespaceRule$_applyTo_closure1: java.util.List getViolations()>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor: void visitForLoop(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.results.DirectoryResults$_getViolations_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter: java.util.Map buildPackageAttributeMap(org.codenarc.results.Results)>",
    "<org.codenarc.rule.naming.ParameterNameAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.plugin.disablerules.DisableRulesInCommentsPlugin$_processViolationsForFile_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsBlankLineAfterOpeningBrace_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.XmlReportWriter$_buildRulesElement_closure9$_closure19$_closure20: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.LocaleSetDefaultAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.IfStatementCouldBeTernaryAstVisitor: boolean isReturnStatementWithConstantOrLiteralValue(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.size.CyclomaticComplexityAstVisitor: org.gmetrics.metric.Metric createMetric()>",
    "<org.codenarc.tool.GenerateRuleIndexPages: void generateIndexByCategoryFile(java.util.Map,int,java.util.Properties)>",
    "<org.codenarc.rule.unused.AbstractLastStatementInBlockAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.rule.convention.StaticFieldsBeforeInstanceFieldsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.CouldBeElvisAstVisitor: void addViolationCouldBeElvis(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor: java.util.Map getMethodCallsAndMapKeys(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.junit.AssertionTrap: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.SuppressionAnalyzer: void <clinit>()>",
    "<org.codenarc.rule.convention.StaticFieldsBeforeInstanceFieldsAstVisitor$_visitClassComplete_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.SourceFile: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.InlineXmlReportWriter$_buildDescriptionElement_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.AbstractFinallyAstVisitor: void <init>()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryLongInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter$_writeReportToFile_closure3: org.codenarc.results.Results getResults()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarc: void main(java.lang.String[])>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor: boolean closureReturnsArray(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.util.ImportUtil$_getAllImports_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor: boolean methodReturnsCollection(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConstantExpressionExtractor$_extractFrom_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: java.lang.String getText()>",
    "<org.codenarc.tool.GenerateCodeNarcRulesProperties$_main_closure1$_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.ConsecutiveLiteralAppendsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.InterfaceNameSameAsSuperInterfaceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.StubRule$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.TrailingWhitespaceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitStackInstantiationRule$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure15$_closure16: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_findSuperClassMethods_closure8: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.ParameterReassignmentAstVisitor: void visitMethodComplete(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.CodeNarcRunner$_writeReports_closure8: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.naming.ParameterNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure15: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.naming.ClassNameSameAsSuperclassAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.tool.GenerateRuleSetAllRulesByCategory: void <clinit>()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.naming.FieldNameAstVisitor: boolean isProperty(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor$_isExpressionUsedInAnnotation_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule: void addViolationForSunImport(org.codehaus.groovy.ast.ImportNode,org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.ruleset.JsonReaderRuleSet$_setRuleProperties_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.BracesForClassRule$_applyTo_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitAssertAlwaysSucceedsRule: void <init>()>",
    "<org.codenarc.rule.convention.LongLiteralWithLowerCaseLRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4$_closure14: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: void visitMapEntryExpression(org.codehaus.groovy.ast.expr.MapEntryExpression)>",
    "<org.codenarc.rule.exceptions.ReturnNullFromCatchBlockAstVisitor: org.codehaus.groovy.ast.stmt.Statement getLastStatement(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.rule.design.AbstractClassWithoutAbstractMethodAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.CodeNarcRunner: org.codenarc.ruleset.RuleSet createInitialRuleSetFromString()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_writeReport_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.util.PropertyUtil: void setPropertyFromString(java.lang.Object,java.lang.String,java.lang.String)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitTearDownCallsSuperAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.HtmlReportWriter: groovy.lang.Closure buildAllPackageSections(org.codenarc.results.Results)>",
    "<org.codenarc.rule.concurrency.StaticDateFormatFieldAstVisitor: void addDateFormatViolation(org.codehaus.groovy.ast.FieldNode,java.lang.String)>",
    "<org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundMapEntryColonAstVisitor: void handleMapExpression(org.codehaus.groovy.ast.expr.MapEntryExpression)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameRule: java.util.Set toSet(java.lang.String)>",
    "<org.codenarc.plugin.disablerules.LookupTable$_buildLookupTable_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.AbstractReportWriter$_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ForLoopShouldBeWhileLoopAstVisitor: boolean hasOnlyConditionExpr(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonAstVisitor: void checkNode(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.AbstractRuleTestCase: java.util.List applyRuleTo(java.lang.String)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_getViolations_closure1: org.codenarc.rule.AstVisitor getVisitor()>",
    "<org.codenarc.rule.formatting.LineLengthRule: boolean flagIfImport(java.lang.String)>",
    "<org.codenarc.ruleset.FilteredRuleSet$_getRules_closure1$_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.RequiredStringRule: boolean isReady()>",
    "<org.codenarc.rule.basic.EqualsAndHashCodeAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.source.AbstractSourceCode$_removeGrabTransformation_closure1$_closure3$_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildCSS_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.MethodReturnTypeRequiredRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void <init>()>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.AbcMetricRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildReportElement_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.UseCollectManyRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_collectAllPrivateFields_closure2$_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.AbstractSourceCode: java.lang.String normalizePath(java.lang.String)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitBlockStatement_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_addViolationOnMismatch_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10: org.codenarc.results.Results getResults()>",
    "<org.codenarc.util.io.DefaultResourceFactory: boolean isUrl(java.lang.String)>",
    "<org.codenarc.ruleset.RuleSetUtil: org.codenarc.ruleset.RuleSet loadRuleSetFromString(java.lang.String)>",
    "<org.codenarc.rule.security.JavaIoPackageAccessRule: void <init>()>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin: void processViolationsForFile(org.codenarc.plugin.FileViolations)>",
    "<org.codenarc.rule.convention.StaticFieldsBeforeInstanceFieldsAstVisitor$_visitClassComplete_closure1: java.lang.Object doCall(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.convention.NoDefRule: void setExcludeRegex(java.lang.String)>",
    "<org.codenarc.rule.formatting.TrailingWhitespaceRule$_applyTo_closure1: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: void addOpeningBraceViolation(org.codehaus.groovy.ast.ASTNode,java.lang.String)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10$_closure11$_closure12: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.GroovyDslRuleSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPublicModifierAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.SpockIgnoreRestUsedAstVisitor$_visitMethod_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.naming.PackageNameAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.SpaceAfterClosingBraceAstVisitor: void processMethodNode(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.comments.ClassJavadocRule: java.lang.String sourceCodeNameWithoutExtension(org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.security.JavaIoPackageAccessAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter$_buildPackageElements_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.CodeNarcRunner$_initializePlugins_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsServletContextReferenceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_addViolationsForMultipleFieldDeclarations_closure7: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.exceptions.SwallowThreadDeathAstVisitor: void visitThrowStatement(org.codehaus.groovy.ast.stmt.ThrowStatement)>",
    "<org.codenarc.rule.dry.DuplicateStringLiteralRule: java.util.Set parseIgnoreValues()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: void <init>()>",
    "<org.codenarc.rule.imports.AbstractImportRule: int findLineNumberOfFirstClassDeclaration(org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.dry.DuplicateListLiteralAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.DuplicateCaseStatementAstVisitor$_visitSwitch_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.AssignCollectionSortAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectIncludedProperties_closure9: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.IfStatementCouldBeTernaryAstVisitor: boolean isOnlyReturnStatement(org.codehaus.groovy.ast.ASTNode)>"
  ],
  "2.0.0": [
    "<org.codenarc.tool.GenerateCodeNarcRulesProperties$_main_closure1$_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor$_visitMethodEx_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.ReportWriterFactory: org.codenarc.report.ReportWriter getReportWriter(java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure11$_closure13$_closure14: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.SynchronizedOnReentrantLockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGetterRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processImports_closure1: java.util.List getViolations()>",
    "<org.codenarc.rule.jdbc.JdbcConnectionReferenceRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: java.lang.String extractPropertyName(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.AnalysisContext: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.VariableNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.CrapMetricRule: void <clinit>()>",
    "<org.codenarc.rule.grails.ClassConstraintsAndMapping$_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_writeReport_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.FilteredRuleSet: void addInclude(java.lang.String)>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin$_removeMatchingViolation_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.concurrency.NestedSynchronizationAstVisitor$_visitClosureExpression_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.util.MultilineCommentChecker: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor: void whenOneStatementClosureFound(java.util.List,groovy.lang.Closure)>",
    "<org.codenarc.ruleset.RuleSetDelegate: org.codenarc.rule.Rule findRule(java.lang.String)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassComplete_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertyLockingAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20: java.lang.Object call(org.codenarc.rule.Rule,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryFinalOnPrivateMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: boolean isAGetterMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule: java.lang.Object this$dist$get$3(java.lang.String)>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility: void <clinit>()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_addViolationOnMismatch_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.BaselineViolation: void <init>(java.util.Map)>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfViolationsWithPriority_closure3: int getPriority()>",
    "<org.codenarc.report.AbstractReportWriter$_getSortedRules_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.StatelessClassAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.ClassConstraintsAndMapping$_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ImportUtil$_sourceLineAndNumberForStarImport_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildBodySection_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.dry.DuplicateNumberLiteralRule: void <init>()>",
    "<org.codenarc.results.FileResults: int getNumberOfViolationsWithPriority(int,boolean)>",
    "<org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.OptionalMethodParameterAstVisitor$_processParameters_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_collectAllPrivateMethods_closure2$_closure4: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.results.FileResults: java.util.List getChildren()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_writeReport_closure1$_closure8: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.JsonFileRuleSet$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_writeReport_closure1: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor: void addViolationForMultipleDeclarations(java.util.Collection)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor$_closureReturnsArray_closure2: java.lang.Boolean getReturnsArray()>",
    "<org.codenarc.rule.groovyism.UseCollectNestedAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UseAssertEqualsInsteadOfAssertTrueAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.FileResults$_getNumberOfFilesWithViolations_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer: void configure(org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsNotBlankLineAfterOpeningBrace_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySelfAssignmentAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.JavadocEmptySinceTagRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_visitConstructorOrMethod_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitTestMethodWithoutAssertRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.naming.ObjectOverrideMisspelledMethodNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.AbstractClassWithoutAbstractMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.ClassReferenceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: void <init>()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildBodySection_closure2$_closure8: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.convention.VariableTypeRequiredAstVisitor$_visitDeclarationExpression_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_isAnnotatedWithOverride_closure6: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.basic.AbstractFinallyAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.BusyWaitAstVisitor: void visitForLoop(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure7$_closure8: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.tool.GenerateRuleSetAllRulesByCategory$_main_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.FilteredRuleSet$_getRules_closure1$_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.source.SourceFile: java.lang.String toString()>",
    "<org.codenarc.source.CustomCompilerPhaseSourceDecorator: org.codenarc.analyzer.SuppressionAnalyzer getSuppressionAnalyzer()>",
    "<org.codenarc.rule.design.AssignmentToStaticFieldFromInstanceMethodAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.concurrency.SynchronizedReadObjectMethodAstVisitor: boolean isSerializable(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor$_visitMethodEx_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.AssignCollectionSortAstVisitor: boolean isChainedSort(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToXorMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildBodySection_closure1$_closure8: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckBeforeInstanceOfAstVisitor: void addViolationIfTargetsMatch(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule: org.codenarc.rule.AstVisitor getAstVisitor(org.codenarc.source.SourceCode)>",
    "<org.codenarc.report.BaselineXmlReportWriter: groovy.lang.Closure buildMessageElement(org.codenarc.rule.Violation)>",
    "<org.codenarc.util.ImportUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitSetUpCallsSuperAstVisitor$_visitMethod_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllSummaryByPackageRowsRecursively_closure3$_closure13: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.size.CrapMetricRule: boolean isReady()>",
    "<org.codenarc.rule.dry.DuplicateNumberLiteralRule: void <clinit>()>",
    "<org.codenarc.rule.naming.ClassNameSameAsFilenameRule$_applyTo_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.formatting.FileEndsWithoutNewlineRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildScript_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: boolean isBrokenNullCheck(org.codehaus.groovy.ast.expr.BinaryExpression,java.lang.String,java.lang.String)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure18: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule: java.lang.Object this$dist$get$3(java.lang.String)>",
    "<org.codenarc.ruleset.TopLevelDelegate$_rule_closure1: org.codenarc.rule.Rule getRule()>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfFilesWithViolations_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceBeforeClosingBraceAstVisitor: void visitMapEntryExpression(org.codehaus.groovy.ast.expr.MapEntryExpression)>",
    "<org.codenarc.rule.convention.TernaryCouldBeElvisAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.FileCreateTempFileRule: void <init>()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_applyProperties_closure2: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.CollectionReturnTracker$_expressionReturnsList_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.CompileStaticRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.JavadocEmptyParamTagRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.WildcardPattern$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitTestMethodWithoutAssertAstVisitor: boolean hasTestAnnotationWithMember(org.codehaus.groovy.ast.ASTNode,java.lang.String)>",
    "<org.codenarc.ruleset.MovedRules$MovedToRuleSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_visitConstructorOrMethod_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryToStringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.WildcardPattern: boolean containsWildcards(java.lang.String)>",
    "<org.codenarc.rule.concurrency.DoubleCheckedLockingAstVisitor: void addViolationOnDoubleLocking(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor: boolean isIgnoredMethodName(java.lang.String)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor: void checkTypeIfNotDynamicallyTyped(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.InlineViolationsParser$ParseResult: void <init>()>",
    "<org.codenarc.rule.formatting.SpaceAroundMapEntryColonRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.LineLengthRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_findMatchingSuperClassMethod_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.DuplicateImportRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.ruleset.TopLevelDelegate: void rule(java.lang.String,groovy.lang.Closure)>",
    "<org.codenarc.rule.concurrency.StaticSimpleDateFormatFieldAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_visitConstructorOrMethod_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.generic.StatelessClassRule: boolean shouldIgnoreField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.imports.AbstractImportRule$_findLineNumberOfFirstClassDeclaration_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.JsonReportWriter$_buildRulesElement_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30$_closure31: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.concurrency.SynchronizedMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4$_closure13$_closure15: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter$_writeSummary_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_visitClassEx_closure1: org.codehaus.groovy.ast.ClassNode getNode()>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor$_visitConstructorOrMethod_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.RuleSetDelegate$_findRule_closure2: java.lang.String getName()>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor: org.gmetrics.metric.Metric getMetric()>",
    "<org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule: java.lang.Object this$dist$get$3(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInVariableDeclarationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.LineLengthRule: boolean lineMatchesIgnoreLineRegex(java.lang.String)>",
    "<org.codenarc.ruleset.XmlFileRuleSet$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.ruleset.FilteredRuleSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: void saveMethodInfo(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.generic.IllegalClassMemberRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UseAssertTrueInsteadOfNegationAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.report.XmlReportWriter$_buildProjectElement_closure3: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.ruleset.GroovyDslRuleSet$_evaluateDsl_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectionCallAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: java.util.Map findSuperClassMethods(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertSingleViolation(java.lang.String,java.lang.Integer,java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainHasEqualsAstVisitor: boolean isNotInnerEnum(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.naming.VariableNameAstVisitor$_visitDeclarationExpression_closure1: org.codehaus.groovy.ast.expr.DeclarationExpression getDeclarationExpression()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToPlusMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.ConsecutiveStringConcatenationAstVisitor: void <clinit>()>",
    "<org.codenarc.source.AbstractSourceCode$_getLineNumberForCharacterIndex_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.util.GroovyVersion: boolean isGroovyVersion2()>",
    "<org.codenarc.rule.formatting.BlockEndsWithBlankLineAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToAndMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.SystemOutPrintAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.concurrency.SynchronizedOnReentrantLockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.SynchronizedOnReentrantLockAstVisitor: void visitSynchronizedStatement(org.codehaus.groovy.ast.stmt.SynchronizedStatement)>",
    "<org.codenarc.rule.basic.EqualsAndHashCodeRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ConstantIfExpressionAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.tool.GenerateCodeNarcRulesProperties: void <clinit>()>",
    "<org.codenarc.rule.naming.MethodNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBigDecimalInstantiationAstVisitor: void <init>()>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: boolean matches(java.util.regex.Pattern,java.lang.String)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToModMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor: void visitPropertyExpression(org.codehaus.groovy.ast.expr.PropertyExpression)>",
    "<org.codenarc.results.VirtualResults: void <init>(java.util.List)>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: boolean dynamicTypedAndNotExcludedVariable(org.codehaus.groovy.ast.Variable)>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintAstVisitor$_visitMethodCallExpression_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void checkAssignmentWithinDeclaration(org.codehaus.groovy.ast.expr.BinaryExpression,java.lang.String)>",
    "<org.codenarc.rule.generic.RequiredRegexRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.TopLevelDelegate: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToCompareToMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToCompareToMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckBeforeInstanceOfAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor: boolean hasOneStaticFieldNamedInstance(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.concurrency.SynchronizedOnGetClassAstVisitor: void visitSynchronizedStatement(org.codehaus.groovy.ast.stmt.SynchronizedStatement)>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildBodySection_closure2$_closure8: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolation_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25: org.codenarc.report.SortableHtmlReportWriter$ViolationAndPath getVp()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure14: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor: void visitVariableExpression(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.ruleset.XmlFileRuleSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.PathUtil: java.lang.String normalizePath(java.lang.String)>",
    "<org.codenarc.report.InlineXmlReportWriter$_buildViolationElement_closure1: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_getMethodCallsAndMapKeys_closure5: java.util.Map getResult()>",
    "<org.codenarc.rule.convention.CouldBeElvisAstVisitor: org.codehaus.groovy.ast.expr.Expression getSingleStatementExpressionOrNull(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_writeReport_closure1$_closure8: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.util.ImportUtil: java.util.List getAllImports(org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalRule$_getViolations_closure1: java.lang.Object doCall(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer: org.codenarc.results.DirectoryResults processDirectory(java.lang.String,org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.rule.groovyism.ExplicitStackInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasOneStaticFieldOfItself_closure2: org.codehaus.groovy.ast.ClassNode getClassNode()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryConstructorAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.NestedForLoopAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToXorMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.ruleset.MovedRules$MovedToRuleSet: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.util.ModifiersUtil$_parseModifiersList_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueAstVisitor: org.codehaus.groovy.ast.expr.Expression getActualArgument(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.ruleset.RuleSetDelegate$_findRule_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.UseCollectNestedAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToDivMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryConstructorAstVisitor: boolean hasAnnotations(org.codehaus.groovy.ast.ConstructorNode)>",
    "<org.codenarc.ruleset.RuleSetDelegate: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.AbstractReportWriter: java.lang.String getHtmlDescriptionForRule(org.codenarc.rule.Rule)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: org.codehaus.groovy.ast.MethodNode findMatchingSuperClassMethod(java.lang.String,java.util.List)>",
    "<org.codenarc.rule.formatting.BracesForForLoopAstVisitor$_findLastLineOfForExpressions_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: void markVariableAsReferenced(java.lang.String,org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.rule.basic.HardcodedWindowsRootDirectoryAstVisitor: void addViolationForWindowsPath(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.groovyism.UseCollectNestedAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.basic.EmptySwitchStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitFailWithoutMessageRule: void <init>()>",
    "<org.codenarc.rule.basic.AssignmentInConditionalRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.AssignmentToStaticFieldFromInstanceMethodAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: org.codehaus.groovy.ast.ModuleNode getAst()>",
    "<org.codenarc.rule.basic.EmptyInstanceInitializerAstVisitor: void visitObjectInitializerStatements(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasOneStaticFieldNamedInstance_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.AbstractFinallyAstVisitor$_isStatementWithinFinally_closure1: org.codehaus.groovy.ast.stmt.Statement getStatement()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.FieldReferenceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_visitConstructorOrMethod_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12$_closure15: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.basic.EmptyTryBlockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults$_removeViolation_closure2: org.codenarc.rule.Violation getV()>",
    "<org.codenarc.rule.generic.StatelessClassAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: void beforeBlock()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21$_closure22: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.BuilderMethodWithSideEffectsAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: void checkIfThereIsBlankLineAfterOpeningBrace(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.convention.IfStatementCouldBeTernaryAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.NonFinalSubclassOfSensitiveInterfaceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.InlineViolationsParser: void <init>()>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin$_removeMatchingViolation_closure2: org.codenarc.report.BaselineViolation getBaselineViolation()>",
    "<org.codenarc.rule.serialization.SerialPersistentFieldsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementAstVisitor$_allBranchesReturn_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21$_closure23: org.codenarc.rule.Rule getRule()>",
    "<org.codenarc.rule.junit.UseAssertNullInsteadOfAssertEqualsRule: void <init>()>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin: void processReports(java.util.List)>",
    "<org.codenarc.rule.junit.ChainedTestAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.source.CustomCompilerPhaseSourceDecorator: java.lang.String getName()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_visitClassEx_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.JsonReportWriter$_buildFileElement_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.comments.AbstractJavadocEmptyTagRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: java.util.List allExceptLastElement(java.util.List)>",
    "<org.codenarc.ruleset.TopLevelDelegate$_rule_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.BaselineViolation: int hashCode()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToPutAtMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyWhileStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter: groovy.lang.Closure buildFileElement(org.codenarc.results.FileResults)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckAstVisitor: boolean isNullCheckAgainstThisReference(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.InlineViolationsParser$_parseLine_closure1: int getLineNumber()>",
    "<org.codenarc.rule.comments.JavadocEmptyLastLineRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitMapExpression_closure5: org.codehaus.groovy.ast.expr.MapExpression getMapExpression()>",
    "<org.codenarc.rule.design.CloneWithoutCloneableAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.convention.NoFloatRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ConstantsOnlyInterfaceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitPublicNonTestMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ParameterNameAstVisitor$_processParameters_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.DeadCodeAstVisitor$_visitBlockStatement_closure1: org.codehaus.groovy.ast.stmt.BlockStatement getBlock()>",
    "<org.codenarc.report.XmlReportWriter$_buildSourceLineElement_closure7: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ConstantsOnlyInterfaceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.AbstractClassWithPublicConstructorAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.TextReportWriter$_writeSummary_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.source.CustomCompilerPhaseSourceDecorator: java.lang.String getPath()>",
    "<org.codenarc.rule.basic.AssignmentInConditionalAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor: void visitConstantExpression(org.codehaus.groovy.ast.expr.ConstantExpression)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure18: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitUnnecessarySetUpAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: java.lang.Number isPrivate(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.dry.DuplicateNumberLiteralRule: java.util.Set parseIgnoreValues()>",
    "<org.codenarc.report.HtmlReportWriter$_buildBodySection_closure1$_closure8: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_visitConstructorOrMethod_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.imports.UnusedImportRule: boolean isImportStatementForAlias(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToDivMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor: void <init>()>",
    "<org.codenarc.rule.basic.DuplicateSetValueAstVisitor: void addViolationForDuplicate(org.codehaus.groovy.ast.expr.ConstantExpression)>",
    "<org.codenarc.report.XmlReportWriter$_buildProjectElement_closure3$_closure11$_closure12: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.imports.UnusedImportRule: int countUsage(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.exceptions.ExceptionExtendsErrorRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildHeaderSection_closure4$_closure10: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.ruleset.FilteredRuleSet$_getRules_closure1$_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.JUnitUtil$_isTestMethod_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27: java.lang.Object doCall(org.codenarc.rule.Violation)>",
    "<org.codenarc.ruleset.FilteredRuleSet: void addExclude(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonRule: boolean endsWithSemicolon(java.lang.String,int)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonAstVisitor$_removeAnyViolationsForSameLine_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.rule.convention.NoJavaUtilDateAstVisitor$_visitImports_closure1: java.lang.Object doCall(org.codehaus.groovy.ast.ImportNode)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3$_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.InlineViolationsParser: java.lang.String inlineViolation(java.lang.String)>",
    "<org.codenarc.rule.junit.UnnecessaryFailAstVisitor: void visitCatchStatement(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.rule.groovyism.AssignCollectionUniqueAstVisitor: void visitDeclarationExpression(org.codehaus.groovy.ast.expr.DeclarationExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInFieldDeclarationAstVisitor: boolean contains(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.InlineViolationsParser: void parseLine(java.lang.String,int)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBooleanExpressionAstVisitor: void visitNotExpression(org.codehaus.groovy.ast.expr.NotExpression)>",
    "<org.codenarc.rule.formatting.BracesForClassRule: void applyToClassNode(org.codehaus.groovy.ast.ClassNode,int,java.lang.String,java.util.List)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_getMethodCallsAndMapKeys_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.tool.GenerateUtil$_sortRules_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.UseAssertTrueInsteadOfNegationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateMapLiteralAstVisitor$_visitMapExpression_closure1: org.codehaus.groovy.ast.expr.MapExpression getExpression()>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor$_processParameters_closure1: java.lang.String getMethodName()>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor: java.lang.String extractMethodName(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryObjectReferencesAstVisitor$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.AstUtil: boolean classNodeImplementsType(org.codehaus.groovy.ast.ClassNode,java.lang.Class)>",
    "<org.codenarc.rule.exceptions.SwallowThreadDeathRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCatchBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.plugin.disablerules.LookupTable: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.UnusedImportRule$_findReference_closure3: java.lang.String getAlias()>",
    "<org.codenarc.rule.generic.IllegalStringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_getAnonymousClasses_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.AbstractClassWithoutAbstractMethodAstVisitor: boolean skipSuperClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.design.PublicInstanceFieldAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor: void addViolation(org.gmetrics.result.MetricResult,java.lang.String)>",
    "<org.codenarc.rule.concurrency.SynchronizedReadObjectMethodAstVisitor: boolean isSynchronizedBlock(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.concurrency.SynchronizedOnStringAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceAstVisitor: void processMethodNode(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.dry.DuplicateMapLiteralAstVisitor$_visitMapExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitListExpression_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor$_addViolationsForInstanceFields_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.ClassJavadocRule$_applyTo_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_visitConstructorOrMethod_closure3: org.codehaus.groovy.ast.MethodNode getNode()>",
    "<org.codenarc.report.XmlReportWriter$_buildProjectElement_closure3$_closure11: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.exceptions.ExceptionNotThrownAstVisitor: boolean isLastStatementAnExceptionConstructorCall(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBooleanInstantiationAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.design.OptionalFieldAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_getAnonymousClasses_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.braces.IfStatementBracesRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.FileResults$_getNumberOfFilesWithViolations_closure2: int getMaxPriority()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure2: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule: java.util.List getViolations(org.codenarc.rule.AstVisitor,org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.basic.IntegerGetIntegerAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.UnsafeImplementationAsMapRule: void <init>()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_findMatchingSuperClassMethod_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_generateAllPossibleParameterSignatures_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor: void addViolationWithMessage(org.codehaus.groovy.ast.expr.MethodCallExpression,org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_visitConstructorOrMethod_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolations_closure3$_closure6: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.imports.AbstractImportRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.CommentsUtil: boolean hasTextOnNextLine(org.codenarc.source.SourceCode,int)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.ruleset.MovedRules$MovedToRuleSet: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor: boolean hibernateWouldCreateColumnFor(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.formatting.LineLengthRule: boolean sourceViolatesLineLengthRule(java.lang.String)>",
    "<org.codenarc.rule.basic.EmptyWhileStatementAstVisitor: void visitWhileLoop(org.codehaus.groovy.ast.stmt.WhileStatement)>",
    "<org.codenarc.rule.junit.JUnitTearDownCallsSuperRule: void <init>()>",
    "<org.codenarc.rule.exceptions.ExceptionNotThrownAstVisitor: org.codehaus.groovy.ast.stmt.Statement getLastStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure15$_closure16: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor$_visitCatchStatement_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateListLiteralAstVisitor$_visitListExpression_closure1: org.codehaus.groovy.ast.expr.ListExpression getExpression()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_visitMethodEx_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule$_addOrderingViolations_closure1: java.lang.String getEarlyPattern()>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_applyTo_closure2: java.util.List getViolations()>",
    "<org.codenarc.ant.CodeNarcTask: void execute()>",
    "<org.codenarc.CodeNarcRunner$_applyPluginsProcessViolationsForFile_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryConstructorAstVisitor: boolean isEmptyOrJustCallsSuper(org.codehaus.groovy.ast.ConstructorNode)>",
    "<org.codenarc.CodeNarcRunner$_applyPluginsProcessViolationsForAllFiles_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.CodeNarc$_execute_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToOrMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.imports.UnnecessaryGroovyImportRule$_applyTo_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToPutAtMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule: void this$dist$set$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.basic.BitwiseOperatorInConditionalAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ParameterReassignmentAstVisitor: boolean isReassigningAParameter(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.analyzer.AnalyzerException: void <init>(java.lang.Throwable)>",
    "<org.codenarc.rule.concurrency.DoubleCheckedLockingRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.PublicFinalizeMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_generateAllPossibleParameterSignatures_closure4: org.codehaus.groovy.ast.MethodNode getMethodNode()>",
    "<org.codenarc.results.FileResults: int getNumberOfFilesWithViolations(int,boolean)>",
    "<org.codenarc.rule.basic.AssertWithinFinallyBlockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BlockStartsWithBlankLineAstVisitor: void checkForViolations(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.junit.JUnitAssertAlwaysFailsRule: void <init>()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToDivMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsServletContextReferenceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.RuleSetUtil$_loadRuleScriptFile_closure1: java.lang.Class getRuleClass()>",
    "<org.codenarc.rule.groovyism.UseCollectNestedAstVisitor: void checkForCallToClosureParameter(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.SpaceAroundMapEntryColonAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: boolean isNotOpeningSquareBracket(java.lang.String,int)>",
    "<org.codenarc.rule.formatting.SpaceAfterIfAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.SpockIgnoreRestUsedAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.CodeNarcRunner$_writeReports_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildReportElement_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor: void extractTransients(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.imports.UnusedImportRule$_findReference_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.BlockStartsWithBlankLineAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor$_visitConstantExpression_closure1: org.codehaus.groovy.ast.expr.ConstantExpression getExpression()>",
    "<org.codenarc.util.ImportUtil$_sortImportsByLineNumber_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor: void visitCastExpression(org.codehaus.groovy.ast.expr.CastExpression)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19$_closure20: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsRule: void <init>()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryParenthesesForMethodCallWithClosureAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor: boolean isNotIgnoredMethodParameterName(org.codehaus.groovy.ast.Parameter)>",
    "<org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter: groovy.lang.Closure buildFileElement(org.codenarc.results.FileResults)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor$_isUsedInAnyAnnotationOnCurrentAnnotatedNode_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ConsecutiveUtils: boolean areJoinableConstants(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.design.CollectionReturnTracker$_expressionReturnsList_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_getMethodCallsAndMapKeys_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildViolationElement_closure6$_closure15: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor: boolean isIgnoredOneElementList(org.codehaus.groovy.ast.expr.ListExpression)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassEx_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14$_closure15: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10$_closure11: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.CompileStaticlVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.GroovyDslRuleSet$_evaluateDsl_closure2: groovy.lang.GroovyShell getShell()>",
    "<org.codenarc.util.PropertyUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.AssignmentToStaticFieldFromInstanceMethodAstVisitor: void <init>()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure7$_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.MovedRules: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor$_visitMethodCallExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.FieldReferenceAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unused.AbstractLastStatementInBlockAstVisitor: void <init>()>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure18: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.concurrency.ThreadLocalNotStaticFinalAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.InsecureRandomRule: void <init>()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor: boolean doesExtendClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.AbstractRuleTestCase: void testThatInvalidCodeHasNoViolations()>",
    "<org.codenarc.rule.junit.UseAssertFalseInsteadOfNegationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.jdbc.JdbcStatementReferenceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor: void visitClassComplete(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.convention.MethodReturnTypeRequiredAstVisitor: boolean isNotIgnoredMethodName(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor: boolean isUsedInAnyAnnotationOnCurrentAnnotatedNode(org.codehaus.groovy.ast.expr.ConstantExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationAstVisitor$_visitConstructorCallExpression_closure1: java.lang.Object doCall(java.lang.Class)>",
    "<org.codenarc.rule.concurrency.SynchronizedOnStringAstVisitor: void visitSynchronizedStatement(org.codehaus.groovy.ast.stmt.SynchronizedStatement)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_setupFlexibleIndentForAnyClosureParameterBlocks_closure6: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.LocaleSetDefaultAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfFilesWithViolations_closure4: int getMaxPriority()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void visitSwitch(org.codehaus.groovy.ast.stmt.SwitchStatement)>",
    "<org.codenarc.rule.naming.ParameterNameRule: void validate()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCallToSubstringAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.naming.InterfaceNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryModOneAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.size.NestedBlockDepthRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.junit.UseAssertTrueInsteadOfNegationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor: void addViolationsForMultipleFieldDeclarations(java.util.Collection)>",
    "<org.codenarc.report.JsonReportWriter$_buildPackageElements_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.SynchronizedMethodAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.serialization.EnumCustomSerializationIgnoredRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.size.MethodCountAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleregistry.RuleRegistryInitializer: void initializeRuleRegistry()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToRightShiftMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor: void processParameters(org.codehaus.groovy.ast.Parameter[],java.lang.String)>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: java.lang.String line(int)>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor$_visitForLoop_closure2: org.codehaus.groovy.ast.stmt.ForStatement getForLoop()>",
    "<org.codenarc.ruleset.CompositeRuleSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.CollectAllIsDeprecatedAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.design.AbstractClassWithPublicConstructorAstVisitor$_visitClassEx_closure1: org.codehaus.groovy.ast.ClassNode getNode()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementAstVisitor: boolean isValidElseBlock(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor$_hasTrailingComma_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.naming.VariableNameAstVisitor$_visitDeclarationExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ThrowExceptionFromFinallyBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.MissingBlankLineAfterPackageRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.naming.FactoryMethodNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor$_visitMethodCallExpression_closure2: org.codehaus.groovy.ast.expr.MethodCallExpression getExpression()>",
    "<org.codenarc.CodeNarc$_parseArgs_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateNumberLiteralRule$_defineAdditionalChecksClosure_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.naming.AbstractClassNameRule: boolean isReady()>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor: void <init>(java.util.List,java.util.Set,groovy.lang.Closure)>",
    "<org.codenarc.rule.dry.DuplicateMapLiteralAstVisitor: void visitMapExpression(org.codehaus.groovy.ast.expr.MapExpression)>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.basic.EmptyCatchBlockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_collectAllPrivateMethods_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.JUnitPublicPropertyRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.SourceFile: void <init>(java.io.File)>",
    "<org.codenarc.rule.design.NestedForLoopAstVisitor: void <init>()>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: boolean isNotExpressionWithPropertyAccessForName(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryToStringAstVisitor$_visitGStringExpression_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildBodySection_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_collectAllPrivateFields_closure2$_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure11$_closure13: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.CustomCompilerPhaseSourceDecorator: java.lang.String getText()>",
    "<org.codenarc.report.JsonReportWriter: void writeReport(java.io.Writer,org.codenarc.AnalysisContext,org.codenarc.results.Results)>",
    "<org.codenarc.util.io.ClassPathResource: java.io.InputStream getInputStream()>",
    "<org.codenarc.rule.generic.IllegalClassReferenceRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.design.CloneWithoutCloneableRule: void <init>()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_visitMethodEx_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.report.TextReportWriter: void writeFileViolations(java.io.Writer,org.codenarc.results.FileResults)>",
    "<org.codenarc.rule.basic.DuplicateSetValueAstVisitor: void visitCastExpression(org.codehaus.groovy.ast.expr.CastExpression)>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterAstVisitor: void <init>()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationToGetClassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: java.lang.Boolean memoizedMethodPriv$isSingleLineClassClassNode(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryModOneRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor: boolean isEmpty(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.serialization.SerialVersionUIDAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_visitClosureExpression_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure13: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.InterfaceNameSameAsSuperInterfaceAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter: java.lang.Object this$dist$get$3(java.lang.String)>",
    "<org.codenarc.rule.formatting.BlankLineBeforePackageRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor: boolean isFloatTypeName(java.lang.String)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_writeReport_closure1$_closure8: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.JUnitUtil$_isAssertCallWithNonNullConstantValue_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.dry.DuplicateStringLiteralRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.serialization.SerialPersistentFieldsAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.formatting.SpaceAfterClosingBraceAstVisitor: boolean isNotAllowedCharacterAfterClass(java.lang.String,int)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_getFirstValue_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.dry.DuplicateListLiteralAstVisitor$_visitListExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.XmlReportWriter: groovy.lang.Closure buildViolationElement(org.codenarc.rule.Violation)>",
    "<org.codenarc.report.XmlReportWriter$_buildFileElement_closure5$_closure16: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor: java.util.List getAnonymousClasses()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementAstVisitor$_visitIfElse_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterCodeVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ant.CodeNarcTask: org.codenarc.analyzer.SourceAnalyzer createSourceAnalyzer()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure26: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckAstVisitor: boolean isNotNullCheckAgainstThisReference(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.formatting.AbstractSpaceAroundBraceAstVisitor: int indexOfClosingBrace(java.lang.String,int)>",
    "<org.codenarc.rule.junit.CoupledTestCaseAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.exceptions.CatchExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.UnsafeImplementationAsMapAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.BuilderMethodWithSideEffectsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ImplementationAsTypeRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryObjectReferencesAstVisitor$_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToPlusMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.convention.TernaryCouldBeElvisAstVisitor: boolean areTheSame(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor: void <init>(java.util.List,java.util.Set)>",
    "<org.codenarc.report.XmlReportWriter$_buildRulesElement_closure9$_closure19: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure15: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalClassMemberAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: boolean isOwnedByClassOrItsOuterClass(org.codehaus.groovy.ast.FieldNode,org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_printRuleProcessingTimes_closure6: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.dry.DuplicateListLiteralAstVisitor: void visitListExpression(org.codehaus.groovy.ast.expr.ListExpression)>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_getViolations_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.CouldBeSwitchStatementAstVisitor: java.lang.Boolean isSameLeftExpressionAsPreviousIfStatement(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.basic.ComparisonWithSelfAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsNotBlankLineAfterOpeningBrace_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.dry.DuplicateStringLiteralRule$_defineAdditionalChecksClosure_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor$_visitMethodCallExpression_closure2: org.codehaus.groovy.ast.expr.MethodCallExpression getCall()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor$_expressionContainsBannedCharacters_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_visitMethodEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainWithServiceReferenceRule: void <init>()>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer$_processDirectory_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter$_buildPackageElements_closure1: java.util.Map getPackageItem()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor$_closureReturnsCollection_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter: java.util.List buildPackageElements(org.codenarc.results.Results)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_writeReport_closure1$_closure8: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.concurrency.ThreadYieldAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor$_visitCatchStatement_closure2: java.util.List getLoggerNames()>",
    "<org.codenarc.tool.GenerateCodeNarcRulesProperties$_main_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectMapKeys_closure6: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.comments.JavadocEmptyVersionTagRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule$_applyTo_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ParameterCountAstVisitor: java.lang.String getName(org.codehaus.groovy.ast.ConstructorNode)>",
    "<org.codenarc.rule.security.UnsafeImplementationAsMapAstVisitor: java.util.List getMethodsImplementedByCoercion(org.codehaus.groovy.ast.expr.MapExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInMethodDeclarationAstVisitor: boolean contains(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor: boolean closureReturnsCollection(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.basic.EmptyInstanceInitializerRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void processTernaryExpression(org.codehaus.groovy.ast.expr.TernaryExpression)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectMapKeys_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.AbstractJavadocMissingDescriptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner$_applyPluginsProcessViolationsForFile_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.StaticConnectionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3$_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitCatchStatement_closure3: org.codehaus.groovy.ast.stmt.CatchStatement getStatement()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14$_closure16: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor: org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility getVisibility(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_recordMethodColumnAndSourceLineForClosureBlocks_closure7: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.basic.AbstractFinallyAstVisitor: void visitTryCatchFinally(org.codehaus.groovy.ast.stmt.TryCatchStatement)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitMapExpression_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor: void <init>()>",
    "<org.codenarc.rule.generic.IllegalClassReferenceRule: void <init>()>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInMethodDeclarationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.IntegerGetIntegerRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.OptionalMethodParameterAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor$_extractTransients_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.source.AbstractSourceCode$_removeGrabTransformation_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor$_isNamedArgumentsListContainingThis_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.report.XmlReportWriter$_buildFileElement_closure5$_closure16: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure26: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.formatting.AbstractSpaceAroundBraceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter: java.util.Map buildProjectElement(org.codenarc.AnalysisContext)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.jdbc.JdbcStatementReferenceRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.jdbc.JdbcConnectionReferenceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.FieldNameAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildViolationElement_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfFilesWithViolations_closure4: boolean getRecursive()>",
    "<org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule: java.lang.Object this$dist$invoke$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.generic.IllegalClassReferenceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.PrintlnAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor: boolean hasTrailingComma(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.ruleset.JsonFileRuleSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.RuleSetDelegate$_findRule_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: boolean isCharacterPrecedingClosureInvalid(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.dry.DuplicateStringLiteralRule: void <init>()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_flexibleCheckForCorrectColumn_closure11: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.ClassReferenceAstVisitor: void checkNodeType(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.CommentsUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.ruleset.ListRuleSet: void <init>(java.util.List)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckAstVisitor: void visitBooleanExpression(org.codehaus.groovy.ast.expr.BooleanExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCastAstVisitor: boolean isUnnecessaryCast(org.codehaus.groovy.ast.expr.CastExpression)>",
    "<org.codenarc.report.AbstractReportWriter: java.lang.String getCodeNarcVersion()>",
    "<org.codenarc.tool.GenerateRuleIndexPage$_main_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.JsonReaderRuleSet: void <init>(java.io.Reader)>",
    "<org.codenarc.rule.security.UnsafeArrayDeclarationAstVisitor: boolean isArray(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.formatting.BracesForMethodAstVisitor: boolean lineContainsMethodName(java.lang.String,org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDotClassAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_collectAllPrivateMethods_closure2$_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCatchBlockAstVisitor$_visitTryCatchFinally_closure1: java.lang.Object doCall(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.rule.junit.JUnitUtil$_isTestMethod_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintAstVisitor: void <init>()>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin$_processViolationsForFile_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.generic.RequiredRegexRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.junit.UseAssertTrueInsteadOfAssertEqualsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitPublicPropertyRule: void <init>()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule: void this$dist$set$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean isTrueExpression(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure6: org.codenarc.results.FileResults getResults()>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19$_closure21: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.tool.GenerateRuleSetAllRules: void <clinit>()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectIncludedProperties_closure7: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.ruleset.ListRuleSet$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.DuplicateMapKeyAstVisitor$_visitMapExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PublicInstanceFieldAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.plugin.disablerules.LookupTable: void <init>(java.lang.String)>",
    "<org.codenarc.rule.basic.RemoveAllOnSelfAstVisitor: boolean isMethodNamed(org.codehaus.groovy.ast.expr.MethodCallExpression,java.lang.String)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertyLockingAstVisitor: void addViolationOnMismatch(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.design.InstanceofRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.JsonFileRuleSet$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.StringSourceAnalyzer: void <init>(java.lang.String)>",
    "<org.codenarc.util.SourceCodeUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule$_applyTo_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceAfterWhileAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.SystemOutPrintRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.formatting.BracesForForLoopAstVisitor$_findLastLineOfForExpressions_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.MissingNewInThrowStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionAstVisitor: boolean hasJUnit4Annotation(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.ruleset.MovedRules$MovedToRuleSet: java.lang.String messageFor(java.lang.String)>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule$_applyTo_closure1: java.util.List getViolations()>",
    "<org.codenarc.report.IdeTextReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.ExceptionExtendsThrowableAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_processMethodOrConstructorCall_closure3: org.codehaus.groovy.ast.expr.MethodCall getCall()>",
    "<org.codenarc.rule.grails.ClassConstraintsAndMapping$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.size.ClassSizeAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.InlineViolationsParser$ParseResult: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer: void printRuleProcessingTimes()>",
    "<org.codenarc.rule.convention.ImplicitReturnStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.WaitOutsideOfWhileLoopAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationAstVisitor$_visitConstructorCallExpression_closure1: org.codehaus.groovy.ast.expr.ConstructorCallExpression getCall()>",
    "<org.codenarc.rule.formatting.BracesForClassRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.naming.VariableNameRule: void <init>()>",
    "<org.codenarc.rule.logging.LoggerWithWrongModifiersRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter$_buildPackageElements_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.jdbc.DirectConnectionManagementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalClassMemberRule: void <init>()>",
    "<org.codenarc.rule.generic.IllegalClassMemberAstVisitor: boolean matchesIgnoreMethodsWithAnnotationNames(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.design.AbstractClassWithPublicConstructorAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateUtil$_createSortedListOfAllRules_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.CloneableWithoutCloneRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_getAnonymousClasses_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24: java.lang.Object doCall(org.codenarc.report.SortableHtmlReportWriter$ViolationAndPath)>",
    "<org.codenarc.rule.ClassReferenceAstVisitor: java.lang.String formatViolationMessage(java.lang.String)>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: void visitClassComplete(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure15: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.BracesForForLoopAstVisitor$_findLastLineOfForExpressions_closure1: java.lang.Integer getLoopExpressionLastLine()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure25: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.braces.WhileStatementBracesRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer: boolean matches(org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.InlineViolationsParser: java.util.Map createViolation(int,java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.concurrency.StaticMatcherFieldAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolations_closure3$_closure6: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToModMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_addViolationOnMismatch_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.BigDecimalInstantiationAstVisitor: boolean isConstructorCallAViolation(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceRule: boolean isReady()>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertSingleViolation(java.lang.String,groovy.lang.Closure)>",
    "<org.codenarc.rule.junit.UseAssertTrueInsteadOfAssertEqualsAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor: boolean isClosureParameterOutsideParentheses(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet: void <clinit>()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectIncludedProperties_closure8: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor: java.util.Set collectIncludedProperties(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.CollectAllIsDeprecatedAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor: void addViolationIfDuplicate(org.codehaus.groovy.ast.expr.Expression,boolean)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBigIntegerInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UseAssertTrueInsteadOfAssertEqualsRule: void <init>()>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsRule: void <clinit>()>",
    "<org.codenarc.CodeNarcRunner: org.codenarc.ruleset.RuleSet buildRuleSet()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_getFileResults_closure4: java.util.List getFileResults()>",
    "<org.codenarc.rule.concurrency.StaticCalendarFieldAstVisitor: boolean isCalendarFactoryMethodCall(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.naming.FieldNameAstVisitor: boolean isIgnoredPropertyName(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.size.MethodCountRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DryUtil: boolean haveTheSameConstantOrLiteralValue(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterAstVisitor$_hasItParameter_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.serialization.SerializableClassMustDefineSerialVersionUIDAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4: boolean getAllPackages()>",
    "<org.codenarc.rule.design.BooleanMethodReturnsNullAstVisitor: boolean codeReturnsBoolean(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.comments.ClassJavadocRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.naming.MethodNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter: java.util.Map buildReportElement()>",
    "<org.codenarc.ruleset.JsonFileRuleSet: void <init>(java.lang.String)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_getFirstValue_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueAstVisitor: boolean isConvertibleToDouble(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectionCallAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure5$_closure13: org.codenarc.results.FileResults getResults()>",
    "<org.codenarc.rule.junit.SpockIgnoreRestUsedAstVisitor$_visitMethod_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildRulesElement_closure9$_closure19: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCallToSubstringAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.ChainedTestRule: void <init>()>",
    "<org.codenarc.rule.exceptions.ThrowThrowableRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitListExpression_closure4: org.codehaus.groovy.ast.expr.ListExpression getListExpression()>",
    "<org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule$1: void <init>(org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule,java.lang.Object)>",
    "<org.codenarc.rule.concurrency.SynchronizedReadObjectMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: boolean isNotAutoBoxed(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.ruleset.MovedRules$MovedToRuleSet: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure19: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_findSuperClassMethods_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsNotBlankLineAfterOpeningBrace_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBooleanExpressionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor: void <init>(java.util.Map,java.util.List)>",
    "<org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildBodySection_closure2$_closure8: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.CloseWithoutCloseableRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor$_visitMethodEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule$1: void <init>(org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule,java.lang.Object)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void visitConstructor(org.codehaus.groovy.ast.ConstructorNode)>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitTearDownCallsSuperAstVisitor$_visitMethod_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: void <init>()>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterAstVisitor: boolean hasItParameter(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.junit.UseAssertNullInsteadOfAssertEqualsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.CyclomaticComplexityAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule$_addOrderingViolations_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.FilteredRuleSet$_getRules_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.XmlReportWriter$_buildMessageElement_closure8: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4$_closure13: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.FilteredRuleSet: void <init>(org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_writeReport_closure1$_closure8: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.design.ArrayReturnTracker: void callBackForArrayReturns(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitClosureExpression_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility: org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility $INIT(java.lang.Object[])>",
    "<org.codenarc.rule.formatting.BracesForTryCatchFinallyAstVisitor: void visitTryCatchFinally(org.codehaus.groovy.ast.stmt.TryCatchStatement)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySubstringAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.CodeNarcRunner$_createInitialRuleSetFromFiles_closure6: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_writeReport_closure1: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin$_processViolationsForFile_closure1: org.codenarc.plugin.FileViolations getFileViolations()>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryTearDownAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner$_createInitialRuleSetFromFiles_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.AbstractSourceCode: int getAstCompilerPhase()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_getAnonymousClasses_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.generic.StatelessClassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.VariableNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIntegerInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.PackageNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.CrapMetricAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void checkForCorrectColumn(org.codehaus.groovy.ast.ASTNode,java.lang.String,int)>",
    "<org.codenarc.rule.formatting.BlockStartsWithBlankLineAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule$_applyTo_closure1: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.formatting.BracesForTryCatchFinallyAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectIncludedProperties_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.UnsafeArrayDeclarationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor$_visitMethodCallExpression_closure1: org.codehaus.groovy.ast.expr.MethodCallExpression getCall()>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor$_visitConstructorOrMethod_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.plugin.disablerules.LookupTable: java.util.Set disabledRuleNamesForLineNumber(java.lang.Integer)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule: java.lang.Object this$dist$get$3(java.lang.String)>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor$_visitCastExpression_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUnnecessarySetUpAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildMessageElement_closure7: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.LocaleSetDefaultRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter: java.lang.String getViolationLocationString(org.codenarc.rule.Violation,java.lang.String)>",
    "<org.codenarc.rule.design.BooleanMethodReturnsNullAstVisitor: boolean closureReturnsBoolean(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertyLockingRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitImports_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor$_visitMethodEx_closure2: org.codehaus.groovy.ast.MethodNode getNode()>",
    "<org.codenarc.rule.formatting.SpaceAfterForRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure4$_closure12: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.AbstractClassWithPublicConstructorAstVisitor$_visitClassEx_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.results.FileResults$_getNumberOfViolationsWithPriority_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.grails.GrailsDomainCantReferenceServiceAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.exceptions.ThrowExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure20: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.ruleset.JsonReaderRuleSet: void setRuleProperties(java.util.Map,org.codenarc.rule.Rule)>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin$_processViolationsForFile_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void handleNestedNode(org.codehaus.groovy.ast.ASTNode,groovy.lang.Closure)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildLogo_closure6: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.concurrency.SynchronizedOnBoxedPrimitiveRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildFileElement_closure5$_closure16$_closure17: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDuplicateMappingAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.report.XmlReportWriter$_buildViolationElement_closure6: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: java.lang.Boolean isSingleLineClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateListLiteralRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_getFirstValue_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.CoupledTestCaseAstVisitor: boolean isMethodCallOnSameClass(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule: java.util.List getViolations(org.codenarc.rule.AstVisitor,org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor: java.lang.Object this$dist$get$4(java.lang.String)>",
    "<org.codenarc.rule.convention.NoJavaUtilDateAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitClosureExpression_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter: groovy.lang.Closure buildSummaryByPackage(org.codenarc.results.Results)>",
    "<org.codenarc.rule.InlineViolationsParser: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.exceptions.ReturnNullFromCatchBlockAstVisitor: void visitCatchStatement(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.rule.NullReturnTracker: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildProjectElement_closure3: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.ant.CodeNarcTask$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.CompositeRuleSet: void addRule(org.codenarc.rule.Rule)>",
    "<org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_writeReport_closure1$_closure10: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule: void this$dist$set$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BracesForForLoopRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_applyTo_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner: org.codenarc.ruleset.RuleSet createInitialRuleSet()>",
    "<org.codenarc.rule.size.AbcMetricAstVisitor: org.gmetrics.metric.Metric createMetric()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.EmptyMethodInAbstractClassAstVisitor: boolean isAbstract(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitClassComplete_closure5: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.concurrency.StaticMatcherFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UseAssertEqualsInsteadOfAssertTrueRule: void <init>()>",
    "<org.codenarc.rule.concurrency.StaticSimpleDateFormatFieldAstVisitor: void addSimpleDateFormatViolation(org.codehaus.groovy.ast.FieldNode,java.lang.String)>",
    "<org.codenarc.rule.basic.HardcodedWindowsRootDirectoryAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ClassNameSameAsFilenameRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.naming.ObjectOverrideMisspelledMethodNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolations_closure3$_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasOneStaticFieldOfItself_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_buildRulesElement_closure9$_closure19$_closure20$_closure21: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule$_applyTo_closure2: java.util.List getViolations()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: boolean isIgnoredVariable(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.util.io.ClassPathResource: void <init>(java.lang.String)>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildLogo_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitSetUpCallsSuperAstVisitor$_visitMethod_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner$_applyPluginsProcessRules_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildCSS_closure2$_closure9: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.JsonReaderRuleSet$_loadRuleElements_closure1: java.lang.Object doCall(java.lang.String,java.util.Map)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_addInitializedField_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.exceptions.CatchNullPointerExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportParser: java.util.Map parseBaselineXmlReport(java.io.InputStream)>",
    "<org.codenarc.rule.naming.InterfaceNameAstVisitor: boolean shouldVisit(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.ObjectFinalizeAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.convention.PublicMethodsBeforeNonPublicMethodsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_collectAllPrivateMethods_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor$_checkMethods_closure1: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedVariableRule: java.util.List getAnonymousClasses(java.util.List)>",
    "<org.codenarc.rule.FieldReferenceAstVisitor$_visitMethodEx_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.convention.ParameterReassignmentRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.braces.ForStatementBracesRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter$_buildRulesElement_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.StaticSimpleDateFormatFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor$_visitForLoop_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor$_isEmpty_closure1$_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BlockStartsWithBlankLineAstVisitor: void addViolation(int)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasState_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.CloneWithoutCloneableAstVisitor: org.codehaus.groovy.ast.MethodNode cloneMethod(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.convention.ParameterReassignmentAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.source.AbstractSourceCode: boolean isValid()>",
    "<org.codenarc.rule.logging.SystemErrPrintAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.plugin.disablerules.DisableRulesInCommentsPlugin$_processViolationsForFile_closure1: org.codenarc.plugin.disablerules.LookupTable getLookupTable()>",
    "<org.codenarc.rule.basic.EmptySynchronizedStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.AbstractFinallyAstVisitor$_isStatementWithinFinally_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertTwoViolations_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ClassNameSameAsSuperclassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.AbstractReportWriter: java.lang.String getDescriptionProperty(org.codenarc.rule.Rule)>",
    "<org.codenarc.rule.size.MethodCountAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.logging.LoggerForDifferentClassAstVisitor: boolean isCapitalized(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryReturnKeywordRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportUtil: java.lang.String removeIllegalCharacters(java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTransientModifierRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ModifiersUtil: java.util.List parseModifiersList(java.lang.String)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure19: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: void visitDeclarationExpression(org.codehaus.groovy.ast.expr.DeclarationExpression)>",
    "<org.codenarc.rule.AbstractRuleTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_addInitializedField_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.ImportFromSamePackageRule$_applyTo_closure1: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.ant.ReportOption: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.MissingBlankLineAfterImportsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter$_writeSummary_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.generic.IllegalSubclassAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.OptionalMethodParameterRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToPlusMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.DuplicateSetValueAstVisitor: boolean isSetLiteral(org.codehaus.groovy.ast.expr.CastExpression)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.logging.LogUtil: boolean isMatchingLoggerDefinition(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.report.AbstractReportWriter: void writeReport(org.codenarc.AnalysisContext,org.codenarc.results.Results)>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.AbstractClassNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.FinalClassWithProtectedMemberAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildScript_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequired: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.ConsecutiveStringConcatenationAstVisitor: boolean areJoinableConstants(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.grails.GrailsServletContextReferenceAstVisitor: void visitVariableExpression(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildProjectElement_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.CodeNarc: void setDefaultsIfNecessary()>",
    "<org.codenarc.rule.concurrency.SynchronizedOnGetClassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInFieldDeclarationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsBlankLineAfterOpeningBrace_closure4: java.lang.Integer getClassStartLine()>",
    "<org.codenarc.rule.AbstractConstructorCallAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17: org.codenarc.results.Results getResults()>",
    "<org.codenarc.ruleset.GroovyDslRuleSet: void <init>(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryReturnKeywordAstVisitor: org.codehaus.groovy.ast.stmt.Statement getLastStatement(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildReportElement_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_getAnonymousClasses_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.PrintStackTraceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCatchBlockAstVisitor: void visitTryCatchFinally(org.codehaus.groovy.ast.stmt.TryCatchStatement)>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor: void visitListExpression(org.codehaus.groovy.ast.expr.ListExpression)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitUtil: boolean isTearDownMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.XmlReportWriter: groovy.lang.Closure buildMessageElement(org.codenarc.rule.Violation)>",
    "<org.codenarc.rule.security.NonFinalSubclassOfSensitiveInterfaceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer$_processDirectory_closure1: org.codenarc.ruleset.RuleSet getRuleSet()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDotClassAstVisitor: void visitPropertyExpression(org.codehaus.groovy.ast.expr.PropertyExpression)>",
    "<org.codenarc.rule.basic.EmptyIfStatementAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitConstructorOrMethod_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.util.ModifiersUtil$_matchesAnyModifiers_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonRule: void processPackage(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.convention.IfStatementCouldBeTernaryAstVisitor: boolean hasNoElseBlock(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_writeReport_closure1$_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.SynchronizedReadObjectMethodAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.CouldBeSwitchStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BlockEndsWithBlankLineRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateNumberLiteralRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAfterSwitchAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.generic.IllegalClassMemberRule: boolean isReady()>",
    "<org.codenarc.rule.grails.GrailsMassAssignmentRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.FactoryMethodNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryConstructorRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitTearDownCallsSuperAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildViolationElement_closure6: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitCaseStatement_closure6: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.AbstractClassWithPublicConstructorRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ParameterCountAstVisitor: java.lang.String getName(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_getAnonymousClasses_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12$_closure15$_closure16: org.codenarc.results.Results getResults()>",
    "<org.codenarc.results.DirectoryResults$_removeViolation_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_isAnnotatedWithOverride_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_setRuleProperties_closure4: org.codenarc.rule.Rule getRule()>",
    "<org.codenarc.rule.design.SimpleDateFormatMissingLocaleAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21$_closure22: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsPublicControllerMethodAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12: org.codenarc.results.Results getResults()>",
    "<org.codenarc.util.ImportUtil$_sourceLineAndNumberForStarImport_closure2: org.codehaus.groovy.ast.ImportNode getImportNode()>",
    "<org.codenarc.rule.formatting.BracesForClassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure18: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ant.CodeNarcTask$_classLoaderForPaths_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.ruleset.TopLevelDelegate$_rule_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: boolean nameExcluded(java.lang.String)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleElements_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildReportElement_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.TrailingWhitespaceRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.groovyism.ConstantExpressionExtractor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter: groovy.lang.Closure buildSummaryByPackageRow(org.codenarc.results.Results,boolean)>",
    "<org.codenarc.rule.design.NestedForLoopRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor$_argumentsContainThis_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.concurrency.SystemRunFinalizersOnExitAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoDefAstVisitor$_visitDeclarationExpression_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30$_closure32: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.BooleanMethodReturnsNullAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.AssignmentToStaticFieldFromInstanceMethodAstVisitor: void visitMethodComplete(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.JsonReportWriter$_buildRulesElement_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule$_applyTo_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllSummaryByPackageRowsRecursively_closure3: org.codenarc.results.Results getResults()>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_findRule_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: void visitDeclarationExpression(org.codehaus.groovy.ast.expr.DeclarationExpression)>",
    "<org.codenarc.test.AbstractTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ParameterCountAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.junit.JUnitUtil: boolean isAssertCallWithConstantValue(org.codehaus.groovy.ast.expr.MethodCallExpression,java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor: java.lang.String getParameterDefinitionAsString(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.exceptions.CatchThrowableRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor$_closureReturnsCollection_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor$_checkMethods_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor$_visitMethodCallExpression_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.exceptions.CatchRuntimeExceptionRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.basic.DuplicateSetValueAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildReportElement_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor$_visitClassEx_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.imports.DuplicateImportRule$_applyTo_closure1: java.util.List getViolations()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySubstringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor: void handleClosure(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.util.ModifiersUtil: boolean matchesModifiers(java.lang.Integer,java.lang.Integer)>",
    "<org.codenarc.source.AbstractSourceCode$_removeGrabTransformation_closure1$_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.exceptions.CatchRuntimeExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_uniqueAndSortedDeclaringClassNames_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: void checkStatementExpression(org.codehaus.groovy.ast.MethodNode,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.junit.JUnitAssertAlwaysSucceedsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase: java.util.List manuallyApplyRule(java.lang.String)>",
    "<org.codenarc.CodeNarcRunner: void registerPluginForClassName(java.lang.String)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckAstVisitor: boolean isSuperReference(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_visitConstructorOrMethod_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.generic.IllegalSubclassAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.convention.NoTabCharacterRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.naming.PropertyNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleregistry.PropertiesFileRuleRegistry: java.lang.Class getRuleClass(java.lang.String)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$ViolationAndPath: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.logging.MultipleLoggersRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementAstVisitor: java.lang.Object collectIfsAndElses(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.jdbc.DirectConnectionManagementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ant.CodeNarcTask$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.util.ImportUtil$_sourceLineAndNumberForStarImport_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.JUnitAssertAlwaysSucceedsAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.naming.MethodNameAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unused.ReferenceCollector: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.util.CodeNarcVersion: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfViolationsWithPriority_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintAstVisitor$_visitMethodCallExpression_closure1: org.codehaus.groovy.ast.expr.MethodCallExpression getCall()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationAstVisitor$_visitConstructorCallExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure25: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule: java.lang.Object this$dist$invoke$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitBlockStatement_closure2: org.codehaus.groovy.ast.stmt.BlockStatement getBlock()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryOverridingMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.RuleSetBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryTearDownRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.Violation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_writeReport_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitWhileLoop_closure4: org.codehaus.groovy.ast.stmt.WhileStatement getWhileStatement()>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor$_visitMethodCallExpression_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToPutAtMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner$_initializePlugins_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.dry.DryUtil: boolean areTheSameConstantOrLiteralMapEntryExpression(org.codehaus.groovy.ast.expr.MapEntryExpression,org.codehaus.groovy.ast.expr.MapEntryExpression)>",
    "<org.codenarc.util.io.UrlResource: void <init>(java.lang.String)>",
    "<org.codenarc.rule.grails.GrailsPublicControllerMethodAstVisitor: boolean isIgnoredMethodName(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.imports.UnnecessaryGroovyImportRule$_applyTo_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: java.lang.String extractVariableOrFieldName(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.formatting.BracesForIfElseAstVisitor: void visitElseClosingBrace(org.codenarc.rule.formatting.BracesForIfElseRule,org.codehaus.groovy.ast.stmt.IfStatement,java.lang.String)>",
    "<org.codenarc.rule.dry.DuplicateMapLiteralAstVisitor$_visitMapExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.VolatileArrayFieldAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_containsKey_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor$_visitMethodCallExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_flexibleCheckForCorrectColumn_closure11: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.DeadCodeAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure7: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.BitwiseOperatorInConditionalAstVisitor: void addViolationBitwiseConditional(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor$_addViolationsForInstanceFields_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitConstructorOrMethod_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.ClassConstraintsAndMapping: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.AbstractSingleSpaceAfterKeywordAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.OptionalFieldAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_writeReport_closure1$_closure10: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.AssignCollectionUniqueRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.RequiredStringRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.basic.DuplicateCaseStatementAstVisitor$_visitSwitch_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportUtil: groovy.lang.Closure cdata(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckBeforeInstanceOfAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.unused.AbstractLastStatementInBlockAstVisitor: boolean isLastStatementInBlock(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_collectAllPrivateMethods_closure2$_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.plugin.disablerules.LookupTable$_buildLookupTable_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BracesForTryCatchFinallyAstVisitor$_visitCatch_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.PrintlnAstVisitor$_visitClassEx_closure2: java.lang.Object doCall(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.concurrency.StaticDateFormatFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.AbstractImportRule$_findLineNumberOfFirstClassDeclaration_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainHasToStringAstVisitor$_visitClassComplete_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility: void <init>(java.lang.String,int,java.lang.String)>",
    "<org.codenarc.ant.CodeNarcTask: java.net.URLClassLoader classLoaderForPaths(java.lang.String[],java.lang.ClassLoader)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDoubleInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitForLoop_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter: void <init>()>",
    "<org.codenarc.rule.basic.AssertWithinFinallyBlockAstVisitor: void visitAssertStatement(org.codehaus.groovy.ast.stmt.AssertStatement)>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitClosureExpression_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processImports_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.SystemRunFinalizersOnExitRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BlockEndsWithBlankLineAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.rule.logging.MultipleLoggersAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.CodeNarc: org.codenarc.analyzer.SourceAnalyzer createSourceAnalyzer()>",
    "<org.codenarc.util.io.ClassPathResource: java.io.InputStream getInputStream(java.lang.String)>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure2$_closure3: java.util.List getViolations()>",
    "<org.codenarc.report.XmlReportUtil$_cdata_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildFileElement_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.OptionalFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassEx_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor: void visitConstantExpression(org.codehaus.groovy.ast.expr.ConstantExpression)>",
    "<org.codenarc.rule.formatting.LineLengthRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor$_isUsedInAnyAnnotationOnCurrentAnnotatedNode_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.logging.LoggerForDifferentClassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToLeftShiftMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsPublicControllerMethodRule: void <init>()>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_applyTo_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBigIntegerInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateRuleIndexPage: void <clinit>()>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionAstVisitor$_hasJUnit4Annotation_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ParameterCountRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.UseOfNotifyMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.AbstractSourceCode$_getLineNumberForCharacterIndex_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.ImplicitReturnStatementAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.DeadCodeRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildProjectElement_closure3$_closure9$_closure10: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.AbstractClassWithoutAbstractMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27$_closure29: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.BooleanMethodReturnsNullRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitPublicFieldRule: void <init>()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitClosureExpression_closure2: org.codehaus.groovy.ast.expr.ClosureExpression getExpression()>",
    "<org.codenarc.report.XmlReportWriter$_buildProjectElement_closure3$_closure11: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_containsKey_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.OptionalMethodParameterAstVisitor$_processParameters_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.CatchExceptionRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.dry.DuplicateListLiteralAstVisitor: void <init>()>",
    "<org.codenarc.rule.basic.BrokenOddnessCheckAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.basic.EqualsAndHashCodeAstVisitor$_visitClassEx_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryModOneAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.SourceCodeUtil: java.util.List nodeSourceLines(org.codenarc.source.SourceCode,org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.report.InlineXmlReportWriter$_buildViolationElement_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.StaticFieldsBeforeInstanceFieldsAstVisitor$_visitClassComplete_closure1: java.lang.Boolean getHasDeclaredInstanceField()>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: java.lang.String getPenultimateLine(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllSummaryByPackageRowsRecursively_closure3$_closure13: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure5: org.codenarc.results.FileResults getResults()>",
    "<org.codenarc.rule.basic.DuplicateCaseStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase: void removeSuppressedViolations(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleElements_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.ExceptionNotThrownRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor$_closureReturnsCollection_closure2: java.lang.Boolean getReturnsArray()>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_configure_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.exceptions.ConfusingClassNamedExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationAstVisitor$_visitConstructorCallExpression_closure1: org.codehaus.groovy.ast.expr.Expression getArgument()>",
    "<org.codenarc.rule.basic.MultipleUnaryOperatorsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.JavadocEmptyFirstLineRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.exceptions.CatchArrayIndexOutOfBoundsExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.dry.DuplicateStringLiteralRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.braces.ElseBlockBracesAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.ruleset.CompositeRuleSet: void addRuleSet(org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitBlockStatement_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.WildcardPattern: boolean matches(java.lang.String)>",
    "<org.codenarc.results.FileResults: java.lang.String toString()>",
    "<org.codenarc.rule.security.FileCreateTempFileAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitCatchStatement_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceAstVisitor: void addOpeningBraceViolation(org.codehaus.groovy.ast.ASTNode,java.lang.String)>",
    "<org.codenarc.rule.junit.JUnitUtil$_isAssertCallWithConstantValue_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor: void addMethodViolation(org.codehaus.groovy.ast.MethodNode,org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility)>",
    "<org.codenarc.rule.formatting.BracesForForLoopAstVisitor$_findLastLineOfForExpressions_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDotClassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsNotBlankLineAfterOpeningBrace_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.RuleSetDelegate: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ReturnFromFinallyBlockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBooleanExpressionAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionAstVisitor: boolean isJUnit3MatchingMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.TextReportWriter: void writePackageViolations(java.io.Writer,org.codenarc.results.Results)>",
    "<org.codenarc.ruleregistry.PropertiesFileRuleRegistry: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceRule: void <init>()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildScript_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.results.FileResults$_getNumberOfViolationsWithPriority_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: void visitSwitch(org.codehaus.groovy.ast.stmt.SwitchStatement)>",
    "<org.codenarc.rule.imports.DuplicateImportRule: void checkImport(java.lang.String,int,java.util.Set,java.util.List)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildBodySection_closure2$_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor: void visitClassComplete(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.basic.ExplicitGarbageCollectionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectIncludedProperties_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer$_processDirectory_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationRule: void <init>()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10$_closure11: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.FinalClassWithProtectedMemberAstVisitor: boolean isProtected(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: int nestingLevelForClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.junit.UseAssertTrueInsteadOfAssertEqualsAstVisitor: void visitAssertStatement(org.codehaus.groovy.ast.stmt.AssertStatement)>",
    "<org.codenarc.rule.grails.GrailsStatelessServiceRule: void <init>()>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolations_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor$_visitBlockStatement_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.security.SystemExitAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.design.PublicInstanceFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.FinalClassWithProtectedMemberAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults$_getTotalNumberOfFiles_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter: java.util.List getFileResults(org.codenarc.results.Results)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure7$_closure8: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildHeaderSection_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.PathUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintAstVisitor$_visitMethodCallExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.HashtableIsObsoleteRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.dry.DuplicateMapLiteralAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportParser: java.util.Map parseBaselineXmlReport(java.lang.String)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer: void <init>()>",
    "<org.codenarc.rule.dry.DuplicateNumberLiteralRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.FieldReferenceAstVisitor$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsRule: void setGormStaticMethodsNames(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.ConsecutiveLiteralAppendsAstVisitor: boolean isChainedAppend(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.ExplicitStackInstantiationRule$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.formatting.SpaceBeforeClosingBraceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule$1: void <init>(org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule,java.lang.Object)>",
    "<org.codenarc.rule.security.InsecureRandomAstVisitor: boolean isJavaLangMathCall(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.util.MultilineCommentChecker: void processLine(java.lang.String)>",
    "<org.codenarc.report.XmlReportWriter$_buildViolationElement_closure6$_closure18: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.formatting.SpaceAroundClosureArrowAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.source.AbstractSourceCode$_removeGrabTransformation_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer$_processDirectory_closure1: java.lang.String getDir()>",
    "<org.codenarc.util.ImportUtil: java.util.Map sourceLineAndNumberForImport(org.codenarc.source.SourceCode,org.codehaus.groovy.ast.ImportNode)>",
    "<org.codenarc.report.XmlReportWriter$_buildFileElement_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildScript_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter: groovy.lang.Closure buildFileElement(org.codenarc.results.Results)>",
    "<org.codenarc.rule.design.CloneableWithoutCloneAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCastRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitTearDownCallsSuperRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor: boolean isAnonymousInnerClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.FieldReferenceAstVisitor: void visitPropertyExpression(org.codehaus.groovy.ast.expr.PropertyExpression)>",
    "<org.codenarc.rule.basic.ReturnFromFinallyBlockAstVisitor: void visitReturnStatement(org.codehaus.groovy.ast.stmt.ReturnStatement)>",
    "<org.codenarc.report.XmlReportWriter$_buildFileElement_closure5: org.codenarc.results.FileResults getResults()>",
    "<org.codenarc.rule.exceptions.MissingNewInThrowStatementAstVisitor: boolean isFirstLetterUpperCase(java.lang.String)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.braces.ElseBlockBracesRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer: void measureRuleProcessingTime(org.codenarc.rule.Rule,groovy.lang.Closure)>",
    "<org.codenarc.source.AbstractSourceCode: java.util.Map getMethodCallExpressions()>",
    "<org.codenarc.rule.formatting.SpaceAroundMapEntryColonAstVisitor: void visitMapEntryExpression(org.codehaus.groovy.ast.expr.MapEntryExpression)>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertNoViolations(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryConstructorAstVisitor: void analyzeConstructor(org.codehaus.groovy.ast.ConstructorNode)>",
    "<org.codenarc.rule.naming.FieldNameRule: void validate()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14$_closure15: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.UseAssertNullInsteadOfAssertEqualsAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitClassEx_closure1: org.codehaus.groovy.ast.ClassNode getNode()>",
    "<org.codenarc.report.XmlReportWriter$_buildProjectElement_closure3$_closure11$_closure12: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.ReturnNullFromCatchBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor$_processParameters_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void addClosureFields(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.source.AbstractSourceCode: void <clinit>()>",
    "<org.codenarc.rule.convention.LongLiteralWithLowerCaseLAstVisitor: void visitConstantExpression(org.codehaus.groovy.ast.expr.ConstantExpression)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.results.FileResults: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ConstantIfExpressionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor$_visitMethodEx_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.imports.ImportFromSamePackageRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ModifiersUtil$_matchesAnyModifiers_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ConfusingTernaryAstVisitor: void addViolationForBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression,org.codehaus.groovy.ast.expr.TernaryExpression)>",
    "<org.codenarc.CodeNarcRunner$_registerPluginsForClassNames_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBigDecimalInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.VolatileLongOrDoubleFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor: void collectMapKeys(org.codehaus.groovy.ast.expr.MethodCallExpression,java.util.Map)>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterAstVisitor: java.util.List getViolations()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.dry.DuplicateMapLiteralRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: java.lang.String createMessage(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.basic.EmptyIfStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.comments.ClassJavadocRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitClosureExpression_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryOverridingMethodAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.dry.DuplicateMapLiteralRule: void <init>()>",
    "<org.codenarc.report.JsonReportWriter$_buildPackageElements_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.BaselineViolation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.InvertedIfElseRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToPowerMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure4$_closure11: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.VariableUsageFinder: void visitVariableExpression(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsNotBlankLineAfterOpeningBrace_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.size.CrapMetricRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.util.WildcardPattern$_matches_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBigDecimalInstantiationAstVisitor: boolean isTypeSuffixNecessary(java.lang.Object)>",
    "<org.codenarc.util.ModifiersUtil: boolean matchesAnyModifiers(java.lang.Integer,java.util.List)>",
    "<org.codenarc.rule.groovyism.ConstantExpressionExtractor$_extractFromExpression_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer: org.codenarc.rule.Rule findRule(org.codenarc.ruleset.RuleSet,java.lang.String)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_applyProperties_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ClassNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12$_closure15$_closure16: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.AbstractReportWriter$_getSortedRules_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.OptionalCollectionReturnTypeAstVisitor: void <clinit>()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildBodySection_closure2: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor: void findViolations(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure5$_closure13: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundMapEntryColonAstVisitor: java.lang.String violationMessage(java.lang.String,java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.basic.DoubleNegativeRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_findRule_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.MathRandomTracker: void callBackForMathRandomReturns(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.grails.ClassConstraintsAndMapping$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.plugin.disablerules.DisableRulesInCommentsPlugin$_processViolationsForFile_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.AbstractReportWriter$_writeReportToFile_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean hasNoElseBlock(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_addInitializedField_closure4: java.lang.String getVarName()>",
    "<org.codenarc.rule.size.CrapMetricRule: boolean doesCoberturaXmlFileExist()>",
    "<org.codenarc.rule.basic.ConstantTernaryExpressionAstVisitor: void visitTernaryExpression(org.codehaus.groovy.ast.expr.TernaryExpression)>",
    "<org.codenarc.rule.concurrency.SynchronizedReadObjectMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.MovedRules: org.codenarc.ruleset.MovedRules$MovedToRuleSet movedTo(java.lang.String)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_flexibleCheckForCorrectColumn_closure10: java.lang.Integer getChainedMethodDotColumn()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasSingletonAnnotation_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.InstanceofAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.FieldReferenceAstVisitor$_visitMethodEx_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.util.ImportUtil$_sortImportsByLineNumber_closure4: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.plugin.FileViolations: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.HardcodedWindowsRootDirectoryAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.AbstractRuleTestCase: java.lang.String removeInlineViolations(java.lang.String)>",
    "<org.codenarc.rule.formatting.BracesForMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EqualsOverloadedAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.results.DirectoryResults: int getNumberOfFilesWithViolations(int,boolean)>",
    "<org.codenarc.rule.groovyism.ConstantExpressionExtractor: java.util.List extractFromExpression(org.codehaus.groovy.ast.expr.ListExpression)>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure6: java.io.Writer getWriter()>",
    "<org.codenarc.rule.basic.EqualsAndHashCodeAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.DoubleCheckedLockingAstVisitor: org.codehaus.groovy.ast.stmt.SynchronizedStatement getSynchronizedStatement(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitBlockStatement_closure8: org.codehaus.groovy.ast.stmt.BlockStatement getBlock()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertyLockingAstVisitor: java.lang.String getGuardName(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.junit.JUnitUtil: boolean isSetUpMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.grails.GrailsDuplicateMappingRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.CommentsUtil: void <clinit>()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.CoupledTestCaseRule: void <init>()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySafeNavigationOperatorAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_visitClassComplete_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_buildFileElement_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.ConsecutiveStringConcatenationAstVisitor: boolean isNumberLiteral(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.junit.JUnitUtil$_isAssertCallWithConstantValue_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.util.WildcardPattern$_convertStringWithWildcardsToRegex_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ComparisonOfTwoConstantsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: void checkNonEmptyLineNumber(int,int)>",
    "<org.codenarc.rule.groovyism.ConstantExpressionExtractor$_extractFrom_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure5$_closure13: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInFieldDeclarationAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertyLockingAstVisitor: boolean isReadLocked(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24: java.lang.Object call(org.codenarc.report.SortableHtmlReportWriter$ViolationAndPath)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertyLockingAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolation_closure4: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_visitDeclarationExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: void visitParameters(org.codehaus.groovy.ast.Parameter[])>",
    "<org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.ClassReferenceAstVisitor: void checkType(java.lang.String,org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.convention.InvertedConditionAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.report.JsonReportWriter$_buildPackageElements_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.size.CrapMetricRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameRule: void <init>()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_afterBlock_closure2: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolations_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer: void initializeWildcardPatterns()>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor$_checkMethods_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.GroovyVersion: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter: void initializeDefaultResourceBundle()>",
    "<org.codenarc.rule.imports.ImportFromSamePackageRule: java.lang.String getClassNameNoPackage(java.lang.String)>",
    "<org.codenarc.rule.junit.JUnitLostTestAstVisitor$_visitClass_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor$_visitMethodEx_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.ruleset.MovedRules$Renamed: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.basic.DuplicateSetValueAstVisitor$_visitCastExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter: groovy.lang.Closure buildAllSummaryByPackageRowsRecursively(org.codenarc.results.Results)>",
    "<org.codenarc.report.SortableHtmlReportWriter: java.lang.Object this$dist$invoke$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.design.InstanceofAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.generic.RequiredStringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ImportUtil: java.util.Map sourceLineAndNumberForStarImport(org.codenarc.source.SourceCode,org.codehaus.groovy.ast.ImportNode)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_addViolationOnMismatch_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.CoupledTestCaseRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.FieldTypeRequiredRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor: void <init>(org.codenarc.rule.AbstractAstVisitor)>",
    "<org.codenarc.report.HtmlReportWriter$_buildBodySection_closure1: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.exceptions.ExceptionNotThrownAstVisitor: void visitCatchStatement(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_printRuleProcessingTimes_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryToStringAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.security.SystemExitAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BlockEndsWithBlankLineAstVisitor: java.lang.String lastButOneCodeLine(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassEx_closure2: java.lang.Object doCall(java.util.Collection)>",
    "<org.codenarc.rule.serialization.EnumCustomSerializationIgnoredAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionAstVisitor$_hasJUnit4Annotation_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure18: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter: groovy.lang.Closure buildPackageSection(org.codenarc.results.Results)>",
    "<org.codenarc.ant.Report: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter$_writePackageViolations_closure2: java.io.Writer getWriter()>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitConstructorOrMethod_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.source.AbstractSourceCode$_removeGrabTransformation_closure1$_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.braces.ForStatementBracesAstVisitor: void visitForLoop(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.rule.basic.DuplicateCaseStatementAstVisitor$_visitSwitch_closure2: java.lang.Object doCall(java.lang.Object,org.codehaus.groovy.ast.stmt.CaseStatement)>",
    "<org.codenarc.rule.formatting.BracesForTryCatchFinallyAstVisitor: void visitFinally(org.codenarc.rule.formatting.BracesForTryCatchFinallyRule,org.codehaus.groovy.ast.stmt.TryCatchStatement)>",
    "<org.codenarc.rule.junit.JUnitUtil: boolean isLiteralWithValueThatEvaluatesTo(org.codehaus.groovy.ast.expr.Expression,boolean)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToAndMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_generateAllPossibleParameterSignatures_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.BracesForClassRule$_applyTo_closure1: java.lang.Object doCall(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildBodySection_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UnnecessaryFailAstVisitor$_visitCatchStatement_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: void addViolation(org.codehaus.groovy.ast.ASTNode,java.lang.String,int)>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.UseAssertTrueInsteadOfNegationRule: void <init>()>",
    "<org.codenarc.rule.design.BooleanReturnTracker: void checkReturnValues(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30$_closure32: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.EmptyMethodAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.util.ConsecutiveUtils: boolean isJoinableType(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor: java.lang.Object this$dist$invoke$4(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_getMethodCallsAndMapKeys_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: void addViolation(java.lang.String,int)>",
    "<org.codenarc.report.XmlReportWriter$_buildRulesElement_closure9$_closure19$_closure20$_closure21: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitConstructorOrMethod_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor$_processParameters_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBooleanInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitSetUpCallsSuperRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceBeforeClosingBraceAstVisitor: void addOpeningBraceViolation(org.codehaus.groovy.ast.ASTNode,java.lang.String)>",
    "<org.codenarc.rule.design.OptionalCollectionReturnTypeRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule$_applyTo_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor$_addViolationsForInstanceFields_closure3: java.lang.Object doCall(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor$_visitCatchStatement_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.EmptyFinallyBlockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner: org.codenarc.ruleset.RuleSet createInitialRuleSetFromFiles()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.design.BooleanMethodReturnsNullAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor$_visitMethodCallExpression_closure1: org.codehaus.groovy.ast.expr.MethodCallExpression getCall()>",
    "<org.codenarc.ruleset.GroovyDslRuleSet: void evaluateDsl(groovy.lang.GroovyShell)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_getAnonymousClasses_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.SynchronizedOnBoxedPrimitiveAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterClosingBraceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults$_getTotalNumberOfFiles_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule$1: void <init>(org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule,java.lang.Object)>",
    "<org.codenarc.rule.basic.BooleanGetBooleanRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.source.AbstractSourceCode$_removeGrabTransformation_closure1$_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildBodySection_closure2$_closure8: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.BracesForTryCatchFinallyRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner$_writeReports_closure8: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.basic.BooleanGetBooleanAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure29: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.generic.IllegalClassReferenceRule: boolean isReady()>",
    "<org.codenarc.rule.convention.ParameterReassignmentAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.report.AbstractReportWriter: java.util.List getSortedRules(org.codenarc.AnalysisContext)>",
    "<org.codenarc.util.ImportUtil: java.util.Map sourceLineAndNumberForNonStarImport(org.codenarc.source.SourceCode,org.codehaus.groovy.ast.ImportNode)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure11: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_writeReport_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.SystemOutPrintAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.InsecureRandomAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: void checkIfThereIsBlankLineBeforeClosingBrace(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitImports_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCastAstVisitor: void visitCastExpression(org.codehaus.groovy.ast.expr.CastExpression)>",
    "<org.codenarc.rule.grails.GrailsDuplicateMappingAstVisitor: void <init>()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor$_visitArgumentlistExpression_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_buildViolationElement_closure6$_closure18: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule: java.lang.Object this$dist$invoke$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23: org.codenarc.results.Results getResults()>",
    "<org.codenarc.CodeNarcRunner: void initializePluginsFromSystemProperty()>",
    "<org.codenarc.rule.exceptions.SwallowThreadDeathAstVisitor: void <init>()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27$_closure29: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.TextReportWriter$_writePackageViolations_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDoubleInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.RuleSetBuilder: org.codenarc.ruleset.RuleSet getRuleSet()>",
    "<org.codenarc.rule.concurrency.UseOfNotifyMethodAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.BracesForTryCatchFinallyAstVisitor$_visitCatch_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceAfterClosingBraceAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitCaseStatement_closure6: org.codehaus.groovy.ast.stmt.CaseStatement getStatement()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasSingletonAnnotation_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.util.ModifiersUtil$_parseModifiersList_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.CouldBeSwitchStatementAstVisitor: java.lang.Boolean inSupportedOperation(org.codehaus.groovy.syntax.Token)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGetterAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.junit.ChainedTestAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_afterBlock_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitSynchronizedStatement_closure7: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.ListRuleSet$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.plugin.disablerules.DisableRulesInCommentsPlugin: void processViolationsForFile(org.codenarc.plugin.FileViolations)>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_applyTo_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.NestedSynchronizationAstVisitor: void visitSynchronizedStatement(org.codehaus.groovy.ast.stmt.SynchronizedStatement)>",
    "<org.codenarc.rule.imports.ImportFromSamePackageRule: boolean hasAlias(org.codehaus.groovy.ast.ImportNode)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_printRuleProcessingTimes_closure5: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.concurrency.SynchronizedOnStringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundClosureArrowRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.AssignCollectionUniqueAstVisitor: boolean isFalseConstant(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.CollectAllIsDeprecatedRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_getViolations_closure1: org.codenarc.rule.AstVisitor getVisitor()>",
    "<org.codenarc.rule.naming.InterfaceNameSameAsSuperInterfaceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonAstVisitor$_removeAnyViolationsForSameLine_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.MovedRules$Renamed: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor: void visitMethodComplete(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.source.AbstractSourceCode: java.util.List getLines()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor: void <init>(java.util.Set,java.util.Set)>",
    "<org.codenarc.report.XmlReportWriter: groovy.lang.Closure buildProjectElement(org.codenarc.AnalysisContext)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonRule$_processImports_closure1: java.util.List getViolations()>",
    "<org.codenarc.report.InlineXmlReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter$_writeSummary_closure1: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor$_visitMethodCallExpression_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.JavadocEmptyReturnTagRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ComparisonWithSelfRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterAstVisitor: void setSourceCode(org.codenarc.source.SourceCode)>",
    "<org.codenarc.report.XmlReportWriter$_buildViolationElement_closure6$_closure18: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.SynchronizedOnThisRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalClassMemberAstVisitor: void visitProperty(org.codehaus.groovy.ast.PropertyNode)>",
    "<org.codenarc.report.InlineXmlReportWriter$_buildViolationElement_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.FieldReferenceAstVisitor: void <init>(java.util.Collection)>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor$_isEmpty_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor: void visitImports(org.codehaus.groovy.ast.ModuleNode)>",
    "<org.codenarc.util.ImportUtil: java.util.Map sourceLineAndNumberForImport(org.codenarc.source.SourceCode,java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor$_visitForLoop_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule: java.util.List addOrderingViolations(org.codenarc.source.SourceCode,java.lang.String,java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.naming.InterfaceNameSameAsSuperInterfaceAstVisitor$_visitClassEx_closure1: org.codehaus.groovy.ast.ClassNode getNode()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassComplete_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor: void visitVariableExpression(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.ruleset.GroovyDslRuleSet$_evaluateDsl_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTernaryExpressionAstVisitor: void visitTernaryExpression(org.codehaus.groovy.ast.expr.TernaryExpression)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure29: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.jdbc.DirectConnectionManagementAstVisitor: boolean isJavaSQLDriverManagerCall(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ConstantIfExpressionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainWithServiceReferenceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.FieldNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionRule: void <init>()>",
    "<org.codenarc.rule.groovyism.UseCollectManyAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.ruleset.RuleSetUtil$_loadRuleScriptFile_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckBeforeInstanceOfRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin: void <init>(org.codenarc.util.io.Resource)>",
    "<org.codenarc.rule.formatting.SpaceAfterCatchRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor$_visitMethodCallExpression_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.size.AbcMetricAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.FieldTypeRequiredAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.JavadocMissingParamDescriptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToPowerMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12$_closure15: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateRuleSetAllRulesByCategory: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults: void <init>()>",
    "<org.codenarc.source.AbstractSourceCode: void init()>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor$_argumentsContainThis_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.CompositeRuleSet: void <init>()>",
    "<org.codenarc.rule.basic.ConstantAssertExpressionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ObjectOverrideMisspelledMethodNameAstVisitor: void checkForMethodNameWithIncorrectCase(org.codehaus.groovy.ast.MethodNode,java.lang.String,java.util.List)>",
    "<org.codenarc.rule.junit.JUnitPublicFieldAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildBodySection_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor: boolean isMainMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.imports.UnusedImportRule: java.lang.String findReference(org.codenarc.source.SourceCode,java.lang.String)>",
    "<org.codenarc.rule.exceptions.ExceptionNotThrownAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryFloatInstantiationAstVisitor: void <init>()>",
    "<org.codenarc.source.CustomCompilerPhaseSourceDecorator: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ConstantAssertExpressionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBooleanExpressionAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.serialization.SerialVersionUIDRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.CouldBeElvisAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassComplete_closure6: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.imports.UnusedImportRule$_findReference_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.dry.DuplicateListLiteralAstVisitor$_visitListExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.UnsafeArrayDeclarationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineViolation: boolean equals(java.lang.Object)>",
    "<org.codenarc.analyzer.StringSourceAnalyzer: org.codenarc.results.Results analyze(org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.rule.unnecessary.ConsecutiveStringConcatenationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor$_visitStaticMethodCallExpression_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.TextReportWriter$_writePackageViolations_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor$_visitDeclarationExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryStringInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitListExpression_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainHasToStringAstVisitor: void visitClassComplete(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.XmlReportWriter$_buildFileElement_closure5$_closure16$_closure17: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: java.lang.Boolean isSingleLineClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.concurrency.ThreadLocalNotStaticFinalAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.grails.ClassConstraintsAndMapping$_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitTestMethodWithoutAssertAstVisitor: boolean checksException(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.basic.DuplicateCaseStatementAstVisitor$_visitSwitch_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildHeaderSection_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.NestedSynchronizationAstVisitor$_visitClosureExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ParameterNameAstVisitor$_processParameters_closure1: java.lang.String getMethodName()>",
    "<org.codenarc.rule.generic.IllegalRegexRule: boolean isReady()>",
    "<org.codenarc.rule.generic.IllegalClassMemberAstVisitor: boolean matchesIgnoreMethodNames(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitWhileLoop_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void visitCaseStatement(org.codehaus.groovy.ast.stmt.CaseStatement)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitForLoop_closure5: org.codehaus.groovy.ast.stmt.ForStatement getForStatement()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasState_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.AbstractFinallyAstVisitor$_isStatementWithinFinally_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.naming.FactoryMethodNameAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.exceptions.MissingNewInThrowStatementAstVisitor: void visitThrowStatement(org.codehaus.groovy.ast.stmt.ThrowStatement)>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolation_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryFinalOnPrivateMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ClosureAsLastMethodParameterAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryToStringAstVisitor: boolean isToStringMethodCall(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTernaryExpressionAstVisitor: boolean areTrueAndFalse(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.basic.ClassForNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4$_closure13$_closure15: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.GroovyDslRuleSet$_createGroovyShell_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BracesForClassRule$_applyTo_closure1: java.util.List getViolations()>",
    "<org.codenarc.rule.generic.IllegalSubclassRule: boolean isReady()>",
    "<org.codenarc.rule.InlineViolationsParser$ParseResult: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure4$_closure11: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.SystemRunFinalizersOnExitAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_collectAllPrivateFields_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: boolean isNotAnIgnoredOverrideMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCatchBlockAstVisitor$_visitTryCatchFinally_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.util.WildcardPattern: void <init>(java.lang.String,boolean)>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor: boolean isNamedArgumentsListContainingThis(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processStaticImports_closure2: java.util.List getViolations()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToMethodAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.ruleset.RuleSetDelegate$_methodMissing_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.StubRule: void <init>(int)>",
    "<org.codenarc.rule.imports.ImportFromSamePackageRule$_applyTo_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsNotBlankLineAfterOpeningBrace_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.test.AbstractTestCase: java.lang.String getName()>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.util.SourceCodeUtil: java.util.List sourceLinesBetweenNodes(org.codenarc.source.SourceCode,org.codehaus.groovy.ast.ASTNode,org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.basic.ComparisonOfTwoConstantsAstVisitor: void addViolationIfBothAreConstantsOrLiterals(org.codehaus.groovy.ast.ASTNode,org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_visitClassComplete_closure2: org.codenarc.rule.grails.ClassConstraintsAndMapping getConstraintsAndMapping()>",
    "<org.codenarc.rule.junit.JUnitTearDownCallsSuperAstVisitor$_visitMethod_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.RemoveAllOnSelfAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.FilteredRuleSet$_getRules_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.test.AbstractTestCase: void setUpAbstractTestCase()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure29: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.comments.JavadocMissingThrowsDescriptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.InlineViolationsParser$ParseResult: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor$_extractTransients_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean isFalseExpression(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.basic.ExplicitGarbageCollectionAstVisitor: boolean isPropertyExpression(org.codehaus.groovy.ast.expr.Expression,java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIntegerInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule$_applyTo_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.NonFinalSubclassOfSensitiveInterfaceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ClassNameSameAsFilenameRule$_applyTo_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_visitDeclarationExpression_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedObjectRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ParameterNameAstVisitor$_processParameters_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.AbstractReportWriter: java.lang.String getResourceBundleString(java.lang.String,java.lang.String,boolean)>",
    "<org.codenarc.util.ModifiersUtil$_matchesAnyModifiers_closure1: java.lang.Integer getActualModifiers()>",
    "<org.codenarc.ruleset.RuleSetUtil$_loadRuleScriptFile_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.DuplicateCaseStatementAstVisitor: void visitSwitch(org.codehaus.groovy.ast.stmt.SwitchStatement)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsMassAssignmentAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ImportUtil$_sourceLineAndNumberForImport_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.results.DirectoryResults: int getNumberOfViolationsWithPriority(int)>",
    "<org.codenarc.rule.formatting.BracesForForLoopAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.ReferenceCollector: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.AssertionTrap$_methodNamesCountsAsAssertion_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor: void checkPackageName(java.lang.String,org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.grails.GrailsDomainHasEqualsRule: void <init>()>",
    "<org.codenarc.CodeNarcRunner$_registerPluginsForClassNames_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.LoggerForDifferentClassAstVisitor: boolean isEqualToCurrentClassOrClassName(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean areTrueAndFalseExpressions(org.codehaus.groovy.ast.stmt.Statement,org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.ruleset.MovedRules$Renamed: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.concurrency.StaticSimpleDateFormatFieldAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.InterfaceNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_recordMethodColumnAndSourceLineForClosureBlocks_closure7: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckAstVisitor: boolean isPropertyInvocation(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.rule.junit.UseAssertSameInsteadOfAssertTrueAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: void afterBlock()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.rule.exceptions.ThrowNullPointerExceptionRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor: void processType(org.codehaus.groovy.ast.ClassNode,java.lang.String)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_applyProperties_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor: void processParameters(org.codehaus.groovy.ast.Parameter[],java.lang.String)>",
    "<org.codenarc.rule.unused.UnusedObjectAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.UseCollectNestedAstVisitor: org.codehaus.groovy.ast.Parameter getClosureParameter(org.codehaus.groovy.ast.expr.ClosureExpression,org.codehaus.groovy.ast.Parameter)>",
    "<org.codenarc.report.XmlReportWriter$_buildMessageElement_closure8: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.logging.LoggerForDifferentClassAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.AbstractJavadocMissingDescriptionRule: void <init>()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.basic.EmptySwitchStatementAstVisitor: void visitSwitch(org.codehaus.groovy.ast.stmt.SwitchStatement)>",
    "<org.codenarc.report.ReportWriterFactory: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule$_addOrderingViolations_closure1: java.lang.String getMessage()>",
    "<org.codenarc.rule.formatting.BlockEndsWithBlankLineAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21$_closure23: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.logging.LoggerWithWrongModifiersAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_applyTo_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: int getLineNumberForCharacterIndex(int)>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4$_closure13: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassComplete_closure5: java.lang.Object doCall(java.util.Collection)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_visitConstructorOrMethod_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToMinusMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.junit.JUnitFailWithoutMessageRuleAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectMapKeys_closure6: java.util.Map getResult()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildMessageElement_closure7: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: boolean isNotExpressionWithMethodCallOnName(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.rule.formatting.LineLengthRule: boolean flagIfRegularLine(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationToGetClassAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.BracesForForLoopAstVisitor: int findLastLineOfForExpressions(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.rule.security.PublicFinalizeMethodAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.naming.VariableNameAstVisitor$_visitDeclarationExpression_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_buildSourceLineElement_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EqualsAndHashCodeAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.UnsafeArrayDeclarationAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.JavaIoPackageAccessAstVisitor: void visitPropertyExpression(org.codehaus.groovy.ast.expr.PropertyExpression)>",
    "<org.codenarc.rule.security.SystemExitRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitTestMethodWithoutAssertAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterAstVisitor$_hasItParameter_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.InstanceofRule: void <init>()>",
    "<org.codenarc.rule.naming.ClassNameSameAsFilenameRule$_applyTo_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor$_closure1: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.exceptions.CatchArrayIndexOutOfBoundsExceptionRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.logging.LoggerForDifferentClassAstVisitor: boolean isEqualToCurrentClassName(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.results.DirectoryResults$_removeViolation_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_flexibleCheckForCorrectColumn_closure12: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.imports.AbstractImportRule: void eachImportLine(org.codenarc.source.SourceCode,groovy.lang.Closure)>",
    "<org.codenarc.report.XmlReportWriter$_writeReport_closure1: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor$_isEmpty_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ConstantExpressionExtractor: java.util.List extractFromExpression(org.codehaus.groovy.ast.expr.ConstantExpression)>",
    "<org.codenarc.rule.naming.ParameterNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ParameterNameAstVisitor$_processParameters_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor$_visitCastExpression_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_applyProperties_closure2: org.codenarc.ruleset.RuleSet getRuleSet()>",
    "<org.codenarc.rule.exceptions.ReturnNullFromCatchBlockAstVisitor: boolean shouldVisitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4$_closure13$_closure15: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildButtons_closure6$_closure30: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildBodySection_closure1$_closure8: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceAfterSwitchRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12$_closure15: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure7$_closure9: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToRightShiftMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.IfStatementCouldBeTernaryAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.ruleset.XmlFileRuleSet: void <init>(java.lang.String)>",
    "<org.codenarc.rule.naming.ClassNameSameAsFilenameRule: java.lang.String classNodeType(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19$_closure21$_closure22: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor$_isExpressionUsedInAnnotation_closure2: org.codehaus.groovy.ast.expr.ConstantExpression getExpression()>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processStaticImports_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer: void <init>()>",
    "<org.codenarc.rule.exceptions.ThrowNullPointerExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.LoggerForDifferentClassAstVisitor: boolean isLoggerForDerivedClass(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInMethodDeclarationAstVisitor: java.lang.String removeDistractingParts(java.lang.String)>",
    "<org.codenarc.rule.groovyism.ClosureAsLastMethodParameterRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_findSuperClassMethods_closure7: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure7$_closure9: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner: org.codenarc.results.Results execute()>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllPackageSections_closure5$_closure17: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarc$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.GroovyVersion: boolean isNotGroovyVersion2()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: boolean isGetterSynchronizedAndSetterUnsychronized(java.util.List,java.lang.String)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: java.util.Map getIndentLevelsMap()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBooleanExpressionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToEqualsMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.basic.ForLoopShouldBeWhileLoopRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarc: void parseReport(java.lang.String)>",
    "<org.codenarc.ruleset.MovedRules$MovedToRuleSet: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.codenarc.tool.GenerateCodeNarcRulesProperties$_main_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_getMethodCallsAndMapKeys_closure5: java.lang.Object doCall(org.codehaus.groovy.ast.stmt.ExpressionStatement)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure4$_closure12: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBooleanInstantiationAstVisitor: boolean isConstructorCallAViolation(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor$_visitStaticMethodCallExpression_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor$_visitMethodCallExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.AbstractSourceCode$_removeGrabTransformation_closure1$_closure3$_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_writeReport_closure1$_closure10: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstanceOfCheckRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor$_visitBlockStatement_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceAfterClosingBraceAstVisitor: boolean isNotAllowedCharacterAfterClosure(java.lang.String,int)>",
    "<org.codenarc.rule.basic.ForLoopShouldBeWhileLoopAstVisitor: void visitForLoop(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonAstVisitor$_removeAnyViolationsForSameLine_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_configure_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterCodeVisitor: void visitVariableExpression(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.rule.imports.UnusedImportRule$_findReference_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.AstUtil: boolean respondsTo(java.lang.Object,java.lang.String)>",
    "<org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ant.CodeNarcTask: void addFileset(org.apache.tools.ant.types.FileSet)>",
    "<org.codenarc.rule.groovyism.ExplicitStackInstantiationRule$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.concurrency.NestedSynchronizationAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionAstVisitor$_hasJUnit4Annotation_closure1: org.codehaus.groovy.ast.MethodNode getNode()>",
    "<org.codenarc.rule.FieldReferenceAstVisitor: java.util.List getOuterClassNames()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21$_closure22: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.generic.IllegalStringRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_afterBlock_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.JsonReportWriter: boolean isRoot(org.codenarc.results.Results)>",
    "<org.codenarc.rule.design.AbstractClassWithPublicConstructorAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.NoTabCharacterRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassEx_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTernaryExpressionAstVisitor: boolean isBooleanConditionalExpression(org.codehaus.groovy.ast.expr.BooleanExpression)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitConstructorOrMethod_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitPublicFieldAstVisitor: void visitClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.tool.GenerateAll: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ParameterReassignmentAstVisitor: void <init>()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure19: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToXorMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.HardCodedWindowsFileSeparatorRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.LineLengthRule: boolean lineExceedsMaxLength(java.lang.String)>",
    "<org.codenarc.report.AbstractHtmlReportWriter: groovy.lang.Closure buildRuleDescriptions(org.codenarc.AnalysisContext)>",
    "<org.codenarc.rule.convention.IfStatementCouldBeTernaryAstVisitor: boolean isBlockWithSingleReturnStatement(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor: void visitProperty(org.codehaus.groovy.ast.PropertyNode)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21$_closure23: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: java.util.List generateAllPossibleParameterSignatures(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor$_visitMethodCallExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.JUnitPublicNonTestMethodAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.imports.UnnecessaryGroovyImportRule$_applyTo_closure1: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: boolean isSpockBlockLabel(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.BrokenNullCheckRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_processMethodOrConstructorCall_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.StaticConnectionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.JavaIoPackageAccessAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.basic.DeadCodeAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThreadLocalNotStaticFinalRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.SpockIgnoreRestUsedRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor: java.util.List getAnonymousClasses()>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor$_processParameters_closure1: java.lang.String getMethodName()>",
    "<org.codenarc.rule.formatting.BlankLineBeforePackageRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasOneStaticFieldNamedInstance_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.StaticFieldsBeforeInstanceFieldsAstVisitor$_visitClassComplete_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.CodeNarcRunner: java.util.List applyPluginsProcessRules(org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.rule.convention.NoDefAstVisitor$_visitParameters_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.CodeNarc: void checkMaxViolations(org.codenarc.results.Results,int,int)>",
    "<org.codenarc.rule.basic.ConstantTernaryExpressionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarc$__clinit__closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_buildViolationElement_closure6: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_initializeImportNames_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitCaseStatement_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueAstVisitor: int getActualArgumentIndex(java.util.List)>",
    "<org.codenarc.report.InlineXmlReportWriter$_buildViolationElement_closure1$_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer: void applyProperties(java.util.Properties,org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.rule.ClassReferenceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor$_isNamedArgumentsListContainingThis_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalSubclassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BracesForMethodAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_addViolationOnMismatch_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.imports.UnnecessaryGroovyImportRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.imports.UnusedImportRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.CouldBeSwitchStatementAstVisitor: void <init>()>",
    "<org.codenarc.rule.generic.IllegalRegexRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.CommonThrowAstVisitor: void visitThrowStatement(org.codehaus.groovy.ast.stmt.ThrowStatement)>",
    "<org.codenarc.rule.imports.AbstractImportRule$_findLineNumberOfFirstClassDeclaration_closure1: java.lang.Integer getFirstLineNumber()>",
    "<org.codenarc.report.BaselineXmlReportWriter: groovy.lang.Closure buildViolationElement(org.codenarc.rule.Violation)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: java.util.List setupFlexibleIndentForAnyClosureParameterBlocks(org.codehaus.groovy.ast.expr.ArgumentListExpression)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_uniqueAndSortedDeclaringClassNames_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.CollectionReturnTracker: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure4$_closure11: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_buildReportElement_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.logging.PrintlnAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.JavaIoPackageAccessAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToMinusMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ClassNameSameAsSuperclassAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void addViolationForOperator(org.codehaus.groovy.ast.ASTNode,java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor: void saveCurrentAnnotatedNode(org.codehaus.groovy.ast.AnnotatedNode)>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor$_visitConstructorOrMethod_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsStatelessServiceRule: boolean shouldIgnoreField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.report.ReportWriterFactory: org.codenarc.report.ReportWriter getReportWriter(java.lang.String,java.util.Map)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryReturnKeywordAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySelfAssignmentAstVisitor: boolean propertyExpressionsAreEqual(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_visitConstructorOrMethod_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ExplicitGarbageCollectionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfViolationsWithPriority_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.CodeNarc$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.exceptions.ExceptionExtendsErrorAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure19: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsAstVisitor$_visitMethodCallExpression_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.ComparisonOfTwoConstantsAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.imports.DuplicateImportRule$_applyTo_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor$_isEmpty_closure1$_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27: java.lang.Object call(org.codenarc.rule.Violation)>",
    "<org.codenarc.rule.logging.LoggerWithWrongModifiersAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor$_visitBlockStatement_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementAstVisitor$_visitIfElse_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.size.CrapMetricRule: void <init>()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertyLockingAstVisitor: void <init>()>",
    "<org.codenarc.rule.formatting.SpaceAroundMapEntryColonAstVisitor: int columnIndexForColon(org.codehaus.groovy.ast.expr.MapEntryExpression)>",
    "<org.codenarc.rule.basic.ForLoopShouldBeWhileLoopAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor$_visitDeclarationExpression_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.EmptyForStatementAstVisitor: void visitForLoop(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.ant.CodeNarcTask: void <init>()>",
    "<org.codenarc.rule.groovyism.GStringAsMapKeyAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.AbstractFinallyAstVisitor: boolean isStatementWithinFinally(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor$_methodReturnsArray_closure1: java.lang.Boolean getReturnsArray()>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.concurrency.BusyWaitRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitLostTestRule: void <init>()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor$_extractTransients_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure14: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor$_processParameters_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor: boolean argumentsContainThis(org.codehaus.groovy.ast.expr.TupleExpression)>",
    "<org.codenarc.rule.jdbc.JdbcResultSetReferenceRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.design.NestedForLoopAstVisitor: void visitForLoop(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_generateAllPossibleParameterSignatures_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.CouldBeSwitchStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet: java.io.InputStream getSchemaXmlInputStream()>",
    "<org.codenarc.rule.dry.DryUtil: boolean haveTheSameListLiteralValue(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.design.BooleanMethodReturnsNullAstVisitor: boolean methodReturnsBoolean(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.generic.IllegalClassMemberAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.groovyism.ExplicitStackInstantiationRule: java.lang.Object this$dist$get$3(java.lang.String)>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: java.util.List getLines()>",
    "<org.codenarc.util.ImportUtil$_sourceLineAndNumberForStarImport_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor$_visitMethodCallExpression_closure1: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.CyclomaticComplexityRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_writeReport_closure1: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.VirtualResults: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_containsKey_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.MovedRules: void <clinit>()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonAstVisitor$_removeAnyViolationsForSameLine_closure1: int getLineNumber()>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: boolean isMethodCallOnName(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.CodeNarc$_parseArgs_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.DuplicateMapKeyAstVisitor$_visitMapExpression_closure2: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_addClosureFields_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.PropertyNameRule: void <init>()>",
    "<org.codenarc.util.ImportUtil$_sortImportsByLineNumber_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.LineLengthRule: boolean sourceLineIsImport(java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitCatchStatement_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter: java.lang.String getFormattedTimestamp()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.logging.PrintlnAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.design.SimpleDateFormatMissingLocaleRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure18$_closure22: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.ruleset.RuleSets: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitLostTestAstVisitor: void visitClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4$_closure14: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor$_closureReturnsArray_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineViolation: void <init>()>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin: java.lang.String scrub(java.lang.String)>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitClassEx_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.convention.CompileStaticlVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.basic.ComparisonWithSelfAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.security.UnsafeImplementationAsMapAstVisitor: void visitCastExpression(org.codehaus.groovy.ast.expr.CastExpression)>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor$_processParameters_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.AssignmentToStaticFieldFromInstanceMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.serialization.SerializableClassMustDefineSerialVersionUIDAstVisitor$_visitClassEx_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.plugin.disablerules.DisableRulesInCommentsPlugin: boolean isViolationDisabled(org.codenarc.plugin.disablerules.LookupTable,org.codenarc.rule.Violation)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure26: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySetterRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ClassSizeAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.naming.AbstractClassNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.basic.EmptyForStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTernaryExpressionAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure13: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.BracesForClassRule: java.util.List findOpeningBraceLine(org.codenarc.source.SourceCode,org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_getFileResults_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.XmlReportWriter$_buildProjectElement_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.AbstractRuleTestCase$_removeSuppressedViolations_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor$_visitConstructorOrMethod_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor: void visitMethodPointerExpression(org.codehaus.groovy.ast.expr.MethodPointerExpression)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor: boolean isSingleton(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.grails.GrailsDomainHasEqualsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ConfusingTernaryAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$ViolationAndPath: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.naming.PackageNameMatchesFilePathRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.comments.ClassJavadocRule$_applyTo_closure1: java.util.List getViolations()>",
    "<org.codenarc.rule.junit.JUnitAssertAlwaysFailsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.CatchIllegalMonitorStateExceptionRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitConstructorOrMethod_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: boolean isNotOpeningParenthesis(java.lang.String,int)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryObjectReferencesAstVisitor$_visitBlockStatement_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.ToStringReturnsNullAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonRule$_processImports_closure1: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_generateAllPossibleParameterSignatures_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: int columnForIndentLevel(int)>",
    "<org.codenarc.util.WildcardPattern$_matches_closure2: java.lang.String getString()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCatchBlockAstVisitor$_visitTryCatchFinally_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.ClassConstraintsAndMapping$_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.basic.HardCodedWindowsFileSeparatorAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.WildcardPattern$_matches_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildProjectElement_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.InterfaceNameSameAsSuperInterfaceAstVisitor$_visitClassEx_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInVariableDeclarationAstVisitor: void visitExpressionStatement(org.codehaus.groovy.ast.stmt.ExpressionStatement)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor: java.lang.String violationMessage(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.MissingBlankLineAfterPackageRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.size.CrapMetricRule: java.lang.Object createCrapMetric()>",
    "<org.codenarc.rule.exceptions.ThrowRuntimeExceptionRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor: void <init>()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_setupFlexibleIndentForAnyClosureParameterBlocks_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoDefAstVisitor$_visitParameters_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.StaticDateFormatFieldAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ConstantAssertExpressionAstVisitor: void visitAssertStatement(org.codehaus.groovy.ast.stmt.AssertStatement)>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer: java.util.List getSourceDirectories()>",
    "<org.codenarc.ruleset.RuleSetUtil: boolean isXmlFile(java.lang.String)>",
    "<org.codenarc.rule.design.ToStringReturnsNullRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitClosureExpression_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryObjectReferencesAstVisitor$_visitBlockStatement_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySelfAssignmentRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.SpockIgnoreRestUsedAstVisitor: void visitClass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_processMethodOrConstructorCall_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.CodeNarcRunner$_applyPluginsProcessRules_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCatchBlockAstVisitor$_visitTryCatchFinally_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor$_methodReturnsCollection_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: java.lang.String getLine(int)>",
    "<org.codenarc.report.ReportWriterFactory$_getReportWriter_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.EmptyMethodInAbstractClassAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.junit.JUnitAssertAlwaysFailsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTernaryExpressionAstVisitor: boolean isOperationThatReturnsABoolean(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.ant.CodeNarcTask: org.apache.tools.ant.types.Path createClasspath()>",
    "<org.codenarc.rule.basic.EmptyCatchBlockAstVisitor: void visitCatchStatement(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.ConsecutiveStringConcatenationAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_applyTo_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInMethodDeclarationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.InlineXmlReportWriter: groovy.lang.Closure buildViolationElement(org.codenarc.rule.Violation)>",
    "<org.codenarc.rule.concurrency.ThreadGroupAstVisitor: boolean isConstructorNamed(org.codehaus.groovy.ast.expr.ConstructorCallExpression,java.lang.Class)>",
    "<org.codenarc.report.XmlReportWriter$_buildViolationElement_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGetterAstVisitor: boolean isSpockMethod(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTernaryExpressionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitConstructorOrMethod_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.braces.IfStatementBracesAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_collectAllPrivateMethods_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: boolean isNotDollar(java.lang.String,int)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_getMethodCallsAndMapKeys_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildRulesElement_closure9: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.exceptions.MissingNewInThrowStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsAstVisitor$_visitMethodCallExpression_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter: groovy.lang.Closure buildProjectElement(org.codenarc.AnalysisContext)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: boolean isValidColumn(int)>",
    "<org.codenarc.rule.formatting.SpaceAfterClosingBraceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.NullReturnTracker: boolean expressionReturnsNull(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.results.FileResults$_getNumberOfFilesWithViolations_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.imports.DuplicateImportRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.InlineXmlReportWriter: groovy.lang.Closure buildDescriptionElement(org.codenarc.rule.Rule)>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTernaryExpressionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner$_applyPluginsProcessRules_closure3: java.util.List getRules()>",
    "<org.codenarc.rule.design.OptionalMethodParameterAstVisitor$_processParameters_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.FieldTypeRequiredAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.report.XmlReportWriter$_buildProjectElement_closure3$_closure11: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure2$_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.ConsecutiveBlankLinesRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule$_addOrderingViolations_closure1: java.lang.Boolean getNonStaticFound()>",
    "<org.codenarc.rule.generic.StatelessClassRule: void setAddToIgnoreFieldNames(java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$ViolationAndPath: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.formatting.SpaceBeforeClosingBraceAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.rule.convention.NoDefAstVisitor: boolean methodExcluded(java.lang.String)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_getMethodCallsAndMapKeys_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_visitClassComplete_closure2: org.codehaus.groovy.ast.ClassNode getNode()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean hasElseBlock(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule: java.lang.Object this$dist$invoke$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ImportUtil$_getAllImports_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCallForLastElementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThreadGroupRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.LineLengthRule: boolean sourceLineIsPackage(java.lang.String)>",
    "<org.codenarc.rule.basic.DuplicateMapKeyRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsBlankLineAfterOpeningBrace_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DryUtil: boolean haveTheSameConstantPropertyExpression(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_flexibleCheckForCorrectColumn_closure12: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.RemoveAllOnSelfAstVisitor: int getArity(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySetterAstVisitor: void addUnnecessarySetterViolation(org.codehaus.groovy.ast.expr.MethodCallExpression,java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor$_methodReturnsCollection_closure1: java.lang.Boolean getReturnsCollection()>",
    "<org.codenarc.rule.formatting.SpaceAfterClosingBraceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyMethodAstVisitor$_visitMethod_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin: void initialize()>",
    "<org.codenarc.plugin.disablerules.LookupTable: void checkForCodeNarcDisable(java.lang.String)>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_collectAllPrivateFields_closure2$_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.GroovyDslRuleSet$_createGroovyShell_closure1: java.lang.Object doCall(groovy.lang.Closure)>",
    "<org.codenarc.util.io.ClassPathResource: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.AssignCollectionUniqueAstVisitor: boolean isChainedUnique(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.convention.VariableTypeRequiredAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_writeReport_closure1$_closure10: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.imports.UnusedImportRule: java.lang.String findReference(org.codenarc.source.SourceCode,java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonAstVisitor: void visitStatement(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19$_closure21: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.AbstractReportWriter: boolean isEnabled(org.codenarc.rule.Rule)>",
    "<org.codenarc.rule.convention.VectorIsObsoleteRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitImports_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.CodeNarcVersion: java.lang.String readCodeNarcVersion()>",
    "<org.codenarc.source.SourceCodeCriteria: boolean matches(org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_addInitializedField_closure3: java.lang.String getVarName()>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor: boolean isIgnoredOneElementMap(org.codehaus.groovy.ast.expr.MapExpression)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitSynchronizedStatement_closure7: org.codehaus.groovy.ast.stmt.SynchronizedStatement getStatement()>",
    "<org.codenarc.report.InlineXmlReportWriter$_buildViolationElement_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryConstructorAstVisitor: boolean isEmptyConstructor(org.codehaus.groovy.ast.ConstructorNode)>",
    "<org.codenarc.rule.concurrency.WaitOutsideOfWhileLoopRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: void removeInitializedField(java.lang.String)>",
    "<org.codenarc.rule.comments.ClassJavadocRule$_applyTo_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateCodeNarcRulesProperties$_main_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceAstVisitor: boolean checkIsEmptyBlock(java.lang.String,int)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor: boolean methodReturnsArray(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.rule.basic.DuplicateMapKeyAstVisitor$_visitMapExpression_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean isOnlyAConstantOrLiteralExpression(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor$_visitMethodEx_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19$_closure21$_closure22: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_visitConstructorOrMethod_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.grails.GrailsDomainHasEqualsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.design.OptionalMethodParameterAstVisitor$_processParameters_closure1: java.lang.String getMethodName()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor: void handleClosure(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.basic.DuplicateCaseStatementAstVisitor$_visitSwitch_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.AbstractClassWithoutAbstractMethodAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.InlineViolationsParser: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_visitClassEx_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ParameterCountAstVisitor$_isOverridden_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryObjectReferencesAstVisitor: void <init>()>",
    "<org.codenarc.rule.formatting.SpaceBeforeClosingBraceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueRule: void <init>()>",
    "<org.codenarc.report.AbstractReportWriter: void <clinit>()>",
    "<org.codenarc.util.PathUtil: java.lang.String removeLeadingSlash(java.lang.String)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_addViolationOnMismatch_closure1: java.lang.String getSetterName()>",
    "<org.codenarc.rule.exceptions.ThrowErrorRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor: void visitCatchStatement(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.rule.braces.WhileStatementBracesAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor$_processParameters_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.CloneableWithoutCloneAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27$_closure28: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryTearDownRule: void <init>()>",
    "<org.codenarc.rule.dry.DryUtil: boolean areTheSameConstantOrLiteralMaps(org.codehaus.groovy.ast.expr.MapExpression,org.codehaus.groovy.ast.expr.MapExpression)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: void checkIfThereIsNotBlankLineAfterOpeningBrace(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.AbstractSpaceAroundBraceAstVisitor: java.lang.String sourceLineOrEmpty(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToAndMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitSynchronizedStatement_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToGetAtMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.FieldNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.InterfaceNameSameAsSuperInterfaceAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.EqualsOverloadedAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BracesForIfElseRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_visitDeclarationExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyCatchBlockAstVisitor: boolean doesContainIgnoreWord(java.lang.String)>",
    "<org.codenarc.rule.exceptions.CatchThrowableRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void visitForLoop(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.rule.groovyism.UseCollectNestedAstVisitor: org.codehaus.groovy.ast.expr.Expression getMethodCallParameterThatIsAClosure(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor: void visitMethodComplete(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryParenthesesForMethodCallWithClosureAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule$_applyTo_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllPackageSections_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure7: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ant.CodeNarcTask: void setClasspathRef(org.apache.tools.ant.types.Reference)>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ParameterReassignmentAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean isReturnTrue(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.size.ParameterCountAstVisitor: void checkParametersCount(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.basic.EqualsOverloadedRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_recordMethodColumnAndSourceLineForClosureBlocks_closure7: org.codehaus.groovy.ast.expr.MethodCallExpression getMethodCallExpression()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInMethodDeclarationAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.concurrency.SynchronizedOnThisAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor: java.util.Set collectIncludedProperties(org.codehaus.groovy.ast.expr.MapExpression)>",
    "<org.codenarc.rule.design.BooleanReturnTracker: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateStringLiteralRule: groovy.lang.Closure defineAdditionalChecksClosure()>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule$_applyTo_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitForLoop_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInFieldDeclarationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.MethodSizeAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.rule.formatting.SpaceAroundClosureArrowAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter$_writeReportToFile_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTransientModifierAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassComplete_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitLostTestAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.formatting.BracesForIfElseAstVisitor: void visitElseOpeningBrace(org.codenarc.rule.formatting.BracesForIfElseRule,org.codehaus.groovy.ast.stmt.IfStatement,java.lang.String)>",
    "<org.codenarc.util.ImportUtil: java.util.List sortImportsByLineNumber(java.util.List,org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.convention.NoJavaUtilDateRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ModifiersUtil$_parseModifiers_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ParameterCountAstVisitor: boolean isOverridden(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.comments.JavadocConsecutiveEmptyLinesRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor: void processMethodOrConstructorCall(org.codehaus.groovy.ast.expr.MethodCall)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryFloatInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.SourceFile: java.lang.String getName()>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_collectAllPrivateFields_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.VariableTypeRequiredAstVisitor$_visitDeclarationExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.SimpleDateFormatMissingLocaleAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor: void addViolationIfDoubleQuoted(org.codehaus.groovy.ast.expr.ConstantExpression)>",
    "<org.codenarc.rule.concurrency.SynchronizedReadObjectMethodAstVisitor$_isSerializable_closure1: java.lang.Boolean getIsSerializable()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySetterAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.ThrowRuntimeExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor$_isEmpty_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter: groovy.lang.Closure buildAllViolationsSection(org.codenarc.results.Results)>",
    "<org.codenarc.rule.dry.DuplicateNumberLiteralRule$_defineAdditionalChecksClosure_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClosureStatementOnOpeningLineOfMultipleLineClosureAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.ruleset.MovedRules: java.lang.String getMovedOrRenamedMessageForRuleName(java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27$_closure28: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitUtil: boolean isAssertCallWithValueMatching(org.codehaus.groovy.ast.expr.MethodCallExpression,java.lang.String,groovy.lang.Closure)>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter$_writePackageViolations_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.MethodReturnTypeRequiredAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBigDecimalInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildProjectElement_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalClassMemberRule: void setIllegalMethodModifiers(java.lang.String)>",
    "<org.codenarc.rule.exceptions.ThrowThrowableRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.MultipleUnaryOperatorsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UseAssertEqualsInsteadOfAssertTrueRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.RemoveAllOnSelfAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.CodeNarcRunner: void <init>()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.InvertedConditionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase: void testThatUnrelatedCodeHasNoViolations()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27$_closure28: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.AssertionTrap: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryObjectReferencesAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule$_addOrderingViolations_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceAfterWhileRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: void visitClassComplete(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.basic.EmptySynchronizedStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DryUtil: boolean areTheSameConstantOrLiteralLists(org.codehaus.groovy.ast.expr.ListExpression,org.codehaus.groovy.ast.expr.ListExpression)>",
    "<org.codenarc.rule.comments.JavadocEmptyFirstLineRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor: boolean expressionContainsBannedCharacters(org.codehaus.groovy.ast.expr.ConstantExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.formatting.AbstractSingleSpaceAfterKeywordAstVisitor: void checkForSingleSpaceAndOpeningParenthesis(org.codehaus.groovy.ast.ASTNode,java.lang.String)>",
    "<org.codenarc.rule.basic.DuplicateMapKeyAstVisitor$_visitMapExpression_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToGetAtMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.AbstractSpaceAroundBraceAstVisitor: boolean isNotInsideGString()>",
    "<org.codenarc.rule.formatting.TrailingWhitespaceRule$_applyTo_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.VariableUsageFinder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.FieldReferenceAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.logging.PrintStackTraceAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.design.LocaleSetDefaultAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.report.HtmlReportWriter: java.lang.String toString()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleSetRefElements_closure1$_closure6: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.source.SourceString: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_addInitializedField_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.naming.ParameterNameRule: void <init>()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildProjectElement_closure3$_closure9$_closure10: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.exceptions.CatchNullPointerExceptionRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasState_closure1: org.codehaus.groovy.ast.ClassNode getClassNode()>",
    "<org.codenarc.rule.formatting.SpaceBeforeClosingBraceAstVisitor: boolean checkIsEmptyBlock(java.lang.String,int)>",
    "<org.codenarc.report.XmlReportWriter$_buildMessageElement_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.ImportFromSamePackageRule$_applyTo_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildCSS_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.serialization.EnumCustomSerializationIgnoredAstVisitor: boolean isWriteReplaceMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.ruleset.MovedRules$Renamed: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ImplicitReturnStatementAstVisitor: boolean isEmptyMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.groovyism.AssignCollectionUniqueAstVisitor: boolean isMatchingUniqueCall(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12$_closure15: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildProjectElement_closure3$_closure9: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.dry.DryUtil: boolean haveTheSameMapLiteralValue(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.ruleregistry.RuleRegistryInitializer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.AssertionTrap: boolean methodNamesCountsAsAssertion(java.lang.Object)>",
    "<org.codenarc.util.PathUtil: java.lang.String removePathPrefix(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertViolations(java.lang.String,java.util.Map[])>",
    "<org.codenarc.rule.junit.JUnitPublicFieldAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToRightShiftMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor$_visitCatchStatement_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void processElvisExpression(org.codehaus.groovy.ast.expr.ElvisOperatorExpression)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void recordMethodColumnAndSourceLineForClosureBlocks(org.codehaus.groovy.ast.expr.MethodCallExpression,org.codehaus.groovy.ast.expr.ArgumentListExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInVariableDeclarationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitTestMethodWithoutAssertRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateRuleIndexPage$_main_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule: void this$dist$set$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.naming.PackageNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter: void writeTitle(java.io.Writer)>",
    "<org.codenarc.util.io.DefaultResourceFactory: org.codenarc.util.io.Resource getResource(java.lang.String)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalRule$_getViolations_closure1: org.codenarc.rule.AstVisitor getVisitor()>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule$_applyTo_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfViolationsWithPriority_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.PackageNameMatchesFilePathRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarc: void <init>()>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor$_visitMethodEx_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.MovedRules$Renamed: java.lang.Object propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.basic.BitwiseOperatorInConditionalRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.BigDecimalInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure2$_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ToStringReturnsNullAstVisitor: void checkForImplicitNullReturns(org.codehaus.groovy.ast.MethodNode,java.lang.String)>",
    "<org.codenarc.util.ImportUtil$_sourceLineAndNumberForImport_closure1: java.lang.String getAlias()>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer$_processDirectory_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaRule: void <init>()>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin$_addFilesWithViolations_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.ReferenceCollector: void <init>()>",
    "<org.codenarc.rule.comments.AbstractJavadocEmptyTagRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.concurrency.NestedSynchronizationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.GroovyDslRuleSet: void <clinit>()>",
    "<org.codenarc.rule.serialization.EnumCustomSerializationIgnoredAstVisitor: boolean isPrivateStaticFinalField(org.codehaus.groovy.ast.FieldNode,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor: void suppressException(java.lang.Class,groovy.lang.Closure)>",
    "<org.codenarc.report.BaselineXmlReportParser: java.lang.String unescapeXml(java.lang.String)>",
    "<org.codenarc.CodeNarcRunner: java.lang.String buildCountsText(org.codenarc.results.Results)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_visitDeclarationExpression_closure1: org.codehaus.groovy.ast.expr.DeclarationExpression getDeclarationExpression()>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule$_applyTo_closure1: java.util.List getViolations()>",
    "<org.codenarc.rule.convention.IfStatementCouldBeTernaryAstVisitor: java.lang.String getReturnValue(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.util.io.ClassPathResource: boolean exists()>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.ruleset.TopLevelDelegate: void rule(java.lang.Class,java.util.Map)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_visitMethodEx_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.NullReturnTracker: void visitReturnStatement(org.codehaus.groovy.ast.stmt.ReturnStatement)>",
    "<org.codenarc.rule.design.BuilderMethodWithSideEffectsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.naming.ObjectOverrideMisspelledMethodNameAstVisitor: void checkForExactMethodName(org.codehaus.groovy.ast.MethodNode,java.lang.String,java.util.List,java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor$_visitMethodEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonRule$_processImports_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToPowerMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20: java.lang.Object doCall(org.codenarc.rule.Rule,java.lang.Object)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: java.lang.String getPath()>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor: boolean lastExpressionIsEndOfExpression(org.codehaus.groovy.ast.expr.ListExpression)>",
    "<org.codenarc.rule.grails.GrailsDuplicateMappingAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.ant.CodeNarcTask: void checkMaxViolations(org.codenarc.results.Results)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure26: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.imports.UnnecessaryGroovyImportRule$_applyTo_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.JUnitLostTestRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: boolean isChainedMethodCallOnDifferentLine(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitImports_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter: java.lang.String getRuleDescriptionOrDefaultMessage(org.codenarc.rule.Rule)>",
    "<org.codenarc.rule.generic.IllegalClassMemberRule: void setIllegalPropertyModifiers(java.lang.String)>",
    "<org.codenarc.util.io.UrlResource: boolean exists()>",
    "<org.codenarc.util.WildcardPattern$_convertStringWithWildcardsToRegex_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPublicModifierAstVisitor: java.lang.String getDeclaration(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.comments.ClassJavadocRule$_applyTo_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildCSS_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor: void visitVariableExpression(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void checkStatementIndent(org.codehaus.groovy.ast.stmt.Statement,org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.results.FileResults$_getNumberOfFilesWithViolations_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BlockEndsWithBlankLineAstVisitor: void addViolation(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer: void setRuleProperty(org.codenarc.rule.Rule,java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.basic.HardCodedWindowsFileSeparatorAstVisitor: void addViolationForWindowsSeparator(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.source.CustomCompilerPhaseSourceDecorator: java.lang.String toString()>",
    "<org.codenarc.rule.exceptions.CatchErrorRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_getViolations_closure1: java.lang.Object doCall(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor: boolean isMethodCall(org.codehaus.groovy.ast.expr.MethodCallExpression,java.lang.String)>",
    "<org.codenarc.rule.security.FileCreateTempFileAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.SynchronizedOnThisAstVisitor: void visitSynchronizedStatement(org.codehaus.groovy.ast.stmt.SynchronizedStatement)>",
    "<org.codenarc.rule.concurrency.StaticSimpleDateFormatFieldAstVisitor: boolean isSimpleDateFormatConstructorCall(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.PrintlnAstVisitor$_visitClassEx_closure1: java.lang.Object doCall(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.logging.PrintStackTraceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor$_visitCatchStatement_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.jdbc.JdbcResultSetReferenceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsAstVisitor$_visitMethodCallExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_uniqueAndSortedDeclaringClassNames_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.basic.EmptyFinallyBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.RuleSetUtil: void <clinit>()>",
    "<org.codenarc.tool.GenerateUtil: java.util.Properties getRuleExtraInformation()>",
    "<org.codenarc.rule.convention.NoDefAstVisitor$_visitDeclarationExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.FileEndsWithoutNewlineRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_getViolations_closure1: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.junit.JUnitLostTestAstVisitor$_visitClass_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.concurrency.SynchronizedReadObjectMethodAstVisitor$_isSerializable_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.braces.ForStatementBracesAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: void checkTypeIfNotDynamicallyTyped(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin: void <clinit>()>",
    "<org.codenarc.rule.basic.DoubleNegativeAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.PrintlnAstVisitor$_visitClassEx_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ImportUtil$_sourceLineAndNumberForImport_closure1: java.lang.String getClassName()>",
    "<org.codenarc.util.ModifiersUtil: void <clinit>()>",
    "<org.codenarc.util.PathUtil: java.lang.String getName(java.lang.String)>",
    "<org.codenarc.rule.serialization.EnumCustomSerializationIgnoredAstVisitor: boolean isWriteObjectMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.groovyism.UseCollectNestedAstVisitor: void visitClassComplete(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.exceptions.CommonCatchAstVisitor: void visitCatchStatement(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsNotBlankLineAfterOpeningBrace_closure3: java.lang.Integer getClassStartLine()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitClosureExpression_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.concurrency.SynchronizedReadObjectMethodAstVisitor$_isSerializable_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterAstVisitor: void setRule(org.codenarc.rule.Rule)>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processImports_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.ClassReferenceAstVisitor: void <init>(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCallToSubstringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCallForLastElementAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.results.FileResults: void <init>(java.lang.String,java.util.List,org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.generic.StatelessClassRule: boolean matchesIgnoreFieldTypes(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToMinusMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.DuplicateSetValueRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.ImportFromSamePackageRule$_applyTo_closure1: java.util.List getViolations()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_getMethodCallsAndMapKeys_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure11: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.basic.BrokenOddnessCheckRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.AbstractJavadocMissingDescriptionRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertTwoViolations_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.InlineViolationsParser$_parseLine_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.VolatileLongOrDoubleFieldVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.ruleset.RuleSetUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.BusyWaitAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.VirtualResults: java.util.List getViolations()>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckAstVisitor: boolean isMethodInvocation(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.rule.dry.DryUtil: boolean haveTheSameConstantValue(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.report.JsonReportWriter: boolean isWriteAsSingleLine()>",
    "<org.codenarc.plugin.FileViolations: java.lang.String toString()>",
    "<org.codenarc.report.TextReportWriter: void writeViolation(java.io.Writer,org.codenarc.rule.Violation,java.lang.String)>",
    "<org.codenarc.results.DirectoryResults: java.util.List getViolations()>",
    "<org.codenarc.rule.grails.GrailsPublicControllerMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToEqualsMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitTypeInstantiationAstVisitor: void <init>(java.lang.String)>",
    "<org.codenarc.analyzer.StringSourceAnalyzer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor$_processParameters_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildMessageElement_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitPublicNonTestMethodRule: void <init>()>",
    "<org.codenarc.rule.design.CollectionReturnTracker$_expressionReturnsList_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueAstVisitor: void findViolations(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.security.UnsafeArrayDeclarationAstVisitor: boolean isPublicStaticFinal(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor$_visitConstructorOrMethod_closure2: org.codehaus.groovy.ast.MethodNode getNode()>",
    "<org.codenarc.source.AbstractSourceCode$_getLineNumberForCharacterIndex_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitSetUpCallsSuperRule: void <init>()>",
    "<org.codenarc.rule.imports.AbstractImportRule$_findLineNumberOfFirstClassDeclaration_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processStaticImports_closure2: java.lang.Object doCall(java.lang.Object,org.codehaus.groovy.ast.ImportNode)>",
    "<org.codenarc.rule.concurrency.StaticConnectionAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.CodeNarc$_parseArgs_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.dry.DuplicateStringLiteralRule$_defineAdditionalChecksClosure_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor$_visitMethodCallExpression_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryOverridingMethodAstVisitor: boolean isSingleLineMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean isSingleStatementBlock(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.tool.GenerateCodeNarcRulesProperties: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UseAssertEqualsInsteadOfAssertTrueAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.ruleset.TopLevelDelegate: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportParser: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.CloneableWithoutCloneAstVisitor: boolean hasCloneMethod(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.ruleset.RuleSetUtil: boolean isJsonFile(java.lang.String)>",
    "<org.codenarc.results.DirectoryResults: int getNumberOfFilesWithViolations(int)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPublicModifierRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCallForLastElementAstVisitor: boolean isSubtractOneOnObject(java.lang.String,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor: void visitClassComplete(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolation_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryToStringAstVisitor: void visitDeclarationExpression(org.codehaus.groovy.ast.expr.DeclarationExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryLongInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsMassAssignmentAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_findMatchingSuperClassMethod_closure5: java.util.List getParameters()>",
    "<org.codenarc.rule.security.InsecureRandomAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildButtons_closure6$_closure30: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule: java.lang.Object this$dist$get$3(java.lang.String)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor: java.lang.String violationMessage(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.grails.GrailsStatelessServiceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstanceOfCheckAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySafeNavigationOperatorRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.JavadocEmptyLastLineRule: void <clinit>()>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_printRuleProcessingTimes_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceBeforeClosingBraceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.AbstractHtmlReportWriter: boolean isDirectoryContainingFilesWithViolations(org.codenarc.results.Results)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_getViolations_closure1$_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.JsonReportWriter: java.lang.Object[] buildRulesElement(org.codenarc.AnalysisContext)>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor: void <init>(java.lang.Class,java.util.Set,groovy.lang.Closure)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassEx_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.plugin.AbstractCodeNarcPlugin: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUnnecessarySetUpRule: void <init>()>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor$_visitMethodCallExpression_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.UseAssertSameInsteadOfAssertTrueAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.generic.IllegalClassMemberRule: void setAllowedMethodModifiers(java.lang.String)>",
    "<org.codenarc.source.AbstractSourceCode$_removeGrabTransformation_closure1$_closure3$_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalRule: java.util.List getViolations(org.codenarc.rule.AstVisitor,org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.design.CloneableWithoutCloneAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.FinalClassWithProtectedMemberAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryToStringAstVisitor: boolean isStringType(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.grails.GrailsDuplicateMappingRule: void <init>()>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor: boolean isExpressionUsedInAnnotation(org.codehaus.groovy.ast.expr.ConstantExpression,org.codehaus.groovy.ast.AnnotationNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCallForLastElementAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.naming.PackageNameMatchesFilePathRule: java.lang.String removeTrailingPeriod(java.lang.String)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14$_closure16: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor$_processParameters_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.RuleSetBuilder: void ruleset(groovy.lang.Closure)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: boolean isSingleLineClassViolation()>",
    "<org.codenarc.rule.convention.StaticFieldsBeforeInstanceFieldsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.design.AssignmentToStaticFieldFromInstanceMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildProjectElement_closure3$_closure9: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildProjectElement_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.BracesForTryCatchFinallyAstVisitor: void visitCatch(org.codenarc.rule.formatting.BracesForTryCatchFinallyRule,org.codehaus.groovy.ast.stmt.TryCatchStatement)>",
    "<org.codenarc.rule.security.UnsafeImplementationAsMapRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ComparisonWithSelfAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.plugin.disablerules.LookupTable: java.util.Set parseRuleNames(java.lang.String,java.lang.String)>",
    "<org.codenarc.CodeNarcRunner: void applyPluginsProcessViolationsForAllFiles(org.codenarc.results.Results)>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: int rightMostColumn(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor$_visitCatchStatement_closure2: java.lang.Object doCall(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.ruleset.FilteredRuleSet$_getRules_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BlockStartsWithBlankLineAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_setRuleProperties_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.serialization.SerialPersistentFieldsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_increaseIndentForClosureBlocks_closure5: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBigDecimalInstantiationAstVisitor: boolean shouldSkipViolation(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInVariableDeclarationAstVisitor: boolean contains(java.lang.String,java.lang.String)>",
    "<org.codenarc.report.XmlReportWriter$_buildSourceLineElement_closure7: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.XmlReportWriter: groovy.lang.Closure buildPackageElement(org.codenarc.results.Results)>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueAstVisitor: void visitStaticMethodCallExpression(org.codehaus.groovy.ast.expr.StaticMethodCallExpression)>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: boolean isBinaryExpressionWithMethodCallOnName(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.ruleset.RuleSetUtil: org.codenarc.ruleset.RuleSet loadRuleSetFile(java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCatchBlockAstVisitor$_visitTryCatchFinally_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationAstVisitor: void <init>(java.lang.Class,java.util.List,java.lang.String)>",
    "<org.codenarc.rule.exceptions.CommonThrowAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainHasToStringAstVisitor: boolean isNotInnerEnum(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.basic.EmptyFinallyBlockAstVisitor: void visitTryCatchFinally(org.codehaus.groovy.ast.stmt.TryCatchStatement)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor$_methodReturnsCollection_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.util.ImportUtil$_sourceLineAndNumberForImport_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.results.DirectoryResults: java.lang.String toString()>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor$_getParameterDefinitionAsString_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor$_hasTrailingComma_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitSetUpCallsSuperAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.AnalyzerException: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter: boolean isWriteToStandardOut()>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule$_applyTo_closure2: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: boolean isPropertyAccessForName(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.rule.design.BooleanReturnTracker: boolean isNull(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.design.AbstractClassWithoutAbstractMethodAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryToStringAstVisitor$_visitGStringExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_visitConstructorOrMethod_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ModifiersUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.InlineViolationsParser$ParseResult: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitClosureExpression_closure8: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor$_isExpressionUsedInAnnotation_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3: java.lang.String getVarName()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void visitCatchStatement(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolations_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToModMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void visitCastExpression(org.codehaus.groovy.ast.expr.CastExpression)>",
    "<org.codenarc.report.XmlReportWriter: groovy.lang.Closure buildPackageElements(org.codenarc.results.Results)>",
    "<org.codenarc.rule.comments.JavadocConsecutiveEmptyLinesRule: void <clinit>()>",
    "<org.codenarc.report.HtmlReportWriter$_buildBodySection_closure1: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.ruleset.RuleSetBuilder: void <init>()>",
    "<org.codenarc.rule.formatting.LineLengthRule: boolean flagIfPackage(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGetterAstVisitor: void addUnnecessaryGetterViolation(org.codehaus.groovy.ast.expr.MethodCallExpression,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPublicModifierAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor$_getParameterDefinitionAsString_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure14: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.imports.ImportFromSamePackageRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.util.WildcardPattern: java.lang.String convertStringWithWildcardsToRegex(java.lang.String)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor: boolean isNotElementOfAnnotation(org.codehaus.groovy.ast.expr.ConstantExpression)>",
    "<org.codenarc.rule.convention.NoJavaUtilDateAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule: java.util.Map collectAllPrivateMethods(org.codehaus.groovy.ast.ModuleNode)>",
    "<org.codenarc.rule.security.ObjectFinalizeAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.braces.IfStatementBracesAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThreadGroupAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.plugin.disablerules.LookupTable: void setDisabledRulesByLine(int)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitClassComplete_closure5: java.lang.Object doCall(org.codehaus.groovy.ast.AnnotationNode)>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void checkMethodParameter(org.codehaus.groovy.ast.Parameter)>",
    "<org.codenarc.ant.CodeNarcTask$_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.results.DirectoryResults$_getTotalNumberOfFiles_closure5: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.LongLiteralWithLowerCaseLAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_addViolationsForMultipleFieldDeclarations_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3$_closure4: java.lang.String getVarName()>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceAstVisitor$_visitCatchStatement_closure2: org.codehaus.groovy.ast.stmt.CatchStatement getStatement()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: void <init>()>",
    "<org.codenarc.rule.generic.RequiredRegexRule: boolean isReady()>",
    "<org.codenarc.report.InlineXmlReportWriter$_buildViolationElement_closure1$_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonRule: void checkLastLineForSemicolon(org.codenarc.source.SourceCode,java.util.List,org.codehaus.groovy.ast.AnnotatedNode)>",
    "<org.codenarc.report.ReportWriterFactory$_getReportWriter_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.DuplicateMapKeyAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.StaticCalendarFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.AbstractSpaceAroundBraceAstVisitor: boolean isNotWhitespace(java.lang.String,int)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor: void <init>(java.lang.Class,java.util.Set)>",
    "<org.codenarc.rule.formatting.BracesForClassRule$_applyTo_closure1: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.design.AssignmentToStaticFieldFromInstanceMethodAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.convention.MethodReturnTypeRequiredAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.design.CloneWithoutCloneableAstVisitor: boolean isCloneable(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.ruleset.JsonReaderRuleSet$_setRuleProperties_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor$_visitDeclarationExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.UseOfNotifyMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_getViolations_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateUtil$_createSortedListOfAllRules_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.jdbc.DirectConnectionManagementAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.grails.GrailsDomainHasToStringAstVisitor$_visitClassComplete_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainCantReferenceServiceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitPublicPropertyAstVisitor: boolean isIgnoredPropertyName(org.codehaus.groovy.ast.PropertyNode)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryToStringAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIntegerInstantiationAstVisitor: void <init>()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.source.AbstractSourceCode: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter: java.lang.String getHtmlRuleDescription(org.codenarc.rule.Rule)>",
    "<org.codenarc.rule.groovyism.ExplicitStackInstantiationRule$1: void <init>(org.codenarc.rule.groovyism.ExplicitStackInstantiationRule,java.lang.Object)>",
    "<org.codenarc.rule.basic.EqualsAndHashCodeAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UseAssertSameInsteadOfAssertTrueRule: void <init>()>",
    "<org.codenarc.rule.exceptions.ConfusingClassNamedExceptionAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.junit.JUnitPublicPropertyAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.formatting.BracesForIfElseAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure25: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor: void visitMethodComplete(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.CodeNarcRunner$_applyPluginsProcessViolationsForFile_closure5: org.codenarc.plugin.FileViolations getFileViolations()>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryObjectReferencesAstVisitor: void accumulateOrError(java.lang.String,org.codehaus.groovy.ast.stmt.ExpressionStatement)>",
    "<org.codenarc.rule.grails.ClassConstraintsAndMapping: void <init>()>",
    "<org.codenarc.ant.CodeNarcTask: org.codenarc.results.Results executeRunnerWithConfiguredClasspath(java.lang.Object)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitClosureExpression_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertViolation(org.codenarc.rule.Violation,java.lang.Integer,java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_processMethodOrConstructorCall_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameRule$_toSet_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner: void registerPlugin(org.codenarc.plugin.CodeNarcPlugin)>",
    "<org.codenarc.rule.exceptions.ExceptionExtendsThrowableRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30$_closure31: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule: java.util.List collectAllPrivateFields(org.codehaus.groovy.ast.ModuleNode)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasOneStaticFieldNamedInstance_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.RuleSets: void <clinit>()>",
    "<org.codenarc.rule.exceptions.ReturnNullFromCatchBlockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedArrayRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure19: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: void visitCastExpression(org.codehaus.groovy.ast.expr.CastExpression)>",
    "<org.codenarc.report.XmlReportUtil$_cdata_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationAstVisitor$_visitConstructorCallExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildButtons_closure6: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.ruleset.JsonReaderRuleSet$_setRuleProperties_closure2: org.codenarc.rule.Rule getRule()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertyLockingAstVisitor: boolean isWriteLocked(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure26: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.ConsecutiveBlankLinesRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitClassEx_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter: java.lang.String formatSourceLine(java.lang.String,int)>",
    "<org.codenarc.rule.formatting.SpaceAroundMapEntryColonAstVisitor: java.lang.String mapEntrySourceLine(org.codehaus.groovy.ast.expr.MapEntryExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryToStringAstVisitor$_visitGStringExpression_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure24: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure11$_closure13$_closure14: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.InlineViolationsParser: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<org.codenarc.rule.StubRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUtil$_isAssertCallWithConstantValue_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.results.DirectoryResults: int getNumberOfViolationsWithPriority(int,boolean)>",
    "<org.codenarc.rule.groovyism.ExplicitTypeInstantiationAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.basic.EqualsOverloadedAstVisitor: boolean onlyArgumentHasTypeObject(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19$_closure20: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: int firstNonWhitespaceColumn(java.lang.String)>",
    "<org.codenarc.rule.logging.PrintlnAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_addViolationsForMultipleFieldDeclarations_closure7: java.lang.Object doCall(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_addClosureFields_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalRule$_getViolations_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10$_closure11: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule$1: void <init>(org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule,java.lang.Object)>",
    "<org.codenarc.source.AbstractSourceCode$_getLineNumberForCharacterIndex_closure2: java.lang.Integer getLineCount()>",
    "<org.codenarc.rule.formatting.BracesForTryCatchFinallyAstVisitor$_visitCatch_closure1: org.codenarc.rule.formatting.BracesForTryCatchFinallyRule getMyRule()>",
    "<org.codenarc.rule.concurrency.StaticMatcherFieldAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.concurrency.VolatileArrayFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor$_visitBlockStatement_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyTryBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_flexibleCheckForCorrectColumn_closure12: java.lang.Integer getChainedMethodDotColumn()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildViolationElement_closure6: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.NoJavaUtilDateAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: boolean isNamedLikeAConstant(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.report.SortableHtmlReportWriter: java.lang.String toString()>",
    "<org.codenarc.ruleset.XmlFileRuleSet$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.StatelessClassRule: boolean isReady()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: java.lang.String parentPackageName(java.lang.String)>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_visitConstructorOrMethod_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllPackageSections_closure5$_closure17: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor: boolean isSubclass(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.comments.AbstractJavadocEmptyTagRule: java.lang.String buildRegex()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.convention.ConfusingTernaryRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.AbstractSourceCode: java.lang.String line(int)>",
    "<org.codenarc.rule.convention.InvertedIfElseAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainHasEqualsAstVisitor$_visitClassComplete_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin: void removeMatchingViolation(java.util.List,org.codenarc.report.BaselineViolation)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure18: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.comments.JavadocEmptyAuthorTagRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_writeReport_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure19$_closure23: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCallForLastElementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.WildcardPattern$_convertStringWithWildcardsToRegex_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.util.io.DefaultResourceFactory: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4$_closure13: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule$_addOrderingViolations_closure1: java.lang.Object doCall(int,java.lang.String)>",
    "<org.codenarc.tool.GenerateRuleIndexPage: void main(java.lang.String[])>",
    "<org.codenarc.rule.groovyism.GStringAsMapKeyAstVisitor: void visitMapEntryExpression(org.codehaus.groovy.ast.expr.MapEntryExpression)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_generateAllPossibleParameterSignatures_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processImports_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintRule: void <init>()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySubstringAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.CompareToWithoutComparableRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_removeInitializedField_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.naming.ParameterNameAstVisitor: void processParameters(org.codehaus.groovy.ast.Parameter[],java.lang.String)>",
    "<org.codenarc.rule.convention.InvertedConditionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.InlineXmlReportWriter$_buildViolationElement_closure1$_closure3: org.codenarc.rule.Violation getViolation()>",
    "<org.codenarc.rule.formatting.BlockStartsWithBlankLineAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.AbstractSourceCode: int getLineNumberForCharacterIndex(int)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure4: org.codenarc.results.Results getResults()>",
    "<org.codenarc.CodeNarcRunner: void writeReports(org.codenarc.AnalysisContext,org.codenarc.results.Results)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: void visitIfElseThatIsTheLastStatementInABlock(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner: void registerPluginsForClassNames(java.lang.String)>",
    "<org.codenarc.ruleset.JsonFileRuleSet: void <clinit>()>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor$_visitConstructorOrMethod_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.basic.EmptyCatchBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitSwitch_closure9: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.MultipleLoggersAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ParameterCountAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UseAssertFalseInsteadOfNegationRule: void <init>()>",
    "<org.codenarc.tool.GenerateRuleSetAllRulesByCategory: void main(java.lang.String[])>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor: boolean isOneLiner(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor$_methodReturnsArray_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.ClassForNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor: void visitMapExpression(org.codehaus.groovy.ast.expr.MapExpression)>",
    "<org.codenarc.test.AbstractTestCase: void <init>()>",
    "<org.codenarc.rule.security.JavaIoPackageAccessRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_flexibleCheckForCorrectColumn_closure10: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.JsonReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.AddEmptyStringAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.basic.DuplicateSetValueAstVisitor$_visitCastExpression_closure1: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean isReturnFalse(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.junit.UseAssertFalseInsteadOfNegationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.EmptyMethodInAbstractClassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.WildcardPattern$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsServletContextReferenceRule: void <init>()>",
    "<org.codenarc.util.SourceCodeUtil: java.util.List sourceLinesBetween(org.codenarc.source.SourceCode,int,int,int,int)>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor$_visitMethodEx_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.DeadCodeAstVisitor$_visitBlockStatement_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertyLockingAstVisitor: void saveMethodInfo(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.IdeTextReportWriter: java.lang.String getViolationLocationString(org.codenarc.rule.Violation,java.lang.String)>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.AssignmentInConditionalAstVisitor: void addViolationIfAssignment(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.MultipleUnaryOperatorsAstVisitor: void checkForSecondUnaryOperator(org.codehaus.groovy.ast.expr.Expression,java.lang.Class)>",
    "<org.codenarc.rule.unused.UnusedArrayAstVisitor: void visitExpressionStatement(org.codehaus.groovy.ast.stmt.ExpressionStatement)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.junit.UnnecessaryFailRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor$_visitConstructorOrMethod_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor$_visitListExpression_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer: java.util.List collectViolations(org.codenarc.source.SourceCode,org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.rule.basic.HardCodedWindowsRootDirectoryRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitTypeInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_visitConstructorOrMethod_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCastAstVisitor: void <clinit>()>",
    "<org.codenarc.results.DirectoryResults: void <init>(java.lang.String,int)>",
    "<org.codenarc.rule.convention.FieldTypeRequiredAstVisitor: boolean isIgnoredFieldName(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementAstVisitor: boolean allBranchesReturn(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.tool.GenerateCodeNarcRulesProperties$_main_closure1$_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_visitConstructorOrMethod_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllSummaryByPackageRowsRecursively_closure3$_closure13: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitConstructorOrMethod_closure1: org.codehaus.groovy.ast.MethodNode getNode()>",
    "<org.codenarc.rule.AbstractRuleTestCase: void setUpAbstractRuleTestCase()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitLostTestAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BracesForTryCatchFinallyAstVisitor$_visitCatch_closure1: java.lang.Object doCall(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.rule.logging.LogUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ConsecutiveUtils: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.braces.WhileStatementBracesAstVisitor: void visitWhileLoop(org.codehaus.groovy.ast.stmt.WhileStatement)>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.VariableTypeRequiredRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ClassSizeRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.PrintlnAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_increaseIndentForClosureBlocks_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.EqualsAndHashCodeAstVisitor$_visitClassEx_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule$_addOrderingViolations_closure1: java.util.List getViolations()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27$_closure29: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ant.CodeNarcTask: void checkMaxViolationForPriority(int,int,java.lang.String)>",
    "<org.codenarc.ruleset.RuleSetDelegate$_methodMissing_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.SortableHtmlReportWriter: groovy.lang.Closure buildSummary(org.codenarc.results.Results)>",
    "<org.codenarc.rule.exceptions.MissingNewInThrowStatementAstVisitor: boolean looksLikeAnExceptionType(java.lang.String)>",
    "<org.codenarc.tool.GenerateRuleSetAllRules: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.GroovyDslRuleSet$_createGroovyShell_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10$_closure11$_closure12: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.basic.DuplicateSetValueAstVisitor$_visitCastExpression_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.size.CrapMetricAstVisitor: void <init>(org.gmetrics.metric.crap.CrapMetric)>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.SourceString: void setPath(java.lang.String)>",
    "<org.codenarc.rule.serialization.SerialVersionUIDAstVisitor: void visitProperty(org.codehaus.groovy.ast.PropertyNode)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin: void addFilesWithViolations(java.util.List,org.codenarc.results.Results)>",
    "<org.codenarc.rule.design.SimpleDateFormatMissingLocaleAstVisitor: boolean hasMinimumParameterCount(org.codehaus.groovy.ast.expr.ConstructorCallExpression,int)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckAstVisitor: boolean isNotNullCheckAgainstSuperReference(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.logging.LoggerForDifferentClassAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitMapExpression_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.grails.GrailsDomainHasToStringAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: boolean isExpressionAccessingMemberNamed(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.rule.InlineViolationsParser: org.codenarc.rule.InlineViolationsParser$ParseResult parse(java.lang.String)>",
    "<org.codenarc.rule.convention.CouldBeElvisRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.CloseWithoutCloseableAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: boolean isSingleLineClassViolation()>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionAstVisitor: void <clinit>()>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryStringInstantiationAstVisitor: boolean isConstructorCallAViolation(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.basic.EmptyCatchBlockAstVisitor: boolean isExceptionIgnored(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor$_argumentsContainThis_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.DeadCodeAstVisitor: boolean statementForcesMethodReturn(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_initializeImportNames_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.CouldBeSwitchStatementAstVisitor: java.lang.Boolean isSupportedLeftExpressionType(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.grails.GrailsDomainHasToStringRule: void <init>()>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitMapExpression_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor: void <init>()>",
    "<org.codenarc.report.XmlReportWriter$_buildRulesElement_closure9$_closure19$_closure20: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_isAnnotatedWithOverride_closure6: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaRule$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.naming.PropertyNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ant.CodeNarcTask: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildRulesElement_closure9$_closure19$_closure20: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner$_applyPluginsProcessViolationsForAllFiles_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintAstVisitor$_visitMethodCallExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainHasEqualsAstVisitor$_visitClassComplete_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryTearDownAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllPackageSections_closure5: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.junit.SpockIgnoreRestUsedRule: void <init>()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ToStringReturnsNullAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer: void processFile(java.lang.String,org.codenarc.results.DirectoryResults,org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.rule.exceptions.ExceptionExtendsThrowableAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.CloneableWithoutCloneAstVisitor$_visitClassEx_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.StaticFieldsBeforeInstanceFieldsAstVisitor: void visitClassComplete(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.ruleset.MovedRules: org.codenarc.ruleset.MovedRules$Renamed renamedTo(java.lang.String)>",
    "<org.codenarc.ruleset.RuleSetUtil: org.codenarc.rule.Rule loadRuleScriptFile(java.lang.String)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.report.XmlReportWriter$_buildFileElement_closure5$_closure16: org.codenarc.results.FileResults getResults()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_getViolations_closure1$_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitClassEx_closure4: org.codehaus.groovy.ast.ClassNode getNode()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure5$_closure13$_closure14: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_initializeImportNames_closure5: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: org.codehaus.groovy.ast.stmt.Statement getStatement(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonAstVisitor: void removeAnyViolationsForSameLine(int)>",
    "<org.codenarc.rule.FieldReferenceAstVisitor: java.util.Collection getUnreferencedFields()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryLongInstantiationAstVisitor: void <init>()>",
    "<org.codenarc.rule.AbstractAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.ant.CodeNarcTask$_classLoaderForPaths_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_getFirstValue_closure4: java.util.List getKeys()>",
    "<org.codenarc.report.XmlReportWriter$_writeReport_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.JUnitSetUpCallsSuperAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.design.CloneWithoutCloneableRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.DoubleCheckedLockingAstVisitor: java.lang.String getNullCheckVariableName(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.report.SortableHtmlReportWriter: java.util.List getFileResults(org.codenarc.results.Results,java.util.List)>",
    "<org.codenarc.rule.convention.NoDoubleAstVisitor: boolean isDoubleTypeName(java.lang.String)>",
    "<org.codenarc.rule.basic.DeadCodeAstVisitor$_visitBlockStatement_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.results.FileResults$_getNumberOfViolationsWithPriority_closure1: int getPriority()>",
    "<org.codenarc.ruleset.XmlFileRuleSet$_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor: boolean checkAdditional(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.report.XmlReportWriter: groovy.lang.Closure buildSourceLineElement(org.codenarc.rule.Violation)>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertValidRegex(java.lang.String,java.lang.String)>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfViolationsWithPriority_closure3: boolean getRecursive()>",
    "<org.codenarc.report.BaselineXmlReportWriter: void writeReport(java.io.Writer,org.codenarc.AnalysisContext,org.codenarc.results.Results)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure11$_closure13: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.ConsecutiveLiteralAppendsAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.junit.JUnitAssertEqualsConstantActualValueAstVisitor: boolean isJUnitAssert(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.basic.AssertWithinFinallyBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processImports_closure1: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.basic.RemoveAllOnSelfRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor: void checkClass(org.gmetrics.result.ClassMetricResult,org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.source.CustomCompilerPhaseSourceDecorator: void <init>(org.codenarc.source.SourceCode,int)>",
    "<org.codenarc.tool.GenerateUtil: java.util.List createSortedListOfAllRules()>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: void processMethodNode(org.codehaus.groovy.ast.MethodNode,java.lang.String)>",
    "<org.codenarc.rule.junit.JUnitUtil: boolean isAssertCallWithLiteralValue(org.codehaus.groovy.ast.expr.MethodCallExpression,java.lang.String,boolean)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.naming.PackageNameMatchesFilePathRule: boolean isReady()>",
    "<org.codenarc.rule.junit.JUnitPublicPropertyAstVisitor: void visitProperty(org.codehaus.groovy.ast.PropertyNode)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsNotBlankLineAfterOpeningBrace_closure2: java.lang.Integer getClassStartLine()>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure6: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.ExplicitTreeSetInstantiationRule: java.lang.Object this$dist$get$3(java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.PrintlnAstVisitor$_visitClassEx_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GStringAsMapKeyRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfFilesWithViolations_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor$_visitCastExpression_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.source.SourceString: void <init>(java.lang.String,java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryParenthesesForMethodCallWithClosureRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.StatelessClassRule: boolean matchesIgnoreFieldNames(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaRule$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertInlineViolations(java.lang.String)>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: java.lang.String getName()>",
    "<org.codenarc.rule.basic.DeadCodeAstVisitor$_visitBlockStatement_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllSummaryByPackageRowsRecursively_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.BaselineViolation: void <init>(java.lang.String,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstantiationToGetClassAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.FileResults$_getNumberOfViolationsWithPriority_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUtil$_isAssertCallWithNonNullConstantValue_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoJavaUtilDateAstVisitor$_visitImports_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter: void writeReport(java.io.Writer,org.codenarc.AnalysisContext,org.codenarc.results.Results)>",
    "<org.codenarc.rule.formatting.ClosureStatementOnOpeningLineOfMultipleLineClosureAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_writeReport_closure1$_closure8: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.junit.AssertionTrap$_methodNamesCountsAsAssertion_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void registerConstructorCalls(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildViolationElement_closure6$_closure15: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.ArrayReturnTracker: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule$1: void <init>(org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule,java.lang.Object)>",
    "<org.codenarc.ruleset.MovedRules$Renamed: java.lang.String messageFor(java.lang.String)>",
    "<org.codenarc.util.ModifiersUtil: int parseSingleModifier(java.lang.String)>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule: java.lang.Object this$dist$invoke$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.ruleset.RuleSetDelegate$_findRule_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_visitMethodEx_closure1: org.codehaus.groovy.ast.MethodNode getNode()>",
    "<org.codenarc.rule.formatting.MissingBlankLineAfterImportsRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor: void visitListExpression(org.codehaus.groovy.ast.expr.ListExpression)>",
    "<org.codenarc.report.SortableHtmlReportWriter: groovy.lang.Closure buildBodySection(org.codenarc.AnalysisContext,org.codenarc.results.Results)>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unnecessary.AddEmptyStringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ClassNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UseAssertTrueInsteadOfAssertEqualsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.CloneableWithoutCloneAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.junit.UseAssertSameInsteadOfAssertTrueRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGetterAstVisitor: void addViolationsIfGetter(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.AbstractConstructorCallAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDuplicateMappingAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_setupFlexibleIndentForAnyClosureParameterBlocks_closure6: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.plugin.FileViolations: void <init>(org.codenarc.results.FileResults)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameRule$_toSet_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.results.FileResults: int getNumberOfViolationsWithPriority(int)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure13: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor: boolean hasOneStaticFieldOfItself(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.grails.GrailsMassAssignmentAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.CodeNarcRunner$_writeReports_closure8: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.ConfusingTernaryAstVisitor: void addViolationForNotExpression(org.codehaus.groovy.ast.expr.TernaryExpression,org.codehaus.groovy.ast.expr.NotExpression)>",
    "<org.codenarc.rule.groovyism.UseCollectNestedAstVisitor: void <init>()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildButtons_closure6$_closure30: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.util.io.UrlResource: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalClassMemberRule: void setAllowedFieldModifiers(java.lang.String)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildViolationElement_closure6: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.JUnitUtil$_isAssertCallWithNonNullConstantValue_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyStaticInitializerAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule$_applyTo_closure2: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.logging.LoggingSwallowsStacktraceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.InlineViolationsParser$ParseResult: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.logging.SystemErrPrintRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.plugin.disablerules.LookupTable: void <clinit>()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_flexibleCheckForCorrectColumn_closure13: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectionCallAstVisitor: void <clinit>()>",
    "<org.codenarc.util.ImportUtil: java.util.List getNonStaticImportsSortedByLineNumber(org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.security.NonFinalPublicFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.TopLevelDelegate: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.basic.EmptyElseBlockAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.AbstractRuleTestCase$_removeSuppressedViolations_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor: boolean hasSingletonAnnotation(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.rule.size.MethodSizeAstVisitor: boolean isIgnoredMethodName(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeRule: void <init>()>",
    "<org.codenarc.rule.serialization.EnumCustomSerializationIgnoredAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryConstructorAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.util.WildcardPattern$_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportParser$_parseBaselineXmlReport_closure2$_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter: void writeFooter(java.io.Writer)>",
    "<org.codenarc.rule.basic.EmptyForStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner: void applyPluginsProcessViolationsForFile(org.codenarc.results.FileResults)>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility: org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility valueOf(java.lang.String)>",
    "<org.codenarc.rule.design.CloseWithoutCloseableAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryStringInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.InlineViolationsParser$_parseLine_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ComparisonOfTwoConstantsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitPublicNonTestMethodRule: void setIgnoreMethodsWithAnnotations(java.lang.String)>",
    "<org.codenarc.ruleset.JsonFileRuleSet$_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14$_closure16: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4: org.codenarc.results.Results getResults()>",
    "<org.codenarc.report.HtmlReportWriter$_buildBodySection_closure1$_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter: boolean isRoot(org.codenarc.results.Results)>",
    "<org.codenarc.rule.convention.NoDefRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.serialization.SerializableClassMustDefineSerialVersionUIDAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.tool.GenerateRuleSetAllRules: void main(java.lang.String[])>",
    "<org.codenarc.rule.concurrency.SynchronizedMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleregistry.PropertiesFileRuleRegistry: void <clinit>()>",
    "<org.codenarc.rule.naming.ClassNameSameAsFilenameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_writeReport_closure1$_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.VolatileArrayFieldAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_findRule_closure3: java.lang.String getName()>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitClassEx_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.comments.ClassJavadocRule$_applyTo_closure1: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.junit.JUnitFailWithoutMessageRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoJavaUtilDateAstVisitor: void visitImports(org.codehaus.groovy.ast.ModuleNode)>",
    "<org.codenarc.rule.convention.NoDefAstVisitor$_visitParameters_closure2: java.lang.Object doCall(org.codehaus.groovy.ast.Parameter)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySelfAssignmentAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.basic.DuplicateCaseStatementRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.OptionalCollectionReturnTypeAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14$_closure15: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor: void addViolationWithMessage(org.codehaus.groovy.ast.expr.MethodCallExpression,org.codehaus.groovy.ast.expr.PropertyExpression)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: boolean isMatchingField(org.codehaus.groovy.ast.FieldNode,java.lang.String)>",
    "<org.codenarc.rule.convention.IfStatementCouldBeTernaryAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.CodeNarcRunner$_writeReports_closure7: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.basic.EqualsAndHashCodeAstVisitor$_visitClassEx_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.analyzer.FilesystemSourceAnalyzer: org.codenarc.results.Results analyze(org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin$_addFilesWithViolations_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.ClassReferenceAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.security.InsecureRandomRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase: java.lang.String inlineViolation(java.lang.String)>",
    "<org.codenarc.rule.convention.HashtableIsObsoleteRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.InstanceofAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.basic.DuplicateSetValueAstVisitor: boolean isDuplicate(org.codehaus.groovy.ast.expr.Expression,java.util.List)>",
    "<org.codenarc.rule.basic.EmptyClassRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarc$__clinit__closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ThrowExceptionFromFinallyBlockAstVisitor: void visitThrowStatement(org.codehaus.groovy.ast.stmt.ThrowStatement)>",
    "<org.codenarc.rule.InlineViolationsParser: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThreadYieldAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.basic.EmptyMethodAstVisitor$_visitMethod_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: void visitVariableExpression(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.rule.junit.CoupledTestCaseAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: java.util.Collection interfaceMethods(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.JsonReportWriter: java.util.Map buildFileElement(org.codenarc.results.FileResults)>",
    "<org.codenarc.report.XmlReportUtil$_cdata_closure1: java.lang.String getText()>",
    "<org.codenarc.rule.basic.ThrowExceptionFromFinallyBlockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyStaticInitializerRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter$_getSortedRules_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.JsonReportWriter: java.util.Map buildViolationElement(org.codenarc.rule.Violation)>",
    "<org.codenarc.rule.junit.UseAssertNullInsteadOfAssertEqualsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalClassMemberAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.concurrency.NestedSynchronizationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30$_closure32: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitSwitch_closure9: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.SpockIgnoreRestUsedAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21: org.codenarc.rule.Rule getRule()>",
    "<org.codenarc.report.XmlReportWriter: void writeReport(java.io.Writer,org.codenarc.AnalysisContext,org.codenarc.results.Results)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitListExpression_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.BracesForMethodAstVisitor: boolean containsOpeningBraceAfterParenthesis(java.lang.String)>",
    "<org.codenarc.util.CodeNarcVersion: void <clinit>()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure11: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void <init>()>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_findRule_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.BusyWaitAstVisitor: void addViolationIfBusyWait(org.codehaus.groovy.ast.stmt.LoopingStatement)>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_collectAllPrivateFields_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitBlockStatement_closure8: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTernaryExpressionAstVisitor: boolean areBothTheSame(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.concurrency.StaticDateFormatFieldAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: boolean isGetterUnsynchronizedAndSetterSychronized(java.util.List,java.lang.String)>",
    "<org.codenarc.rule.convention.PublicMethodsBeforeNonPublicMethodsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.junit.CoupledTestCaseAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitClassComplete_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.InlineViolationsParser: java.lang.String unescape(java.lang.String)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToEqualsMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_getViolations_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToMultiplyMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.SwallowThreadDeathAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonRule$_processImports_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceAfterElseAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter: java.util.Map buildSummaryElement(org.codenarc.results.Results)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.groovyism.UseCollectManyAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void visitWhileLoop(org.codehaus.groovy.ast.stmt.WhileStatement)>",
    "<org.codenarc.ruleset.MovedRules$Renamed: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.concurrency.StaticCalendarFieldAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsPublicControllerMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitClassEx_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure19$_closure23: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.AssignCollectionSortRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase: org.codenarc.source.SourceCode prepareSourceCode(java.lang.String)>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_applyTo_closure2: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.ruleset.FilteredRuleSet: java.util.List getRules()>",
    "<org.codenarc.rule.comments.JavadocEmptyLastLineRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateUtil: java.util.List sortRules(java.util.List)>",
    "<org.codenarc.rule.convention.PublicMethodsBeforeNonPublicMethodsAstVisitor: void visitMethodComplete(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.basic.EmptySynchronizedStatementAstVisitor: void visitSynchronizedStatement(org.codehaus.groovy.ast.stmt.SynchronizedStatement)>",
    "<org.codenarc.rule.formatting.SpaceBeforeClosingBraceAstVisitor: void processMethodNode(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.formatting.SpaceAfterClosingBraceAstVisitor: void addClosingBraceViolation(org.codehaus.groovy.ast.ASTNode,java.lang.String)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildProjectElement_closure3$_closure9: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.Violation: java.lang.String toString()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: org.codehaus.groovy.ast.MethodNode getFirstValue(java.util.Map,java.util.List)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor$_expressionContainsBannedCharacters_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor$_visitConstantExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ParameterReassignmentAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.InterfaceNameSameAsSuperInterfaceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.exceptions.CatchIndexOutOfBoundsExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.TrailingCommaRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildLogo_closure6: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor$_processParameters_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure11$_closure13: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.imports.DuplicateImportRule$_applyTo_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.imports.UnusedImportRule: void processImports(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleScriptElements_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySetterAstVisitor: boolean isSuperCall(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.BlockEndsWithBlankLineAstVisitor: void checkForViolations(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor$_visitConstantExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.TopLevelDelegate: void <init>()>",
    "<org.codenarc.rule.junit.JUnitPublicNonTestMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.logging.LoggerWithWrongModifiersAstVisitor: void addViolationForField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.UseCollectNestedRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConstantExpressionExtractor: java.util.List extractFrom(org.codehaus.groovy.ast.AnnotationNode)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassComplete_closure5: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.naming.AbstractTypeNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ReturnFromFinallyBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarc$_execute_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.InsecureRandomAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter: java.lang.String buildTitle()>",
    "<org.codenarc.rule.junit.JUnitLostTestAstVisitor$_visitClass_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin$_removeMatchingViolation_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitClosureExpression_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectIncludedProperties_closure8: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin$_addFilesWithViolations_closure3: java.util.List getMap()>",
    "<org.codenarc.results.FileResults: org.codenarc.results.Results findResultsForPath(java.lang.String)>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BlockStartsWithBlankLineRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertViolation(org.codenarc.rule.Violation,java.lang.Integer,java.lang.String)>",
    "<org.codenarc.rule.exceptions.ThrowExceptionRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.naming.AbstractClassNameAstVisitor: boolean shouldVisit(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: void visitVariableExpression(org.codehaus.groovy.ast.expr.VariableExpression)>",
    "<org.codenarc.rule.convention.MethodParameterTypeRequiredAstVisitor$_visitConstructorOrMethod_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBigIntegerInstantiationAstVisitor: void <init>()>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19$_closure21$_closure22: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.source.SourceCodeCriteria: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BracesForIfElseAstVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_setRuleProperties_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.ComparisonOfTwoConstantsAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet$_loadRuleScriptElements_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.JavadocConsecutiveEmptyLinesRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.logging.MultipleLoggersAstVisitor: void <init>()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildButtons_closure6: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_getViolations_closure1: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_getMethodCallsAndMapKeys_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.StaticDateFormatFieldAstVisitor: boolean isDateFormatFactoryMethodCall(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGetterAstVisitor: boolean isMatchingGetterMethodName(java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryObjectReferencesAstVisitor$_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildCSS_closure2$_closure9: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults$_getNumberOfFilesWithViolations_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_findSuperClassMethods_closure7: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure19: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCastAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: boolean isNotDollarInsideGString(java.lang.String,int)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor$_methodReturnsArray_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure5$_closure13$_closure14: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceAstVisitor: void visitMapEntryExpression(org.codehaus.groovy.ast.expr.MapEntryExpression)>",
    "<org.codenarc.rule.security.NonFinalPublicFieldAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule: org.codenarc.rule.AstVisitor getAstVisitor(org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.AssignmentToStaticFieldFromInstanceMethodAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure29: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateNumberLiteralRule$_defineAdditionalChecksClosure_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.basic.HardCodedWindowsFileSeparatorAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.UnnecessaryFailAstVisitor$_visitCatchStatement_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllPackageSections_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.io.UrlResource: java.io.InputStream getInputStream()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildScript_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.DoubleNegativeAstVisitor: void visitNotExpression(org.codehaus.groovy.ast.expr.NotExpression)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_writeReport_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.AssignCollectionSortAstVisitor: void visitDeclarationExpression(org.codehaus.groovy.ast.expr.DeclarationExpression)>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor$_visitArgumentlistExpression_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void checkAssignmentWithinString(org.codehaus.groovy.ast.ASTNode,java.lang.String)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor: void addInitializedField(java.lang.String)>",
    "<org.codenarc.report.BaselineViolation: java.lang.String toString()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12$_closure15$_closure16: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryObjectReferencesRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults$_getViolations_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.IndentationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_removeInitializedField_closure5: java.lang.String getVarName()>",
    "<org.codenarc.rule.generic.IllegalStringRule: boolean isReady()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor: void <init>()>",
    "<org.codenarc.ant.Report: void <init>()>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule$_applyTo_closure1: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.imports.UnusedImportRule$_findReference_closure3: java.lang.String getClassName()>",
    "<org.codenarc.plugin.disablerules.DisableRulesInCommentsPlugin: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.braces.ElseBlockBracesAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BlockEndsWithBlankLineAstVisitor: void visitTryCatchFinally(org.codehaus.groovy.ast.stmt.TryCatchStatement)>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor$_visitConstructorOrMethod_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.util.ModifiersUtil$_parseModifiers_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.CompareToWithoutComparableAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryFinalOnPrivateMethodAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.junit.JUnitUtil: boolean isTestMethod(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.ruleset.JsonReaderRuleSet$_loadRuleElements_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.naming.ConfusingMethodNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_findMatchingSuperClassMethod_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.InlineViolationsParser$ParseResult: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.generic.IllegalClassMemberRule: void setAllowedPropertyModifiers(java.lang.String)>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedHashMapInstantiationRule: void this$dist$set$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.convention.NoDoubleRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.SourceFile: java.lang.String getText()>",
    "<org.codenarc.ruleset.MovedRules: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure18$_closure22: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertTwoViolations(java.lang.String,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.String)>",
    "<org.codenarc.rule.unused.UnusedObjectRule: void <init>()>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: void checkType(java.lang.String,org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: int indentLevelFromColumn(int)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitBlockStatement_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitTestMethodWithoutAssertRule: void <init>()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14: boolean getAllPackages()>",
    "<org.codenarc.report.TextReportWriter: void writeSummary(java.io.Writer,org.codenarc.results.Results)>",
    "<org.codenarc.results.DirectoryResults: void removeViolation(org.codenarc.rule.Violation)>",
    "<org.codenarc.rule.basic.EmptyTryBlockAstVisitor: void visitTryCatchFinally(org.codehaus.groovy.ast.stmt.TryCatchStatement)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_flexibleCheckForCorrectColumn_closure13: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainGormMethodsRule: java.lang.String getGormStaticMethodsNames()>",
    "<org.codenarc.rule.basic.ExplicitGarbageCollectionAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.ruleset.RuleSetUtil$_loadRuleScriptFile_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.VectorIsObsoleteRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.AbstractSourceCode: void logCompilationError(java.lang.Throwable)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasOneStaticFieldOfItself_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_findSuperClassMethods_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10$_closure11$_closure12: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.imports.NoWildcardImportsRule$_applyTo_closure2: java.util.List getViolations()>",
    "<org.codenarc.rule.basic.BrokenOddnessCheckAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.IfStatementCouldBeTernaryRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_visitClassComplete_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.exceptions.CommonCatchAstVisitor: void <init>(java.lang.String)>",
    "<org.codenarc.rule.basic.BigDecimalInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.InterfaceNameRule: boolean isReady()>",
    "<org.codenarc.rule.basic.EmptyElseBlockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptySwitchStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3$_closure4: org.codehaus.groovy.ast.expr.VariableExpression getVarExpression()>",
    "<org.codenarc.rule.comments.JavadocEmptyExceptionTagRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.CouldBeSwitchStatementAstVisitor: void checkIfStatementCanBeSwitch(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallAstVisitor: boolean isPossibleViolation(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_printRuleProcessingTimes_closure5: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor$_isUsedInAnyAnnotationOnCurrentAnnotatedNode_closure1: org.codehaus.groovy.ast.expr.ConstantExpression getConstantExpression()>",
    "<org.codenarc.report.XmlReportWriter$_writeReport_closure1: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.dry.DuplicateNumberLiteralRule: groovy.lang.Closure defineAdditionalChecksClosure()>",
    "<org.codenarc.rule.formatting.BracesForClassRule: boolean definesAnnotationType(java.lang.String)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void visitSynchronizedStatement(org.codehaus.groovy.ast.stmt.SynchronizedStatement)>",
    "<org.codenarc.rule.formatting.IndentationRule: void <init>()>",
    "<org.codenarc.rule.unused.AbstractLastStatementInBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor$_processParameters_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.ruleregistry.RuleRegistryHolder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.SpockIgnoreRestUsedAstVisitor$_visitMethod_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.AbstractReportWriter: void writeReportToFile(org.codenarc.AnalysisContext,org.codenarc.results.Results)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasSingletonAnnotation_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: java.lang.Boolean memoizedMethodPriv$isSingleLineClassClassNode(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.ruleset.RuleSetDelegate: void <init>(org.codenarc.ruleset.RuleSet)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_visitClassEx_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitStackInstantiationRule: java.lang.Object this$dist$invoke$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule: void this$dist$set$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_flexibleCheckForCorrectColumn_closure12: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.JavadocEmptySeeTagRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDuplicateConstraintAstVisitor: java.util.Collection extractImportedConstraints(java.lang.String)>",
    "<org.codenarc.rule.concurrency.ThreadGroupAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.NonFinalPublicFieldAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolations_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.AbstractReportWriter: java.lang.String getDescriptionForRule(org.codenarc.rule.Rule)>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin$_removeMatchingViolation_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.ImportUtil: java.lang.String packageNameForImport(org.codehaus.groovy.ast.ImportNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure24: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.AbstractReportWriter$_getSortedRules_closure5: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.basic.AbstractFinallyAstVisitor$_isStatementWithinFinally_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.naming.ScopedConfusingMethodNameAstVisitor$_visitMethodEx_closure1: java.lang.String getMethodName()>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: void checkIfThereIsNotBlankLineBeforeClosingBrace(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_visitBlockStatement_closure8: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: boolean containsKey(java.util.Map,java.util.List)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDefInMethodDeclarationAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.rule.design.BooleanMethodReturnsNullAstVisitor: void handleClosure(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.naming.VariableNameAstVisitor$_visitDeclarationExpression_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_writeReport_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.SynchronizedReadObjectMethodAstVisitor$_isSerializable_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor: void visitDeclarationExpression(org.codehaus.groovy.ast.expr.DeclarationExpression)>",
    "<org.codenarc.rule.size.MethodSizeRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.ConsecutiveLiteralAppendsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalRule$_getViolations_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void flexibleCheckForCorrectColumn(org.codehaus.groovy.ast.ASTNode,java.lang.String,org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.rule.design.EmptyMethodInAbstractClassAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor: boolean isProcessingAnnotatedNode()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor$_visitConstructorOrMethod_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedObjectAstVisitor: void visitExpressionStatement(org.codehaus.groovy.ast.stmt.ExpressionStatement)>",
    "<org.codenarc.ruleset.JsonReaderRuleSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.serialization.SerializableClassMustDefineSerialVersionUIDAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.formatting.BracesForClassRule$_applyTo_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.security.PublicFinalizeMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThreadGroupAstVisitor: void visitConstructorCallExpression(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.report.XmlReportWriter$_buildViolationElement_closure6: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.report.SortableHtmlReportWriter$ViolationAndPath: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: void visitIfElseThatIsNotTheLastStatementInABlock(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.basic.EmptyIfStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitTestMethodWithoutAssertAstVisitor: boolean checksTimeout(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.junit.JUnitFailWithoutMessageRuleAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter$_buildPackageElements_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToMultiplyMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_getFileResults_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.AbstractSpaceAroundBraceAstVisitor: boolean isNotCharacter(java.lang.String,char,int)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_visitConstructorOrMethod_closure3: org.codehaus.groovy.ast.MethodNode getNode()>",
    "<org.codenarc.rule.logging.SystemErrPrintAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: java.lang.String uniqueAndSortedDeclaringClassNames(java.util.Collection)>",
    "<org.codenarc.rule.imports.ImportFromSamePackageRule$_applyTo_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.naming.ConfusingMethodNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: java.lang.String getLastLine(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToMethodAstVisitor: void safelyAddViolation(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_visitClassComplete_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildFileElement_closure4$_closure12: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor$_expressionContainsBannedCharacters_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.convention.ImplicitReturnStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure26: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.ConsecutiveStringConcatenationAstVisitor: boolean isJoinableType(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToGetAtMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.ClassReferenceAstVisitor$_visitImports_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.serialization.SerializableClassMustDefineSerialVersionUIDRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure5: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.dry.DuplicateListLiteralRule: void <init>()>",
    "<org.codenarc.report.JsonReportWriter$_buildFileElement_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.SourceString: java.lang.String toString()>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility: org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility next()>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor: void <init>()>",
    "<org.codenarc.rule.basic.BitwiseOperatorInConditionalAstVisitor: java.util.List collectChildren(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.logging.PrintlnRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ComparisonWithSelfAstVisitor: void addViolationIfBothAreTheSameVariable(org.codehaus.groovy.ast.ASTNode,org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsAstVisitor$_visitMethodCallExpression_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: boolean isComparisonWithNull(org.codehaus.groovy.ast.expr.BinaryExpression,java.lang.String)>",
    "<org.codenarc.tool.GenerateRuleIndexPage: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor$_extractTransients_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitTestMethodWithoutAssertAstVisitor: boolean statementContainsAssertions(org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.ClassEndsWithBlankLineAstVisitor$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.CompositeRuleSet: java.util.List getRules()>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure3$_closure7: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.util.PathUtil: java.lang.String getParentPath(java.lang.String)>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility: org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility previous()>",
    "<org.codenarc.rule.formatting.BracesForForLoopAstVisitor: void visitForLoop(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.rule.design.OptionalCollectionReturnTypeAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.ruleset.TopLevelDelegate: void ruleset(java.lang.String,groovy.lang.Closure)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor: void <init>()>",
    "<org.codenarc.ruleset.MovedRules: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.basic.BooleanGetBooleanAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.generic.IllegalClassMemberRule: void setIllegalFieldModifiers(java.lang.String)>",
    "<org.codenarc.rule.design.AssignmentToStaticFieldFromInstanceMethodAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitArrayListInstantiationRule$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.dry.DuplicateStringLiteralRule$_defineAdditionalChecksClosure_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ClassForNameAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.groovyism.ConstantExpressionExtractor: java.util.List extractFromExpression(org.codehaus.groovy.ast.expr.AnnotationConstantExpression)>",
    "<org.codenarc.rule.convention.ImplicitClosureParameterAstVisitor$_hasItParameter_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_initializeImportNames_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.RuleSetUtil: void assertClassImplementsRuleInterface(java.lang.Class)>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor: void visitMapExpression(org.codehaus.groovy.ast.expr.MapExpression)>",
    "<org.codenarc.results.DirectoryResults: org.codenarc.results.Results findResultsForPath(java.lang.String)>",
    "<org.codenarc.rule.naming.PropertyNameRule: void validate()>",
    "<org.codenarc.rule.logging.LoggerForDifferentClassAstVisitor: boolean isEqualToCurrentClass(java.lang.String,java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter: void this$dist$set$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainHasToStringRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.FileCreateTempFileRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.JavadocMissingExceptionDescriptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.ConsecutiveStringConcatenationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarcRunner$_writeReports_closure8: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.AbstractTypeNameAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.ruleset.MovedRules$MovedToRuleSet: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitStyleAssertionsRule: void <init>()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.BracesForMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: void <init>()>",
    "<org.codenarc.ruleset.GroovyDslRuleSet$_evaluateDsl_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitStackInstantiationRule: void this$dist$set$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildBodySection_closure2: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_flexibleCheckForCorrectColumn_closure10: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySafeNavigationOperatorAstVisitor: void checkExpression(org.codehaus.groovy.ast.expr.Expression,org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.concurrency.ThisReferenceEscapesConstructorAstVisitor: boolean isThisExpression(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.formatting.AbstractSpaceAroundBraceAstVisitor: void <init>()>",
    "<org.codenarc.report.AbstractReportWriter$_writeReportToFile_closure3: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.junit.ChainedTestRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.FilteredRuleSet$_getRules_closure1$_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.MathRandomTracker: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.PackageNameMatchesFilePathRule: java.lang.String mismatchMessage(java.lang.String)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_addViolationOnMismatch_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.IntegerGetIntegerAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor: boolean hasState(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.util.ImportUtil$_sourceLineAndNumberForImport_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor: void this$dist$set$4(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter: groovy.lang.Closure buildRulesElement(org.codenarc.AnalysisContext)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryNullCheckAstVisitor: boolean isNullCheckAgainstSuperReference(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.design.CloneWithoutCloneableAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.ParameterCountRule: void setMaxParameters(int)>",
    "<org.codenarc.rule.convention.InvertedIfElseAstVisitor: void dispatchToIfWithoutSuper(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.unused.UnusedMethodParameterAstVisitor: void visitConstructorOrMethod(org.codehaus.groovy.ast.MethodNode,boolean)>",
    "<org.codenarc.report.HtmlReportWriter: groovy.lang.Closure buildBodySection(org.codenarc.AnalysisContext,org.codenarc.results.Results)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30$_closure31: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.VariableTypeRequiredAstVisitor: void visitDeclarationExpression(org.codehaus.groovy.ast.expr.DeclarationExpression)>",
    "<org.codenarc.rule.convention.TrailingCommaAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: int leftMostColumn(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void visitMethodEx(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor$_visitClosureExpression_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitClosureExpression_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter: groovy.lang.Closure buildFileElements(org.codenarc.results.Results)>",
    "<org.codenarc.rule.comments.JavadocEmptyThrowsTagRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ConstantTernaryExpressionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.FileResults: int getNumberOfFilesWithViolations(int)>",
    "<org.codenarc.rule.serialization.SerializableClassMustDefineSerialVersionUIDAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults: int getTotalNumberOfFiles(boolean)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPublicModifierAstVisitor: void <clinit>()>",
    "<org.codenarc.ruleset.XmlReaderRuleSet: void <init>(java.io.Reader)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure12$_closure15$_closure16: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.ruleset.MovedRules$MovedToRuleSet: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasOneStaticFieldOfItself_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConstantExpressionExtractor$_extractFromExpression_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults: void <init>(java.lang.String)>",
    "<org.codenarc.ruleregistry.PropertiesFileRuleRegistry: void loadRules()>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.dry.DryUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UnnecessaryFailAstVisitor: void addViolationIfFail(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.design.AbstractClassWithPublicConstructorAstVisitor$_visitClassEx_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.ConsecutiveStringConcatenationAstVisitor: java.lang.String escape(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectionCallRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsBlankLineAfterOpeningBrace_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.CommonCatchAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryToStringAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.RandomDoubleCoercedToZeroAstVisitor$_visitMethodEx_closure1: org.codehaus.groovy.ast.MethodNode getNode()>",
    "<org.codenarc.rule.basic.EmptyElseBlockAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryTransientModifierAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_flexibleCheckForCorrectColumn_closure10: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: boolean isAnnotatedWithOverride(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.analyzer.StringSourceAnalyzer: java.util.List getSourceDirectories()>",
    "<org.codenarc.rule.concurrency.WaitOutsideOfWhileLoopAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.SpaceAfterCommaAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.formatting.SpaceAroundOperatorAstVisitor: void visitTernaryExpression(org.codehaus.groovy.ast.expr.TernaryExpression)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: void <init>()>",
    "<org.codenarc.rule.basic.EqualsOverloadedAstVisitor: boolean isEqualsMethodWithOneArgument(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_getViolations_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure3$_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildButtons_closure6: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.junit.JUnitTestMethodWithoutAssertAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.convention.TernaryCouldBeElvisRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.ExceptionExtendsErrorAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.groovyism.ClosureAsLastMethodParameterAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.ruleset.MovedRules$Renamed: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.AddEmptyStringAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryFloatInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.UnnecessaryGroovyImportRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.security.ObjectFinalizeRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.VolatileLongOrDoubleFieldVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.basic.DuplicateMapKeyAstVisitor: void visitMapExpression(org.codehaus.groovy.ast.expr.MapExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonRule: void processImports(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildScript_closure1$_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalRegexRule: void applyTo(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.ruleset.TopLevelDelegate: void rule(java.lang.Class)>",
    "<org.codenarc.rule.InlineViolationsParser$ParseResult: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.StaticCalendarFieldAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitClosureExpression_closure8: org.codehaus.groovy.ast.expr.ClosureExpression getExpression()>",
    "<org.codenarc.rule.naming.FieldNameRule: void <init>()>",
    "<org.codenarc.rule.comments.AbstractJavadocMissingDescriptionRule: java.lang.String buildRegex()>",
    "<org.codenarc.report.AbstractReportWriter: java.lang.String substituteMessageParametersIfPresent(org.codenarc.rule.Rule,java.lang.String)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: boolean areReturningTrueAndFalse(org.codehaus.groovy.ast.stmt.Statement,org.codehaus.groovy.ast.stmt.Statement)>",
    "<org.codenarc.rule.convention.TernaryCouldBeElvisAstVisitor: void visitTernaryExpression(org.codehaus.groovy.ast.expr.TernaryExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryInstanceOfCheckAstVisitor: void visitBinaryExpression(org.codehaus.groovy.ast.expr.BinaryExpression)>",
    "<org.codenarc.rule.formatting.BlockStartsWithBlankLineAstVisitor: void visitTryCatchFinally(org.codehaus.groovy.ast.stmt.TryCatchStatement)>",
    "<org.codenarc.rule.convention.VariableTypeRequiredAstVisitor: boolean matchesIgnoredName(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToLeftShiftMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyStaticInitializerAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsBlankLineAfterOpeningBrace_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.ruleset.JsonReaderRuleSet$_loadRuleElements_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer: void <clinit>()>",
    "<org.codenarc.rule.basic.EqualsOverloadedAstVisitor: void addViolationIfOverloaded(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildAllSummaryByPackageRowsRecursively_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14$_closure16: org.codenarc.results.Results getResults()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure19$_closure23: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.basic.EqualsAndHashCodeAstVisitor$_visitClassEx_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.GetterMethodCouldBePropertyAstVisitor: boolean isAStaticFinalFieldValue(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.junit.JUnitUtil$_isTestMethod_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainHasEqualsAstVisitor: void visitClassComplete(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.exceptions.CommonThrowAstVisitor: void <init>(java.util.List)>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin: boolean sameMessage(java.lang.String,java.lang.String)>",
    "<org.codenarc.report.XmlReportWriter: java.util.Map buildPackageAttributeMap(org.codenarc.results.Results)>",
    "<org.codenarc.report.BaselineXmlReportWriter: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.util.WildcardPattern: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.FieldNameAstVisitor: void <init>()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildHeaderSection_closure4$_closure10: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.InlineXmlReportWriter: groovy.lang.Closure buildRulesElement(org.codenarc.AnalysisContext)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21$_closure22$_closure24: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.ListRuleSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.CatchErrorRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectIncludedProperties_closure9: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.ThreadYieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PublicInstanceFieldAstVisitor: java.lang.String createErrorMessage(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.ruleset.MovedRules: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule: java.lang.Object this$dist$invoke$3(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildProjectElement_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure15$_closure16: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToMultiplyMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.design.NestedForLoopAstVisitor: boolean isForNested()>",
    "<org.codenarc.report.AbstractReportWriter$_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter: boolean isDirectoryContainingFiles(org.codenarc.results.Results)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToCompareToMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.dry.DuplicateLiteralAstVisitor$_visitListExpression_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processStaticImports_closure2: org.codenarc.source.SourceCode getSourceCode()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPublicModifierAstVisitor: void checkDeclaration(org.codehaus.groovy.ast.ASTNode,java.lang.String,java.lang.String)>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4$_closure14: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarc$_execute_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.CollectionReturnTracker: void expressionReturnsList(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_addClosureFields_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.XmlReportWriter$_buildRulesElement_closure9: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor$_visitImports_closure4: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.size.ParameterCountAstVisitor$_isOverridden_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.ClassNameRule: void validate()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.DuplicateImportRule: void checkStaticImport(java.lang.String,int,java.util.Set,java.util.List)>",
    "<org.codenarc.rule.basic.EmptyWhileStatementAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.AbstractJavadocEmptyTagRule: void <init>()>",
    "<org.codenarc.analyzer.AnalyzerException: void <init>(java.lang.String)>",
    "<org.codenarc.ruleset.PropertiesFileRuleSetConfigurer$_configure_closure1: org.codenarc.ruleset.RuleSet getRuleSet()>",
    "<org.codenarc.rule.convention.VariableTypeRequiredAstVisitor$_visitDeclarationExpression_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.formatting.ClosureStatementOnOpeningLineOfMultipleLineClosureRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor$_visitClosureExpression_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryDoubleInstantiationAstVisitor: void <init>()>",
    "<org.codenarc.rule.junit.JUnitPublicFieldRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor: java.lang.Integer getLineNumber(org.gmetrics.result.MetricResult)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_writeReport_closure1: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameRule$_toSet_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCollectCallRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPublicModifierAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterOpeningBraceAstVisitor: boolean isLambdaExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitHashMapInstantiationRule$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.exceptions.CatchIndexOutOfBoundsExceptionRule: org.codenarc.rule.AstVisitor getAstVisitor()>",
    "<org.codenarc.rule.size.AbstractMethodMetricAstVisitor: java.lang.String getSourceLine(java.lang.Integer)>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19$_closure21: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter: groovy.lang.Closure buildFileSection(org.codenarc.results.Results)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.BracesForIfElseAstVisitor: void visitElse(org.codenarc.rule.formatting.BracesForIfElseRule,org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.design.CompareToWithoutComparableAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.util.ModifiersUtil: int parseModifiers(java.lang.String)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_visitClassComplete_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ant.CodeNarcTask: void <clinit>()>",
    "<org.codenarc.rule.formatting.SpaceAfterForAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitAssertAlwaysSucceedsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.TopLevelDelegate: void rule(java.lang.Class,groovy.lang.Closure)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.AbstractSourceCode: void setSuppressionAnalyzer(org.codenarc.analyzer.SuppressionAnalyzer)>",
    "<org.codenarc.rule.generic.IllegalPackageReferenceAstVisitor: java.lang.String parentPackageName(java.lang.String)>",
    "<org.codenarc.plugin.disablerules.LookupTable$_buildLookupTable_closure1: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3: org.codehaus.groovy.ast.expr.VariableExpression getVarExpression()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToLeftShiftMethodAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildScript_closure1$_closure7: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.StatelessSingletonRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedMethodParameterRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ant.CodeNarcTask: org.codenarc.results.Results executeCodeNarcRunner(java.lang.Object)>",
    "<org.codenarc.rule.concurrency.StaticCalendarFieldAstVisitor: void addCalendarViolation(org.codehaus.groovy.ast.FieldNode,java.lang.String)>",
    "<org.codenarc.rule.naming.ObjectOverrideMisspelledMethodNameAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor$_closureReturnsArray_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.junit.UnnecessaryFailAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5: org.codenarc.results.Results getResults()>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: void <init>(org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryToStringAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.ruleset.XmlReaderRuleSet: void setRuleProperties(groovy.util.Node,org.codenarc.rule.Rule)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGStringAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.comments.CommentsUtil: java.lang.String group(java.lang.String)>",
    "<org.codenarc.rule.junit.JUnitUtil: boolean isAssertCallWithNonNullConstantValue(org.codehaus.groovy.ast.expr.MethodCallExpression,java.lang.String)>",
    "<org.codenarc.analyzer.AbstractSourceAnalyzer$_collectViolations_closure3: org.codenarc.rule.Rule getRule()>",
    "<org.codenarc.rule.FieldReferenceAstVisitor$_visitMethodEx_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.StaticFieldsBeforeInstanceFieldsAstVisitor$_visitClassComplete_closure1: org.codehaus.groovy.ast.ClassNode getNode()>",
    "<org.codenarc.rule.junit.UseAssertFalseInsteadOfNegationAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: java.util.List increaseIndentForClosureBlocks(org.codehaus.groovy.ast.expr.ArgumentListExpression)>",
    "<org.codenarc.rule.junit.JUnitAssertAlwaysFailsAstVisitor: void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.util.WildcardPattern$_matches_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySetterAstVisitor: void addViolationsIfSetter(org.codehaus.groovy.ast.expr.MethodCallExpression)>",
    "<org.codenarc.rule.convention.NoFloatAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.concurrency.SynchronizedOnGetClassAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.BlockEndsWithBlankLineAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.basic.EmptyMethodAstVisitor$_visitMethod_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.DuplicateMapKeyAstVisitor$_visitMapExpression_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.concurrency.SynchronizedOnBoxedPrimitiveAstVisitor: void visitSynchronizedStatement(org.codehaus.groovy.ast.stmt.SynchronizedStatement)>",
    "<org.codenarc.rule.FieldReferenceAstVisitor$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitWhileLoop_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.AssignCollectionUniqueAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_containsKey_closure3: java.util.List getKeys()>",
    "<org.codenarc.report.BaselineXmlReportWriter$_buildViolationElement_closure6$_closure15: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.results.DirectoryResults: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.XmlFileRuleSet: void <clinit>()>",
    "<org.codenarc.rule.basic.BrokenNullCheckAstVisitor: boolean isBinaryExpressionWithPropertyAccessForName(org.codehaus.groovy.ast.expr.Expression,java.lang.String)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToMethodAstVisitor: void <init>(java.lang.String,int)>",
    "<org.codenarc.plugin.disablerules.LookupTable: void checkForCodeNarcEnable(java.lang.String)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsBlankLineAfterOpeningBrace_closure5: java.lang.Integer getClassStartLine()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackageRow_closure4$_closure14: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.UnnecessaryFailRule: void <init>()>",
    "<org.codenarc.rule.design.ImplementationAsTypeAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryConstructorAstVisitor: boolean containsOnlyCallToSuper(org.codehaus.groovy.ast.ConstructorNode)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_addInitializedField_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unused.UnusedArrayAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryBooleanInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.serialization.SerialVersionUIDAstVisitor: void visitField(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor: void addViolationOnMismatch(java.util.List,java.lang.String)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.serialization.EnumCustomSerializationIgnoredAstVisitor: void visitMethodComplete(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.imports.UnusedImportRule: void processStaticImports(org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.rule.imports.MisorderedStaticImportsRule$_addOrderingViolations_closure1: java.lang.String getLatePattern()>",
    "<org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility: org.codenarc.rule.convention.StaticMethodsBeforeInstanceMethodsAstVisitor$Visibility[] values()>",
    "<org.codenarc.rule.design.FinalClassWithProtectedMemberRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryElseStatementAstVisitor$_allBranchesReturn_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.exceptions.ThrowErrorRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.GroovyDslRuleSet: groovy.lang.GroovyShell createGroovyShell()>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitUnnecessarySetUpRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.TrailingWhitespaceRule$_applyTo_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryCatchBlockRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitCallToOrMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryGetterAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.NoJavaUtilDateAstVisitor$_visitImports_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23$_closure27$_closure28$_closure30: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalRule: boolean isDefinedInJpaEntity(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.exceptions.ConfusingClassNamedExceptionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAfterClosingBraceAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.rule.formatting.AbstractSpaceAroundBraceAstVisitor: java.lang.String lastSourceLineOrEmpty(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.naming.VariableNameAstVisitor: void visitDeclarationExpression(org.codehaus.groovy.ast.expr.DeclarationExpression)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_visitConstructorOrMethod_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ConstantsOnlyInterfaceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.tool.GenerateUtil$_sortRules_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor$_visitForLoop_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildSummary_closure3$_closure9$_closure10$_closure11$_closure13$_closure14: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameAstVisitor$_extractTransients_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.unused.UnusedVariableRule$_getAnonymousClasses_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.unnecessary.UnnecessaryOverridingMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildPackageSection_closure6$_closure19$_closure20: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.tool.GenerateCodeNarcRulesProperties: void main(java.lang.String[])>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildRuleDescriptions_closure7$_closure17$_closure18$_closure20$_closure21$_closure22$_closure24: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.tool.GenerateRuleSetAllRulesByCategory$_main_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarc: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.exceptions.CatchIllegalMonitorStateExceptionRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: boolean isValid()>",
    "<org.codenarc.rule.AbstractRuleTestCase$_assertViolations_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.UnnecessaryGroovyImportRule$_applyTo_closure1: java.util.List getViolations()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.SourceCodeCriteria: boolean includesPath(java.lang.String)>",
    "<org.codenarc.rule.groovyism.ExplicitCallToOrMethodAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.PropertyNameAstVisitor: void visitProperty(org.codehaus.groovy.ast.PropertyNode)>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedVariableAstVisitor$_markVariableAsReferenced_closure3$_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.concurrency.DoubleCheckedLockingAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodParameterAstVisitor$_getAnonymousClasses_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure20: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.PrivateFieldCouldBeFinalAstVisitor$_removeInitializedField_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.AbstractRuleTestCase: void assertTwoViolations(java.lang.String,java.lang.Integer,java.lang.String,java.lang.Object,java.lang.Integer,java.lang.String,java.lang.Object)>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_recordMethodColumnAndSourceLineForClosureBlocks_closure7: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.BigDecimalInstantiationAstVisitor: java.lang.String getViolationMessage(org.codehaus.groovy.ast.expr.ConstructorCallExpression)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.SpaceAfterIfRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.dry.DuplicateMapLiteralAstVisitor: void <init>()>",
    "<org.codenarc.rule.design.OptionalMethodParameterAstVisitor: void processParameters(org.codehaus.groovy.ast.Parameter[],java.lang.String)>",
    "<org.codenarc.rule.size.MethodSizeAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.MultipleUnaryOperatorsAstVisitor: void <clinit>()>",
    "<org.codenarc.rule.basic.EmptyInstanceInitializerAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor$_increaseIndentForClosureBlocks_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.EmptyClassAstVisitor: boolean hasAnnotation(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.SpaceBeforeClosingBraceAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor: void resetCurrentAnnotatedNode()>",
    "<org.codenarc.results.FileResults: java.util.List getViolations()>",
    "<org.codenarc.rule.exceptions.SwallowThreadDeathAstVisitor: void visitCatchStatement(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.CodeNarc: void execute(java.lang.String[])>",
    "<org.codenarc.rule.design.CollectionReturnTracker$_expressionReturnsList_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryIfStatementAstVisitor$_visitBlockStatement_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.InlineXmlReportWriter$_buildDescriptionElement_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.imports.UnusedImportRule$_processStaticImports_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.StatelessSingletonAstVisitor$_hasState_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.groovyism.ExplicitStackInstantiationRule$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.ParameterReassignmentAstVisitor: boolean isCurrentParameterName(java.lang.String)>",
    "<org.codenarc.report.HtmlReportWriter$_buildBodySection_closure1$_closure8: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.formatting.TrailingWhitespaceRule$_applyTo_closure1: java.util.List getViolations()>",
    "<org.codenarc.rule.formatting.SpaceAfterSemicolonAstVisitor: void visitForLoop(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.results.DirectoryResults$_getViolations_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter: java.util.Map buildPackageAttributeMap(org.codenarc.results.Results)>",
    "<org.codenarc.rule.naming.ParameterNameAstVisitor: void visitClosureExpression(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.plugin.disablerules.DisableRulesInCommentsPlugin$_processViolationsForFile_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.ClassStartsWithBlankLineAstVisitor$_checkIfThereIsBlankLineAfterOpeningBrace_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.report.XmlReportWriter$_buildRulesElement_closure9$_closure19$_closure20: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.design.LocaleSetDefaultAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.IfStatementCouldBeTernaryAstVisitor: boolean isReturnStatementWithConstantOrLiteralValue(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.size.CyclomaticComplexityAstVisitor: org.gmetrics.metric.Metric createMetric()>",
    "<org.codenarc.rule.unused.AbstractLastStatementInBlockAstVisitor: void visitBlockStatement(org.codehaus.groovy.ast.stmt.BlockStatement)>",
    "<org.codenarc.rule.convention.StaticFieldsBeforeInstanceFieldsRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.CouldBeElvisAstVisitor: void addViolationCouldBeElvis(org.codehaus.groovy.ast.stmt.IfStatement)>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor: java.util.Map getMethodCallsAndMapKeys(org.codehaus.groovy.ast.expr.Expression)>",
    "<org.codenarc.rule.junit.AssertionTrap: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.analyzer.SuppressionAnalyzer: void <clinit>()>",
    "<org.codenarc.rule.convention.StaticFieldsBeforeInstanceFieldsAstVisitor$_visitClassComplete_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.SourceFile: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.InlineXmlReportWriter$_buildDescriptionElement_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.AbstractFinallyAstVisitor: void <init>()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryLongInstantiationAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractReportWriter$_writeReportToFile_closure3: org.codenarc.results.Results getResults()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.CodeNarc: void main(java.lang.String[])>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyArrayAstVisitor: boolean closureReturnsArray(org.codehaus.groovy.ast.expr.ClosureExpression)>",
    "<org.codenarc.util.ImportUtil$_getAllImports_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.design.ReturnsNullInsteadOfEmptyCollectionRuleAstVisitor: boolean methodReturnsCollection(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConstantExpressionExtractor$_extractFrom_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.size.GMetricsSourceCodeAdapter: java.lang.String getText()>",
    "<org.codenarc.tool.GenerateCodeNarcRulesProperties$_main_closure1$_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.ConsecutiveLiteralAppendsAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.naming.InterfaceNameSameAsSuperInterfaceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.TrailingWhitespaceRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ExplicitStackInstantiationRule$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure15$_closure16: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.enhanced.MissingOverrideAnnotationAstVisitor$_findSuperClassMethods_closure8: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.convention.ParameterReassignmentAstVisitor: void visitMethodComplete(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.CodeNarcRunner$_writeReports_closure8: org.codenarc.AnalysisContext getAnalysisContext()>",
    "<org.codenarc.rule.naming.ParameterNameAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12$_closure15: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.naming.ClassNameSameAsSuperclassAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.tool.GenerateRuleSetAllRulesByCategory: void <clinit>()>",
    "<org.codenarc.report.SortableHtmlReportWriter$_buildAllViolationsSection_closure5$_closure17$_closure21$_closure24$_closure25$_closure27: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<org.codenarc.rule.naming.FieldNameAstVisitor: boolean isProperty(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.groovyism.ExplicitLinkedListInstantiationRule$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<org.codenarc.rule.groovyism.GStringExpressionWithinStringAstVisitor$_isExpressionUsedInAnnotation_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.imports.ImportFromSunPackagesRule: void addViolationForSunImport(org.codehaus.groovy.ast.ImportNode,org.codenarc.source.SourceCode,java.util.List)>",
    "<org.codenarc.ruleset.JsonReaderRuleSet$_setRuleProperties_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.formatting.BracesForClassRule$_applyTo_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.GroovyLangImmutableAstVisitor$_visitImports_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitAssertAlwaysSucceedsRule: void <init>()>",
    "<org.codenarc.rule.convention.LongLiteralWithLowerCaseLRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildPackageElement_closure4$_closure14: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: void visitMapEntryExpression(org.codehaus.groovy.ast.expr.MapEntryExpression)>",
    "<org.codenarc.rule.exceptions.ReturnNullFromCatchBlockAstVisitor: org.codehaus.groovy.ast.stmt.Statement getLastStatement(org.codehaus.groovy.ast.stmt.CatchStatement)>",
    "<org.codenarc.CodeNarcRunner: org.codenarc.ruleset.RuleSet createInitialRuleSetFromString()>",
    "<org.codenarc.rule.design.AbstractClassWithoutAbstractMethodAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.BaselineXmlReportWriter$_writeReport_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.util.PropertyUtil: void setPropertyFromString(java.lang.Object,java.lang.String,java.lang.String)>",
    "<org.codenarc.report.HtmlReportWriter$_buildFileSection_closure7$_closure23: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.JUnitTearDownCallsSuperAstVisitor: void visitMethod(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.report.HtmlReportWriter: groovy.lang.Closure buildAllPackageSections(org.codenarc.results.Results)>",
    "<org.codenarc.rule.concurrency.StaticDateFormatFieldAstVisitor: void addDateFormatViolation(org.codehaus.groovy.ast.FieldNode,java.lang.String)>",
    "<org.codenarc.rule.groovyism.ExplicitHashSetInstantiationRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.SpaceAroundMapEntryColonAstVisitor: void handleMapExpression(org.codehaus.groovy.ast.expr.MapEntryExpression)>",
    "<org.codenarc.rule.grails.GrailsDomainReservedSqlKeywordNameRule: java.util.Set toSet(java.lang.String)>",
    "<org.codenarc.plugin.disablerules.LookupTable$_buildLookupTable_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.AbstractReportWriter$_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.ForLoopShouldBeWhileLoopAstVisitor: boolean hasOnlyConditionExpr(org.codehaus.groovy.ast.stmt.ForStatement)>",
    "<org.codenarc.rule.unnecessary.UnnecessarySemicolonAstVisitor: void checkNode(org.codehaus.groovy.ast.ASTNode)>",
    "<org.codenarc.rule.AbstractRuleTestCase: java.util.List applyRuleTo(java.lang.String)>",
    "<org.codenarc.rule.unused.UnusedPrivateMethodRule$_getViolations_closure1: org.codenarc.rule.AstVisitor getVisitor()>",
    "<org.codenarc.rule.formatting.LineLengthRule: boolean flagIfImport(java.lang.String)>",
    "<org.codenarc.ruleset.FilteredRuleSet$_getRules_closure1$_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.generic.RequiredStringRule: boolean isReady()>",
    "<org.codenarc.source.AbstractSourceCode$_removeGrabTransformation_closure1$_closure3$_closure4: java.lang.Object doCall(java.lang.Object)>",
    "<org.codenarc.rule.basic.EqualsAndHashCodeAstVisitor$_visitClassEx_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildCSS_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.convention.MethodReturnTypeRequiredRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.formatting.IndentationAstVisitor: void <init>()>",
    "<org.codenarc.rule.junit.JUnitUnnecessaryThrowsExceptionAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.size.AbcMetricRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.XmlReportWriter$_buildReportElement_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.groovyism.UseCollectManyRule: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unused.UnusedPrivateFieldRule$_collectAllPrivateFields_closure2$_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.source.AbstractSourceCode: java.lang.String normalizePath(java.lang.String)>",
    "<org.codenarc.rule.size.NestedBlockDepthAstVisitor$_visitBlockStatement_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.rule.concurrency.InconsistentPropertySynchronizationAstVisitor$_addViolationOnMismatch_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10: org.codenarc.results.Results getResults()>",
    "<org.codenarc.util.io.DefaultResourceFactory: boolean isUrl(java.lang.String)>",
    "<org.codenarc.ruleset.RuleSetUtil: org.codenarc.ruleset.RuleSet loadRuleSetFromString(java.lang.String)>",
    "<org.codenarc.rule.security.JavaIoPackageAccessRule: void <init>()>",
    "<org.codenarc.plugin.baseline.BaselineResultsPlugin: void processViolationsForFile(org.codenarc.plugin.FileViolations)>",
    "<org.codenarc.rule.convention.StaticFieldsBeforeInstanceFieldsAstVisitor$_visitClassComplete_closure1: java.lang.Object doCall(org.codehaus.groovy.ast.FieldNode)>",
    "<org.codenarc.rule.convention.NoDefRule: void setExcludeRegex(java.lang.String)>",
    "<org.codenarc.rule.formatting.TrailingWhitespaceRule$_applyTo_closure1: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.formatting.SpaceBeforeOpeningBraceAstVisitor: void addOpeningBraceViolation(org.codehaus.groovy.ast.ASTNode,java.lang.String)>",
    "<org.codenarc.report.HtmlReportWriter$_buildSummaryByPackage_closure2$_closure9$_closure10$_closure11$_closure12: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.ruleset.GroovyDslRuleSet: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPublicModifierAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.junit.SpockIgnoreRestUsedAstVisitor$_visitMethod_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.naming.PackageNameAstVisitor: void visitClassEx(org.codehaus.groovy.ast.ClassNode)>",
    "<org.codenarc.rule.formatting.SpaceAfterClosingBraceAstVisitor: void processMethodNode(org.codehaus.groovy.ast.MethodNode)>",
    "<org.codenarc.rule.comments.ClassJavadocRule: java.lang.String sourceCodeNameWithoutExtension(org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.security.JavaIoPackageAccessAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.JsonReportWriter$_buildPackageElements_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<org.codenarc.CodeNarcRunner$_initializePlugins_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.grails.GrailsServletContextReferenceAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.ConfusingMultipleReturnsAstVisitor$_addViolationsForMultipleFieldDeclarations_closure7: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.exceptions.SwallowThreadDeathAstVisitor: void visitThrowStatement(org.codehaus.groovy.ast.stmt.ThrowStatement)>",
    "<org.codenarc.rule.dry.DuplicateStringLiteralRule: java.util.Set parseIgnoreValues()>",
    "<org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceAstVisitor: void <init>()>",
    "<org.codenarc.rule.imports.AbstractImportRule: int findLineNumberOfFirstClassDeclaration(org.codenarc.source.SourceCode)>",
    "<org.codenarc.rule.dry.DuplicateListLiteralAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.AbstractHtmlReportWriter$_buildReportMetadata_closure5$_closure11$_closure12: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.report.TextReportWriter$_writeFileViolations_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.basic.DuplicateCaseStatementAstVisitor$_visitSwitch_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.groovyism.AssignCollectionSortAstVisitor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codenarc.rule.grails.GrailsDomainStringPropertyMaxSizeAstVisitor$_collectIncludedProperties_closure9: void <init>(java.lang.Object,java.lang.Object)>",
    "<org.codenarc.rule.convention.IfStatementCouldBeTernaryAstVisitor: boolean isOnlyReturnStatement(org.codehaus.groovy.ast.ASTNode)>"
  ]
}