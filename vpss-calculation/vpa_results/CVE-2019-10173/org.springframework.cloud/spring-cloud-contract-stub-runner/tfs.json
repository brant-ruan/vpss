{
  "2.1.2.RELEASE": [
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>"
  ],
  "2.2.8.RELEASE": [
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelPredicate: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(org.springframework.messaging.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(javax.jms.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(org.springframework.messaging.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaTransformer: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.StubRunnerExecutor: void sendMessage(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(org.springframework.messaging.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsConfiguration: void registerContainers(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,java.util.List,java.lang.String,org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsRouter)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationTransformer: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamTransformer: byte[] outputBodyAsBytes(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.MappingGenerator: java.util.Collection toMappings(java.io.File,java.util.Collection,java.io.File)>",
    "<org.springframework.cloud.contract.stubrunner.StubRepository: java.util.Collection contractDescriptors()>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaConfiguration: void registerContainers(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,java.util.List,java.lang.String,org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaRouter)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsTransformer: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelPredicate: org.springframework.cloud.contract.spec.Contract matchContract(org.apache.camel.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelProcessor: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelPredicate: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>"
  ],
  "2.1.4.RELEASE": [
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>"
  ],
  "2.2.1.RELEASE": [
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelPredicate: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(org.springframework.messaging.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(javax.jms.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(org.springframework.messaging.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaTransformer: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.StubRunnerExecutor: void sendMessage(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(org.springframework.messaging.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsConfiguration: void registerContainers(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,java.util.List,java.lang.String,org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsRouter)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationTransformer: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamTransformer: byte[] outputBodyAsBytes(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.MappingGenerator: java.util.Collection toMappings(java.io.File,java.util.Collection,java.io.File)>",
    "<org.springframework.cloud.contract.stubrunner.StubRepository: java.util.Collection contractDescriptors()>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaConfiguration: void registerContainers(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,java.util.List,java.lang.String,org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaRouter)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsTransformer: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelPredicate: org.springframework.cloud.contract.spec.Contract matchContract(org.apache.camel.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelProcessor: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelPredicate: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>"
  ],
  "3.0.0": [
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelPredicate: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(org.springframework.messaging.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(javax.jms.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(org.springframework.messaging.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaTransformer: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.StubRunnerExecutor: void <init>(org.springframework.cloud.contract.stubrunner.AvailablePortScanner,org.springframework.cloud.contract.verifier.messaging.MessageVerifier,java.util.List)>",
    "<org.springframework.cloud.contract.stubrunner.StubRunnerExecutor: void sendMessage(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(org.springframework.messaging.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsConfiguration: void registerContainers(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,java.util.List,java.lang.String,org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsRouter)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationTransformer: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamTransformer: byte[] outputBodyAsBytes(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaConfiguration: void registerContainers(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,java.util.List,java.lang.String,org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaRouter)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsTransformer: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelPredicate: org.springframework.cloud.contract.spec.Contract matchContract(org.apache.camel.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelProcessor: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelPredicate: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>"
  ],
  "2.2.6.RELEASE": [
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelPredicate: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(org.springframework.messaging.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(javax.jms.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(org.springframework.messaging.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaTransformer: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.StubRunnerExecutor: void sendMessage(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(org.springframework.messaging.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsConfiguration: void registerContainers(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,java.util.List,java.lang.String,org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsRouter)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationTransformer: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamTransformer: byte[] outputBodyAsBytes(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.MappingGenerator: java.util.Collection toMappings(java.io.File,java.util.Collection,java.io.File)>",
    "<org.springframework.cloud.contract.stubrunner.StubRepository: java.util.Collection contractDescriptors()>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaConfiguration: void registerContainers(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,java.util.List,java.lang.String,org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaRouter)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsTransformer: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelPredicate: org.springframework.cloud.contract.spec.Contract matchContract(org.apache.camel.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelProcessor: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelPredicate: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>"
  ],
  "2.2.0.RELEASE": [
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelPredicate: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(org.springframework.messaging.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(javax.jms.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(org.springframework.messaging.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaTransformer: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.StubRunnerExecutor: void sendMessage(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(org.springframework.messaging.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsConfiguration: void registerContainers(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,java.util.List,java.lang.String,org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsRouter)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationTransformer: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamTransformer: byte[] outputBodyAsBytes(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.MappingGenerator: java.util.Collection toMappings(java.io.File,java.util.Collection,java.io.File)>",
    "<org.springframework.cloud.contract.stubrunner.StubRepository: java.util.Collection contractDescriptors()>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaConfiguration: void registerContainers(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,java.util.List,java.lang.String,org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaRouter)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsTransformer: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelPredicate: org.springframework.cloud.contract.spec.Contract matchContract(org.apache.camel.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelProcessor: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelPredicate: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>"
  ],
  "3.0.2": [
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelPredicate: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(org.springframework.messaging.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(javax.jms.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(org.springframework.messaging.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaTransformer: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.StubRunnerExecutor: void <init>(org.springframework.cloud.contract.stubrunner.AvailablePortScanner,org.springframework.cloud.contract.verifier.messaging.MessageVerifier,java.util.List)>",
    "<org.springframework.cloud.contract.stubrunner.StubRunnerExecutor: void sendMessage(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(org.springframework.messaging.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsConfiguration: void registerContainers(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,java.util.List,java.lang.String,org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsRouter)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationTransformer: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamTransformer: byte[] outputBodyAsBytes(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaConfiguration: void registerContainers(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,java.util.List,java.lang.String,org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaRouter)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsTransformer: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelPredicate: org.springframework.cloud.contract.spec.Contract matchContract(org.apache.camel.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelProcessor: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelPredicate: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>"
  ],
  "2.2.3.RELEASE": [
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelPredicate: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(org.springframework.messaging.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(javax.jms.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(org.springframework.messaging.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaTransformer: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.StubRunnerExecutor: void sendMessage(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(org.springframework.messaging.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsConfiguration: void registerContainers(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,java.util.List,java.lang.String,org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsRouter)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationTransformer: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamTransformer: byte[] outputBodyAsBytes(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.MappingGenerator: java.util.Collection toMappings(java.io.File,java.util.Collection,java.io.File)>",
    "<org.springframework.cloud.contract.stubrunner.StubRepository: java.util.Collection contractDescriptors()>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaConfiguration: void registerContainers(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,java.util.List,java.lang.String,org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaRouter)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsTransformer: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelPredicate: org.springframework.cloud.contract.spec.Contract matchContract(org.apache.camel.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelProcessor: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelPredicate: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>"
  ],
  "2.2.2.RELEASE": [
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelPredicate: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(org.springframework.messaging.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(javax.jms.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(org.springframework.messaging.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaTransformer: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.StubRunnerExecutor: void sendMessage(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(org.springframework.messaging.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsConfiguration: void registerContainers(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,java.util.List,java.lang.String,org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsRouter)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationTransformer: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamTransformer: byte[] outputBodyAsBytes(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.MappingGenerator: java.util.Collection toMappings(java.io.File,java.util.Collection,java.io.File)>",
    "<org.springframework.cloud.contract.stubrunner.StubRepository: java.util.Collection contractDescriptors()>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaConfiguration: void registerContainers(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,java.util.List,java.lang.String,org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaRouter)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsTransformer: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelPredicate: org.springframework.cloud.contract.spec.Contract matchContract(org.apache.camel.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelProcessor: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelPredicate: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>"
  ],
  "3.0.4": [
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelPredicate: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(org.springframework.messaging.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(javax.jms.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(org.springframework.messaging.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaTransformer: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.StubRunnerExecutor: void sendMessage(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(org.springframework.messaging.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsConfiguration: void registerContainers(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,java.util.List,java.lang.String,org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsRouter)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationTransformer: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamTransformer: byte[] outputBodyAsBytes(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaConfiguration: void registerContainers(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,java.util.List,java.lang.String,org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaRouter)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsTransformer: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelPredicate: org.springframework.cloud.contract.spec.Contract matchContract(org.apache.camel.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelProcessor: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelPredicate: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>"
  ],
  "2.1.5.RELEASE": [
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>"
  ],
  "2.2.4.RELEASE": [
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelPredicate: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(org.springframework.messaging.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(javax.jms.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(org.springframework.messaging.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaTransformer: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.StubRunnerExecutor: void sendMessage(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(org.springframework.messaging.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsConfiguration: void registerContainers(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,java.util.List,java.lang.String,org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsRouter)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationTransformer: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamTransformer: byte[] outputBodyAsBytes(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.MappingGenerator: java.util.Collection toMappings(java.io.File,java.util.Collection,java.io.File)>",
    "<org.springframework.cloud.contract.stubrunner.StubRepository: java.util.Collection contractDescriptors()>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaConfiguration: void registerContainers(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,java.util.List,java.lang.String,org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaRouter)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsTransformer: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelPredicate: org.springframework.cloud.contract.spec.Contract matchContract(org.apache.camel.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelProcessor: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelPredicate: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>"
  ],
  "3.0.5": [
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelPredicate: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(org.springframework.messaging.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(javax.jms.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(org.springframework.messaging.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaTransformer: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.StubRunnerExecutor: void sendMessage(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(org.springframework.messaging.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsConfiguration: void registerContainers(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,java.util.List,java.lang.String,org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsRouter)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationTransformer: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamTransformer: byte[] outputBodyAsBytes(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaConfiguration: void registerContainers(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,java.util.List,java.lang.String,org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaRouter)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsTransformer: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelPredicate: org.springframework.cloud.contract.spec.Contract matchContract(org.apache.camel.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelProcessor: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelPredicate: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>"
  ],
  "2.2.7.RELEASE": [
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelPredicate: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(org.springframework.messaging.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(javax.jms.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(org.springframework.messaging.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaTransformer: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.StubRunnerExecutor: void sendMessage(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(org.springframework.messaging.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsConfiguration: void registerContainers(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,java.util.List,java.lang.String,org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsRouter)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationTransformer: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamTransformer: byte[] outputBodyAsBytes(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.MappingGenerator: java.util.Collection toMappings(java.io.File,java.util.Collection,java.io.File)>",
    "<org.springframework.cloud.contract.stubrunner.StubRepository: java.util.Collection contractDescriptors()>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaConfiguration: void registerContainers(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,java.util.List,java.lang.String,org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaRouter)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsTransformer: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelPredicate: org.springframework.cloud.contract.spec.Contract matchContract(org.apache.camel.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelProcessor: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelPredicate: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>"
  ],
  "3.0.6": [
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelPredicate: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(org.springframework.messaging.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(javax.jms.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(org.springframework.messaging.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaTransformer: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.StubRunnerExecutor: void sendMessage(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(org.springframework.messaging.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsConfiguration: void registerContainers(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,java.util.List,java.lang.String,org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsRouter)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationTransformer: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamTransformer: byte[] outputBodyAsBytes(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaConfiguration: void registerContainers(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,java.util.List,java.lang.String,org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaRouter)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsTransformer: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelPredicate: org.springframework.cloud.contract.spec.Contract matchContract(org.apache.camel.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelProcessor: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelPredicate: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>"
  ],
  "3.0.3": [
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelPredicate: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(org.springframework.messaging.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(javax.jms.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(org.springframework.messaging.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaTransformer: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.StubRunnerExecutor: void sendMessage(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(org.springframework.messaging.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsConfiguration: void registerContainers(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,java.util.List,java.lang.String,org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsRouter)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationTransformer: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamTransformer: byte[] outputBodyAsBytes(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaConfiguration: void registerContainers(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,java.util.List,java.lang.String,org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaRouter)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsTransformer: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelPredicate: org.springframework.cloud.contract.spec.Contract matchContract(org.apache.camel.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelProcessor: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelPredicate: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>"
  ],
  "3.0.1": [
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelPredicate: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(org.springframework.messaging.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(javax.jms.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(org.springframework.messaging.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaTransformer: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.StubRunnerExecutor: void <init>(org.springframework.cloud.contract.stubrunner.AvailablePortScanner,org.springframework.cloud.contract.verifier.messaging.MessageVerifier,java.util.List)>",
    "<org.springframework.cloud.contract.stubrunner.StubRunnerExecutor: void sendMessage(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(org.springframework.messaging.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsConfiguration: void registerContainers(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,java.util.List,java.lang.String,org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsRouter)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationTransformer: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamTransformer: byte[] outputBodyAsBytes(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaConfiguration: void registerContainers(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,java.util.List,java.lang.String,org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaRouter)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsTransformer: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelPredicate: org.springframework.cloud.contract.spec.Contract matchContract(org.apache.camel.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelProcessor: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelPredicate: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>"
  ],
  "2.2.5.RELEASE": [
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelPredicate: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(org.springframework.messaging.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(javax.jms.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(org.springframework.messaging.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaTransformer: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.StubRunnerExecutor: void sendMessage(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: org.springframework.cloud.contract.spec.Contract matchContract(org.springframework.messaging.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsConfiguration: void registerContainers(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,java.util.List,java.lang.String,org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsRouter)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationTransformer: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamTransformer: byte[] outputBodyAsBytes(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.MappingGenerator: java.util.Collection toMappings(java.io.File,java.util.Collection,java.io.File)>",
    "<org.springframework.cloud.contract.stubrunner.StubRepository: java.util.Collection contractDescriptors()>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaConfiguration: void registerContainers(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,java.util.List,java.lang.String,org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaRouter)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsTransformer: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.integration.StubRunnerIntegrationMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelPredicate: org.springframework.cloud.contract.spec.Contract matchContract(org.apache.camel.Message,org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelProcessor: java.lang.Object outputBody(org.springframework.cloud.contract.spec.Contract)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.jms.StubRunnerJmsMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.camel.StubRunnerCamelPredicate: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>",
    "<org.springframework.cloud.contract.stubrunner.messaging.kafka.StubRunnerKafkaMessageSelector: boolean matchesForJsonPayload(org.springframework.cloud.contract.spec.Contract,java.lang.Object,org.springframework.cloud.contract.spec.internal.BodyMatchers,java.lang.Object)>"
  ],
  "2.1.3.RELEASE": [
    "<org.springframework.cloud.contract.stubrunner.messaging.stream.StubRunnerStreamMessageSelector: boolean matchViaContent(org.springframework.cloud.contract.spec.Contract,java.lang.Object,java.lang.Object)>"
  ]
}