{
  "19.07.0-edge": [
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem getFileSystem(java.net.URI,boolean)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.channels.SeekableByteChannel newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath get(java.lang.String)>",
    "<nextflow.file.http.XFileAttributes: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: void <init>(nextflow.file.http.XPath,groovy.lang.Reference)>",
    "<nextflow.file.http.XFileSystemProvider: void move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.HttpsFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: java.nio.file.Path next()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.util.Map readAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: java.net.URI toUri()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getFileStores()>",
    "<nextflow.file.http.XFileSystemProvider: void checkAccess(java.nio.file.Path,java.nio.file.AccessMode[])>",
    "<nextflow.file.http.XFileSystemProvider$1: int read(java.nio.ByteBuffer)>",
    "<nextflow.file.http.XFileSystemProvider: void delete(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: void this$dist$set$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$get$2(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider$1: long size()>",
    "<nextflow.file.http.XFileSystem: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath: int getNameCount()>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(nextflow.file.http.XPath)>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolveSibling(java.nio.file.Path)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getFileName()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem newFileSystem(java.net.URI,java.util.Map)>",
    "<nextflow.file.http.XPath: java.util.Iterator iterator()>",
    "<nextflow.file.http.XPath: void <init>(nextflow.file.http.XFileSystem,java.lang.String,java.lang.String[])>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.BasicFileAttributes readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void <init>()>",
    "<nextflow.file.http.XFileSystem: java.util.Set supportedFileAttributeViews()>",
    "<nextflow.file.http.XFileSystemProvider: java.io.OutputStream newOutputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider: java.io.InputStream newInputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileStore getFileStore(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$invoke$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolve(java.nio.file.Path)>",
    "<nextflow.file.http.HttpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getRootDirectories()>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime lastAccessTime()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: java.net.URI key(java.lang.String,java.lang.String)>",
    "<nextflow.file.http.XPath: boolean equals(java.lang.Object)>",
    "<nextflow.file.http.XFileSystem: java.nio.file.PathMatcher getPathMatcher(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime creationTime()>",
    "<nextflow.file.http.XFileSystemProvider: void setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.XPath: java.nio.file.Path relativize(java.nio.file.Path)>",
    "<nextflow.file.http.FtpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.FileAttributeView getFileAttributeView(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider: void <clinit>()>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath createXPath(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: boolean isSameFile(java.nio.file.Path,java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XPath: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.DirectoryStream newDirectoryStream(java.nio.file.Path,java.nio.file.DirectoryStream$Filter)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getParent()>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(java.util.Map)>",
    "<nextflow.file.http.XFileSystemProvider: void createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XFileSystem: boolean equals(java.lang.Object)>"
  ],
  "19.04.0-edge": [
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem getFileSystem(java.net.URI,boolean)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.channels.SeekableByteChannel newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath get(java.lang.String)>",
    "<nextflow.file.http.XFileAttributes: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: void <init>(nextflow.file.http.XPath,groovy.lang.Reference)>",
    "<nextflow.file.http.XFileSystemProvider: void move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.HttpsFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: java.nio.file.Path next()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.util.Map readAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: java.net.URI toUri()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getFileStores()>",
    "<nextflow.file.http.XFileSystemProvider: void checkAccess(java.nio.file.Path,java.nio.file.AccessMode[])>",
    "<nextflow.file.http.XFileSystemProvider$1: int read(java.nio.ByteBuffer)>",
    "<nextflow.file.http.XFileSystemProvider: void delete(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: void this$dist$set$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$get$2(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider$1: long size()>",
    "<nextflow.file.http.XFileSystem: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath: int getNameCount()>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(nextflow.file.http.XPath)>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolveSibling(java.nio.file.Path)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getFileName()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem newFileSystem(java.net.URI,java.util.Map)>",
    "<nextflow.file.http.XPath: java.util.Iterator iterator()>",
    "<nextflow.file.http.XPath: void <init>(nextflow.file.http.XFileSystem,java.lang.String,java.lang.String[])>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.BasicFileAttributes readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void <init>()>",
    "<nextflow.file.http.XFileSystem: java.util.Set supportedFileAttributeViews()>",
    "<nextflow.file.http.XFileSystemProvider: java.io.OutputStream newOutputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider: java.io.InputStream newInputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileStore getFileStore(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$invoke$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolve(java.nio.file.Path)>",
    "<nextflow.file.http.HttpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getRootDirectories()>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime lastAccessTime()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: java.net.URI key(java.lang.String,java.lang.String)>",
    "<nextflow.file.http.XPath: boolean equals(java.lang.Object)>",
    "<nextflow.file.http.XFileSystem: java.nio.file.PathMatcher getPathMatcher(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime creationTime()>",
    "<nextflow.file.http.XFileSystemProvider: void setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.XPath: java.nio.file.Path relativize(java.nio.file.Path)>",
    "<nextflow.file.http.FtpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.FileAttributeView getFileAttributeView(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider: void <clinit>()>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath createXPath(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: boolean isSameFile(java.nio.file.Path,java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XPath: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.DirectoryStream newDirectoryStream(java.nio.file.Path,java.nio.file.DirectoryStream$Filter)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getParent()>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(java.util.Map)>",
    "<nextflow.file.http.XFileSystemProvider: void createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XFileSystem: boolean equals(java.lang.Object)>"
  ],
  "19.04.0": [
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem getFileSystem(java.net.URI,boolean)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.channels.SeekableByteChannel newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath get(java.lang.String)>",
    "<nextflow.file.http.XFileAttributes: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: void <init>(nextflow.file.http.XPath,groovy.lang.Reference)>",
    "<nextflow.file.http.XFileSystemProvider: void move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.HttpsFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: java.nio.file.Path next()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.util.Map readAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: java.net.URI toUri()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getFileStores()>",
    "<nextflow.file.http.XFileSystemProvider: void checkAccess(java.nio.file.Path,java.nio.file.AccessMode[])>",
    "<nextflow.file.http.XFileSystemProvider$1: int read(java.nio.ByteBuffer)>",
    "<nextflow.file.http.XFileSystemProvider: void delete(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: void this$dist$set$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$get$2(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider$1: long size()>",
    "<nextflow.file.http.XFileSystem: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath: int getNameCount()>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(nextflow.file.http.XPath)>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolveSibling(java.nio.file.Path)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getFileName()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem newFileSystem(java.net.URI,java.util.Map)>",
    "<nextflow.file.http.XPath: java.util.Iterator iterator()>",
    "<nextflow.file.http.XPath: void <init>(nextflow.file.http.XFileSystem,java.lang.String,java.lang.String[])>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.BasicFileAttributes readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void <init>()>",
    "<nextflow.file.http.XFileSystem: java.util.Set supportedFileAttributeViews()>",
    "<nextflow.file.http.XFileSystemProvider: java.io.OutputStream newOutputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider: java.io.InputStream newInputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileStore getFileStore(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$invoke$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolve(java.nio.file.Path)>",
    "<nextflow.file.http.HttpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getRootDirectories()>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime lastAccessTime()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: java.net.URI key(java.lang.String,java.lang.String)>",
    "<nextflow.file.http.XPath: boolean equals(java.lang.Object)>",
    "<nextflow.file.http.XFileSystem: java.nio.file.PathMatcher getPathMatcher(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime creationTime()>",
    "<nextflow.file.http.XFileSystemProvider: void setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.XPath: java.nio.file.Path relativize(java.nio.file.Path)>",
    "<nextflow.file.http.FtpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.FileAttributeView getFileAttributeView(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider: void <clinit>()>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath createXPath(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: boolean isSameFile(java.nio.file.Path,java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XPath: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.DirectoryStream newDirectoryStream(java.nio.file.Path,java.nio.file.DirectoryStream$Filter)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getParent()>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(java.util.Map)>",
    "<nextflow.file.http.XFileSystemProvider: void createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XFileSystem: boolean equals(java.lang.Object)>"
  ],
  "19.06.0-edge": [
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem getFileSystem(java.net.URI,boolean)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.channels.SeekableByteChannel newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath get(java.lang.String)>",
    "<nextflow.file.http.XFileAttributes: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: void <init>(nextflow.file.http.XPath,groovy.lang.Reference)>",
    "<nextflow.file.http.XFileSystemProvider: void move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.HttpsFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: java.nio.file.Path next()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.util.Map readAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: java.net.URI toUri()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getFileStores()>",
    "<nextflow.file.http.XFileSystemProvider: void checkAccess(java.nio.file.Path,java.nio.file.AccessMode[])>",
    "<nextflow.file.http.XFileSystemProvider$1: int read(java.nio.ByteBuffer)>",
    "<nextflow.file.http.XFileSystemProvider: void delete(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: void this$dist$set$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$get$2(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider$1: long size()>",
    "<nextflow.file.http.XFileSystem: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath: int getNameCount()>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(nextflow.file.http.XPath)>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolveSibling(java.nio.file.Path)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getFileName()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem newFileSystem(java.net.URI,java.util.Map)>",
    "<nextflow.file.http.XPath: java.util.Iterator iterator()>",
    "<nextflow.file.http.XPath: void <init>(nextflow.file.http.XFileSystem,java.lang.String,java.lang.String[])>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.BasicFileAttributes readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void <init>()>",
    "<nextflow.file.http.XFileSystem: java.util.Set supportedFileAttributeViews()>",
    "<nextflow.file.http.XFileSystemProvider: java.io.OutputStream newOutputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider: java.io.InputStream newInputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileStore getFileStore(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$invoke$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolve(java.nio.file.Path)>",
    "<nextflow.file.http.HttpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getRootDirectories()>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime lastAccessTime()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: java.net.URI key(java.lang.String,java.lang.String)>",
    "<nextflow.file.http.XPath: boolean equals(java.lang.Object)>",
    "<nextflow.file.http.XFileSystem: java.nio.file.PathMatcher getPathMatcher(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime creationTime()>",
    "<nextflow.file.http.XFileSystemProvider: void setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.XPath: java.nio.file.Path relativize(java.nio.file.Path)>",
    "<nextflow.file.http.FtpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.FileAttributeView getFileAttributeView(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider: void <clinit>()>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath createXPath(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: boolean isSameFile(java.nio.file.Path,java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XPath: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.DirectoryStream newDirectoryStream(java.nio.file.Path,java.nio.file.DirectoryStream$Filter)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getParent()>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(java.util.Map)>",
    "<nextflow.file.http.XFileSystemProvider: void createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XFileSystem: boolean equals(java.lang.Object)>"
  ],
  "19.03.0-edge": [
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem getFileSystem(java.net.URI,boolean)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.channels.SeekableByteChannel newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath get(java.lang.String)>",
    "<nextflow.file.http.XFileAttributes: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: void <init>(nextflow.file.http.XPath,groovy.lang.Reference)>",
    "<nextflow.file.http.XFileSystemProvider: void move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.HttpsFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: java.nio.file.Path next()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.util.Map readAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: java.net.URI toUri()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getFileStores()>",
    "<nextflow.file.http.XFileSystemProvider: void checkAccess(java.nio.file.Path,java.nio.file.AccessMode[])>",
    "<nextflow.file.http.XFileSystemProvider$1: int read(java.nio.ByteBuffer)>",
    "<nextflow.file.http.XFileSystemProvider: void delete(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: void this$dist$set$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$get$2(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider$1: long size()>",
    "<nextflow.file.http.XFileSystem: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath: int getNameCount()>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(nextflow.file.http.XPath)>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolveSibling(java.nio.file.Path)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getFileName()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem newFileSystem(java.net.URI,java.util.Map)>",
    "<nextflow.file.http.XPath: java.util.Iterator iterator()>",
    "<nextflow.file.http.XPath: void <init>(nextflow.file.http.XFileSystem,java.lang.String,java.lang.String[])>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.BasicFileAttributes readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void <init>()>",
    "<nextflow.file.http.XFileSystem: java.util.Set supportedFileAttributeViews()>",
    "<nextflow.file.http.XFileSystemProvider: java.io.OutputStream newOutputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider: java.io.InputStream newInputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileStore getFileStore(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$invoke$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolve(java.nio.file.Path)>",
    "<nextflow.file.http.HttpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getRootDirectories()>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime lastAccessTime()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: java.net.URI key(java.lang.String,java.lang.String)>",
    "<nextflow.file.http.XPath: boolean equals(java.lang.Object)>",
    "<nextflow.file.http.XFileSystem: java.nio.file.PathMatcher getPathMatcher(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime creationTime()>",
    "<nextflow.file.http.XFileSystemProvider: void setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.XPath: java.nio.file.Path relativize(java.nio.file.Path)>",
    "<nextflow.file.http.FtpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.FileAttributeView getFileAttributeView(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider: void <clinit>()>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath createXPath(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: boolean isSameFile(java.nio.file.Path,java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XPath: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.DirectoryStream newDirectoryStream(java.nio.file.Path,java.nio.file.DirectoryStream$Filter)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getParent()>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(java.util.Map)>",
    "<nextflow.file.http.XFileSystemProvider: void createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XFileSystem: boolean equals(java.lang.Object)>"
  ],
  "19.04.3": [
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem getFileSystem(java.net.URI,boolean)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.channels.SeekableByteChannel newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath get(java.lang.String)>",
    "<nextflow.file.http.XFileAttributes: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: void <init>(nextflow.file.http.XPath,groovy.lang.Reference)>",
    "<nextflow.file.http.XFileSystemProvider: void move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.HttpsFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: java.nio.file.Path next()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.util.Map readAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: java.net.URI toUri()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getFileStores()>",
    "<nextflow.file.http.XFileSystemProvider: void checkAccess(java.nio.file.Path,java.nio.file.AccessMode[])>",
    "<nextflow.file.http.XFileSystemProvider$1: int read(java.nio.ByteBuffer)>",
    "<nextflow.file.http.XFileSystemProvider: void delete(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: void this$dist$set$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$get$2(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider$1: long size()>",
    "<nextflow.file.http.XFileSystem: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath: int getNameCount()>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(nextflow.file.http.XPath)>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolveSibling(java.nio.file.Path)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getFileName()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem newFileSystem(java.net.URI,java.util.Map)>",
    "<nextflow.file.http.XPath: java.util.Iterator iterator()>",
    "<nextflow.file.http.XPath: void <init>(nextflow.file.http.XFileSystem,java.lang.String,java.lang.String[])>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.BasicFileAttributes readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void <init>()>",
    "<nextflow.file.http.XFileSystem: java.util.Set supportedFileAttributeViews()>",
    "<nextflow.file.http.XFileSystemProvider: java.io.OutputStream newOutputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider: java.io.InputStream newInputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileStore getFileStore(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$invoke$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolve(java.nio.file.Path)>",
    "<nextflow.file.http.HttpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getRootDirectories()>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime lastAccessTime()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: java.net.URI key(java.lang.String,java.lang.String)>",
    "<nextflow.file.http.XPath: boolean equals(java.lang.Object)>",
    "<nextflow.file.http.XFileSystem: java.nio.file.PathMatcher getPathMatcher(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime creationTime()>",
    "<nextflow.file.http.XFileSystemProvider: void setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.XPath: java.nio.file.Path relativize(java.nio.file.Path)>",
    "<nextflow.file.http.FtpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.FileAttributeView getFileAttributeView(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider: void <clinit>()>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath createXPath(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: boolean isSameFile(java.nio.file.Path,java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XPath: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.DirectoryStream newDirectoryStream(java.nio.file.Path,java.nio.file.DirectoryStream$Filter)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getParent()>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(java.util.Map)>",
    "<nextflow.file.http.XFileSystemProvider: void createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XFileSystem: boolean equals(java.lang.Object)>"
  ],
  "19.02.0-edge": [
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem getFileSystem(java.net.URI,boolean)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.channels.SeekableByteChannel newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath get(java.lang.String)>",
    "<nextflow.file.http.XFileAttributes: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: void <init>(nextflow.file.http.XPath,groovy.lang.Reference)>",
    "<nextflow.file.http.XFileSystemProvider: void move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.HttpsFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: java.nio.file.Path next()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.util.Map readAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: java.net.URI toUri()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getFileStores()>",
    "<nextflow.file.http.XFileSystemProvider: void checkAccess(java.nio.file.Path,java.nio.file.AccessMode[])>",
    "<nextflow.file.http.XFileSystemProvider$1: int read(java.nio.ByteBuffer)>",
    "<nextflow.file.http.XFileSystemProvider: void delete(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: void this$dist$set$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$get$2(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider$1: long size()>",
    "<nextflow.file.http.XFileSystem: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath: int getNameCount()>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(nextflow.file.http.XPath)>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolveSibling(java.nio.file.Path)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getFileName()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem newFileSystem(java.net.URI,java.util.Map)>",
    "<nextflow.file.http.XPath: java.util.Iterator iterator()>",
    "<nextflow.file.http.XPath: void <init>(nextflow.file.http.XFileSystem,java.lang.String,java.lang.String[])>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.BasicFileAttributes readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void <init>()>",
    "<nextflow.file.http.XFileSystem: java.util.Set supportedFileAttributeViews()>",
    "<nextflow.file.http.XFileSystemProvider: java.io.OutputStream newOutputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider: java.io.InputStream newInputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileStore getFileStore(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$invoke$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolve(java.nio.file.Path)>",
    "<nextflow.file.http.HttpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getRootDirectories()>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime lastAccessTime()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: java.net.URI key(java.lang.String,java.lang.String)>",
    "<nextflow.file.http.XPath: boolean equals(java.lang.Object)>",
    "<nextflow.file.http.XFileSystem: java.nio.file.PathMatcher getPathMatcher(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime creationTime()>",
    "<nextflow.file.http.XFileSystemProvider: void setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.XPath: java.nio.file.Path relativize(java.nio.file.Path)>",
    "<nextflow.file.http.FtpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.FileAttributeView getFileAttributeView(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider: void <clinit>()>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath createXPath(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: boolean isSameFile(java.nio.file.Path,java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XPath: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.DirectoryStream newDirectoryStream(java.nio.file.Path,java.nio.file.DirectoryStream$Filter)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getParent()>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(java.util.Map)>",
    "<nextflow.file.http.XFileSystemProvider: void createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XFileSystem: boolean equals(java.lang.Object)>"
  ],
  "19.04.1": [
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem getFileSystem(java.net.URI,boolean)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.channels.SeekableByteChannel newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath get(java.lang.String)>",
    "<nextflow.file.http.XFileAttributes: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: void <init>(nextflow.file.http.XPath,groovy.lang.Reference)>",
    "<nextflow.file.http.XFileSystemProvider: void move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.HttpsFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: java.nio.file.Path next()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.util.Map readAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: java.net.URI toUri()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getFileStores()>",
    "<nextflow.file.http.XFileSystemProvider: void checkAccess(java.nio.file.Path,java.nio.file.AccessMode[])>",
    "<nextflow.file.http.XFileSystemProvider$1: int read(java.nio.ByteBuffer)>",
    "<nextflow.file.http.XFileSystemProvider: void delete(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: void this$dist$set$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$get$2(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider$1: long size()>",
    "<nextflow.file.http.XFileSystem: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath: int getNameCount()>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(nextflow.file.http.XPath)>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolveSibling(java.nio.file.Path)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getFileName()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem newFileSystem(java.net.URI,java.util.Map)>",
    "<nextflow.file.http.XPath: java.util.Iterator iterator()>",
    "<nextflow.file.http.XPath: void <init>(nextflow.file.http.XFileSystem,java.lang.String,java.lang.String[])>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.BasicFileAttributes readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void <init>()>",
    "<nextflow.file.http.XFileSystem: java.util.Set supportedFileAttributeViews()>",
    "<nextflow.file.http.XFileSystemProvider: java.io.OutputStream newOutputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider: java.io.InputStream newInputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileStore getFileStore(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$invoke$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolve(java.nio.file.Path)>",
    "<nextflow.file.http.HttpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getRootDirectories()>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime lastAccessTime()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: java.net.URI key(java.lang.String,java.lang.String)>",
    "<nextflow.file.http.XPath: boolean equals(java.lang.Object)>",
    "<nextflow.file.http.XFileSystem: java.nio.file.PathMatcher getPathMatcher(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime creationTime()>",
    "<nextflow.file.http.XFileSystemProvider: void setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.XPath: java.nio.file.Path relativize(java.nio.file.Path)>",
    "<nextflow.file.http.FtpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.FileAttributeView getFileAttributeView(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider: void <clinit>()>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath createXPath(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: boolean isSameFile(java.nio.file.Path,java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XPath: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.DirectoryStream newDirectoryStream(java.nio.file.Path,java.nio.file.DirectoryStream$Filter)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getParent()>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(java.util.Map)>",
    "<nextflow.file.http.XFileSystemProvider: void createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XFileSystem: boolean equals(java.lang.Object)>"
  ],
  "19.05.0-edge": [
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem getFileSystem(java.net.URI,boolean)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.channels.SeekableByteChannel newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath get(java.lang.String)>",
    "<nextflow.file.http.XFileAttributes: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: void <init>(nextflow.file.http.XPath,groovy.lang.Reference)>",
    "<nextflow.file.http.XFileSystemProvider: void move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.HttpsFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: java.nio.file.Path next()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.util.Map readAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: java.net.URI toUri()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getFileStores()>",
    "<nextflow.file.http.XFileSystemProvider: void checkAccess(java.nio.file.Path,java.nio.file.AccessMode[])>",
    "<nextflow.file.http.XFileSystemProvider$1: int read(java.nio.ByteBuffer)>",
    "<nextflow.file.http.XFileSystemProvider: void delete(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: void this$dist$set$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$get$2(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider$1: long size()>",
    "<nextflow.file.http.XFileSystem: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath: int getNameCount()>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(nextflow.file.http.XPath)>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolveSibling(java.nio.file.Path)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getFileName()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem newFileSystem(java.net.URI,java.util.Map)>",
    "<nextflow.file.http.XPath: java.util.Iterator iterator()>",
    "<nextflow.file.http.XPath: void <init>(nextflow.file.http.XFileSystem,java.lang.String,java.lang.String[])>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.BasicFileAttributes readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void <init>()>",
    "<nextflow.file.http.XFileSystem: java.util.Set supportedFileAttributeViews()>",
    "<nextflow.file.http.XFileSystemProvider: java.io.OutputStream newOutputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider: java.io.InputStream newInputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileStore getFileStore(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$invoke$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolve(java.nio.file.Path)>",
    "<nextflow.file.http.HttpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getRootDirectories()>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime lastAccessTime()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: java.net.URI key(java.lang.String,java.lang.String)>",
    "<nextflow.file.http.XPath: boolean equals(java.lang.Object)>",
    "<nextflow.file.http.XFileSystem: java.nio.file.PathMatcher getPathMatcher(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime creationTime()>",
    "<nextflow.file.http.XFileSystemProvider: void setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.XPath: java.nio.file.Path relativize(java.nio.file.Path)>",
    "<nextflow.file.http.FtpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.FileAttributeView getFileAttributeView(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider: void <clinit>()>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath createXPath(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: boolean isSameFile(java.nio.file.Path,java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XPath: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.DirectoryStream newDirectoryStream(java.nio.file.Path,java.nio.file.DirectoryStream$Filter)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getParent()>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(java.util.Map)>",
    "<nextflow.file.http.XFileSystemProvider: void createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XFileSystem: boolean equals(java.lang.Object)>"
  ],
  "19.04.2": [
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem getFileSystem(java.net.URI,boolean)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.channels.SeekableByteChannel newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath get(java.lang.String)>",
    "<nextflow.file.http.XFileAttributes: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: void <init>(nextflow.file.http.XPath,groovy.lang.Reference)>",
    "<nextflow.file.http.XFileSystemProvider: void move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.HttpsFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: java.nio.file.Path next()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.util.Map readAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: java.net.URI toUri()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getFileStores()>",
    "<nextflow.file.http.XFileSystemProvider: void checkAccess(java.nio.file.Path,java.nio.file.AccessMode[])>",
    "<nextflow.file.http.XFileSystemProvider$1: int read(java.nio.ByteBuffer)>",
    "<nextflow.file.http.XFileSystemProvider: void delete(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: void this$dist$set$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$get$2(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider$1: long size()>",
    "<nextflow.file.http.XFileSystem: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath: int getNameCount()>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(nextflow.file.http.XPath)>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolveSibling(java.nio.file.Path)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getFileName()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem newFileSystem(java.net.URI,java.util.Map)>",
    "<nextflow.file.http.XPath: java.util.Iterator iterator()>",
    "<nextflow.file.http.XPath: void <init>(nextflow.file.http.XFileSystem,java.lang.String,java.lang.String[])>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.BasicFileAttributes readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void <init>()>",
    "<nextflow.file.http.XFileSystem: java.util.Set supportedFileAttributeViews()>",
    "<nextflow.file.http.XFileSystemProvider: java.io.OutputStream newOutputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider: java.io.InputStream newInputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileStore getFileStore(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$invoke$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolve(java.nio.file.Path)>",
    "<nextflow.file.http.HttpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getRootDirectories()>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime lastAccessTime()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: java.net.URI key(java.lang.String,java.lang.String)>",
    "<nextflow.file.http.XPath: boolean equals(java.lang.Object)>",
    "<nextflow.file.http.XFileSystem: java.nio.file.PathMatcher getPathMatcher(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime creationTime()>",
    "<nextflow.file.http.XFileSystemProvider: void setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.XPath: java.nio.file.Path relativize(java.nio.file.Path)>",
    "<nextflow.file.http.FtpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.FileAttributeView getFileAttributeView(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider: void <clinit>()>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath createXPath(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: boolean isSameFile(java.nio.file.Path,java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XPath: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.DirectoryStream newDirectoryStream(java.nio.file.Path,java.nio.file.DirectoryStream$Filter)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getParent()>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(java.util.Map)>",
    "<nextflow.file.http.XFileSystemProvider: void createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XFileSystem: boolean equals(java.lang.Object)>"
  ],
  "19.07.0": [
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem getFileSystem(java.net.URI,boolean)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.channels.SeekableByteChannel newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath get(java.lang.String)>",
    "<nextflow.file.http.XFileAttributes: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: void <init>(nextflow.file.http.XPath,groovy.lang.Reference)>",
    "<nextflow.file.http.XFileSystemProvider: void move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.HttpsFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: java.nio.file.Path next()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.util.Map readAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: java.net.URI toUri()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getFileStores()>",
    "<nextflow.file.http.XFileSystemProvider: void checkAccess(java.nio.file.Path,java.nio.file.AccessMode[])>",
    "<nextflow.file.http.XFileSystemProvider$1: int read(java.nio.ByteBuffer)>",
    "<nextflow.file.http.XFileSystemProvider: void delete(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: void this$dist$set$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$get$2(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider$1: long size()>",
    "<nextflow.file.http.XFileSystem: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath: int getNameCount()>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(nextflow.file.http.XPath)>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolveSibling(java.nio.file.Path)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getFileName()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem newFileSystem(java.net.URI,java.util.Map)>",
    "<nextflow.file.http.XPath: java.util.Iterator iterator()>",
    "<nextflow.file.http.XPath: void <init>(nextflow.file.http.XFileSystem,java.lang.String,java.lang.String[])>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.BasicFileAttributes readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void <init>()>",
    "<nextflow.file.http.XFileSystem: java.util.Set supportedFileAttributeViews()>",
    "<nextflow.file.http.XFileSystemProvider: java.io.OutputStream newOutputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider: java.io.InputStream newInputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileStore getFileStore(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$invoke$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolve(java.nio.file.Path)>",
    "<nextflow.file.http.HttpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getRootDirectories()>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime lastAccessTime()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: java.net.URI key(java.lang.String,java.lang.String)>",
    "<nextflow.file.http.XPath: boolean equals(java.lang.Object)>",
    "<nextflow.file.http.XFileSystem: java.nio.file.PathMatcher getPathMatcher(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime creationTime()>",
    "<nextflow.file.http.XFileSystemProvider: void setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.XPath: java.nio.file.Path relativize(java.nio.file.Path)>",
    "<nextflow.file.http.FtpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.FileAttributeView getFileAttributeView(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider: void <clinit>()>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath createXPath(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: boolean isSameFile(java.nio.file.Path,java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XPath: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.DirectoryStream newDirectoryStream(java.nio.file.Path,java.nio.file.DirectoryStream$Filter)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getParent()>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(java.util.Map)>",
    "<nextflow.file.http.XFileSystemProvider: void createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XFileSystem: boolean equals(java.lang.Object)>"
  ],
  "20.04.0-edge": [
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem getFileSystem(java.net.URI,boolean)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.channels.SeekableByteChannel newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath get(java.lang.String)>",
    "<nextflow.file.http.XFileAttributes: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: void <init>(nextflow.file.http.XPath,groovy.lang.Reference)>",
    "<nextflow.file.http.XFileSystemProvider: void move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.HttpsFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: java.nio.file.Path next()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.util.Map readAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: java.net.URI toUri()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getFileStores()>",
    "<nextflow.file.http.XFileSystemProvider: void checkAccess(java.nio.file.Path,java.nio.file.AccessMode[])>",
    "<nextflow.file.http.XFileSystemProvider$1: int read(java.nio.ByteBuffer)>",
    "<nextflow.file.http.XFileSystemProvider: void delete(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: void this$dist$set$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$get$2(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider$1: long size()>",
    "<nextflow.file.http.XFileSystem: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath: int getNameCount()>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(nextflow.file.http.XPath)>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolveSibling(java.nio.file.Path)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getFileName()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem newFileSystem(java.net.URI,java.util.Map)>",
    "<nextflow.file.http.XPath: java.util.Iterator iterator()>",
    "<nextflow.file.http.XPath: void <init>(nextflow.file.http.XFileSystem,java.lang.String,java.lang.String[])>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.BasicFileAttributes readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void <init>()>",
    "<nextflow.file.http.XFileSystem: java.util.Set supportedFileAttributeViews()>",
    "<nextflow.file.http.XFileSystemProvider: java.io.OutputStream newOutputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider: java.io.InputStream newInputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileStore getFileStore(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$invoke$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolve(java.nio.file.Path)>",
    "<nextflow.file.http.HttpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getRootDirectories()>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime lastAccessTime()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: java.net.URI key(java.lang.String,java.lang.String)>",
    "<nextflow.file.http.XPath: boolean equals(java.lang.Object)>",
    "<nextflow.file.http.XFileSystem: java.nio.file.PathMatcher getPathMatcher(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime creationTime()>",
    "<nextflow.file.http.XFileSystemProvider: void setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.XPath: java.nio.file.Path relativize(java.nio.file.Path)>",
    "<nextflow.file.http.FtpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.FileAttributeView getFileAttributeView(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider: void <clinit>()>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath createXPath(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: boolean isSameFile(java.nio.file.Path,java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XPath: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.DirectoryStream newDirectoryStream(java.nio.file.Path,java.nio.file.DirectoryStream$Filter)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getParent()>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(java.util.Map)>",
    "<nextflow.file.http.XFileSystemProvider: void createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XFileSystem: boolean equals(java.lang.Object)>"
  ],
  "20.05.0-edge": [
    "<nextflow.file.http.XPathSerializer: nextflow.file.http.XPath read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)>",
    "<nextflow.file.http.XPathSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,nextflow.file.http.XPath)>"
  ],
  "20.06.0-edge": [
    "<nextflow.file.http.XPathSerializer: nextflow.file.http.XPath read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)>",
    "<nextflow.file.http.XPathSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,nextflow.file.http.XPath)>"
  ],
  "20.07.1": [
    "<nextflow.file.http.XPathSerializer: nextflow.file.http.XPath read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)>",
    "<nextflow.file.http.XPathSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,nextflow.file.http.XPath)>"
  ],
  "20.07.0-RC1": [
    "<nextflow.file.http.XPathSerializer: nextflow.file.http.XPath read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)>",
    "<nextflow.file.http.XPathSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,nextflow.file.http.XPath)>"
  ],
  "20.04.0": [
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem getFileSystem(java.net.URI,boolean)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.channels.SeekableByteChannel newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath get(java.lang.String)>",
    "<nextflow.file.http.XFileAttributes: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: void <init>(nextflow.file.http.XPath,groovy.lang.Reference)>",
    "<nextflow.file.http.XFileSystemProvider: void move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.HttpsFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: java.nio.file.Path next()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.util.Map readAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: java.net.URI toUri()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getFileStores()>",
    "<nextflow.file.http.XFileSystemProvider: void checkAccess(java.nio.file.Path,java.nio.file.AccessMode[])>",
    "<nextflow.file.http.XFileSystemProvider$1: int read(java.nio.ByteBuffer)>",
    "<nextflow.file.http.XFileSystemProvider: void delete(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: void this$dist$set$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$get$2(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider$1: long size()>",
    "<nextflow.file.http.XFileSystem: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath: int getNameCount()>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(nextflow.file.http.XPath)>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolveSibling(java.nio.file.Path)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getFileName()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem newFileSystem(java.net.URI,java.util.Map)>",
    "<nextflow.file.http.XPath: java.util.Iterator iterator()>",
    "<nextflow.file.http.XPath: void <init>(nextflow.file.http.XFileSystem,java.lang.String,java.lang.String[])>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.BasicFileAttributes readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void <init>()>",
    "<nextflow.file.http.XFileSystem: java.util.Set supportedFileAttributeViews()>",
    "<nextflow.file.http.XFileSystemProvider: java.io.OutputStream newOutputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider: java.io.InputStream newInputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileStore getFileStore(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$invoke$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolve(java.nio.file.Path)>",
    "<nextflow.file.http.HttpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getRootDirectories()>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime lastAccessTime()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: java.net.URI key(java.lang.String,java.lang.String)>",
    "<nextflow.file.http.XPath: boolean equals(java.lang.Object)>",
    "<nextflow.file.http.XFileSystem: java.nio.file.PathMatcher getPathMatcher(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime creationTime()>",
    "<nextflow.file.http.XFileSystemProvider: void setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.XPath: java.nio.file.Path relativize(java.nio.file.Path)>",
    "<nextflow.file.http.FtpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.FileAttributeView getFileAttributeView(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider: void <clinit>()>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath createXPath(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: boolean isSameFile(java.nio.file.Path,java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XPath: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.DirectoryStream newDirectoryStream(java.nio.file.Path,java.nio.file.DirectoryStream$Filter)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getParent()>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(java.util.Map)>",
    "<nextflow.file.http.XFileSystemProvider: void createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XFileSystem: boolean equals(java.lang.Object)>"
  ],
  "20.05.0": [
    "<nextflow.file.http.XPathSerializer: nextflow.file.http.XPath read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)>",
    "<nextflow.file.http.XPathSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,nextflow.file.http.XPath)>"
  ],
  "20.07.0": [
    "<nextflow.file.http.XPathSerializer: nextflow.file.http.XPath read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)>",
    "<nextflow.file.http.XPathSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,nextflow.file.http.XPath)>"
  ],
  "20.04.1-edge": [
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem getFileSystem(java.net.URI,boolean)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.channels.SeekableByteChannel newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath get(java.lang.String)>",
    "<nextflow.file.http.XFileAttributes: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: void <init>(nextflow.file.http.XPath,groovy.lang.Reference)>",
    "<nextflow.file.http.XFileSystemProvider: void move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.HttpsFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: java.nio.file.Path next()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.util.Map readAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: java.net.URI toUri()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getFileStores()>",
    "<nextflow.file.http.XFileSystemProvider: void checkAccess(java.nio.file.Path,java.nio.file.AccessMode[])>",
    "<nextflow.file.http.XFileSystemProvider$1: int read(java.nio.ByteBuffer)>",
    "<nextflow.file.http.XFileSystemProvider: void delete(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: void this$dist$set$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$get$2(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider$1: long size()>",
    "<nextflow.file.http.XFileSystem: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath: int getNameCount()>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(nextflow.file.http.XPath)>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolveSibling(java.nio.file.Path)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getFileName()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem newFileSystem(java.net.URI,java.util.Map)>",
    "<nextflow.file.http.XPath: java.util.Iterator iterator()>",
    "<nextflow.file.http.XPath: void <init>(nextflow.file.http.XFileSystem,java.lang.String,java.lang.String[])>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.BasicFileAttributes readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void <init>()>",
    "<nextflow.file.http.XFileSystem: java.util.Set supportedFileAttributeViews()>",
    "<nextflow.file.http.XFileSystemProvider: java.io.OutputStream newOutputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider: java.io.InputStream newInputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileStore getFileStore(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$invoke$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolve(java.nio.file.Path)>",
    "<nextflow.file.http.HttpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getRootDirectories()>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime lastAccessTime()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: java.net.URI key(java.lang.String,java.lang.String)>",
    "<nextflow.file.http.XPath: boolean equals(java.lang.Object)>",
    "<nextflow.file.http.XFileSystem: java.nio.file.PathMatcher getPathMatcher(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime creationTime()>",
    "<nextflow.file.http.XFileSystemProvider: void setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.XPath: java.nio.file.Path relativize(java.nio.file.Path)>",
    "<nextflow.file.http.FtpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.FileAttributeView getFileAttributeView(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider: void <clinit>()>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath createXPath(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: boolean isSameFile(java.nio.file.Path,java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XPath: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.DirectoryStream newDirectoryStream(java.nio.file.Path,java.nio.file.DirectoryStream$Filter)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getParent()>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(java.util.Map)>",
    "<nextflow.file.http.XFileSystemProvider: void createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XFileSystem: boolean equals(java.lang.Object)>"
  ],
  "20.01.0-rc1": [
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem getFileSystem(java.net.URI,boolean)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.channels.SeekableByteChannel newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath get(java.lang.String)>",
    "<nextflow.file.http.XFileAttributes: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: void <init>(nextflow.file.http.XPath,groovy.lang.Reference)>",
    "<nextflow.file.http.XFileSystemProvider: void move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.HttpsFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: java.nio.file.Path next()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.util.Map readAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: java.net.URI toUri()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getFileStores()>",
    "<nextflow.file.http.XFileSystemProvider: void checkAccess(java.nio.file.Path,java.nio.file.AccessMode[])>",
    "<nextflow.file.http.XFileSystemProvider$1: int read(java.nio.ByteBuffer)>",
    "<nextflow.file.http.XFileSystemProvider: void delete(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: void this$dist$set$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$get$2(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider$1: long size()>",
    "<nextflow.file.http.XFileSystem: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath: int getNameCount()>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(nextflow.file.http.XPath)>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolveSibling(java.nio.file.Path)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getFileName()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem newFileSystem(java.net.URI,java.util.Map)>",
    "<nextflow.file.http.XPath: java.util.Iterator iterator()>",
    "<nextflow.file.http.XPath: void <init>(nextflow.file.http.XFileSystem,java.lang.String,java.lang.String[])>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.BasicFileAttributes readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void <init>()>",
    "<nextflow.file.http.XFileSystem: java.util.Set supportedFileAttributeViews()>",
    "<nextflow.file.http.XFileSystemProvider: java.io.OutputStream newOutputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider: java.io.InputStream newInputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileStore getFileStore(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$invoke$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolve(java.nio.file.Path)>",
    "<nextflow.file.http.HttpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getRootDirectories()>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime lastAccessTime()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: java.net.URI key(java.lang.String,java.lang.String)>",
    "<nextflow.file.http.XPath: boolean equals(java.lang.Object)>",
    "<nextflow.file.http.XFileSystem: java.nio.file.PathMatcher getPathMatcher(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime creationTime()>",
    "<nextflow.file.http.XFileSystemProvider: void setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.XPath: java.nio.file.Path relativize(java.nio.file.Path)>",
    "<nextflow.file.http.FtpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.FileAttributeView getFileAttributeView(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider: void <clinit>()>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath createXPath(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: boolean isSameFile(java.nio.file.Path,java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XPath: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.DirectoryStream newDirectoryStream(java.nio.file.Path,java.nio.file.DirectoryStream$Filter)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getParent()>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(java.util.Map)>",
    "<nextflow.file.http.XFileSystemProvider: void createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XFileSystem: boolean equals(java.lang.Object)>"
  ],
  "19.08.1-edge": [
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem getFileSystem(java.net.URI,boolean)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.channels.SeekableByteChannel newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath get(java.lang.String)>",
    "<nextflow.file.http.XFileAttributes: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: void <init>(nextflow.file.http.XPath,groovy.lang.Reference)>",
    "<nextflow.file.http.XFileSystemProvider: void move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.HttpsFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: java.nio.file.Path next()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.util.Map readAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: java.net.URI toUri()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getFileStores()>",
    "<nextflow.file.http.XFileSystemProvider: void checkAccess(java.nio.file.Path,java.nio.file.AccessMode[])>",
    "<nextflow.file.http.XFileSystemProvider$1: int read(java.nio.ByteBuffer)>",
    "<nextflow.file.http.XFileSystemProvider: void delete(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: void this$dist$set$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$get$2(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider$1: long size()>",
    "<nextflow.file.http.XFileSystem: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath: int getNameCount()>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(nextflow.file.http.XPath)>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolveSibling(java.nio.file.Path)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getFileName()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem newFileSystem(java.net.URI,java.util.Map)>",
    "<nextflow.file.http.XPath: java.util.Iterator iterator()>",
    "<nextflow.file.http.XPath: void <init>(nextflow.file.http.XFileSystem,java.lang.String,java.lang.String[])>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.BasicFileAttributes readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void <init>()>",
    "<nextflow.file.http.XFileSystem: java.util.Set supportedFileAttributeViews()>",
    "<nextflow.file.http.XFileSystemProvider: java.io.OutputStream newOutputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider: java.io.InputStream newInputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileStore getFileStore(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$invoke$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolve(java.nio.file.Path)>",
    "<nextflow.file.http.HttpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getRootDirectories()>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime lastAccessTime()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: java.net.URI key(java.lang.String,java.lang.String)>",
    "<nextflow.file.http.XPath: boolean equals(java.lang.Object)>",
    "<nextflow.file.http.XFileSystem: java.nio.file.PathMatcher getPathMatcher(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime creationTime()>",
    "<nextflow.file.http.XFileSystemProvider: void setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.XPath: java.nio.file.Path relativize(java.nio.file.Path)>",
    "<nextflow.file.http.FtpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.FileAttributeView getFileAttributeView(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider: void <clinit>()>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath createXPath(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: boolean isSameFile(java.nio.file.Path,java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XPath: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.DirectoryStream newDirectoryStream(java.nio.file.Path,java.nio.file.DirectoryStream$Filter)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getParent()>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(java.util.Map)>",
    "<nextflow.file.http.XFileSystemProvider: void createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XFileSystem: boolean equals(java.lang.Object)>"
  ],
  "19.12.0-edge": [
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem getFileSystem(java.net.URI,boolean)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.channels.SeekableByteChannel newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath get(java.lang.String)>",
    "<nextflow.file.http.XFileAttributes: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: void <init>(nextflow.file.http.XPath,groovy.lang.Reference)>",
    "<nextflow.file.http.XFileSystemProvider: void move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.HttpsFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: java.nio.file.Path next()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.util.Map readAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: java.net.URI toUri()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getFileStores()>",
    "<nextflow.file.http.XFileSystemProvider: void checkAccess(java.nio.file.Path,java.nio.file.AccessMode[])>",
    "<nextflow.file.http.XFileSystemProvider$1: int read(java.nio.ByteBuffer)>",
    "<nextflow.file.http.XFileSystemProvider: void delete(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: void this$dist$set$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$get$2(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider$1: long size()>",
    "<nextflow.file.http.XFileSystem: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath: int getNameCount()>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(nextflow.file.http.XPath)>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolveSibling(java.nio.file.Path)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getFileName()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem newFileSystem(java.net.URI,java.util.Map)>",
    "<nextflow.file.http.XPath: java.util.Iterator iterator()>",
    "<nextflow.file.http.XPath: void <init>(nextflow.file.http.XFileSystem,java.lang.String,java.lang.String[])>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.BasicFileAttributes readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void <init>()>",
    "<nextflow.file.http.XFileSystem: java.util.Set supportedFileAttributeViews()>",
    "<nextflow.file.http.XFileSystemProvider: java.io.OutputStream newOutputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider: java.io.InputStream newInputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileStore getFileStore(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$invoke$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolve(java.nio.file.Path)>",
    "<nextflow.file.http.HttpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getRootDirectories()>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime lastAccessTime()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: java.net.URI key(java.lang.String,java.lang.String)>",
    "<nextflow.file.http.XPath: boolean equals(java.lang.Object)>",
    "<nextflow.file.http.XFileSystem: java.nio.file.PathMatcher getPathMatcher(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime creationTime()>",
    "<nextflow.file.http.XFileSystemProvider: void setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.XPath: java.nio.file.Path relativize(java.nio.file.Path)>",
    "<nextflow.file.http.FtpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.FileAttributeView getFileAttributeView(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider: void <clinit>()>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath createXPath(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: boolean isSameFile(java.nio.file.Path,java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XPath: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.DirectoryStream newDirectoryStream(java.nio.file.Path,java.nio.file.DirectoryStream$Filter)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getParent()>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(java.util.Map)>",
    "<nextflow.file.http.XFileSystemProvider: void createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XFileSystem: boolean equals(java.lang.Object)>"
  ],
  "19.09.0-egde": [
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem getFileSystem(java.net.URI,boolean)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.channels.SeekableByteChannel newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath get(java.lang.String)>",
    "<nextflow.file.http.XFileAttributes: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: void <init>(nextflow.file.http.XPath,groovy.lang.Reference)>",
    "<nextflow.file.http.XFileSystemProvider: void move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.HttpsFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: java.nio.file.Path next()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.util.Map readAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: java.net.URI toUri()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getFileStores()>",
    "<nextflow.file.http.XFileSystemProvider: void checkAccess(java.nio.file.Path,java.nio.file.AccessMode[])>",
    "<nextflow.file.http.XFileSystemProvider$1: int read(java.nio.ByteBuffer)>",
    "<nextflow.file.http.XFileSystemProvider: void delete(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: void this$dist$set$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$get$2(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider$1: long size()>",
    "<nextflow.file.http.XFileSystem: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath: int getNameCount()>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(nextflow.file.http.XPath)>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolveSibling(java.nio.file.Path)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getFileName()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem newFileSystem(java.net.URI,java.util.Map)>",
    "<nextflow.file.http.XPath: java.util.Iterator iterator()>",
    "<nextflow.file.http.XPath: void <init>(nextflow.file.http.XFileSystem,java.lang.String,java.lang.String[])>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.BasicFileAttributes readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void <init>()>",
    "<nextflow.file.http.XFileSystem: java.util.Set supportedFileAttributeViews()>",
    "<nextflow.file.http.XFileSystemProvider: java.io.OutputStream newOutputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider: java.io.InputStream newInputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileStore getFileStore(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$invoke$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolve(java.nio.file.Path)>",
    "<nextflow.file.http.HttpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getRootDirectories()>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime lastAccessTime()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: java.net.URI key(java.lang.String,java.lang.String)>",
    "<nextflow.file.http.XPath: boolean equals(java.lang.Object)>",
    "<nextflow.file.http.XFileSystem: java.nio.file.PathMatcher getPathMatcher(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime creationTime()>",
    "<nextflow.file.http.XFileSystemProvider: void setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.XPath: java.nio.file.Path relativize(java.nio.file.Path)>",
    "<nextflow.file.http.FtpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.FileAttributeView getFileAttributeView(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider: void <clinit>()>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath createXPath(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: boolean isSameFile(java.nio.file.Path,java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XPath: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.DirectoryStream newDirectoryStream(java.nio.file.Path,java.nio.file.DirectoryStream$Filter)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getParent()>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(java.util.Map)>",
    "<nextflow.file.http.XFileSystemProvider: void createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XFileSystem: boolean equals(java.lang.Object)>"
  ],
  "20.02.0-edge": [
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem getFileSystem(java.net.URI,boolean)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.channels.SeekableByteChannel newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath get(java.lang.String)>",
    "<nextflow.file.http.XFileAttributes: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: void <init>(nextflow.file.http.XPath,groovy.lang.Reference)>",
    "<nextflow.file.http.XFileSystemProvider: void move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.HttpsFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: java.nio.file.Path next()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.util.Map readAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: java.net.URI toUri()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getFileStores()>",
    "<nextflow.file.http.XFileSystemProvider: void checkAccess(java.nio.file.Path,java.nio.file.AccessMode[])>",
    "<nextflow.file.http.XFileSystemProvider$1: int read(java.nio.ByteBuffer)>",
    "<nextflow.file.http.XFileSystemProvider: void delete(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: void this$dist$set$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$get$2(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider$1: long size()>",
    "<nextflow.file.http.XFileSystem: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath: int getNameCount()>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(nextflow.file.http.XPath)>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolveSibling(java.nio.file.Path)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getFileName()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem newFileSystem(java.net.URI,java.util.Map)>",
    "<nextflow.file.http.XPath: java.util.Iterator iterator()>",
    "<nextflow.file.http.XPath: void <init>(nextflow.file.http.XFileSystem,java.lang.String,java.lang.String[])>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.BasicFileAttributes readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void <init>()>",
    "<nextflow.file.http.XFileSystem: java.util.Set supportedFileAttributeViews()>",
    "<nextflow.file.http.XFileSystemProvider: java.io.OutputStream newOutputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider: java.io.InputStream newInputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileStore getFileStore(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$invoke$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolve(java.nio.file.Path)>",
    "<nextflow.file.http.HttpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getRootDirectories()>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime lastAccessTime()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: java.net.URI key(java.lang.String,java.lang.String)>",
    "<nextflow.file.http.XPath: boolean equals(java.lang.Object)>",
    "<nextflow.file.http.XFileSystem: java.nio.file.PathMatcher getPathMatcher(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime creationTime()>",
    "<nextflow.file.http.XFileSystemProvider: void setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.XPath: java.nio.file.Path relativize(java.nio.file.Path)>",
    "<nextflow.file.http.FtpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.FileAttributeView getFileAttributeView(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider: void <clinit>()>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath createXPath(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: boolean isSameFile(java.nio.file.Path,java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XPath: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.DirectoryStream newDirectoryStream(java.nio.file.Path,java.nio.file.DirectoryStream$Filter)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getParent()>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(java.util.Map)>",
    "<nextflow.file.http.XFileSystemProvider: void createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XFileSystem: boolean equals(java.lang.Object)>"
  ],
  "20.04.1": [
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem getFileSystem(java.net.URI,boolean)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.channels.SeekableByteChannel newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath get(java.lang.String)>",
    "<nextflow.file.http.XFileAttributes: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: void <init>(nextflow.file.http.XPath,groovy.lang.Reference)>",
    "<nextflow.file.http.XFileSystemProvider: void move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.HttpsFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: java.nio.file.Path next()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.util.Map readAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: java.net.URI toUri()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getFileStores()>",
    "<nextflow.file.http.XFileSystemProvider: void checkAccess(java.nio.file.Path,java.nio.file.AccessMode[])>",
    "<nextflow.file.http.XFileSystemProvider$1: int read(java.nio.ByteBuffer)>",
    "<nextflow.file.http.XFileSystemProvider: void delete(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: void this$dist$set$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$get$2(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider$1: long size()>",
    "<nextflow.file.http.XFileSystem: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath: int getNameCount()>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(nextflow.file.http.XPath)>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolveSibling(java.nio.file.Path)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getFileName()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem newFileSystem(java.net.URI,java.util.Map)>",
    "<nextflow.file.http.XPath: java.util.Iterator iterator()>",
    "<nextflow.file.http.XPath: void <init>(nextflow.file.http.XFileSystem,java.lang.String,java.lang.String[])>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.BasicFileAttributes readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void <init>()>",
    "<nextflow.file.http.XFileSystem: java.util.Set supportedFileAttributeViews()>",
    "<nextflow.file.http.XFileSystemProvider: java.io.OutputStream newOutputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider: java.io.InputStream newInputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileStore getFileStore(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$invoke$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolve(java.nio.file.Path)>",
    "<nextflow.file.http.HttpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getRootDirectories()>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime lastAccessTime()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: java.net.URI key(java.lang.String,java.lang.String)>",
    "<nextflow.file.http.XPath: boolean equals(java.lang.Object)>",
    "<nextflow.file.http.XFileSystem: java.nio.file.PathMatcher getPathMatcher(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime creationTime()>",
    "<nextflow.file.http.XFileSystemProvider: void setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.XPath: java.nio.file.Path relativize(java.nio.file.Path)>",
    "<nextflow.file.http.FtpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.FileAttributeView getFileAttributeView(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider: void <clinit>()>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath createXPath(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: boolean isSameFile(java.nio.file.Path,java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XPath: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.DirectoryStream newDirectoryStream(java.nio.file.Path,java.nio.file.DirectoryStream$Filter)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getParent()>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(java.util.Map)>",
    "<nextflow.file.http.XFileSystemProvider: void createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XFileSystem: boolean equals(java.lang.Object)>"
  ],
  "19.09.0-edge": [
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem getFileSystem(java.net.URI,boolean)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.channels.SeekableByteChannel newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath get(java.lang.String)>",
    "<nextflow.file.http.XFileAttributes: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: void <init>(nextflow.file.http.XPath,groovy.lang.Reference)>",
    "<nextflow.file.http.XFileSystemProvider: void move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.HttpsFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: java.nio.file.Path next()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.util.Map readAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: java.net.URI toUri()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getFileStores()>",
    "<nextflow.file.http.XFileSystemProvider: void checkAccess(java.nio.file.Path,java.nio.file.AccessMode[])>",
    "<nextflow.file.http.XFileSystemProvider$1: int read(java.nio.ByteBuffer)>",
    "<nextflow.file.http.XFileSystemProvider: void delete(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: void this$dist$set$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$get$2(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider$1: long size()>",
    "<nextflow.file.http.XFileSystem: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath: int getNameCount()>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(nextflow.file.http.XPath)>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolveSibling(java.nio.file.Path)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getFileName()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem newFileSystem(java.net.URI,java.util.Map)>",
    "<nextflow.file.http.XPath: java.util.Iterator iterator()>",
    "<nextflow.file.http.XPath: void <init>(nextflow.file.http.XFileSystem,java.lang.String,java.lang.String[])>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.BasicFileAttributes readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void <init>()>",
    "<nextflow.file.http.XFileSystem: java.util.Set supportedFileAttributeViews()>",
    "<nextflow.file.http.XFileSystemProvider: java.io.OutputStream newOutputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider: java.io.InputStream newInputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileStore getFileStore(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$invoke$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolve(java.nio.file.Path)>",
    "<nextflow.file.http.HttpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getRootDirectories()>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime lastAccessTime()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: java.net.URI key(java.lang.String,java.lang.String)>",
    "<nextflow.file.http.XPath: boolean equals(java.lang.Object)>",
    "<nextflow.file.http.XFileSystem: java.nio.file.PathMatcher getPathMatcher(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime creationTime()>",
    "<nextflow.file.http.XFileSystemProvider: void setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.XPath: java.nio.file.Path relativize(java.nio.file.Path)>",
    "<nextflow.file.http.FtpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.FileAttributeView getFileAttributeView(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider: void <clinit>()>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath createXPath(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: boolean isSameFile(java.nio.file.Path,java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XPath: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.DirectoryStream newDirectoryStream(java.nio.file.Path,java.nio.file.DirectoryStream$Filter)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getParent()>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(java.util.Map)>",
    "<nextflow.file.http.XFileSystemProvider: void createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XFileSystem: boolean equals(java.lang.Object)>"
  ],
  "20.01.1": [
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem getFileSystem(java.net.URI,boolean)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.channels.SeekableByteChannel newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath get(java.lang.String)>",
    "<nextflow.file.http.XFileAttributes: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: void <init>(nextflow.file.http.XPath,groovy.lang.Reference)>",
    "<nextflow.file.http.XFileSystemProvider: void move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.HttpsFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: java.nio.file.Path next()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.util.Map readAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: java.net.URI toUri()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getFileStores()>",
    "<nextflow.file.http.XFileSystemProvider: void checkAccess(java.nio.file.Path,java.nio.file.AccessMode[])>",
    "<nextflow.file.http.XFileSystemProvider$1: int read(java.nio.ByteBuffer)>",
    "<nextflow.file.http.XFileSystemProvider: void delete(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: void this$dist$set$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$get$2(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider$1: long size()>",
    "<nextflow.file.http.XFileSystem: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath: int getNameCount()>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(nextflow.file.http.XPath)>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolveSibling(java.nio.file.Path)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getFileName()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem newFileSystem(java.net.URI,java.util.Map)>",
    "<nextflow.file.http.XPath: java.util.Iterator iterator()>",
    "<nextflow.file.http.XPath: void <init>(nextflow.file.http.XFileSystem,java.lang.String,java.lang.String[])>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.BasicFileAttributes readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void <init>()>",
    "<nextflow.file.http.XFileSystem: java.util.Set supportedFileAttributeViews()>",
    "<nextflow.file.http.XFileSystemProvider: java.io.OutputStream newOutputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider: java.io.InputStream newInputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileStore getFileStore(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$invoke$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolve(java.nio.file.Path)>",
    "<nextflow.file.http.HttpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getRootDirectories()>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime lastAccessTime()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: java.net.URI key(java.lang.String,java.lang.String)>",
    "<nextflow.file.http.XPath: boolean equals(java.lang.Object)>",
    "<nextflow.file.http.XFileSystem: java.nio.file.PathMatcher getPathMatcher(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime creationTime()>",
    "<nextflow.file.http.XFileSystemProvider: void setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.XPath: java.nio.file.Path relativize(java.nio.file.Path)>",
    "<nextflow.file.http.FtpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.FileAttributeView getFileAttributeView(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider: void <clinit>()>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath createXPath(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: boolean isSameFile(java.nio.file.Path,java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XPath: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.DirectoryStream newDirectoryStream(java.nio.file.Path,java.nio.file.DirectoryStream$Filter)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getParent()>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(java.util.Map)>",
    "<nextflow.file.http.XFileSystemProvider: void createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XFileSystem: boolean equals(java.lang.Object)>"
  ],
  "20.01.0-edge": [
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem getFileSystem(java.net.URI,boolean)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.channels.SeekableByteChannel newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath get(java.lang.String)>",
    "<nextflow.file.http.XFileAttributes: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: void <init>(nextflow.file.http.XPath,groovy.lang.Reference)>",
    "<nextflow.file.http.XFileSystemProvider: void move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.HttpsFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: java.nio.file.Path next()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.util.Map readAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: java.net.URI toUri()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getFileStores()>",
    "<nextflow.file.http.XFileSystemProvider: void checkAccess(java.nio.file.Path,java.nio.file.AccessMode[])>",
    "<nextflow.file.http.XFileSystemProvider$1: int read(java.nio.ByteBuffer)>",
    "<nextflow.file.http.XFileSystemProvider: void delete(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: void this$dist$set$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$get$2(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider$1: long size()>",
    "<nextflow.file.http.XFileSystem: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath: int getNameCount()>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(nextflow.file.http.XPath)>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolveSibling(java.nio.file.Path)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getFileName()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem newFileSystem(java.net.URI,java.util.Map)>",
    "<nextflow.file.http.XPath: java.util.Iterator iterator()>",
    "<nextflow.file.http.XPath: void <init>(nextflow.file.http.XFileSystem,java.lang.String,java.lang.String[])>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.BasicFileAttributes readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void <init>()>",
    "<nextflow.file.http.XFileSystem: java.util.Set supportedFileAttributeViews()>",
    "<nextflow.file.http.XFileSystemProvider: java.io.OutputStream newOutputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider: java.io.InputStream newInputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileStore getFileStore(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$invoke$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolve(java.nio.file.Path)>",
    "<nextflow.file.http.HttpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getRootDirectories()>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime lastAccessTime()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: java.net.URI key(java.lang.String,java.lang.String)>",
    "<nextflow.file.http.XPath: boolean equals(java.lang.Object)>",
    "<nextflow.file.http.XFileSystem: java.nio.file.PathMatcher getPathMatcher(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime creationTime()>",
    "<nextflow.file.http.XFileSystemProvider: void setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.XPath: java.nio.file.Path relativize(java.nio.file.Path)>",
    "<nextflow.file.http.FtpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.FileAttributeView getFileAttributeView(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider: void <clinit>()>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath createXPath(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: boolean isSameFile(java.nio.file.Path,java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XPath: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.DirectoryStream newDirectoryStream(java.nio.file.Path,java.nio.file.DirectoryStream$Filter)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getParent()>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(java.util.Map)>",
    "<nextflow.file.http.XFileSystemProvider: void createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XFileSystem: boolean equals(java.lang.Object)>"
  ],
  "19.10.0": [
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem getFileSystem(java.net.URI,boolean)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.channels.SeekableByteChannel newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath get(java.lang.String)>",
    "<nextflow.file.http.XFileAttributes: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: void <init>(nextflow.file.http.XPath,groovy.lang.Reference)>",
    "<nextflow.file.http.XFileSystemProvider: void move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.HttpsFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: java.nio.file.Path next()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.util.Map readAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: java.net.URI toUri()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getFileStores()>",
    "<nextflow.file.http.XFileSystemProvider: void checkAccess(java.nio.file.Path,java.nio.file.AccessMode[])>",
    "<nextflow.file.http.XFileSystemProvider$1: int read(java.nio.ByteBuffer)>",
    "<nextflow.file.http.XFileSystemProvider: void delete(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: void this$dist$set$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$get$2(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider$1: long size()>",
    "<nextflow.file.http.XFileSystem: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath: int getNameCount()>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(nextflow.file.http.XPath)>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolveSibling(java.nio.file.Path)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getFileName()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem newFileSystem(java.net.URI,java.util.Map)>",
    "<nextflow.file.http.XPath: java.util.Iterator iterator()>",
    "<nextflow.file.http.XPath: void <init>(nextflow.file.http.XFileSystem,java.lang.String,java.lang.String[])>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.BasicFileAttributes readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void <init>()>",
    "<nextflow.file.http.XFileSystem: java.util.Set supportedFileAttributeViews()>",
    "<nextflow.file.http.XFileSystemProvider: java.io.OutputStream newOutputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider: java.io.InputStream newInputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileStore getFileStore(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$invoke$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolve(java.nio.file.Path)>",
    "<nextflow.file.http.HttpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getRootDirectories()>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime lastAccessTime()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: java.net.URI key(java.lang.String,java.lang.String)>",
    "<nextflow.file.http.XPath: boolean equals(java.lang.Object)>",
    "<nextflow.file.http.XFileSystem: java.nio.file.PathMatcher getPathMatcher(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime creationTime()>",
    "<nextflow.file.http.XFileSystemProvider: void setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.XPath: java.nio.file.Path relativize(java.nio.file.Path)>",
    "<nextflow.file.http.FtpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.FileAttributeView getFileAttributeView(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider: void <clinit>()>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath createXPath(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: boolean isSameFile(java.nio.file.Path,java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XPath: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.DirectoryStream newDirectoryStream(java.nio.file.Path,java.nio.file.DirectoryStream$Filter)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getParent()>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(java.util.Map)>",
    "<nextflow.file.http.XFileSystemProvider: void createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XFileSystem: boolean equals(java.lang.Object)>"
  ],
  "20.03.0-edge": [
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem getFileSystem(java.net.URI,boolean)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.channels.SeekableByteChannel newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath get(java.lang.String)>",
    "<nextflow.file.http.XFileAttributes: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: void <init>(nextflow.file.http.XPath,groovy.lang.Reference)>",
    "<nextflow.file.http.XFileSystemProvider: void move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.HttpsFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: java.nio.file.Path next()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.util.Map readAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: java.net.URI toUri()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getFileStores()>",
    "<nextflow.file.http.XFileSystemProvider: void checkAccess(java.nio.file.Path,java.nio.file.AccessMode[])>",
    "<nextflow.file.http.XFileSystemProvider$1: int read(java.nio.ByteBuffer)>",
    "<nextflow.file.http.XFileSystemProvider: void delete(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: void this$dist$set$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$get$2(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider$1: long size()>",
    "<nextflow.file.http.XFileSystem: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath: int getNameCount()>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(nextflow.file.http.XPath)>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolveSibling(java.nio.file.Path)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getFileName()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem newFileSystem(java.net.URI,java.util.Map)>",
    "<nextflow.file.http.XPath: java.util.Iterator iterator()>",
    "<nextflow.file.http.XPath: void <init>(nextflow.file.http.XFileSystem,java.lang.String,java.lang.String[])>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.BasicFileAttributes readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void <init>()>",
    "<nextflow.file.http.XFileSystem: java.util.Set supportedFileAttributeViews()>",
    "<nextflow.file.http.XFileSystemProvider: java.io.OutputStream newOutputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider: java.io.InputStream newInputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileStore getFileStore(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$invoke$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolve(java.nio.file.Path)>",
    "<nextflow.file.http.HttpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getRootDirectories()>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime lastAccessTime()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: java.net.URI key(java.lang.String,java.lang.String)>",
    "<nextflow.file.http.XPath: boolean equals(java.lang.Object)>",
    "<nextflow.file.http.XFileSystem: java.nio.file.PathMatcher getPathMatcher(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime creationTime()>",
    "<nextflow.file.http.XFileSystemProvider: void setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.XPath: java.nio.file.Path relativize(java.nio.file.Path)>",
    "<nextflow.file.http.FtpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.FileAttributeView getFileAttributeView(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider: void <clinit>()>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath createXPath(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: boolean isSameFile(java.nio.file.Path,java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XPath: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.DirectoryStream newDirectoryStream(java.nio.file.Path,java.nio.file.DirectoryStream$Filter)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getParent()>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(java.util.Map)>",
    "<nextflow.file.http.XFileSystemProvider: void createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XFileSystem: boolean equals(java.lang.Object)>"
  ],
  "20.01.0": [
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem getFileSystem(java.net.URI,boolean)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.channels.SeekableByteChannel newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath get(java.lang.String)>",
    "<nextflow.file.http.XFileAttributes: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: void <init>(nextflow.file.http.XPath,groovy.lang.Reference)>",
    "<nextflow.file.http.XFileSystemProvider: void move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.HttpsFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: java.nio.file.Path next()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.util.Map readAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: java.net.URI toUri()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getFileStores()>",
    "<nextflow.file.http.XFileSystemProvider: void checkAccess(java.nio.file.Path,java.nio.file.AccessMode[])>",
    "<nextflow.file.http.XFileSystemProvider$1: int read(java.nio.ByteBuffer)>",
    "<nextflow.file.http.XFileSystemProvider: void delete(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: void this$dist$set$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$get$2(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider$1: long size()>",
    "<nextflow.file.http.XFileSystem: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath: int getNameCount()>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(nextflow.file.http.XPath)>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolveSibling(java.nio.file.Path)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getFileName()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem newFileSystem(java.net.URI,java.util.Map)>",
    "<nextflow.file.http.XPath: java.util.Iterator iterator()>",
    "<nextflow.file.http.XPath: void <init>(nextflow.file.http.XFileSystem,java.lang.String,java.lang.String[])>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.BasicFileAttributes readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void <init>()>",
    "<nextflow.file.http.XFileSystem: java.util.Set supportedFileAttributeViews()>",
    "<nextflow.file.http.XFileSystemProvider: java.io.OutputStream newOutputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider: java.io.InputStream newInputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileStore getFileStore(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$invoke$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolve(java.nio.file.Path)>",
    "<nextflow.file.http.HttpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getRootDirectories()>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime lastAccessTime()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: java.net.URI key(java.lang.String,java.lang.String)>",
    "<nextflow.file.http.XPath: boolean equals(java.lang.Object)>",
    "<nextflow.file.http.XFileSystem: java.nio.file.PathMatcher getPathMatcher(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime creationTime()>",
    "<nextflow.file.http.XFileSystemProvider: void setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.XPath: java.nio.file.Path relativize(java.nio.file.Path)>",
    "<nextflow.file.http.FtpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.FileAttributeView getFileAttributeView(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider: void <clinit>()>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath createXPath(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: boolean isSameFile(java.nio.file.Path,java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XPath: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.DirectoryStream newDirectoryStream(java.nio.file.Path,java.nio.file.DirectoryStream$Filter)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getParent()>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(java.util.Map)>",
    "<nextflow.file.http.XFileSystemProvider: void createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XFileSystem: boolean equals(java.lang.Object)>"
  ],
  "19.11.0-edge": [
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem getFileSystem(java.net.URI,boolean)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.channels.SeekableByteChannel newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath get(java.lang.String)>",
    "<nextflow.file.http.XFileAttributes: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: void <init>(nextflow.file.http.XPath,groovy.lang.Reference)>",
    "<nextflow.file.http.XFileSystemProvider: void move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.HttpsFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: java.nio.file.Path next()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.util.Map readAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: java.net.URI toUri()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getFileStores()>",
    "<nextflow.file.http.XFileSystemProvider: void checkAccess(java.nio.file.Path,java.nio.file.AccessMode[])>",
    "<nextflow.file.http.XFileSystemProvider$1: int read(java.nio.ByteBuffer)>",
    "<nextflow.file.http.XFileSystemProvider: void delete(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: void this$dist$set$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$get$2(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider$1: long size()>",
    "<nextflow.file.http.XFileSystem: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath: int getNameCount()>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(nextflow.file.http.XPath)>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolveSibling(java.nio.file.Path)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getFileName()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem newFileSystem(java.net.URI,java.util.Map)>",
    "<nextflow.file.http.XPath: java.util.Iterator iterator()>",
    "<nextflow.file.http.XPath: void <init>(nextflow.file.http.XFileSystem,java.lang.String,java.lang.String[])>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.BasicFileAttributes readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void <init>()>",
    "<nextflow.file.http.XFileSystem: java.util.Set supportedFileAttributeViews()>",
    "<nextflow.file.http.XFileSystemProvider: java.io.OutputStream newOutputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider: java.io.InputStream newInputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileStore getFileStore(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$invoke$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolve(java.nio.file.Path)>",
    "<nextflow.file.http.HttpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getRootDirectories()>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime lastAccessTime()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: java.net.URI key(java.lang.String,java.lang.String)>",
    "<nextflow.file.http.XPath: boolean equals(java.lang.Object)>",
    "<nextflow.file.http.XFileSystem: java.nio.file.PathMatcher getPathMatcher(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime creationTime()>",
    "<nextflow.file.http.XFileSystemProvider: void setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.XPath: java.nio.file.Path relativize(java.nio.file.Path)>",
    "<nextflow.file.http.FtpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.FileAttributeView getFileAttributeView(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider: void <clinit>()>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath createXPath(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: boolean isSameFile(java.nio.file.Path,java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XPath: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.DirectoryStream newDirectoryStream(java.nio.file.Path,java.nio.file.DirectoryStream$Filter)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getParent()>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(java.util.Map)>",
    "<nextflow.file.http.XFileSystemProvider: void createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XFileSystem: boolean equals(java.lang.Object)>"
  ],
  "19.08.0-edge": [
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem getFileSystem(java.net.URI,boolean)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.channels.SeekableByteChannel newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath get(java.lang.String)>",
    "<nextflow.file.http.XFileAttributes: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: void <init>(nextflow.file.http.XPath,groovy.lang.Reference)>",
    "<nextflow.file.http.XFileSystemProvider: void move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.HttpsFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: java.nio.file.Path next()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.util.Map readAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: java.net.URI toUri()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getFileStores()>",
    "<nextflow.file.http.XFileSystemProvider: void checkAccess(java.nio.file.Path,java.nio.file.AccessMode[])>",
    "<nextflow.file.http.XFileSystemProvider$1: int read(java.nio.ByteBuffer)>",
    "<nextflow.file.http.XFileSystemProvider: void delete(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: void this$dist$set$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$get$2(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider$1: long size()>",
    "<nextflow.file.http.XFileSystem: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath: int getNameCount()>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(nextflow.file.http.XPath)>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolveSibling(java.nio.file.Path)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getFileName()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem newFileSystem(java.net.URI,java.util.Map)>",
    "<nextflow.file.http.XPath: java.util.Iterator iterator()>",
    "<nextflow.file.http.XPath: void <init>(nextflow.file.http.XFileSystem,java.lang.String,java.lang.String[])>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.BasicFileAttributes readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void <init>()>",
    "<nextflow.file.http.XFileSystem: java.util.Set supportedFileAttributeViews()>",
    "<nextflow.file.http.XFileSystemProvider: java.io.OutputStream newOutputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider: java.io.InputStream newInputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileStore getFileStore(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$invoke$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolve(java.nio.file.Path)>",
    "<nextflow.file.http.HttpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getRootDirectories()>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime lastAccessTime()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: java.net.URI key(java.lang.String,java.lang.String)>",
    "<nextflow.file.http.XPath: boolean equals(java.lang.Object)>",
    "<nextflow.file.http.XFileSystem: java.nio.file.PathMatcher getPathMatcher(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime creationTime()>",
    "<nextflow.file.http.XFileSystemProvider: void setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.XPath: java.nio.file.Path relativize(java.nio.file.Path)>",
    "<nextflow.file.http.FtpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.FileAttributeView getFileAttributeView(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider: void <clinit>()>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath createXPath(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: boolean isSameFile(java.nio.file.Path,java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XPath: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.DirectoryStream newDirectoryStream(java.nio.file.Path,java.nio.file.DirectoryStream$Filter)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getParent()>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(java.util.Map)>",
    "<nextflow.file.http.XFileSystemProvider: void createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XFileSystem: boolean equals(java.lang.Object)>"
  ],
  "19.01.0-edge": [
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem getFileSystem(java.net.URI,boolean)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.channels.SeekableByteChannel newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath get(java.lang.String)>",
    "<nextflow.file.http.XFileAttributes: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: void <init>(nextflow.file.http.XPath,groovy.lang.Reference)>",
    "<nextflow.file.http.XFileSystemProvider: void move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.HttpsFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: java.nio.file.Path next()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.util.Map readAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: java.net.URI toUri()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getFileStores()>",
    "<nextflow.file.http.XFileSystemProvider: void checkAccess(java.nio.file.Path,java.nio.file.AccessMode[])>",
    "<nextflow.file.http.XFileSystemProvider$1: int read(java.nio.ByteBuffer)>",
    "<nextflow.file.http.XFileSystemProvider: void delete(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: void this$dist$set$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$get$2(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider$1: long size()>",
    "<nextflow.file.http.XFileSystem: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath: int getNameCount()>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(nextflow.file.http.XPath)>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolveSibling(java.nio.file.Path)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getFileName()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem newFileSystem(java.net.URI,java.util.Map)>",
    "<nextflow.file.http.XPath: java.util.Iterator iterator()>",
    "<nextflow.file.http.XPath: void <init>(nextflow.file.http.XFileSystem,java.lang.String,java.lang.String[])>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.BasicFileAttributes readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void <init>()>",
    "<nextflow.file.http.XFileSystem: java.util.Set supportedFileAttributeViews()>",
    "<nextflow.file.http.XFileSystemProvider: java.io.OutputStream newOutputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider: java.io.InputStream newInputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileStore getFileStore(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$invoke$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolve(java.nio.file.Path)>",
    "<nextflow.file.http.HttpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getRootDirectories()>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime lastAccessTime()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: java.net.URI key(java.lang.String,java.lang.String)>",
    "<nextflow.file.http.XPath: boolean equals(java.lang.Object)>",
    "<nextflow.file.http.XFileSystem: java.nio.file.PathMatcher getPathMatcher(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime creationTime()>",
    "<nextflow.file.http.XFileSystemProvider: void setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.XPath: java.nio.file.Path relativize(java.nio.file.Path)>",
    "<nextflow.file.http.FtpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.FileAttributeView getFileAttributeView(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider: void <clinit>()>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath createXPath(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: boolean isSameFile(java.nio.file.Path,java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XPath: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.DirectoryStream newDirectoryStream(java.nio.file.Path,java.nio.file.DirectoryStream$Filter)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getParent()>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(java.util.Map)>",
    "<nextflow.file.http.XFileSystemProvider: void createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XFileSystem: boolean equals(java.lang.Object)>"
  ],
  "19.01.0": [
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem getFileSystem(java.net.URI,boolean)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.channels.SeekableByteChannel newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath get(java.lang.String)>",
    "<nextflow.file.http.XFileAttributes: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: void <init>(nextflow.file.http.XPath,groovy.lang.Reference)>",
    "<nextflow.file.http.XFileSystemProvider: void move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.HttpsFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: java.nio.file.Path next()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.util.Map readAttributes(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: java.net.URI toUri()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getFileStores()>",
    "<nextflow.file.http.XFileSystemProvider: void checkAccess(java.nio.file.Path,java.nio.file.AccessMode[])>",
    "<nextflow.file.http.XFileSystemProvider$1: int read(java.nio.ByteBuffer)>",
    "<nextflow.file.http.XFileSystemProvider: void delete(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: void this$dist$set$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$get$2(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider$1: long size()>",
    "<nextflow.file.http.XFileSystem: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath: int getNameCount()>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(nextflow.file.http.XPath)>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolveSibling(java.nio.file.Path)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getFileName()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileSystem newFileSystem(java.net.URI,java.util.Map)>",
    "<nextflow.file.http.XPath: java.util.Iterator iterator()>",
    "<nextflow.file.http.XPath: void <init>(nextflow.file.http.XFileSystem,java.lang.String,java.lang.String[])>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.BasicFileAttributes readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XPath: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void <init>()>",
    "<nextflow.file.http.XFileSystem: java.util.Set supportedFileAttributeViews()>",
    "<nextflow.file.http.XFileSystemProvider: java.io.OutputStream newOutputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider: java.io.InputStream newInputStream(java.nio.file.Path,java.nio.file.OpenOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.FileStore getFileStore(java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider: java.lang.Object this$dist$invoke$2(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XPath: java.nio.file.Path resolve(java.nio.file.Path)>",
    "<nextflow.file.http.HttpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystem: java.lang.Iterable getRootDirectories()>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime lastAccessTime()>",
    "<nextflow.file.http.XPath$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: java.net.URI key(java.lang.String,java.lang.String)>",
    "<nextflow.file.http.XPath: boolean equals(java.lang.Object)>",
    "<nextflow.file.http.XFileSystem: java.nio.file.PathMatcher getPathMatcher(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileAttributes: java.nio.file.attribute.FileTime creationTime()>",
    "<nextflow.file.http.XFileSystemProvider: void setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XPath$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: void copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>",
    "<nextflow.file.http.XPath: java.nio.file.Path relativize(java.nio.file.Path)>",
    "<nextflow.file.http.FtpFileSystemProvider: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.attribute.FileAttributeView getFileAttributeView(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>",
    "<nextflow.file.http.XFileSystemProvider: void <clinit>()>",
    "<nextflow.file.http.XPath: nextflow.file.http.XPath createXPath(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: boolean isSameFile(java.nio.file.Path,java.nio.file.Path)>",
    "<nextflow.file.http.XFileSystemProvider$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<nextflow.file.http.XPath: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<nextflow.file.http.XFileSystemProvider: java.nio.file.DirectoryStream newDirectoryStream(java.nio.file.Path,java.nio.file.DirectoryStream$Filter)>",
    "<nextflow.file.http.XPath: java.nio.file.Path getParent()>",
    "<nextflow.file.http.XPath: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<nextflow.file.http.XFileSystemProvider: nextflow.file.http.XFileAttributes readHttpAttributes(java.util.Map)>",
    "<nextflow.file.http.XFileSystemProvider: void createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>",
    "<nextflow.file.http.XFileSystem: boolean equals(java.lang.Object)>"
  ]
}