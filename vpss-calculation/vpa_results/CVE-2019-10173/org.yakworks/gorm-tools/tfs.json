{
  "7.0.8-v.51": [
    "<gorm.tools.problem.ValidationProblem: void <init>(java.lang.String)>",
    "<gorm.tools.repository.RepoUtil: void checkFound(java.lang.Object,java.io.Serializable,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String yakworks_problem_ProblemTraittrait$super$toString()>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobEntity finishJob(java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: void setViolations(java.util.List)>",
    "<gorm.tools.repository.events.RepositoryEventType: void <init>(java.lang.String,int,java.lang.Class)>",
    "<gorm.tools.mango.api.QueryArgs: gorm.tools.mango.api.QueryArgs build(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Object getPayload()>",
    "<gorm.tools.problem.ValidationProblem: java.util.List getViolations()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsgKey()>",
    "<gorm.tools.api.IncludesConfig: java.util.Map getClassStaticIncludes(java.lang.Class)>",
    "<gorm.tools.repository.PersistArgs: java.util.Map asMap()>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Object parseBasicType(java.lang.String,java.lang.Class)>",
    "<gorm.tools.async.ParallelTools$Trait$Helper: groovy.lang.Closure sliceClosure(gorm.tools.async.ParallelTools,org.grails.datastore.mapping.core.Datastore,groovy.lang.Closure)>",
    "<gorm.tools.problem.ValidationProblem: void yakworks_problem_ProblemTraittrait$super$setStatus(yakworks.api.ApiStatus)>",
    "<gorm.tools.problem.ValidationProblem: void setCause(java.lang.Throwable)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String toString()>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>()>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Throwable getCause()>",
    "<gorm.tools.api.IncludesConfig: java.util.Map $_cache_getIncludes(java.lang.String,java.lang.String,java.lang.Class,java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.api.ApiStatus yakworks_problem_ProblemTraittrait$super$getStatus()>",
    "<gorm.tools.repository.model.AbstractCrossRefRepo: java.lang.Object createOrRemove(gorm.tools.model.Persistable,java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>(java.lang.Throwable)>",
    "<gorm.tools.problem.ValidationProblem: void setOk(java.lang.Boolean)>",
    "<gorm.tools.problem.ProblemHandler: java.util.List transateErrorsToViolations(org.springframework.validation.Errors)>",
    "<gorm.tools.job.SyncJobContext: java.lang.Long writePayloadFile(java.util.Collection)>",
    "<gorm.tools.problem.ValidationProblem$Exception: java.lang.String getMessage()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem addErrors(java.util.List)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleException(java.lang.Throwable,java.lang.String)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity findPersistentEntity(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Boolean yakworks_problem_ProblemTraittrait$super$getOk()>",
    "<gorm.tools.problem.ValidationProblem: void <init>()>",
    "<gorm.tools.idgen.JdbcIdGenerator: long updateIncrement(java.lang.String,long)>",
    "<gorm.tools.repository.GormRepo$Trait$Helper: java.lang.Object findWithData(gorm.tools.repository.GormRepo,java.util.Map,boolean)>",
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: yakworks.api.ApiResults doBulk(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.job.SyncJobContext,boolean)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity getPersistentEntity(org.grails.datastore.gorm.GormEntity)>",
    "<gorm.tools.beans.map.MetaMapEntityService: java.lang.String toJson(java.lang.Object,java.util.List,java.util.List)>",
    "<gorm.tools.beans.map.MetaMapList: java.lang.Object clone()>",
    "<gorm.tools.beans.map.MetaMap: void <init>(java.lang.Object)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleUnexpected(java.lang.Throwable)>",
    "<gorm.tools.beans.map.MetaMap: java.lang.Object clone()>",
    "<gorm.tools.beans.map.EntityIncludesBuilder: gorm.tools.beans.map.MetaMapIncludes buildNested(java.util.Map)>",
    "<gorm.tools.job.SyncJobContext: void appendDataResults(yakworks.api.ApiResults)>",
    "<gorm.tools.repository.validation.ApiConstraints: java.util.Map collectContraints()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsg()>",
    "<gorm.tools.beans.map.EntityIncludesBuilder: boolean propertyExists(java.lang.String)>",
    "<gorm.tools.repository.artefact.RepositoryArtefactHandler: java.lang.String getRepoBeanName(java.lang.Class)>",
    "<gorm.tools.repository.RepoUtil: void checkCreateData(java.util.Map,gorm.tools.repository.PersistArgs,java.lang.Class)>",
    "<gorm.tools.repository.model.AbstractLinkedEntityRepo: void validateCreate(gorm.tools.model.Persistable,gorm.tools.model.Persistable)>",
    "<gorm.tools.problem.ValidationProblem: java.net.URI getType()>",
    "<gorm.tools.problem.ValidationProblem: void setMsg(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobContext createJob()>",
    "<gorm.tools.job.SyncJobContext: java.util.List transformResults(yakworks.api.ApiResults)>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem cause(java.lang.Throwable)>",
    "<gorm.tools.repository.RepoUtil: void checkData(java.util.Map,java.lang.Class)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.problem.ProblemException yakworks_problem_data_DataProblemTraittrait$super$toException()>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Class getDomainClassType(java.lang.Object,java.lang.String)>",
    "<gorm.tools.beans.map.MetaMapEntityService: java.lang.String toJson(java.util.List,java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem entity(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String getDetail()>",
    "<gorm.tools.problem.ValidationProblem: void setDetail(java.lang.String)>",
    "<gorm.tools.idgen.PooledIdGenerator: java.util.concurrent.atomic.AtomicReference findOrCreate(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setMsgKey(yakworks.i18n.MsgKey)>",
    "<gorm.tools.problem.ValidationProblem: void setType(java.net.URI)>",
    "<gorm.tools.problem.ValidationProblem: void setPayload(java.lang.Object)>",
    "<gorm.tools.repository.errors.RepoExceptionSupport: java.lang.RuntimeException translateException(java.lang.RuntimeException,java.lang.Object)>"
  ],
  "7.0.8-v.57": [
    "<gorm.tools.problem.ValidationProblem: void <init>(java.lang.String)>",
    "<gorm.tools.repository.RepoUtil: void checkFound(java.lang.Object,java.io.Serializable,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String yakworks_problem_ProblemTraittrait$super$toString()>",
    "<gorm.tools.problem.ValidationProblem: void setViolations(java.util.List)>",
    "<gorm.tools.repository.events.RepositoryEventType: void <init>(java.lang.String,int,java.lang.Class)>",
    "<gorm.tools.mango.api.QueryArgs: gorm.tools.mango.api.QueryArgs build(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Object getPayload()>",
    "<gorm.tools.problem.ValidationProblem: java.util.List getViolations()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsgKey()>",
    "<gorm.tools.api.IncludesConfig: java.util.Map getClassStaticIncludes(java.lang.Class)>",
    "<gorm.tools.repository.PersistArgs: java.util.Map asMap()>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Object parseBasicType(java.lang.String,java.lang.Class)>",
    "<gorm.tools.async.ParallelTools$Trait$Helper: groovy.lang.Closure sliceClosure(gorm.tools.async.ParallelTools,org.grails.datastore.mapping.core.Datastore,groovy.lang.Closure)>",
    "<gorm.tools.problem.ValidationProblem: void yakworks_problem_ProblemTraittrait$super$setStatus(yakworks.api.ApiStatus)>",
    "<gorm.tools.problem.ValidationProblem: void setCause(java.lang.Throwable)>",
    "<gorm.tools.utils.GormUtils: java.util.List listToIdMap(java.util.List,java.lang.String)>",
    "<gorm.tools.mango.MangoDetachedCriteria: void <init>(java.lang.Class,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String toString()>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>()>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Throwable getCause()>",
    "<gorm.tools.api.IncludesConfig: java.util.Map $_cache_getIncludes(java.lang.String,java.lang.String,java.lang.Class,java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.api.ApiStatus yakworks_problem_ProblemTraittrait$super$getStatus()>",
    "<gorm.tools.repository.model.AbstractCrossRefRepo: java.lang.Object createOrRemove(gorm.tools.model.Persistable,java.util.Map)>",
    "<gorm.tools.utils.GormUtils: java.util.List collectLongIds(java.util.List,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setOk(java.lang.Boolean)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>(java.lang.Throwable)>",
    "<gorm.tools.problem.ProblemHandler: java.util.List transateErrorsToViolations(org.springframework.validation.Errors)>",
    "<gorm.tools.problem.ValidationProblem$Exception: java.lang.String getMessage()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem addErrors(java.util.List)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleException(java.lang.Throwable,java.lang.String)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity findPersistentEntity(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Boolean yakworks_problem_ProblemTraittrait$super$getOk()>",
    "<gorm.tools.problem.ValidationProblem: void <init>()>",
    "<gorm.tools.idgen.JdbcIdGenerator: long updateIncrement(java.lang.String,long)>",
    "<gorm.tools.repository.GormRepo$Trait$Helper: java.lang.Object findWithData(gorm.tools.repository.GormRepo,java.util.Map,boolean)>",
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: yakworks.api.ApiResults doBulk(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.job.SyncJobContext,boolean)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity getPersistentEntity(org.grails.datastore.gorm.GormEntity)>",
    "<gorm.tools.beans.map.MetaMapEntityService: java.lang.String toJson(java.lang.Object,java.util.List,java.util.List)>",
    "<gorm.tools.beans.map.MetaMapList: java.lang.Object clone()>",
    "<gorm.tools.job.SyncJobContext: java.lang.Long writePayloadFile(java.util.Collection)>",
    "<gorm.tools.beans.map.MetaMap: void <init>(java.lang.Object)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleUnexpected(java.lang.Throwable)>",
    "<gorm.tools.beans.map.MetaMap: java.lang.Object clone()>",
    "<gorm.tools.beans.map.EntityIncludesBuilder: gorm.tools.beans.map.MetaMapIncludes buildNested(java.util.Map)>",
    "<gorm.tools.job.SyncJobContext: void appendDataResults(yakworks.api.ApiResults)>",
    "<gorm.tools.repository.validation.ApiConstraints: java.util.Map collectContraints()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsg()>",
    "<gorm.tools.beans.map.EntityIncludesBuilder: boolean propertyExists(java.lang.String)>",
    "<gorm.tools.repository.artefact.RepositoryArtefactHandler: java.lang.String getRepoBeanName(java.lang.Class)>",
    "<gorm.tools.repository.RepoUtil: void checkCreateData(java.util.Map,gorm.tools.repository.PersistArgs,java.lang.Class)>",
    "<gorm.tools.repository.model.AbstractLinkedEntityRepo: void validateCreate(gorm.tools.model.Persistable,gorm.tools.model.Persistable)>",
    "<gorm.tools.problem.ValidationProblem: java.net.URI getType()>",
    "<gorm.tools.problem.ValidationProblem: void setMsg(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobContext createJob()>",
    "<gorm.tools.job.SyncJobContext: java.util.List transformResults(yakworks.api.ApiResults)>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem cause(java.lang.Throwable)>",
    "<gorm.tools.repository.RepoUtil: void checkData(java.util.Map,java.lang.Class)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.problem.ProblemException yakworks_problem_data_DataProblemTraittrait$super$toException()>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Class getDomainClassType(java.lang.Object,java.lang.String)>",
    "<gorm.tools.beans.map.MetaMapEntityService: java.lang.String toJson(java.util.List,java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem entity(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String getDetail()>",
    "<gorm.tools.problem.ValidationProblem: void setDetail(java.lang.String)>",
    "<gorm.tools.idgen.PooledIdGenerator: java.util.concurrent.atomic.AtomicReference findOrCreate(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setMsgKey(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobEntity finishJob(java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: void setType(java.net.URI)>",
    "<gorm.tools.problem.ValidationProblem: void setPayload(java.lang.Object)>",
    "<gorm.tools.repository.errors.RepoExceptionSupport: java.lang.RuntimeException translateException(java.lang.RuntimeException,java.lang.Object)>"
  ],
  "7.0.8-v.40": [
    "<gorm.tools.repository.RepoMessage: java.lang.String propName(java.lang.String)>",
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: gorm.tools.repository.bulk.BulkableResults doBulk(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.repository.bulk.BulkableArgs,boolean)>",
    "<gorm.tools.beans.MultiFormatDateConverter: java.lang.Object convert(java.lang.Object)>",
    "<gorm.tools.beans.EntityMap: void <init>(java.lang.Object)>",
    "<gorm.tools.repository.events.RepositoryEventType: void <init>(java.lang.String,int,java.lang.Class)>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Object parseBasicType(java.lang.String,java.lang.Class)>",
    "<gorm.tools.beans.EntityMapService: java.lang.String toJson(java.util.List,java.util.List)>",
    "<gorm.tools.async.ParallelTools$Trait$Helper: groovy.lang.Closure sliceClosure(gorm.tools.async.ParallelTools,org.grails.datastore.mapping.core.Datastore,groovy.lang.Closure)>",
    "<gorm.tools.repository.model.AbstractCrossRefRepo: java.lang.Object createOrRemove(gorm.tools.model.Persistable,java.util.Map)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity findPersistentEntity(java.lang.String)>",
    "<gorm.tools.idgen.JdbcIdGenerator: long updateIncrement(java.lang.String,long)>",
    "<gorm.tools.repository.GormRepo$Trait$Helper: java.lang.Object findWithData(gorm.tools.repository.GormRepo,java.util.Map,boolean)>",
    "<gorm.tools.beans.BeanPathTools: grails.web.servlet.mvc.GrailsParameterMap flattenMap(javax.servlet.http.HttpServletRequest,java.util.Map)>",
    "<gorm.tools.repository.validation.ApiConstraints: java.util.Map collectContraints()>",
    "<gorm.tools.mango.MangoBuilder: java.util.List getQSearchFields(java.lang.Class)>",
    "<gorm.tools.beans.EntityMapService: java.lang.String toJson(java.lang.Object,java.util.List)>",
    "<gorm.tools.repository.artefact.RepositoryArtefactHandler: java.lang.String getRepoBeanName(java.lang.Class)>",
    "<gorm.tools.repository.model.AbstractLinkedEntityRepo: void validateCreate(gorm.tools.model.Persistable,gorm.tools.model.Persistable)>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Class getDomainClassType(java.lang.Object,java.lang.String)>",
    "<gorm.tools.idgen.PooledIdGenerator: java.util.concurrent.atomic.AtomicReference findOrCreate(java.lang.String)>"
  ],
  "7.0.8-v.54": [
    "<gorm.tools.problem.ValidationProblem: void <init>(java.lang.String)>",
    "<gorm.tools.repository.RepoUtil: void checkFound(java.lang.Object,java.io.Serializable,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String yakworks_problem_ProblemTraittrait$super$toString()>",
    "<gorm.tools.problem.ValidationProblem: void setViolations(java.util.List)>",
    "<gorm.tools.repository.events.RepositoryEventType: void <init>(java.lang.String,int,java.lang.Class)>",
    "<gorm.tools.mango.api.QueryArgs: gorm.tools.mango.api.QueryArgs build(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Object getPayload()>",
    "<gorm.tools.problem.ValidationProblem: java.util.List getViolations()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsgKey()>",
    "<gorm.tools.api.IncludesConfig: java.util.Map getClassStaticIncludes(java.lang.Class)>",
    "<gorm.tools.repository.PersistArgs: java.util.Map asMap()>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Object parseBasicType(java.lang.String,java.lang.Class)>",
    "<gorm.tools.async.ParallelTools$Trait$Helper: groovy.lang.Closure sliceClosure(gorm.tools.async.ParallelTools,org.grails.datastore.mapping.core.Datastore,groovy.lang.Closure)>",
    "<gorm.tools.problem.ValidationProblem: void yakworks_problem_ProblemTraittrait$super$setStatus(yakworks.api.ApiStatus)>",
    "<gorm.tools.problem.ValidationProblem: void setCause(java.lang.Throwable)>",
    "<gorm.tools.utils.GormUtils: java.util.List listToIdMap(java.util.List,java.lang.String)>",
    "<gorm.tools.mango.MangoDetachedCriteria: void <init>(java.lang.Class,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String toString()>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>()>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Throwable getCause()>",
    "<gorm.tools.api.IncludesConfig: java.util.Map $_cache_getIncludes(java.lang.String,java.lang.String,java.lang.Class,java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.api.ApiStatus yakworks_problem_ProblemTraittrait$super$getStatus()>",
    "<gorm.tools.repository.model.AbstractCrossRefRepo: java.lang.Object createOrRemove(gorm.tools.model.Persistable,java.util.Map)>",
    "<gorm.tools.utils.GormUtils: java.util.List collectLongIds(java.util.List,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setOk(java.lang.Boolean)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>(java.lang.Throwable)>",
    "<gorm.tools.problem.ProblemHandler: java.util.List transateErrorsToViolations(org.springframework.validation.Errors)>",
    "<gorm.tools.problem.ValidationProblem$Exception: java.lang.String getMessage()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem addErrors(java.util.List)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleException(java.lang.Throwable,java.lang.String)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity findPersistentEntity(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Boolean yakworks_problem_ProblemTraittrait$super$getOk()>",
    "<gorm.tools.problem.ValidationProblem: void <init>()>",
    "<gorm.tools.idgen.JdbcIdGenerator: long updateIncrement(java.lang.String,long)>",
    "<gorm.tools.repository.GormRepo$Trait$Helper: java.lang.Object findWithData(gorm.tools.repository.GormRepo,java.util.Map,boolean)>",
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: yakworks.api.ApiResults doBulk(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.job.SyncJobContext,boolean)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity getPersistentEntity(org.grails.datastore.gorm.GormEntity)>",
    "<gorm.tools.beans.map.MetaMapEntityService: java.lang.String toJson(java.lang.Object,java.util.List,java.util.List)>",
    "<gorm.tools.beans.map.MetaMapList: java.lang.Object clone()>",
    "<gorm.tools.job.SyncJobContext: java.lang.Long writePayloadFile(java.util.Collection)>",
    "<gorm.tools.beans.map.MetaMap: void <init>(java.lang.Object)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleUnexpected(java.lang.Throwable)>",
    "<gorm.tools.beans.map.MetaMap: java.lang.Object clone()>",
    "<gorm.tools.beans.map.EntityIncludesBuilder: gorm.tools.beans.map.MetaMapIncludes buildNested(java.util.Map)>",
    "<gorm.tools.job.SyncJobContext: void appendDataResults(yakworks.api.ApiResults)>",
    "<gorm.tools.repository.validation.ApiConstraints: java.util.Map collectContraints()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsg()>",
    "<gorm.tools.beans.map.EntityIncludesBuilder: boolean propertyExists(java.lang.String)>",
    "<gorm.tools.repository.artefact.RepositoryArtefactHandler: java.lang.String getRepoBeanName(java.lang.Class)>",
    "<gorm.tools.repository.RepoUtil: void checkCreateData(java.util.Map,gorm.tools.repository.PersistArgs,java.lang.Class)>",
    "<gorm.tools.repository.model.AbstractLinkedEntityRepo: void validateCreate(gorm.tools.model.Persistable,gorm.tools.model.Persistable)>",
    "<gorm.tools.problem.ValidationProblem: java.net.URI getType()>",
    "<gorm.tools.problem.ValidationProblem: void setMsg(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobContext createJob()>",
    "<gorm.tools.job.SyncJobContext: java.util.List transformResults(yakworks.api.ApiResults)>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem cause(java.lang.Throwable)>",
    "<gorm.tools.repository.RepoUtil: void checkData(java.util.Map,java.lang.Class)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.problem.ProblemException yakworks_problem_data_DataProblemTraittrait$super$toException()>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Class getDomainClassType(java.lang.Object,java.lang.String)>",
    "<gorm.tools.beans.map.MetaMapEntityService: java.lang.String toJson(java.util.List,java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem entity(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String getDetail()>",
    "<gorm.tools.problem.ValidationProblem: void setDetail(java.lang.String)>",
    "<gorm.tools.idgen.PooledIdGenerator: java.util.concurrent.atomic.AtomicReference findOrCreate(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setMsgKey(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobEntity finishJob(java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: void setType(java.net.URI)>",
    "<gorm.tools.problem.ValidationProblem: void setPayload(java.lang.Object)>",
    "<gorm.tools.repository.errors.RepoExceptionSupport: java.lang.RuntimeException translateException(java.lang.RuntimeException,java.lang.Object)>"
  ],
  "7.0.8-v.59": [
    "<gorm.tools.problem.ValidationProblem: void <init>(java.lang.String)>",
    "<gorm.tools.repository.RepoUtil: void checkFound(java.lang.Object,java.io.Serializable,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String yakworks_problem_ProblemTraittrait$super$toString()>",
    "<gorm.tools.problem.ValidationProblem: void setViolations(java.util.List)>",
    "<gorm.tools.repository.events.RepositoryEventType: void <init>(java.lang.String,int,java.lang.Class)>",
    "<gorm.tools.mango.api.QueryArgs: gorm.tools.mango.api.QueryArgs build(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Object getPayload()>",
    "<gorm.tools.problem.ValidationProblem: java.util.List getViolations()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsgKey()>",
    "<gorm.tools.api.IncludesConfig: java.util.Map getClassStaticIncludes(java.lang.Class)>",
    "<gorm.tools.repository.PersistArgs: java.util.Map asMap()>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Object parseBasicType(java.lang.String,java.lang.Class)>",
    "<gorm.tools.async.ParallelTools$Trait$Helper: groovy.lang.Closure sliceClosure(gorm.tools.async.ParallelTools,org.grails.datastore.mapping.core.Datastore,groovy.lang.Closure)>",
    "<gorm.tools.problem.ValidationProblem: void yakworks_problem_ProblemTraittrait$super$setStatus(yakworks.api.ApiStatus)>",
    "<gorm.tools.problem.ValidationProblem: void setCause(java.lang.Throwable)>",
    "<gorm.tools.validation.Rejector: void withError(java.lang.String,java.util.List,java.util.Map,java.lang.String)>",
    "<gorm.tools.utils.GormUtils: java.util.List listToIdMap(java.util.List,java.lang.String)>",
    "<gorm.tools.mango.MangoDetachedCriteria: void <init>(java.lang.Class,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String toString()>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>()>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Throwable getCause()>",
    "<gorm.tools.api.IncludesConfig: java.util.Map $_cache_getIncludes(java.lang.String,java.lang.String,java.lang.Class,java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.api.ApiStatus yakworks_problem_ProblemTraittrait$super$getStatus()>",
    "<gorm.tools.repository.model.AbstractCrossRefRepo: java.lang.Object createOrRemove(gorm.tools.model.Persistable,java.util.Map)>",
    "<gorm.tools.utils.GormUtils: java.util.List collectLongIds(java.util.List,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setOk(java.lang.Boolean)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>(java.lang.Throwable)>",
    "<gorm.tools.problem.ProblemHandler: java.util.List transateErrorsToViolations(org.springframework.validation.Errors)>",
    "<gorm.tools.problem.ValidationProblem$Exception: java.lang.String getMessage()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem addErrors(java.util.List)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleException(java.lang.Throwable,java.lang.String)>",
    "<gorm.tools.validation.Rejector: void withError(java.lang.String,gorm.tools.validation.ValidationCode,java.util.Map,java.lang.String)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity findPersistentEntity(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Boolean yakworks_problem_ProblemTraittrait$super$getOk()>",
    "<gorm.tools.problem.ValidationProblem: void <init>()>",
    "<gorm.tools.idgen.JdbcIdGenerator: long updateIncrement(java.lang.String,long)>",
    "<gorm.tools.repository.GormRepo$Trait$Helper: java.lang.Object findWithData(gorm.tools.repository.GormRepo,java.util.Map,boolean)>",
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: yakworks.api.ApiResults doBulk(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.job.SyncJobContext,boolean)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity getPersistentEntity(org.grails.datastore.gorm.GormEntity)>",
    "<gorm.tools.beans.map.MetaMapEntityService: java.lang.String toJson(java.lang.Object,java.util.List,java.util.List)>",
    "<gorm.tools.beans.map.MetaMapList: java.lang.Object clone()>",
    "<gorm.tools.job.SyncJobContext: java.lang.Long writePayloadFile(java.util.Collection)>",
    "<gorm.tools.beans.map.MetaMap: void <init>(java.lang.Object)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleUnexpected(java.lang.Throwable)>",
    "<gorm.tools.beans.map.MetaMap: java.lang.Object clone()>",
    "<gorm.tools.beans.map.EntityIncludesBuilder: gorm.tools.beans.map.MetaMapIncludes buildNested(java.util.Map)>",
    "<gorm.tools.job.SyncJobContext: void appendDataResults(yakworks.api.ApiResults)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsg()>",
    "<gorm.tools.beans.map.EntityIncludesBuilder: boolean propertyExists(java.lang.String)>",
    "<gorm.tools.repository.artefact.RepositoryArtefactHandler: java.lang.String getRepoBeanName(java.lang.Class)>",
    "<gorm.tools.repository.RepoUtil: void checkCreateData(java.util.Map,gorm.tools.repository.PersistArgs,java.lang.Class)>",
    "<gorm.tools.repository.model.AbstractLinkedEntityRepo: void validateCreate(gorm.tools.model.Persistable,gorm.tools.model.Persistable)>",
    "<gorm.tools.problem.ValidationProblem: java.net.URI getType()>",
    "<gorm.tools.problem.ValidationProblem: void setMsg(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobContext createJob()>",
    "<gorm.tools.job.SyncJobContext: java.util.List transformResults(yakworks.api.ApiResults)>",
    "<gorm.tools.beans.map.MetaMapList: void setTotalCount(int)>",
    "<gorm.tools.repository.RepoUtil: void checkData(java.util.Map,java.lang.Class)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.problem.ProblemException yakworks_problem_data_DataProblemTraittrait$super$toException()>",
    "<gorm.tools.validation.ApiConstraints: java.util.Map collectContraints()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem cause(java.lang.Throwable)>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Class getDomainClassType(java.lang.Object,java.lang.String)>",
    "<gorm.tools.beans.map.MetaMapEntityService: java.lang.String toJson(java.util.List,java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem entity(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String getDetail()>",
    "<gorm.tools.problem.ValidationProblem: void setDetail(java.lang.String)>",
    "<gorm.tools.idgen.PooledIdGenerator: java.util.concurrent.atomic.AtomicReference findOrCreate(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setMsgKey(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobEntity finishJob(java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: void setType(java.net.URI)>",
    "<gorm.tools.problem.ValidationProblem: void setPayload(java.lang.Object)>",
    "<gorm.tools.repository.errors.RepoExceptionSupport: java.lang.RuntimeException translateException(java.lang.RuntimeException,java.lang.Object)>"
  ],
  "7.0.8-v.61": [
    "<gorm.tools.problem.ValidationProblem: void <init>(java.lang.String)>",
    "<gorm.tools.repository.RepoUtil: void checkFound(java.lang.Object,java.io.Serializable,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String yakworks_problem_ProblemTraittrait$super$toString()>",
    "<gorm.tools.problem.ValidationProblem: void setViolations(java.util.List)>",
    "<gorm.tools.repository.events.RepositoryEventType: void <init>(java.lang.String,int,java.lang.Class)>",
    "<gorm.tools.mango.api.QueryArgs: gorm.tools.mango.api.QueryArgs build(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Object getPayload()>",
    "<gorm.tools.problem.ValidationProblem: java.util.List getViolations()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsgKey()>",
    "<gorm.tools.api.IncludesConfig: java.util.Map getClassStaticIncludes(java.lang.Class)>",
    "<gorm.tools.repository.PersistArgs: java.util.Map asMap()>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Object parseBasicType(java.lang.String,java.lang.Class)>",
    "<gorm.tools.async.ParallelTools$Trait$Helper: groovy.lang.Closure sliceClosure(gorm.tools.async.ParallelTools,org.grails.datastore.mapping.core.Datastore,groovy.lang.Closure)>",
    "<gorm.tools.problem.ValidationProblem: void yakworks_problem_ProblemTraittrait$super$setStatus(yakworks.api.ApiStatus)>",
    "<gorm.tools.problem.ValidationProblem: void setCause(java.lang.Throwable)>",
    "<gorm.tools.validation.Rejector: void withError(java.lang.String,java.util.List,java.util.Map,java.lang.String)>",
    "<gorm.tools.utils.GormUtils: java.util.List listToIdMap(java.util.List,java.lang.String)>",
    "<gorm.tools.mango.MangoDetachedCriteria: void <init>(java.lang.Class,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String toString()>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>()>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Throwable getCause()>",
    "<gorm.tools.api.IncludesConfig: java.util.Map $_cache_getIncludes(java.lang.String,java.lang.String,java.lang.Class,java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.api.ApiStatus yakworks_problem_ProblemTraittrait$super$getStatus()>",
    "<gorm.tools.repository.model.AbstractCrossRefRepo: java.lang.Object createOrRemove(gorm.tools.model.Persistable,java.util.Map)>",
    "<gorm.tools.utils.GormUtils: java.util.List collectLongIds(java.util.List,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setOk(java.lang.Boolean)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>(java.lang.Throwable)>",
    "<gorm.tools.problem.ProblemHandler: java.util.List transateErrorsToViolations(org.springframework.validation.Errors)>",
    "<gorm.tools.problem.ValidationProblem$Exception: java.lang.String getMessage()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem addErrors(java.util.List)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleException(java.lang.Throwable,java.lang.String)>",
    "<gorm.tools.validation.Rejector: void withError(java.lang.String,gorm.tools.validation.ValidationCode,java.util.Map,java.lang.String)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity findPersistentEntity(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Boolean yakworks_problem_ProblemTraittrait$super$getOk()>",
    "<gorm.tools.problem.ValidationProblem: void <init>()>",
    "<gorm.tools.idgen.JdbcIdGenerator: long updateIncrement(java.lang.String,long)>",
    "<gorm.tools.repository.GormRepo$Trait$Helper: java.lang.Object findWithData(gorm.tools.repository.GormRepo,java.util.Map,boolean)>",
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: yakworks.api.ApiResults doBulk(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.job.SyncJobContext,boolean)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity getPersistentEntity(org.grails.datastore.gorm.GormEntity)>",
    "<gorm.tools.beans.map.MetaMapEntityService: java.lang.String toJson(java.lang.Object,java.util.List,java.util.List)>",
    "<gorm.tools.beans.map.MetaMapList: java.lang.Object clone()>",
    "<gorm.tools.job.SyncJobContext: java.lang.Long writePayloadFile(java.util.Collection)>",
    "<gorm.tools.beans.map.MetaMap: void <init>(java.lang.Object)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleUnexpected(java.lang.Throwable)>",
    "<gorm.tools.beans.map.MetaMap: java.lang.Object clone()>",
    "<gorm.tools.beans.map.EntityIncludesBuilder: gorm.tools.beans.map.MetaMapIncludes buildNested(java.util.Map)>",
    "<gorm.tools.job.SyncJobContext: void appendDataResults(yakworks.api.ApiResults)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsg()>",
    "<gorm.tools.beans.map.EntityIncludesBuilder: boolean propertyExists(java.lang.String)>",
    "<gorm.tools.repository.artefact.RepositoryArtefactHandler: java.lang.String getRepoBeanName(java.lang.Class)>",
    "<gorm.tools.repository.RepoUtil: void checkCreateData(java.util.Map,gorm.tools.repository.PersistArgs,java.lang.Class)>",
    "<gorm.tools.repository.model.AbstractLinkedEntityRepo: void validateCreate(gorm.tools.model.Persistable,gorm.tools.model.Persistable)>",
    "<gorm.tools.problem.ValidationProblem: java.net.URI getType()>",
    "<gorm.tools.problem.ValidationProblem: void setMsg(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobContext createJob()>",
    "<gorm.tools.job.SyncJobContext: java.util.List transformResults(yakworks.api.ApiResults)>",
    "<gorm.tools.beans.map.MetaMapList: void setTotalCount(int)>",
    "<gorm.tools.repository.RepoUtil: void checkData(java.util.Map,java.lang.Class)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.problem.ProblemException yakworks_problem_data_DataProblemTraittrait$super$toException()>",
    "<gorm.tools.validation.ApiConstraints: java.util.Map collectContraints()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem cause(java.lang.Throwable)>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Class getDomainClassType(java.lang.Object,java.lang.String)>",
    "<gorm.tools.beans.map.MetaMapEntityService: java.lang.String toJson(java.util.List,java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem entity(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String getDetail()>",
    "<gorm.tools.problem.ValidationProblem: void setDetail(java.lang.String)>",
    "<gorm.tools.idgen.PooledIdGenerator: java.util.concurrent.atomic.AtomicReference findOrCreate(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setMsgKey(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobEntity finishJob(java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: void setType(java.net.URI)>",
    "<gorm.tools.problem.ValidationProblem: void setPayload(java.lang.Object)>",
    "<gorm.tools.repository.errors.RepoExceptionSupport: java.lang.RuntimeException translateException(java.lang.RuntimeException,java.lang.Object)>"
  ],
  "7.0.8-v.37": [
    "<gorm.tools.repository.RepoMessage: java.lang.String propName(java.lang.String)>",
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: gorm.tools.repository.bulk.BulkableResults doBulk(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.repository.bulk.BulkableArgs,boolean)>",
    "<gorm.tools.beans.MultiFormatDateConverter: java.lang.Object convert(java.lang.Object)>",
    "<gorm.tools.beans.EntityMap: void <init>(java.lang.Object)>",
    "<gorm.tools.repository.events.RepositoryEventType: void <init>(java.lang.String,int,java.lang.Class)>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Object parseBasicType(java.lang.String,java.lang.Class)>",
    "<gorm.tools.beans.EntityMapService: java.lang.String toJson(java.util.List,java.util.List)>",
    "<gorm.tools.async.ParallelTools$Trait$Helper: groovy.lang.Closure sliceClosure(gorm.tools.async.ParallelTools,org.grails.datastore.mapping.core.Datastore,groovy.lang.Closure)>",
    "<gorm.tools.utils.GormUtils: java.lang.Object getPropertyValue(java.lang.Object,java.lang.String)>",
    "<gorm.tools.repository.model.AbstractCrossRefRepo: java.lang.Object createOrRemove(gorm.tools.model.Persistable,java.util.Map)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity findPersistentEntity(java.lang.String)>",
    "<gorm.tools.idgen.JdbcIdGenerator: long updateIncrement(java.lang.String,long)>",
    "<gorm.tools.repository.GormRepo$Trait$Helper: java.lang.Object findWithData(gorm.tools.repository.GormRepo,java.util.Map,boolean)>",
    "<gorm.tools.beans.BeanPathTools: grails.web.servlet.mvc.GrailsParameterMap flattenMap(javax.servlet.http.HttpServletRequest,java.util.Map)>",
    "<gorm.tools.repository.validation.ApiConstraints: java.util.Map collectContraints()>",
    "<gorm.tools.mango.MangoBuilder: java.util.List getQSearchFields(java.lang.Class)>",
    "<gorm.tools.beans.EntityMapService: java.lang.String toJson(java.lang.Object,java.util.List)>",
    "<gorm.tools.repository.artefact.RepositoryArtefactHandler: java.lang.String getRepoBeanName(java.lang.Class)>",
    "<gorm.tools.repository.model.AbstractLinkedEntityRepo: void validateCreate(gorm.tools.model.Persistable,gorm.tools.model.Persistable)>",
    "<gorm.tools.json.JsonParserTrait$Trait$Helper: groovy.json.JsonSlurper getJsonSlurper(gorm.tools.json.JsonParserTrait)>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Class getDomainClassType(java.lang.Object,java.lang.String)>",
    "<gorm.tools.idgen.PooledIdGenerator: java.util.concurrent.atomic.AtomicReference findOrCreate(java.lang.String)>"
  ],
  "7.0.8-v.44": [
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: yakworks.api.ApiResults doBulkParallel(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.repository.bulk.BulkableArgs)>",
    "<gorm.tools.problem.ValidationProblem: void <init>(java.lang.String)>",
    "<gorm.tools.repository.RepoUtil: void checkFound(java.lang.Object,java.io.Serializable,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String yakworks_problem_ProblemTraittrait$super$toString()>",
    "<gorm.tools.problem.ValidationProblem: void setViolations(java.util.List)>",
    "<gorm.tools.repository.RepoUtil: void checkCreateData(java.util.Map,java.util.Map,java.lang.Class)>",
    "<gorm.tools.repository.events.RepositoryEventType: void <init>(java.lang.String,int,java.lang.Class)>",
    "<gorm.tools.mango.api.QueryArgs: gorm.tools.mango.api.QueryArgs build(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Object getPayload()>",
    "<gorm.tools.problem.ValidationProblem: java.util.List getViolations()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsgKey()>",
    "<gorm.tools.api.IncludesConfig: java.util.Map getClassStaticIncludes(java.lang.Class)>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Object parseBasicType(java.lang.String,java.lang.Class)>",
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: yakworks.api.ApiResults doBulk(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.repository.bulk.BulkableArgs,boolean)>",
    "<gorm.tools.async.ParallelTools$Trait$Helper: groovy.lang.Closure sliceClosure(gorm.tools.async.ParallelTools,org.grails.datastore.mapping.core.Datastore,groovy.lang.Closure)>",
    "<gorm.tools.problem.ValidationProblem: void yakworks_problem_ProblemTraittrait$super$setStatus(yakworks.api.ApiStatus)>",
    "<gorm.tools.problem.ValidationProblem: void setCause(java.lang.Throwable)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String toString()>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>(java.lang.Throwable)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Throwable getCause()>",
    "<gorm.tools.api.IncludesConfig: java.util.Map $_cache_getIncludes(java.lang.String,java.lang.String,java.lang.Class,java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>()>",
    "<gorm.tools.repository.model.AbstractCrossRefRepo: java.lang.Object createOrRemove(gorm.tools.model.Persistable,java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.api.ApiStatus yakworks_problem_ProblemTraittrait$super$getStatus()>",
    "<gorm.tools.problem.ValidationProblem: void setOk(java.lang.Boolean)>",
    "<gorm.tools.problem.ProblemHandler: java.util.List transateErrorsToViolations(org.springframework.validation.Errors)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleException(java.lang.Throwable,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem addErrors(java.util.List)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity findPersistentEntity(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Boolean yakworks_problem_ProblemTraittrait$super$getOk()>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity getPersistentEntity(org.grails.datastore.gorm.GormEntity)>",
    "<gorm.tools.problem.ValidationProblem: void <init>()>",
    "<gorm.tools.repository.GormRepo$Trait$Helper: java.lang.Object findWithData(gorm.tools.repository.GormRepo,java.util.Map,boolean)>",
    "<gorm.tools.idgen.JdbcIdGenerator: long updateIncrement(java.lang.String,long)>",
    "<gorm.tools.beans.map.MetaMap: void <init>(java.lang.Object)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleUnexpected(java.lang.Throwable)>",
    "<gorm.tools.beans.map.MetaMapEntityService: java.lang.String toJson(java.lang.Object,java.util.List)>",
    "<gorm.tools.beans.map.EntityIncludesBuilder: gorm.tools.beans.map.MetaMapIncludes buildNested(java.util.Map)>",
    "<gorm.tools.repository.validation.ApiConstraints: java.util.Map collectContraints()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsg()>",
    "<gorm.tools.beans.map.EntityIncludesBuilder: boolean propertyExists(java.lang.String)>",
    "<gorm.tools.repository.artefact.RepositoryArtefactHandler: java.lang.String getRepoBeanName(java.lang.Class)>",
    "<gorm.tools.repository.model.AbstractLinkedEntityRepo: void validateCreate(gorm.tools.model.Persistable,gorm.tools.model.Persistable)>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem cause(java.lang.Throwable)>",
    "<gorm.tools.problem.ValidationProblem: java.net.URI getType()>",
    "<gorm.tools.problem.ValidationProblem: void setMsg(yakworks.i18n.MsgKey)>",
    "<gorm.tools.beans.map.MetaMapEntityService: java.lang.String toJson(java.util.List,java.util.List)>",
    "<gorm.tools.repository.RepoUtil: void checkData(java.util.Map,java.lang.Class)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.problem.ProblemException yakworks_problem_data_DataProblemTraittrait$super$toException()>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Class getDomainClassType(java.lang.Object,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem entity(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem: void setType(java.net.URI)>",
    "<gorm.tools.problem.ValidationProblem: void setDetail(java.lang.String)>",
    "<gorm.tools.idgen.PooledIdGenerator: java.util.concurrent.atomic.AtomicReference findOrCreate(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setMsgKey(yakworks.i18n.MsgKey)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String getDetail()>",
    "<gorm.tools.problem.ValidationProblem: void setPayload(java.lang.Object)>",
    "<gorm.tools.repository.errors.RepoExceptionSupport: java.lang.RuntimeException translateException(java.lang.RuntimeException,java.lang.Object)>"
  ],
  "7.0.8-v.50": [
    "<gorm.tools.problem.ValidationProblem: void <init>(java.lang.String)>",
    "<gorm.tools.repository.RepoUtil: void checkFound(java.lang.Object,java.io.Serializable,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String yakworks_problem_ProblemTraittrait$super$toString()>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobEntity finishJob(java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: void setViolations(java.util.List)>",
    "<gorm.tools.repository.RepoUtil: void checkCreateData(java.util.Map,java.util.Map,java.lang.Class)>",
    "<gorm.tools.repository.events.RepositoryEventType: void <init>(java.lang.String,int,java.lang.Class)>",
    "<gorm.tools.mango.api.QueryArgs: gorm.tools.mango.api.QueryArgs build(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Object getPayload()>",
    "<gorm.tools.problem.ValidationProblem: java.util.List getViolations()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsgKey()>",
    "<gorm.tools.api.IncludesConfig: java.util.Map getClassStaticIncludes(java.lang.Class)>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Object parseBasicType(java.lang.String,java.lang.Class)>",
    "<gorm.tools.async.ParallelTools$Trait$Helper: groovy.lang.Closure sliceClosure(gorm.tools.async.ParallelTools,org.grails.datastore.mapping.core.Datastore,groovy.lang.Closure)>",
    "<gorm.tools.problem.ValidationProblem: void yakworks_problem_ProblemTraittrait$super$setStatus(yakworks.api.ApiStatus)>",
    "<gorm.tools.problem.ValidationProblem: void setCause(java.lang.Throwable)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String toString()>",
    "<gorm.tools.job.SyncJobArgs: java.util.Map getPersistArgs()>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Throwable getCause()>",
    "<gorm.tools.api.IncludesConfig: java.util.Map $_cache_getIncludes(java.lang.String,java.lang.String,java.lang.Class,java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>()>",
    "<gorm.tools.repository.model.AbstractCrossRefRepo: java.lang.Object createOrRemove(gorm.tools.model.Persistable,java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.api.ApiStatus yakworks_problem_ProblemTraittrait$super$getStatus()>",
    "<gorm.tools.problem.ValidationProblem: void setOk(java.lang.Boolean)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>(java.lang.Throwable)>",
    "<gorm.tools.problem.ProblemHandler: java.util.List transateErrorsToViolations(org.springframework.validation.Errors)>",
    "<gorm.tools.problem.ValidationProblem$Exception: java.lang.String getMessage()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem addErrors(java.util.List)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleException(java.lang.Throwable,java.lang.String)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity findPersistentEntity(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Boolean yakworks_problem_ProblemTraittrait$super$getOk()>",
    "<gorm.tools.problem.ValidationProblem: void <init>()>",
    "<gorm.tools.idgen.JdbcIdGenerator: long updateIncrement(java.lang.String,long)>",
    "<gorm.tools.repository.GormRepo$Trait$Helper: java.lang.Object findWithData(gorm.tools.repository.GormRepo,java.util.Map,boolean)>",
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: yakworks.api.ApiResults doBulk(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.job.SyncJobContext,boolean)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity getPersistentEntity(org.grails.datastore.gorm.GormEntity)>",
    "<gorm.tools.repository.GormRepo$Trait$Helper: boolean validate(gorm.tools.repository.GormRepo,java.lang.Object,java.util.Map)>",
    "<gorm.tools.beans.map.MetaMap: void <init>(java.lang.Object)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleUnexpected(java.lang.Throwable)>",
    "<gorm.tools.beans.map.MetaMap: java.lang.Object clone()>",
    "<gorm.tools.beans.map.EntityIncludesBuilder: gorm.tools.beans.map.MetaMapIncludes buildNested(java.util.Map)>",
    "<gorm.tools.job.SyncJobContext: void appendDataResults(yakworks.api.ApiResults)>",
    "<gorm.tools.beans.map.MetaMapEntityService: java.lang.String toJson(java.lang.Object,java.util.List)>",
    "<gorm.tools.repository.validation.ApiConstraints: java.util.Map collectContraints()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsg()>",
    "<gorm.tools.beans.map.EntityIncludesBuilder: boolean propertyExists(java.lang.String)>",
    "<gorm.tools.repository.artefact.RepositoryArtefactHandler: java.lang.String getRepoBeanName(java.lang.Class)>",
    "<gorm.tools.repository.model.AbstractLinkedEntityRepo: void validateCreate(gorm.tools.model.Persistable,gorm.tools.model.Persistable)>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem cause(java.lang.Throwable)>",
    "<gorm.tools.repository.GormRepo$Trait$Helper: java.lang.Object doPersist(gorm.tools.repository.GormRepo,java.lang.Object,java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: void setMsg(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobContext createJob()>",
    "<gorm.tools.problem.ValidationProblem: java.net.URI getType()>",
    "<gorm.tools.job.SyncJobContext: java.util.List transformResults(yakworks.api.ApiResults)>",
    "<gorm.tools.repository.RepoUtil: void checkData(java.util.Map,java.lang.Class)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.problem.ProblemException yakworks_problem_data_DataProblemTraittrait$super$toException()>",
    "<gorm.tools.beans.map.MetaMapEntityService: java.lang.String toJson(java.util.List,java.util.List)>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Class getDomainClassType(java.lang.Object,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem entity(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String getDetail()>",
    "<gorm.tools.problem.ValidationProblem: void setDetail(java.lang.String)>",
    "<gorm.tools.idgen.PooledIdGenerator: java.util.concurrent.atomic.AtomicReference findOrCreate(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setMsgKey(yakworks.i18n.MsgKey)>",
    "<gorm.tools.problem.ValidationProblem: void setType(java.net.URI)>",
    "<gorm.tools.problem.ValidationProblem: void setPayload(java.lang.Object)>",
    "<gorm.tools.repository.errors.RepoExceptionSupport: java.lang.RuntimeException translateException(java.lang.RuntimeException,java.lang.Object)>"
  ],
  "7.0.8-v.72": [
    "<gorm.tools.problem.ValidationProblem: void <init>(java.lang.String)>",
    "<gorm.tools.repository.RepoUtil: void checkFound(java.lang.Object,java.io.Serializable,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String yakworks_problem_ProblemTraittrait$super$toString()>",
    "<gorm.tools.problem.ValidationProblem: void setViolations(java.util.List)>",
    "<gorm.tools.repository.events.RepositoryEventType: void <init>(java.lang.String,int,java.lang.Class)>",
    "<gorm.tools.mango.api.QueryArgs: gorm.tools.mango.api.QueryArgs build(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Object getPayload()>",
    "<gorm.tools.problem.ValidationProblem: java.util.List getViolations()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsgKey()>",
    "<gorm.tools.metamap.MetaMapIncludes: java.lang.String getShortClassName()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem cause(java.lang.Throwable)>",
    "<gorm.tools.api.IncludesConfig: java.util.Map getClassStaticIncludes(java.lang.Class)>",
    "<gorm.tools.repository.PersistArgs: java.util.Map asMap()>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Object parseBasicType(java.lang.String,java.lang.Class)>",
    "<gorm.tools.async.ParallelTools$Trait$Helper: groovy.lang.Closure sliceClosure(gorm.tools.async.ParallelTools,org.grails.datastore.mapping.core.Datastore,groovy.lang.Closure)>",
    "<gorm.tools.problem.ValidationProblem: void yakworks_problem_ProblemTraittrait$super$setStatus(yakworks.api.ApiStatus)>",
    "<gorm.tools.problem.ValidationProblem: void setCause(java.lang.Throwable)>",
    "<gorm.tools.validation.Rejector: void withError(java.lang.String,java.util.List,java.util.Map,java.lang.String)>",
    "<gorm.tools.utils.GormUtils: java.util.List listToIdMap(java.util.List,java.lang.String)>",
    "<gorm.tools.mango.MangoDetachedCriteria: void <init>(java.lang.Class,java.lang.String)>",
    "<gorm.tools.metamap.MetaMap: void <init>(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>()>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Throwable getCause()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.api.ApiStatus yakworks_problem_ProblemTraittrait$super$getStatus()>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String toString()>",
    "<gorm.tools.repository.model.AbstractCrossRefRepo: java.lang.Object createOrRemove(gorm.tools.model.Persistable,java.util.Map)>",
    "<gorm.tools.utils.GormUtils: java.util.List collectLongIds(java.util.List,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setOk(java.lang.Boolean)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>(java.lang.Throwable)>",
    "<gorm.tools.problem.ProblemHandler: java.util.List transateErrorsToViolations(org.springframework.validation.Errors)>",
    "<gorm.tools.problem.ValidationProblem$Exception: java.lang.String getMessage()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem addErrors(java.util.List)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleException(java.lang.Throwable,java.lang.String)>",
    "<gorm.tools.validation.Rejector: void withError(java.lang.String,gorm.tools.validation.ValidationCode,java.util.Map,java.lang.String)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity findPersistentEntity(java.lang.String)>",
    "<gorm.tools.repository.model.AbstractCrossRefRepo: java.util.List add(gorm.tools.model.Persistable,java.util.List)>",
    "<gorm.tools.metamap.MetaMapEntityService: java.lang.String toJson(java.util.List,java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: void <init>()>",
    "<gorm.tools.metamap.MetaMapIncludes: java.lang.String getRootClassPropName()>",
    "<gorm.tools.repository.GormRepo$Trait$Helper: java.lang.Object findWithData(gorm.tools.repository.GormRepo,java.util.Map,boolean)>",
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: yakworks.api.ApiResults doBulk(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.job.SyncJobContext,boolean)>",
    "<gorm.tools.idgen.JdbcIdGenerator: long updateIncrement(java.lang.String,long)>",
    "<gorm.tools.metamap.MetaMapList: java.lang.Object clone()>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity getPersistentEntity(org.grails.datastore.gorm.GormEntity)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Boolean yakworks_problem_ProblemTraittrait$super$getOk()>",
    "<gorm.tools.job.SyncJobContext: java.lang.Long writePayloadFile(java.util.Collection)>",
    "<gorm.tools.metamap.MetaMapEntityService: java.lang.String toJson(java.lang.Object,java.util.List,java.util.List)>",
    "<gorm.tools.metamap.MetaMapIncludesBuilder: boolean propertyExists(java.lang.String)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleUnexpected(java.lang.Throwable)>",
    "<gorm.tools.job.SyncJobContext: void appendDataResults(yakworks.api.ApiResults)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsg()>",
    "<gorm.tools.repository.artefact.RepositoryArtefactHandler: java.lang.String getRepoBeanName(java.lang.Class)>",
    "<gorm.tools.repository.RepoUtil: void checkCreateData(java.util.Map,gorm.tools.repository.PersistArgs,java.lang.Class)>",
    "<gorm.tools.repository.model.AbstractLinkedEntityRepo: void validateCreate(gorm.tools.model.Persistable,gorm.tools.model.Persistable)>",
    "<gorm.tools.problem.ValidationProblem: java.net.URI getType()>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobContext createJob()>",
    "<gorm.tools.problem.ValidationProblem: void setMsg(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: java.util.List transformResults(yakworks.api.ApiResults)>",
    "<gorm.tools.validation.ApiConstraints: java.util.Map collectContraints()>",
    "<gorm.tools.repository.RepoUtil: void checkData(java.util.Map,java.lang.Class)>",
    "<gorm.tools.metamap.MetaMapIncludesBuilder: gorm.tools.metamap.MetaMapIncludes buildNested(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.problem.ProblemException yakworks_problem_data_DataProblemTraittrait$super$toException()>",
    "<gorm.tools.job.SyncJobFinishedEvent: gorm.tools.job.SyncJobFinishedEvent of(gorm.tools.job.SyncJobContext)>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Class getDomainClassType(java.lang.Object,java.lang.String)>",
    "<gorm.tools.metamap.MetaMap: java.lang.Object clone()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem entity(java.lang.Object)>",
    "<gorm.tools.job.SyncJobStartEvent: gorm.tools.job.SyncJobStartEvent of(gorm.tools.job.SyncJobContext)>",
    "<gorm.tools.problem.ValidationProblem: void setDetail(java.lang.String)>",
    "<gorm.tools.idgen.PooledIdGenerator: java.util.concurrent.atomic.AtomicReference findOrCreate(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setMsgKey(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobEntity finishJob(java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String getDetail()>",
    "<gorm.tools.problem.ValidationProblem: void setPayload(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem: void setType(java.net.URI)>",
    "<gorm.tools.metamap.MetaMapList: void setTotalCount(int)>",
    "<gorm.tools.repository.errors.RepoExceptionSupport: java.lang.RuntimeException translateException(java.lang.RuntimeException,java.lang.Object)>"
  ],
  "7.0.8-v.36": [
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity findPersistentEntity(java.lang.String)>",
    "<gorm.tools.repository.artefact.RepositoryArtefactHandler: java.lang.String getRepoBeanName(java.lang.Class)>",
    "<gorm.tools.repository.RepoMessage: java.lang.String propName(java.lang.String)>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Object parseBasicType(java.lang.String,java.lang.Class)>",
    "<gorm.tools.repository.GormRepo$Trait$Helper: java.lang.Object findWithData(gorm.tools.repository.GormRepo,java.util.Map,boolean)>",
    "<gorm.tools.idgen.JdbcIdGenerator: long updateIncrement(java.lang.String,long)>",
    "<gorm.tools.repository.model.AbstractLinkedEntityRepo: void validateCreate(gorm.tools.model.Persistable,gorm.tools.model.Persistable)>",
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: gorm.tools.repository.bulk.BulkableResults doBulk(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.repository.bulk.BulkableArgs,boolean)>",
    "<gorm.tools.repository.model.AbstractCrossRefRepo: java.lang.Object createOrRemove(gorm.tools.model.Persistable,java.util.Map)>",
    "<gorm.tools.async.ParallelTools$Trait$Helper: groovy.lang.Closure sliceClosure(gorm.tools.async.ParallelTools,org.grails.datastore.mapping.core.Datastore,groovy.lang.Closure)>",
    "<gorm.tools.beans.BeanPathTools: grails.web.servlet.mvc.GrailsParameterMap flattenMap(javax.servlet.http.HttpServletRequest,java.util.Map)>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Class getDomainClassType(java.lang.Object,java.lang.String)>",
    "<gorm.tools.beans.MultiFormatDateConverter: java.lang.Object convert(java.lang.Object)>",
    "<gorm.tools.repository.events.RepositoryEventType: void <init>(java.lang.String,int,java.lang.Class)>",
    "<gorm.tools.utils.GormUtils: java.lang.Object getPropertyValue(java.lang.Object,java.lang.String)>",
    "<gorm.tools.idgen.PooledIdGenerator: java.util.concurrent.atomic.AtomicReference findOrCreate(java.lang.String)>",
    "<gorm.tools.repository.validation.ApiConstraints: java.util.Map collectContraints()>"
  ],
  "7.0.8-v.46": [
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: yakworks.api.ApiResults doBulkParallel(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.repository.bulk.BulkableArgs)>",
    "<gorm.tools.problem.ValidationProblem: void <init>(java.lang.String)>",
    "<gorm.tools.repository.RepoUtil: void checkFound(java.lang.Object,java.io.Serializable,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String yakworks_problem_ProblemTraittrait$super$toString()>",
    "<gorm.tools.problem.ValidationProblem: void setViolations(java.util.List)>",
    "<gorm.tools.repository.RepoUtil: void checkCreateData(java.util.Map,java.util.Map,java.lang.Class)>",
    "<gorm.tools.repository.events.RepositoryEventType: void <init>(java.lang.String,int,java.lang.Class)>",
    "<gorm.tools.mango.api.QueryArgs: gorm.tools.mango.api.QueryArgs build(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Object getPayload()>",
    "<gorm.tools.problem.ValidationProblem: java.util.List getViolations()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsgKey()>",
    "<gorm.tools.api.IncludesConfig: java.util.Map getClassStaticIncludes(java.lang.Class)>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Object parseBasicType(java.lang.String,java.lang.Class)>",
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: yakworks.api.ApiResults doBulk(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.repository.bulk.BulkableArgs,boolean)>",
    "<gorm.tools.async.ParallelTools$Trait$Helper: groovy.lang.Closure sliceClosure(gorm.tools.async.ParallelTools,org.grails.datastore.mapping.core.Datastore,groovy.lang.Closure)>",
    "<gorm.tools.problem.ValidationProblem: void yakworks_problem_ProblemTraittrait$super$setStatus(yakworks.api.ApiStatus)>",
    "<gorm.tools.problem.ValidationProblem: void setCause(java.lang.Throwable)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String toString()>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>(java.lang.Throwable)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Throwable getCause()>",
    "<gorm.tools.api.IncludesConfig: java.util.Map $_cache_getIncludes(java.lang.String,java.lang.String,java.lang.Class,java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>()>",
    "<gorm.tools.repository.model.AbstractCrossRefRepo: java.lang.Object createOrRemove(gorm.tools.model.Persistable,java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.api.ApiStatus yakworks_problem_ProblemTraittrait$super$getStatus()>",
    "<gorm.tools.problem.ValidationProblem: void setOk(java.lang.Boolean)>",
    "<gorm.tools.problem.ProblemHandler: java.util.List transateErrorsToViolations(org.springframework.validation.Errors)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleException(java.lang.Throwable,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem addErrors(java.util.List)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity findPersistentEntity(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Boolean yakworks_problem_ProblemTraittrait$super$getOk()>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity getPersistentEntity(org.grails.datastore.gorm.GormEntity)>",
    "<gorm.tools.problem.ValidationProblem: void <init>()>",
    "<gorm.tools.repository.GormRepo$Trait$Helper: java.lang.Object findWithData(gorm.tools.repository.GormRepo,java.util.Map,boolean)>",
    "<gorm.tools.idgen.JdbcIdGenerator: long updateIncrement(java.lang.String,long)>",
    "<gorm.tools.beans.map.MetaMap: void <init>(java.lang.Object)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleUnexpected(java.lang.Throwable)>",
    "<gorm.tools.beans.map.MetaMapEntityService: java.lang.String toJson(java.lang.Object,java.util.List)>",
    "<gorm.tools.beans.map.EntityIncludesBuilder: gorm.tools.beans.map.MetaMapIncludes buildNested(java.util.Map)>",
    "<gorm.tools.repository.validation.ApiConstraints: java.util.Map collectContraints()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsg()>",
    "<gorm.tools.beans.map.EntityIncludesBuilder: boolean propertyExists(java.lang.String)>",
    "<gorm.tools.repository.artefact.RepositoryArtefactHandler: java.lang.String getRepoBeanName(java.lang.Class)>",
    "<gorm.tools.repository.model.AbstractLinkedEntityRepo: void validateCreate(gorm.tools.model.Persistable,gorm.tools.model.Persistable)>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem cause(java.lang.Throwable)>",
    "<gorm.tools.problem.ValidationProblem: java.net.URI getType()>",
    "<gorm.tools.problem.ValidationProblem: void setMsg(yakworks.i18n.MsgKey)>",
    "<gorm.tools.beans.map.MetaMapEntityService: java.lang.String toJson(java.util.List,java.util.List)>",
    "<gorm.tools.repository.RepoUtil: void checkData(java.util.Map,java.lang.Class)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.problem.ProblemException yakworks_problem_data_DataProblemTraittrait$super$toException()>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Class getDomainClassType(java.lang.Object,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem entity(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem: void setType(java.net.URI)>",
    "<gorm.tools.problem.ValidationProblem: void setDetail(java.lang.String)>",
    "<gorm.tools.idgen.PooledIdGenerator: java.util.concurrent.atomic.AtomicReference findOrCreate(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setMsgKey(yakworks.i18n.MsgKey)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String getDetail()>",
    "<gorm.tools.problem.ValidationProblem: void setPayload(java.lang.Object)>",
    "<gorm.tools.repository.errors.RepoExceptionSupport: java.lang.RuntimeException translateException(java.lang.RuntimeException,java.lang.Object)>"
  ],
  "7.0.8-v.48": [
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: yakworks.api.ApiResults doBulkParallel(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.repository.bulk.BulkableArgs)>",
    "<gorm.tools.problem.ValidationProblem: void <init>(java.lang.String)>",
    "<gorm.tools.repository.RepoUtil: void checkFound(java.lang.Object,java.io.Serializable,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String yakworks_problem_ProblemTraittrait$super$toString()>",
    "<gorm.tools.problem.ValidationProblem: void setViolations(java.util.List)>",
    "<gorm.tools.repository.RepoUtil: void checkCreateData(java.util.Map,java.util.Map,java.lang.Class)>",
    "<gorm.tools.repository.events.RepositoryEventType: void <init>(java.lang.String,int,java.lang.Class)>",
    "<gorm.tools.mango.api.QueryArgs: gorm.tools.mango.api.QueryArgs build(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Object getPayload()>",
    "<gorm.tools.problem.ValidationProblem: java.util.List getViolations()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsgKey()>",
    "<gorm.tools.api.IncludesConfig: java.util.Map getClassStaticIncludes(java.lang.Class)>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Object parseBasicType(java.lang.String,java.lang.Class)>",
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: yakworks.api.ApiResults doBulk(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.repository.bulk.BulkableArgs,boolean)>",
    "<gorm.tools.async.ParallelTools$Trait$Helper: groovy.lang.Closure sliceClosure(gorm.tools.async.ParallelTools,org.grails.datastore.mapping.core.Datastore,groovy.lang.Closure)>",
    "<gorm.tools.problem.ValidationProblem: void yakworks_problem_ProblemTraittrait$super$setStatus(yakworks.api.ApiStatus)>",
    "<gorm.tools.problem.ValidationProblem: void setCause(java.lang.Throwable)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String toString()>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>(java.lang.Throwable)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Throwable getCause()>",
    "<gorm.tools.api.IncludesConfig: java.util.Map $_cache_getIncludes(java.lang.String,java.lang.String,java.lang.Class,java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>()>",
    "<gorm.tools.repository.model.AbstractCrossRefRepo: java.lang.Object createOrRemove(gorm.tools.model.Persistable,java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.api.ApiStatus yakworks_problem_ProblemTraittrait$super$getStatus()>",
    "<gorm.tools.problem.ValidationProblem: void setOk(java.lang.Boolean)>",
    "<gorm.tools.problem.ProblemHandler: java.util.List transateErrorsToViolations(org.springframework.validation.Errors)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleException(java.lang.Throwable,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem addErrors(java.util.List)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity findPersistentEntity(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Boolean yakworks_problem_ProblemTraittrait$super$getOk()>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity getPersistentEntity(org.grails.datastore.gorm.GormEntity)>",
    "<gorm.tools.problem.ValidationProblem: void <init>()>",
    "<gorm.tools.repository.GormRepo$Trait$Helper: java.lang.Object findWithData(gorm.tools.repository.GormRepo,java.util.Map,boolean)>",
    "<gorm.tools.idgen.JdbcIdGenerator: long updateIncrement(java.lang.String,long)>",
    "<gorm.tools.beans.map.MetaMap: void <init>(java.lang.Object)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleUnexpected(java.lang.Throwable)>",
    "<gorm.tools.beans.map.MetaMapEntityService: java.lang.String toJson(java.lang.Object,java.util.List)>",
    "<gorm.tools.beans.map.EntityIncludesBuilder: gorm.tools.beans.map.MetaMapIncludes buildNested(java.util.Map)>",
    "<gorm.tools.repository.validation.ApiConstraints: java.util.Map collectContraints()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsg()>",
    "<gorm.tools.beans.map.EntityIncludesBuilder: boolean propertyExists(java.lang.String)>",
    "<gorm.tools.repository.artefact.RepositoryArtefactHandler: java.lang.String getRepoBeanName(java.lang.Class)>",
    "<gorm.tools.repository.model.AbstractLinkedEntityRepo: void validateCreate(gorm.tools.model.Persistable,gorm.tools.model.Persistable)>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem cause(java.lang.Throwable)>",
    "<gorm.tools.problem.ValidationProblem: java.net.URI getType()>",
    "<gorm.tools.problem.ValidationProblem: void setMsg(yakworks.i18n.MsgKey)>",
    "<gorm.tools.beans.map.MetaMapEntityService: java.lang.String toJson(java.util.List,java.util.List)>",
    "<gorm.tools.repository.RepoUtil: void checkData(java.util.Map,java.lang.Class)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.problem.ProblemException yakworks_problem_data_DataProblemTraittrait$super$toException()>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Class getDomainClassType(java.lang.Object,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem entity(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem: void setType(java.net.URI)>",
    "<gorm.tools.problem.ValidationProblem: void setDetail(java.lang.String)>",
    "<gorm.tools.idgen.PooledIdGenerator: java.util.concurrent.atomic.AtomicReference findOrCreate(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setMsgKey(yakworks.i18n.MsgKey)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String getDetail()>",
    "<gorm.tools.problem.ValidationProblem: void setPayload(java.lang.Object)>",
    "<gorm.tools.repository.errors.RepoExceptionSupport: java.lang.RuntimeException translateException(java.lang.RuntimeException,java.lang.Object)>"
  ],
  "7.0.8-v.71": [
    "<gorm.tools.problem.ValidationProblem: void <init>(java.lang.String)>",
    "<gorm.tools.repository.RepoUtil: void checkFound(java.lang.Object,java.io.Serializable,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String yakworks_problem_ProblemTraittrait$super$toString()>",
    "<gorm.tools.problem.ValidationProblem: void setViolations(java.util.List)>",
    "<gorm.tools.repository.events.RepositoryEventType: void <init>(java.lang.String,int,java.lang.Class)>",
    "<gorm.tools.mango.api.QueryArgs: gorm.tools.mango.api.QueryArgs build(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Object getPayload()>",
    "<gorm.tools.problem.ValidationProblem: java.util.List getViolations()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsgKey()>",
    "<gorm.tools.metamap.MetaMapIncludes: java.lang.String getShortClassName()>",
    "<gorm.tools.api.IncludesConfig: java.util.Map getClassStaticIncludes(java.lang.Class)>",
    "<gorm.tools.repository.PersistArgs: java.util.Map asMap()>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Object parseBasicType(java.lang.String,java.lang.Class)>",
    "<gorm.tools.async.ParallelTools$Trait$Helper: groovy.lang.Closure sliceClosure(gorm.tools.async.ParallelTools,org.grails.datastore.mapping.core.Datastore,groovy.lang.Closure)>",
    "<gorm.tools.problem.ValidationProblem: void yakworks_problem_ProblemTraittrait$super$setStatus(yakworks.api.ApiStatus)>",
    "<gorm.tools.problem.ValidationProblem: void setCause(java.lang.Throwable)>",
    "<gorm.tools.validation.Rejector: void withError(java.lang.String,java.util.List,java.util.Map,java.lang.String)>",
    "<gorm.tools.utils.GormUtils: java.util.List listToIdMap(java.util.List,java.lang.String)>",
    "<gorm.tools.mango.MangoDetachedCriteria: void <init>(java.lang.Class,java.lang.String)>",
    "<gorm.tools.metamap.MetaMap: void <init>(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>()>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Throwable getCause()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.api.ApiStatus yakworks_problem_ProblemTraittrait$super$getStatus()>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String toString()>",
    "<gorm.tools.repository.model.AbstractCrossRefRepo: java.lang.Object createOrRemove(gorm.tools.model.Persistable,java.util.Map)>",
    "<gorm.tools.utils.GormUtils: java.util.List collectLongIds(java.util.List,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setOk(java.lang.Boolean)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>(java.lang.Throwable)>",
    "<gorm.tools.problem.ProblemHandler: java.util.List transateErrorsToViolations(org.springframework.validation.Errors)>",
    "<gorm.tools.problem.ValidationProblem$Exception: java.lang.String getMessage()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem addErrors(java.util.List)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleException(java.lang.Throwable,java.lang.String)>",
    "<gorm.tools.validation.Rejector: void withError(java.lang.String,gorm.tools.validation.ValidationCode,java.util.Map,java.lang.String)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity findPersistentEntity(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Boolean yakworks_problem_ProblemTraittrait$super$getOk()>",
    "<gorm.tools.metamap.MetaMapEntityService: java.lang.String toJson(java.util.List,java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: void <init>()>",
    "<gorm.tools.metamap.MetaMapIncludes: java.lang.String getRootClassPropName()>",
    "<gorm.tools.repository.GormRepo$Trait$Helper: java.lang.Object findWithData(gorm.tools.repository.GormRepo,java.util.Map,boolean)>",
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: yakworks.api.ApiResults doBulk(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.job.SyncJobContext,boolean)>",
    "<gorm.tools.idgen.JdbcIdGenerator: long updateIncrement(java.lang.String,long)>",
    "<gorm.tools.metamap.MetaMapList: java.lang.Object clone()>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity getPersistentEntity(org.grails.datastore.gorm.GormEntity)>",
    "<gorm.tools.job.SyncJobContext: java.lang.Long writePayloadFile(java.util.Collection)>",
    "<gorm.tools.metamap.MetaMapEntityService: java.lang.String toJson(java.lang.Object,java.util.List,java.util.List)>",
    "<gorm.tools.metamap.MetaMapIncludesBuilder: boolean propertyExists(java.lang.String)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleUnexpected(java.lang.Throwable)>",
    "<gorm.tools.job.SyncJobContext: void appendDataResults(yakworks.api.ApiResults)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsg()>",
    "<gorm.tools.repository.artefact.RepositoryArtefactHandler: java.lang.String getRepoBeanName(java.lang.Class)>",
    "<gorm.tools.repository.RepoUtil: void checkCreateData(java.util.Map,gorm.tools.repository.PersistArgs,java.lang.Class)>",
    "<gorm.tools.repository.model.AbstractLinkedEntityRepo: void validateCreate(gorm.tools.model.Persistable,gorm.tools.model.Persistable)>",
    "<gorm.tools.problem.ValidationProblem: java.net.URI getType()>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobContext createJob()>",
    "<gorm.tools.problem.ValidationProblem: void setMsg(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: java.util.List transformResults(yakworks.api.ApiResults)>",
    "<gorm.tools.validation.ApiConstraints: java.util.Map collectContraints()>",
    "<gorm.tools.repository.RepoUtil: void checkData(java.util.Map,java.lang.Class)>",
    "<gorm.tools.metamap.MetaMapIncludesBuilder: gorm.tools.metamap.MetaMapIncludes buildNested(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.problem.ProblemException yakworks_problem_data_DataProblemTraittrait$super$toException()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem cause(java.lang.Throwable)>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Class getDomainClassType(java.lang.Object,java.lang.String)>",
    "<gorm.tools.metamap.MetaMap: java.lang.Object clone()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem entity(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String getDetail()>",
    "<gorm.tools.problem.ValidationProblem: void setDetail(java.lang.String)>",
    "<gorm.tools.idgen.PooledIdGenerator: java.util.concurrent.atomic.AtomicReference findOrCreate(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setMsgKey(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobEntity finishJob(java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: void setType(java.net.URI)>",
    "<gorm.tools.problem.ValidationProblem: void setPayload(java.lang.Object)>",
    "<gorm.tools.metamap.MetaMapList: void setTotalCount(int)>",
    "<gorm.tools.repository.errors.RepoExceptionSupport: java.lang.RuntimeException translateException(java.lang.RuntimeException,java.lang.Object)>"
  ],
  "7.0.8-v.53": [
    "<gorm.tools.problem.ValidationProblem: void <init>(java.lang.String)>",
    "<gorm.tools.repository.RepoUtil: void checkFound(java.lang.Object,java.io.Serializable,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String yakworks_problem_ProblemTraittrait$super$toString()>",
    "<gorm.tools.problem.ValidationProblem: void setViolations(java.util.List)>",
    "<gorm.tools.repository.events.RepositoryEventType: void <init>(java.lang.String,int,java.lang.Class)>",
    "<gorm.tools.mango.api.QueryArgs: gorm.tools.mango.api.QueryArgs build(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Object getPayload()>",
    "<gorm.tools.problem.ValidationProblem: java.util.List getViolations()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsgKey()>",
    "<gorm.tools.api.IncludesConfig: java.util.Map getClassStaticIncludes(java.lang.Class)>",
    "<gorm.tools.repository.PersistArgs: java.util.Map asMap()>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Object parseBasicType(java.lang.String,java.lang.Class)>",
    "<gorm.tools.async.ParallelTools$Trait$Helper: groovy.lang.Closure sliceClosure(gorm.tools.async.ParallelTools,org.grails.datastore.mapping.core.Datastore,groovy.lang.Closure)>",
    "<gorm.tools.problem.ValidationProblem: void yakworks_problem_ProblemTraittrait$super$setStatus(yakworks.api.ApiStatus)>",
    "<gorm.tools.problem.ValidationProblem: void setCause(java.lang.Throwable)>",
    "<gorm.tools.utils.GormUtils: java.util.List listToIdMap(java.util.List,java.lang.String)>",
    "<gorm.tools.mango.MangoDetachedCriteria: void <init>(java.lang.Class,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String toString()>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>()>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Throwable getCause()>",
    "<gorm.tools.api.IncludesConfig: java.util.Map $_cache_getIncludes(java.lang.String,java.lang.String,java.lang.Class,java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.api.ApiStatus yakworks_problem_ProblemTraittrait$super$getStatus()>",
    "<gorm.tools.repository.model.AbstractCrossRefRepo: java.lang.Object createOrRemove(gorm.tools.model.Persistable,java.util.Map)>",
    "<gorm.tools.utils.GormUtils: java.util.List collectLongIds(java.util.List,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setOk(java.lang.Boolean)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>(java.lang.Throwable)>",
    "<gorm.tools.problem.ProblemHandler: java.util.List transateErrorsToViolations(org.springframework.validation.Errors)>",
    "<gorm.tools.problem.ValidationProblem$Exception: java.lang.String getMessage()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem addErrors(java.util.List)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleException(java.lang.Throwable,java.lang.String)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity findPersistentEntity(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Boolean yakworks_problem_ProblemTraittrait$super$getOk()>",
    "<gorm.tools.problem.ValidationProblem: void <init>()>",
    "<gorm.tools.idgen.JdbcIdGenerator: long updateIncrement(java.lang.String,long)>",
    "<gorm.tools.repository.GormRepo$Trait$Helper: java.lang.Object findWithData(gorm.tools.repository.GormRepo,java.util.Map,boolean)>",
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: yakworks.api.ApiResults doBulk(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.job.SyncJobContext,boolean)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity getPersistentEntity(org.grails.datastore.gorm.GormEntity)>",
    "<gorm.tools.beans.map.MetaMapEntityService: java.lang.String toJson(java.lang.Object,java.util.List,java.util.List)>",
    "<gorm.tools.beans.map.MetaMapList: java.lang.Object clone()>",
    "<gorm.tools.job.SyncJobContext: java.lang.Long writePayloadFile(java.util.Collection)>",
    "<gorm.tools.beans.map.MetaMap: void <init>(java.lang.Object)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleUnexpected(java.lang.Throwable)>",
    "<gorm.tools.beans.map.MetaMap: java.lang.Object clone()>",
    "<gorm.tools.beans.map.EntityIncludesBuilder: gorm.tools.beans.map.MetaMapIncludes buildNested(java.util.Map)>",
    "<gorm.tools.job.SyncJobContext: void appendDataResults(yakworks.api.ApiResults)>",
    "<gorm.tools.repository.validation.ApiConstraints: java.util.Map collectContraints()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsg()>",
    "<gorm.tools.beans.map.EntityIncludesBuilder: boolean propertyExists(java.lang.String)>",
    "<gorm.tools.repository.artefact.RepositoryArtefactHandler: java.lang.String getRepoBeanName(java.lang.Class)>",
    "<gorm.tools.repository.RepoUtil: void checkCreateData(java.util.Map,gorm.tools.repository.PersistArgs,java.lang.Class)>",
    "<gorm.tools.repository.model.AbstractLinkedEntityRepo: void validateCreate(gorm.tools.model.Persistable,gorm.tools.model.Persistable)>",
    "<gorm.tools.problem.ValidationProblem: java.net.URI getType()>",
    "<gorm.tools.problem.ValidationProblem: void setMsg(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobContext createJob()>",
    "<gorm.tools.job.SyncJobContext: java.util.List transformResults(yakworks.api.ApiResults)>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem cause(java.lang.Throwable)>",
    "<gorm.tools.repository.RepoUtil: void checkData(java.util.Map,java.lang.Class)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.problem.ProblemException yakworks_problem_data_DataProblemTraittrait$super$toException()>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Class getDomainClassType(java.lang.Object,java.lang.String)>",
    "<gorm.tools.beans.map.MetaMapEntityService: java.lang.String toJson(java.util.List,java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem entity(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String getDetail()>",
    "<gorm.tools.problem.ValidationProblem: void setDetail(java.lang.String)>",
    "<gorm.tools.idgen.PooledIdGenerator: java.util.concurrent.atomic.AtomicReference findOrCreate(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setMsgKey(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobEntity finishJob(java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: void setType(java.net.URI)>",
    "<gorm.tools.problem.ValidationProblem: void setPayload(java.lang.Object)>",
    "<gorm.tools.repository.errors.RepoExceptionSupport: java.lang.RuntimeException translateException(java.lang.RuntimeException,java.lang.Object)>"
  ],
  "7.0.8-v.49": [
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: yakworks.api.ApiResults doBulkParallel(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.repository.bulk.BulkableArgs)>",
    "<gorm.tools.problem.ValidationProblem: void <init>(java.lang.String)>",
    "<gorm.tools.repository.RepoUtil: void checkFound(java.lang.Object,java.io.Serializable,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String yakworks_problem_ProblemTraittrait$super$toString()>",
    "<gorm.tools.problem.ValidationProblem: void setViolations(java.util.List)>",
    "<gorm.tools.repository.RepoUtil: void checkCreateData(java.util.Map,java.util.Map,java.lang.Class)>",
    "<gorm.tools.repository.events.RepositoryEventType: void <init>(java.lang.String,int,java.lang.Class)>",
    "<gorm.tools.mango.api.QueryArgs: gorm.tools.mango.api.QueryArgs build(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Object getPayload()>",
    "<gorm.tools.problem.ValidationProblem: java.util.List getViolations()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsgKey()>",
    "<gorm.tools.api.IncludesConfig: java.util.Map getClassStaticIncludes(java.lang.Class)>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Object parseBasicType(java.lang.String,java.lang.Class)>",
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: yakworks.api.ApiResults doBulk(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.repository.bulk.BulkableArgs,boolean)>",
    "<gorm.tools.async.ParallelTools$Trait$Helper: groovy.lang.Closure sliceClosure(gorm.tools.async.ParallelTools,org.grails.datastore.mapping.core.Datastore,groovy.lang.Closure)>",
    "<gorm.tools.problem.ValidationProblem: void yakworks_problem_ProblemTraittrait$super$setStatus(yakworks.api.ApiStatus)>",
    "<gorm.tools.problem.ValidationProblem: void setCause(java.lang.Throwable)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String toString()>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>(java.lang.Throwable)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Throwable getCause()>",
    "<gorm.tools.api.IncludesConfig: java.util.Map $_cache_getIncludes(java.lang.String,java.lang.String,java.lang.Class,java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>()>",
    "<gorm.tools.repository.model.AbstractCrossRefRepo: java.lang.Object createOrRemove(gorm.tools.model.Persistable,java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.api.ApiStatus yakworks_problem_ProblemTraittrait$super$getStatus()>",
    "<gorm.tools.problem.ValidationProblem: void setOk(java.lang.Boolean)>",
    "<gorm.tools.problem.ProblemHandler: java.util.List transateErrorsToViolations(org.springframework.validation.Errors)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleException(java.lang.Throwable,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem addErrors(java.util.List)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity findPersistentEntity(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Boolean yakworks_problem_ProblemTraittrait$super$getOk()>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity getPersistentEntity(org.grails.datastore.gorm.GormEntity)>",
    "<gorm.tools.problem.ValidationProblem: void <init>()>",
    "<gorm.tools.repository.GormRepo$Trait$Helper: java.lang.Object findWithData(gorm.tools.repository.GormRepo,java.util.Map,boolean)>",
    "<gorm.tools.idgen.JdbcIdGenerator: long updateIncrement(java.lang.String,long)>",
    "<gorm.tools.beans.map.MetaMap: void <init>(java.lang.Object)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleUnexpected(java.lang.Throwable)>",
    "<gorm.tools.beans.map.MetaMapEntityService: java.lang.String toJson(java.lang.Object,java.util.List)>",
    "<gorm.tools.beans.map.EntityIncludesBuilder: gorm.tools.beans.map.MetaMapIncludes buildNested(java.util.Map)>",
    "<gorm.tools.repository.validation.ApiConstraints: java.util.Map collectContraints()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsg()>",
    "<gorm.tools.beans.map.EntityIncludesBuilder: boolean propertyExists(java.lang.String)>",
    "<gorm.tools.repository.artefact.RepositoryArtefactHandler: java.lang.String getRepoBeanName(java.lang.Class)>",
    "<gorm.tools.repository.model.AbstractLinkedEntityRepo: void validateCreate(gorm.tools.model.Persistable,gorm.tools.model.Persistable)>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem cause(java.lang.Throwable)>",
    "<gorm.tools.problem.ValidationProblem: java.net.URI getType()>",
    "<gorm.tools.problem.ValidationProblem: void setMsg(yakworks.i18n.MsgKey)>",
    "<gorm.tools.beans.map.MetaMapEntityService: java.lang.String toJson(java.util.List,java.util.List)>",
    "<gorm.tools.repository.RepoUtil: void checkData(java.util.Map,java.lang.Class)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.problem.ProblemException yakworks_problem_data_DataProblemTraittrait$super$toException()>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Class getDomainClassType(java.lang.Object,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem entity(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem: void setType(java.net.URI)>",
    "<gorm.tools.problem.ValidationProblem: void setDetail(java.lang.String)>",
    "<gorm.tools.idgen.PooledIdGenerator: java.util.concurrent.atomic.AtomicReference findOrCreate(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setMsgKey(yakworks.i18n.MsgKey)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String getDetail()>",
    "<gorm.tools.problem.ValidationProblem: void setPayload(java.lang.Object)>",
    "<gorm.tools.repository.errors.RepoExceptionSupport: java.lang.RuntimeException translateException(java.lang.RuntimeException,java.lang.Object)>"
  ],
  "7.0.8-v.63": [
    "<gorm.tools.beans.map.MetaMapIncludesBuilder: gorm.tools.beans.map.MetaMapIncludes buildNested(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: void <init>(java.lang.String)>",
    "<gorm.tools.repository.RepoUtil: void checkFound(java.lang.Object,java.io.Serializable,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String yakworks_problem_ProblemTraittrait$super$toString()>",
    "<gorm.tools.problem.ValidationProblem: void setViolations(java.util.List)>",
    "<gorm.tools.repository.events.RepositoryEventType: void <init>(java.lang.String,int,java.lang.Class)>",
    "<gorm.tools.mango.api.QueryArgs: gorm.tools.mango.api.QueryArgs build(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Object getPayload()>",
    "<gorm.tools.problem.ValidationProblem: java.util.List getViolations()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsgKey()>",
    "<gorm.tools.api.IncludesConfig: java.util.Map getClassStaticIncludes(java.lang.Class)>",
    "<gorm.tools.repository.PersistArgs: java.util.Map asMap()>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Object parseBasicType(java.lang.String,java.lang.Class)>",
    "<gorm.tools.async.ParallelTools$Trait$Helper: groovy.lang.Closure sliceClosure(gorm.tools.async.ParallelTools,org.grails.datastore.mapping.core.Datastore,groovy.lang.Closure)>",
    "<gorm.tools.problem.ValidationProblem: void yakworks_problem_ProblemTraittrait$super$setStatus(yakworks.api.ApiStatus)>",
    "<gorm.tools.problem.ValidationProblem: void setCause(java.lang.Throwable)>",
    "<gorm.tools.validation.Rejector: void withError(java.lang.String,java.util.List,java.util.Map,java.lang.String)>",
    "<gorm.tools.utils.GormUtils: java.util.List listToIdMap(java.util.List,java.lang.String)>",
    "<gorm.tools.mango.MangoDetachedCriteria: void <init>(java.lang.Class,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String toString()>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>()>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Throwable getCause()>",
    "<gorm.tools.api.IncludesConfig: java.util.Map $_cache_getIncludes(java.lang.String,java.lang.String,java.lang.Class,java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.api.ApiStatus yakworks_problem_ProblemTraittrait$super$getStatus()>",
    "<gorm.tools.repository.model.AbstractCrossRefRepo: java.lang.Object createOrRemove(gorm.tools.model.Persistable,java.util.Map)>",
    "<gorm.tools.utils.GormUtils: java.util.List collectLongIds(java.util.List,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setOk(java.lang.Boolean)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>(java.lang.Throwable)>",
    "<gorm.tools.problem.ProblemHandler: java.util.List transateErrorsToViolations(org.springframework.validation.Errors)>",
    "<gorm.tools.problem.ValidationProblem$Exception: java.lang.String getMessage()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem addErrors(java.util.List)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleException(java.lang.Throwable,java.lang.String)>",
    "<gorm.tools.validation.Rejector: void withError(java.lang.String,gorm.tools.validation.ValidationCode,java.util.Map,java.lang.String)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity findPersistentEntity(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Boolean yakworks_problem_ProblemTraittrait$super$getOk()>",
    "<gorm.tools.problem.ValidationProblem: void <init>()>",
    "<gorm.tools.idgen.JdbcIdGenerator: long updateIncrement(java.lang.String,long)>",
    "<gorm.tools.repository.GormRepo$Trait$Helper: java.lang.Object findWithData(gorm.tools.repository.GormRepo,java.util.Map,boolean)>",
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: yakworks.api.ApiResults doBulk(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.job.SyncJobContext,boolean)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity getPersistentEntity(org.grails.datastore.gorm.GormEntity)>",
    "<gorm.tools.beans.map.MetaMapEntityService: java.lang.String toJson(java.lang.Object,java.util.List,java.util.List)>",
    "<gorm.tools.beans.map.MetaMapList: java.lang.Object clone()>",
    "<gorm.tools.job.SyncJobContext: java.lang.Long writePayloadFile(java.util.Collection)>",
    "<gorm.tools.beans.map.MetaMap: void <init>(java.lang.Object)>",
    "<gorm.tools.beans.map.MetaMapIncludes: java.lang.String getShortClassName()>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleUnexpected(java.lang.Throwable)>",
    "<gorm.tools.beans.map.MetaMap: java.lang.Object clone()>",
    "<gorm.tools.beans.map.MetaMapIncludesBuilder: boolean propertyExists(java.lang.String)>",
    "<gorm.tools.job.SyncJobContext: void appendDataResults(yakworks.api.ApiResults)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsg()>",
    "<gorm.tools.repository.artefact.RepositoryArtefactHandler: java.lang.String getRepoBeanName(java.lang.Class)>",
    "<gorm.tools.repository.RepoUtil: void checkCreateData(java.util.Map,gorm.tools.repository.PersistArgs,java.lang.Class)>",
    "<gorm.tools.repository.model.AbstractLinkedEntityRepo: void validateCreate(gorm.tools.model.Persistable,gorm.tools.model.Persistable)>",
    "<gorm.tools.problem.ValidationProblem: java.net.URI getType()>",
    "<gorm.tools.problem.ValidationProblem: void setMsg(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobContext createJob()>",
    "<gorm.tools.job.SyncJobContext: java.util.List transformResults(yakworks.api.ApiResults)>",
    "<gorm.tools.beans.map.MetaMapList: void setTotalCount(int)>",
    "<gorm.tools.repository.RepoUtil: void checkData(java.util.Map,java.lang.Class)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.problem.ProblemException yakworks_problem_data_DataProblemTraittrait$super$toException()>",
    "<gorm.tools.validation.ApiConstraints: java.util.Map collectContraints()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem cause(java.lang.Throwable)>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Class getDomainClassType(java.lang.Object,java.lang.String)>",
    "<gorm.tools.beans.map.MetaMapEntityService: java.lang.String toJson(java.util.List,java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem entity(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String getDetail()>",
    "<gorm.tools.problem.ValidationProblem: void setDetail(java.lang.String)>",
    "<gorm.tools.idgen.PooledIdGenerator: java.util.concurrent.atomic.AtomicReference findOrCreate(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setMsgKey(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobEntity finishJob(java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: void setType(java.net.URI)>",
    "<gorm.tools.problem.ValidationProblem: void setPayload(java.lang.Object)>",
    "<gorm.tools.repository.errors.RepoExceptionSupport: java.lang.RuntimeException translateException(java.lang.RuntimeException,java.lang.Object)>"
  ],
  "7.0.8-v.70": [
    "<gorm.tools.problem.ValidationProblem: void <init>(java.lang.String)>",
    "<gorm.tools.repository.RepoUtil: void checkFound(java.lang.Object,java.io.Serializable,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String yakworks_problem_ProblemTraittrait$super$toString()>",
    "<gorm.tools.problem.ValidationProblem: void setViolations(java.util.List)>",
    "<gorm.tools.repository.events.RepositoryEventType: void <init>(java.lang.String,int,java.lang.Class)>",
    "<gorm.tools.mango.api.QueryArgs: gorm.tools.mango.api.QueryArgs build(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Object getPayload()>",
    "<gorm.tools.problem.ValidationProblem: java.util.List getViolations()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsgKey()>",
    "<gorm.tools.metamap.MetaMapIncludes: java.lang.String getShortClassName()>",
    "<gorm.tools.api.IncludesConfig: java.util.Map getClassStaticIncludes(java.lang.Class)>",
    "<gorm.tools.repository.PersistArgs: java.util.Map asMap()>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Object parseBasicType(java.lang.String,java.lang.Class)>",
    "<gorm.tools.async.ParallelTools$Trait$Helper: groovy.lang.Closure sliceClosure(gorm.tools.async.ParallelTools,org.grails.datastore.mapping.core.Datastore,groovy.lang.Closure)>",
    "<gorm.tools.problem.ValidationProblem: void yakworks_problem_ProblemTraittrait$super$setStatus(yakworks.api.ApiStatus)>",
    "<gorm.tools.problem.ValidationProblem: void setCause(java.lang.Throwable)>",
    "<gorm.tools.validation.Rejector: void withError(java.lang.String,java.util.List,java.util.Map,java.lang.String)>",
    "<gorm.tools.utils.GormUtils: java.util.List listToIdMap(java.util.List,java.lang.String)>",
    "<gorm.tools.mango.MangoDetachedCriteria: void <init>(java.lang.Class,java.lang.String)>",
    "<gorm.tools.metamap.MetaMap: void <init>(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>()>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Throwable getCause()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.api.ApiStatus yakworks_problem_ProblemTraittrait$super$getStatus()>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String toString()>",
    "<gorm.tools.repository.model.AbstractCrossRefRepo: java.lang.Object createOrRemove(gorm.tools.model.Persistable,java.util.Map)>",
    "<gorm.tools.utils.GormUtils: java.util.List collectLongIds(java.util.List,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setOk(java.lang.Boolean)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>(java.lang.Throwable)>",
    "<gorm.tools.problem.ProblemHandler: java.util.List transateErrorsToViolations(org.springframework.validation.Errors)>",
    "<gorm.tools.problem.ValidationProblem$Exception: java.lang.String getMessage()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem addErrors(java.util.List)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleException(java.lang.Throwable,java.lang.String)>",
    "<gorm.tools.validation.Rejector: void withError(java.lang.String,gorm.tools.validation.ValidationCode,java.util.Map,java.lang.String)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity findPersistentEntity(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Boolean yakworks_problem_ProblemTraittrait$super$getOk()>",
    "<gorm.tools.metamap.MetaMapEntityService: java.lang.String toJson(java.util.List,java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: void <init>()>",
    "<gorm.tools.metamap.MetaMapIncludes: java.lang.String getRootClassPropName()>",
    "<gorm.tools.repository.GormRepo$Trait$Helper: java.lang.Object findWithData(gorm.tools.repository.GormRepo,java.util.Map,boolean)>",
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: yakworks.api.ApiResults doBulk(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.job.SyncJobContext,boolean)>",
    "<gorm.tools.idgen.JdbcIdGenerator: long updateIncrement(java.lang.String,long)>",
    "<gorm.tools.metamap.MetaMapList: java.lang.Object clone()>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity getPersistentEntity(org.grails.datastore.gorm.GormEntity)>",
    "<gorm.tools.job.SyncJobContext: java.lang.Long writePayloadFile(java.util.Collection)>",
    "<gorm.tools.metamap.MetaMapEntityService: java.lang.String toJson(java.lang.Object,java.util.List,java.util.List)>",
    "<gorm.tools.metamap.MetaMapIncludesBuilder: boolean propertyExists(java.lang.String)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleUnexpected(java.lang.Throwable)>",
    "<gorm.tools.job.SyncJobContext: void appendDataResults(yakworks.api.ApiResults)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsg()>",
    "<gorm.tools.repository.artefact.RepositoryArtefactHandler: java.lang.String getRepoBeanName(java.lang.Class)>",
    "<gorm.tools.repository.RepoUtil: void checkCreateData(java.util.Map,gorm.tools.repository.PersistArgs,java.lang.Class)>",
    "<gorm.tools.repository.model.AbstractLinkedEntityRepo: void validateCreate(gorm.tools.model.Persistable,gorm.tools.model.Persistable)>",
    "<gorm.tools.problem.ValidationProblem: java.net.URI getType()>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobContext createJob()>",
    "<gorm.tools.problem.ValidationProblem: void setMsg(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: java.util.List transformResults(yakworks.api.ApiResults)>",
    "<gorm.tools.validation.ApiConstraints: java.util.Map collectContraints()>",
    "<gorm.tools.repository.RepoUtil: void checkData(java.util.Map,java.lang.Class)>",
    "<gorm.tools.metamap.MetaMapIncludesBuilder: gorm.tools.metamap.MetaMapIncludes buildNested(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.problem.ProblemException yakworks_problem_data_DataProblemTraittrait$super$toException()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem cause(java.lang.Throwable)>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Class getDomainClassType(java.lang.Object,java.lang.String)>",
    "<gorm.tools.metamap.MetaMap: java.lang.Object clone()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem entity(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String getDetail()>",
    "<gorm.tools.problem.ValidationProblem: void setDetail(java.lang.String)>",
    "<gorm.tools.idgen.PooledIdGenerator: java.util.concurrent.atomic.AtomicReference findOrCreate(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setMsgKey(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobEntity finishJob(java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: void setType(java.net.URI)>",
    "<gorm.tools.problem.ValidationProblem: void setPayload(java.lang.Object)>",
    "<gorm.tools.metamap.MetaMapList: void setTotalCount(int)>",
    "<gorm.tools.repository.errors.RepoExceptionSupport: java.lang.RuntimeException translateException(java.lang.RuntimeException,java.lang.Object)>"
  ],
  "7.0.8-v.77": [
    "<gorm.tools.problem.ValidationProblem: void <init>(java.lang.String)>",
    "<gorm.tools.repository.RepoUtil: void checkFound(java.lang.Object,java.io.Serializable,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String yakworks_problem_ProblemTraittrait$super$toString()>",
    "<gorm.tools.problem.ValidationProblem: void setViolations(java.util.List)>",
    "<gorm.tools.repository.events.RepositoryEventType: void <init>(java.lang.String,int,java.lang.Class)>",
    "<gorm.tools.mango.api.QueryArgs: gorm.tools.mango.api.QueryArgs build(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Object getPayload()>",
    "<gorm.tools.problem.ValidationProblem: java.util.List getViolations()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsgKey()>",
    "<gorm.tools.metamap.MetaMapIncludes: java.lang.String getShortClassName()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem cause(java.lang.Throwable)>",
    "<gorm.tools.api.IncludesConfig: java.util.Map getClassStaticIncludes(java.lang.Class)>",
    "<gorm.tools.repository.PersistArgs: java.util.Map asMap()>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Object parseBasicType(java.lang.String,java.lang.Class)>",
    "<gorm.tools.async.ParallelTools$Trait$Helper: groovy.lang.Closure sliceClosure(gorm.tools.async.ParallelTools,org.grails.datastore.mapping.core.Datastore,groovy.lang.Closure)>",
    "<gorm.tools.problem.ValidationProblem: void yakworks_problem_ProblemTraittrait$super$setStatus(yakworks.api.ApiStatus)>",
    "<gorm.tools.problem.ValidationProblem: void setCause(java.lang.Throwable)>",
    "<gorm.tools.validation.Rejector: void withError(java.lang.String,java.util.List,java.util.Map,java.lang.String)>",
    "<gorm.tools.utils.GormUtils: java.util.List listToIdMap(java.util.List,java.lang.String)>",
    "<gorm.tools.mango.MangoDetachedCriteria: void <init>(java.lang.Class,java.lang.String)>",
    "<gorm.tools.metamap.MetaMap: void <init>(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>()>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Throwable getCause()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.api.ApiStatus yakworks_problem_ProblemTraittrait$super$getStatus()>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String toString()>",
    "<gorm.tools.repository.model.AbstractCrossRefRepo: java.lang.Object createOrRemove(gorm.tools.model.Persistable,java.util.Map)>",
    "<gorm.tools.utils.GormUtils: java.util.List collectLongIds(java.util.List,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setOk(java.lang.Boolean)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>(java.lang.Throwable)>",
    "<gorm.tools.problem.ProblemHandler: java.util.List transateErrorsToViolations(org.springframework.validation.Errors)>",
    "<gorm.tools.problem.ValidationProblem$Exception: java.lang.String getMessage()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem addErrors(java.util.List)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleException(java.lang.Throwable,java.lang.String)>",
    "<gorm.tools.validation.Rejector: void withError(java.lang.String,gorm.tools.validation.ValidationCode,java.util.Map,java.lang.String)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity findPersistentEntity(java.lang.String)>",
    "<gorm.tools.repository.model.AbstractCrossRefRepo: java.util.List add(gorm.tools.model.Persistable,java.util.List)>",
    "<gorm.tools.metamap.MetaMapEntityService: java.lang.String toJson(java.util.List,java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: void <init>()>",
    "<gorm.tools.metamap.MetaMapIncludes: java.lang.String getRootClassPropName()>",
    "<gorm.tools.repository.GormRepo$Trait$Helper: java.lang.Object findWithData(gorm.tools.repository.GormRepo,java.util.Map,boolean)>",
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: yakworks.api.ApiResults doBulk(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.job.SyncJobContext,boolean)>",
    "<gorm.tools.idgen.JdbcIdGenerator: long updateIncrement(java.lang.String,long)>",
    "<gorm.tools.metamap.MetaMapList: java.lang.Object clone()>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity getPersistentEntity(org.grails.datastore.gorm.GormEntity)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Boolean yakworks_problem_ProblemTraittrait$super$getOk()>",
    "<gorm.tools.job.SyncJobContext: java.lang.Long writePayloadFile(java.util.Collection)>",
    "<gorm.tools.metamap.MetaMapEntityService: java.lang.String toJson(java.lang.Object,java.util.List,java.util.List)>",
    "<gorm.tools.metamap.MetaMapIncludesBuilder: boolean propertyExists(java.lang.String)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleUnexpected(java.lang.Throwable)>",
    "<gorm.tools.job.SyncJobContext: void appendDataResults(yakworks.api.ApiResults)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsg()>",
    "<gorm.tools.repository.artefact.RepositoryArtefactHandler: java.lang.String getRepoBeanName(java.lang.Class)>",
    "<gorm.tools.repository.RepoUtil: void checkCreateData(java.util.Map,gorm.tools.repository.PersistArgs,java.lang.Class)>",
    "<gorm.tools.repository.model.AbstractLinkedEntityRepo: void validateCreate(gorm.tools.model.Persistable,gorm.tools.model.Persistable)>",
    "<gorm.tools.problem.ValidationProblem: java.net.URI getType()>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobContext createJob()>",
    "<gorm.tools.problem.ValidationProblem: void setMsg(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: java.util.List transformResults(yakworks.api.ApiResults)>",
    "<gorm.tools.validation.ApiConstraints: java.util.Map collectContraints()>",
    "<gorm.tools.repository.RepoUtil: void checkData(java.util.Map,java.lang.Class)>",
    "<gorm.tools.metamap.MetaMapIncludesBuilder: gorm.tools.metamap.MetaMapIncludes buildNested(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.problem.ProblemException yakworks_problem_data_DataProblemTraittrait$super$toException()>",
    "<gorm.tools.job.SyncJobFinishedEvent: gorm.tools.job.SyncJobFinishedEvent of(gorm.tools.job.SyncJobContext)>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Class getDomainClassType(java.lang.Object,java.lang.String)>",
    "<gorm.tools.metamap.MetaMap: java.lang.Object clone()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem entity(java.lang.Object)>",
    "<gorm.tools.job.SyncJobStartEvent: gorm.tools.job.SyncJobStartEvent of(gorm.tools.job.SyncJobContext)>",
    "<gorm.tools.problem.ValidationProblem: void setDetail(java.lang.String)>",
    "<gorm.tools.idgen.PooledIdGenerator: java.util.concurrent.atomic.AtomicReference findOrCreate(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setMsgKey(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobEntity finishJob(java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String getDetail()>",
    "<gorm.tools.problem.ValidationProblem: void setPayload(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem: void setType(java.net.URI)>",
    "<gorm.tools.metamap.MetaMapList: void setTotalCount(int)>",
    "<gorm.tools.repository.errors.RepoExceptionSupport: java.lang.RuntimeException translateException(java.lang.RuntimeException,java.lang.Object)>"
  ],
  "7.0.8-v.42": [
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: yakworks.api.ApiResults doBulkParallel(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.repository.bulk.BulkableArgs)>",
    "<gorm.tools.problem.ValidationProblem: void <init>(java.lang.String)>",
    "<gorm.tools.repository.RepoUtil: void checkFound(java.lang.Object,java.io.Serializable,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String yakworks_problem_ProblemTraittrait$super$toString()>",
    "<gorm.tools.problem.ValidationProblem: void setViolations(java.util.List)>",
    "<gorm.tools.beans.EntityMap: void <init>(java.lang.Object)>",
    "<gorm.tools.repository.RepoUtil: void checkCreateData(java.util.Map,java.util.Map,java.lang.Class)>",
    "<gorm.tools.repository.events.RepositoryEventType: void <init>(java.lang.String,int,java.lang.Class)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Object getPayload()>",
    "<gorm.tools.problem.ValidationProblem: java.util.List getViolations()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsgKey()>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Object parseBasicType(java.lang.String,java.lang.Class)>",
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: yakworks.api.ApiResults doBulk(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.repository.bulk.BulkableArgs,boolean)>",
    "<gorm.tools.beans.EntityMapService: java.lang.String toJson(java.util.List,java.util.List)>",
    "<gorm.tools.async.ParallelTools$Trait$Helper: groovy.lang.Closure sliceClosure(gorm.tools.async.ParallelTools,org.grails.datastore.mapping.core.Datastore,groovy.lang.Closure)>",
    "<gorm.tools.problem.ValidationProblem: void yakworks_problem_ProblemTraittrait$super$setStatus(yakworks.api.ApiStatus)>",
    "<gorm.tools.problem.ValidationProblem: void setCause(java.lang.Throwable)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String toString()>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>(java.lang.Throwable)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Throwable getCause()>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.api.ApiStatus yakworks_problem_ProblemTraittrait$super$getStatus()>",
    "<gorm.tools.repository.model.AbstractCrossRefRepo: java.lang.Object createOrRemove(gorm.tools.model.Persistable,java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: void setOk(java.lang.Boolean)>",
    "<gorm.tools.problem.ProblemHandler: java.util.List transateErrorsToViolations(org.springframework.validation.Errors)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleException(java.lang.Throwable,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem addErrors(java.util.List)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity findPersistentEntity(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Boolean yakworks_problem_ProblemTraittrait$super$getOk()>",
    "<gorm.tools.problem.ValidationProblem: void <init>()>",
    "<gorm.tools.idgen.JdbcIdGenerator: long updateIncrement(java.lang.String,long)>",
    "<gorm.tools.repository.GormRepo$Trait$Helper: java.lang.Object findWithData(gorm.tools.repository.GormRepo,java.util.Map,boolean)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleUnexpected(java.lang.Throwable)>",
    "<gorm.tools.repository.validation.ApiConstraints: java.util.Map collectContraints()>",
    "<gorm.tools.mango.MangoBuilder: java.util.List getQSearchFields(java.lang.Class)>",
    "<gorm.tools.beans.EntityMapService: java.lang.String toJson(java.lang.Object,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsg()>",
    "<gorm.tools.repository.artefact.RepositoryArtefactHandler: java.lang.String getRepoBeanName(java.lang.Class)>",
    "<gorm.tools.repository.model.AbstractLinkedEntityRepo: void validateCreate(gorm.tools.model.Persistable,gorm.tools.model.Persistable)>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem cause(java.lang.Throwable)>",
    "<gorm.tools.problem.ValidationProblem: java.net.URI getType()>",
    "<gorm.tools.problem.ValidationProblem: void setMsg(yakworks.i18n.MsgKey)>",
    "<gorm.tools.repository.RepoUtil: void checkData(java.util.Map,java.lang.Class)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.problem.ProblemException yakworks_problem_data_DataProblemTraittrait$super$toException()>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Class getDomainClassType(java.lang.Object,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem entity(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem: void setType(java.net.URI)>",
    "<gorm.tools.problem.ValidationProblem: void setDetail(java.lang.String)>",
    "<gorm.tools.idgen.PooledIdGenerator: java.util.concurrent.atomic.AtomicReference findOrCreate(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setMsgKey(yakworks.i18n.MsgKey)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String getDetail()>",
    "<gorm.tools.problem.ValidationProblem: void setPayload(java.lang.Object)>",
    "<gorm.tools.repository.errors.RepoExceptionSupport: java.lang.RuntimeException translateException(java.lang.RuntimeException,java.lang.Object)>"
  ],
  "7.0.8-v.38": [
    "<gorm.tools.repository.RepoMessage: java.lang.String propName(java.lang.String)>",
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: gorm.tools.repository.bulk.BulkableResults doBulk(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.repository.bulk.BulkableArgs,boolean)>",
    "<gorm.tools.beans.MultiFormatDateConverter: java.lang.Object convert(java.lang.Object)>",
    "<gorm.tools.beans.EntityMap: void <init>(java.lang.Object)>",
    "<gorm.tools.repository.events.RepositoryEventType: void <init>(java.lang.String,int,java.lang.Class)>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Object parseBasicType(java.lang.String,java.lang.Class)>",
    "<gorm.tools.beans.EntityMapService: java.lang.String toJson(java.util.List,java.util.List)>",
    "<gorm.tools.async.ParallelTools$Trait$Helper: groovy.lang.Closure sliceClosure(gorm.tools.async.ParallelTools,org.grails.datastore.mapping.core.Datastore,groovy.lang.Closure)>",
    "<gorm.tools.repository.model.AbstractCrossRefRepo: java.lang.Object createOrRemove(gorm.tools.model.Persistable,java.util.Map)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity findPersistentEntity(java.lang.String)>",
    "<gorm.tools.idgen.JdbcIdGenerator: long updateIncrement(java.lang.String,long)>",
    "<gorm.tools.repository.GormRepo$Trait$Helper: java.lang.Object findWithData(gorm.tools.repository.GormRepo,java.util.Map,boolean)>",
    "<gorm.tools.beans.BeanPathTools: grails.web.servlet.mvc.GrailsParameterMap flattenMap(javax.servlet.http.HttpServletRequest,java.util.Map)>",
    "<gorm.tools.repository.validation.ApiConstraints: java.util.Map collectContraints()>",
    "<gorm.tools.mango.MangoBuilder: java.util.List getQSearchFields(java.lang.Class)>",
    "<gorm.tools.beans.EntityMapService: java.lang.String toJson(java.lang.Object,java.util.List)>",
    "<gorm.tools.repository.artefact.RepositoryArtefactHandler: java.lang.String getRepoBeanName(java.lang.Class)>",
    "<gorm.tools.repository.model.AbstractLinkedEntityRepo: void validateCreate(gorm.tools.model.Persistable,gorm.tools.model.Persistable)>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Class getDomainClassType(java.lang.Object,java.lang.String)>",
    "<gorm.tools.idgen.PooledIdGenerator: java.util.concurrent.atomic.AtomicReference findOrCreate(java.lang.String)>"
  ],
  "7.0.8-v.39": [
    "<gorm.tools.repository.RepoMessage: java.lang.String propName(java.lang.String)>",
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: gorm.tools.repository.bulk.BulkableResults doBulk(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.repository.bulk.BulkableArgs,boolean)>",
    "<gorm.tools.beans.MultiFormatDateConverter: java.lang.Object convert(java.lang.Object)>",
    "<gorm.tools.beans.EntityMap: void <init>(java.lang.Object)>",
    "<gorm.tools.repository.events.RepositoryEventType: void <init>(java.lang.String,int,java.lang.Class)>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Object parseBasicType(java.lang.String,java.lang.Class)>",
    "<gorm.tools.beans.EntityMapService: java.lang.String toJson(java.util.List,java.util.List)>",
    "<gorm.tools.async.ParallelTools$Trait$Helper: groovy.lang.Closure sliceClosure(gorm.tools.async.ParallelTools,org.grails.datastore.mapping.core.Datastore,groovy.lang.Closure)>",
    "<gorm.tools.repository.model.AbstractCrossRefRepo: java.lang.Object createOrRemove(gorm.tools.model.Persistable,java.util.Map)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity findPersistentEntity(java.lang.String)>",
    "<gorm.tools.idgen.JdbcIdGenerator: long updateIncrement(java.lang.String,long)>",
    "<gorm.tools.repository.GormRepo$Trait$Helper: java.lang.Object findWithData(gorm.tools.repository.GormRepo,java.util.Map,boolean)>",
    "<gorm.tools.beans.BeanPathTools: grails.web.servlet.mvc.GrailsParameterMap flattenMap(javax.servlet.http.HttpServletRequest,java.util.Map)>",
    "<gorm.tools.repository.validation.ApiConstraints: java.util.Map collectContraints()>",
    "<gorm.tools.mango.MangoBuilder: java.util.List getQSearchFields(java.lang.Class)>",
    "<gorm.tools.beans.EntityMapService: java.lang.String toJson(java.lang.Object,java.util.List)>",
    "<gorm.tools.repository.artefact.RepositoryArtefactHandler: java.lang.String getRepoBeanName(java.lang.Class)>",
    "<gorm.tools.repository.model.AbstractLinkedEntityRepo: void validateCreate(gorm.tools.model.Persistable,gorm.tools.model.Persistable)>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Class getDomainClassType(java.lang.Object,java.lang.String)>",
    "<gorm.tools.idgen.PooledIdGenerator: java.util.concurrent.atomic.AtomicReference findOrCreate(java.lang.String)>"
  ],
  "7.0.8-v.67": [
    "<gorm.tools.problem.ValidationProblem: void <init>(java.lang.String)>",
    "<gorm.tools.repository.RepoUtil: void checkFound(java.lang.Object,java.io.Serializable,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String yakworks_problem_ProblemTraittrait$super$toString()>",
    "<gorm.tools.problem.ValidationProblem: void setViolations(java.util.List)>",
    "<gorm.tools.repository.events.RepositoryEventType: void <init>(java.lang.String,int,java.lang.Class)>",
    "<gorm.tools.mango.api.QueryArgs: gorm.tools.mango.api.QueryArgs build(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Object getPayload()>",
    "<gorm.tools.problem.ValidationProblem: java.util.List getViolations()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsgKey()>",
    "<gorm.tools.metamap.MetaMapIncludes: java.lang.String getShortClassName()>",
    "<gorm.tools.api.IncludesConfig: java.util.Map getClassStaticIncludes(java.lang.Class)>",
    "<gorm.tools.repository.PersistArgs: java.util.Map asMap()>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Object parseBasicType(java.lang.String,java.lang.Class)>",
    "<gorm.tools.async.ParallelTools$Trait$Helper: groovy.lang.Closure sliceClosure(gorm.tools.async.ParallelTools,org.grails.datastore.mapping.core.Datastore,groovy.lang.Closure)>",
    "<gorm.tools.problem.ValidationProblem: void yakworks_problem_ProblemTraittrait$super$setStatus(yakworks.api.ApiStatus)>",
    "<gorm.tools.problem.ValidationProblem: void setCause(java.lang.Throwable)>",
    "<gorm.tools.validation.Rejector: void withError(java.lang.String,java.util.List,java.util.Map,java.lang.String)>",
    "<gorm.tools.utils.GormUtils: java.util.List listToIdMap(java.util.List,java.lang.String)>",
    "<gorm.tools.mango.MangoDetachedCriteria: void <init>(java.lang.Class,java.lang.String)>",
    "<gorm.tools.metamap.MetaMap: void <init>(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>()>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Throwable getCause()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.api.ApiStatus yakworks_problem_ProblemTraittrait$super$getStatus()>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String toString()>",
    "<gorm.tools.repository.model.AbstractCrossRefRepo: java.lang.Object createOrRemove(gorm.tools.model.Persistable,java.util.Map)>",
    "<gorm.tools.utils.GormUtils: java.util.List collectLongIds(java.util.List,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setOk(java.lang.Boolean)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>(java.lang.Throwable)>",
    "<gorm.tools.problem.ProblemHandler: java.util.List transateErrorsToViolations(org.springframework.validation.Errors)>",
    "<gorm.tools.problem.ValidationProblem$Exception: java.lang.String getMessage()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem addErrors(java.util.List)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleException(java.lang.Throwable,java.lang.String)>",
    "<gorm.tools.validation.Rejector: void withError(java.lang.String,gorm.tools.validation.ValidationCode,java.util.Map,java.lang.String)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity findPersistentEntity(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Boolean yakworks_problem_ProblemTraittrait$super$getOk()>",
    "<gorm.tools.metamap.MetaMapEntityService: java.lang.String toJson(java.util.List,java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: void <init>()>",
    "<gorm.tools.metamap.MetaMapIncludes: java.lang.String getRootClassPropName()>",
    "<gorm.tools.repository.GormRepo$Trait$Helper: java.lang.Object findWithData(gorm.tools.repository.GormRepo,java.util.Map,boolean)>",
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: yakworks.api.ApiResults doBulk(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.job.SyncJobContext,boolean)>",
    "<gorm.tools.idgen.JdbcIdGenerator: long updateIncrement(java.lang.String,long)>",
    "<gorm.tools.metamap.MetaMapList: java.lang.Object clone()>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity getPersistentEntity(org.grails.datastore.gorm.GormEntity)>",
    "<gorm.tools.job.SyncJobContext: java.lang.Long writePayloadFile(java.util.Collection)>",
    "<gorm.tools.metamap.MetaMapEntityService: java.lang.String toJson(java.lang.Object,java.util.List,java.util.List)>",
    "<gorm.tools.metamap.MetaMapIncludesBuilder: boolean propertyExists(java.lang.String)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleUnexpected(java.lang.Throwable)>",
    "<gorm.tools.job.SyncJobContext: void appendDataResults(yakworks.api.ApiResults)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsg()>",
    "<gorm.tools.repository.artefact.RepositoryArtefactHandler: java.lang.String getRepoBeanName(java.lang.Class)>",
    "<gorm.tools.repository.RepoUtil: void checkCreateData(java.util.Map,gorm.tools.repository.PersistArgs,java.lang.Class)>",
    "<gorm.tools.repository.model.AbstractLinkedEntityRepo: void validateCreate(gorm.tools.model.Persistable,gorm.tools.model.Persistable)>",
    "<gorm.tools.problem.ValidationProblem: java.net.URI getType()>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobContext createJob()>",
    "<gorm.tools.problem.ValidationProblem: void setMsg(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: java.util.List transformResults(yakworks.api.ApiResults)>",
    "<gorm.tools.validation.ApiConstraints: java.util.Map collectContraints()>",
    "<gorm.tools.repository.RepoUtil: void checkData(java.util.Map,java.lang.Class)>",
    "<gorm.tools.metamap.MetaMapIncludesBuilder: gorm.tools.metamap.MetaMapIncludes buildNested(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.problem.ProblemException yakworks_problem_data_DataProblemTraittrait$super$toException()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem cause(java.lang.Throwable)>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Class getDomainClassType(java.lang.Object,java.lang.String)>",
    "<gorm.tools.metamap.MetaMap: java.lang.Object clone()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem entity(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String getDetail()>",
    "<gorm.tools.problem.ValidationProblem: void setDetail(java.lang.String)>",
    "<gorm.tools.idgen.PooledIdGenerator: java.util.concurrent.atomic.AtomicReference findOrCreate(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setMsgKey(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobEntity finishJob(java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: void setType(java.net.URI)>",
    "<gorm.tools.problem.ValidationProblem: void setPayload(java.lang.Object)>",
    "<gorm.tools.metamap.MetaMapList: void setTotalCount(int)>",
    "<gorm.tools.repository.errors.RepoExceptionSupport: java.lang.RuntimeException translateException(java.lang.RuntimeException,java.lang.Object)>"
  ],
  "7.0.8-v.73": [
    "<gorm.tools.problem.ValidationProblem: void <init>(java.lang.String)>",
    "<gorm.tools.repository.RepoUtil: void checkFound(java.lang.Object,java.io.Serializable,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String yakworks_problem_ProblemTraittrait$super$toString()>",
    "<gorm.tools.problem.ValidationProblem: void setViolations(java.util.List)>",
    "<gorm.tools.repository.events.RepositoryEventType: void <init>(java.lang.String,int,java.lang.Class)>",
    "<gorm.tools.mango.api.QueryArgs: gorm.tools.mango.api.QueryArgs build(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Object getPayload()>",
    "<gorm.tools.problem.ValidationProblem: java.util.List getViolations()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsgKey()>",
    "<gorm.tools.metamap.MetaMapIncludes: java.lang.String getShortClassName()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem cause(java.lang.Throwable)>",
    "<gorm.tools.api.IncludesConfig: java.util.Map getClassStaticIncludes(java.lang.Class)>",
    "<gorm.tools.repository.PersistArgs: java.util.Map asMap()>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Object parseBasicType(java.lang.String,java.lang.Class)>",
    "<gorm.tools.async.ParallelTools$Trait$Helper: groovy.lang.Closure sliceClosure(gorm.tools.async.ParallelTools,org.grails.datastore.mapping.core.Datastore,groovy.lang.Closure)>",
    "<gorm.tools.problem.ValidationProblem: void yakworks_problem_ProblemTraittrait$super$setStatus(yakworks.api.ApiStatus)>",
    "<gorm.tools.problem.ValidationProblem: void setCause(java.lang.Throwable)>",
    "<gorm.tools.validation.Rejector: void withError(java.lang.String,java.util.List,java.util.Map,java.lang.String)>",
    "<gorm.tools.utils.GormUtils: java.util.List listToIdMap(java.util.List,java.lang.String)>",
    "<gorm.tools.mango.MangoDetachedCriteria: void <init>(java.lang.Class,java.lang.String)>",
    "<gorm.tools.metamap.MetaMap: void <init>(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>()>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Throwable getCause()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.api.ApiStatus yakworks_problem_ProblemTraittrait$super$getStatus()>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String toString()>",
    "<gorm.tools.repository.model.AbstractCrossRefRepo: java.lang.Object createOrRemove(gorm.tools.model.Persistable,java.util.Map)>",
    "<gorm.tools.utils.GormUtils: java.util.List collectLongIds(java.util.List,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setOk(java.lang.Boolean)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>(java.lang.Throwable)>",
    "<gorm.tools.problem.ProblemHandler: java.util.List transateErrorsToViolations(org.springframework.validation.Errors)>",
    "<gorm.tools.problem.ValidationProblem$Exception: java.lang.String getMessage()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem addErrors(java.util.List)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleException(java.lang.Throwable,java.lang.String)>",
    "<gorm.tools.validation.Rejector: void withError(java.lang.String,gorm.tools.validation.ValidationCode,java.util.Map,java.lang.String)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity findPersistentEntity(java.lang.String)>",
    "<gorm.tools.repository.model.AbstractCrossRefRepo: java.util.List add(gorm.tools.model.Persistable,java.util.List)>",
    "<gorm.tools.metamap.MetaMapEntityService: java.lang.String toJson(java.util.List,java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: void <init>()>",
    "<gorm.tools.metamap.MetaMapIncludes: java.lang.String getRootClassPropName()>",
    "<gorm.tools.repository.GormRepo$Trait$Helper: java.lang.Object findWithData(gorm.tools.repository.GormRepo,java.util.Map,boolean)>",
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: yakworks.api.ApiResults doBulk(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.job.SyncJobContext,boolean)>",
    "<gorm.tools.idgen.JdbcIdGenerator: long updateIncrement(java.lang.String,long)>",
    "<gorm.tools.metamap.MetaMapList: java.lang.Object clone()>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity getPersistentEntity(org.grails.datastore.gorm.GormEntity)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Boolean yakworks_problem_ProblemTraittrait$super$getOk()>",
    "<gorm.tools.job.SyncJobContext: java.lang.Long writePayloadFile(java.util.Collection)>",
    "<gorm.tools.metamap.MetaMapEntityService: java.lang.String toJson(java.lang.Object,java.util.List,java.util.List)>",
    "<gorm.tools.metamap.MetaMapIncludesBuilder: boolean propertyExists(java.lang.String)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleUnexpected(java.lang.Throwable)>",
    "<gorm.tools.job.SyncJobContext: void appendDataResults(yakworks.api.ApiResults)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsg()>",
    "<gorm.tools.repository.artefact.RepositoryArtefactHandler: java.lang.String getRepoBeanName(java.lang.Class)>",
    "<gorm.tools.repository.RepoUtil: void checkCreateData(java.util.Map,gorm.tools.repository.PersistArgs,java.lang.Class)>",
    "<gorm.tools.repository.model.AbstractLinkedEntityRepo: void validateCreate(gorm.tools.model.Persistable,gorm.tools.model.Persistable)>",
    "<gorm.tools.problem.ValidationProblem: java.net.URI getType()>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobContext createJob()>",
    "<gorm.tools.problem.ValidationProblem: void setMsg(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: java.util.List transformResults(yakworks.api.ApiResults)>",
    "<gorm.tools.validation.ApiConstraints: java.util.Map collectContraints()>",
    "<gorm.tools.repository.RepoUtil: void checkData(java.util.Map,java.lang.Class)>",
    "<gorm.tools.metamap.MetaMapIncludesBuilder: gorm.tools.metamap.MetaMapIncludes buildNested(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.problem.ProblemException yakworks_problem_data_DataProblemTraittrait$super$toException()>",
    "<gorm.tools.job.SyncJobFinishedEvent: gorm.tools.job.SyncJobFinishedEvent of(gorm.tools.job.SyncJobContext)>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Class getDomainClassType(java.lang.Object,java.lang.String)>",
    "<gorm.tools.metamap.MetaMap: java.lang.Object clone()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem entity(java.lang.Object)>",
    "<gorm.tools.job.SyncJobStartEvent: gorm.tools.job.SyncJobStartEvent of(gorm.tools.job.SyncJobContext)>",
    "<gorm.tools.problem.ValidationProblem: void setDetail(java.lang.String)>",
    "<gorm.tools.idgen.PooledIdGenerator: java.util.concurrent.atomic.AtomicReference findOrCreate(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setMsgKey(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobEntity finishJob(java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String getDetail()>",
    "<gorm.tools.problem.ValidationProblem: void setPayload(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem: void setType(java.net.URI)>",
    "<gorm.tools.metamap.MetaMapList: void setTotalCount(int)>",
    "<gorm.tools.repository.errors.RepoExceptionSupport: java.lang.RuntimeException translateException(java.lang.RuntimeException,java.lang.Object)>"
  ],
  "7.0.8-v.45": [
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: yakworks.api.ApiResults doBulkParallel(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.repository.bulk.BulkableArgs)>",
    "<gorm.tools.problem.ValidationProblem: void <init>(java.lang.String)>",
    "<gorm.tools.repository.RepoUtil: void checkFound(java.lang.Object,java.io.Serializable,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String yakworks_problem_ProblemTraittrait$super$toString()>",
    "<gorm.tools.problem.ValidationProblem: void setViolations(java.util.List)>",
    "<gorm.tools.repository.RepoUtil: void checkCreateData(java.util.Map,java.util.Map,java.lang.Class)>",
    "<gorm.tools.repository.events.RepositoryEventType: void <init>(java.lang.String,int,java.lang.Class)>",
    "<gorm.tools.mango.api.QueryArgs: gorm.tools.mango.api.QueryArgs build(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Object getPayload()>",
    "<gorm.tools.problem.ValidationProblem: java.util.List getViolations()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsgKey()>",
    "<gorm.tools.api.IncludesConfig: java.util.Map getClassStaticIncludes(java.lang.Class)>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Object parseBasicType(java.lang.String,java.lang.Class)>",
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: yakworks.api.ApiResults doBulk(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.repository.bulk.BulkableArgs,boolean)>",
    "<gorm.tools.async.ParallelTools$Trait$Helper: groovy.lang.Closure sliceClosure(gorm.tools.async.ParallelTools,org.grails.datastore.mapping.core.Datastore,groovy.lang.Closure)>",
    "<gorm.tools.problem.ValidationProblem: void yakworks_problem_ProblemTraittrait$super$setStatus(yakworks.api.ApiStatus)>",
    "<gorm.tools.problem.ValidationProblem: void setCause(java.lang.Throwable)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String toString()>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>(java.lang.Throwable)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Throwable getCause()>",
    "<gorm.tools.api.IncludesConfig: java.util.Map $_cache_getIncludes(java.lang.String,java.lang.String,java.lang.Class,java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>()>",
    "<gorm.tools.repository.model.AbstractCrossRefRepo: java.lang.Object createOrRemove(gorm.tools.model.Persistable,java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.api.ApiStatus yakworks_problem_ProblemTraittrait$super$getStatus()>",
    "<gorm.tools.problem.ValidationProblem: void setOk(java.lang.Boolean)>",
    "<gorm.tools.problem.ProblemHandler: java.util.List transateErrorsToViolations(org.springframework.validation.Errors)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleException(java.lang.Throwable,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem addErrors(java.util.List)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity findPersistentEntity(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Boolean yakworks_problem_ProblemTraittrait$super$getOk()>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity getPersistentEntity(org.grails.datastore.gorm.GormEntity)>",
    "<gorm.tools.problem.ValidationProblem: void <init>()>",
    "<gorm.tools.repository.GormRepo$Trait$Helper: java.lang.Object findWithData(gorm.tools.repository.GormRepo,java.util.Map,boolean)>",
    "<gorm.tools.idgen.JdbcIdGenerator: long updateIncrement(java.lang.String,long)>",
    "<gorm.tools.beans.map.MetaMap: void <init>(java.lang.Object)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleUnexpected(java.lang.Throwable)>",
    "<gorm.tools.beans.map.MetaMapEntityService: java.lang.String toJson(java.lang.Object,java.util.List)>",
    "<gorm.tools.beans.map.EntityIncludesBuilder: gorm.tools.beans.map.MetaMapIncludes buildNested(java.util.Map)>",
    "<gorm.tools.repository.validation.ApiConstraints: java.util.Map collectContraints()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsg()>",
    "<gorm.tools.beans.map.EntityIncludesBuilder: boolean propertyExists(java.lang.String)>",
    "<gorm.tools.repository.artefact.RepositoryArtefactHandler: java.lang.String getRepoBeanName(java.lang.Class)>",
    "<gorm.tools.repository.model.AbstractLinkedEntityRepo: void validateCreate(gorm.tools.model.Persistable,gorm.tools.model.Persistable)>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem cause(java.lang.Throwable)>",
    "<gorm.tools.problem.ValidationProblem: java.net.URI getType()>",
    "<gorm.tools.problem.ValidationProblem: void setMsg(yakworks.i18n.MsgKey)>",
    "<gorm.tools.beans.map.MetaMapEntityService: java.lang.String toJson(java.util.List,java.util.List)>",
    "<gorm.tools.repository.RepoUtil: void checkData(java.util.Map,java.lang.Class)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.problem.ProblemException yakworks_problem_data_DataProblemTraittrait$super$toException()>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Class getDomainClassType(java.lang.Object,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem entity(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem: void setType(java.net.URI)>",
    "<gorm.tools.problem.ValidationProblem: void setDetail(java.lang.String)>",
    "<gorm.tools.idgen.PooledIdGenerator: java.util.concurrent.atomic.AtomicReference findOrCreate(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setMsgKey(yakworks.i18n.MsgKey)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String getDetail()>",
    "<gorm.tools.problem.ValidationProblem: void setPayload(java.lang.Object)>",
    "<gorm.tools.repository.errors.RepoExceptionSupport: java.lang.RuntimeException translateException(java.lang.RuntimeException,java.lang.Object)>"
  ],
  "7.0.8-v.64": [
    "<gorm.tools.problem.ValidationProblem: void <init>(java.lang.String)>",
    "<gorm.tools.repository.RepoUtil: void checkFound(java.lang.Object,java.io.Serializable,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String yakworks_problem_ProblemTraittrait$super$toString()>",
    "<gorm.tools.problem.ValidationProblem: void setViolations(java.util.List)>",
    "<gorm.tools.repository.events.RepositoryEventType: void <init>(java.lang.String,int,java.lang.Class)>",
    "<gorm.tools.mango.api.QueryArgs: gorm.tools.mango.api.QueryArgs build(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Object getPayload()>",
    "<gorm.tools.problem.ValidationProblem: java.util.List getViolations()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsgKey()>",
    "<gorm.tools.metamap.MetaMapIncludes: java.lang.String getShortClassName()>",
    "<gorm.tools.api.IncludesConfig: java.util.Map getClassStaticIncludes(java.lang.Class)>",
    "<gorm.tools.repository.PersistArgs: java.util.Map asMap()>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Object parseBasicType(java.lang.String,java.lang.Class)>",
    "<gorm.tools.async.ParallelTools$Trait$Helper: groovy.lang.Closure sliceClosure(gorm.tools.async.ParallelTools,org.grails.datastore.mapping.core.Datastore,groovy.lang.Closure)>",
    "<gorm.tools.problem.ValidationProblem: void yakworks_problem_ProblemTraittrait$super$setStatus(yakworks.api.ApiStatus)>",
    "<gorm.tools.problem.ValidationProblem: void setCause(java.lang.Throwable)>",
    "<gorm.tools.validation.Rejector: void withError(java.lang.String,java.util.List,java.util.Map,java.lang.String)>",
    "<gorm.tools.utils.GormUtils: java.util.List listToIdMap(java.util.List,java.lang.String)>",
    "<gorm.tools.mango.MangoDetachedCriteria: void <init>(java.lang.Class,java.lang.String)>",
    "<gorm.tools.metamap.MetaMap: void <init>(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>()>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Throwable getCause()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.api.ApiStatus yakworks_problem_ProblemTraittrait$super$getStatus()>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String toString()>",
    "<gorm.tools.repository.model.AbstractCrossRefRepo: java.lang.Object createOrRemove(gorm.tools.model.Persistable,java.util.Map)>",
    "<gorm.tools.utils.GormUtils: java.util.List collectLongIds(java.util.List,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setOk(java.lang.Boolean)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>(java.lang.Throwable)>",
    "<gorm.tools.problem.ProblemHandler: java.util.List transateErrorsToViolations(org.springframework.validation.Errors)>",
    "<gorm.tools.problem.ValidationProblem$Exception: java.lang.String getMessage()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem addErrors(java.util.List)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleException(java.lang.Throwable,java.lang.String)>",
    "<gorm.tools.validation.Rejector: void withError(java.lang.String,gorm.tools.validation.ValidationCode,java.util.Map,java.lang.String)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity findPersistentEntity(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Boolean yakworks_problem_ProblemTraittrait$super$getOk()>",
    "<gorm.tools.metamap.MetaMapEntityService: java.lang.String toJson(java.util.List,java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: void <init>()>",
    "<gorm.tools.metamap.MetaMapIncludes: java.lang.String getRootClassPropName()>",
    "<gorm.tools.repository.GormRepo$Trait$Helper: java.lang.Object findWithData(gorm.tools.repository.GormRepo,java.util.Map,boolean)>",
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: yakworks.api.ApiResults doBulk(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.job.SyncJobContext,boolean)>",
    "<gorm.tools.idgen.JdbcIdGenerator: long updateIncrement(java.lang.String,long)>",
    "<gorm.tools.metamap.MetaMapList: java.lang.Object clone()>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity getPersistentEntity(org.grails.datastore.gorm.GormEntity)>",
    "<gorm.tools.job.SyncJobContext: java.lang.Long writePayloadFile(java.util.Collection)>",
    "<gorm.tools.metamap.MetaMapEntityService: java.lang.String toJson(java.lang.Object,java.util.List,java.util.List)>",
    "<gorm.tools.metamap.MetaMapIncludesBuilder: boolean propertyExists(java.lang.String)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleUnexpected(java.lang.Throwable)>",
    "<gorm.tools.job.SyncJobContext: void appendDataResults(yakworks.api.ApiResults)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsg()>",
    "<gorm.tools.repository.artefact.RepositoryArtefactHandler: java.lang.String getRepoBeanName(java.lang.Class)>",
    "<gorm.tools.repository.RepoUtil: void checkCreateData(java.util.Map,gorm.tools.repository.PersistArgs,java.lang.Class)>",
    "<gorm.tools.repository.model.AbstractLinkedEntityRepo: void validateCreate(gorm.tools.model.Persistable,gorm.tools.model.Persistable)>",
    "<gorm.tools.problem.ValidationProblem: java.net.URI getType()>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobContext createJob()>",
    "<gorm.tools.problem.ValidationProblem: void setMsg(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: java.util.List transformResults(yakworks.api.ApiResults)>",
    "<gorm.tools.validation.ApiConstraints: java.util.Map collectContraints()>",
    "<gorm.tools.repository.RepoUtil: void checkData(java.util.Map,java.lang.Class)>",
    "<gorm.tools.metamap.MetaMapIncludesBuilder: gorm.tools.metamap.MetaMapIncludes buildNested(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.problem.ProblemException yakworks_problem_data_DataProblemTraittrait$super$toException()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem cause(java.lang.Throwable)>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Class getDomainClassType(java.lang.Object,java.lang.String)>",
    "<gorm.tools.metamap.MetaMap: java.lang.Object clone()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem entity(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String getDetail()>",
    "<gorm.tools.problem.ValidationProblem: void setDetail(java.lang.String)>",
    "<gorm.tools.idgen.PooledIdGenerator: java.util.concurrent.atomic.AtomicReference findOrCreate(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setMsgKey(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobEntity finishJob(java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: void setType(java.net.URI)>",
    "<gorm.tools.problem.ValidationProblem: void setPayload(java.lang.Object)>",
    "<gorm.tools.metamap.MetaMapList: void setTotalCount(int)>",
    "<gorm.tools.repository.errors.RepoExceptionSupport: java.lang.RuntimeException translateException(java.lang.RuntimeException,java.lang.Object)>"
  ],
  "7.0.8-v.58": [
    "<gorm.tools.problem.ValidationProblem: void <init>(java.lang.String)>",
    "<gorm.tools.repository.RepoUtil: void checkFound(java.lang.Object,java.io.Serializable,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String yakworks_problem_ProblemTraittrait$super$toString()>",
    "<gorm.tools.problem.ValidationProblem: void setViolations(java.util.List)>",
    "<gorm.tools.repository.events.RepositoryEventType: void <init>(java.lang.String,int,java.lang.Class)>",
    "<gorm.tools.mango.api.QueryArgs: gorm.tools.mango.api.QueryArgs build(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Object getPayload()>",
    "<gorm.tools.problem.ValidationProblem: java.util.List getViolations()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsgKey()>",
    "<gorm.tools.api.IncludesConfig: java.util.Map getClassStaticIncludes(java.lang.Class)>",
    "<gorm.tools.repository.PersistArgs: java.util.Map asMap()>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Object parseBasicType(java.lang.String,java.lang.Class)>",
    "<gorm.tools.async.ParallelTools$Trait$Helper: groovy.lang.Closure sliceClosure(gorm.tools.async.ParallelTools,org.grails.datastore.mapping.core.Datastore,groovy.lang.Closure)>",
    "<gorm.tools.problem.ValidationProblem: void yakworks_problem_ProblemTraittrait$super$setStatus(yakworks.api.ApiStatus)>",
    "<gorm.tools.problem.ValidationProblem: void setCause(java.lang.Throwable)>",
    "<gorm.tools.validation.Rejector: void withError(java.lang.String,java.util.List,java.util.Map,java.lang.String)>",
    "<gorm.tools.utils.GormUtils: java.util.List listToIdMap(java.util.List,java.lang.String)>",
    "<gorm.tools.mango.MangoDetachedCriteria: void <init>(java.lang.Class,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String toString()>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>()>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Throwable getCause()>",
    "<gorm.tools.api.IncludesConfig: java.util.Map $_cache_getIncludes(java.lang.String,java.lang.String,java.lang.Class,java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.api.ApiStatus yakworks_problem_ProblemTraittrait$super$getStatus()>",
    "<gorm.tools.repository.model.AbstractCrossRefRepo: java.lang.Object createOrRemove(gorm.tools.model.Persistable,java.util.Map)>",
    "<gorm.tools.utils.GormUtils: java.util.List collectLongIds(java.util.List,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setOk(java.lang.Boolean)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>(java.lang.Throwable)>",
    "<gorm.tools.problem.ProblemHandler: java.util.List transateErrorsToViolations(org.springframework.validation.Errors)>",
    "<gorm.tools.problem.ValidationProblem$Exception: java.lang.String getMessage()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem addErrors(java.util.List)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleException(java.lang.Throwable,java.lang.String)>",
    "<gorm.tools.validation.Rejector: void withError(java.lang.String,gorm.tools.validation.ValidationCode,java.util.Map,java.lang.String)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity findPersistentEntity(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Boolean yakworks_problem_ProblemTraittrait$super$getOk()>",
    "<gorm.tools.problem.ValidationProblem: void <init>()>",
    "<gorm.tools.idgen.JdbcIdGenerator: long updateIncrement(java.lang.String,long)>",
    "<gorm.tools.repository.GormRepo$Trait$Helper: java.lang.Object findWithData(gorm.tools.repository.GormRepo,java.util.Map,boolean)>",
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: yakworks.api.ApiResults doBulk(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.job.SyncJobContext,boolean)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity getPersistentEntity(org.grails.datastore.gorm.GormEntity)>",
    "<gorm.tools.beans.map.MetaMapEntityService: java.lang.String toJson(java.lang.Object,java.util.List,java.util.List)>",
    "<gorm.tools.beans.map.MetaMapList: java.lang.Object clone()>",
    "<gorm.tools.job.SyncJobContext: java.lang.Long writePayloadFile(java.util.Collection)>",
    "<gorm.tools.beans.map.MetaMap: void <init>(java.lang.Object)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleUnexpected(java.lang.Throwable)>",
    "<gorm.tools.beans.map.MetaMap: java.lang.Object clone()>",
    "<gorm.tools.beans.map.EntityIncludesBuilder: gorm.tools.beans.map.MetaMapIncludes buildNested(java.util.Map)>",
    "<gorm.tools.job.SyncJobContext: void appendDataResults(yakworks.api.ApiResults)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsg()>",
    "<gorm.tools.beans.map.EntityIncludesBuilder: boolean propertyExists(java.lang.String)>",
    "<gorm.tools.repository.artefact.RepositoryArtefactHandler: java.lang.String getRepoBeanName(java.lang.Class)>",
    "<gorm.tools.repository.RepoUtil: void checkCreateData(java.util.Map,gorm.tools.repository.PersistArgs,java.lang.Class)>",
    "<gorm.tools.repository.model.AbstractLinkedEntityRepo: void validateCreate(gorm.tools.model.Persistable,gorm.tools.model.Persistable)>",
    "<gorm.tools.problem.ValidationProblem: java.net.URI getType()>",
    "<gorm.tools.problem.ValidationProblem: void setMsg(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobContext createJob()>",
    "<gorm.tools.job.SyncJobContext: java.util.List transformResults(yakworks.api.ApiResults)>",
    "<gorm.tools.validation.ApiConstraints: java.util.Map collectContraints()>",
    "<gorm.tools.repository.RepoUtil: void checkData(java.util.Map,java.lang.Class)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.problem.ProblemException yakworks_problem_data_DataProblemTraittrait$super$toException()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem cause(java.lang.Throwable)>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Class getDomainClassType(java.lang.Object,java.lang.String)>",
    "<gorm.tools.beans.map.MetaMapEntityService: java.lang.String toJson(java.util.List,java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem entity(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String getDetail()>",
    "<gorm.tools.problem.ValidationProblem: void setDetail(java.lang.String)>",
    "<gorm.tools.idgen.PooledIdGenerator: java.util.concurrent.atomic.AtomicReference findOrCreate(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setMsgKey(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobEntity finishJob(java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: void setType(java.net.URI)>",
    "<gorm.tools.problem.ValidationProblem: void setPayload(java.lang.Object)>",
    "<gorm.tools.repository.errors.RepoExceptionSupport: java.lang.RuntimeException translateException(java.lang.RuntimeException,java.lang.Object)>"
  ],
  "7.0.8-v.52": [
    "<gorm.tools.problem.ValidationProblem: void <init>(java.lang.String)>",
    "<gorm.tools.repository.RepoUtil: void checkFound(java.lang.Object,java.io.Serializable,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String yakworks_problem_ProblemTraittrait$super$toString()>",
    "<gorm.tools.problem.ValidationProblem: void setViolations(java.util.List)>",
    "<gorm.tools.repository.events.RepositoryEventType: void <init>(java.lang.String,int,java.lang.Class)>",
    "<gorm.tools.mango.api.QueryArgs: gorm.tools.mango.api.QueryArgs build(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Object getPayload()>",
    "<gorm.tools.problem.ValidationProblem: java.util.List getViolations()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsgKey()>",
    "<gorm.tools.api.IncludesConfig: java.util.Map getClassStaticIncludes(java.lang.Class)>",
    "<gorm.tools.repository.PersistArgs: java.util.Map asMap()>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Object parseBasicType(java.lang.String,java.lang.Class)>",
    "<gorm.tools.async.ParallelTools$Trait$Helper: groovy.lang.Closure sliceClosure(gorm.tools.async.ParallelTools,org.grails.datastore.mapping.core.Datastore,groovy.lang.Closure)>",
    "<gorm.tools.problem.ValidationProblem: void yakworks_problem_ProblemTraittrait$super$setStatus(yakworks.api.ApiStatus)>",
    "<gorm.tools.problem.ValidationProblem: void setCause(java.lang.Throwable)>",
    "<gorm.tools.utils.GormUtils: java.util.List listToIdMap(java.util.List,java.lang.String)>",
    "<gorm.tools.mango.MangoDetachedCriteria: void <init>(java.lang.Class,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String toString()>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>()>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Throwable getCause()>",
    "<gorm.tools.api.IncludesConfig: java.util.Map $_cache_getIncludes(java.lang.String,java.lang.String,java.lang.Class,java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.api.ApiStatus yakworks_problem_ProblemTraittrait$super$getStatus()>",
    "<gorm.tools.repository.model.AbstractCrossRefRepo: java.lang.Object createOrRemove(gorm.tools.model.Persistable,java.util.Map)>",
    "<gorm.tools.utils.GormUtils: java.util.List collectLongIds(java.util.List,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setOk(java.lang.Boolean)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>(java.lang.Throwable)>",
    "<gorm.tools.problem.ProblemHandler: java.util.List transateErrorsToViolations(org.springframework.validation.Errors)>",
    "<gorm.tools.problem.ValidationProblem$Exception: java.lang.String getMessage()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem addErrors(java.util.List)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleException(java.lang.Throwable,java.lang.String)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity findPersistentEntity(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Boolean yakworks_problem_ProblemTraittrait$super$getOk()>",
    "<gorm.tools.problem.ValidationProblem: void <init>()>",
    "<gorm.tools.idgen.JdbcIdGenerator: long updateIncrement(java.lang.String,long)>",
    "<gorm.tools.repository.GormRepo$Trait$Helper: java.lang.Object findWithData(gorm.tools.repository.GormRepo,java.util.Map,boolean)>",
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: yakworks.api.ApiResults doBulk(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.job.SyncJobContext,boolean)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity getPersistentEntity(org.grails.datastore.gorm.GormEntity)>",
    "<gorm.tools.beans.map.MetaMapEntityService: java.lang.String toJson(java.lang.Object,java.util.List,java.util.List)>",
    "<gorm.tools.beans.map.MetaMapList: java.lang.Object clone()>",
    "<gorm.tools.job.SyncJobContext: java.lang.Long writePayloadFile(java.util.Collection)>",
    "<gorm.tools.beans.map.MetaMap: void <init>(java.lang.Object)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleUnexpected(java.lang.Throwable)>",
    "<gorm.tools.beans.map.MetaMap: java.lang.Object clone()>",
    "<gorm.tools.beans.map.EntityIncludesBuilder: gorm.tools.beans.map.MetaMapIncludes buildNested(java.util.Map)>",
    "<gorm.tools.job.SyncJobContext: void appendDataResults(yakworks.api.ApiResults)>",
    "<gorm.tools.repository.validation.ApiConstraints: java.util.Map collectContraints()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsg()>",
    "<gorm.tools.beans.map.EntityIncludesBuilder: boolean propertyExists(java.lang.String)>",
    "<gorm.tools.repository.artefact.RepositoryArtefactHandler: java.lang.String getRepoBeanName(java.lang.Class)>",
    "<gorm.tools.repository.RepoUtil: void checkCreateData(java.util.Map,gorm.tools.repository.PersistArgs,java.lang.Class)>",
    "<gorm.tools.repository.model.AbstractLinkedEntityRepo: void validateCreate(gorm.tools.model.Persistable,gorm.tools.model.Persistable)>",
    "<gorm.tools.problem.ValidationProblem: java.net.URI getType()>",
    "<gorm.tools.problem.ValidationProblem: void setMsg(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobContext createJob()>",
    "<gorm.tools.job.SyncJobContext: java.util.List transformResults(yakworks.api.ApiResults)>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem cause(java.lang.Throwable)>",
    "<gorm.tools.repository.RepoUtil: void checkData(java.util.Map,java.lang.Class)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.problem.ProblemException yakworks_problem_data_DataProblemTraittrait$super$toException()>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Class getDomainClassType(java.lang.Object,java.lang.String)>",
    "<gorm.tools.beans.map.MetaMapEntityService: java.lang.String toJson(java.util.List,java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem entity(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String getDetail()>",
    "<gorm.tools.problem.ValidationProblem: void setDetail(java.lang.String)>",
    "<gorm.tools.idgen.PooledIdGenerator: java.util.concurrent.atomic.AtomicReference findOrCreate(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setMsgKey(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobEntity finishJob(java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: void setType(java.net.URI)>",
    "<gorm.tools.problem.ValidationProblem: void setPayload(java.lang.Object)>",
    "<gorm.tools.repository.errors.RepoExceptionSupport: java.lang.RuntimeException translateException(java.lang.RuntimeException,java.lang.Object)>"
  ],
  "7.0.8-v.68": [
    "<gorm.tools.problem.ValidationProblem: void <init>(java.lang.String)>",
    "<gorm.tools.repository.RepoUtil: void checkFound(java.lang.Object,java.io.Serializable,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String yakworks_problem_ProblemTraittrait$super$toString()>",
    "<gorm.tools.problem.ValidationProblem: void setViolations(java.util.List)>",
    "<gorm.tools.repository.events.RepositoryEventType: void <init>(java.lang.String,int,java.lang.Class)>",
    "<gorm.tools.mango.api.QueryArgs: gorm.tools.mango.api.QueryArgs build(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Object getPayload()>",
    "<gorm.tools.problem.ValidationProblem: java.util.List getViolations()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsgKey()>",
    "<gorm.tools.metamap.MetaMapIncludes: java.lang.String getShortClassName()>",
    "<gorm.tools.api.IncludesConfig: java.util.Map getClassStaticIncludes(java.lang.Class)>",
    "<gorm.tools.repository.PersistArgs: java.util.Map asMap()>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Object parseBasicType(java.lang.String,java.lang.Class)>",
    "<gorm.tools.async.ParallelTools$Trait$Helper: groovy.lang.Closure sliceClosure(gorm.tools.async.ParallelTools,org.grails.datastore.mapping.core.Datastore,groovy.lang.Closure)>",
    "<gorm.tools.problem.ValidationProblem: void yakworks_problem_ProblemTraittrait$super$setStatus(yakworks.api.ApiStatus)>",
    "<gorm.tools.problem.ValidationProblem: void setCause(java.lang.Throwable)>",
    "<gorm.tools.validation.Rejector: void withError(java.lang.String,java.util.List,java.util.Map,java.lang.String)>",
    "<gorm.tools.utils.GormUtils: java.util.List listToIdMap(java.util.List,java.lang.String)>",
    "<gorm.tools.mango.MangoDetachedCriteria: void <init>(java.lang.Class,java.lang.String)>",
    "<gorm.tools.metamap.MetaMap: void <init>(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>()>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Throwable getCause()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.api.ApiStatus yakworks_problem_ProblemTraittrait$super$getStatus()>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String toString()>",
    "<gorm.tools.repository.model.AbstractCrossRefRepo: java.lang.Object createOrRemove(gorm.tools.model.Persistable,java.util.Map)>",
    "<gorm.tools.utils.GormUtils: java.util.List collectLongIds(java.util.List,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setOk(java.lang.Boolean)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>(java.lang.Throwable)>",
    "<gorm.tools.problem.ProblemHandler: java.util.List transateErrorsToViolations(org.springframework.validation.Errors)>",
    "<gorm.tools.problem.ValidationProblem$Exception: java.lang.String getMessage()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem addErrors(java.util.List)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleException(java.lang.Throwable,java.lang.String)>",
    "<gorm.tools.validation.Rejector: void withError(java.lang.String,gorm.tools.validation.ValidationCode,java.util.Map,java.lang.String)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity findPersistentEntity(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Boolean yakworks_problem_ProblemTraittrait$super$getOk()>",
    "<gorm.tools.metamap.MetaMapEntityService: java.lang.String toJson(java.util.List,java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: void <init>()>",
    "<gorm.tools.metamap.MetaMapIncludes: java.lang.String getRootClassPropName()>",
    "<gorm.tools.repository.GormRepo$Trait$Helper: java.lang.Object findWithData(gorm.tools.repository.GormRepo,java.util.Map,boolean)>",
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: yakworks.api.ApiResults doBulk(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.job.SyncJobContext,boolean)>",
    "<gorm.tools.idgen.JdbcIdGenerator: long updateIncrement(java.lang.String,long)>",
    "<gorm.tools.metamap.MetaMapList: java.lang.Object clone()>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity getPersistentEntity(org.grails.datastore.gorm.GormEntity)>",
    "<gorm.tools.job.SyncJobContext: java.lang.Long writePayloadFile(java.util.Collection)>",
    "<gorm.tools.metamap.MetaMapEntityService: java.lang.String toJson(java.lang.Object,java.util.List,java.util.List)>",
    "<gorm.tools.metamap.MetaMapIncludesBuilder: boolean propertyExists(java.lang.String)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleUnexpected(java.lang.Throwable)>",
    "<gorm.tools.job.SyncJobContext: void appendDataResults(yakworks.api.ApiResults)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsg()>",
    "<gorm.tools.repository.artefact.RepositoryArtefactHandler: java.lang.String getRepoBeanName(java.lang.Class)>",
    "<gorm.tools.repository.RepoUtil: void checkCreateData(java.util.Map,gorm.tools.repository.PersistArgs,java.lang.Class)>",
    "<gorm.tools.repository.model.AbstractLinkedEntityRepo: void validateCreate(gorm.tools.model.Persistable,gorm.tools.model.Persistable)>",
    "<gorm.tools.problem.ValidationProblem: java.net.URI getType()>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobContext createJob()>",
    "<gorm.tools.problem.ValidationProblem: void setMsg(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: java.util.List transformResults(yakworks.api.ApiResults)>",
    "<gorm.tools.validation.ApiConstraints: java.util.Map collectContraints()>",
    "<gorm.tools.repository.RepoUtil: void checkData(java.util.Map,java.lang.Class)>",
    "<gorm.tools.metamap.MetaMapIncludesBuilder: gorm.tools.metamap.MetaMapIncludes buildNested(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.problem.ProblemException yakworks_problem_data_DataProblemTraittrait$super$toException()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem cause(java.lang.Throwable)>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Class getDomainClassType(java.lang.Object,java.lang.String)>",
    "<gorm.tools.metamap.MetaMap: java.lang.Object clone()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem entity(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String getDetail()>",
    "<gorm.tools.problem.ValidationProblem: void setDetail(java.lang.String)>",
    "<gorm.tools.idgen.PooledIdGenerator: java.util.concurrent.atomic.AtomicReference findOrCreate(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setMsgKey(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobEntity finishJob(java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: void setType(java.net.URI)>",
    "<gorm.tools.problem.ValidationProblem: void setPayload(java.lang.Object)>",
    "<gorm.tools.metamap.MetaMapList: void setTotalCount(int)>",
    "<gorm.tools.repository.errors.RepoExceptionSupport: java.lang.RuntimeException translateException(java.lang.RuntimeException,java.lang.Object)>"
  ],
  "7.0.8-v.65": [
    "<gorm.tools.problem.ValidationProblem: void <init>(java.lang.String)>",
    "<gorm.tools.repository.RepoUtil: void checkFound(java.lang.Object,java.io.Serializable,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String yakworks_problem_ProblemTraittrait$super$toString()>",
    "<gorm.tools.problem.ValidationProblem: void setViolations(java.util.List)>",
    "<gorm.tools.repository.events.RepositoryEventType: void <init>(java.lang.String,int,java.lang.Class)>",
    "<gorm.tools.mango.api.QueryArgs: gorm.tools.mango.api.QueryArgs build(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Object getPayload()>",
    "<gorm.tools.problem.ValidationProblem: java.util.List getViolations()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsgKey()>",
    "<gorm.tools.metamap.MetaMapIncludes: java.lang.String getShortClassName()>",
    "<gorm.tools.api.IncludesConfig: java.util.Map getClassStaticIncludes(java.lang.Class)>",
    "<gorm.tools.repository.PersistArgs: java.util.Map asMap()>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Object parseBasicType(java.lang.String,java.lang.Class)>",
    "<gorm.tools.async.ParallelTools$Trait$Helper: groovy.lang.Closure sliceClosure(gorm.tools.async.ParallelTools,org.grails.datastore.mapping.core.Datastore,groovy.lang.Closure)>",
    "<gorm.tools.problem.ValidationProblem: void yakworks_problem_ProblemTraittrait$super$setStatus(yakworks.api.ApiStatus)>",
    "<gorm.tools.problem.ValidationProblem: void setCause(java.lang.Throwable)>",
    "<gorm.tools.validation.Rejector: void withError(java.lang.String,java.util.List,java.util.Map,java.lang.String)>",
    "<gorm.tools.utils.GormUtils: java.util.List listToIdMap(java.util.List,java.lang.String)>",
    "<gorm.tools.mango.MangoDetachedCriteria: void <init>(java.lang.Class,java.lang.String)>",
    "<gorm.tools.metamap.MetaMap: void <init>(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>()>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Throwable getCause()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.api.ApiStatus yakworks_problem_ProblemTraittrait$super$getStatus()>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String toString()>",
    "<gorm.tools.repository.model.AbstractCrossRefRepo: java.lang.Object createOrRemove(gorm.tools.model.Persistable,java.util.Map)>",
    "<gorm.tools.utils.GormUtils: java.util.List collectLongIds(java.util.List,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setOk(java.lang.Boolean)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>(java.lang.Throwable)>",
    "<gorm.tools.problem.ProblemHandler: java.util.List transateErrorsToViolations(org.springframework.validation.Errors)>",
    "<gorm.tools.problem.ValidationProblem$Exception: java.lang.String getMessage()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem addErrors(java.util.List)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleException(java.lang.Throwable,java.lang.String)>",
    "<gorm.tools.validation.Rejector: void withError(java.lang.String,gorm.tools.validation.ValidationCode,java.util.Map,java.lang.String)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity findPersistentEntity(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Boolean yakworks_problem_ProblemTraittrait$super$getOk()>",
    "<gorm.tools.metamap.MetaMapEntityService: java.lang.String toJson(java.util.List,java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: void <init>()>",
    "<gorm.tools.metamap.MetaMapIncludes: java.lang.String getRootClassPropName()>",
    "<gorm.tools.repository.GormRepo$Trait$Helper: java.lang.Object findWithData(gorm.tools.repository.GormRepo,java.util.Map,boolean)>",
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: yakworks.api.ApiResults doBulk(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.job.SyncJobContext,boolean)>",
    "<gorm.tools.idgen.JdbcIdGenerator: long updateIncrement(java.lang.String,long)>",
    "<gorm.tools.metamap.MetaMapList: java.lang.Object clone()>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity getPersistentEntity(org.grails.datastore.gorm.GormEntity)>",
    "<gorm.tools.job.SyncJobContext: java.lang.Long writePayloadFile(java.util.Collection)>",
    "<gorm.tools.metamap.MetaMapEntityService: java.lang.String toJson(java.lang.Object,java.util.List,java.util.List)>",
    "<gorm.tools.metamap.MetaMapIncludesBuilder: boolean propertyExists(java.lang.String)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleUnexpected(java.lang.Throwable)>",
    "<gorm.tools.job.SyncJobContext: void appendDataResults(yakworks.api.ApiResults)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsg()>",
    "<gorm.tools.repository.artefact.RepositoryArtefactHandler: java.lang.String getRepoBeanName(java.lang.Class)>",
    "<gorm.tools.repository.RepoUtil: void checkCreateData(java.util.Map,gorm.tools.repository.PersistArgs,java.lang.Class)>",
    "<gorm.tools.repository.model.AbstractLinkedEntityRepo: void validateCreate(gorm.tools.model.Persistable,gorm.tools.model.Persistable)>",
    "<gorm.tools.problem.ValidationProblem: java.net.URI getType()>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobContext createJob()>",
    "<gorm.tools.problem.ValidationProblem: void setMsg(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: java.util.List transformResults(yakworks.api.ApiResults)>",
    "<gorm.tools.validation.ApiConstraints: java.util.Map collectContraints()>",
    "<gorm.tools.repository.RepoUtil: void checkData(java.util.Map,java.lang.Class)>",
    "<gorm.tools.metamap.MetaMapIncludesBuilder: gorm.tools.metamap.MetaMapIncludes buildNested(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.problem.ProblemException yakworks_problem_data_DataProblemTraittrait$super$toException()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem cause(java.lang.Throwable)>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Class getDomainClassType(java.lang.Object,java.lang.String)>",
    "<gorm.tools.metamap.MetaMap: java.lang.Object clone()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem entity(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String getDetail()>",
    "<gorm.tools.problem.ValidationProblem: void setDetail(java.lang.String)>",
    "<gorm.tools.idgen.PooledIdGenerator: java.util.concurrent.atomic.AtomicReference findOrCreate(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setMsgKey(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobEntity finishJob(java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: void setType(java.net.URI)>",
    "<gorm.tools.problem.ValidationProblem: void setPayload(java.lang.Object)>",
    "<gorm.tools.metamap.MetaMapList: void setTotalCount(int)>",
    "<gorm.tools.repository.errors.RepoExceptionSupport: java.lang.RuntimeException translateException(java.lang.RuntimeException,java.lang.Object)>"
  ],
  "7.0.8-v.56": [
    "<gorm.tools.problem.ValidationProblem: void <init>(java.lang.String)>",
    "<gorm.tools.repository.RepoUtil: void checkFound(java.lang.Object,java.io.Serializable,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String yakworks_problem_ProblemTraittrait$super$toString()>",
    "<gorm.tools.problem.ValidationProblem: void setViolations(java.util.List)>",
    "<gorm.tools.repository.events.RepositoryEventType: void <init>(java.lang.String,int,java.lang.Class)>",
    "<gorm.tools.mango.api.QueryArgs: gorm.tools.mango.api.QueryArgs build(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Object getPayload()>",
    "<gorm.tools.problem.ValidationProblem: java.util.List getViolations()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsgKey()>",
    "<gorm.tools.api.IncludesConfig: java.util.Map getClassStaticIncludes(java.lang.Class)>",
    "<gorm.tools.repository.PersistArgs: java.util.Map asMap()>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Object parseBasicType(java.lang.String,java.lang.Class)>",
    "<gorm.tools.async.ParallelTools$Trait$Helper: groovy.lang.Closure sliceClosure(gorm.tools.async.ParallelTools,org.grails.datastore.mapping.core.Datastore,groovy.lang.Closure)>",
    "<gorm.tools.problem.ValidationProblem: void yakworks_problem_ProblemTraittrait$super$setStatus(yakworks.api.ApiStatus)>",
    "<gorm.tools.problem.ValidationProblem: void setCause(java.lang.Throwable)>",
    "<gorm.tools.utils.GormUtils: java.util.List listToIdMap(java.util.List,java.lang.String)>",
    "<gorm.tools.mango.MangoDetachedCriteria: void <init>(java.lang.Class,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String toString()>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>()>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Throwable getCause()>",
    "<gorm.tools.api.IncludesConfig: java.util.Map $_cache_getIncludes(java.lang.String,java.lang.String,java.lang.Class,java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.api.ApiStatus yakworks_problem_ProblemTraittrait$super$getStatus()>",
    "<gorm.tools.repository.model.AbstractCrossRefRepo: java.lang.Object createOrRemove(gorm.tools.model.Persistable,java.util.Map)>",
    "<gorm.tools.utils.GormUtils: java.util.List collectLongIds(java.util.List,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setOk(java.lang.Boolean)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>(java.lang.Throwable)>",
    "<gorm.tools.problem.ProblemHandler: java.util.List transateErrorsToViolations(org.springframework.validation.Errors)>",
    "<gorm.tools.problem.ValidationProblem$Exception: java.lang.String getMessage()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem addErrors(java.util.List)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleException(java.lang.Throwable,java.lang.String)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity findPersistentEntity(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Boolean yakworks_problem_ProblemTraittrait$super$getOk()>",
    "<gorm.tools.problem.ValidationProblem: void <init>()>",
    "<gorm.tools.idgen.JdbcIdGenerator: long updateIncrement(java.lang.String,long)>",
    "<gorm.tools.repository.GormRepo$Trait$Helper: java.lang.Object findWithData(gorm.tools.repository.GormRepo,java.util.Map,boolean)>",
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: yakworks.api.ApiResults doBulk(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.job.SyncJobContext,boolean)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity getPersistentEntity(org.grails.datastore.gorm.GormEntity)>",
    "<gorm.tools.beans.map.MetaMapEntityService: java.lang.String toJson(java.lang.Object,java.util.List,java.util.List)>",
    "<gorm.tools.beans.map.MetaMapList: java.lang.Object clone()>",
    "<gorm.tools.job.SyncJobContext: java.lang.Long writePayloadFile(java.util.Collection)>",
    "<gorm.tools.beans.map.MetaMap: void <init>(java.lang.Object)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleUnexpected(java.lang.Throwable)>",
    "<gorm.tools.beans.map.MetaMap: java.lang.Object clone()>",
    "<gorm.tools.beans.map.EntityIncludesBuilder: gorm.tools.beans.map.MetaMapIncludes buildNested(java.util.Map)>",
    "<gorm.tools.job.SyncJobContext: void appendDataResults(yakworks.api.ApiResults)>",
    "<gorm.tools.repository.validation.ApiConstraints: java.util.Map collectContraints()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsg()>",
    "<gorm.tools.beans.map.EntityIncludesBuilder: boolean propertyExists(java.lang.String)>",
    "<gorm.tools.repository.artefact.RepositoryArtefactHandler: java.lang.String getRepoBeanName(java.lang.Class)>",
    "<gorm.tools.repository.RepoUtil: void checkCreateData(java.util.Map,gorm.tools.repository.PersistArgs,java.lang.Class)>",
    "<gorm.tools.repository.model.AbstractLinkedEntityRepo: void validateCreate(gorm.tools.model.Persistable,gorm.tools.model.Persistable)>",
    "<gorm.tools.problem.ValidationProblem: java.net.URI getType()>",
    "<gorm.tools.problem.ValidationProblem: void setMsg(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobContext createJob()>",
    "<gorm.tools.job.SyncJobContext: java.util.List transformResults(yakworks.api.ApiResults)>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem cause(java.lang.Throwable)>",
    "<gorm.tools.repository.RepoUtil: void checkData(java.util.Map,java.lang.Class)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.problem.ProblemException yakworks_problem_data_DataProblemTraittrait$super$toException()>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Class getDomainClassType(java.lang.Object,java.lang.String)>",
    "<gorm.tools.beans.map.MetaMapEntityService: java.lang.String toJson(java.util.List,java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem entity(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String getDetail()>",
    "<gorm.tools.problem.ValidationProblem: void setDetail(java.lang.String)>",
    "<gorm.tools.idgen.PooledIdGenerator: java.util.concurrent.atomic.AtomicReference findOrCreate(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setMsgKey(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobEntity finishJob(java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: void setType(java.net.URI)>",
    "<gorm.tools.problem.ValidationProblem: void setPayload(java.lang.Object)>",
    "<gorm.tools.repository.errors.RepoExceptionSupport: java.lang.RuntimeException translateException(java.lang.RuntimeException,java.lang.Object)>"
  ],
  "7.0.8-v.62": [
    "<gorm.tools.beans.map.MetaMapIncludesBuilder: gorm.tools.beans.map.MetaMapIncludes buildNested(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: void <init>(java.lang.String)>",
    "<gorm.tools.repository.RepoUtil: void checkFound(java.lang.Object,java.io.Serializable,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String yakworks_problem_ProblemTraittrait$super$toString()>",
    "<gorm.tools.problem.ValidationProblem: void setViolations(java.util.List)>",
    "<gorm.tools.repository.events.RepositoryEventType: void <init>(java.lang.String,int,java.lang.Class)>",
    "<gorm.tools.mango.api.QueryArgs: gorm.tools.mango.api.QueryArgs build(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Object getPayload()>",
    "<gorm.tools.problem.ValidationProblem: java.util.List getViolations()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsgKey()>",
    "<gorm.tools.api.IncludesConfig: java.util.Map getClassStaticIncludes(java.lang.Class)>",
    "<gorm.tools.repository.PersistArgs: java.util.Map asMap()>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Object parseBasicType(java.lang.String,java.lang.Class)>",
    "<gorm.tools.async.ParallelTools$Trait$Helper: groovy.lang.Closure sliceClosure(gorm.tools.async.ParallelTools,org.grails.datastore.mapping.core.Datastore,groovy.lang.Closure)>",
    "<gorm.tools.problem.ValidationProblem: void yakworks_problem_ProblemTraittrait$super$setStatus(yakworks.api.ApiStatus)>",
    "<gorm.tools.problem.ValidationProblem: void setCause(java.lang.Throwable)>",
    "<gorm.tools.validation.Rejector: void withError(java.lang.String,java.util.List,java.util.Map,java.lang.String)>",
    "<gorm.tools.utils.GormUtils: java.util.List listToIdMap(java.util.List,java.lang.String)>",
    "<gorm.tools.mango.MangoDetachedCriteria: void <init>(java.lang.Class,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String toString()>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>()>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Throwable getCause()>",
    "<gorm.tools.api.IncludesConfig: java.util.Map $_cache_getIncludes(java.lang.String,java.lang.String,java.lang.Class,java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.api.ApiStatus yakworks_problem_ProblemTraittrait$super$getStatus()>",
    "<gorm.tools.repository.model.AbstractCrossRefRepo: java.lang.Object createOrRemove(gorm.tools.model.Persistable,java.util.Map)>",
    "<gorm.tools.utils.GormUtils: java.util.List collectLongIds(java.util.List,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setOk(java.lang.Boolean)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>(java.lang.Throwable)>",
    "<gorm.tools.problem.ProblemHandler: java.util.List transateErrorsToViolations(org.springframework.validation.Errors)>",
    "<gorm.tools.problem.ValidationProblem$Exception: java.lang.String getMessage()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem addErrors(java.util.List)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleException(java.lang.Throwable,java.lang.String)>",
    "<gorm.tools.validation.Rejector: void withError(java.lang.String,gorm.tools.validation.ValidationCode,java.util.Map,java.lang.String)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity findPersistentEntity(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Boolean yakworks_problem_ProblemTraittrait$super$getOk()>",
    "<gorm.tools.problem.ValidationProblem: void <init>()>",
    "<gorm.tools.idgen.JdbcIdGenerator: long updateIncrement(java.lang.String,long)>",
    "<gorm.tools.repository.GormRepo$Trait$Helper: java.lang.Object findWithData(gorm.tools.repository.GormRepo,java.util.Map,boolean)>",
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: yakworks.api.ApiResults doBulk(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.job.SyncJobContext,boolean)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity getPersistentEntity(org.grails.datastore.gorm.GormEntity)>",
    "<gorm.tools.beans.map.MetaMapEntityService: java.lang.String toJson(java.lang.Object,java.util.List,java.util.List)>",
    "<gorm.tools.beans.map.MetaMapList: java.lang.Object clone()>",
    "<gorm.tools.job.SyncJobContext: java.lang.Long writePayloadFile(java.util.Collection)>",
    "<gorm.tools.beans.map.MetaMap: void <init>(java.lang.Object)>",
    "<gorm.tools.beans.map.MetaMapIncludes: java.lang.String getShortClassName()>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleUnexpected(java.lang.Throwable)>",
    "<gorm.tools.beans.map.MetaMap: java.lang.Object clone()>",
    "<gorm.tools.beans.map.MetaMapIncludesBuilder: boolean propertyExists(java.lang.String)>",
    "<gorm.tools.job.SyncJobContext: void appendDataResults(yakworks.api.ApiResults)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsg()>",
    "<gorm.tools.repository.artefact.RepositoryArtefactHandler: java.lang.String getRepoBeanName(java.lang.Class)>",
    "<gorm.tools.repository.RepoUtil: void checkCreateData(java.util.Map,gorm.tools.repository.PersistArgs,java.lang.Class)>",
    "<gorm.tools.repository.model.AbstractLinkedEntityRepo: void validateCreate(gorm.tools.model.Persistable,gorm.tools.model.Persistable)>",
    "<gorm.tools.problem.ValidationProblem: java.net.URI getType()>",
    "<gorm.tools.problem.ValidationProblem: void setMsg(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobContext createJob()>",
    "<gorm.tools.job.SyncJobContext: java.util.List transformResults(yakworks.api.ApiResults)>",
    "<gorm.tools.beans.map.MetaMapList: void setTotalCount(int)>",
    "<gorm.tools.repository.RepoUtil: void checkData(java.util.Map,java.lang.Class)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.problem.ProblemException yakworks_problem_data_DataProblemTraittrait$super$toException()>",
    "<gorm.tools.validation.ApiConstraints: java.util.Map collectContraints()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem cause(java.lang.Throwable)>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Class getDomainClassType(java.lang.Object,java.lang.String)>",
    "<gorm.tools.beans.map.MetaMapEntityService: java.lang.String toJson(java.util.List,java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem entity(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String getDetail()>",
    "<gorm.tools.problem.ValidationProblem: void setDetail(java.lang.String)>",
    "<gorm.tools.idgen.PooledIdGenerator: java.util.concurrent.atomic.AtomicReference findOrCreate(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setMsgKey(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobEntity finishJob(java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: void setType(java.net.URI)>",
    "<gorm.tools.problem.ValidationProblem: void setPayload(java.lang.Object)>",
    "<gorm.tools.repository.errors.RepoExceptionSupport: java.lang.RuntimeException translateException(java.lang.RuntimeException,java.lang.Object)>"
  ],
  "7.0.8-v.76": [
    "<gorm.tools.problem.ValidationProblem: void <init>(java.lang.String)>",
    "<gorm.tools.repository.RepoUtil: void checkFound(java.lang.Object,java.io.Serializable,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String yakworks_problem_ProblemTraittrait$super$toString()>",
    "<gorm.tools.problem.ValidationProblem: void setViolations(java.util.List)>",
    "<gorm.tools.repository.events.RepositoryEventType: void <init>(java.lang.String,int,java.lang.Class)>",
    "<gorm.tools.mango.api.QueryArgs: gorm.tools.mango.api.QueryArgs build(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Object getPayload()>",
    "<gorm.tools.problem.ValidationProblem: java.util.List getViolations()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsgKey()>",
    "<gorm.tools.metamap.MetaMapIncludes: java.lang.String getShortClassName()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem cause(java.lang.Throwable)>",
    "<gorm.tools.api.IncludesConfig: java.util.Map getClassStaticIncludes(java.lang.Class)>",
    "<gorm.tools.repository.PersistArgs: java.util.Map asMap()>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Object parseBasicType(java.lang.String,java.lang.Class)>",
    "<gorm.tools.async.ParallelTools$Trait$Helper: groovy.lang.Closure sliceClosure(gorm.tools.async.ParallelTools,org.grails.datastore.mapping.core.Datastore,groovy.lang.Closure)>",
    "<gorm.tools.problem.ValidationProblem: void yakworks_problem_ProblemTraittrait$super$setStatus(yakworks.api.ApiStatus)>",
    "<gorm.tools.problem.ValidationProblem: void setCause(java.lang.Throwable)>",
    "<gorm.tools.validation.Rejector: void withError(java.lang.String,java.util.List,java.util.Map,java.lang.String)>",
    "<gorm.tools.utils.GormUtils: java.util.List listToIdMap(java.util.List,java.lang.String)>",
    "<gorm.tools.mango.MangoDetachedCriteria: void <init>(java.lang.Class,java.lang.String)>",
    "<gorm.tools.metamap.MetaMap: void <init>(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>()>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Throwable getCause()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.api.ApiStatus yakworks_problem_ProblemTraittrait$super$getStatus()>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String toString()>",
    "<gorm.tools.repository.model.AbstractCrossRefRepo: java.lang.Object createOrRemove(gorm.tools.model.Persistable,java.util.Map)>",
    "<gorm.tools.utils.GormUtils: java.util.List collectLongIds(java.util.List,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setOk(java.lang.Boolean)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>(java.lang.Throwable)>",
    "<gorm.tools.problem.ProblemHandler: java.util.List transateErrorsToViolations(org.springframework.validation.Errors)>",
    "<gorm.tools.problem.ValidationProblem$Exception: java.lang.String getMessage()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem addErrors(java.util.List)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleException(java.lang.Throwable,java.lang.String)>",
    "<gorm.tools.validation.Rejector: void withError(java.lang.String,gorm.tools.validation.ValidationCode,java.util.Map,java.lang.String)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity findPersistentEntity(java.lang.String)>",
    "<gorm.tools.repository.model.AbstractCrossRefRepo: java.util.List add(gorm.tools.model.Persistable,java.util.List)>",
    "<gorm.tools.metamap.MetaMapEntityService: java.lang.String toJson(java.util.List,java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: void <init>()>",
    "<gorm.tools.metamap.MetaMapIncludes: java.lang.String getRootClassPropName()>",
    "<gorm.tools.repository.GormRepo$Trait$Helper: java.lang.Object findWithData(gorm.tools.repository.GormRepo,java.util.Map,boolean)>",
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: yakworks.api.ApiResults doBulk(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.job.SyncJobContext,boolean)>",
    "<gorm.tools.idgen.JdbcIdGenerator: long updateIncrement(java.lang.String,long)>",
    "<gorm.tools.metamap.MetaMapList: java.lang.Object clone()>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity getPersistentEntity(org.grails.datastore.gorm.GormEntity)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Boolean yakworks_problem_ProblemTraittrait$super$getOk()>",
    "<gorm.tools.job.SyncJobContext: java.lang.Long writePayloadFile(java.util.Collection)>",
    "<gorm.tools.metamap.MetaMapEntityService: java.lang.String toJson(java.lang.Object,java.util.List,java.util.List)>",
    "<gorm.tools.metamap.MetaMapIncludesBuilder: boolean propertyExists(java.lang.String)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleUnexpected(java.lang.Throwable)>",
    "<gorm.tools.job.SyncJobContext: void appendDataResults(yakworks.api.ApiResults)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsg()>",
    "<gorm.tools.repository.artefact.RepositoryArtefactHandler: java.lang.String getRepoBeanName(java.lang.Class)>",
    "<gorm.tools.repository.RepoUtil: void checkCreateData(java.util.Map,gorm.tools.repository.PersistArgs,java.lang.Class)>",
    "<gorm.tools.repository.model.AbstractLinkedEntityRepo: void validateCreate(gorm.tools.model.Persistable,gorm.tools.model.Persistable)>",
    "<gorm.tools.problem.ValidationProblem: java.net.URI getType()>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobContext createJob()>",
    "<gorm.tools.problem.ValidationProblem: void setMsg(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: java.util.List transformResults(yakworks.api.ApiResults)>",
    "<gorm.tools.validation.ApiConstraints: java.util.Map collectContraints()>",
    "<gorm.tools.repository.RepoUtil: void checkData(java.util.Map,java.lang.Class)>",
    "<gorm.tools.metamap.MetaMapIncludesBuilder: gorm.tools.metamap.MetaMapIncludes buildNested(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.problem.ProblemException yakworks_problem_data_DataProblemTraittrait$super$toException()>",
    "<gorm.tools.job.SyncJobFinishedEvent: gorm.tools.job.SyncJobFinishedEvent of(gorm.tools.job.SyncJobContext)>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Class getDomainClassType(java.lang.Object,java.lang.String)>",
    "<gorm.tools.metamap.MetaMap: java.lang.Object clone()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem entity(java.lang.Object)>",
    "<gorm.tools.job.SyncJobStartEvent: gorm.tools.job.SyncJobStartEvent of(gorm.tools.job.SyncJobContext)>",
    "<gorm.tools.problem.ValidationProblem: void setDetail(java.lang.String)>",
    "<gorm.tools.idgen.PooledIdGenerator: java.util.concurrent.atomic.AtomicReference findOrCreate(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setMsgKey(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobEntity finishJob(java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String getDetail()>",
    "<gorm.tools.problem.ValidationProblem: void setPayload(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem: void setType(java.net.URI)>",
    "<gorm.tools.metamap.MetaMapList: void setTotalCount(int)>",
    "<gorm.tools.repository.errors.RepoExceptionSupport: java.lang.RuntimeException translateException(java.lang.RuntimeException,java.lang.Object)>"
  ],
  "7.0.8-v.66": [
    "<gorm.tools.problem.ValidationProblem: void <init>(java.lang.String)>",
    "<gorm.tools.repository.RepoUtil: void checkFound(java.lang.Object,java.io.Serializable,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String yakworks_problem_ProblemTraittrait$super$toString()>",
    "<gorm.tools.problem.ValidationProblem: void setViolations(java.util.List)>",
    "<gorm.tools.repository.events.RepositoryEventType: void <init>(java.lang.String,int,java.lang.Class)>",
    "<gorm.tools.mango.api.QueryArgs: gorm.tools.mango.api.QueryArgs build(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Object getPayload()>",
    "<gorm.tools.problem.ValidationProblem: java.util.List getViolations()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsgKey()>",
    "<gorm.tools.metamap.MetaMapIncludes: java.lang.String getShortClassName()>",
    "<gorm.tools.api.IncludesConfig: java.util.Map getClassStaticIncludes(java.lang.Class)>",
    "<gorm.tools.repository.PersistArgs: java.util.Map asMap()>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Object parseBasicType(java.lang.String,java.lang.Class)>",
    "<gorm.tools.async.ParallelTools$Trait$Helper: groovy.lang.Closure sliceClosure(gorm.tools.async.ParallelTools,org.grails.datastore.mapping.core.Datastore,groovy.lang.Closure)>",
    "<gorm.tools.problem.ValidationProblem: void yakworks_problem_ProblemTraittrait$super$setStatus(yakworks.api.ApiStatus)>",
    "<gorm.tools.problem.ValidationProblem: void setCause(java.lang.Throwable)>",
    "<gorm.tools.validation.Rejector: void withError(java.lang.String,java.util.List,java.util.Map,java.lang.String)>",
    "<gorm.tools.utils.GormUtils: java.util.List listToIdMap(java.util.List,java.lang.String)>",
    "<gorm.tools.mango.MangoDetachedCriteria: void <init>(java.lang.Class,java.lang.String)>",
    "<gorm.tools.metamap.MetaMap: void <init>(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>()>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Throwable getCause()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.api.ApiStatus yakworks_problem_ProblemTraittrait$super$getStatus()>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String toString()>",
    "<gorm.tools.repository.model.AbstractCrossRefRepo: java.lang.Object createOrRemove(gorm.tools.model.Persistable,java.util.Map)>",
    "<gorm.tools.utils.GormUtils: java.util.List collectLongIds(java.util.List,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setOk(java.lang.Boolean)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>(java.lang.Throwable)>",
    "<gorm.tools.problem.ProblemHandler: java.util.List transateErrorsToViolations(org.springframework.validation.Errors)>",
    "<gorm.tools.problem.ValidationProblem$Exception: java.lang.String getMessage()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem addErrors(java.util.List)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleException(java.lang.Throwable,java.lang.String)>",
    "<gorm.tools.validation.Rejector: void withError(java.lang.String,gorm.tools.validation.ValidationCode,java.util.Map,java.lang.String)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity findPersistentEntity(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Boolean yakworks_problem_ProblemTraittrait$super$getOk()>",
    "<gorm.tools.metamap.MetaMapEntityService: java.lang.String toJson(java.util.List,java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: void <init>()>",
    "<gorm.tools.metamap.MetaMapIncludes: java.lang.String getRootClassPropName()>",
    "<gorm.tools.repository.GormRepo$Trait$Helper: java.lang.Object findWithData(gorm.tools.repository.GormRepo,java.util.Map,boolean)>",
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: yakworks.api.ApiResults doBulk(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.job.SyncJobContext,boolean)>",
    "<gorm.tools.idgen.JdbcIdGenerator: long updateIncrement(java.lang.String,long)>",
    "<gorm.tools.metamap.MetaMapList: java.lang.Object clone()>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity getPersistentEntity(org.grails.datastore.gorm.GormEntity)>",
    "<gorm.tools.job.SyncJobContext: java.lang.Long writePayloadFile(java.util.Collection)>",
    "<gorm.tools.metamap.MetaMapEntityService: java.lang.String toJson(java.lang.Object,java.util.List,java.util.List)>",
    "<gorm.tools.metamap.MetaMapIncludesBuilder: boolean propertyExists(java.lang.String)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleUnexpected(java.lang.Throwable)>",
    "<gorm.tools.job.SyncJobContext: void appendDataResults(yakworks.api.ApiResults)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsg()>",
    "<gorm.tools.repository.artefact.RepositoryArtefactHandler: java.lang.String getRepoBeanName(java.lang.Class)>",
    "<gorm.tools.repository.RepoUtil: void checkCreateData(java.util.Map,gorm.tools.repository.PersistArgs,java.lang.Class)>",
    "<gorm.tools.repository.model.AbstractLinkedEntityRepo: void validateCreate(gorm.tools.model.Persistable,gorm.tools.model.Persistable)>",
    "<gorm.tools.problem.ValidationProblem: java.net.URI getType()>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobContext createJob()>",
    "<gorm.tools.problem.ValidationProblem: void setMsg(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: java.util.List transformResults(yakworks.api.ApiResults)>",
    "<gorm.tools.validation.ApiConstraints: java.util.Map collectContraints()>",
    "<gorm.tools.repository.RepoUtil: void checkData(java.util.Map,java.lang.Class)>",
    "<gorm.tools.metamap.MetaMapIncludesBuilder: gorm.tools.metamap.MetaMapIncludes buildNested(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.problem.ProblemException yakworks_problem_data_DataProblemTraittrait$super$toException()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem cause(java.lang.Throwable)>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Class getDomainClassType(java.lang.Object,java.lang.String)>",
    "<gorm.tools.metamap.MetaMap: java.lang.Object clone()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem entity(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String getDetail()>",
    "<gorm.tools.problem.ValidationProblem: void setDetail(java.lang.String)>",
    "<gorm.tools.idgen.PooledIdGenerator: java.util.concurrent.atomic.AtomicReference findOrCreate(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setMsgKey(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobEntity finishJob(java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: void setType(java.net.URI)>",
    "<gorm.tools.problem.ValidationProblem: void setPayload(java.lang.Object)>",
    "<gorm.tools.metamap.MetaMapList: void setTotalCount(int)>",
    "<gorm.tools.repository.errors.RepoExceptionSupport: java.lang.RuntimeException translateException(java.lang.RuntimeException,java.lang.Object)>"
  ],
  "7.0.8-v.43": [
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: yakworks.api.ApiResults doBulkParallel(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.repository.bulk.BulkableArgs)>",
    "<gorm.tools.problem.ValidationProblem: void <init>(java.lang.String)>",
    "<gorm.tools.repository.RepoUtil: void checkFound(java.lang.Object,java.io.Serializable,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String yakworks_problem_ProblemTraittrait$super$toString()>",
    "<gorm.tools.problem.ValidationProblem: void setViolations(java.util.List)>",
    "<gorm.tools.repository.RepoUtil: void checkCreateData(java.util.Map,java.util.Map,java.lang.Class)>",
    "<gorm.tools.repository.events.RepositoryEventType: void <init>(java.lang.String,int,java.lang.Class)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Object getPayload()>",
    "<gorm.tools.problem.ValidationProblem: java.util.List getViolations()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsgKey()>",
    "<gorm.tools.api.IncludesConfig: java.util.Map getClassStaticIncludes(java.lang.Class)>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Object parseBasicType(java.lang.String,java.lang.Class)>",
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: yakworks.api.ApiResults doBulk(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.repository.bulk.BulkableArgs,boolean)>",
    "<gorm.tools.async.ParallelTools$Trait$Helper: groovy.lang.Closure sliceClosure(gorm.tools.async.ParallelTools,org.grails.datastore.mapping.core.Datastore,groovy.lang.Closure)>",
    "<gorm.tools.problem.ValidationProblem: void yakworks_problem_ProblemTraittrait$super$setStatus(yakworks.api.ApiStatus)>",
    "<gorm.tools.problem.ValidationProblem: void setCause(java.lang.Throwable)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String toString()>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>(java.lang.Throwable)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Throwable getCause()>",
    "<gorm.tools.api.IncludesConfig: java.util.Map $_cache_getIncludes(java.lang.String,java.lang.String,java.lang.Class,java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>()>",
    "<gorm.tools.repository.model.AbstractCrossRefRepo: java.lang.Object createOrRemove(gorm.tools.model.Persistable,java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.api.ApiStatus yakworks_problem_ProblemTraittrait$super$getStatus()>",
    "<gorm.tools.problem.ValidationProblem: void setOk(java.lang.Boolean)>",
    "<gorm.tools.problem.ProblemHandler: java.util.List transateErrorsToViolations(org.springframework.validation.Errors)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleException(java.lang.Throwable,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem addErrors(java.util.List)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity findPersistentEntity(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Boolean yakworks_problem_ProblemTraittrait$super$getOk()>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity getPersistentEntity(org.grails.datastore.gorm.GormEntity)>",
    "<gorm.tools.problem.ValidationProblem: void <init>()>",
    "<gorm.tools.repository.GormRepo$Trait$Helper: java.lang.Object findWithData(gorm.tools.repository.GormRepo,java.util.Map,boolean)>",
    "<gorm.tools.idgen.JdbcIdGenerator: long updateIncrement(java.lang.String,long)>",
    "<gorm.tools.beans.map.MetaMap: void <init>(java.lang.Object)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleUnexpected(java.lang.Throwable)>",
    "<gorm.tools.beans.map.MetaMapEntityService: java.lang.String toJson(java.lang.Object,java.util.List)>",
    "<gorm.tools.beans.map.EntityIncludesBuilder: gorm.tools.beans.map.MetaMapIncludes buildNested(java.util.Map)>",
    "<gorm.tools.mango.MangoBuilder: java.util.List getQSearchFields(java.lang.Class)>",
    "<gorm.tools.repository.validation.ApiConstraints: java.util.Map collectContraints()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsg()>",
    "<gorm.tools.beans.map.EntityIncludesBuilder: boolean propertyExists(java.lang.String)>",
    "<gorm.tools.repository.artefact.RepositoryArtefactHandler: java.lang.String getRepoBeanName(java.lang.Class)>",
    "<gorm.tools.repository.model.AbstractLinkedEntityRepo: void validateCreate(gorm.tools.model.Persistable,gorm.tools.model.Persistable)>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem cause(java.lang.Throwable)>",
    "<gorm.tools.problem.ValidationProblem: java.net.URI getType()>",
    "<gorm.tools.problem.ValidationProblem: void setMsg(yakworks.i18n.MsgKey)>",
    "<gorm.tools.beans.map.MetaMapEntityService: java.lang.String toJson(java.util.List,java.util.List)>",
    "<gorm.tools.repository.RepoUtil: void checkData(java.util.Map,java.lang.Class)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.problem.ProblemException yakworks_problem_data_DataProblemTraittrait$super$toException()>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Class getDomainClassType(java.lang.Object,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem entity(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem: void setType(java.net.URI)>",
    "<gorm.tools.problem.ValidationProblem: void setDetail(java.lang.String)>",
    "<gorm.tools.idgen.PooledIdGenerator: java.util.concurrent.atomic.AtomicReference findOrCreate(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setMsgKey(yakworks.i18n.MsgKey)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String getDetail()>",
    "<gorm.tools.problem.ValidationProblem: void setPayload(java.lang.Object)>",
    "<gorm.tools.repository.errors.RepoExceptionSupport: java.lang.RuntimeException translateException(java.lang.RuntimeException,java.lang.Object)>"
  ],
  "7.0.8-v.60": [
    "<gorm.tools.problem.ValidationProblem: void <init>(java.lang.String)>",
    "<gorm.tools.repository.RepoUtil: void checkFound(java.lang.Object,java.io.Serializable,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String yakworks_problem_ProblemTraittrait$super$toString()>",
    "<gorm.tools.problem.ValidationProblem: void setViolations(java.util.List)>",
    "<gorm.tools.repository.events.RepositoryEventType: void <init>(java.lang.String,int,java.lang.Class)>",
    "<gorm.tools.mango.api.QueryArgs: gorm.tools.mango.api.QueryArgs build(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Object getPayload()>",
    "<gorm.tools.problem.ValidationProblem: java.util.List getViolations()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsgKey()>",
    "<gorm.tools.api.IncludesConfig: java.util.Map getClassStaticIncludes(java.lang.Class)>",
    "<gorm.tools.repository.PersistArgs: java.util.Map asMap()>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Object parseBasicType(java.lang.String,java.lang.Class)>",
    "<gorm.tools.async.ParallelTools$Trait$Helper: groovy.lang.Closure sliceClosure(gorm.tools.async.ParallelTools,org.grails.datastore.mapping.core.Datastore,groovy.lang.Closure)>",
    "<gorm.tools.problem.ValidationProblem: void yakworks_problem_ProblemTraittrait$super$setStatus(yakworks.api.ApiStatus)>",
    "<gorm.tools.problem.ValidationProblem: void setCause(java.lang.Throwable)>",
    "<gorm.tools.validation.Rejector: void withError(java.lang.String,java.util.List,java.util.Map,java.lang.String)>",
    "<gorm.tools.utils.GormUtils: java.util.List listToIdMap(java.util.List,java.lang.String)>",
    "<gorm.tools.mango.MangoDetachedCriteria: void <init>(java.lang.Class,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String toString()>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>()>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Throwable getCause()>",
    "<gorm.tools.api.IncludesConfig: java.util.Map $_cache_getIncludes(java.lang.String,java.lang.String,java.lang.Class,java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.api.ApiStatus yakworks_problem_ProblemTraittrait$super$getStatus()>",
    "<gorm.tools.repository.model.AbstractCrossRefRepo: java.lang.Object createOrRemove(gorm.tools.model.Persistable,java.util.Map)>",
    "<gorm.tools.utils.GormUtils: java.util.List collectLongIds(java.util.List,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setOk(java.lang.Boolean)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>(java.lang.Throwable)>",
    "<gorm.tools.problem.ProblemHandler: java.util.List transateErrorsToViolations(org.springframework.validation.Errors)>",
    "<gorm.tools.problem.ValidationProblem$Exception: java.lang.String getMessage()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem addErrors(java.util.List)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleException(java.lang.Throwable,java.lang.String)>",
    "<gorm.tools.validation.Rejector: void withError(java.lang.String,gorm.tools.validation.ValidationCode,java.util.Map,java.lang.String)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity findPersistentEntity(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Boolean yakworks_problem_ProblemTraittrait$super$getOk()>",
    "<gorm.tools.problem.ValidationProblem: void <init>()>",
    "<gorm.tools.idgen.JdbcIdGenerator: long updateIncrement(java.lang.String,long)>",
    "<gorm.tools.repository.GormRepo$Trait$Helper: java.lang.Object findWithData(gorm.tools.repository.GormRepo,java.util.Map,boolean)>",
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: yakworks.api.ApiResults doBulk(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.job.SyncJobContext,boolean)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity getPersistentEntity(org.grails.datastore.gorm.GormEntity)>",
    "<gorm.tools.beans.map.MetaMapEntityService: java.lang.String toJson(java.lang.Object,java.util.List,java.util.List)>",
    "<gorm.tools.beans.map.MetaMapList: java.lang.Object clone()>",
    "<gorm.tools.job.SyncJobContext: java.lang.Long writePayloadFile(java.util.Collection)>",
    "<gorm.tools.beans.map.MetaMap: void <init>(java.lang.Object)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleUnexpected(java.lang.Throwable)>",
    "<gorm.tools.beans.map.MetaMap: java.lang.Object clone()>",
    "<gorm.tools.beans.map.EntityIncludesBuilder: gorm.tools.beans.map.MetaMapIncludes buildNested(java.util.Map)>",
    "<gorm.tools.job.SyncJobContext: void appendDataResults(yakworks.api.ApiResults)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsg()>",
    "<gorm.tools.beans.map.EntityIncludesBuilder: boolean propertyExists(java.lang.String)>",
    "<gorm.tools.repository.artefact.RepositoryArtefactHandler: java.lang.String getRepoBeanName(java.lang.Class)>",
    "<gorm.tools.repository.RepoUtil: void checkCreateData(java.util.Map,gorm.tools.repository.PersistArgs,java.lang.Class)>",
    "<gorm.tools.repository.model.AbstractLinkedEntityRepo: void validateCreate(gorm.tools.model.Persistable,gorm.tools.model.Persistable)>",
    "<gorm.tools.problem.ValidationProblem: java.net.URI getType()>",
    "<gorm.tools.problem.ValidationProblem: void setMsg(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobContext createJob()>",
    "<gorm.tools.job.SyncJobContext: java.util.List transformResults(yakworks.api.ApiResults)>",
    "<gorm.tools.beans.map.MetaMapList: void setTotalCount(int)>",
    "<gorm.tools.repository.RepoUtil: void checkData(java.util.Map,java.lang.Class)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.problem.ProblemException yakworks_problem_data_DataProblemTraittrait$super$toException()>",
    "<gorm.tools.validation.ApiConstraints: java.util.Map collectContraints()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem cause(java.lang.Throwable)>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Class getDomainClassType(java.lang.Object,java.lang.String)>",
    "<gorm.tools.beans.map.MetaMapEntityService: java.lang.String toJson(java.util.List,java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem entity(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String getDetail()>",
    "<gorm.tools.problem.ValidationProblem: void setDetail(java.lang.String)>",
    "<gorm.tools.idgen.PooledIdGenerator: java.util.concurrent.atomic.AtomicReference findOrCreate(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setMsgKey(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobEntity finishJob(java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: void setType(java.net.URI)>",
    "<gorm.tools.problem.ValidationProblem: void setPayload(java.lang.Object)>",
    "<gorm.tools.repository.errors.RepoExceptionSupport: java.lang.RuntimeException translateException(java.lang.RuntimeException,java.lang.Object)>"
  ],
  "7.0.8-v.41": [
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: yakworks.api.ApiResults doBulkParallel(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.repository.bulk.BulkableArgs)>",
    "<gorm.tools.repository.RepoUtil: void checkFound(java.lang.Object,java.io.Serializable,java.lang.String)>",
    "<gorm.tools.repository.RepoUtil: void checkVersion(java.lang.Object,java.lang.Long)>",
    "<gorm.tools.beans.EntityMap: void <init>(java.lang.Object)>",
    "<gorm.tools.repository.RepoUtil: void checkCreateData(java.util.Map,java.util.Map,java.lang.Class)>",
    "<gorm.tools.repository.events.RepositoryEventType: void <init>(java.lang.String,int,java.lang.Class)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleException(java.lang.String,java.lang.Throwable)>",
    "<gorm.tools.problem.ValidationProblem: void <init>(java.lang.Throwable)>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Object parseBasicType(java.lang.String,java.lang.Class)>",
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: yakworks.api.ApiResults doBulk(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.repository.bulk.BulkableArgs,boolean)>",
    "<gorm.tools.beans.EntityMapService: java.lang.String toJson(java.util.List,java.util.List)>",
    "<gorm.tools.async.ParallelTools$Trait$Helper: groovy.lang.Closure sliceClosure(gorm.tools.async.ParallelTools,org.grails.datastore.mapping.core.Datastore,groovy.lang.Closure)>",
    "<gorm.tools.repository.model.AbstractCrossRefRepo: java.lang.Object createOrRemove(gorm.tools.model.Persistable,java.util.Map)>",
    "<gorm.tools.problem.ProblemHandler: java.util.List transateErrorsToViolations(org.springframework.validation.Errors)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity findPersistentEntity(java.lang.String)>",
    "<gorm.tools.idgen.JdbcIdGenerator: long updateIncrement(java.lang.String,long)>",
    "<gorm.tools.problem.ValidationProblem: void <init>()>",
    "<gorm.tools.repository.GormRepo$Trait$Helper: java.lang.Object findWithData(gorm.tools.repository.GormRepo,java.util.Map,boolean)>",
    "<gorm.tools.repository.validation.ApiConstraints: java.util.Map collectContraints()>",
    "<gorm.tools.mango.MangoBuilder: java.util.List getQSearchFields(java.lang.Class)>",
    "<gorm.tools.beans.EntityMapService: java.lang.String toJson(java.lang.Object,java.util.List)>",
    "<gorm.tools.repository.artefact.RepositoryArtefactHandler: java.lang.String getRepoBeanName(java.lang.Class)>",
    "<gorm.tools.repository.model.AbstractLinkedEntityRepo: void validateCreate(gorm.tools.model.Persistable,gorm.tools.model.Persistable)>",
    "<gorm.tools.repository.RepoUtil: void checkData(java.util.Map,java.lang.Class)>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Class getDomainClassType(java.lang.Object,java.lang.String)>",
    "<gorm.tools.idgen.PooledIdGenerator: java.util.concurrent.atomic.AtomicReference findOrCreate(java.lang.String)>",
    "<gorm.tools.repository.errors.RepoExceptionSupport: java.lang.RuntimeException translateException(java.lang.RuntimeException,java.lang.Object)>"
  ],
  "7.0.8-v.75": [
    "<gorm.tools.problem.ValidationProblem: void <init>(java.lang.String)>",
    "<gorm.tools.repository.RepoUtil: void checkFound(java.lang.Object,java.io.Serializable,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String yakworks_problem_ProblemTraittrait$super$toString()>",
    "<gorm.tools.problem.ValidationProblem: void setViolations(java.util.List)>",
    "<gorm.tools.repository.events.RepositoryEventType: void <init>(java.lang.String,int,java.lang.Class)>",
    "<gorm.tools.mango.api.QueryArgs: gorm.tools.mango.api.QueryArgs build(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Object getPayload()>",
    "<gorm.tools.problem.ValidationProblem: java.util.List getViolations()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsgKey()>",
    "<gorm.tools.metamap.MetaMapIncludes: java.lang.String getShortClassName()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem cause(java.lang.Throwable)>",
    "<gorm.tools.api.IncludesConfig: java.util.Map getClassStaticIncludes(java.lang.Class)>",
    "<gorm.tools.repository.PersistArgs: java.util.Map asMap()>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Object parseBasicType(java.lang.String,java.lang.Class)>",
    "<gorm.tools.async.ParallelTools$Trait$Helper: groovy.lang.Closure sliceClosure(gorm.tools.async.ParallelTools,org.grails.datastore.mapping.core.Datastore,groovy.lang.Closure)>",
    "<gorm.tools.problem.ValidationProblem: void yakworks_problem_ProblemTraittrait$super$setStatus(yakworks.api.ApiStatus)>",
    "<gorm.tools.problem.ValidationProblem: void setCause(java.lang.Throwable)>",
    "<gorm.tools.validation.Rejector: void withError(java.lang.String,java.util.List,java.util.Map,java.lang.String)>",
    "<gorm.tools.utils.GormUtils: java.util.List listToIdMap(java.util.List,java.lang.String)>",
    "<gorm.tools.mango.MangoDetachedCriteria: void <init>(java.lang.Class,java.lang.String)>",
    "<gorm.tools.metamap.MetaMap: void <init>(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>()>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Throwable getCause()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.api.ApiStatus yakworks_problem_ProblemTraittrait$super$getStatus()>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String toString()>",
    "<gorm.tools.repository.model.AbstractCrossRefRepo: java.lang.Object createOrRemove(gorm.tools.model.Persistable,java.util.Map)>",
    "<gorm.tools.utils.GormUtils: java.util.List collectLongIds(java.util.List,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setOk(java.lang.Boolean)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>(java.lang.Throwable)>",
    "<gorm.tools.problem.ProblemHandler: java.util.List transateErrorsToViolations(org.springframework.validation.Errors)>",
    "<gorm.tools.problem.ValidationProblem$Exception: java.lang.String getMessage()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem addErrors(java.util.List)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleException(java.lang.Throwable,java.lang.String)>",
    "<gorm.tools.validation.Rejector: void withError(java.lang.String,gorm.tools.validation.ValidationCode,java.util.Map,java.lang.String)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity findPersistentEntity(java.lang.String)>",
    "<gorm.tools.repository.model.AbstractCrossRefRepo: java.util.List add(gorm.tools.model.Persistable,java.util.List)>",
    "<gorm.tools.metamap.MetaMapEntityService: java.lang.String toJson(java.util.List,java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: void <init>()>",
    "<gorm.tools.metamap.MetaMapIncludes: java.lang.String getRootClassPropName()>",
    "<gorm.tools.repository.GormRepo$Trait$Helper: java.lang.Object findWithData(gorm.tools.repository.GormRepo,java.util.Map,boolean)>",
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: yakworks.api.ApiResults doBulk(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.job.SyncJobContext,boolean)>",
    "<gorm.tools.idgen.JdbcIdGenerator: long updateIncrement(java.lang.String,long)>",
    "<gorm.tools.metamap.MetaMapList: java.lang.Object clone()>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity getPersistentEntity(org.grails.datastore.gorm.GormEntity)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Boolean yakworks_problem_ProblemTraittrait$super$getOk()>",
    "<gorm.tools.job.SyncJobContext: java.lang.Long writePayloadFile(java.util.Collection)>",
    "<gorm.tools.metamap.MetaMapEntityService: java.lang.String toJson(java.lang.Object,java.util.List,java.util.List)>",
    "<gorm.tools.metamap.MetaMapIncludesBuilder: boolean propertyExists(java.lang.String)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleUnexpected(java.lang.Throwable)>",
    "<gorm.tools.job.SyncJobContext: void appendDataResults(yakworks.api.ApiResults)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsg()>",
    "<gorm.tools.repository.artefact.RepositoryArtefactHandler: java.lang.String getRepoBeanName(java.lang.Class)>",
    "<gorm.tools.repository.RepoUtil: void checkCreateData(java.util.Map,gorm.tools.repository.PersistArgs,java.lang.Class)>",
    "<gorm.tools.repository.model.AbstractLinkedEntityRepo: void validateCreate(gorm.tools.model.Persistable,gorm.tools.model.Persistable)>",
    "<gorm.tools.problem.ValidationProblem: java.net.URI getType()>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobContext createJob()>",
    "<gorm.tools.problem.ValidationProblem: void setMsg(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: java.util.List transformResults(yakworks.api.ApiResults)>",
    "<gorm.tools.validation.ApiConstraints: java.util.Map collectContraints()>",
    "<gorm.tools.repository.RepoUtil: void checkData(java.util.Map,java.lang.Class)>",
    "<gorm.tools.metamap.MetaMapIncludesBuilder: gorm.tools.metamap.MetaMapIncludes buildNested(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.problem.ProblemException yakworks_problem_data_DataProblemTraittrait$super$toException()>",
    "<gorm.tools.job.SyncJobFinishedEvent: gorm.tools.job.SyncJobFinishedEvent of(gorm.tools.job.SyncJobContext)>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Class getDomainClassType(java.lang.Object,java.lang.String)>",
    "<gorm.tools.metamap.MetaMap: java.lang.Object clone()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem entity(java.lang.Object)>",
    "<gorm.tools.job.SyncJobStartEvent: gorm.tools.job.SyncJobStartEvent of(gorm.tools.job.SyncJobContext)>",
    "<gorm.tools.problem.ValidationProblem: void setDetail(java.lang.String)>",
    "<gorm.tools.idgen.PooledIdGenerator: java.util.concurrent.atomic.AtomicReference findOrCreate(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setMsgKey(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobEntity finishJob(java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String getDetail()>",
    "<gorm.tools.problem.ValidationProblem: void setPayload(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem: void setType(java.net.URI)>",
    "<gorm.tools.metamap.MetaMapList: void setTotalCount(int)>",
    "<gorm.tools.repository.errors.RepoExceptionSupport: java.lang.RuntimeException translateException(java.lang.RuntimeException,java.lang.Object)>"
  ],
  "7.0.8-v.55": [
    "<gorm.tools.problem.ValidationProblem: void <init>(java.lang.String)>",
    "<gorm.tools.repository.RepoUtil: void checkFound(java.lang.Object,java.io.Serializable,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String yakworks_problem_ProblemTraittrait$super$toString()>",
    "<gorm.tools.problem.ValidationProblem: void setViolations(java.util.List)>",
    "<gorm.tools.repository.events.RepositoryEventType: void <init>(java.lang.String,int,java.lang.Class)>",
    "<gorm.tools.mango.api.QueryArgs: gorm.tools.mango.api.QueryArgs build(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Object getPayload()>",
    "<gorm.tools.problem.ValidationProblem: java.util.List getViolations()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsgKey()>",
    "<gorm.tools.api.IncludesConfig: java.util.Map getClassStaticIncludes(java.lang.Class)>",
    "<gorm.tools.repository.PersistArgs: java.util.Map asMap()>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Object parseBasicType(java.lang.String,java.lang.Class)>",
    "<gorm.tools.async.ParallelTools$Trait$Helper: groovy.lang.Closure sliceClosure(gorm.tools.async.ParallelTools,org.grails.datastore.mapping.core.Datastore,groovy.lang.Closure)>",
    "<gorm.tools.problem.ValidationProblem: void yakworks_problem_ProblemTraittrait$super$setStatus(yakworks.api.ApiStatus)>",
    "<gorm.tools.problem.ValidationProblem: void setCause(java.lang.Throwable)>",
    "<gorm.tools.utils.GormUtils: java.util.List listToIdMap(java.util.List,java.lang.String)>",
    "<gorm.tools.mango.MangoDetachedCriteria: void <init>(java.lang.Class,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String toString()>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>()>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Throwable getCause()>",
    "<gorm.tools.api.IncludesConfig: java.util.Map $_cache_getIncludes(java.lang.String,java.lang.String,java.lang.Class,java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.api.ApiStatus yakworks_problem_ProblemTraittrait$super$getStatus()>",
    "<gorm.tools.repository.model.AbstractCrossRefRepo: java.lang.Object createOrRemove(gorm.tools.model.Persistable,java.util.Map)>",
    "<gorm.tools.utils.GormUtils: java.util.List collectLongIds(java.util.List,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setOk(java.lang.Boolean)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>(java.lang.Throwable)>",
    "<gorm.tools.problem.ProblemHandler: java.util.List transateErrorsToViolations(org.springframework.validation.Errors)>",
    "<gorm.tools.problem.ValidationProblem$Exception: java.lang.String getMessage()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem addErrors(java.util.List)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleException(java.lang.Throwable,java.lang.String)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity findPersistentEntity(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Boolean yakworks_problem_ProblemTraittrait$super$getOk()>",
    "<gorm.tools.problem.ValidationProblem: void <init>()>",
    "<gorm.tools.idgen.JdbcIdGenerator: long updateIncrement(java.lang.String,long)>",
    "<gorm.tools.repository.GormRepo$Trait$Helper: java.lang.Object findWithData(gorm.tools.repository.GormRepo,java.util.Map,boolean)>",
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: yakworks.api.ApiResults doBulk(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.job.SyncJobContext,boolean)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity getPersistentEntity(org.grails.datastore.gorm.GormEntity)>",
    "<gorm.tools.beans.map.MetaMapEntityService: java.lang.String toJson(java.lang.Object,java.util.List,java.util.List)>",
    "<gorm.tools.beans.map.MetaMapList: java.lang.Object clone()>",
    "<gorm.tools.job.SyncJobContext: java.lang.Long writePayloadFile(java.util.Collection)>",
    "<gorm.tools.beans.map.MetaMap: void <init>(java.lang.Object)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleUnexpected(java.lang.Throwable)>",
    "<gorm.tools.beans.map.MetaMap: java.lang.Object clone()>",
    "<gorm.tools.beans.map.EntityIncludesBuilder: gorm.tools.beans.map.MetaMapIncludes buildNested(java.util.Map)>",
    "<gorm.tools.job.SyncJobContext: void appendDataResults(yakworks.api.ApiResults)>",
    "<gorm.tools.repository.validation.ApiConstraints: java.util.Map collectContraints()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsg()>",
    "<gorm.tools.beans.map.EntityIncludesBuilder: boolean propertyExists(java.lang.String)>",
    "<gorm.tools.repository.artefact.RepositoryArtefactHandler: java.lang.String getRepoBeanName(java.lang.Class)>",
    "<gorm.tools.repository.RepoUtil: void checkCreateData(java.util.Map,gorm.tools.repository.PersistArgs,java.lang.Class)>",
    "<gorm.tools.repository.model.AbstractLinkedEntityRepo: void validateCreate(gorm.tools.model.Persistable,gorm.tools.model.Persistable)>",
    "<gorm.tools.problem.ValidationProblem: java.net.URI getType()>",
    "<gorm.tools.problem.ValidationProblem: void setMsg(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobContext createJob()>",
    "<gorm.tools.job.SyncJobContext: java.util.List transformResults(yakworks.api.ApiResults)>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem cause(java.lang.Throwable)>",
    "<gorm.tools.repository.RepoUtil: void checkData(java.util.Map,java.lang.Class)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.problem.ProblemException yakworks_problem_data_DataProblemTraittrait$super$toException()>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Class getDomainClassType(java.lang.Object,java.lang.String)>",
    "<gorm.tools.beans.map.MetaMapEntityService: java.lang.String toJson(java.util.List,java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem entity(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String getDetail()>",
    "<gorm.tools.problem.ValidationProblem: void setDetail(java.lang.String)>",
    "<gorm.tools.idgen.PooledIdGenerator: java.util.concurrent.atomic.AtomicReference findOrCreate(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setMsgKey(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobEntity finishJob(java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: void setType(java.net.URI)>",
    "<gorm.tools.problem.ValidationProblem: void setPayload(java.lang.Object)>",
    "<gorm.tools.repository.errors.RepoExceptionSupport: java.lang.RuntimeException translateException(java.lang.RuntimeException,java.lang.Object)>"
  ],
  "7.0.8-v.69": [
    "<gorm.tools.problem.ValidationProblem: void <init>(java.lang.String)>",
    "<gorm.tools.repository.RepoUtil: void checkFound(java.lang.Object,java.io.Serializable,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String yakworks_problem_ProblemTraittrait$super$toString()>",
    "<gorm.tools.problem.ValidationProblem: void setViolations(java.util.List)>",
    "<gorm.tools.repository.events.RepositoryEventType: void <init>(java.lang.String,int,java.lang.Class)>",
    "<gorm.tools.mango.api.QueryArgs: gorm.tools.mango.api.QueryArgs build(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Object getPayload()>",
    "<gorm.tools.problem.ValidationProblem: java.util.List getViolations()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsgKey()>",
    "<gorm.tools.metamap.MetaMapIncludes: java.lang.String getShortClassName()>",
    "<gorm.tools.api.IncludesConfig: java.util.Map getClassStaticIncludes(java.lang.Class)>",
    "<gorm.tools.repository.PersistArgs: java.util.Map asMap()>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Object parseBasicType(java.lang.String,java.lang.Class)>",
    "<gorm.tools.async.ParallelTools$Trait$Helper: groovy.lang.Closure sliceClosure(gorm.tools.async.ParallelTools,org.grails.datastore.mapping.core.Datastore,groovy.lang.Closure)>",
    "<gorm.tools.problem.ValidationProblem: void yakworks_problem_ProblemTraittrait$super$setStatus(yakworks.api.ApiStatus)>",
    "<gorm.tools.problem.ValidationProblem: void setCause(java.lang.Throwable)>",
    "<gorm.tools.validation.Rejector: void withError(java.lang.String,java.util.List,java.util.Map,java.lang.String)>",
    "<gorm.tools.utils.GormUtils: java.util.List listToIdMap(java.util.List,java.lang.String)>",
    "<gorm.tools.mango.MangoDetachedCriteria: void <init>(java.lang.Class,java.lang.String)>",
    "<gorm.tools.metamap.MetaMap: void <init>(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>()>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Throwable getCause()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.api.ApiStatus yakworks_problem_ProblemTraittrait$super$getStatus()>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String toString()>",
    "<gorm.tools.repository.model.AbstractCrossRefRepo: java.lang.Object createOrRemove(gorm.tools.model.Persistable,java.util.Map)>",
    "<gorm.tools.utils.GormUtils: java.util.List collectLongIds(java.util.List,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setOk(java.lang.Boolean)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>(java.lang.Throwable)>",
    "<gorm.tools.problem.ProblemHandler: java.util.List transateErrorsToViolations(org.springframework.validation.Errors)>",
    "<gorm.tools.problem.ValidationProblem$Exception: java.lang.String getMessage()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem addErrors(java.util.List)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleException(java.lang.Throwable,java.lang.String)>",
    "<gorm.tools.validation.Rejector: void withError(java.lang.String,gorm.tools.validation.ValidationCode,java.util.Map,java.lang.String)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity findPersistentEntity(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Boolean yakworks_problem_ProblemTraittrait$super$getOk()>",
    "<gorm.tools.metamap.MetaMapEntityService: java.lang.String toJson(java.util.List,java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: void <init>()>",
    "<gorm.tools.metamap.MetaMapIncludes: java.lang.String getRootClassPropName()>",
    "<gorm.tools.repository.GormRepo$Trait$Helper: java.lang.Object findWithData(gorm.tools.repository.GormRepo,java.util.Map,boolean)>",
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: yakworks.api.ApiResults doBulk(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.job.SyncJobContext,boolean)>",
    "<gorm.tools.idgen.JdbcIdGenerator: long updateIncrement(java.lang.String,long)>",
    "<gorm.tools.metamap.MetaMapList: java.lang.Object clone()>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity getPersistentEntity(org.grails.datastore.gorm.GormEntity)>",
    "<gorm.tools.job.SyncJobContext: java.lang.Long writePayloadFile(java.util.Collection)>",
    "<gorm.tools.metamap.MetaMapEntityService: java.lang.String toJson(java.lang.Object,java.util.List,java.util.List)>",
    "<gorm.tools.metamap.MetaMapIncludesBuilder: boolean propertyExists(java.lang.String)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleUnexpected(java.lang.Throwable)>",
    "<gorm.tools.job.SyncJobContext: void appendDataResults(yakworks.api.ApiResults)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsg()>",
    "<gorm.tools.repository.artefact.RepositoryArtefactHandler: java.lang.String getRepoBeanName(java.lang.Class)>",
    "<gorm.tools.repository.RepoUtil: void checkCreateData(java.util.Map,gorm.tools.repository.PersistArgs,java.lang.Class)>",
    "<gorm.tools.repository.model.AbstractLinkedEntityRepo: void validateCreate(gorm.tools.model.Persistable,gorm.tools.model.Persistable)>",
    "<gorm.tools.problem.ValidationProblem: java.net.URI getType()>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobContext createJob()>",
    "<gorm.tools.problem.ValidationProblem: void setMsg(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: java.util.List transformResults(yakworks.api.ApiResults)>",
    "<gorm.tools.validation.ApiConstraints: java.util.Map collectContraints()>",
    "<gorm.tools.repository.RepoUtil: void checkData(java.util.Map,java.lang.Class)>",
    "<gorm.tools.metamap.MetaMapIncludesBuilder: gorm.tools.metamap.MetaMapIncludes buildNested(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.problem.ProblemException yakworks_problem_data_DataProblemTraittrait$super$toException()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem cause(java.lang.Throwable)>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Class getDomainClassType(java.lang.Object,java.lang.String)>",
    "<gorm.tools.metamap.MetaMap: java.lang.Object clone()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem entity(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String getDetail()>",
    "<gorm.tools.problem.ValidationProblem: void setDetail(java.lang.String)>",
    "<gorm.tools.idgen.PooledIdGenerator: java.util.concurrent.atomic.AtomicReference findOrCreate(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setMsgKey(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobEntity finishJob(java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: void setType(java.net.URI)>",
    "<gorm.tools.problem.ValidationProblem: void setPayload(java.lang.Object)>",
    "<gorm.tools.metamap.MetaMapList: void setTotalCount(int)>",
    "<gorm.tools.repository.errors.RepoExceptionSupport: java.lang.RuntimeException translateException(java.lang.RuntimeException,java.lang.Object)>"
  ],
  "7.0.8-v.74": [
    "<gorm.tools.problem.ValidationProblem: void <init>(java.lang.String)>",
    "<gorm.tools.repository.RepoUtil: void checkFound(java.lang.Object,java.io.Serializable,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String yakworks_problem_ProblemTraittrait$super$toString()>",
    "<gorm.tools.problem.ValidationProblem: void setViolations(java.util.List)>",
    "<gorm.tools.repository.events.RepositoryEventType: void <init>(java.lang.String,int,java.lang.Class)>",
    "<gorm.tools.mango.api.QueryArgs: gorm.tools.mango.api.QueryArgs build(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Object getPayload()>",
    "<gorm.tools.problem.ValidationProblem: java.util.List getViolations()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsgKey()>",
    "<gorm.tools.metamap.MetaMapIncludes: java.lang.String getShortClassName()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem cause(java.lang.Throwable)>",
    "<gorm.tools.api.IncludesConfig: java.util.Map getClassStaticIncludes(java.lang.Class)>",
    "<gorm.tools.repository.PersistArgs: java.util.Map asMap()>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Object parseBasicType(java.lang.String,java.lang.Class)>",
    "<gorm.tools.async.ParallelTools$Trait$Helper: groovy.lang.Closure sliceClosure(gorm.tools.async.ParallelTools,org.grails.datastore.mapping.core.Datastore,groovy.lang.Closure)>",
    "<gorm.tools.problem.ValidationProblem: void yakworks_problem_ProblemTraittrait$super$setStatus(yakworks.api.ApiStatus)>",
    "<gorm.tools.problem.ValidationProblem: void setCause(java.lang.Throwable)>",
    "<gorm.tools.validation.Rejector: void withError(java.lang.String,java.util.List,java.util.Map,java.lang.String)>",
    "<gorm.tools.utils.GormUtils: java.util.List listToIdMap(java.util.List,java.lang.String)>",
    "<gorm.tools.mango.MangoDetachedCriteria: void <init>(java.lang.Class,java.lang.String)>",
    "<gorm.tools.metamap.MetaMap: void <init>(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>()>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Throwable getCause()>",
    "<gorm.tools.problem.ValidationProblem: yakworks.api.ApiStatus yakworks_problem_ProblemTraittrait$super$getStatus()>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String toString()>",
    "<gorm.tools.repository.model.AbstractCrossRefRepo: java.lang.Object createOrRemove(gorm.tools.model.Persistable,java.util.Map)>",
    "<gorm.tools.utils.GormUtils: java.util.List collectLongIds(java.util.List,java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setOk(java.lang.Boolean)>",
    "<gorm.tools.problem.ValidationProblem$Exception: void <init>(java.lang.Throwable)>",
    "<gorm.tools.problem.ProblemHandler: java.util.List transateErrorsToViolations(org.springframework.validation.Errors)>",
    "<gorm.tools.problem.ValidationProblem$Exception: java.lang.String getMessage()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem addErrors(java.util.List)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleException(java.lang.Throwable,java.lang.String)>",
    "<gorm.tools.validation.Rejector: void withError(java.lang.String,gorm.tools.validation.ValidationCode,java.util.Map,java.lang.String)>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity findPersistentEntity(java.lang.String)>",
    "<gorm.tools.repository.model.AbstractCrossRefRepo: java.util.List add(gorm.tools.model.Persistable,java.util.List)>",
    "<gorm.tools.metamap.MetaMapEntityService: java.lang.String toJson(java.util.List,java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: void <init>()>",
    "<gorm.tools.metamap.MetaMapIncludes: java.lang.String getRootClassPropName()>",
    "<gorm.tools.repository.GormRepo$Trait$Helper: java.lang.Object findWithData(gorm.tools.repository.GormRepo,java.util.Map,boolean)>",
    "<gorm.tools.repository.bulk.BulkableRepo$Trait$Helper: yakworks.api.ApiResults doBulk(gorm.tools.repository.bulk.BulkableRepo,java.util.List,gorm.tools.job.SyncJobContext,boolean)>",
    "<gorm.tools.idgen.JdbcIdGenerator: long updateIncrement(java.lang.String,long)>",
    "<gorm.tools.metamap.MetaMapList: java.lang.Object clone()>",
    "<gorm.tools.utils.GormMetaUtils: org.grails.datastore.mapping.model.PersistentEntity getPersistentEntity(org.grails.datastore.gorm.GormEntity)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.Boolean yakworks_problem_ProblemTraittrait$super$getOk()>",
    "<gorm.tools.job.SyncJobContext: java.lang.Long writePayloadFile(java.util.Collection)>",
    "<gorm.tools.metamap.MetaMapEntityService: java.lang.String toJson(java.lang.Object,java.util.List,java.util.List)>",
    "<gorm.tools.metamap.MetaMapIncludesBuilder: boolean propertyExists(java.lang.String)>",
    "<gorm.tools.problem.ProblemHandler: yakworks.problem.ProblemTrait handleUnexpected(java.lang.Throwable)>",
    "<gorm.tools.job.SyncJobContext: void appendDataResults(yakworks.api.ApiResults)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.i18n.MsgKey getMsg()>",
    "<gorm.tools.repository.artefact.RepositoryArtefactHandler: java.lang.String getRepoBeanName(java.lang.Class)>",
    "<gorm.tools.repository.RepoUtil: void checkCreateData(java.util.Map,gorm.tools.repository.PersistArgs,java.lang.Class)>",
    "<gorm.tools.repository.model.AbstractLinkedEntityRepo: void validateCreate(gorm.tools.model.Persistable,gorm.tools.model.Persistable)>",
    "<gorm.tools.problem.ValidationProblem: java.net.URI getType()>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobContext createJob()>",
    "<gorm.tools.problem.ValidationProblem: void setMsg(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: java.util.List transformResults(yakworks.api.ApiResults)>",
    "<gorm.tools.validation.ApiConstraints: java.util.Map collectContraints()>",
    "<gorm.tools.repository.RepoUtil: void checkData(java.util.Map,java.lang.Class)>",
    "<gorm.tools.metamap.MetaMapIncludesBuilder: gorm.tools.metamap.MetaMapIncludes buildNested(java.util.Map)>",
    "<gorm.tools.problem.ValidationProblem: yakworks.problem.ProblemException yakworks_problem_data_DataProblemTraittrait$super$toException()>",
    "<gorm.tools.job.SyncJobFinishedEvent: gorm.tools.job.SyncJobFinishedEvent of(gorm.tools.job.SyncJobContext)>",
    "<gorm.tools.databinding.EntityMapBinder: java.lang.Class getDomainClassType(java.lang.Object,java.lang.String)>",
    "<gorm.tools.metamap.MetaMap: java.lang.Object clone()>",
    "<gorm.tools.problem.ValidationProblem: gorm.tools.problem.ValidationProblem entity(java.lang.Object)>",
    "<gorm.tools.job.SyncJobStartEvent: gorm.tools.job.SyncJobStartEvent of(gorm.tools.job.SyncJobContext)>",
    "<gorm.tools.problem.ValidationProblem: void setDetail(java.lang.String)>",
    "<gorm.tools.idgen.PooledIdGenerator: java.util.concurrent.atomic.AtomicReference findOrCreate(java.lang.String)>",
    "<gorm.tools.problem.ValidationProblem: void setMsgKey(yakworks.i18n.MsgKey)>",
    "<gorm.tools.job.SyncJobContext: gorm.tools.job.SyncJobEntity finishJob(java.util.List,java.util.List)>",
    "<gorm.tools.problem.ValidationProblem: java.lang.String getDetail()>",
    "<gorm.tools.problem.ValidationProblem: void setPayload(java.lang.Object)>",
    "<gorm.tools.problem.ValidationProblem: void setType(java.net.URI)>",
    "<gorm.tools.metamap.MetaMapList: void setTotalCount(int)>",
    "<gorm.tools.repository.errors.RepoExceptionSupport: java.lang.RuntimeException translateException(java.lang.RuntimeException,java.lang.Object)>"
  ]
}