{
  "0.5.2": [
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void accessKeyNonTrustedKeyTest()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.util.Map getBindingMap(com.okta.test.mock.scenarios.ScenarioDefinition)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: io.restassured.specification.ResponseSpecification statusCodeMatcher(int)>",
    "<com.okta.test.mock.matchers.UrlMatcher$_describeTo_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: com.okta.test.mock.TestScenario getTestScenario()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void wrongAudienceIdTokenJwtTest()>",
    "<com.okta.test.mock.Config$Global: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: com.okta.test.mock.TestScenario com_okta_test_mock_application_ApplicationUnderTesttrait$super$getTestScenario()>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void wrongAudienceAccessTokenJwtTest()>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.GStringTransformer: com.github.tomakehurst.wiremock.http.Response transform(com.github.tomakehurst.wiremock.http.Request,com.github.tomakehurst.wiremock.http.Response,com.github.tomakehurst.wiremock.common.FileSource,com.github.tomakehurst.wiremock.extension.Parameters)>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: java.lang.String getProtectedPath()>",
    "<com.okta.test.mock.Config: void <init>()>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: void followRedirect()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void redirectToLogin()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: com.okta.test.mock.application.ApplicationUnderTest configure(com.okta.test.mock.application.ApplicationUnderTest,com.okta.test.mock.TestScenario)>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_getApplicationUnderTest_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.TckMatchers$2: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: void <init>()>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: void <init>()>",
    "<com.okta.test.mock.matchers.UrlMatcher: java.lang.Object urlMatcher(java.lang.String,java.util.List)>",
    "<com.okta.test.mock.tests.ImplicitRemoteValidationIT: void scopeAccessTest()>",
    "<com.okta.test.mock.Config: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: java.lang.String getState(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$3: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$2: boolean matchesSafely(io.restassured.response.Response)>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure2$_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<com.okta.test.mock.matchers.TckMatchers: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.wiremock.TestUtils: io.restassured.config.RestAssuredConfig browserCompatibleRedirects()>",
    "<com.okta.test.mock.matchers.TckMatchers$3: boolean matchesSafely(io.restassured.response.Response)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void inactiveAccessTokenTest()>",
    "<com.okta.test.mock.matchers.TckMatchers$2: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void scopeAccessTokenTest()>",
    "<com.okta.test.mock.scenarios.Scenario: void <clinit>()>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: void <init>()>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: void <init>()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: io.restassured.response.ExtractableResponse redirectToRemoteLogin()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: java.lang.Object shouldErrorsRedirectToLogin()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void noAuthCodeTest()>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario $INIT(java.lang.Object[])>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: java.lang.String getProtectedPath()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: void stop()>",
    "<com.okta.test.mock.wiremock.GStringTransformer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void issuedInFutureIdTokenJwtTest()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.Config$Global: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowRemoteValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.wiremock.HttpMock: void startMockServer()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void wrongKeyIdIdTokenJwtTest()>",
    "<com.okta.test.mock.wiremock.GStringTransformer: void <init>(java.util.Map[])>",
    "<com.okta.test.mock.matchers.UrlMatcher: boolean matchesSafely(java.lang.String,org.hamcrest.Description)>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.wiremock.GStringTransformer$_transform_closure1: java.util.Map getParams()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.ImplicitRemoteValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario previous()>",
    "<com.okta.test.mock.Config$Global: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.Scenario: void <init>(java.lang.String,int,java.lang.String,com.okta.test.mock.scenarios.ScenarioDefinition)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void invalidSignatureAccessTokenJwtTest()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.matchers.UrlMatcher: java.lang.Object urlMatcher(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$3: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: boolean pollForStartedApplication(int,int)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: org.hamcrest.Matcher authenticateHeader()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void noAuthCodeTest()>",
    "<com.okta.test.mock.matchers.TckMatchers: org.hamcrest.Matcher bodyMatcher(org.hamcrest.Matcher)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: java.lang.String getScenarioName()>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: void configureBindings(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$3: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.Config$Global: java.lang.String getConfigProperty(java.lang.String,java.lang.String)>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: void configureTokens(java.lang.String)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.HttpMock: int getMockPort()>",
    "<com.okta.test.mock.matchers.TckMatchers: org.hamcrest.Matcher header(java.lang.String,org.hamcrest.Matcher)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void unsignedIdTokenJwtTest()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: int getFreePort()>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: com.okta.test.mock.application.ApplicationUnderTest configure(com.okta.test.mock.TestScenario)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void expiredIdTokenJwtTest()>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_getFreePort_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void nonJWTAccessKeyTest()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_createQueryMatchers_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void wrongScopeAccessTokenTest()>",
    "<com.okta.test.mock.matchers.UrlMatcher: void describeTo(org.hamcrest.Description)>",
    "<com.okta.test.mock.matchers.TckMatchers: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: int stop()>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void noToken401Test()>",
    "<com.okta.test.mock.wiremock.TestUtils: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowLocalValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.wiremock.HttpMock: int getMockHttpsPort()>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.TestScenario: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.UrlMatcherTest: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure3: java.util.Map getResult()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: java.lang.Object loginPageLocationMatcher()>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario fromId(java.lang.String)>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.matchers.TckMatchers: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void wrongStateTest()>",
    "<com.okta.test.mock.scenarios.ImplicitRemoteValidationScenarioDefinition: java.util.Map getBindingMap()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void respondWithCode()>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_getApplicationUnderTest_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.matchers.TckMatchers: org.hamcrest.Matcher redirect(org.hamcrest.Matcher)>",
    "<com.okta.test.mock.matchers.UrlMatcher$_describeTo_closure2: org.hamcrest.Description getDescription()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_matchesSafely_closure1: java.lang.Boolean getMatches()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.ImplicitRemoteValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.matchers.UrlMatcher: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.CodeRemoteValidationScenarioDefinition: void configureHttpMock(com.github.tomakehurst.wiremock.WireMockServer,java.lang.String)>",
    "<com.okta.test.mock.wiremock.GStringTransformer$_transform_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.CodeRemoteValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.matchers.TckMatchers$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario valueOf(java.lang.String)>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: void configureHttpMock(com.github.tomakehurst.wiremock.WireMockServer,java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$3: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.wiremock.GStringTransformer$_transform_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: com.okta.test.mock.application.ApplicationUnderTest com_okta_test_mock_application_ApplicationUnderTesttrait$super$configure(com.okta.test.mock.TestScenario)>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.Config$Global: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.scenarios.Scenario: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void inactiveTokenJwtTest()>",
    "<com.okta.test.mock.wiremock.GStringTransformer$_transform_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: void start()>",
    "<com.okta.test.mock.wiremock.HttpMock: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.TestScenario: void <init>()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.Config$Global: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void assertAccessDenied(io.restassured.response.ExtractableResponse)>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowRemoteValidationIT: org.hamcrest.Matcher loginPageLocationMatcher()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: java.lang.String getProtectedPath()>",
    "<com.okta.test.mock.matchers.TckMatchers$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<com.okta.test.mock.wiremock.HttpMock: void stopMockServer()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowRemoteValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.Config$Global: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: void configureHttpMock(com.github.tomakehurst.wiremock.WireMockServer,java.lang.String)>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void invalidSignatureIdTokenJwtTest()>",
    "<com.okta.test.mock.tests.ImplicitRemoteValidationIT: void noToken401()>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: void start()>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: void respondWithCode()>",
    "<com.okta.test.mock.scenarios.ImplicitRemoteValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.TckMatchers$1: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void invalidIssuerIdTokenJwtTest()>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario[] values()>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_getFreePort_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: int getPort(java.lang.String,com.okta.test.mock.TestScenario)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void followRedirect()>",
    "<com.okta.test.mock.wiremock.HttpMock: void <init>()>",
    "<com.okta.test.mock.matchers.TckMatchers$2: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.Config: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.matchers.UrlMatcher$_createQueryMatchers_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.CodeRemoteValidationScenarioDefinition: java.util.Map getBindingMap()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_matchesSafely_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: com.okta.test.mock.TestScenario getTestScenario(com.okta.test.mock.application.ApplicationUnderTest)>",
    "<com.okta.test.mock.matchers.TckMatchers$1: boolean matchesSafely(io.restassured.response.Response)>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.matchers.TckMatchers$2: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.matchers.UrlMatcher: java.util.List createQueryMatchers(java.lang.String)>",
    "<com.okta.test.mock.Config: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<com.okta.test.mock.scenarios.CodeRemoteValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.TckMatchers$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.TckMatchers$3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: void run(org.testng.IHookCallBack,org.testng.ITestResult)>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$2: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_matchesSafely_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<com.okta.test.mock.matchers.TckMatchers$1: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: io.restassured.response.ExtractableResponse redirectToRemoteLogin()>",
    "<com.okta.test.mock.wiremock.TestUtils: byte[] toIntegerBytes(java.math.BigInteger)>",
    "<com.okta.test.mock.wiremock.HttpMock: java.lang.String getBaseUrl()>",
    "<com.okta.test.mock.Config: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.Config$Global: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.matchers.UrlMatcher$_matchesSafely_closure1: org.hamcrest.Description getMismatchDescription()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void respondWithCode()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void wrongStateTest()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void wrongKeyIdAccessTokenJwtTest()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: void <init>()>",
    "<com.okta.test.mock.matchers.TckMatchers$3: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$1: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.wiremock.TestUtils: io.restassured.response.ExtractableResponse followRedirectUntilLocation(io.restassured.response.ExtractableResponse,org.hamcrest.Matcher,int,java.lang.String)>",
    "<com.okta.test.mock.Config$Global: java.lang.String getCodeFlowRedirectPath()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_describeTo_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void followRedirect()>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: java.util.Map getBindingMap()>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowLocalValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure2$_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.TestUtils: java.util.Map parseQuery(java.lang.String)>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_matchesSafely_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario next()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<com.okta.test.mock.matchers.TckMatchers: org.hamcrest.Matcher responseCode(int)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: java.lang.String getProtectedPath()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.HttpMock: void setScenario(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$2: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: void configureHttpMock(com.github.tomakehurst.wiremock.WireMockServer,java.lang.String)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void wrongAudienceAccessTokenTest()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.matchers.TckMatchers$3: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void wrongScopeAccessTokenJwtTest()>",
    "<com.okta.test.mock.matchers.TckMatchers$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: io.restassured.response.ExtractableResponse redirectToRemoteLogin()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: com.okta.test.mock.application.ApplicationUnderTest getApplicationUnderTest(java.lang.String)>",
    "<com.okta.test.mock.matchers.UrlMatcher: void <init>(java.net.URL,java.util.List)>",
    "<com.okta.test.mock.wiremock.HttpMock: java.util.Map getBaseBindingMap()>",
    "<com.okta.test.mock.matchers.TckMatchers: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: org.hamcrest.Matcher loginPageLocationMatcher()>"
  ],
  "0.5.4": [
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void accessKeyNonTrustedKeyTest()>",
    "<com.okta.test.mock.tests.PkceCodeFlowRemoteValidationIT: java.lang.String getProtectedPath()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.util.Map getBindingMap(com.okta.test.mock.scenarios.ScenarioDefinition)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: java.lang.String getQueryParamValue(java.lang.String,java.lang.String)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: io.restassured.specification.ResponseSpecification statusCodeMatcher(int)>",
    "<com.okta.test.mock.matchers.UrlMatcher$_describeTo_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: com.okta.test.mock.TestScenario getTestScenario()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void wrongAudienceIdTokenJwtTest()>",
    "<com.okta.test.mock.Config$Global: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: com.okta.test.mock.TestScenario com_okta_test_mock_application_ApplicationUnderTesttrait$super$getTestScenario()>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void wrongAudienceAccessTokenJwtTest()>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.GStringTransformer: com.github.tomakehurst.wiremock.http.Response transform(com.github.tomakehurst.wiremock.http.Request,com.github.tomakehurst.wiremock.http.Response,com.github.tomakehurst.wiremock.common.FileSource,com.github.tomakehurst.wiremock.extension.Parameters)>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: java.lang.String getProtectedPath()>",
    "<com.okta.test.mock.Config: void <init>()>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: void followRedirect()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void redirectToLogin()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: com.okta.test.mock.application.ApplicationUnderTest configure(com.okta.test.mock.application.ApplicationUnderTest,com.okta.test.mock.TestScenario)>",
    "<com.okta.test.mock.scenarios.PkceCodeRemoteValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_getApplicationUnderTest_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.TckMatchers$2: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: void <init>()>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: void <init>()>",
    "<com.okta.test.mock.matchers.UrlMatcher: java.lang.Object urlMatcher(java.lang.String,java.util.List)>",
    "<com.okta.test.mock.wiremock.TestUtils: io.restassured.response.ExtractableResponse followRedirectUntilLocation(io.restassured.response.ExtractableResponse,org.hamcrest.Matcher,int,java.lang.String,io.restassured.filter.Filter)>",
    "<com.okta.test.mock.tests.ImplicitRemoteValidationIT: void scopeAccessTest()>",
    "<com.okta.test.mock.Config: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.NonceHolder: java.lang.String getNonce(java.lang.String)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: java.lang.String getState(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$3: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$2: boolean matchesSafely(io.restassured.response.Response)>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure2$_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<com.okta.test.mock.matchers.TckMatchers: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.wiremock.TestUtils: io.restassured.config.RestAssuredConfig browserCompatibleRedirects()>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition$JwtWithNonce: void <init>(com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition,java.lang.String,io.jsonwebtoken.JwtBuilder)>",
    "<com.okta.test.mock.matchers.TckMatchers$3: boolean matchesSafely(io.restassured.response.Response)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void inactiveAccessTokenTest()>",
    "<com.okta.test.mock.matchers.TckMatchers$2: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void scopeAccessTokenTest()>",
    "<com.okta.test.mock.scenarios.Scenario: void <clinit>()>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: void <init>()>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: void <init>()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: io.restassured.response.ExtractableResponse redirectToRemoteLogin()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: java.lang.Object shouldErrorsRedirectToLogin()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void noAuthCodeTest()>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario $INIT(java.lang.Object[])>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: java.lang.String getProtectedPath()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: void stop()>",
    "<com.okta.test.mock.wiremock.GStringTransformer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void issuedInFutureIdTokenJwtTest()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.PkceCodeFlowRemoteValidationIT: void followRedirect()>",
    "<com.okta.test.mock.Config$Global: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.PkceCodeFlowRemoteValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowRemoteValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void wrongKeyIdIdTokenJwtTest()>",
    "<com.okta.test.mock.wiremock.HttpMock: void startMockServer()>",
    "<com.okta.test.mock.wiremock.GStringTransformer: void <init>(java.util.Map[])>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.matchers.UrlMatcher: boolean matchesSafely(java.lang.String,org.hamcrest.Description)>",
    "<com.okta.test.mock.wiremock.GStringTransformer$_transform_closure1: java.util.Map getParams()>",
    "<com.okta.test.mock.scenarios.NonceHolder: void <init>()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.ImplicitRemoteValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario previous()>",
    "<com.okta.test.mock.Config$Global: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.Scenario: void <init>(java.lang.String,int,java.lang.String,com.okta.test.mock.scenarios.ScenarioDefinition)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void invalidSignatureAccessTokenJwtTest()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.scenarios.NonceHolder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.TckMatchers$3: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: boolean pollForStartedApplication(int,int)>",
    "<com.okta.test.mock.matchers.UrlMatcher: java.lang.Object urlMatcher(java.lang.String)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void noAuthCodeTest()>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: org.hamcrest.Matcher authenticateHeader()>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition$JwtWithNonce: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers: org.hamcrest.Matcher bodyMatcher(org.hamcrest.Matcher)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: java.lang.String getScenarioName()>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: void configureBindings(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$3: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.Config$Global: java.lang.String getConfigProperty(java.lang.String,java.lang.String)>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: void configureTokens(java.lang.String)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.HttpMock: int getMockPort()>",
    "<com.okta.test.mock.matchers.TckMatchers: org.hamcrest.Matcher header(java.lang.String,org.hamcrest.Matcher)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void unsignedIdTokenJwtTest()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: int getFreePort()>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: com.okta.test.mock.application.ApplicationUnderTest configure(com.okta.test.mock.TestScenario)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void expiredIdTokenJwtTest()>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition$JwtWithNonce: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_getFreePort_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void nonJWTAccessKeyTest()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_createQueryMatchers_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void wrongScopeAccessTokenTest()>",
    "<com.okta.test.mock.matchers.UrlMatcher: void describeTo(org.hamcrest.Description)>",
    "<com.okta.test.mock.matchers.TckMatchers: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: int stop()>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void noToken401Test()>",
    "<com.okta.test.mock.wiremock.TestUtils: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowLocalValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_dump_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.HttpMock: int getMockHttpsPort()>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.TestScenario: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.UrlMatcherTest: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure3: java.util.Map getResult()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void setNonce(java.lang.String,java.lang.String)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: java.lang.Object loginPageLocationMatcher()>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario fromId(java.lang.String)>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.matchers.TckMatchers: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void wrongStateTest()>",
    "<com.okta.test.mock.scenarios.ImplicitRemoteValidationScenarioDefinition: java.util.Map getBindingMap()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void respondWithCode()>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_getApplicationUnderTest_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.tests.PkceCodeFlowRemoteValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.TckMatchers: org.hamcrest.Matcher redirect(org.hamcrest.Matcher)>",
    "<com.okta.test.mock.matchers.UrlMatcher$_describeTo_closure2: org.hamcrest.Description getDescription()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_matchesSafely_closure1: java.lang.Boolean getMatches()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.PkceCodeRemoteValidationScenarioDefinition: java.util.Map getBindingMap()>",
    "<com.okta.test.mock.matchers.UrlMatcher: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.ImplicitRemoteValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.scenarios.NonceHolder: void <clinit>()>",
    "<com.okta.test.mock.scenarios.CodeRemoteValidationScenarioDefinition: void configureHttpMock(com.github.tomakehurst.wiremock.WireMockServer,java.lang.String)>",
    "<com.okta.test.mock.wiremock.GStringTransformer$_transform_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.CodeRemoteValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.matchers.TckMatchers$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario valueOf(java.lang.String)>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition$JwtWithNonce: java.lang.String apply(com.github.tomakehurst.wiremock.http.Request)>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: void configureHttpMock(com.github.tomakehurst.wiremock.WireMockServer,java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$3: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.wiremock.GStringTransformer$_transform_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: com.okta.test.mock.application.ApplicationUnderTest com_okta_test_mock_application_ApplicationUnderTesttrait$super$configure(com.okta.test.mock.TestScenario)>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.Config$Global: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.scenarios.Scenario: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void inactiveTokenJwtTest()>",
    "<com.okta.test.mock.wiremock.GStringTransformer$_transform_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.GStringTransformer$_transform_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: void start()>",
    "<com.okta.test.mock.wiremock.HttpMock: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.TestScenario: void <init>()>",
    "<com.okta.test.mock.scenarios.PkceCodeRemoteValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_dump_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: java.lang.String getNonce(java.lang.String)>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.Config$Global: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowRemoteValidationIT: org.hamcrest.Matcher loginPageLocationMatcher()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void assertAccessDenied(io.restassured.response.ExtractableResponse)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: java.lang.String getProtectedPath()>",
    "<com.okta.test.mock.matchers.TckMatchers$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void rpInitiatedLogoutTest()>",
    "<com.okta.test.mock.wiremock.HttpMock: void stopMockServer()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowRemoteValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.Config$Global: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.ImplicitRemoteValidationIT: void invalidScopeTest()>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: void configureHttpMock(com.github.tomakehurst.wiremock.WireMockServer,java.lang.String)>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void invalidSignatureIdTokenJwtTest()>",
    "<com.okta.test.mock.tests.ImplicitRemoteValidationIT: void noToken401()>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: void start()>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: void respondWithCode()>",
    "<com.okta.test.mock.scenarios.ImplicitRemoteValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.TckMatchers$1: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void invalidIssuerIdTokenJwtTest()>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition$JwtWithNonce: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario[] values()>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_getFreePort_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: void dump()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: int getPort(java.lang.String,com.okta.test.mock.TestScenario)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void followRedirect()>",
    "<com.okta.test.mock.wiremock.HttpMock: void <init>()>",
    "<com.okta.test.mock.matchers.TckMatchers$2: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.Config: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.PkceCodeFlowRemoteValidationIT: io.restassured.response.ExtractableResponse redirectToRemoteLogin()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_createQueryMatchers_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.CodeRemoteValidationScenarioDefinition: java.util.Map getBindingMap()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_matchesSafely_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: com.okta.test.mock.TestScenario getTestScenario(com.okta.test.mock.application.ApplicationUnderTest)>",
    "<com.okta.test.mock.matchers.TckMatchers$1: boolean matchesSafely(io.restassured.response.Response)>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition$JwtWithNonce: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.matchers.TckMatchers$2: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.matchers.UrlMatcher: java.util.List createQueryMatchers(java.lang.String)>",
    "<com.okta.test.mock.Config: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<com.okta.test.mock.scenarios.PkceCodeRemoteValidationScenarioDefinition: void configureHttpMock(com.github.tomakehurst.wiremock.WireMockServer,java.lang.String)>",
    "<com.okta.test.mock.scenarios.CodeRemoteValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.GStringTransformer$_transform_closure2: com.github.tomakehurst.wiremock.http.Request getRequest()>",
    "<com.okta.test.mock.matchers.TckMatchers$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.TckMatchers$3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: void run(org.testng.IHookCallBack,org.testng.ITestResult)>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$2: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_matchesSafely_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<com.okta.test.mock.matchers.TckMatchers$1: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: io.restassured.response.ExtractableResponse redirectToRemoteLogin()>",
    "<com.okta.test.mock.tests.PkceCodeFlowRemoteValidationIT: org.hamcrest.Matcher loginPageLocationMatcher()>",
    "<com.okta.test.mock.wiremock.TestUtils: byte[] toIntegerBytes(java.math.BigInteger)>",
    "<com.okta.test.mock.wiremock.HttpMock: java.lang.String getBaseUrl()>",
    "<com.okta.test.mock.Config: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.Config$Global: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.matchers.UrlMatcher$_matchesSafely_closure1: org.hamcrest.Description getMismatchDescription()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void wrongStateTest()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void wrongKeyIdAccessTokenJwtTest()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: void <init>()>",
    "<com.okta.test.mock.matchers.TckMatchers$3: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$1: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.Config$Global: java.lang.String getCodeFlowRedirectPath()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_describeTo_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void followRedirect()>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: java.util.Map getBindingMap()>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowLocalValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure2$_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.TestUtils: java.util.Map parseQuery(java.lang.String)>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: io.restassured.response.ExtractableResponse doLogin(io.restassured.filter.Filter)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.tests.PkceCodeFlowRemoteValidationIT: void respondWithCode()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_matchesSafely_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario next()>",
    "<com.okta.test.mock.wiremock.GStringTransformer$_transform_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<com.okta.test.mock.matchers.TckMatchers: org.hamcrest.Matcher responseCode(int)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: java.lang.String getProtectedPath()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.HttpMock: void setScenario(java.lang.String)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: com.okta.test.mock.Config loadConfig(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$2: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: void configureHttpMock(com.github.tomakehurst.wiremock.WireMockServer,java.lang.String)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void wrongAudienceAccessTokenTest()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.matchers.TckMatchers$3: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void wrongScopeAccessTokenJwtTest()>",
    "<com.okta.test.mock.matchers.TckMatchers$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: io.restassured.response.ExtractableResponse redirectToRemoteLogin()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: com.okta.test.mock.application.ApplicationUnderTest getApplicationUnderTest(java.lang.String)>",
    "<com.okta.test.mock.matchers.UrlMatcher: void <init>(java.net.URL,java.util.List)>",
    "<com.okta.test.mock.wiremock.HttpMock: java.util.Map getBaseBindingMap()>",
    "<com.okta.test.mock.matchers.TckMatchers: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: org.hamcrest.Matcher loginPageLocationMatcher()>"
  ],
  "0.5.3": [
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void accessKeyNonTrustedKeyTest()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.util.Map getBindingMap(com.okta.test.mock.scenarios.ScenarioDefinition)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: io.restassured.specification.ResponseSpecification statusCodeMatcher(int)>",
    "<com.okta.test.mock.matchers.UrlMatcher$_describeTo_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: com.okta.test.mock.TestScenario getTestScenario()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void wrongAudienceIdTokenJwtTest()>",
    "<com.okta.test.mock.Config$Global: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: com.okta.test.mock.TestScenario com_okta_test_mock_application_ApplicationUnderTesttrait$super$getTestScenario()>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void wrongAudienceAccessTokenJwtTest()>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.GStringTransformer: com.github.tomakehurst.wiremock.http.Response transform(com.github.tomakehurst.wiremock.http.Request,com.github.tomakehurst.wiremock.http.Response,com.github.tomakehurst.wiremock.common.FileSource,com.github.tomakehurst.wiremock.extension.Parameters)>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: java.lang.String getProtectedPath()>",
    "<com.okta.test.mock.Config: void <init>()>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: void followRedirect()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void redirectToLogin()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: com.okta.test.mock.application.ApplicationUnderTest configure(com.okta.test.mock.application.ApplicationUnderTest,com.okta.test.mock.TestScenario)>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_getApplicationUnderTest_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.TckMatchers$2: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: void <init>()>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: void <init>()>",
    "<com.okta.test.mock.matchers.UrlMatcher: java.lang.Object urlMatcher(java.lang.String,java.util.List)>",
    "<com.okta.test.mock.tests.ImplicitRemoteValidationIT: void scopeAccessTest()>",
    "<com.okta.test.mock.Config: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: java.lang.String getState(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$3: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$2: boolean matchesSafely(io.restassured.response.Response)>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure2$_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<com.okta.test.mock.matchers.TckMatchers: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.wiremock.TestUtils: io.restassured.config.RestAssuredConfig browserCompatibleRedirects()>",
    "<com.okta.test.mock.matchers.TckMatchers$3: boolean matchesSafely(io.restassured.response.Response)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void inactiveAccessTokenTest()>",
    "<com.okta.test.mock.matchers.TckMatchers$2: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void scopeAccessTokenTest()>",
    "<com.okta.test.mock.scenarios.Scenario: void <clinit>()>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: void <init>()>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: void <init>()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: io.restassured.response.ExtractableResponse redirectToRemoteLogin()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: java.lang.Object shouldErrorsRedirectToLogin()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void noAuthCodeTest()>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario $INIT(java.lang.Object[])>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: java.lang.String getProtectedPath()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: void stop()>",
    "<com.okta.test.mock.wiremock.GStringTransformer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void issuedInFutureIdTokenJwtTest()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.Config$Global: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowRemoteValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.wiremock.HttpMock: void startMockServer()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void wrongKeyIdIdTokenJwtTest()>",
    "<com.okta.test.mock.wiremock.GStringTransformer: void <init>(java.util.Map[])>",
    "<com.okta.test.mock.matchers.UrlMatcher: boolean matchesSafely(java.lang.String,org.hamcrest.Description)>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.wiremock.GStringTransformer$_transform_closure1: java.util.Map getParams()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.ImplicitRemoteValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario previous()>",
    "<com.okta.test.mock.Config$Global: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.Scenario: void <init>(java.lang.String,int,java.lang.String,com.okta.test.mock.scenarios.ScenarioDefinition)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void invalidSignatureAccessTokenJwtTest()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.matchers.UrlMatcher: java.lang.Object urlMatcher(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$3: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: boolean pollForStartedApplication(int,int)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: org.hamcrest.Matcher authenticateHeader()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void noAuthCodeTest()>",
    "<com.okta.test.mock.matchers.TckMatchers: org.hamcrest.Matcher bodyMatcher(org.hamcrest.Matcher)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: java.lang.String getScenarioName()>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: void configureBindings(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$3: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.Config$Global: java.lang.String getConfigProperty(java.lang.String,java.lang.String)>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: void configureTokens(java.lang.String)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.HttpMock: int getMockPort()>",
    "<com.okta.test.mock.matchers.TckMatchers: org.hamcrest.Matcher header(java.lang.String,org.hamcrest.Matcher)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void unsignedIdTokenJwtTest()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: int getFreePort()>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: com.okta.test.mock.application.ApplicationUnderTest configure(com.okta.test.mock.TestScenario)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void expiredIdTokenJwtTest()>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_getFreePort_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void nonJWTAccessKeyTest()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_createQueryMatchers_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void wrongScopeAccessTokenTest()>",
    "<com.okta.test.mock.matchers.UrlMatcher: void describeTo(org.hamcrest.Description)>",
    "<com.okta.test.mock.matchers.TckMatchers: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: int stop()>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void noToken401Test()>",
    "<com.okta.test.mock.wiremock.TestUtils: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowLocalValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.wiremock.HttpMock: int getMockHttpsPort()>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.TestScenario: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.UrlMatcherTest: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure3: java.util.Map getResult()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: java.lang.Object loginPageLocationMatcher()>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario fromId(java.lang.String)>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.matchers.TckMatchers: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void wrongStateTest()>",
    "<com.okta.test.mock.scenarios.ImplicitRemoteValidationScenarioDefinition: java.util.Map getBindingMap()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void respondWithCode()>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_getApplicationUnderTest_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.matchers.TckMatchers: org.hamcrest.Matcher redirect(org.hamcrest.Matcher)>",
    "<com.okta.test.mock.matchers.UrlMatcher$_describeTo_closure2: org.hamcrest.Description getDescription()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_matchesSafely_closure1: java.lang.Boolean getMatches()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.ImplicitRemoteValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.matchers.UrlMatcher: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.CodeRemoteValidationScenarioDefinition: void configureHttpMock(com.github.tomakehurst.wiremock.WireMockServer,java.lang.String)>",
    "<com.okta.test.mock.wiremock.GStringTransformer$_transform_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.CodeRemoteValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.matchers.TckMatchers$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario valueOf(java.lang.String)>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: void configureHttpMock(com.github.tomakehurst.wiremock.WireMockServer,java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$3: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.wiremock.GStringTransformer$_transform_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: com.okta.test.mock.application.ApplicationUnderTest com_okta_test_mock_application_ApplicationUnderTesttrait$super$configure(com.okta.test.mock.TestScenario)>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.Config$Global: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.scenarios.Scenario: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void inactiveTokenJwtTest()>",
    "<com.okta.test.mock.wiremock.GStringTransformer$_transform_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: void start()>",
    "<com.okta.test.mock.wiremock.HttpMock: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.TestScenario: void <init>()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.Config$Global: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void assertAccessDenied(io.restassured.response.ExtractableResponse)>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowRemoteValidationIT: org.hamcrest.Matcher loginPageLocationMatcher()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: java.lang.String getProtectedPath()>",
    "<com.okta.test.mock.matchers.TckMatchers$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<com.okta.test.mock.wiremock.HttpMock: void stopMockServer()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowRemoteValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.Config$Global: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: void configureHttpMock(com.github.tomakehurst.wiremock.WireMockServer,java.lang.String)>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void invalidSignatureIdTokenJwtTest()>",
    "<com.okta.test.mock.tests.ImplicitRemoteValidationIT: void noToken401()>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: void start()>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: void respondWithCode()>",
    "<com.okta.test.mock.scenarios.ImplicitRemoteValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.TckMatchers$1: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void invalidIssuerIdTokenJwtTest()>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario[] values()>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_getFreePort_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: int getPort(java.lang.String,com.okta.test.mock.TestScenario)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void followRedirect()>",
    "<com.okta.test.mock.wiremock.HttpMock: void <init>()>",
    "<com.okta.test.mock.matchers.TckMatchers$2: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.Config: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.matchers.UrlMatcher$_createQueryMatchers_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.CodeRemoteValidationScenarioDefinition: java.util.Map getBindingMap()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_matchesSafely_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: com.okta.test.mock.TestScenario getTestScenario(com.okta.test.mock.application.ApplicationUnderTest)>",
    "<com.okta.test.mock.matchers.TckMatchers$1: boolean matchesSafely(io.restassured.response.Response)>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.matchers.TckMatchers$2: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.matchers.UrlMatcher: java.util.List createQueryMatchers(java.lang.String)>",
    "<com.okta.test.mock.Config: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<com.okta.test.mock.scenarios.CodeRemoteValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.TckMatchers$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.TckMatchers$3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: void run(org.testng.IHookCallBack,org.testng.ITestResult)>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$2: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_matchesSafely_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<com.okta.test.mock.matchers.TckMatchers$1: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: io.restassured.response.ExtractableResponse redirectToRemoteLogin()>",
    "<com.okta.test.mock.wiremock.TestUtils: byte[] toIntegerBytes(java.math.BigInteger)>",
    "<com.okta.test.mock.wiremock.HttpMock: java.lang.String getBaseUrl()>",
    "<com.okta.test.mock.Config: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.Config$Global: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.matchers.UrlMatcher$_matchesSafely_closure1: org.hamcrest.Description getMismatchDescription()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void respondWithCode()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void wrongStateTest()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void wrongKeyIdAccessTokenJwtTest()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: void <init>()>",
    "<com.okta.test.mock.matchers.TckMatchers$3: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$1: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.wiremock.TestUtils: io.restassured.response.ExtractableResponse followRedirectUntilLocation(io.restassured.response.ExtractableResponse,org.hamcrest.Matcher,int,java.lang.String)>",
    "<com.okta.test.mock.Config$Global: java.lang.String getCodeFlowRedirectPath()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_describeTo_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void followRedirect()>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: java.util.Map getBindingMap()>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowLocalValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure2$_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.TestUtils: java.util.Map parseQuery(java.lang.String)>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_matchesSafely_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario next()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<com.okta.test.mock.matchers.TckMatchers: org.hamcrest.Matcher responseCode(int)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: java.lang.String getProtectedPath()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.HttpMock: void setScenario(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$2: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: void configureHttpMock(com.github.tomakehurst.wiremock.WireMockServer,java.lang.String)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void wrongAudienceAccessTokenTest()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.matchers.TckMatchers$3: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void wrongScopeAccessTokenJwtTest()>",
    "<com.okta.test.mock.matchers.TckMatchers$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: io.restassured.response.ExtractableResponse redirectToRemoteLogin()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: com.okta.test.mock.application.ApplicationUnderTest getApplicationUnderTest(java.lang.String)>",
    "<com.okta.test.mock.matchers.UrlMatcher: void <init>(java.net.URL,java.util.List)>",
    "<com.okta.test.mock.wiremock.HttpMock: java.util.Map getBaseBindingMap()>",
    "<com.okta.test.mock.matchers.TckMatchers: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: org.hamcrest.Matcher loginPageLocationMatcher()>"
  ],
  "0.5.7": [
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void accessKeyNonTrustedKeyTest()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.util.Map getBindingMap(com.okta.test.mock.scenarios.ScenarioDefinition)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: io.restassured.specification.ResponseSpecification statusCodeMatcher(int)>",
    "<com.okta.test.mock.matchers.UrlMatcher$_describeTo_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: com.okta.test.mock.TestScenario getTestScenario()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void wrongAudienceIdTokenJwtTest()>",
    "<com.okta.test.mock.Config$Global: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: com.okta.test.mock.TestScenario com_okta_test_mock_application_ApplicationUnderTesttrait$super$getTestScenario()>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void wrongAudienceAccessTokenJwtTest()>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.GStringTransformer: com.github.tomakehurst.wiremock.http.Response transform(com.github.tomakehurst.wiremock.http.Request,com.github.tomakehurst.wiremock.http.Response,com.github.tomakehurst.wiremock.common.FileSource,com.github.tomakehurst.wiremock.extension.Parameters)>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: java.lang.String getProtectedPath()>",
    "<com.okta.test.mock.Config: void <init>()>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: void followRedirect()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void redirectToLogin()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: com.okta.test.mock.application.ApplicationUnderTest configure(com.okta.test.mock.application.ApplicationUnderTest,com.okta.test.mock.TestScenario)>",
    "<com.okta.test.mock.tests.UrlParser$Trait$Helper: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.PkceCodeFlowRemoteValidationIT: void testGroupInClaimToAuthority()>",
    "<com.okta.test.mock.scenarios.PkceCodeRemoteValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_getApplicationUnderTest_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.TckMatchers$2: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: void <init>()>",
    "<com.okta.test.mock.tests.BaseValidationIT: java.lang.String com_okta_test_mock_tests_UrlParsertrait$super$getQueryParamValue(java.lang.String,java.lang.String)>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: void <init>()>",
    "<com.okta.test.mock.matchers.UrlMatcher: java.lang.Object urlMatcher(java.lang.String,java.util.List)>",
    "<com.okta.test.mock.wiremock.TestUtils: io.restassured.response.ExtractableResponse followRedirectUntilLocation(io.restassured.response.ExtractableResponse,org.hamcrest.Matcher,int,java.lang.String,io.restassured.filter.Filter)>",
    "<com.okta.test.mock.tests.ImplicitRemoteValidationIT: void scopeAccessTest()>",
    "<com.okta.test.mock.Config: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.NonceHolder: java.lang.String getNonce(java.lang.String)>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure2$_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<com.okta.test.mock.matchers.TckMatchers$3: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$2: boolean matchesSafely(io.restassured.response.Response)>",
    "<com.okta.test.mock.matchers.TckMatchers: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.wiremock.TestUtils: io.restassured.config.RestAssuredConfig browserCompatibleRedirects()>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition$JwtWithNonce: void <init>(com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition,java.lang.String,io.jsonwebtoken.JwtBuilder)>",
    "<com.okta.test.mock.matchers.TckMatchers$3: boolean matchesSafely(io.restassured.response.Response)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void inactiveAccessTokenTest()>",
    "<com.okta.test.mock.matchers.TckMatchers$2: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void scopeAccessTokenTest()>",
    "<com.okta.test.mock.scenarios.Scenario: void <clinit>()>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: void <init>()>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: void <init>()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: io.restassured.response.ExtractableResponse redirectToRemoteLogin()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: java.lang.Object shouldErrorsRedirectToLogin()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void noAuthCodeTest()>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario $INIT(java.lang.Object[])>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: java.lang.String getProtectedPath()>",
    "<com.okta.test.mock.tests.BaseValidationIT: java.lang.String getNonce(java.lang.String)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: void stop()>",
    "<com.okta.test.mock.wiremock.GStringTransformer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void issuedInFutureIdTokenJwtTest()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.PkceCodeFlowRemoteValidationIT: void followRedirect()>",
    "<com.okta.test.mock.Config$Global: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowRemoteValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.wiremock.HttpMock: void startMockServer()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void wrongKeyIdIdTokenJwtTest()>",
    "<com.okta.test.mock.wiremock.GStringTransformer: void <init>(java.util.Map[])>",
    "<com.okta.test.mock.matchers.UrlMatcher: boolean matchesSafely(java.lang.String,org.hamcrest.Description)>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.tests.UrlParser$Trait$Helper: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.tests.ImplicitRemoteValidationIT: void testNoAuthTokenReturns401()>",
    "<com.okta.test.mock.wiremock.GStringTransformer$_transform_closure1: java.util.Map getParams()>",
    "<com.okta.test.mock.scenarios.NonceHolder: void <init>()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.ImplicitRemoteValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.BaseValidationIT: org.hamcrest.Matcher loginPageLocationMatcher(java.lang.String)>",
    "<com.okta.test.mock.tests.BaseValidationIT: void com_okta_test_mock_tests_UrlParsertrait$super$setNonce(java.lang.String,java.lang.String)>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario previous()>",
    "<com.okta.test.mock.Config$Global: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.Scenario: void <init>(java.lang.String,int,java.lang.String,com.okta.test.mock.scenarios.ScenarioDefinition)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void invalidSignatureAccessTokenJwtTest()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.matchers.UrlMatcher: java.lang.Object urlMatcher(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$3: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: boolean pollForStartedApplication(int,int)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: org.hamcrest.Matcher authenticateHeader()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void noAuthCodeTest()>",
    "<com.okta.test.mock.scenarios.NonceHolder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition$JwtWithNonce: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers: org.hamcrest.Matcher bodyMatcher(org.hamcrest.Matcher)>",
    "<com.okta.test.mock.tests.BaseValidationIT: java.lang.String com_okta_test_mock_tests_UrlParsertrait$super$getState(java.lang.String)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: java.lang.String getScenarioName()>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: void configureBindings(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$3: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.Config$Global: java.lang.String getConfigProperty(java.lang.String,java.lang.String)>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: void configureTokens(java.lang.String)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.HttpMock: int getMockPort()>",
    "<com.okta.test.mock.matchers.TckMatchers: org.hamcrest.Matcher header(java.lang.String,org.hamcrest.Matcher)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void unsignedIdTokenJwtTest()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: int getFreePort()>",
    "<com.okta.test.mock.tests.UrlParser$Trait$Helper: void setNonce(com.okta.test.mock.tests.UrlParser,java.lang.String,java.lang.String)>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: com.okta.test.mock.application.ApplicationUnderTest configure(com.okta.test.mock.TestScenario)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void expiredIdTokenJwtTest()>",
    "<com.okta.test.mock.tests.BaseValidationIT: java.lang.String getState(java.lang.String)>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition$JwtWithNonce: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_getFreePort_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void nonJWTAccessKeyTest()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_createQueryMatchers_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void wrongScopeAccessTokenTest()>",
    "<com.okta.test.mock.matchers.UrlMatcher: void describeTo(org.hamcrest.Description)>",
    "<com.okta.test.mock.matchers.TckMatchers: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: int stop()>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void noToken401Test()>",
    "<com.okta.test.mock.tests.UrlParser$Trait$Helper: java.lang.String getNonce(com.okta.test.mock.tests.UrlParser,java.lang.String)>",
    "<com.okta.test.mock.wiremock.TestUtils: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowLocalValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_dump_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.HttpMock: int getMockHttpsPort()>",
    "<com.okta.test.mock.tests.UrlParser$Trait$Helper: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.BaseValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.TestScenario: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.UrlMatcherTest: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure3: java.util.Map getResult()>",
    "<com.okta.test.mock.tests.UrlParser$Trait$Helper: java.lang.String getState(com.okta.test.mock.tests.UrlParser,java.lang.String)>",
    "<com.okta.test.mock.tests.UrlParser$Trait$Helper: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario fromId(java.lang.String)>",
    "<com.okta.test.mock.tests.BaseValidationIT: java.lang.String getQueryParamValue(java.lang.String,java.lang.String)>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.matchers.TckMatchers: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.UrlParser$Trait$Helper: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void wrongStateTest()>",
    "<com.okta.test.mock.scenarios.ImplicitRemoteValidationScenarioDefinition: java.util.Map getBindingMap()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void respondWithCode()>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_getApplicationUnderTest_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.matchers.TckMatchers: org.hamcrest.Matcher redirect(org.hamcrest.Matcher)>",
    "<com.okta.test.mock.matchers.UrlMatcher$_describeTo_closure2: org.hamcrest.Description getDescription()>",
    "<com.okta.test.mock.tests.PkceCodeFlowRemoteValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_matchesSafely_closure1: java.lang.Boolean getMatches()>",
    "<com.okta.test.mock.scenarios.PkceCodeRemoteValidationScenarioDefinition: java.util.Map getBindingMap()>",
    "<com.okta.test.mock.scenarios.ImplicitRemoteValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.scenarios.NonceHolder: void <clinit>()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.UrlMatcher: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.CodeRemoteValidationScenarioDefinition: void configureHttpMock(com.github.tomakehurst.wiremock.WireMockServer,java.lang.String)>",
    "<com.okta.test.mock.scenarios.CodeRemoteValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.wiremock.GStringTransformer$_transform_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.TckMatchers$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario valueOf(java.lang.String)>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition$JwtWithNonce: java.lang.String apply(com.github.tomakehurst.wiremock.http.Request)>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: void configureHttpMock(com.github.tomakehurst.wiremock.WireMockServer,java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$3: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.wiremock.GStringTransformer$_transform_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: com.okta.test.mock.application.ApplicationUnderTest com_okta_test_mock_application_ApplicationUnderTesttrait$super$configure(com.okta.test.mock.TestScenario)>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.Config$Global: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.tests.BaseValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.scenarios.Scenario: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void inactiveTokenJwtTest()>",
    "<com.okta.test.mock.wiremock.GStringTransformer$_transform_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.GStringTransformer$_transform_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: void start()>",
    "<com.okta.test.mock.wiremock.HttpMock: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.TestScenario: void <init>()>",
    "<com.okta.test.mock.scenarios.PkceCodeRemoteValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_dump_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.Config$Global: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void testGroupInClaimToAuthority()>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowRemoteValidationIT: org.hamcrest.Matcher loginPageLocationMatcher()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void assertAccessDenied(io.restassured.response.ExtractableResponse)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: java.lang.String getProtectedPath()>",
    "<com.okta.test.mock.matchers.TckMatchers$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void rpInitiatedLogoutTest()>",
    "<com.okta.test.mock.wiremock.HttpMock: void stopMockServer()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowRemoteValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.Config$Global: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.ImplicitRemoteValidationIT: void invalidScopeTest()>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: void configureHttpMock(com.github.tomakehurst.wiremock.WireMockServer,java.lang.String)>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void invalidSignatureIdTokenJwtTest()>",
    "<com.okta.test.mock.tests.ImplicitRemoteValidationIT: void noToken401()>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: void start()>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: void respondWithCode()>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario[] values()>",
    "<com.okta.test.mock.matchers.TckMatchers$1: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void invalidIssuerIdTokenJwtTest()>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition$JwtWithNonce: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.ImplicitRemoteValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_getFreePort_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: void dump()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: int getPort(java.lang.String,com.okta.test.mock.TestScenario)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void followRedirect()>",
    "<com.okta.test.mock.wiremock.HttpMock: void <init>()>",
    "<com.okta.test.mock.matchers.TckMatchers$2: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.Config: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.PkceCodeFlowRemoteValidationIT: io.restassured.response.ExtractableResponse redirectToRemoteLogin()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_createQueryMatchers_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.CodeRemoteValidationScenarioDefinition: java.util.Map getBindingMap()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_matchesSafely_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: com.okta.test.mock.TestScenario getTestScenario(com.okta.test.mock.application.ApplicationUnderTest)>",
    "<com.okta.test.mock.tests.BaseValidationIT: java.lang.String getProtectedPath()>",
    "<com.okta.test.mock.matchers.TckMatchers$1: boolean matchesSafely(io.restassured.response.Response)>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition$JwtWithNonce: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.matchers.TckMatchers$2: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.matchers.UrlMatcher: java.util.List createQueryMatchers(java.lang.String)>",
    "<com.okta.test.mock.Config: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<com.okta.test.mock.scenarios.PkceCodeRemoteValidationScenarioDefinition: void configureHttpMock(com.github.tomakehurst.wiremock.WireMockServer,java.lang.String)>",
    "<com.okta.test.mock.scenarios.CodeRemoteValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.GStringTransformer$_transform_closure2: com.github.tomakehurst.wiremock.http.Request getRequest()>",
    "<com.okta.test.mock.matchers.TckMatchers$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.BaseValidationIT: io.restassured.response.ExtractableResponse doLogin(io.restassured.filter.Filter,java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: void run(org.testng.IHookCallBack,org.testng.ITestResult)>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.tests.PkceCodeFlowRemoteValidationIT: void testInvalidGroupClaimMapping()>",
    "<com.okta.test.mock.matchers.TckMatchers$2: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_matchesSafely_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<com.okta.test.mock.matchers.TckMatchers$1: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: io.restassured.response.ExtractableResponse redirectToRemoteLogin()>",
    "<com.okta.test.mock.tests.BaseValidationIT: java.lang.String getRedirectUriPath()>",
    "<com.okta.test.mock.tests.PkceCodeFlowRemoteValidationIT: org.hamcrest.Matcher loginPageLocationMatcher()>",
    "<com.okta.test.mock.wiremock.TestUtils: byte[] toIntegerBytes(java.math.BigInteger)>",
    "<com.okta.test.mock.wiremock.HttpMock: java.lang.String getBaseUrl()>",
    "<com.okta.test.mock.tests.UrlParser$Trait$Helper: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.Config$Global: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.Config: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_matchesSafely_closure1: org.hamcrest.Description getMismatchDescription()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void wrongStateTest()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void wrongKeyIdAccessTokenJwtTest()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void assertAccessDenied(io.restassured.response.ExtractableResponse,org.hamcrest.Matcher)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: void <init>()>",
    "<com.okta.test.mock.matchers.TckMatchers$3: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.tests.BaseValidationIT: io.restassured.response.ExtractableResponse redirectToRemoteLogin()>",
    "<com.okta.test.mock.matchers.TckMatchers$1: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.Config$Global: java.lang.String getCodeFlowRedirectPath()>",
    "<com.okta.test.mock.tests.UrlParser$Trait$Helper: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.matchers.UrlMatcher$_describeTo_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void followRedirect()>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: java.util.Map getBindingMap()>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowLocalValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure2$_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.TestUtils: java.util.Map parseQuery(java.lang.String)>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.BaseValidationIT: java.lang.String com_okta_test_mock_tests_UrlParsertrait$super$getNonce(java.lang.String)>",
    "<com.okta.test.mock.tests.PkceCodeFlowRemoteValidationIT: void respondWithCode()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_matchesSafely_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario next()>",
    "<com.okta.test.mock.wiremock.GStringTransformer$_transform_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<com.okta.test.mock.matchers.TckMatchers: org.hamcrest.Matcher responseCode(int)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: com.okta.test.mock.Config loadConfig(java.lang.String)>",
    "<com.okta.test.mock.wiremock.HttpMock: void setScenario(java.lang.String)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.TckMatchers$2: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: void configureHttpMock(com.github.tomakehurst.wiremock.WireMockServer,java.lang.String)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void testInvalidGroupClaimMapping()>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void wrongAudienceAccessTokenTest()>",
    "<com.okta.test.mock.tests.UrlParser$Trait$Helper: java.lang.String getQueryParamValue(com.okta.test.mock.tests.UrlParser,java.lang.String,java.lang.String)>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.matchers.TckMatchers$3: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void wrongScopeAccessTokenJwtTest()>",
    "<com.okta.test.mock.matchers.TckMatchers$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: io.restassured.response.ExtractableResponse redirectToRemoteLogin()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: com.okta.test.mock.application.ApplicationUnderTest getApplicationUnderTest(java.lang.String)>",
    "<com.okta.test.mock.matchers.UrlMatcher: void <init>(java.net.URL,java.util.List)>",
    "<com.okta.test.mock.wiremock.HttpMock: java.util.Map getBaseBindingMap()>",
    "<com.okta.test.mock.matchers.TckMatchers: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: org.hamcrest.Matcher loginPageLocationMatcher()>"
  ],
  "0.5.6": [
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void accessKeyNonTrustedKeyTest()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.util.Map getBindingMap(com.okta.test.mock.scenarios.ScenarioDefinition)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: io.restassured.specification.ResponseSpecification statusCodeMatcher(int)>",
    "<com.okta.test.mock.matchers.UrlMatcher$_describeTo_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: com.okta.test.mock.TestScenario getTestScenario()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void wrongAudienceIdTokenJwtTest()>",
    "<com.okta.test.mock.Config$Global: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: com.okta.test.mock.TestScenario com_okta_test_mock_application_ApplicationUnderTesttrait$super$getTestScenario()>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void wrongAudienceAccessTokenJwtTest()>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.GStringTransformer: com.github.tomakehurst.wiremock.http.Response transform(com.github.tomakehurst.wiremock.http.Request,com.github.tomakehurst.wiremock.http.Response,com.github.tomakehurst.wiremock.common.FileSource,com.github.tomakehurst.wiremock.extension.Parameters)>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: java.lang.String getProtectedPath()>",
    "<com.okta.test.mock.Config: void <init>()>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: void followRedirect()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void redirectToLogin()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: com.okta.test.mock.application.ApplicationUnderTest configure(com.okta.test.mock.application.ApplicationUnderTest,com.okta.test.mock.TestScenario)>",
    "<com.okta.test.mock.tests.UrlParser$Trait$Helper: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.PkceCodeFlowRemoteValidationIT: void testGroupInClaimToAuthority()>",
    "<com.okta.test.mock.scenarios.PkceCodeRemoteValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_getApplicationUnderTest_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.TckMatchers$2: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: void <init>()>",
    "<com.okta.test.mock.tests.BaseValidationIT: java.lang.String com_okta_test_mock_tests_UrlParsertrait$super$getQueryParamValue(java.lang.String,java.lang.String)>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: void <init>()>",
    "<com.okta.test.mock.matchers.UrlMatcher: java.lang.Object urlMatcher(java.lang.String,java.util.List)>",
    "<com.okta.test.mock.wiremock.TestUtils: io.restassured.response.ExtractableResponse followRedirectUntilLocation(io.restassured.response.ExtractableResponse,org.hamcrest.Matcher,int,java.lang.String,io.restassured.filter.Filter)>",
    "<com.okta.test.mock.tests.ImplicitRemoteValidationIT: void scopeAccessTest()>",
    "<com.okta.test.mock.Config: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.NonceHolder: java.lang.String getNonce(java.lang.String)>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure2$_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<com.okta.test.mock.matchers.TckMatchers$3: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$2: boolean matchesSafely(io.restassured.response.Response)>",
    "<com.okta.test.mock.matchers.TckMatchers: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.wiremock.TestUtils: io.restassured.config.RestAssuredConfig browserCompatibleRedirects()>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition$JwtWithNonce: void <init>(com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition,java.lang.String,io.jsonwebtoken.JwtBuilder)>",
    "<com.okta.test.mock.matchers.TckMatchers$3: boolean matchesSafely(io.restassured.response.Response)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void inactiveAccessTokenTest()>",
    "<com.okta.test.mock.matchers.TckMatchers$2: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void scopeAccessTokenTest()>",
    "<com.okta.test.mock.scenarios.Scenario: void <clinit>()>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: void <init>()>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: void <init>()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: io.restassured.response.ExtractableResponse redirectToRemoteLogin()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: java.lang.Object shouldErrorsRedirectToLogin()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void noAuthCodeTest()>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario $INIT(java.lang.Object[])>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: java.lang.String getProtectedPath()>",
    "<com.okta.test.mock.tests.BaseValidationIT: java.lang.String getNonce(java.lang.String)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: void stop()>",
    "<com.okta.test.mock.wiremock.GStringTransformer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void issuedInFutureIdTokenJwtTest()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.PkceCodeFlowRemoteValidationIT: void followRedirect()>",
    "<com.okta.test.mock.Config$Global: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowRemoteValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.wiremock.HttpMock: void startMockServer()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void wrongKeyIdIdTokenJwtTest()>",
    "<com.okta.test.mock.wiremock.GStringTransformer: void <init>(java.util.Map[])>",
    "<com.okta.test.mock.matchers.UrlMatcher: boolean matchesSafely(java.lang.String,org.hamcrest.Description)>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.tests.UrlParser$Trait$Helper: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.wiremock.GStringTransformer$_transform_closure1: java.util.Map getParams()>",
    "<com.okta.test.mock.scenarios.NonceHolder: void <init>()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.ImplicitRemoteValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.BaseValidationIT: org.hamcrest.Matcher loginPageLocationMatcher(java.lang.String)>",
    "<com.okta.test.mock.tests.BaseValidationIT: void com_okta_test_mock_tests_UrlParsertrait$super$setNonce(java.lang.String,java.lang.String)>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario previous()>",
    "<com.okta.test.mock.Config$Global: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.Scenario: void <init>(java.lang.String,int,java.lang.String,com.okta.test.mock.scenarios.ScenarioDefinition)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void invalidSignatureAccessTokenJwtTest()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.matchers.UrlMatcher: java.lang.Object urlMatcher(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$3: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: boolean pollForStartedApplication(int,int)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: org.hamcrest.Matcher authenticateHeader()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void noAuthCodeTest()>",
    "<com.okta.test.mock.scenarios.NonceHolder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition$JwtWithNonce: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers: org.hamcrest.Matcher bodyMatcher(org.hamcrest.Matcher)>",
    "<com.okta.test.mock.tests.BaseValidationIT: java.lang.String com_okta_test_mock_tests_UrlParsertrait$super$getState(java.lang.String)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: java.lang.String getScenarioName()>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: void configureBindings(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$3: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.Config$Global: java.lang.String getConfigProperty(java.lang.String,java.lang.String)>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: void configureTokens(java.lang.String)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.HttpMock: int getMockPort()>",
    "<com.okta.test.mock.matchers.TckMatchers: org.hamcrest.Matcher header(java.lang.String,org.hamcrest.Matcher)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void unsignedIdTokenJwtTest()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: int getFreePort()>",
    "<com.okta.test.mock.tests.UrlParser$Trait$Helper: void setNonce(com.okta.test.mock.tests.UrlParser,java.lang.String,java.lang.String)>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: com.okta.test.mock.application.ApplicationUnderTest configure(com.okta.test.mock.TestScenario)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void expiredIdTokenJwtTest()>",
    "<com.okta.test.mock.tests.BaseValidationIT: java.lang.String getState(java.lang.String)>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition$JwtWithNonce: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_getFreePort_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void nonJWTAccessKeyTest()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_createQueryMatchers_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void wrongScopeAccessTokenTest()>",
    "<com.okta.test.mock.matchers.UrlMatcher: void describeTo(org.hamcrest.Description)>",
    "<com.okta.test.mock.matchers.TckMatchers: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: int stop()>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void noToken401Test()>",
    "<com.okta.test.mock.tests.UrlParser$Trait$Helper: java.lang.String getNonce(com.okta.test.mock.tests.UrlParser,java.lang.String)>",
    "<com.okta.test.mock.wiremock.TestUtils: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowLocalValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_dump_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.HttpMock: int getMockHttpsPort()>",
    "<com.okta.test.mock.tests.UrlParser$Trait$Helper: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.BaseValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.TestScenario: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.UrlMatcherTest: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure3: java.util.Map getResult()>",
    "<com.okta.test.mock.tests.UrlParser$Trait$Helper: java.lang.String getState(com.okta.test.mock.tests.UrlParser,java.lang.String)>",
    "<com.okta.test.mock.tests.UrlParser$Trait$Helper: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario fromId(java.lang.String)>",
    "<com.okta.test.mock.tests.BaseValidationIT: java.lang.String getQueryParamValue(java.lang.String,java.lang.String)>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.matchers.TckMatchers: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.UrlParser$Trait$Helper: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void wrongStateTest()>",
    "<com.okta.test.mock.scenarios.ImplicitRemoteValidationScenarioDefinition: java.util.Map getBindingMap()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void respondWithCode()>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_getApplicationUnderTest_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.matchers.TckMatchers: org.hamcrest.Matcher redirect(org.hamcrest.Matcher)>",
    "<com.okta.test.mock.matchers.UrlMatcher$_describeTo_closure2: org.hamcrest.Description getDescription()>",
    "<com.okta.test.mock.tests.PkceCodeFlowRemoteValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_matchesSafely_closure1: java.lang.Boolean getMatches()>",
    "<com.okta.test.mock.scenarios.PkceCodeRemoteValidationScenarioDefinition: java.util.Map getBindingMap()>",
    "<com.okta.test.mock.scenarios.ImplicitRemoteValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.scenarios.NonceHolder: void <clinit>()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.UrlMatcher: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.CodeRemoteValidationScenarioDefinition: void configureHttpMock(com.github.tomakehurst.wiremock.WireMockServer,java.lang.String)>",
    "<com.okta.test.mock.scenarios.CodeRemoteValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.wiremock.GStringTransformer$_transform_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.TckMatchers$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario valueOf(java.lang.String)>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition$JwtWithNonce: java.lang.String apply(com.github.tomakehurst.wiremock.http.Request)>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: void configureHttpMock(com.github.tomakehurst.wiremock.WireMockServer,java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$3: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.wiremock.GStringTransformer$_transform_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: com.okta.test.mock.application.ApplicationUnderTest com_okta_test_mock_application_ApplicationUnderTesttrait$super$configure(com.okta.test.mock.TestScenario)>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.Config$Global: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.tests.BaseValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.scenarios.Scenario: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void inactiveTokenJwtTest()>",
    "<com.okta.test.mock.wiremock.GStringTransformer$_transform_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.GStringTransformer$_transform_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: void start()>",
    "<com.okta.test.mock.wiremock.HttpMock: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.TestScenario: void <init>()>",
    "<com.okta.test.mock.scenarios.PkceCodeRemoteValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_dump_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.Config$Global: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void testGroupInClaimToAuthority()>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowRemoteValidationIT: org.hamcrest.Matcher loginPageLocationMatcher()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void assertAccessDenied(io.restassured.response.ExtractableResponse)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: java.lang.String getProtectedPath()>",
    "<com.okta.test.mock.matchers.TckMatchers$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void rpInitiatedLogoutTest()>",
    "<com.okta.test.mock.wiremock.HttpMock: void stopMockServer()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowRemoteValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.Config$Global: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.ImplicitRemoteValidationIT: void invalidScopeTest()>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: void configureHttpMock(com.github.tomakehurst.wiremock.WireMockServer,java.lang.String)>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void invalidSignatureIdTokenJwtTest()>",
    "<com.okta.test.mock.tests.ImplicitRemoteValidationIT: void noToken401()>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: void start()>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: void respondWithCode()>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario[] values()>",
    "<com.okta.test.mock.matchers.TckMatchers$1: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void invalidIssuerIdTokenJwtTest()>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition$JwtWithNonce: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.ImplicitRemoteValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_getFreePort_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: void dump()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: int getPort(java.lang.String,com.okta.test.mock.TestScenario)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void followRedirect()>",
    "<com.okta.test.mock.wiremock.HttpMock: void <init>()>",
    "<com.okta.test.mock.matchers.TckMatchers$2: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.Config: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.PkceCodeFlowRemoteValidationIT: io.restassured.response.ExtractableResponse redirectToRemoteLogin()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_createQueryMatchers_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.CodeRemoteValidationScenarioDefinition: java.util.Map getBindingMap()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_matchesSafely_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: com.okta.test.mock.TestScenario getTestScenario(com.okta.test.mock.application.ApplicationUnderTest)>",
    "<com.okta.test.mock.tests.BaseValidationIT: java.lang.String getProtectedPath()>",
    "<com.okta.test.mock.matchers.TckMatchers$1: boolean matchesSafely(io.restassured.response.Response)>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition$JwtWithNonce: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.matchers.TckMatchers$2: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.matchers.UrlMatcher: java.util.List createQueryMatchers(java.lang.String)>",
    "<com.okta.test.mock.Config: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<com.okta.test.mock.scenarios.PkceCodeRemoteValidationScenarioDefinition: void configureHttpMock(com.github.tomakehurst.wiremock.WireMockServer,java.lang.String)>",
    "<com.okta.test.mock.scenarios.CodeRemoteValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.GStringTransformer$_transform_closure2: com.github.tomakehurst.wiremock.http.Request getRequest()>",
    "<com.okta.test.mock.matchers.TckMatchers$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.BaseValidationIT: io.restassured.response.ExtractableResponse doLogin(io.restassured.filter.Filter,java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: void run(org.testng.IHookCallBack,org.testng.ITestResult)>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.tests.PkceCodeFlowRemoteValidationIT: void testInvalidGroupClaimMapping()>",
    "<com.okta.test.mock.matchers.TckMatchers$2: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_matchesSafely_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<com.okta.test.mock.matchers.TckMatchers$1: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: io.restassured.response.ExtractableResponse redirectToRemoteLogin()>",
    "<com.okta.test.mock.tests.BaseValidationIT: java.lang.String getRedirectUriPath()>",
    "<com.okta.test.mock.tests.PkceCodeFlowRemoteValidationIT: org.hamcrest.Matcher loginPageLocationMatcher()>",
    "<com.okta.test.mock.wiremock.TestUtils: byte[] toIntegerBytes(java.math.BigInteger)>",
    "<com.okta.test.mock.wiremock.HttpMock: java.lang.String getBaseUrl()>",
    "<com.okta.test.mock.tests.UrlParser$Trait$Helper: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.Config$Global: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.Config: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_matchesSafely_closure1: org.hamcrest.Description getMismatchDescription()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void wrongStateTest()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void wrongKeyIdAccessTokenJwtTest()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void assertAccessDenied(io.restassured.response.ExtractableResponse,org.hamcrest.Matcher)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: void <init>()>",
    "<com.okta.test.mock.matchers.TckMatchers$3: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.tests.BaseValidationIT: io.restassured.response.ExtractableResponse redirectToRemoteLogin()>",
    "<com.okta.test.mock.matchers.TckMatchers$1: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.Config$Global: java.lang.String getCodeFlowRedirectPath()>",
    "<com.okta.test.mock.tests.UrlParser$Trait$Helper: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.matchers.UrlMatcher$_describeTo_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void followRedirect()>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: java.util.Map getBindingMap()>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowLocalValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure2$_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.TestUtils: java.util.Map parseQuery(java.lang.String)>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.BaseValidationIT: java.lang.String com_okta_test_mock_tests_UrlParsertrait$super$getNonce(java.lang.String)>",
    "<com.okta.test.mock.tests.PkceCodeFlowRemoteValidationIT: void respondWithCode()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_matchesSafely_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario next()>",
    "<com.okta.test.mock.wiremock.GStringTransformer$_transform_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<com.okta.test.mock.matchers.TckMatchers: org.hamcrest.Matcher responseCode(int)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: com.okta.test.mock.Config loadConfig(java.lang.String)>",
    "<com.okta.test.mock.wiremock.HttpMock: void setScenario(java.lang.String)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.TckMatchers$2: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: void configureHttpMock(com.github.tomakehurst.wiremock.WireMockServer,java.lang.String)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void testInvalidGroupClaimMapping()>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void wrongAudienceAccessTokenTest()>",
    "<com.okta.test.mock.tests.UrlParser$Trait$Helper: java.lang.String getQueryParamValue(com.okta.test.mock.tests.UrlParser,java.lang.String,java.lang.String)>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.matchers.TckMatchers$3: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void wrongScopeAccessTokenJwtTest()>",
    "<com.okta.test.mock.matchers.TckMatchers$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: io.restassured.response.ExtractableResponse redirectToRemoteLogin()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: com.okta.test.mock.application.ApplicationUnderTest getApplicationUnderTest(java.lang.String)>",
    "<com.okta.test.mock.matchers.UrlMatcher: void <init>(java.net.URL,java.util.List)>",
    "<com.okta.test.mock.wiremock.HttpMock: java.util.Map getBaseBindingMap()>",
    "<com.okta.test.mock.matchers.TckMatchers: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: org.hamcrest.Matcher loginPageLocationMatcher()>"
  ],
  "0.5.5": [
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void accessKeyNonTrustedKeyTest()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.util.Map getBindingMap(com.okta.test.mock.scenarios.ScenarioDefinition)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: io.restassured.specification.ResponseSpecification statusCodeMatcher(int)>",
    "<com.okta.test.mock.matchers.UrlMatcher$_describeTo_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: com.okta.test.mock.TestScenario getTestScenario()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void wrongAudienceIdTokenJwtTest()>",
    "<com.okta.test.mock.Config$Global: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: com.okta.test.mock.TestScenario com_okta_test_mock_application_ApplicationUnderTesttrait$super$getTestScenario()>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void wrongAudienceAccessTokenJwtTest()>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.GStringTransformer: com.github.tomakehurst.wiremock.http.Response transform(com.github.tomakehurst.wiremock.http.Request,com.github.tomakehurst.wiremock.http.Response,com.github.tomakehurst.wiremock.common.FileSource,com.github.tomakehurst.wiremock.extension.Parameters)>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: java.lang.String getProtectedPath()>",
    "<com.okta.test.mock.Config: void <init>()>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: void followRedirect()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void redirectToLogin()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: com.okta.test.mock.application.ApplicationUnderTest configure(com.okta.test.mock.application.ApplicationUnderTest,com.okta.test.mock.TestScenario)>",
    "<com.okta.test.mock.tests.UrlParser$Trait$Helper: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.PkceCodeFlowRemoteValidationIT: void testGroupInClaimToAuthority()>",
    "<com.okta.test.mock.scenarios.PkceCodeRemoteValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_getApplicationUnderTest_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.TckMatchers$2: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: void <init>()>",
    "<com.okta.test.mock.tests.BaseValidationIT: java.lang.String com_okta_test_mock_tests_UrlParsertrait$super$getQueryParamValue(java.lang.String,java.lang.String)>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: void <init>()>",
    "<com.okta.test.mock.matchers.UrlMatcher: java.lang.Object urlMatcher(java.lang.String,java.util.List)>",
    "<com.okta.test.mock.wiremock.TestUtils: io.restassured.response.ExtractableResponse followRedirectUntilLocation(io.restassured.response.ExtractableResponse,org.hamcrest.Matcher,int,java.lang.String,io.restassured.filter.Filter)>",
    "<com.okta.test.mock.tests.ImplicitRemoteValidationIT: void scopeAccessTest()>",
    "<com.okta.test.mock.Config: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.NonceHolder: java.lang.String getNonce(java.lang.String)>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure2$_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<com.okta.test.mock.matchers.TckMatchers$3: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$2: boolean matchesSafely(io.restassured.response.Response)>",
    "<com.okta.test.mock.matchers.TckMatchers: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.wiremock.TestUtils: io.restassured.config.RestAssuredConfig browserCompatibleRedirects()>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition$JwtWithNonce: void <init>(com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition,java.lang.String,io.jsonwebtoken.JwtBuilder)>",
    "<com.okta.test.mock.matchers.TckMatchers$3: boolean matchesSafely(io.restassured.response.Response)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void inactiveAccessTokenTest()>",
    "<com.okta.test.mock.matchers.TckMatchers$2: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void scopeAccessTokenTest()>",
    "<com.okta.test.mock.scenarios.Scenario: void <clinit>()>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: void <init>()>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: void <init>()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: io.restassured.response.ExtractableResponse redirectToRemoteLogin()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: java.lang.Object shouldErrorsRedirectToLogin()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void noAuthCodeTest()>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario $INIT(java.lang.Object[])>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: java.lang.String getProtectedPath()>",
    "<com.okta.test.mock.tests.BaseValidationIT: java.lang.String getNonce(java.lang.String)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: void stop()>",
    "<com.okta.test.mock.wiremock.GStringTransformer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void issuedInFutureIdTokenJwtTest()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.PkceCodeFlowRemoteValidationIT: void followRedirect()>",
    "<com.okta.test.mock.Config$Global: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowRemoteValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.wiremock.HttpMock: void startMockServer()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void wrongKeyIdIdTokenJwtTest()>",
    "<com.okta.test.mock.wiremock.GStringTransformer: void <init>(java.util.Map[])>",
    "<com.okta.test.mock.matchers.UrlMatcher: boolean matchesSafely(java.lang.String,org.hamcrest.Description)>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.tests.UrlParser$Trait$Helper: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.wiremock.GStringTransformer$_transform_closure1: java.util.Map getParams()>",
    "<com.okta.test.mock.scenarios.NonceHolder: void <init>()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.ImplicitRemoteValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.BaseValidationIT: org.hamcrest.Matcher loginPageLocationMatcher(java.lang.String)>",
    "<com.okta.test.mock.tests.BaseValidationIT: void com_okta_test_mock_tests_UrlParsertrait$super$setNonce(java.lang.String,java.lang.String)>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario previous()>",
    "<com.okta.test.mock.Config$Global: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.Scenario: void <init>(java.lang.String,int,java.lang.String,com.okta.test.mock.scenarios.ScenarioDefinition)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void invalidSignatureAccessTokenJwtTest()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.matchers.UrlMatcher: java.lang.Object urlMatcher(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$3: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: boolean pollForStartedApplication(int,int)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: org.hamcrest.Matcher authenticateHeader()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void noAuthCodeTest()>",
    "<com.okta.test.mock.scenarios.NonceHolder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition$JwtWithNonce: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers: org.hamcrest.Matcher bodyMatcher(org.hamcrest.Matcher)>",
    "<com.okta.test.mock.tests.BaseValidationIT: java.lang.String com_okta_test_mock_tests_UrlParsertrait$super$getState(java.lang.String)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: java.lang.String getScenarioName()>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: void configureBindings(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$3: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.Config$Global: java.lang.String getConfigProperty(java.lang.String,java.lang.String)>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: void configureTokens(java.lang.String)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.HttpMock: int getMockPort()>",
    "<com.okta.test.mock.matchers.TckMatchers: org.hamcrest.Matcher header(java.lang.String,org.hamcrest.Matcher)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void unsignedIdTokenJwtTest()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: int getFreePort()>",
    "<com.okta.test.mock.tests.UrlParser$Trait$Helper: void setNonce(com.okta.test.mock.tests.UrlParser,java.lang.String,java.lang.String)>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: com.okta.test.mock.application.ApplicationUnderTest configure(com.okta.test.mock.TestScenario)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void expiredIdTokenJwtTest()>",
    "<com.okta.test.mock.tests.BaseValidationIT: java.lang.String getState(java.lang.String)>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition$JwtWithNonce: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_getFreePort_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void nonJWTAccessKeyTest()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_createQueryMatchers_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void wrongScopeAccessTokenTest()>",
    "<com.okta.test.mock.matchers.UrlMatcher: void describeTo(org.hamcrest.Description)>",
    "<com.okta.test.mock.matchers.TckMatchers: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: int stop()>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void noToken401Test()>",
    "<com.okta.test.mock.tests.UrlParser$Trait$Helper: java.lang.String getNonce(com.okta.test.mock.tests.UrlParser,java.lang.String)>",
    "<com.okta.test.mock.wiremock.TestUtils: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowLocalValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_dump_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.HttpMock: int getMockHttpsPort()>",
    "<com.okta.test.mock.tests.UrlParser$Trait$Helper: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.BaseValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.TestScenario: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.UrlMatcherTest: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure3: java.util.Map getResult()>",
    "<com.okta.test.mock.tests.UrlParser$Trait$Helper: java.lang.String getState(com.okta.test.mock.tests.UrlParser,java.lang.String)>",
    "<com.okta.test.mock.tests.UrlParser$Trait$Helper: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario fromId(java.lang.String)>",
    "<com.okta.test.mock.tests.BaseValidationIT: java.lang.String getQueryParamValue(java.lang.String,java.lang.String)>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.matchers.TckMatchers: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.UrlParser$Trait$Helper: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void wrongStateTest()>",
    "<com.okta.test.mock.scenarios.ImplicitRemoteValidationScenarioDefinition: java.util.Map getBindingMap()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void respondWithCode()>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_getApplicationUnderTest_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.matchers.TckMatchers: org.hamcrest.Matcher redirect(org.hamcrest.Matcher)>",
    "<com.okta.test.mock.matchers.UrlMatcher$_describeTo_closure2: org.hamcrest.Description getDescription()>",
    "<com.okta.test.mock.tests.PkceCodeFlowRemoteValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_matchesSafely_closure1: java.lang.Boolean getMatches()>",
    "<com.okta.test.mock.scenarios.PkceCodeRemoteValidationScenarioDefinition: java.util.Map getBindingMap()>",
    "<com.okta.test.mock.scenarios.ImplicitRemoteValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.scenarios.NonceHolder: void <clinit>()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.UrlMatcher: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.CodeRemoteValidationScenarioDefinition: void configureHttpMock(com.github.tomakehurst.wiremock.WireMockServer,java.lang.String)>",
    "<com.okta.test.mock.scenarios.CodeRemoteValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.wiremock.GStringTransformer$_transform_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.TckMatchers$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario valueOf(java.lang.String)>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition$JwtWithNonce: java.lang.String apply(com.github.tomakehurst.wiremock.http.Request)>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: void configureHttpMock(com.github.tomakehurst.wiremock.WireMockServer,java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$3: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.wiremock.GStringTransformer$_transform_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: com.okta.test.mock.application.ApplicationUnderTest com_okta_test_mock_application_ApplicationUnderTesttrait$super$configure(com.okta.test.mock.TestScenario)>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.Config$Global: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.tests.BaseValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.scenarios.Scenario: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void inactiveTokenJwtTest()>",
    "<com.okta.test.mock.wiremock.GStringTransformer$_transform_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.GStringTransformer$_transform_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: void start()>",
    "<com.okta.test.mock.wiremock.HttpMock: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.TestScenario: void <init>()>",
    "<com.okta.test.mock.scenarios.PkceCodeRemoteValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_dump_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.Config$Global: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void testGroupInClaimToAuthority()>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowRemoteValidationIT: org.hamcrest.Matcher loginPageLocationMatcher()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void assertAccessDenied(io.restassured.response.ExtractableResponse)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: java.lang.String getProtectedPath()>",
    "<com.okta.test.mock.matchers.TckMatchers$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void rpInitiatedLogoutTest()>",
    "<com.okta.test.mock.wiremock.HttpMock: void stopMockServer()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowRemoteValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.Config$Global: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.ImplicitRemoteValidationIT: void invalidScopeTest()>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: void configureHttpMock(com.github.tomakehurst.wiremock.WireMockServer,java.lang.String)>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void invalidSignatureIdTokenJwtTest()>",
    "<com.okta.test.mock.tests.ImplicitRemoteValidationIT: void noToken401()>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: void start()>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: void respondWithCode()>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario[] values()>",
    "<com.okta.test.mock.matchers.TckMatchers$1: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void invalidIssuerIdTokenJwtTest()>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition$JwtWithNonce: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.ImplicitRemoteValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_getFreePort_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: void dump()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: int getPort(java.lang.String,com.okta.test.mock.TestScenario)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void followRedirect()>",
    "<com.okta.test.mock.wiremock.HttpMock: void <init>()>",
    "<com.okta.test.mock.matchers.TckMatchers$2: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.Config: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.PkceCodeFlowRemoteValidationIT: io.restassured.response.ExtractableResponse redirectToRemoteLogin()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_createQueryMatchers_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.CodeRemoteValidationScenarioDefinition: java.util.Map getBindingMap()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_matchesSafely_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: com.okta.test.mock.TestScenario getTestScenario(com.okta.test.mock.application.ApplicationUnderTest)>",
    "<com.okta.test.mock.tests.BaseValidationIT: java.lang.String getProtectedPath()>",
    "<com.okta.test.mock.matchers.TckMatchers$1: boolean matchesSafely(io.restassured.response.Response)>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition$JwtWithNonce: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.matchers.TckMatchers$2: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.matchers.UrlMatcher: java.util.List createQueryMatchers(java.lang.String)>",
    "<com.okta.test.mock.Config: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<com.okta.test.mock.scenarios.PkceCodeRemoteValidationScenarioDefinition: void configureHttpMock(com.github.tomakehurst.wiremock.WireMockServer,java.lang.String)>",
    "<com.okta.test.mock.scenarios.CodeRemoteValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.GStringTransformer$_transform_closure2: com.github.tomakehurst.wiremock.http.Request getRequest()>",
    "<com.okta.test.mock.matchers.TckMatchers$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.BaseValidationIT: io.restassured.response.ExtractableResponse doLogin(io.restassured.filter.Filter,java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: void run(org.testng.IHookCallBack,org.testng.ITestResult)>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.tests.PkceCodeFlowRemoteValidationIT: void testInvalidGroupClaimMapping()>",
    "<com.okta.test.mock.matchers.TckMatchers$2: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_matchesSafely_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<com.okta.test.mock.matchers.TckMatchers$1: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: io.restassured.response.ExtractableResponse redirectToRemoteLogin()>",
    "<com.okta.test.mock.tests.BaseValidationIT: java.lang.String getRedirectUriPath()>",
    "<com.okta.test.mock.tests.PkceCodeFlowRemoteValidationIT: org.hamcrest.Matcher loginPageLocationMatcher()>",
    "<com.okta.test.mock.wiremock.TestUtils: byte[] toIntegerBytes(java.math.BigInteger)>",
    "<com.okta.test.mock.wiremock.HttpMock: java.lang.String getBaseUrl()>",
    "<com.okta.test.mock.tests.UrlParser$Trait$Helper: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.Config$Global: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.Config: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_matchesSafely_closure1: org.hamcrest.Description getMismatchDescription()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void wrongStateTest()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void wrongKeyIdAccessTokenJwtTest()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: void <init>()>",
    "<com.okta.test.mock.matchers.TckMatchers$3: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.tests.BaseValidationIT: io.restassured.response.ExtractableResponse redirectToRemoteLogin()>",
    "<com.okta.test.mock.matchers.TckMatchers$1: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.Config$Global: java.lang.String getCodeFlowRedirectPath()>",
    "<com.okta.test.mock.tests.UrlParser$Trait$Helper: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.matchers.UrlMatcher$_describeTo_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void followRedirect()>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: java.util.Map getBindingMap()>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowLocalValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure2$_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.TestUtils: java.util.Map parseQuery(java.lang.String)>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.BaseValidationIT: java.lang.String com_okta_test_mock_tests_UrlParsertrait$super$getNonce(java.lang.String)>",
    "<com.okta.test.mock.tests.PkceCodeFlowRemoteValidationIT: void respondWithCode()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_matchesSafely_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario next()>",
    "<com.okta.test.mock.wiremock.GStringTransformer$_transform_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<com.okta.test.mock.matchers.TckMatchers: org.hamcrest.Matcher responseCode(int)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: com.okta.test.mock.Config loadConfig(java.lang.String)>",
    "<com.okta.test.mock.wiremock.HttpMock: void setScenario(java.lang.String)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.TckMatchers$2: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: void configureHttpMock(com.github.tomakehurst.wiremock.WireMockServer,java.lang.String)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void testInvalidGroupClaimMapping()>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void wrongAudienceAccessTokenTest()>",
    "<com.okta.test.mock.tests.UrlParser$Trait$Helper: java.lang.String getQueryParamValue(com.okta.test.mock.tests.UrlParser,java.lang.String,java.lang.String)>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.matchers.TckMatchers$3: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void wrongScopeAccessTokenJwtTest()>",
    "<com.okta.test.mock.matchers.TckMatchers$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: io.restassured.response.ExtractableResponse redirectToRemoteLogin()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: com.okta.test.mock.application.ApplicationUnderTest getApplicationUnderTest(java.lang.String)>",
    "<com.okta.test.mock.matchers.UrlMatcher: void <init>(java.net.URL,java.util.List)>",
    "<com.okta.test.mock.wiremock.HttpMock: java.util.Map getBaseBindingMap()>",
    "<com.okta.test.mock.matchers.TckMatchers: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: org.hamcrest.Matcher loginPageLocationMatcher()>"
  ],
  "0.5.1": [
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void accessKeyNonTrustedKeyTest()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.util.Map getBindingMap(com.okta.test.mock.scenarios.ScenarioDefinition)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: io.restassured.specification.ResponseSpecification statusCodeMatcher(int)>",
    "<com.okta.test.mock.matchers.UrlMatcher$_describeTo_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: com.okta.test.mock.TestScenario getTestScenario()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void wrongAudienceIdTokenJwtTest()>",
    "<com.okta.test.mock.Config$Global: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: com.okta.test.mock.TestScenario com_okta_test_mock_application_ApplicationUnderTesttrait$super$getTestScenario()>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void wrongAudienceAccessTokenJwtTest()>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.GStringTransformer: com.github.tomakehurst.wiremock.http.Response transform(com.github.tomakehurst.wiremock.http.Request,com.github.tomakehurst.wiremock.http.Response,com.github.tomakehurst.wiremock.common.FileSource,com.github.tomakehurst.wiremock.extension.Parameters)>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: java.lang.String getProtectedPath()>",
    "<com.okta.test.mock.Config: void <init>()>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: void followRedirect()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void redirectToLogin()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: com.okta.test.mock.application.ApplicationUnderTest configure(com.okta.test.mock.application.ApplicationUnderTest,com.okta.test.mock.TestScenario)>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_getApplicationUnderTest_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.TckMatchers$2: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: void <init>()>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: void <init>()>",
    "<com.okta.test.mock.matchers.UrlMatcher: java.lang.Object urlMatcher(java.lang.String,java.util.List)>",
    "<com.okta.test.mock.tests.ImplicitRemoteValidationIT: void scopeAccessTest()>",
    "<com.okta.test.mock.Config: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: java.lang.String getState(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$3: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$2: boolean matchesSafely(io.restassured.response.Response)>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure2$_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<com.okta.test.mock.matchers.TckMatchers: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.wiremock.TestUtils: io.restassured.config.RestAssuredConfig browserCompatibleRedirects()>",
    "<com.okta.test.mock.matchers.TckMatchers$3: boolean matchesSafely(io.restassured.response.Response)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void inactiveAccessTokenTest()>",
    "<com.okta.test.mock.matchers.TckMatchers$2: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void scopeAccessTokenTest()>",
    "<com.okta.test.mock.scenarios.Scenario: void <clinit>()>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: void <init>()>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: void <init>()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: io.restassured.response.ExtractableResponse redirectToRemoteLogin()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: java.lang.Object shouldErrorsRedirectToLogin()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void noAuthCodeTest()>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario $INIT(java.lang.Object[])>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: java.lang.String getProtectedPath()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: void stop()>",
    "<com.okta.test.mock.wiremock.GStringTransformer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void issuedInFutureIdTokenJwtTest()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.Config$Global: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowRemoteValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.wiremock.HttpMock: void startMockServer()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void wrongKeyIdIdTokenJwtTest()>",
    "<com.okta.test.mock.wiremock.GStringTransformer: void <init>(java.util.Map[])>",
    "<com.okta.test.mock.matchers.UrlMatcher: boolean matchesSafely(java.lang.String,org.hamcrest.Description)>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.wiremock.GStringTransformer$_transform_closure1: java.util.Map getParams()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.ImplicitRemoteValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario previous()>",
    "<com.okta.test.mock.Config$Global: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.Scenario: void <init>(java.lang.String,int,java.lang.String,com.okta.test.mock.scenarios.ScenarioDefinition)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void invalidSignatureAccessTokenJwtTest()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.matchers.UrlMatcher: java.lang.Object urlMatcher(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$3: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: boolean pollForStartedApplication(int,int)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: org.hamcrest.Matcher authenticateHeader()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void noAuthCodeTest()>",
    "<com.okta.test.mock.matchers.TckMatchers: org.hamcrest.Matcher bodyMatcher(org.hamcrest.Matcher)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: java.lang.String getScenarioName()>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: void configureBindings(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$3: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.Config$Global: java.lang.String getConfigProperty(java.lang.String,java.lang.String)>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: void configureTokens(java.lang.String)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.HttpMock: int getMockPort()>",
    "<com.okta.test.mock.matchers.TckMatchers: org.hamcrest.Matcher header(java.lang.String,org.hamcrest.Matcher)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void unsignedIdTokenJwtTest()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: int getFreePort()>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: com.okta.test.mock.application.ApplicationUnderTest configure(com.okta.test.mock.TestScenario)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void expiredIdTokenJwtTest()>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_getFreePort_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void nonJWTAccessKeyTest()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_createQueryMatchers_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void wrongScopeAccessTokenTest()>",
    "<com.okta.test.mock.matchers.UrlMatcher: void describeTo(org.hamcrest.Description)>",
    "<com.okta.test.mock.matchers.TckMatchers: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: int stop()>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void noToken401Test()>",
    "<com.okta.test.mock.wiremock.TestUtils: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowLocalValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.wiremock.HttpMock: int getMockHttpsPort()>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.TestScenario: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.UrlMatcherTest: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure3: java.util.Map getResult()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: java.lang.Object loginPageLocationMatcher()>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario fromId(java.lang.String)>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.matchers.TckMatchers: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void wrongStateTest()>",
    "<com.okta.test.mock.scenarios.ImplicitRemoteValidationScenarioDefinition: java.util.Map getBindingMap()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void respondWithCode()>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_getApplicationUnderTest_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.matchers.TckMatchers: org.hamcrest.Matcher redirect(org.hamcrest.Matcher)>",
    "<com.okta.test.mock.matchers.UrlMatcher$_describeTo_closure2: org.hamcrest.Description getDescription()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_matchesSafely_closure1: java.lang.Boolean getMatches()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.ImplicitRemoteValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.matchers.UrlMatcher: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.CodeRemoteValidationScenarioDefinition: void configureHttpMock(com.github.tomakehurst.wiremock.WireMockServer,java.lang.String)>",
    "<com.okta.test.mock.wiremock.GStringTransformer$_transform_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.CodeRemoteValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.matchers.TckMatchers$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario valueOf(java.lang.String)>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: void configureHttpMock(com.github.tomakehurst.wiremock.WireMockServer,java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$3: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.wiremock.GStringTransformer$_transform_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: com.okta.test.mock.application.ApplicationUnderTest com_okta_test_mock_application_ApplicationUnderTesttrait$super$configure(com.okta.test.mock.TestScenario)>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.Config$Global: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.scenarios.Scenario: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void inactiveTokenJwtTest()>",
    "<com.okta.test.mock.wiremock.GStringTransformer$_transform_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: void start()>",
    "<com.okta.test.mock.wiremock.HttpMock: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.TestScenario: void <init>()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.Config$Global: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void assertAccessDenied(io.restassured.response.ExtractableResponse)>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowRemoteValidationIT: org.hamcrest.Matcher loginPageLocationMatcher()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: java.lang.String getProtectedPath()>",
    "<com.okta.test.mock.matchers.TckMatchers$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<com.okta.test.mock.wiremock.HttpMock: void stopMockServer()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowRemoteValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.Config$Global: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: void configureHttpMock(com.github.tomakehurst.wiremock.WireMockServer,java.lang.String)>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void invalidSignatureIdTokenJwtTest()>",
    "<com.okta.test.mock.tests.ImplicitRemoteValidationIT: void noToken401()>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: void start()>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: void respondWithCode()>",
    "<com.okta.test.mock.scenarios.ImplicitRemoteValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.TckMatchers$1: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void invalidIssuerIdTokenJwtTest()>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario[] values()>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_getFreePort_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: int getPort(java.lang.String,com.okta.test.mock.TestScenario)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void followRedirect()>",
    "<com.okta.test.mock.wiremock.HttpMock: void <init>()>",
    "<com.okta.test.mock.matchers.TckMatchers$2: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.Config: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.matchers.UrlMatcher$_createQueryMatchers_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.CodeRemoteValidationScenarioDefinition: java.util.Map getBindingMap()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_matchesSafely_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: com.okta.test.mock.TestScenario getTestScenario(com.okta.test.mock.application.ApplicationUnderTest)>",
    "<com.okta.test.mock.matchers.TckMatchers$1: boolean matchesSafely(io.restassured.response.Response)>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.matchers.TckMatchers$2: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.matchers.UrlMatcher: java.util.List createQueryMatchers(java.lang.String)>",
    "<com.okta.test.mock.Config: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<com.okta.test.mock.scenarios.CodeRemoteValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.TckMatchers$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.TckMatchers$3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: void run(org.testng.IHookCallBack,org.testng.ITestResult)>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$2: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_matchesSafely_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<com.okta.test.mock.matchers.TckMatchers$1: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: io.restassured.response.ExtractableResponse redirectToRemoteLogin()>",
    "<com.okta.test.mock.wiremock.TestUtils: byte[] toIntegerBytes(java.math.BigInteger)>",
    "<com.okta.test.mock.wiremock.HttpMock: java.lang.String getBaseUrl()>",
    "<com.okta.test.mock.Config: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.Config$Global: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.matchers.UrlMatcher$_matchesSafely_closure1: org.hamcrest.Description getMismatchDescription()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void respondWithCode()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void wrongStateTest()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void wrongKeyIdAccessTokenJwtTest()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: void <init>()>",
    "<com.okta.test.mock.matchers.TckMatchers$3: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$1: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.wiremock.TestUtils: io.restassured.response.ExtractableResponse followRedirectUntilLocation(io.restassured.response.ExtractableResponse,org.hamcrest.Matcher,int,java.lang.String)>",
    "<com.okta.test.mock.Config$Global: java.lang.String getCodeFlowRedirectPath()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_describeTo_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void followRedirect()>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: java.util.Map getBindingMap()>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowLocalValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure2$_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.TestUtils: java.util.Map parseQuery(java.lang.String)>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_matchesSafely_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario next()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<com.okta.test.mock.matchers.TckMatchers: org.hamcrest.Matcher responseCode(int)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: java.lang.String getProtectedPath()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.HttpMock: void setScenario(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$2: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: void configureHttpMock(com.github.tomakehurst.wiremock.WireMockServer,java.lang.String)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void wrongAudienceAccessTokenTest()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.matchers.TckMatchers$3: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void wrongScopeAccessTokenJwtTest()>",
    "<com.okta.test.mock.matchers.TckMatchers$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: io.restassured.response.ExtractableResponse redirectToRemoteLogin()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: com.okta.test.mock.application.ApplicationUnderTest getApplicationUnderTest(java.lang.String)>",
    "<com.okta.test.mock.matchers.UrlMatcher: void <init>(java.net.URL,java.util.List)>",
    "<com.okta.test.mock.wiremock.HttpMock: java.util.Map getBaseBindingMap()>",
    "<com.okta.test.mock.matchers.TckMatchers: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: org.hamcrest.Matcher loginPageLocationMatcher()>"
  ],
  "0.4.0": [
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void accessKeyNonTrustedKeyTest()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.util.Map getBindingMap(com.okta.test.mock.scenarios.ScenarioDefinition)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: io.restassured.specification.ResponseSpecification statusCodeMatcher(int)>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: com.okta.test.mock.TestScenario getTestScenario()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: void checkToRun(java.lang.reflect.Method)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void wrongAudienceIdTokenJwtTest()>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: com.okta.test.mock.TestScenario com_okta_test_mock_application_ApplicationUnderTesttrait$super$getTestScenario()>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void wrongAudienceAccessTokenJwtTest()>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.GStringTransformer: com.github.tomakehurst.wiremock.http.Response transform(com.github.tomakehurst.wiremock.http.Request,com.github.tomakehurst.wiremock.http.Response,com.github.tomakehurst.wiremock.common.FileSource,com.github.tomakehurst.wiremock.extension.Parameters)>",
    "<com.okta.test.mock.Config: void <init>()>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: java.util.Map getBindingMap()>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: void followRedirect()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void redirectToLogin()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: com.okta.test.mock.application.ApplicationUnderTest configure(com.okta.test.mock.application.ApplicationUnderTest,com.okta.test.mock.TestScenario)>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_getApplicationUnderTest_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: void <init>()>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: void <init>()>",
    "<com.okta.test.mock.tests.ImplicitRemoteValidationIT: void scopeAccessTest()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: java.lang.String getState(java.lang.String)>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void inactiveAccessTokenTest()>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void scopeAccessTokenTest()>",
    "<com.okta.test.mock.scenarios.Scenario: void <clinit>()>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: void <init>()>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: void <init>()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: io.restassured.response.ExtractableResponse redirectToRemoteLogin()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: java.lang.Object shouldErrorsRedirectToLogin()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void noAuthCodeTest()>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario $INIT(java.lang.Object[])>",
    "<com.okta.test.mock.application.ApplicationTestRunner: void stop()>",
    "<com.okta.test.mock.wiremock.GStringTransformer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void issuedInFutureIdTokenJwtTest()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowRemoteValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.wiremock.HttpMock: void startMockServer()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void wrongKeyIdIdTokenJwtTest()>",
    "<com.okta.test.mock.wiremock.GStringTransformer: void <init>(java.util.Map[])>",
    "<com.okta.test.mock.wiremock.GStringTransformer$_transform_closure1: java.util.Map getParams()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.ImplicitRemoteValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario previous()>",
    "<com.okta.test.mock.scenarios.Scenario: void <init>(java.lang.String,int,java.lang.String,com.okta.test.mock.scenarios.ScenarioDefinition)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void invalidSignatureAccessTokenJwtTest()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: boolean pollForStartedApplication(int,int)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void noAuthCodeTest()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: java.lang.String getScenarioName()>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: void configureBindings(java.lang.String)>",
    "<com.okta.test.mock.wiremock.HttpMock: int getMockPort()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void unsignedIdTokenJwtTest()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: int getFreePort()>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: com.okta.test.mock.application.ApplicationUnderTest configure(com.okta.test.mock.TestScenario)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void expiredIdTokenJwtTest()>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_getFreePort_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void nonJWTAccessKeyTest()>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void wrongScopeAccessTokenTest()>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: int stop()>",
    "<com.okta.test.mock.wiremock.TestUtils: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowLocalValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void noToken401Test()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.wiremock.HttpMock: int getMockHttpsPort()>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.TestScenario: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario fromId(java.lang.String)>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void wrongStateTest()>",
    "<com.okta.test.mock.scenarios.ImplicitRemoteValidationScenarioDefinition: java.util.Map getBindingMap()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void respondWithCode()>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_getApplicationUnderTest_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.scenarios.ImplicitRemoteValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.scenarios.CodeRemoteValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.wiremock.GStringTransformer$_transform_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario valueOf(java.lang.String)>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: void configureHttpMock(com.github.tomakehurst.wiremock.WireMockServer,java.lang.String)>",
    "<com.okta.test.mock.wiremock.GStringTransformer$_transform_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: com.okta.test.mock.application.ApplicationUnderTest com_okta_test_mock_application_ApplicationUnderTesttrait$super$configure(com.okta.test.mock.TestScenario)>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.Scenario: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void inactiveTokenJwtTest()>",
    "<com.okta.test.mock.wiremock.GStringTransformer$_transform_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: void start()>",
    "<com.okta.test.mock.wiremock.HttpMock: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.TestScenario: void <init>()>",
    "<com.okta.test.mock.wiremock.HttpMock: void stopMockServer()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowRemoteValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void invalidSignatureIdTokenJwtTest()>",
    "<com.okta.test.mock.tests.ImplicitRemoteValidationIT: void noToken401()>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: void start()>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: void respondWithCode()>",
    "<com.okta.test.mock.scenarios.ImplicitRemoteValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario[] values()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void invalidIssuerIdTokenJwtTest()>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_getFreePort_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: int getPort(java.lang.String,com.okta.test.mock.TestScenario)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void followRedirect()>",
    "<com.okta.test.mock.wiremock.HttpMock: void <init>()>",
    "<com.okta.test.mock.scenarios.CodeRemoteValidationScenarioDefinition: java.util.Map getBindingMap()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: com.okta.test.mock.TestScenario getTestScenario(com.okta.test.mock.application.ApplicationUnderTest)>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.scenarios.CodeRemoteValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: io.restassured.response.ExtractableResponse redirectToRemoteLogin()>",
    "<com.okta.test.mock.wiremock.TestUtils: byte[] toIntegerBytes(java.math.BigInteger)>",
    "<com.okta.test.mock.wiremock.HttpMock: java.lang.String getBaseUrl()>",
    "<com.okta.test.mock.Config: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void respondWithCode()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void wrongStateTest()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void wrongKeyIdAccessTokenJwtTest()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: void <init>()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void followRedirect()>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: java.util.Map getBindingMap()>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowLocalValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario next()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.HttpMock: void setScenario(java.lang.String)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void wrongAudienceAccessTokenTest()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void wrongScopeAccessTokenJwtTest()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: java.lang.String getLoginRedirectPath()>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: void redirectToLogin()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: io.restassured.response.ExtractableResponse redirectToRemoteLogin()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: com.okta.test.mock.application.ApplicationUnderTest getApplicationUnderTest(java.lang.String)>",
    "<com.okta.test.mock.wiremock.HttpMock: java.util.Map getBaseBindingMap()>"
  ],
  "0.5.0": [
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void accessKeyNonTrustedKeyTest()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.util.Map getBindingMap(com.okta.test.mock.scenarios.ScenarioDefinition)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: io.restassured.specification.ResponseSpecification statusCodeMatcher(int)>",
    "<com.okta.test.mock.matchers.UrlMatcher$_describeTo_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: com.okta.test.mock.TestScenario getTestScenario()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void wrongAudienceIdTokenJwtTest()>",
    "<com.okta.test.mock.wiremock.TestUtils: io.restassured.response.ExtractableResponse followRedirectUntilLocation(io.restassured.response.ExtractableResponse,org.hamcrest.Matcher,int)>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: com.okta.test.mock.TestScenario com_okta_test_mock_application_ApplicationUnderTesttrait$super$getTestScenario()>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void wrongAudienceAccessTokenJwtTest()>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.GStringTransformer: com.github.tomakehurst.wiremock.http.Response transform(com.github.tomakehurst.wiremock.http.Request,com.github.tomakehurst.wiremock.http.Response,com.github.tomakehurst.wiremock.common.FileSource,com.github.tomakehurst.wiremock.extension.Parameters)>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: java.lang.String getProtectedPath()>",
    "<com.okta.test.mock.Config: void <init>()>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: void followRedirect()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void redirectToLogin()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: com.okta.test.mock.application.ApplicationUnderTest configure(com.okta.test.mock.application.ApplicationUnderTest,com.okta.test.mock.TestScenario)>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_getApplicationUnderTest_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.TckMatchers$2: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: void <init>()>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: void <init>()>",
    "<com.okta.test.mock.matchers.UrlMatcher: java.lang.Object urlMatcher(java.lang.String,java.util.List)>",
    "<com.okta.test.mock.tests.ImplicitRemoteValidationIT: void scopeAccessTest()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: java.lang.String getState(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$3: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$2: boolean matchesSafely(io.restassured.response.Response)>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure2$_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<com.okta.test.mock.matchers.TckMatchers: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.wiremock.TestUtils: io.restassured.config.RestAssuredConfig browserCompatibleRedirects()>",
    "<com.okta.test.mock.matchers.TckMatchers$3: boolean matchesSafely(io.restassured.response.Response)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void inactiveAccessTokenTest()>",
    "<com.okta.test.mock.matchers.TckMatchers$2: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void scopeAccessTokenTest()>",
    "<com.okta.test.mock.scenarios.Scenario: void <clinit>()>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: void <init>()>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: void <init>()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: io.restassured.response.ExtractableResponse redirectToRemoteLogin()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: java.lang.Object shouldErrorsRedirectToLogin()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void noAuthCodeTest()>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario $INIT(java.lang.Object[])>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: java.lang.String getProtectedPath()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: void stop()>",
    "<com.okta.test.mock.wiremock.GStringTransformer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void issuedInFutureIdTokenJwtTest()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowRemoteValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.wiremock.HttpMock: void startMockServer()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void wrongKeyIdIdTokenJwtTest()>",
    "<com.okta.test.mock.wiremock.GStringTransformer: void <init>(java.util.Map[])>",
    "<com.okta.test.mock.matchers.UrlMatcher: boolean matchesSafely(java.lang.String,org.hamcrest.Description)>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.wiremock.GStringTransformer$_transform_closure1: java.util.Map getParams()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.ImplicitRemoteValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario previous()>",
    "<com.okta.test.mock.scenarios.Scenario: void <init>(java.lang.String,int,java.lang.String,com.okta.test.mock.scenarios.ScenarioDefinition)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void invalidSignatureAccessTokenJwtTest()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.matchers.UrlMatcher: java.lang.Object urlMatcher(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$3: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: boolean pollForStartedApplication(int,int)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: org.hamcrest.Matcher authenticateHeader()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void noAuthCodeTest()>",
    "<com.okta.test.mock.matchers.TckMatchers: org.hamcrest.Matcher bodyMatcher(org.hamcrest.Matcher)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: java.lang.String getScenarioName()>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: void configureBindings(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$3: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: void configureTokens(java.lang.String)>",
    "<com.okta.test.mock.wiremock.HttpMock: int getMockPort()>",
    "<com.okta.test.mock.matchers.TckMatchers: org.hamcrest.Matcher header(java.lang.String,org.hamcrest.Matcher)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void unsignedIdTokenJwtTest()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: int getFreePort()>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: com.okta.test.mock.application.ApplicationUnderTest configure(com.okta.test.mock.TestScenario)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void expiredIdTokenJwtTest()>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_getFreePort_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure3: java.lang.Object doCall(java.lang.Object)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void nonJWTAccessKeyTest()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_createQueryMatchers_closure3: void <init>(java.lang.Object,java.lang.Object)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void wrongScopeAccessTokenTest()>",
    "<com.okta.test.mock.matchers.UrlMatcher: void describeTo(org.hamcrest.Description)>",
    "<com.okta.test.mock.matchers.TckMatchers: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: int stop()>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void noToken401Test()>",
    "<com.okta.test.mock.wiremock.TestUtils: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowLocalValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.wiremock.HttpMock: int getMockHttpsPort()>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.TestScenario: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.UrlMatcherTest: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure3: java.util.Map getResult()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: java.lang.Object loginPageLocationMatcher()>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario fromId(java.lang.String)>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.matchers.TckMatchers: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void wrongStateTest()>",
    "<com.okta.test.mock.scenarios.ImplicitRemoteValidationScenarioDefinition: java.util.Map getBindingMap()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void respondWithCode()>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_getApplicationUnderTest_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.matchers.TckMatchers: org.hamcrest.Matcher redirect(org.hamcrest.Matcher)>",
    "<com.okta.test.mock.matchers.UrlMatcher$_describeTo_closure2: org.hamcrest.Description getDescription()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_matchesSafely_closure1: java.lang.Boolean getMatches()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.ImplicitRemoteValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.matchers.UrlMatcher: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.CodeRemoteValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.wiremock.GStringTransformer$_transform_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.TckMatchers$1: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario valueOf(java.lang.String)>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: void configureHttpMock(com.github.tomakehurst.wiremock.WireMockServer,java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$3: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.wiremock.GStringTransformer$_transform_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: com.okta.test.mock.application.ApplicationUnderTest com_okta_test_mock_application_ApplicationUnderTesttrait$super$configure(com.okta.test.mock.TestScenario)>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.Scenario: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void inactiveTokenJwtTest()>",
    "<com.okta.test.mock.wiremock.GStringTransformer$_transform_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: void start()>",
    "<com.okta.test.mock.wiremock.HttpMock: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.TestScenario: void <init>()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void assertAccessDenied(io.restassured.response.ExtractableResponse)>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowRemoteValidationIT: org.hamcrest.Matcher loginPageLocationMatcher()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: java.lang.String getProtectedPath()>",
    "<com.okta.test.mock.matchers.TckMatchers$1: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<com.okta.test.mock.wiremock.HttpMock: void stopMockServer()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowRemoteValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: void configureHttpMock(com.github.tomakehurst.wiremock.WireMockServer,java.lang.String)>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void invalidSignatureIdTokenJwtTest()>",
    "<com.okta.test.mock.tests.ImplicitRemoteValidationIT: void noToken401()>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: void start()>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: void respondWithCode()>",
    "<com.okta.test.mock.scenarios.ImplicitRemoteValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.TckMatchers$1: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void invalidIssuerIdTokenJwtTest()>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario[] values()>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_getFreePort_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: int getPort(java.lang.String,com.okta.test.mock.TestScenario)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void followRedirect()>",
    "<com.okta.test.mock.wiremock.HttpMock: void <init>()>",
    "<com.okta.test.mock.matchers.TckMatchers$2: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.matchers.UrlMatcher$_createQueryMatchers_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.CodeRemoteValidationScenarioDefinition: java.util.Map getBindingMap()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_matchesSafely_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: com.okta.test.mock.TestScenario getTestScenario(com.okta.test.mock.application.ApplicationUnderTest)>",
    "<com.okta.test.mock.matchers.TckMatchers$1: boolean matchesSafely(io.restassured.response.Response)>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.matchers.TckMatchers$2: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.matchers.UrlMatcher: java.util.List createQueryMatchers(java.lang.String)>",
    "<com.okta.test.mock.scenarios.CodeRemoteValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.TckMatchers$1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.TckMatchers$3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: void run(org.testng.IHookCallBack,org.testng.ITestResult)>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$2: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_matchesSafely_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<com.okta.test.mock.matchers.TckMatchers$1: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: io.restassured.response.ExtractableResponse redirectToRemoteLogin()>",
    "<com.okta.test.mock.wiremock.TestUtils: byte[] toIntegerBytes(java.math.BigInteger)>",
    "<com.okta.test.mock.wiremock.HttpMock: java.lang.String getBaseUrl()>",
    "<com.okta.test.mock.Config: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_matchesSafely_closure1: org.hamcrest.Description getMismatchDescription()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void respondWithCode()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void wrongStateTest()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void wrongKeyIdAccessTokenJwtTest()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: void <init>()>",
    "<com.okta.test.mock.matchers.TckMatchers$3: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$1: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_describeTo_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void followRedirect()>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: java.util.Map getBindingMap()>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowLocalValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure2$_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.TestUtils: java.util.Map parseQuery(java.lang.String)>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.matchers.UrlMatcher$_matchesSafely_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario next()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure1: void <init>(java.lang.Object,java.lang.Object)>",
    "<com.okta.test.mock.matchers.TckMatchers: org.hamcrest.Matcher responseCode(int)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: java.lang.String getProtectedPath()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.HttpMock: void setScenario(java.lang.String)>",
    "<com.okta.test.mock.matchers.TckMatchers$2: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void wrongAudienceAccessTokenTest()>",
    "<com.okta.test.mock.wiremock.TestUtils$_parseQuery_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.matchers.TckMatchers$3: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void wrongScopeAccessTokenJwtTest()>",
    "<com.okta.test.mock.matchers.TckMatchers$1: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: io.restassured.response.ExtractableResponse redirectToRemoteLogin()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: com.okta.test.mock.application.ApplicationUnderTest getApplicationUnderTest(java.lang.String)>",
    "<com.okta.test.mock.matchers.UrlMatcher: void <init>(java.net.URL,java.util.List)>",
    "<com.okta.test.mock.wiremock.HttpMock: java.util.Map getBaseBindingMap()>",
    "<com.okta.test.mock.matchers.TckMatchers: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: org.hamcrest.Matcher loginPageLocationMatcher()>"
  ],
  "0.3.0": [
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void accessKeyNonTrustedKeyTest()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.util.Map getBindingMap(com.okta.test.mock.scenarios.ScenarioDefinition)>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: com.okta.test.mock.TestScenario getTestScenario()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: void checkToRun(java.lang.reflect.Method)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void wrongAudienceIdTokenJwtTest()>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: com.okta.test.mock.TestScenario com_okta_test_mock_application_ApplicationUnderTesttrait$super$getTestScenario()>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void wrongAudienceAccessTokenJwtTest()>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.GStringTransformer: com.github.tomakehurst.wiremock.http.Response transform(com.github.tomakehurst.wiremock.http.Request,com.github.tomakehurst.wiremock.http.Response,com.github.tomakehurst.wiremock.common.FileSource,com.github.tomakehurst.wiremock.extension.Parameters)>",
    "<com.okta.test.mock.Config: void <init>()>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: java.util.Map getBindingMap()>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: void followRedirect()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void redirectToLogin()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: com.okta.test.mock.application.ApplicationUnderTest configure(com.okta.test.mock.application.ApplicationUnderTest,com.okta.test.mock.TestScenario)>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_getApplicationUnderTest_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: void <init>()>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: void <init>()>",
    "<com.okta.test.mock.tests.ImplicitRemoteValidationIT: void scopeAccessTest()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: java.lang.String getState(java.lang.String)>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void inactiveAccessTokenTest()>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void scopeAccessTokenTest()>",
    "<com.okta.test.mock.scenarios.Scenario: void <clinit>()>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: void <init>()>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: void <init>()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: io.restassured.response.ExtractableResponse redirectToRemoteLogin()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void noAuthCodeTest()>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario $INIT(java.lang.Object[])>",
    "<com.okta.test.mock.wiremock.GStringTransformer: void <init>(java.util.Map)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: void stop()>",
    "<com.okta.test.mock.wiremock.GStringTransformer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void issuedInFutureIdTokenJwtTest()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowRemoteValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.wiremock.HttpMock: void startMockServer()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void wrongKeyIdIdTokenJwtTest()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.ImplicitRemoteValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario previous()>",
    "<com.okta.test.mock.scenarios.Scenario: void <init>(java.lang.String,int,java.lang.String,com.okta.test.mock.scenarios.ScenarioDefinition)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void invalidSignatureAccessTokenJwtTest()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: boolean pollForStartedApplication(int,int)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void noAuthCodeTest()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: java.lang.String getScenarioName()>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.HttpMock: int getMockPort()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void unsignedIdTokenJwtTest()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: int getFreePort()>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: com.okta.test.mock.application.ApplicationUnderTest configure(com.okta.test.mock.TestScenario)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void expiredIdTokenJwtTest()>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_getFreePort_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void nonJWTAccessKeyTest()>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void wrongScopeAccessTokenTest()>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: int stop()>",
    "<com.okta.test.mock.wiremock.TestUtils: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowLocalValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void noToken401Test()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.TestScenario: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario fromId(java.lang.String)>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void wrongStateTest()>",
    "<com.okta.test.mock.scenarios.ImplicitRemoteValidationScenarioDefinition: java.util.Map getBindingMap()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void respondWithCode()>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_getApplicationUnderTest_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.scenarios.ImplicitRemoteValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.scenarios.CodeRemoteValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario valueOf(java.lang.String)>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: com.okta.test.mock.application.ApplicationUnderTest com_okta_test_mock_application_ApplicationUnderTesttrait$super$configure(com.okta.test.mock.TestScenario)>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.Scenario: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void inactiveTokenJwtTest()>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: void configureHttpMock(com.github.tomakehurst.wiremock.WireMockServer)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: void start()>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: java.util.Map getBindingMap()>",
    "<com.okta.test.mock.wiremock.HttpMock: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.TestScenario: void <init>()>",
    "<com.okta.test.mock.wiremock.HttpMock: void stopMockServer()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowRemoteValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void invalidSignatureIdTokenJwtTest()>",
    "<com.okta.test.mock.tests.ImplicitRemoteValidationIT: void noToken401()>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: void start()>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: void respondWithCode()>",
    "<com.okta.test.mock.scenarios.ImplicitRemoteValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario[] values()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void invalidIssuerIdTokenJwtTest()>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_getFreePort_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: int getPort(java.lang.String,com.okta.test.mock.TestScenario)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void followRedirect()>",
    "<com.okta.test.mock.wiremock.HttpMock: void <init>()>",
    "<com.okta.test.mock.scenarios.CodeRemoteValidationScenarioDefinition: java.util.Map getBindingMap()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: com.okta.test.mock.TestScenario getTestScenario(com.okta.test.mock.application.ApplicationUnderTest)>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.scenarios.CodeRemoteValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: io.restassured.response.ExtractableResponse redirectToRemoteLogin()>",
    "<com.okta.test.mock.wiremock.TestUtils: byte[] toIntegerBytes(java.math.BigInteger)>",
    "<com.okta.test.mock.wiremock.HttpMock: java.lang.String getBaseUrl()>",
    "<com.okta.test.mock.Config: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void respondWithCode()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void wrongStateTest()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void wrongKeyIdAccessTokenJwtTest()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: void <init>()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void followRedirect()>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: java.util.Map getBindingMap()>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowLocalValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario next()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.HttpMock: void setScenario(java.lang.String)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void wrongAudienceAccessTokenTest()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void wrongScopeAccessTokenJwtTest()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: java.lang.String getLoginRedirectPath()>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: void redirectToLogin()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: io.restassured.response.ExtractableResponse redirectToRemoteLogin()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: com.okta.test.mock.application.ApplicationUnderTest getApplicationUnderTest(java.lang.String)>",
    "<com.okta.test.mock.wiremock.HttpMock: java.util.Map getBaseBindingMap()>"
  ],
  "0.3.1": [
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void accessKeyNonTrustedKeyTest()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.util.Map getBindingMap(com.okta.test.mock.scenarios.ScenarioDefinition)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: io.restassured.specification.ResponseSpecification statusCodeMatcher(int)>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: com.okta.test.mock.TestScenario getTestScenario()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: void checkToRun(java.lang.reflect.Method)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void wrongAudienceIdTokenJwtTest()>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: com.okta.test.mock.TestScenario com_okta_test_mock_application_ApplicationUnderTesttrait$super$getTestScenario()>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void wrongAudienceAccessTokenJwtTest()>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.GStringTransformer: com.github.tomakehurst.wiremock.http.Response transform(com.github.tomakehurst.wiremock.http.Request,com.github.tomakehurst.wiremock.http.Response,com.github.tomakehurst.wiremock.common.FileSource,com.github.tomakehurst.wiremock.extension.Parameters)>",
    "<com.okta.test.mock.Config: void <init>()>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: java.util.Map getBindingMap()>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: void followRedirect()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void redirectToLogin()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: com.okta.test.mock.application.ApplicationUnderTest configure(com.okta.test.mock.application.ApplicationUnderTest,com.okta.test.mock.TestScenario)>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_getApplicationUnderTest_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: void <init>()>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: void <init>()>",
    "<com.okta.test.mock.tests.ImplicitRemoteValidationIT: void scopeAccessTest()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: java.lang.String getState(java.lang.String)>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void inactiveAccessTokenTest()>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void scopeAccessTokenTest()>",
    "<com.okta.test.mock.scenarios.Scenario: void <clinit>()>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: void <init>()>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: void <init>()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: io.restassured.response.ExtractableResponse redirectToRemoteLogin()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: java.lang.Object shouldErrorsRedirectToLogin()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void noAuthCodeTest()>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario $INIT(java.lang.Object[])>",
    "<com.okta.test.mock.wiremock.GStringTransformer: void <init>(java.util.Map)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: void stop()>",
    "<com.okta.test.mock.wiremock.GStringTransformer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void issuedInFutureIdTokenJwtTest()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowRemoteValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.wiremock.HttpMock: void startMockServer()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void wrongKeyIdIdTokenJwtTest()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.ImplicitRemoteValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario previous()>",
    "<com.okta.test.mock.scenarios.Scenario: void <init>(java.lang.String,int,java.lang.String,com.okta.test.mock.scenarios.ScenarioDefinition)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void invalidSignatureAccessTokenJwtTest()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: boolean pollForStartedApplication(int,int)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void noAuthCodeTest()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: java.lang.String getScenarioName()>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.HttpMock: int getMockPort()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void unsignedIdTokenJwtTest()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: int getFreePort()>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: com.okta.test.mock.application.ApplicationUnderTest configure(com.okta.test.mock.TestScenario)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void expiredIdTokenJwtTest()>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_getFreePort_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void nonJWTAccessKeyTest()>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void wrongScopeAccessTokenTest()>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: int stop()>",
    "<com.okta.test.mock.wiremock.TestUtils: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowLocalValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void noToken401Test()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.TestScenario: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario fromId(java.lang.String)>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void wrongStateTest()>",
    "<com.okta.test.mock.scenarios.ImplicitRemoteValidationScenarioDefinition: java.util.Map getBindingMap()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void respondWithCode()>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_getApplicationUnderTest_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference)>",
    "<com.okta.test.mock.scenarios.ImplicitLocalValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.scenarios.ImplicitRemoteValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.scenarios.CodeRemoteValidationScenarioDefinition: java.util.Map com_okta_test_mock_scenarios_ScenarioDefinitiontrait$super$getBindingMap()>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario valueOf(java.lang.String)>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: com.okta.test.mock.application.ApplicationUnderTest com_okta_test_mock_application_ApplicationUnderTesttrait$super$configure(com.okta.test.mock.TestScenario)>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.Scenario: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void inactiveTokenJwtTest()>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: void configureHttpMock(com.github.tomakehurst.wiremock.WireMockServer)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: void start()>",
    "<com.okta.test.mock.scenarios.OIDCCodeLocalValidationScenarioDefinition: java.util.Map getBindingMap()>",
    "<com.okta.test.mock.wiremock.HttpMock: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.TestScenario: void <init>()>",
    "<com.okta.test.mock.wiremock.HttpMock: void stopMockServer()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowRemoteValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void invalidSignatureIdTokenJwtTest()>",
    "<com.okta.test.mock.tests.ImplicitRemoteValidationIT: void noToken401()>",
    "<com.okta.test.mock.application.CliApplicationUnderTest: void start()>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: void respondWithCode()>",
    "<com.okta.test.mock.scenarios.ImplicitRemoteValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario[] values()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void invalidIssuerIdTokenJwtTest()>",
    "<com.okta.test.mock.application.ApplicationTestRunner$_getFreePort_closure2: void <init>(java.lang.Object,java.lang.Object)>",
    "<com.okta.test.mock.application.ApplicationTestRunner: int getPort(java.lang.String,com.okta.test.mock.TestScenario)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void followRedirect()>",
    "<com.okta.test.mock.wiremock.HttpMock: void <init>()>",
    "<com.okta.test.mock.scenarios.CodeRemoteValidationScenarioDefinition: java.util.Map getBindingMap()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: com.okta.test.mock.TestScenario getTestScenario(com.okta.test.mock.application.ApplicationUnderTest)>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.scenarios.CodeRemoteValidationScenarioDefinition: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.application.ApplicationUnderTest$Trait$Helper: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: io.restassured.response.ExtractableResponse redirectToRemoteLogin()>",
    "<com.okta.test.mock.wiremock.TestUtils: byte[] toIntegerBytes(java.math.BigInteger)>",
    "<com.okta.test.mock.wiremock.HttpMock: java.lang.String getBaseUrl()>",
    "<com.okta.test.mock.Config: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void respondWithCode()>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: void wrongStateTest()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void wrongKeyIdAccessTokenJwtTest()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: void <init>()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void followRedirect()>",
    "<com.okta.test.mock.scenarios.CodeLocalValidationScenarioDefinition: java.util.Map getBindingMap()>",
    "<com.okta.test.mock.tests.CustomLoginCodeFlowLocalValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.scenarios.ScenarioDefinition$Trait$Helper: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.okta.test.mock.tests.OIDCCodeFlowLocalValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.scenarios.Scenario: com.okta.test.mock.scenarios.Scenario next()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.okta.test.mock.wiremock.HttpMock: void setScenario(java.lang.String)>",
    "<com.okta.test.mock.tests.ImplicitLocalValidationIT: void wrongAudienceAccessTokenTest()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: org.hamcrest.Matcher loginPageMatcher()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: void wrongScopeAccessTokenJwtTest()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: java.lang.String getLoginRedirectPath()>",
    "<com.okta.test.mock.tests.CodeFlowRemoteValidationIT: void redirectToLogin()>",
    "<com.okta.test.mock.tests.CodeFlowLocalValidationIT: io.restassured.response.ExtractableResponse redirectToRemoteLogin()>",
    "<com.okta.test.mock.application.ApplicationTestRunner: com.okta.test.mock.application.ApplicationUnderTest getApplicationUnderTest(java.lang.String)>",
    "<com.okta.test.mock.wiremock.HttpMock: java.util.Map getBaseBindingMap()>"
  ]
}