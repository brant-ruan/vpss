{
  "1.0.1": [
    "<com.testvagrant.monitor.clients.DevicesClient: com.testvagrant.monitor.requests.Device getDeviceByUdid(java.lang.String,java.lang.String)>",
    "<com.testvagrant.monitor.clients.ScenariosClient: java.lang.Integer getBuildScenarioCountByStatus(java.lang.String,java.lang.String)>",
    "<com.testvagrant.monitor.clients.IntellisenseClient: com.testvagrant.monitor.requests.Intellisense recordExceptionSense(com.testvagrant.monitor.requests.Intellisense)>",
    "<com.testvagrant.monitor.clients.ScenariosClient: java.lang.String loadScreenshot(com.testvagrant.monitor.requests.Screenshot)>",
    "<com.testvagrant.monitor.clients.DevicesClient: com.testvagrant.monitor.requests.Device getDevice(java.lang.String,com.testvagrant.monitor.requests.Device)>",
    "<com.testvagrant.monitor.clients.BuildsClient: java.lang.String getLatestBuildId()>",
    "<com.testvagrant.monitor.clients.BuildsClient: com.testvagrant.monitor.requests.Build updateBuildRecord(com.testvagrant.monitor.requests.Build)>",
    "<com.testvagrant.monitor.clients.BuildsClient: com.testvagrant.monitor.requests.Build createNewBuild(java.lang.String)>",
    "<com.testvagrant.monitor.clients.ScenariosClient: com.testvagrant.monitor.requests.Scenario updateScenario(java.lang.String,com.testvagrant.monitor.requests.Scenario)>",
    "<com.testvagrant.monitor.clients.ScenariosClient: java.util.List getScenariosByActivity(java.lang.String,java.lang.String,java.lang.String)>",
    "<com.testvagrant.monitor.clients.DevicesClient: java.util.List getAllDevices(java.lang.String)>",
    "<com.testvagrant.monitor.clients.ScenariosClient: java.util.List getDistinctScenarios()>",
    "<com.testvagrant.monitor.clients.BuildsClient: com.testvagrant.monitor.requests.Build findBuildById(java.lang.String)>",
    "<com.testvagrant.monitor.clients.DevicesClient: void lambda$storeDevices$0(io.restassured.response.Response[],com.testvagrant.monitor.requests.Device)>",
    "<com.testvagrant.monitor.clients.DevicesClient: io.restassured.response.Response storeScreenShot(java.lang.String,com.testvagrant.monitor.requests.Device)>",
    "<com.testvagrant.monitor.clients.DevicesClient: com.testvagrant.monitor.requests.Device getDeviceById(java.lang.String)>",
    "<com.testvagrant.monitor.clients.ScenariosClient: com.testvagrant.monitor.requests.Scenario findRelevantScenario(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String)>",
    "<com.testvagrant.monitor.clients.ScenariosClient: com.testvagrant.monitor.requests.Scenario createNewScenario(com.testvagrant.monitor.requests.Scenario,java.util.List)>",
    "<com.testvagrant.monitor.clients.DevicesClient: com.testvagrant.monitor.entities.DeviceDetails releaseDevice(com.testvagrant.monitor.requests.Device)>",
    "<com.testvagrant.monitor.clients.ScenariosClient: java.lang.Integer getNumberOfExistingScenariosByName(java.lang.String,java.lang.String)>",
    "<com.testvagrant.monitor.clients.ScenariosClient: java.util.List getDistinctScenariosByDeviceId(java.lang.String)>",
    "<com.testvagrant.monitor.clients.ScenariosClient: java.lang.Integer getBuildScenarioCount(java.lang.String)>",
    "<com.testvagrant.monitor.clients.DevicesClient: com.testvagrant.monitor.entities.DeviceDetails updateDevice(com.testvagrant.monitor.requests.Device)>",
    "<com.testvagrant.monitor.clients.BuildsClient: com.testvagrant.monitor.requests.Build createNewBuild()>",
    "<com.testvagrant.monitor.clients.ScenariosClient: com.testvagrant.monitor.requests.Scenario getScenarioById(java.lang.String)>",
    "<com.testvagrant.monitor.clients.ServiceClient: boolean isServiceRunning()>"
  ],
  "1.0.2": [
    "<com.testvagrant.monitor.clients.DevicesClient: com.testvagrant.monitor.requests.Device getDeviceByUdid(java.lang.String,java.lang.String)>",
    "<com.testvagrant.monitor.clients.ScenariosClient: java.lang.Integer getBuildScenarioCountByStatus(java.lang.String,java.lang.String)>",
    "<com.testvagrant.monitor.clients.IntellisenseClient: com.testvagrant.monitor.requests.Intellisense recordExceptionSense(com.testvagrant.monitor.requests.Intellisense)>",
    "<com.testvagrant.monitor.clients.ScenariosClient: java.lang.String loadScreenshot(com.testvagrant.monitor.requests.Screenshot)>",
    "<com.testvagrant.monitor.clients.DevicesClient: com.testvagrant.monitor.requests.Device getDevice(java.lang.String,com.testvagrant.monitor.requests.Device)>",
    "<com.testvagrant.monitor.clients.BuildsClient: java.lang.String getLatestBuildId()>",
    "<com.testvagrant.monitor.clients.BuildsClient: com.testvagrant.monitor.requests.Build updateBuildRecord(com.testvagrant.monitor.requests.Build)>",
    "<com.testvagrant.monitor.clients.BuildsClient: com.testvagrant.monitor.requests.Build createNewBuild(java.lang.String)>",
    "<com.testvagrant.monitor.clients.ScenariosClient: com.testvagrant.monitor.requests.Scenario updateScenario(java.lang.String,com.testvagrant.monitor.requests.Scenario)>",
    "<com.testvagrant.monitor.clients.ScenariosClient: java.util.List getScenariosByActivity(java.lang.String,java.lang.String,java.lang.String)>",
    "<com.testvagrant.monitor.clients.DevicesClient: java.util.List getAllDevices(java.lang.String)>",
    "<com.testvagrant.monitor.clients.ScenariosClient: java.util.List getDistinctScenarios()>",
    "<com.testvagrant.monitor.clients.BuildsClient: com.testvagrant.monitor.requests.Build findBuildById(java.lang.String)>",
    "<com.testvagrant.monitor.clients.DevicesClient: void lambda$storeDevices$0(io.restassured.response.Response[],com.testvagrant.monitor.requests.Device)>",
    "<com.testvagrant.monitor.clients.DevicesClient: io.restassured.response.Response storeScreenShot(java.lang.String,com.testvagrant.monitor.requests.Device)>",
    "<com.testvagrant.monitor.clients.DevicesClient: com.testvagrant.monitor.requests.Device getDeviceById(java.lang.String)>",
    "<com.testvagrant.monitor.clients.ScenariosClient: com.testvagrant.monitor.requests.Scenario findRelevantScenario(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String)>",
    "<com.testvagrant.monitor.clients.ScenariosClient: com.testvagrant.monitor.requests.Scenario createNewScenario(com.testvagrant.monitor.requests.Scenario,java.util.List)>",
    "<com.testvagrant.monitor.clients.DevicesClient: com.testvagrant.monitor.entities.DeviceDetails releaseDevice(com.testvagrant.monitor.requests.Device)>",
    "<com.testvagrant.monitor.clients.ScenariosClient: java.lang.Integer getNumberOfExistingScenariosByName(java.lang.String,java.lang.String)>",
    "<com.testvagrant.monitor.clients.ScenariosClient: java.util.List getDistinctScenariosByDeviceId(java.lang.String)>",
    "<com.testvagrant.monitor.clients.ScenariosClient: java.lang.Integer getBuildScenarioCount(java.lang.String)>",
    "<com.testvagrant.monitor.clients.DevicesClient: com.testvagrant.monitor.entities.DeviceDetails updateDevice(com.testvagrant.monitor.requests.Device)>",
    "<com.testvagrant.monitor.clients.BuildsClient: com.testvagrant.monitor.requests.Build createNewBuild()>",
    "<com.testvagrant.monitor.clients.ScenariosClient: com.testvagrant.monitor.requests.Scenario getScenarioById(java.lang.String)>",
    "<com.testvagrant.monitor.clients.ServiceClient: boolean isServiceRunning()>"
  ]
}