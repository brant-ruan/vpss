{
  "2.4.16": [
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.net.URI)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Character getDifferentiator()>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: junit.framework.TestSuite getSuite()>",
    "<groovy.util.JavadocAssertionTestSuite: void <clinit>()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String)>",
    "<groovy.util.StringTestUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.mock.interceptor.StubFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.Map getLineNumberToAssertionsMap(java.lang.String,java.util.List)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader,java.lang.String)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getAssertionTags(java.lang.String)>",
    "<groovy.lang.GroovyLogTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: void tearDown()>",
    "<groovy.mock.interceptor.MockFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Integer getCodeIndex()>",
    "<groovy.util.StringTestUtil: void assertMultilineStringsEqual(java.lang.String,java.lang.String)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.util.Map getLineNumberToAssertions()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.File)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: void setUp()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: void <init>(groovy.lang.MetaClassRegistry,java.lang.Class,groovy.lang.MetaClass,boolean)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Binding getContext()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class buildTest(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(groovy.lang.GroovyCodeSource)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.Class,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: boolean isEligible(java.lang.String,int)>",
    "<groovy.mock.interceptor.Demand: void <init>()>",
    "<groovy.util.GroovyTestCase: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyShell createNewShell()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.String stringLog(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite()>",
    "<groovy.mock.interceptor.Ignore: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,groovy.lang.Closure)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.Object withLevel(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject getInstance(java.lang.Class,java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.String getAssertion()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getAssertion(java.lang.String)>",
    "<groovy.util.GroovyTestCase: void assertInspect(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: java.lang.Object verify(java.util.List)>",
    "<groovy.util.JavadocAssertionTestSuite: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockInterceptor: void beforeSet(java.lang.Object,java.lang.String,java.lang.Object)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyClassLoader getClassLoader()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String,java.lang.String)>",
    "<org.codehaus.groovy.runtime.ScriptTestAdapter: void run(junit.framework.TestResult)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeGet(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.String getCode()>",
    "<groovy.mock.interceptor.Ignore: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestCode(java.lang.String,java.util.List)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeInvoke(java.lang.Object,java.lang.String,java.lang.Object[])>",
    "<groovy.util.GroovyTestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyTestCase: void assertToString(java.lang.Object,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestName(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.Demand: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class createClass(java.lang.String)>",
    "<groovy.test.GroovyAssert: void assertScript(java.lang.String)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockProxyMetaClass$FallThroughMarker: void <init>(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite: void main(java.lang.String[])>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String basename(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestMethodCodeForAssertion(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.String getFilename()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: groovy.mock.interceptor.MockProxyMetaClass make(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.StrictExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object call(java.lang.Object,java.lang.Object)>",
    "<groovy.mock.interceptor.CallSpec: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.Demand: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: java.util.List getAssertions()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getTestMethods(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.String getFilename()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object doCall(java.lang.Object,java.lang.Object)>"
  ],
  "2.5.12": [
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.net.URI)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Character getDifferentiator()>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: junit.framework.TestSuite getSuite()>",
    "<groovy.util.JavadocAssertionTestSuite: void <clinit>()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String)>",
    "<groovy.util.StringTestUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.mock.interceptor.StubFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.Map getLineNumberToAssertionsMap(java.lang.String,java.util.List)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader,java.lang.String)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getAssertionTags(java.lang.String)>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.TryCatchStatement tryCatchAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode,org.codehaus.groovy.ast.MethodNode,java.util.ArrayList)>",
    "<groovy.lang.GroovyLogTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: void tearDown()>",
    "<groovy.mock.interceptor.MockFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Integer getCodeIndex()>",
    "<groovy.util.StringTestUtil: void assertMultilineStringsEqual(java.lang.String,java.lang.String)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.util.Map getLineNumberToAssertions()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.File)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: void setUp()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: void <init>(groovy.lang.MetaClassRegistry,java.lang.Class,groovy.lang.MetaClass,boolean)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Binding getContext()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class buildTest(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(groovy.lang.GroovyCodeSource)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.Class,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: boolean isEligible(java.lang.String,int)>",
    "<groovy.mock.interceptor.Demand: void <init>()>",
    "<groovy.util.GroovyTestCase: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyShell createNewShell()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.String stringLog(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite()>",
    "<groovy.mock.interceptor.Ignore: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,groovy.lang.Closure)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.Object withLevel(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject getInstance(java.lang.Class,java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.String getAssertion()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.util.AllTestSuite$1: groovy.lang.GroovyClassLoader run()>",
    "<groovy.mock.interceptor.LooseExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getAssertion(java.lang.String)>",
    "<groovy.util.GroovyTestCase: void assertInspect(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: java.lang.Object verify(java.util.List)>",
    "<groovy.util.JavadocAssertionTestSuite: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockInterceptor: void beforeSet(java.lang.Object,java.lang.String,java.lang.Object)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyClassLoader getClassLoader()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String,java.lang.String)>",
    "<org.codehaus.groovy.runtime.ScriptTestAdapter: void run(junit.framework.TestResult)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeGet(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.String getCode()>",
    "<groovy.mock.interceptor.Ignore: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestCode(java.lang.String,java.util.List)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeInvoke(java.lang.Object,java.lang.String,java.lang.Object[])>",
    "<groovy.util.GroovyTestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyTestCase: void assertToString(java.lang.Object,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestName(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.Demand: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class createClass(java.lang.String)>",
    "<groovy.test.GroovyAssert: void assertScript(java.lang.String)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockProxyMetaClass$FallThroughMarker: void <init>(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite: void main(java.lang.String[])>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.Statement throwAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String basename(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestMethodCodeForAssertion(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.String getFilename()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: groovy.mock.interceptor.MockProxyMetaClass make(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.StrictExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object call(java.lang.Object,java.lang.Object)>",
    "<groovy.mock.interceptor.CallSpec: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: java.util.List getAssertions()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getTestMethods(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.String getFilename()>",
    "<groovy.util.GroovyTestSuite$1: groovy.lang.GroovyClassLoader run()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object doCall(java.lang.Object,java.lang.Object)>"
  ],
  "2.5.16": [
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.net.URI)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Character getDifferentiator()>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: junit.framework.TestSuite getSuite()>",
    "<groovy.util.JavadocAssertionTestSuite: void <clinit>()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String)>",
    "<groovy.util.StringTestUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.mock.interceptor.StubFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.Map getLineNumberToAssertionsMap(java.lang.String,java.util.List)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader,java.lang.String)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getAssertionTags(java.lang.String)>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.TryCatchStatement tryCatchAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode,org.codehaus.groovy.ast.MethodNode,java.util.ArrayList)>",
    "<groovy.lang.GroovyLogTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: void tearDown()>",
    "<groovy.mock.interceptor.MockFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Integer getCodeIndex()>",
    "<groovy.util.StringTestUtil: void assertMultilineStringsEqual(java.lang.String,java.lang.String)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.util.Map getLineNumberToAssertions()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.File)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: void setUp()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: void <init>(groovy.lang.MetaClassRegistry,java.lang.Class,groovy.lang.MetaClass,boolean)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Binding getContext()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class buildTest(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(groovy.lang.GroovyCodeSource)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.Class,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: boolean isEligible(java.lang.String,int)>",
    "<groovy.mock.interceptor.Demand: void <init>()>",
    "<groovy.util.GroovyTestCase: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyShell createNewShell()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.String stringLog(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite()>",
    "<groovy.mock.interceptor.Ignore: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,groovy.lang.Closure)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.Object withLevel(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject getInstance(java.lang.Class,java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.String getAssertion()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.util.AllTestSuite$1: groovy.lang.GroovyClassLoader run()>",
    "<groovy.mock.interceptor.LooseExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getAssertion(java.lang.String)>",
    "<groovy.util.GroovyTestCase: void assertInspect(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: java.lang.Object verify(java.util.List)>",
    "<groovy.util.JavadocAssertionTestSuite: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockInterceptor: void beforeSet(java.lang.Object,java.lang.String,java.lang.Object)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyClassLoader getClassLoader()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String,java.lang.String)>",
    "<org.codehaus.groovy.runtime.ScriptTestAdapter: void run(junit.framework.TestResult)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeGet(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.String getCode()>",
    "<groovy.mock.interceptor.Ignore: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestCode(java.lang.String,java.util.List)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeInvoke(java.lang.Object,java.lang.String,java.lang.Object[])>",
    "<groovy.util.GroovyTestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyTestCase: void assertToString(java.lang.Object,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestName(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.Demand: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class createClass(java.lang.String)>",
    "<groovy.test.GroovyAssert: void assertScript(java.lang.String)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockProxyMetaClass$FallThroughMarker: void <init>(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite: void main(java.lang.String[])>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.Statement throwAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String basename(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestMethodCodeForAssertion(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.String getFilename()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: groovy.mock.interceptor.MockProxyMetaClass make(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.StrictExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object call(java.lang.Object,java.lang.Object)>",
    "<groovy.mock.interceptor.CallSpec: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: java.util.List getAssertions()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getTestMethods(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.String getFilename()>",
    "<groovy.util.GroovyTestSuite$1: groovy.lang.GroovyClassLoader run()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object doCall(java.lang.Object,java.lang.Object)>"
  ],
  "3.0.0-alpha-2": [
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.net.URI)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Character getDifferentiator()>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: junit.framework.TestSuite getSuite()>",
    "<groovy.util.JavadocAssertionTestSuite: void <clinit>()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String)>",
    "<groovy.util.StringTestUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.mock.interceptor.StubFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.Map getLineNumberToAssertionsMap(java.lang.String,java.util.List)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader,java.lang.String)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getAssertionTags(java.lang.String)>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.TryCatchStatement tryCatchAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode,org.codehaus.groovy.ast.MethodNode,java.util.ArrayList)>",
    "<groovy.lang.GroovyLogTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: void tearDown()>",
    "<groovy.mock.interceptor.MockFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Integer getCodeIndex()>",
    "<groovy.util.StringTestUtil: void assertMultilineStringsEqual(java.lang.String,java.lang.String)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.util.Map getLineNumberToAssertions()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.File)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: void setUp()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: void <init>(groovy.lang.MetaClassRegistry,java.lang.Class,groovy.lang.MetaClass,boolean)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Binding getContext()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class buildTest(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(groovy.lang.GroovyCodeSource)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.Class,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: boolean isEligible(java.lang.String,int)>",
    "<groovy.mock.interceptor.Demand: void <init>()>",
    "<groovy.util.GroovyTestCase: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyShell createNewShell()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.String stringLog(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite()>",
    "<groovy.mock.interceptor.Ignore: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,groovy.lang.Closure)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.Object withLevel(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject getInstance(java.lang.Class,java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.String getAssertion()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getAssertion(java.lang.String)>",
    "<groovy.util.GroovyTestCase: void assertInspect(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: java.lang.Object verify(java.util.List)>",
    "<groovy.util.JavadocAssertionTestSuite: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockInterceptor: void beforeSet(java.lang.Object,java.lang.String,java.lang.Object)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyClassLoader getClassLoader()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String,java.lang.String)>",
    "<org.codehaus.groovy.runtime.ScriptTestAdapter: void run(junit.framework.TestResult)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeGet(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.String getCode()>",
    "<groovy.mock.interceptor.Ignore: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestCode(java.lang.String,java.util.List)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeInvoke(java.lang.Object,java.lang.String,java.lang.Object[])>",
    "<groovy.util.GroovyTestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyTestCase: void assertToString(java.lang.Object,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestName(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.Demand: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class createClass(java.lang.String)>",
    "<groovy.test.GroovyAssert: void assertScript(java.lang.String)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockProxyMetaClass$FallThroughMarker: void <init>(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite: void main(java.lang.String[])>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.Statement throwAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String basename(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestMethodCodeForAssertion(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.String getFilename()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: groovy.mock.interceptor.MockProxyMetaClass make(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.StrictExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object call(java.lang.Object,java.lang.Object)>",
    "<groovy.mock.interceptor.CallSpec: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: java.util.List getAssertions()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getTestMethods(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.String getFilename()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object doCall(java.lang.Object,java.lang.Object)>"
  ],
  "2.5.8": [
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.net.URI)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Character getDifferentiator()>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: junit.framework.TestSuite getSuite()>",
    "<groovy.util.JavadocAssertionTestSuite: void <clinit>()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String)>",
    "<groovy.util.StringTestUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.mock.interceptor.StubFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.Map getLineNumberToAssertionsMap(java.lang.String,java.util.List)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader,java.lang.String)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getAssertionTags(java.lang.String)>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.TryCatchStatement tryCatchAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode,org.codehaus.groovy.ast.MethodNode,java.util.ArrayList)>",
    "<groovy.lang.GroovyLogTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: void tearDown()>",
    "<groovy.mock.interceptor.MockFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Integer getCodeIndex()>",
    "<groovy.util.StringTestUtil: void assertMultilineStringsEqual(java.lang.String,java.lang.String)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.util.Map getLineNumberToAssertions()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.File)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: void setUp()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: void <init>(groovy.lang.MetaClassRegistry,java.lang.Class,groovy.lang.MetaClass,boolean)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Binding getContext()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class buildTest(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(groovy.lang.GroovyCodeSource)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.Class,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: boolean isEligible(java.lang.String,int)>",
    "<groovy.mock.interceptor.Demand: void <init>()>",
    "<groovy.util.GroovyTestCase: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyShell createNewShell()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.String stringLog(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite()>",
    "<groovy.mock.interceptor.Ignore: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,groovy.lang.Closure)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.Object withLevel(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject getInstance(java.lang.Class,java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.String getAssertion()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.util.AllTestSuite$1: groovy.lang.GroovyClassLoader run()>",
    "<groovy.mock.interceptor.LooseExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getAssertion(java.lang.String)>",
    "<groovy.util.GroovyTestCase: void assertInspect(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: java.lang.Object verify(java.util.List)>",
    "<groovy.util.JavadocAssertionTestSuite: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockInterceptor: void beforeSet(java.lang.Object,java.lang.String,java.lang.Object)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyClassLoader getClassLoader()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String,java.lang.String)>",
    "<org.codehaus.groovy.runtime.ScriptTestAdapter: void run(junit.framework.TestResult)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeGet(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.String getCode()>",
    "<groovy.mock.interceptor.Ignore: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestCode(java.lang.String,java.util.List)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeInvoke(java.lang.Object,java.lang.String,java.lang.Object[])>",
    "<groovy.util.GroovyTestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyTestCase: void assertToString(java.lang.Object,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestName(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.Demand: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class createClass(java.lang.String)>",
    "<groovy.test.GroovyAssert: void assertScript(java.lang.String)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockProxyMetaClass$FallThroughMarker: void <init>(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite: void main(java.lang.String[])>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.Statement throwAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String basename(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestMethodCodeForAssertion(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.String getFilename()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: groovy.mock.interceptor.MockProxyMetaClass make(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.StrictExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object call(java.lang.Object,java.lang.Object)>",
    "<groovy.mock.interceptor.CallSpec: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: java.util.List getAssertions()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getTestMethods(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.String getFilename()>",
    "<groovy.util.GroovyTestSuite$1: groovy.lang.GroovyClassLoader run()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object doCall(java.lang.Object,java.lang.Object)>"
  ],
  "2.5.4": [
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.net.URI)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Character getDifferentiator()>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: junit.framework.TestSuite getSuite()>",
    "<groovy.util.JavadocAssertionTestSuite: void <clinit>()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String)>",
    "<groovy.util.StringTestUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.mock.interceptor.StubFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.Map getLineNumberToAssertionsMap(java.lang.String,java.util.List)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader,java.lang.String)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getAssertionTags(java.lang.String)>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.TryCatchStatement tryCatchAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode,org.codehaus.groovy.ast.MethodNode,java.util.ArrayList)>",
    "<groovy.lang.GroovyLogTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: void tearDown()>",
    "<groovy.mock.interceptor.MockFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Integer getCodeIndex()>",
    "<groovy.util.StringTestUtil: void assertMultilineStringsEqual(java.lang.String,java.lang.String)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.util.Map getLineNumberToAssertions()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.File)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: void setUp()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: void <init>(groovy.lang.MetaClassRegistry,java.lang.Class,groovy.lang.MetaClass,boolean)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Binding getContext()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class buildTest(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(groovy.lang.GroovyCodeSource)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.Class,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: boolean isEligible(java.lang.String,int)>",
    "<groovy.mock.interceptor.Demand: void <init>()>",
    "<groovy.util.GroovyTestCase: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyShell createNewShell()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.String stringLog(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite()>",
    "<groovy.mock.interceptor.Ignore: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,groovy.lang.Closure)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.Object withLevel(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject getInstance(java.lang.Class,java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.String getAssertion()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getAssertion(java.lang.String)>",
    "<groovy.util.GroovyTestCase: void assertInspect(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: java.lang.Object verify(java.util.List)>",
    "<groovy.util.JavadocAssertionTestSuite: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockInterceptor: void beforeSet(java.lang.Object,java.lang.String,java.lang.Object)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyClassLoader getClassLoader()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String,java.lang.String)>",
    "<org.codehaus.groovy.runtime.ScriptTestAdapter: void run(junit.framework.TestResult)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeGet(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.String getCode()>",
    "<groovy.mock.interceptor.Ignore: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestCode(java.lang.String,java.util.List)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeInvoke(java.lang.Object,java.lang.String,java.lang.Object[])>",
    "<groovy.util.GroovyTestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyTestCase: void assertToString(java.lang.Object,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestName(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.Demand: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class createClass(java.lang.String)>",
    "<groovy.test.GroovyAssert: void assertScript(java.lang.String)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockProxyMetaClass$FallThroughMarker: void <init>(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite: void main(java.lang.String[])>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.Statement throwAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String basename(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestMethodCodeForAssertion(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.String getFilename()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: groovy.mock.interceptor.MockProxyMetaClass make(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.StrictExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object call(java.lang.Object,java.lang.Object)>",
    "<groovy.mock.interceptor.CallSpec: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: java.util.List getAssertions()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getTestMethods(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.String getFilename()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object doCall(java.lang.Object,java.lang.Object)>"
  ],
  "3.0.0-alpha-1": [
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.net.URI)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Character getDifferentiator()>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: junit.framework.TestSuite getSuite()>",
    "<groovy.util.JavadocAssertionTestSuite: void <clinit>()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String)>",
    "<groovy.util.StringTestUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.mock.interceptor.StubFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.Map getLineNumberToAssertionsMap(java.lang.String,java.util.List)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader,java.lang.String)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getAssertionTags(java.lang.String)>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.TryCatchStatement tryCatchAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode,org.codehaus.groovy.ast.MethodNode,java.util.ArrayList)>",
    "<groovy.lang.GroovyLogTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: void tearDown()>",
    "<groovy.mock.interceptor.MockFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Integer getCodeIndex()>",
    "<groovy.util.StringTestUtil: void assertMultilineStringsEqual(java.lang.String,java.lang.String)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.util.Map getLineNumberToAssertions()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.File)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: void setUp()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: void <init>(groovy.lang.MetaClassRegistry,java.lang.Class,groovy.lang.MetaClass,boolean)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Binding getContext()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class buildTest(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(groovy.lang.GroovyCodeSource)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.Class,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: boolean isEligible(java.lang.String,int)>",
    "<groovy.mock.interceptor.Demand: void <init>()>",
    "<groovy.util.GroovyTestCase: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyShell createNewShell()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.String stringLog(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite()>",
    "<groovy.mock.interceptor.Ignore: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,groovy.lang.Closure)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.Object withLevel(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject getInstance(java.lang.Class,java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.String getAssertion()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getAssertion(java.lang.String)>",
    "<groovy.util.GroovyTestCase: void assertInspect(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: java.lang.Object verify(java.util.List)>",
    "<groovy.util.JavadocAssertionTestSuite: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockInterceptor: void beforeSet(java.lang.Object,java.lang.String,java.lang.Object)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyClassLoader getClassLoader()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String,java.lang.String)>",
    "<org.codehaus.groovy.runtime.ScriptTestAdapter: void run(junit.framework.TestResult)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeGet(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.String getCode()>",
    "<groovy.mock.interceptor.Ignore: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestCode(java.lang.String,java.util.List)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeInvoke(java.lang.Object,java.lang.String,java.lang.Object[])>",
    "<groovy.util.GroovyTestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyTestCase: void assertToString(java.lang.Object,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestName(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.Demand: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class createClass(java.lang.String)>",
    "<groovy.test.GroovyAssert: void assertScript(java.lang.String)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockProxyMetaClass$FallThroughMarker: void <init>(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite: void main(java.lang.String[])>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.Statement throwAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String basename(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestMethodCodeForAssertion(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.String getFilename()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: groovy.mock.interceptor.MockProxyMetaClass make(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.StrictExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object call(java.lang.Object,java.lang.Object)>",
    "<groovy.mock.interceptor.CallSpec: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: java.util.List getAssertions()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getTestMethods(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.String getFilename()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object doCall(java.lang.Object,java.lang.Object)>"
  ],
  "2.5.0": [
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.net.URI)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Character getDifferentiator()>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: junit.framework.TestSuite getSuite()>",
    "<groovy.util.JavadocAssertionTestSuite: void <clinit>()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String)>",
    "<groovy.util.StringTestUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.mock.interceptor.StubFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.Map getLineNumberToAssertionsMap(java.lang.String,java.util.List)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader,java.lang.String)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getAssertionTags(java.lang.String)>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.TryCatchStatement tryCatchAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode,org.codehaus.groovy.ast.MethodNode,java.util.ArrayList)>",
    "<groovy.lang.GroovyLogTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: void tearDown()>",
    "<groovy.mock.interceptor.MockFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Integer getCodeIndex()>",
    "<groovy.util.StringTestUtil: void assertMultilineStringsEqual(java.lang.String,java.lang.String)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.util.Map getLineNumberToAssertions()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.File)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: void setUp()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: void <init>(groovy.lang.MetaClassRegistry,java.lang.Class,groovy.lang.MetaClass,boolean)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Binding getContext()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class buildTest(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(groovy.lang.GroovyCodeSource)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.Class,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: boolean isEligible(java.lang.String,int)>",
    "<groovy.mock.interceptor.Demand: void <init>()>",
    "<groovy.util.GroovyTestCase: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyShell createNewShell()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.String stringLog(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite()>",
    "<groovy.mock.interceptor.Ignore: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,groovy.lang.Closure)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.Object withLevel(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject getInstance(java.lang.Class,java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.String getAssertion()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getAssertion(java.lang.String)>",
    "<groovy.util.GroovyTestCase: void assertInspect(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: java.lang.Object verify(java.util.List)>",
    "<groovy.util.JavadocAssertionTestSuite: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockInterceptor: void beforeSet(java.lang.Object,java.lang.String,java.lang.Object)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyClassLoader getClassLoader()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String,java.lang.String)>",
    "<org.codehaus.groovy.runtime.ScriptTestAdapter: void run(junit.framework.TestResult)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeGet(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.String getCode()>",
    "<groovy.mock.interceptor.Ignore: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestCode(java.lang.String,java.util.List)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeInvoke(java.lang.Object,java.lang.String,java.lang.Object[])>",
    "<groovy.util.GroovyTestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyTestCase: void assertToString(java.lang.Object,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestName(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.Demand: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class createClass(java.lang.String)>",
    "<groovy.test.GroovyAssert: void assertScript(java.lang.String)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockProxyMetaClass$FallThroughMarker: void <init>(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite: void main(java.lang.String[])>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.Statement throwAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String basename(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestMethodCodeForAssertion(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.String getFilename()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: groovy.mock.interceptor.MockProxyMetaClass make(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.StrictExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object call(java.lang.Object,java.lang.Object)>",
    "<groovy.mock.interceptor.CallSpec: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: java.util.List getAssertions()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getTestMethods(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.String getFilename()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object doCall(java.lang.Object,java.lang.Object)>"
  ],
  "2.5.1": [
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.net.URI)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Character getDifferentiator()>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: junit.framework.TestSuite getSuite()>",
    "<groovy.util.JavadocAssertionTestSuite: void <clinit>()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String)>",
    "<groovy.util.StringTestUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.mock.interceptor.StubFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.Map getLineNumberToAssertionsMap(java.lang.String,java.util.List)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader,java.lang.String)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getAssertionTags(java.lang.String)>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.TryCatchStatement tryCatchAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode,org.codehaus.groovy.ast.MethodNode,java.util.ArrayList)>",
    "<groovy.lang.GroovyLogTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: void tearDown()>",
    "<groovy.mock.interceptor.MockFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Integer getCodeIndex()>",
    "<groovy.util.StringTestUtil: void assertMultilineStringsEqual(java.lang.String,java.lang.String)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.util.Map getLineNumberToAssertions()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.File)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: void setUp()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: void <init>(groovy.lang.MetaClassRegistry,java.lang.Class,groovy.lang.MetaClass,boolean)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Binding getContext()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class buildTest(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(groovy.lang.GroovyCodeSource)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.Class,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: boolean isEligible(java.lang.String,int)>",
    "<groovy.mock.interceptor.Demand: void <init>()>",
    "<groovy.util.GroovyTestCase: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyShell createNewShell()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.String stringLog(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite()>",
    "<groovy.mock.interceptor.Ignore: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,groovy.lang.Closure)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.Object withLevel(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject getInstance(java.lang.Class,java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.String getAssertion()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getAssertion(java.lang.String)>",
    "<groovy.util.GroovyTestCase: void assertInspect(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: java.lang.Object verify(java.util.List)>",
    "<groovy.util.JavadocAssertionTestSuite: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockInterceptor: void beforeSet(java.lang.Object,java.lang.String,java.lang.Object)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyClassLoader getClassLoader()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String,java.lang.String)>",
    "<org.codehaus.groovy.runtime.ScriptTestAdapter: void run(junit.framework.TestResult)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeGet(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.String getCode()>",
    "<groovy.mock.interceptor.Ignore: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestCode(java.lang.String,java.util.List)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeInvoke(java.lang.Object,java.lang.String,java.lang.Object[])>",
    "<groovy.util.GroovyTestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyTestCase: void assertToString(java.lang.Object,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestName(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.Demand: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class createClass(java.lang.String)>",
    "<groovy.test.GroovyAssert: void assertScript(java.lang.String)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockProxyMetaClass$FallThroughMarker: void <init>(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite: void main(java.lang.String[])>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.Statement throwAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String basename(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestMethodCodeForAssertion(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.String getFilename()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: groovy.mock.interceptor.MockProxyMetaClass make(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.StrictExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object call(java.lang.Object,java.lang.Object)>",
    "<groovy.mock.interceptor.CallSpec: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: java.util.List getAssertions()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getTestMethods(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.String getFilename()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object doCall(java.lang.Object,java.lang.Object)>"
  ],
  "2.6.0-alpha-1": [
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.net.URI)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Character getDifferentiator()>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: junit.framework.TestSuite getSuite()>",
    "<groovy.util.JavadocAssertionTestSuite: void <clinit>()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String)>",
    "<groovy.util.StringTestUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.mock.interceptor.StubFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.Map getLineNumberToAssertionsMap(java.lang.String,java.util.List)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader,java.lang.String)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getAssertionTags(java.lang.String)>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.TryCatchStatement tryCatchAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode,org.codehaus.groovy.ast.MethodNode,java.util.ArrayList)>",
    "<groovy.lang.GroovyLogTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: void tearDown()>",
    "<groovy.mock.interceptor.MockFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Integer getCodeIndex()>",
    "<groovy.util.StringTestUtil: void assertMultilineStringsEqual(java.lang.String,java.lang.String)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.util.Map getLineNumberToAssertions()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.File)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: void setUp()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: void <init>(groovy.lang.MetaClassRegistry,java.lang.Class,groovy.lang.MetaClass,boolean)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Binding getContext()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class buildTest(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(groovy.lang.GroovyCodeSource)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.Class,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: boolean isEligible(java.lang.String,int)>",
    "<groovy.mock.interceptor.Demand: void <init>()>",
    "<groovy.util.GroovyTestCase: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyShell createNewShell()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.String stringLog(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite()>",
    "<groovy.mock.interceptor.Ignore: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,groovy.lang.Closure)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.Object withLevel(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject getInstance(java.lang.Class,java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.String getAssertion()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getAssertion(java.lang.String)>",
    "<groovy.util.GroovyTestCase: void assertInspect(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: java.lang.Object verify(java.util.List)>",
    "<groovy.util.JavadocAssertionTestSuite: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockInterceptor: void beforeSet(java.lang.Object,java.lang.String,java.lang.Object)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyClassLoader getClassLoader()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String,java.lang.String)>",
    "<org.codehaus.groovy.runtime.ScriptTestAdapter: void run(junit.framework.TestResult)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeGet(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.String getCode()>",
    "<groovy.mock.interceptor.Ignore: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestCode(java.lang.String,java.util.List)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeInvoke(java.lang.Object,java.lang.String,java.lang.Object[])>",
    "<groovy.util.GroovyTestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyTestCase: void assertToString(java.lang.Object,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestName(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.Demand: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class createClass(java.lang.String)>",
    "<groovy.test.GroovyAssert: void assertScript(java.lang.String)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockProxyMetaClass$FallThroughMarker: void <init>(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite: void main(java.lang.String[])>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.Statement throwAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String basename(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestMethodCodeForAssertion(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.String getFilename()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: groovy.mock.interceptor.MockProxyMetaClass make(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.StrictExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object call(java.lang.Object,java.lang.Object)>",
    "<groovy.mock.interceptor.CallSpec: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: java.util.List getAssertions()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getTestMethods(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.String getFilename()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object doCall(java.lang.Object,java.lang.Object)>"
  ],
  "2.4.14": [
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.net.URI)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Character getDifferentiator()>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: junit.framework.TestSuite getSuite()>",
    "<groovy.util.JavadocAssertionTestSuite: void <clinit>()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String)>",
    "<groovy.util.StringTestUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.mock.interceptor.StubFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.Map getLineNumberToAssertionsMap(java.lang.String,java.util.List)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader,java.lang.String)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getAssertionTags(java.lang.String)>",
    "<groovy.lang.GroovyLogTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: void tearDown()>",
    "<groovy.mock.interceptor.MockFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Integer getCodeIndex()>",
    "<groovy.util.StringTestUtil: void assertMultilineStringsEqual(java.lang.String,java.lang.String)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.util.Map getLineNumberToAssertions()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.File)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: void setUp()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: void <init>(groovy.lang.MetaClassRegistry,java.lang.Class,groovy.lang.MetaClass,boolean)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Binding getContext()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class buildTest(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(groovy.lang.GroovyCodeSource)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.Class,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: boolean isEligible(java.lang.String,int)>",
    "<groovy.mock.interceptor.Demand: void <init>()>",
    "<groovy.util.GroovyTestCase: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyShell createNewShell()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.String stringLog(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite()>",
    "<groovy.mock.interceptor.Ignore: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,groovy.lang.Closure)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.Object withLevel(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject getInstance(java.lang.Class,java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.String getAssertion()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getAssertion(java.lang.String)>",
    "<groovy.util.GroovyTestCase: void assertInspect(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: java.lang.Object verify(java.util.List)>",
    "<groovy.util.JavadocAssertionTestSuite: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockInterceptor: void beforeSet(java.lang.Object,java.lang.String,java.lang.Object)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyClassLoader getClassLoader()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String,java.lang.String)>",
    "<org.codehaus.groovy.runtime.ScriptTestAdapter: void run(junit.framework.TestResult)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeGet(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.String getCode()>",
    "<groovy.mock.interceptor.Ignore: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestCode(java.lang.String,java.util.List)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeInvoke(java.lang.Object,java.lang.String,java.lang.Object[])>",
    "<groovy.util.GroovyTestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyTestCase: void assertToString(java.lang.Object,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestName(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.Demand: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class createClass(java.lang.String)>",
    "<groovy.test.GroovyAssert: void assertScript(java.lang.String)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockProxyMetaClass$FallThroughMarker: void <init>(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite: void main(java.lang.String[])>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String basename(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestMethodCodeForAssertion(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.String getFilename()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: groovy.mock.interceptor.MockProxyMetaClass make(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.StrictExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object call(java.lang.Object,java.lang.Object)>",
    "<groovy.mock.interceptor.CallSpec: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.Demand: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: java.util.List getAssertions()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getTestMethods(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.String getFilename()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object doCall(java.lang.Object,java.lang.Object)>"
  ],
  "2.4.18": [
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.net.URI)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Character getDifferentiator()>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: junit.framework.TestSuite getSuite()>",
    "<groovy.util.JavadocAssertionTestSuite: void <clinit>()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String)>",
    "<groovy.util.StringTestUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.mock.interceptor.StubFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.Map getLineNumberToAssertionsMap(java.lang.String,java.util.List)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader,java.lang.String)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getAssertionTags(java.lang.String)>",
    "<groovy.lang.GroovyLogTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: void tearDown()>",
    "<groovy.mock.interceptor.MockFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Integer getCodeIndex()>",
    "<groovy.util.StringTestUtil: void assertMultilineStringsEqual(java.lang.String,java.lang.String)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.util.Map getLineNumberToAssertions()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.File)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: void setUp()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: void <init>(groovy.lang.MetaClassRegistry,java.lang.Class,groovy.lang.MetaClass,boolean)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Binding getContext()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class buildTest(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(groovy.lang.GroovyCodeSource)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.Class,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: boolean isEligible(java.lang.String,int)>",
    "<groovy.mock.interceptor.Demand: void <init>()>",
    "<groovy.util.GroovyTestCase: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyShell createNewShell()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.String stringLog(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite()>",
    "<groovy.mock.interceptor.Ignore: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,groovy.lang.Closure)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.Object withLevel(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject getInstance(java.lang.Class,java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.String getAssertion()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getAssertion(java.lang.String)>",
    "<groovy.util.GroovyTestCase: void assertInspect(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: java.lang.Object verify(java.util.List)>",
    "<groovy.util.JavadocAssertionTestSuite: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockInterceptor: void beforeSet(java.lang.Object,java.lang.String,java.lang.Object)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyClassLoader getClassLoader()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String,java.lang.String)>",
    "<org.codehaus.groovy.runtime.ScriptTestAdapter: void run(junit.framework.TestResult)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeGet(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.String getCode()>",
    "<groovy.mock.interceptor.Ignore: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestCode(java.lang.String,java.util.List)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeInvoke(java.lang.Object,java.lang.String,java.lang.Object[])>",
    "<groovy.util.GroovyTestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyTestCase: void assertToString(java.lang.Object,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestName(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.Demand: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class createClass(java.lang.String)>",
    "<groovy.test.GroovyAssert: void assertScript(java.lang.String)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockProxyMetaClass$FallThroughMarker: void <init>(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite: void main(java.lang.String[])>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String basename(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestMethodCodeForAssertion(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.String getFilename()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: groovy.mock.interceptor.MockProxyMetaClass make(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.StrictExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object call(java.lang.Object,java.lang.Object)>",
    "<groovy.mock.interceptor.CallSpec: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.Demand: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: java.util.List getAssertions()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getTestMethods(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.String getFilename()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object doCall(java.lang.Object,java.lang.Object)>"
  ],
  "2.5.9": [
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.net.URI)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Character getDifferentiator()>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: junit.framework.TestSuite getSuite()>",
    "<groovy.util.JavadocAssertionTestSuite: void <clinit>()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String)>",
    "<groovy.util.StringTestUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.mock.interceptor.StubFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.Map getLineNumberToAssertionsMap(java.lang.String,java.util.List)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader,java.lang.String)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getAssertionTags(java.lang.String)>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.TryCatchStatement tryCatchAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode,org.codehaus.groovy.ast.MethodNode,java.util.ArrayList)>",
    "<groovy.lang.GroovyLogTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: void tearDown()>",
    "<groovy.mock.interceptor.MockFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Integer getCodeIndex()>",
    "<groovy.util.StringTestUtil: void assertMultilineStringsEqual(java.lang.String,java.lang.String)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.util.Map getLineNumberToAssertions()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.File)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: void setUp()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: void <init>(groovy.lang.MetaClassRegistry,java.lang.Class,groovy.lang.MetaClass,boolean)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Binding getContext()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class buildTest(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(groovy.lang.GroovyCodeSource)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.Class,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: boolean isEligible(java.lang.String,int)>",
    "<groovy.mock.interceptor.Demand: void <init>()>",
    "<groovy.util.GroovyTestCase: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyShell createNewShell()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.String stringLog(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite()>",
    "<groovy.mock.interceptor.Ignore: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,groovy.lang.Closure)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.Object withLevel(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject getInstance(java.lang.Class,java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.String getAssertion()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.util.AllTestSuite$1: groovy.lang.GroovyClassLoader run()>",
    "<groovy.mock.interceptor.LooseExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getAssertion(java.lang.String)>",
    "<groovy.util.GroovyTestCase: void assertInspect(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: java.lang.Object verify(java.util.List)>",
    "<groovy.util.JavadocAssertionTestSuite: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockInterceptor: void beforeSet(java.lang.Object,java.lang.String,java.lang.Object)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyClassLoader getClassLoader()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String,java.lang.String)>",
    "<org.codehaus.groovy.runtime.ScriptTestAdapter: void run(junit.framework.TestResult)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeGet(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.String getCode()>",
    "<groovy.mock.interceptor.Ignore: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestCode(java.lang.String,java.util.List)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeInvoke(java.lang.Object,java.lang.String,java.lang.Object[])>",
    "<groovy.util.GroovyTestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyTestCase: void assertToString(java.lang.Object,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestName(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.Demand: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class createClass(java.lang.String)>",
    "<groovy.test.GroovyAssert: void assertScript(java.lang.String)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockProxyMetaClass$FallThroughMarker: void <init>(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite: void main(java.lang.String[])>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.Statement throwAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String basename(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestMethodCodeForAssertion(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.String getFilename()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: groovy.mock.interceptor.MockProxyMetaClass make(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.StrictExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object call(java.lang.Object,java.lang.Object)>",
    "<groovy.mock.interceptor.CallSpec: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: java.util.List getAssertions()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getTestMethods(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.String getFilename()>",
    "<groovy.util.GroovyTestSuite$1: groovy.lang.GroovyClassLoader run()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object doCall(java.lang.Object,java.lang.Object)>"
  ],
  "2.5.0-beta-3": [
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.net.URI)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Character getDifferentiator()>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: junit.framework.TestSuite getSuite()>",
    "<groovy.util.JavadocAssertionTestSuite: void <clinit>()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String)>",
    "<groovy.util.StringTestUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.mock.interceptor.StubFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.Map getLineNumberToAssertionsMap(java.lang.String,java.util.List)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader,java.lang.String)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getAssertionTags(java.lang.String)>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.TryCatchStatement tryCatchAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode,org.codehaus.groovy.ast.MethodNode,java.util.ArrayList)>",
    "<groovy.lang.GroovyLogTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: void tearDown()>",
    "<groovy.mock.interceptor.MockFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Integer getCodeIndex()>",
    "<groovy.util.StringTestUtil: void assertMultilineStringsEqual(java.lang.String,java.lang.String)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.util.Map getLineNumberToAssertions()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.File)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: void setUp()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: void <init>(groovy.lang.MetaClassRegistry,java.lang.Class,groovy.lang.MetaClass,boolean)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Binding getContext()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class buildTest(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(groovy.lang.GroovyCodeSource)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.Class,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: boolean isEligible(java.lang.String,int)>",
    "<groovy.mock.interceptor.Demand: void <init>()>",
    "<groovy.util.GroovyTestCase: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyShell createNewShell()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.String stringLog(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite()>",
    "<groovy.mock.interceptor.Ignore: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,groovy.lang.Closure)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.Object withLevel(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject getInstance(java.lang.Class,java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.String getAssertion()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getAssertion(java.lang.String)>",
    "<groovy.util.GroovyTestCase: void assertInspect(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: java.lang.Object verify(java.util.List)>",
    "<groovy.util.JavadocAssertionTestSuite: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockInterceptor: void beforeSet(java.lang.Object,java.lang.String,java.lang.Object)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyClassLoader getClassLoader()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String,java.lang.String)>",
    "<org.codehaus.groovy.runtime.ScriptTestAdapter: void run(junit.framework.TestResult)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeGet(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.String getCode()>",
    "<groovy.mock.interceptor.Ignore: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestCode(java.lang.String,java.util.List)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeInvoke(java.lang.Object,java.lang.String,java.lang.Object[])>",
    "<groovy.util.GroovyTestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyTestCase: void assertToString(java.lang.Object,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestName(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.Demand: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class createClass(java.lang.String)>",
    "<groovy.test.GroovyAssert: void assertScript(java.lang.String)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockProxyMetaClass$FallThroughMarker: void <init>(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite: void main(java.lang.String[])>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.Statement throwAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String basename(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestMethodCodeForAssertion(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.String getFilename()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: groovy.mock.interceptor.MockProxyMetaClass make(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.StrictExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object call(java.lang.Object,java.lang.Object)>",
    "<groovy.mock.interceptor.CallSpec: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: java.util.List getAssertions()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getTestMethods(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.String getFilename()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object doCall(java.lang.Object,java.lang.Object)>"
  ],
  "2.4.13": [
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.net.URI)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Character getDifferentiator()>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: junit.framework.TestSuite getSuite()>",
    "<groovy.util.JavadocAssertionTestSuite: void <clinit>()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String)>",
    "<groovy.util.StringTestUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.mock.interceptor.StubFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.Map getLineNumberToAssertionsMap(java.lang.String,java.util.List)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader,java.lang.String)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getAssertionTags(java.lang.String)>",
    "<groovy.lang.GroovyLogTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: void tearDown()>",
    "<groovy.mock.interceptor.MockFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Integer getCodeIndex()>",
    "<groovy.util.StringTestUtil: void assertMultilineStringsEqual(java.lang.String,java.lang.String)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.util.Map getLineNumberToAssertions()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.File)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: void setUp()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: void <init>(groovy.lang.MetaClassRegistry,java.lang.Class,groovy.lang.MetaClass,boolean)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Binding getContext()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class buildTest(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(groovy.lang.GroovyCodeSource)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.Class,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: boolean isEligible(java.lang.String,int)>",
    "<groovy.mock.interceptor.Demand: void <init>()>",
    "<groovy.util.GroovyTestCase: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyShell createNewShell()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.String stringLog(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite()>",
    "<groovy.mock.interceptor.Ignore: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,groovy.lang.Closure)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.Object withLevel(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject getInstance(java.lang.Class,java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.String getAssertion()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getAssertion(java.lang.String)>",
    "<groovy.util.GroovyTestCase: void assertInspect(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: java.lang.Object verify(java.util.List)>",
    "<groovy.util.JavadocAssertionTestSuite: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockInterceptor: void beforeSet(java.lang.Object,java.lang.String,java.lang.Object)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyClassLoader getClassLoader()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String,java.lang.String)>",
    "<org.codehaus.groovy.runtime.ScriptTestAdapter: void run(junit.framework.TestResult)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeGet(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.String getCode()>",
    "<groovy.mock.interceptor.Ignore: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestCode(java.lang.String,java.util.List)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeInvoke(java.lang.Object,java.lang.String,java.lang.Object[])>",
    "<groovy.util.GroovyTestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyTestCase: void assertToString(java.lang.Object,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestName(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.Demand: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class createClass(java.lang.String)>",
    "<groovy.test.GroovyAssert: void assertScript(java.lang.String)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockProxyMetaClass$FallThroughMarker: void <init>(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite: void main(java.lang.String[])>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String basename(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestMethodCodeForAssertion(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.String getFilename()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: groovy.mock.interceptor.MockProxyMetaClass make(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.StrictExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object call(java.lang.Object,java.lang.Object)>",
    "<groovy.mock.interceptor.CallSpec: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.Demand: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: java.util.List getAssertions()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getTestMethods(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.String getFilename()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object doCall(java.lang.Object,java.lang.Object)>"
  ],
  "2.5.2": [
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.net.URI)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Character getDifferentiator()>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: junit.framework.TestSuite getSuite()>",
    "<groovy.util.JavadocAssertionTestSuite: void <clinit>()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String)>",
    "<groovy.util.StringTestUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.mock.interceptor.StubFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.Map getLineNumberToAssertionsMap(java.lang.String,java.util.List)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader,java.lang.String)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getAssertionTags(java.lang.String)>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.TryCatchStatement tryCatchAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode,org.codehaus.groovy.ast.MethodNode,java.util.ArrayList)>",
    "<groovy.lang.GroovyLogTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: void tearDown()>",
    "<groovy.mock.interceptor.MockFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Integer getCodeIndex()>",
    "<groovy.util.StringTestUtil: void assertMultilineStringsEqual(java.lang.String,java.lang.String)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.util.Map getLineNumberToAssertions()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.File)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: void setUp()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: void <init>(groovy.lang.MetaClassRegistry,java.lang.Class,groovy.lang.MetaClass,boolean)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Binding getContext()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class buildTest(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(groovy.lang.GroovyCodeSource)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.Class,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: boolean isEligible(java.lang.String,int)>",
    "<groovy.mock.interceptor.Demand: void <init>()>",
    "<groovy.util.GroovyTestCase: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyShell createNewShell()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.String stringLog(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite()>",
    "<groovy.mock.interceptor.Ignore: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,groovy.lang.Closure)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.Object withLevel(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject getInstance(java.lang.Class,java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.String getAssertion()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getAssertion(java.lang.String)>",
    "<groovy.util.GroovyTestCase: void assertInspect(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: java.lang.Object verify(java.util.List)>",
    "<groovy.util.JavadocAssertionTestSuite: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockInterceptor: void beforeSet(java.lang.Object,java.lang.String,java.lang.Object)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyClassLoader getClassLoader()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String,java.lang.String)>",
    "<org.codehaus.groovy.runtime.ScriptTestAdapter: void run(junit.framework.TestResult)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeGet(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.String getCode()>",
    "<groovy.mock.interceptor.Ignore: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestCode(java.lang.String,java.util.List)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeInvoke(java.lang.Object,java.lang.String,java.lang.Object[])>",
    "<groovy.util.GroovyTestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyTestCase: void assertToString(java.lang.Object,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestName(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.Demand: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class createClass(java.lang.String)>",
    "<groovy.test.GroovyAssert: void assertScript(java.lang.String)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockProxyMetaClass$FallThroughMarker: void <init>(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite: void main(java.lang.String[])>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.Statement throwAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String basename(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestMethodCodeForAssertion(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.String getFilename()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: groovy.mock.interceptor.MockProxyMetaClass make(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.StrictExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object call(java.lang.Object,java.lang.Object)>",
    "<groovy.mock.interceptor.CallSpec: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: java.util.List getAssertions()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getTestMethods(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.String getFilename()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object doCall(java.lang.Object,java.lang.Object)>"
  ],
  "2.5.11": [
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.net.URI)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Character getDifferentiator()>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: junit.framework.TestSuite getSuite()>",
    "<groovy.util.JavadocAssertionTestSuite: void <clinit>()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String)>",
    "<groovy.util.StringTestUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.mock.interceptor.StubFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.Map getLineNumberToAssertionsMap(java.lang.String,java.util.List)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader,java.lang.String)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getAssertionTags(java.lang.String)>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.TryCatchStatement tryCatchAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode,org.codehaus.groovy.ast.MethodNode,java.util.ArrayList)>",
    "<groovy.lang.GroovyLogTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: void tearDown()>",
    "<groovy.mock.interceptor.MockFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Integer getCodeIndex()>",
    "<groovy.util.StringTestUtil: void assertMultilineStringsEqual(java.lang.String,java.lang.String)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.util.Map getLineNumberToAssertions()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.File)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: void setUp()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: void <init>(groovy.lang.MetaClassRegistry,java.lang.Class,groovy.lang.MetaClass,boolean)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Binding getContext()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class buildTest(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(groovy.lang.GroovyCodeSource)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.Class,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: boolean isEligible(java.lang.String,int)>",
    "<groovy.mock.interceptor.Demand: void <init>()>",
    "<groovy.util.GroovyTestCase: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyShell createNewShell()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.String stringLog(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite()>",
    "<groovy.mock.interceptor.Ignore: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,groovy.lang.Closure)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.Object withLevel(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject getInstance(java.lang.Class,java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.String getAssertion()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.util.AllTestSuite$1: groovy.lang.GroovyClassLoader run()>",
    "<groovy.mock.interceptor.LooseExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getAssertion(java.lang.String)>",
    "<groovy.util.GroovyTestCase: void assertInspect(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: java.lang.Object verify(java.util.List)>",
    "<groovy.util.JavadocAssertionTestSuite: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockInterceptor: void beforeSet(java.lang.Object,java.lang.String,java.lang.Object)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyClassLoader getClassLoader()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String,java.lang.String)>",
    "<org.codehaus.groovy.runtime.ScriptTestAdapter: void run(junit.framework.TestResult)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeGet(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.String getCode()>",
    "<groovy.mock.interceptor.Ignore: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestCode(java.lang.String,java.util.List)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeInvoke(java.lang.Object,java.lang.String,java.lang.Object[])>",
    "<groovy.util.GroovyTestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyTestCase: void assertToString(java.lang.Object,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestName(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.Demand: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class createClass(java.lang.String)>",
    "<groovy.test.GroovyAssert: void assertScript(java.lang.String)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockProxyMetaClass$FallThroughMarker: void <init>(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite: void main(java.lang.String[])>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.Statement throwAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String basename(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestMethodCodeForAssertion(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.String getFilename()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: groovy.mock.interceptor.MockProxyMetaClass make(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.StrictExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object call(java.lang.Object,java.lang.Object)>",
    "<groovy.mock.interceptor.CallSpec: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: java.util.List getAssertions()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getTestMethods(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.String getFilename()>",
    "<groovy.util.GroovyTestSuite$1: groovy.lang.GroovyClassLoader run()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object doCall(java.lang.Object,java.lang.Object)>"
  ],
  "2.6.0-alpha-4": [
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.net.URI)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Character getDifferentiator()>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: junit.framework.TestSuite getSuite()>",
    "<groovy.util.JavadocAssertionTestSuite: void <clinit>()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String)>",
    "<groovy.util.StringTestUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.mock.interceptor.StubFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.Map getLineNumberToAssertionsMap(java.lang.String,java.util.List)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader,java.lang.String)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getAssertionTags(java.lang.String)>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.TryCatchStatement tryCatchAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode,org.codehaus.groovy.ast.MethodNode,java.util.ArrayList)>",
    "<groovy.lang.GroovyLogTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: void tearDown()>",
    "<groovy.mock.interceptor.MockFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Integer getCodeIndex()>",
    "<groovy.util.StringTestUtil: void assertMultilineStringsEqual(java.lang.String,java.lang.String)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.util.Map getLineNumberToAssertions()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.File)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: void setUp()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: void <init>(groovy.lang.MetaClassRegistry,java.lang.Class,groovy.lang.MetaClass,boolean)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Binding getContext()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class buildTest(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(groovy.lang.GroovyCodeSource)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.Class,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: boolean isEligible(java.lang.String,int)>",
    "<groovy.mock.interceptor.Demand: void <init>()>",
    "<groovy.util.GroovyTestCase: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyShell createNewShell()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.String stringLog(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite()>",
    "<groovy.mock.interceptor.Ignore: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,groovy.lang.Closure)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.Object withLevel(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject getInstance(java.lang.Class,java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.String getAssertion()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getAssertion(java.lang.String)>",
    "<groovy.util.GroovyTestCase: void assertInspect(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: java.lang.Object verify(java.util.List)>",
    "<groovy.util.JavadocAssertionTestSuite: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockInterceptor: void beforeSet(java.lang.Object,java.lang.String,java.lang.Object)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyClassLoader getClassLoader()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String,java.lang.String)>",
    "<org.codehaus.groovy.runtime.ScriptTestAdapter: void run(junit.framework.TestResult)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeGet(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.String getCode()>",
    "<groovy.mock.interceptor.Ignore: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestCode(java.lang.String,java.util.List)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeInvoke(java.lang.Object,java.lang.String,java.lang.Object[])>",
    "<groovy.util.GroovyTestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyTestCase: void assertToString(java.lang.Object,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestName(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.Demand: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class createClass(java.lang.String)>",
    "<groovy.test.GroovyAssert: void assertScript(java.lang.String)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockProxyMetaClass$FallThroughMarker: void <init>(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite: void main(java.lang.String[])>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.Statement throwAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String basename(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestMethodCodeForAssertion(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.String getFilename()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: groovy.mock.interceptor.MockProxyMetaClass make(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.StrictExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object call(java.lang.Object,java.lang.Object)>",
    "<groovy.mock.interceptor.CallSpec: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: java.util.List getAssertions()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getTestMethods(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.String getFilename()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object doCall(java.lang.Object,java.lang.Object)>"
  ],
  "2.5.0-rc-3": [
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.net.URI)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Character getDifferentiator()>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: junit.framework.TestSuite getSuite()>",
    "<groovy.util.JavadocAssertionTestSuite: void <clinit>()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String)>",
    "<groovy.util.StringTestUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.mock.interceptor.StubFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.Map getLineNumberToAssertionsMap(java.lang.String,java.util.List)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader,java.lang.String)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getAssertionTags(java.lang.String)>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.TryCatchStatement tryCatchAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode,org.codehaus.groovy.ast.MethodNode,java.util.ArrayList)>",
    "<groovy.lang.GroovyLogTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: void tearDown()>",
    "<groovy.mock.interceptor.MockFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Integer getCodeIndex()>",
    "<groovy.util.StringTestUtil: void assertMultilineStringsEqual(java.lang.String,java.lang.String)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.util.Map getLineNumberToAssertions()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.File)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: void setUp()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: void <init>(groovy.lang.MetaClassRegistry,java.lang.Class,groovy.lang.MetaClass,boolean)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Binding getContext()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class buildTest(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(groovy.lang.GroovyCodeSource)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.Class,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: boolean isEligible(java.lang.String,int)>",
    "<groovy.mock.interceptor.Demand: void <init>()>",
    "<groovy.util.GroovyTestCase: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyShell createNewShell()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.String stringLog(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite()>",
    "<groovy.mock.interceptor.Ignore: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,groovy.lang.Closure)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.Object withLevel(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject getInstance(java.lang.Class,java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.String getAssertion()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getAssertion(java.lang.String)>",
    "<groovy.util.GroovyTestCase: void assertInspect(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: java.lang.Object verify(java.util.List)>",
    "<groovy.util.JavadocAssertionTestSuite: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockInterceptor: void beforeSet(java.lang.Object,java.lang.String,java.lang.Object)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyClassLoader getClassLoader()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String,java.lang.String)>",
    "<org.codehaus.groovy.runtime.ScriptTestAdapter: void run(junit.framework.TestResult)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeGet(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.String getCode()>",
    "<groovy.mock.interceptor.Ignore: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestCode(java.lang.String,java.util.List)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeInvoke(java.lang.Object,java.lang.String,java.lang.Object[])>",
    "<groovy.util.GroovyTestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyTestCase: void assertToString(java.lang.Object,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestName(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.Demand: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class createClass(java.lang.String)>",
    "<groovy.test.GroovyAssert: void assertScript(java.lang.String)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockProxyMetaClass$FallThroughMarker: void <init>(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite: void main(java.lang.String[])>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.Statement throwAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String basename(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestMethodCodeForAssertion(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.String getFilename()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: groovy.mock.interceptor.MockProxyMetaClass make(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.StrictExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object call(java.lang.Object,java.lang.Object)>",
    "<groovy.mock.interceptor.CallSpec: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: java.util.List getAssertions()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getTestMethods(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.String getFilename()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object doCall(java.lang.Object,java.lang.Object)>"
  ],
  "2.5.15": [
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.net.URI)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Character getDifferentiator()>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: junit.framework.TestSuite getSuite()>",
    "<groovy.util.JavadocAssertionTestSuite: void <clinit>()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String)>",
    "<groovy.util.StringTestUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.mock.interceptor.StubFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.Map getLineNumberToAssertionsMap(java.lang.String,java.util.List)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader,java.lang.String)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getAssertionTags(java.lang.String)>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.TryCatchStatement tryCatchAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode,org.codehaus.groovy.ast.MethodNode,java.util.ArrayList)>",
    "<groovy.lang.GroovyLogTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: void tearDown()>",
    "<groovy.mock.interceptor.MockFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Integer getCodeIndex()>",
    "<groovy.util.StringTestUtil: void assertMultilineStringsEqual(java.lang.String,java.lang.String)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.util.Map getLineNumberToAssertions()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.File)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: void setUp()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: void <init>(groovy.lang.MetaClassRegistry,java.lang.Class,groovy.lang.MetaClass,boolean)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Binding getContext()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class buildTest(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(groovy.lang.GroovyCodeSource)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.Class,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: boolean isEligible(java.lang.String,int)>",
    "<groovy.mock.interceptor.Demand: void <init>()>",
    "<groovy.util.GroovyTestCase: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyShell createNewShell()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.String stringLog(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite()>",
    "<groovy.mock.interceptor.Ignore: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,groovy.lang.Closure)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.Object withLevel(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject getInstance(java.lang.Class,java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.String getAssertion()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.util.AllTestSuite$1: groovy.lang.GroovyClassLoader run()>",
    "<groovy.mock.interceptor.LooseExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getAssertion(java.lang.String)>",
    "<groovy.util.GroovyTestCase: void assertInspect(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: java.lang.Object verify(java.util.List)>",
    "<groovy.util.JavadocAssertionTestSuite: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockInterceptor: void beforeSet(java.lang.Object,java.lang.String,java.lang.Object)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyClassLoader getClassLoader()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String,java.lang.String)>",
    "<org.codehaus.groovy.runtime.ScriptTestAdapter: void run(junit.framework.TestResult)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeGet(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.String getCode()>",
    "<groovy.mock.interceptor.Ignore: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestCode(java.lang.String,java.util.List)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeInvoke(java.lang.Object,java.lang.String,java.lang.Object[])>",
    "<groovy.util.GroovyTestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyTestCase: void assertToString(java.lang.Object,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestName(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.Demand: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class createClass(java.lang.String)>",
    "<groovy.test.GroovyAssert: void assertScript(java.lang.String)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockProxyMetaClass$FallThroughMarker: void <init>(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite: void main(java.lang.String[])>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.Statement throwAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String basename(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestMethodCodeForAssertion(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.String getFilename()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: groovy.mock.interceptor.MockProxyMetaClass make(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.StrictExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object call(java.lang.Object,java.lang.Object)>",
    "<groovy.mock.interceptor.CallSpec: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: java.util.List getAssertions()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getTestMethods(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.String getFilename()>",
    "<groovy.util.GroovyTestSuite$1: groovy.lang.GroovyClassLoader run()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object doCall(java.lang.Object,java.lang.Object)>"
  ],
  "2.6.0-alpha-2": [
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.net.URI)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Character getDifferentiator()>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: junit.framework.TestSuite getSuite()>",
    "<groovy.util.JavadocAssertionTestSuite: void <clinit>()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String)>",
    "<groovy.util.StringTestUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.mock.interceptor.StubFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.Map getLineNumberToAssertionsMap(java.lang.String,java.util.List)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader,java.lang.String)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getAssertionTags(java.lang.String)>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.TryCatchStatement tryCatchAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode,org.codehaus.groovy.ast.MethodNode,java.util.ArrayList)>",
    "<groovy.lang.GroovyLogTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: void tearDown()>",
    "<groovy.mock.interceptor.MockFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Integer getCodeIndex()>",
    "<groovy.util.StringTestUtil: void assertMultilineStringsEqual(java.lang.String,java.lang.String)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.util.Map getLineNumberToAssertions()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.File)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: void setUp()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: void <init>(groovy.lang.MetaClassRegistry,java.lang.Class,groovy.lang.MetaClass,boolean)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Binding getContext()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class buildTest(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(groovy.lang.GroovyCodeSource)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.Class,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: boolean isEligible(java.lang.String,int)>",
    "<groovy.mock.interceptor.Demand: void <init>()>",
    "<groovy.util.GroovyTestCase: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyShell createNewShell()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.String stringLog(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite()>",
    "<groovy.mock.interceptor.Ignore: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,groovy.lang.Closure)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.Object withLevel(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject getInstance(java.lang.Class,java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.String getAssertion()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getAssertion(java.lang.String)>",
    "<groovy.util.GroovyTestCase: void assertInspect(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: java.lang.Object verify(java.util.List)>",
    "<groovy.util.JavadocAssertionTestSuite: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockInterceptor: void beforeSet(java.lang.Object,java.lang.String,java.lang.Object)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyClassLoader getClassLoader()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String,java.lang.String)>",
    "<org.codehaus.groovy.runtime.ScriptTestAdapter: void run(junit.framework.TestResult)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeGet(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.String getCode()>",
    "<groovy.mock.interceptor.Ignore: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestCode(java.lang.String,java.util.List)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeInvoke(java.lang.Object,java.lang.String,java.lang.Object[])>",
    "<groovy.util.GroovyTestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyTestCase: void assertToString(java.lang.Object,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestName(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.Demand: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class createClass(java.lang.String)>",
    "<groovy.test.GroovyAssert: void assertScript(java.lang.String)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockProxyMetaClass$FallThroughMarker: void <init>(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite: void main(java.lang.String[])>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.Statement throwAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String basename(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestMethodCodeForAssertion(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.String getFilename()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: groovy.mock.interceptor.MockProxyMetaClass make(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.StrictExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object call(java.lang.Object,java.lang.Object)>",
    "<groovy.mock.interceptor.CallSpec: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: java.util.List getAssertions()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getTestMethods(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.String getFilename()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object doCall(java.lang.Object,java.lang.Object)>"
  ],
  "2.5.0-rc-1": [
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.net.URI)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Character getDifferentiator()>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: junit.framework.TestSuite getSuite()>",
    "<groovy.util.JavadocAssertionTestSuite: void <clinit>()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String)>",
    "<groovy.util.StringTestUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.mock.interceptor.StubFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.Map getLineNumberToAssertionsMap(java.lang.String,java.util.List)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader,java.lang.String)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getAssertionTags(java.lang.String)>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.TryCatchStatement tryCatchAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode,org.codehaus.groovy.ast.MethodNode,java.util.ArrayList)>",
    "<groovy.lang.GroovyLogTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: void tearDown()>",
    "<groovy.mock.interceptor.MockFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Integer getCodeIndex()>",
    "<groovy.util.StringTestUtil: void assertMultilineStringsEqual(java.lang.String,java.lang.String)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.util.Map getLineNumberToAssertions()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.File)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: void setUp()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: void <init>(groovy.lang.MetaClassRegistry,java.lang.Class,groovy.lang.MetaClass,boolean)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Binding getContext()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class buildTest(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(groovy.lang.GroovyCodeSource)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.Class,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: boolean isEligible(java.lang.String,int)>",
    "<groovy.mock.interceptor.Demand: void <init>()>",
    "<groovy.util.GroovyTestCase: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyShell createNewShell()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.String stringLog(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite()>",
    "<groovy.mock.interceptor.Ignore: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,groovy.lang.Closure)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.Object withLevel(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject getInstance(java.lang.Class,java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.String getAssertion()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getAssertion(java.lang.String)>",
    "<groovy.util.GroovyTestCase: void assertInspect(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: java.lang.Object verify(java.util.List)>",
    "<groovy.util.JavadocAssertionTestSuite: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockInterceptor: void beforeSet(java.lang.Object,java.lang.String,java.lang.Object)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyClassLoader getClassLoader()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String,java.lang.String)>",
    "<org.codehaus.groovy.runtime.ScriptTestAdapter: void run(junit.framework.TestResult)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeGet(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.String getCode()>",
    "<groovy.mock.interceptor.Ignore: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestCode(java.lang.String,java.util.List)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeInvoke(java.lang.Object,java.lang.String,java.lang.Object[])>",
    "<groovy.util.GroovyTestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyTestCase: void assertToString(java.lang.Object,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestName(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.Demand: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class createClass(java.lang.String)>",
    "<groovy.test.GroovyAssert: void assertScript(java.lang.String)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockProxyMetaClass$FallThroughMarker: void <init>(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite: void main(java.lang.String[])>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.Statement throwAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String basename(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestMethodCodeForAssertion(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.String getFilename()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: groovy.mock.interceptor.MockProxyMetaClass make(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.StrictExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object call(java.lang.Object,java.lang.Object)>",
    "<groovy.mock.interceptor.CallSpec: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: java.util.List getAssertions()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getTestMethods(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.String getFilename()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object doCall(java.lang.Object,java.lang.Object)>"
  ],
  "2.4.15": [
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.net.URI)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Character getDifferentiator()>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: junit.framework.TestSuite getSuite()>",
    "<groovy.util.JavadocAssertionTestSuite: void <clinit>()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String)>",
    "<groovy.util.StringTestUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.mock.interceptor.StubFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.Map getLineNumberToAssertionsMap(java.lang.String,java.util.List)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader,java.lang.String)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getAssertionTags(java.lang.String)>",
    "<groovy.lang.GroovyLogTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: void tearDown()>",
    "<groovy.mock.interceptor.MockFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Integer getCodeIndex()>",
    "<groovy.util.StringTestUtil: void assertMultilineStringsEqual(java.lang.String,java.lang.String)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.util.Map getLineNumberToAssertions()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.File)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: void setUp()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: void <init>(groovy.lang.MetaClassRegistry,java.lang.Class,groovy.lang.MetaClass,boolean)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Binding getContext()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class buildTest(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(groovy.lang.GroovyCodeSource)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.Class,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: boolean isEligible(java.lang.String,int)>",
    "<groovy.mock.interceptor.Demand: void <init>()>",
    "<groovy.util.GroovyTestCase: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyShell createNewShell()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.String stringLog(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite()>",
    "<groovy.mock.interceptor.Ignore: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,groovy.lang.Closure)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.Object withLevel(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject getInstance(java.lang.Class,java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.String getAssertion()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getAssertion(java.lang.String)>",
    "<groovy.util.GroovyTestCase: void assertInspect(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: java.lang.Object verify(java.util.List)>",
    "<groovy.util.JavadocAssertionTestSuite: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockInterceptor: void beforeSet(java.lang.Object,java.lang.String,java.lang.Object)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyClassLoader getClassLoader()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String,java.lang.String)>",
    "<org.codehaus.groovy.runtime.ScriptTestAdapter: void run(junit.framework.TestResult)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeGet(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.String getCode()>",
    "<groovy.mock.interceptor.Ignore: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestCode(java.lang.String,java.util.List)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeInvoke(java.lang.Object,java.lang.String,java.lang.Object[])>",
    "<groovy.util.GroovyTestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyTestCase: void assertToString(java.lang.Object,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestName(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.Demand: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class createClass(java.lang.String)>",
    "<groovy.test.GroovyAssert: void assertScript(java.lang.String)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockProxyMetaClass$FallThroughMarker: void <init>(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite: void main(java.lang.String[])>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String basename(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestMethodCodeForAssertion(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.String getFilename()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: groovy.mock.interceptor.MockProxyMetaClass make(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.StrictExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object call(java.lang.Object,java.lang.Object)>",
    "<groovy.mock.interceptor.CallSpec: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.Demand: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: java.util.List getAssertions()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getTestMethods(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.String getFilename()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object doCall(java.lang.Object,java.lang.Object)>"
  ],
  "2.5.7": [
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.net.URI)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Character getDifferentiator()>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: junit.framework.TestSuite getSuite()>",
    "<groovy.util.JavadocAssertionTestSuite: void <clinit>()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String)>",
    "<groovy.util.StringTestUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.mock.interceptor.StubFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.Map getLineNumberToAssertionsMap(java.lang.String,java.util.List)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader,java.lang.String)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getAssertionTags(java.lang.String)>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.TryCatchStatement tryCatchAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode,org.codehaus.groovy.ast.MethodNode,java.util.ArrayList)>",
    "<groovy.lang.GroovyLogTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: void tearDown()>",
    "<groovy.mock.interceptor.MockFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Integer getCodeIndex()>",
    "<groovy.util.StringTestUtil: void assertMultilineStringsEqual(java.lang.String,java.lang.String)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.util.Map getLineNumberToAssertions()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.File)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: void setUp()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: void <init>(groovy.lang.MetaClassRegistry,java.lang.Class,groovy.lang.MetaClass,boolean)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Binding getContext()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class buildTest(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(groovy.lang.GroovyCodeSource)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.Class,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: boolean isEligible(java.lang.String,int)>",
    "<groovy.mock.interceptor.Demand: void <init>()>",
    "<groovy.util.GroovyTestCase: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyShell createNewShell()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.String stringLog(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite()>",
    "<groovy.mock.interceptor.Ignore: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,groovy.lang.Closure)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.Object withLevel(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject getInstance(java.lang.Class,java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.String getAssertion()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.util.AllTestSuite$1: groovy.lang.GroovyClassLoader run()>",
    "<groovy.mock.interceptor.LooseExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getAssertion(java.lang.String)>",
    "<groovy.util.GroovyTestCase: void assertInspect(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: java.lang.Object verify(java.util.List)>",
    "<groovy.util.JavadocAssertionTestSuite: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockInterceptor: void beforeSet(java.lang.Object,java.lang.String,java.lang.Object)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyClassLoader getClassLoader()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String,java.lang.String)>",
    "<org.codehaus.groovy.runtime.ScriptTestAdapter: void run(junit.framework.TestResult)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeGet(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.String getCode()>",
    "<groovy.mock.interceptor.Ignore: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestCode(java.lang.String,java.util.List)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeInvoke(java.lang.Object,java.lang.String,java.lang.Object[])>",
    "<groovy.util.GroovyTestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyTestCase: void assertToString(java.lang.Object,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestName(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.Demand: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class createClass(java.lang.String)>",
    "<groovy.test.GroovyAssert: void assertScript(java.lang.String)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockProxyMetaClass$FallThroughMarker: void <init>(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite: void main(java.lang.String[])>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.Statement throwAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String basename(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestMethodCodeForAssertion(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.String getFilename()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: groovy.mock.interceptor.MockProxyMetaClass make(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.StrictExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object call(java.lang.Object,java.lang.Object)>",
    "<groovy.mock.interceptor.CallSpec: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: java.util.List getAssertions()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getTestMethods(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.String getFilename()>",
    "<groovy.util.GroovyTestSuite$1: groovy.lang.GroovyClassLoader run()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object doCall(java.lang.Object,java.lang.Object)>"
  ],
  "2.5.6": [
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.net.URI)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Character getDifferentiator()>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: junit.framework.TestSuite getSuite()>",
    "<groovy.util.JavadocAssertionTestSuite: void <clinit>()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String)>",
    "<groovy.util.StringTestUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.mock.interceptor.StubFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.Map getLineNumberToAssertionsMap(java.lang.String,java.util.List)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader,java.lang.String)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getAssertionTags(java.lang.String)>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.TryCatchStatement tryCatchAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode,org.codehaus.groovy.ast.MethodNode,java.util.ArrayList)>",
    "<groovy.lang.GroovyLogTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: void tearDown()>",
    "<groovy.mock.interceptor.MockFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Integer getCodeIndex()>",
    "<groovy.util.StringTestUtil: void assertMultilineStringsEqual(java.lang.String,java.lang.String)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.util.Map getLineNumberToAssertions()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.File)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: void setUp()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: void <init>(groovy.lang.MetaClassRegistry,java.lang.Class,groovy.lang.MetaClass,boolean)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Binding getContext()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class buildTest(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(groovy.lang.GroovyCodeSource)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.Class,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: boolean isEligible(java.lang.String,int)>",
    "<groovy.mock.interceptor.Demand: void <init>()>",
    "<groovy.util.GroovyTestCase: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyShell createNewShell()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.String stringLog(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite()>",
    "<groovy.mock.interceptor.Ignore: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,groovy.lang.Closure)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.Object withLevel(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject getInstance(java.lang.Class,java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.String getAssertion()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getAssertion(java.lang.String)>",
    "<groovy.util.GroovyTestCase: void assertInspect(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: java.lang.Object verify(java.util.List)>",
    "<groovy.util.JavadocAssertionTestSuite: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockInterceptor: void beforeSet(java.lang.Object,java.lang.String,java.lang.Object)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyClassLoader getClassLoader()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String,java.lang.String)>",
    "<org.codehaus.groovy.runtime.ScriptTestAdapter: void run(junit.framework.TestResult)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeGet(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.String getCode()>",
    "<groovy.mock.interceptor.Ignore: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestCode(java.lang.String,java.util.List)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeInvoke(java.lang.Object,java.lang.String,java.lang.Object[])>",
    "<groovy.util.GroovyTestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyTestCase: void assertToString(java.lang.Object,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestName(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.Demand: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class createClass(java.lang.String)>",
    "<groovy.test.GroovyAssert: void assertScript(java.lang.String)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockProxyMetaClass$FallThroughMarker: void <init>(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite: void main(java.lang.String[])>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.Statement throwAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String basename(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestMethodCodeForAssertion(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.String getFilename()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: groovy.mock.interceptor.MockProxyMetaClass make(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.StrictExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object call(java.lang.Object,java.lang.Object)>",
    "<groovy.mock.interceptor.CallSpec: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: java.util.List getAssertions()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getTestMethods(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.String getFilename()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object doCall(java.lang.Object,java.lang.Object)>"
  ],
  "2.4.21": [
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.net.URI)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Character getDifferentiator()>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: junit.framework.TestSuite getSuite()>",
    "<groovy.util.JavadocAssertionTestSuite: void <clinit>()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String)>",
    "<groovy.util.StringTestUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.mock.interceptor.StubFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.Map getLineNumberToAssertionsMap(java.lang.String,java.util.List)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader,java.lang.String)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getAssertionTags(java.lang.String)>",
    "<groovy.lang.GroovyLogTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: void tearDown()>",
    "<groovy.mock.interceptor.MockFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Integer getCodeIndex()>",
    "<groovy.util.StringTestUtil: void assertMultilineStringsEqual(java.lang.String,java.lang.String)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.util.Map getLineNumberToAssertions()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.File)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: void setUp()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: void <init>(groovy.lang.MetaClassRegistry,java.lang.Class,groovy.lang.MetaClass,boolean)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Binding getContext()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class buildTest(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(groovy.lang.GroovyCodeSource)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.Class,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: boolean isEligible(java.lang.String,int)>",
    "<groovy.mock.interceptor.Demand: void <init>()>",
    "<groovy.util.GroovyTestCase: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyShell createNewShell()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.String stringLog(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite()>",
    "<groovy.mock.interceptor.Ignore: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,groovy.lang.Closure)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.Object withLevel(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject getInstance(java.lang.Class,java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.String getAssertion()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getAssertion(java.lang.String)>",
    "<groovy.util.GroovyTestCase: void assertInspect(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: java.lang.Object verify(java.util.List)>",
    "<groovy.util.JavadocAssertionTestSuite: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockInterceptor: void beforeSet(java.lang.Object,java.lang.String,java.lang.Object)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyClassLoader getClassLoader()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String,java.lang.String)>",
    "<org.codehaus.groovy.runtime.ScriptTestAdapter: void run(junit.framework.TestResult)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeGet(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.String getCode()>",
    "<groovy.mock.interceptor.Ignore: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestCode(java.lang.String,java.util.List)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeInvoke(java.lang.Object,java.lang.String,java.lang.Object[])>",
    "<groovy.util.GroovyTestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyTestCase: void assertToString(java.lang.Object,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestName(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.Demand: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class createClass(java.lang.String)>",
    "<groovy.test.GroovyAssert: void assertScript(java.lang.String)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockProxyMetaClass$FallThroughMarker: void <init>(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite: void main(java.lang.String[])>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String basename(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestMethodCodeForAssertion(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.String getFilename()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: groovy.mock.interceptor.MockProxyMetaClass make(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.StrictExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object call(java.lang.Object,java.lang.Object)>",
    "<groovy.mock.interceptor.CallSpec: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.Demand: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: java.util.List getAssertions()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getTestMethods(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.String getFilename()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object doCall(java.lang.Object,java.lang.Object)>"
  ],
  "2.4.17": [
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.net.URI)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Character getDifferentiator()>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: junit.framework.TestSuite getSuite()>",
    "<groovy.util.JavadocAssertionTestSuite: void <clinit>()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String)>",
    "<groovy.util.StringTestUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.mock.interceptor.StubFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.Map getLineNumberToAssertionsMap(java.lang.String,java.util.List)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader,java.lang.String)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getAssertionTags(java.lang.String)>",
    "<groovy.lang.GroovyLogTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: void tearDown()>",
    "<groovy.mock.interceptor.MockFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Integer getCodeIndex()>",
    "<groovy.util.StringTestUtil: void assertMultilineStringsEqual(java.lang.String,java.lang.String)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.util.Map getLineNumberToAssertions()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.File)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: void setUp()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: void <init>(groovy.lang.MetaClassRegistry,java.lang.Class,groovy.lang.MetaClass,boolean)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Binding getContext()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class buildTest(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(groovy.lang.GroovyCodeSource)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.Class,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: boolean isEligible(java.lang.String,int)>",
    "<groovy.mock.interceptor.Demand: void <init>()>",
    "<groovy.util.GroovyTestCase: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyShell createNewShell()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.String stringLog(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite()>",
    "<groovy.mock.interceptor.Ignore: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,groovy.lang.Closure)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.Object withLevel(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject getInstance(java.lang.Class,java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.String getAssertion()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getAssertion(java.lang.String)>",
    "<groovy.util.GroovyTestCase: void assertInspect(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: java.lang.Object verify(java.util.List)>",
    "<groovy.util.JavadocAssertionTestSuite: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockInterceptor: void beforeSet(java.lang.Object,java.lang.String,java.lang.Object)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyClassLoader getClassLoader()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String,java.lang.String)>",
    "<org.codehaus.groovy.runtime.ScriptTestAdapter: void run(junit.framework.TestResult)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeGet(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.String getCode()>",
    "<groovy.mock.interceptor.Ignore: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestCode(java.lang.String,java.util.List)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeInvoke(java.lang.Object,java.lang.String,java.lang.Object[])>",
    "<groovy.util.GroovyTestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyTestCase: void assertToString(java.lang.Object,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestName(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.Demand: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class createClass(java.lang.String)>",
    "<groovy.test.GroovyAssert: void assertScript(java.lang.String)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockProxyMetaClass$FallThroughMarker: void <init>(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite: void main(java.lang.String[])>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String basename(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestMethodCodeForAssertion(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.String getFilename()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: groovy.mock.interceptor.MockProxyMetaClass make(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.StrictExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object call(java.lang.Object,java.lang.Object)>",
    "<groovy.mock.interceptor.CallSpec: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.Demand: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: java.util.List getAssertions()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getTestMethods(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.String getFilename()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object doCall(java.lang.Object,java.lang.Object)>"
  ],
  "2.5.0-rc-2": [
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.net.URI)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Character getDifferentiator()>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: junit.framework.TestSuite getSuite()>",
    "<groovy.util.JavadocAssertionTestSuite: void <clinit>()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String)>",
    "<groovy.util.StringTestUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.mock.interceptor.StubFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.Map getLineNumberToAssertionsMap(java.lang.String,java.util.List)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader,java.lang.String)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getAssertionTags(java.lang.String)>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.TryCatchStatement tryCatchAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode,org.codehaus.groovy.ast.MethodNode,java.util.ArrayList)>",
    "<groovy.lang.GroovyLogTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: void tearDown()>",
    "<groovy.mock.interceptor.MockFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Integer getCodeIndex()>",
    "<groovy.util.StringTestUtil: void assertMultilineStringsEqual(java.lang.String,java.lang.String)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.util.Map getLineNumberToAssertions()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.File)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: void setUp()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: void <init>(groovy.lang.MetaClassRegistry,java.lang.Class,groovy.lang.MetaClass,boolean)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Binding getContext()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class buildTest(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(groovy.lang.GroovyCodeSource)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.Class,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: boolean isEligible(java.lang.String,int)>",
    "<groovy.mock.interceptor.Demand: void <init>()>",
    "<groovy.util.GroovyTestCase: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyShell createNewShell()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.String stringLog(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite()>",
    "<groovy.mock.interceptor.Ignore: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,groovy.lang.Closure)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.Object withLevel(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject getInstance(java.lang.Class,java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.String getAssertion()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getAssertion(java.lang.String)>",
    "<groovy.util.GroovyTestCase: void assertInspect(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: java.lang.Object verify(java.util.List)>",
    "<groovy.util.JavadocAssertionTestSuite: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockInterceptor: void beforeSet(java.lang.Object,java.lang.String,java.lang.Object)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyClassLoader getClassLoader()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String,java.lang.String)>",
    "<org.codehaus.groovy.runtime.ScriptTestAdapter: void run(junit.framework.TestResult)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeGet(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.String getCode()>",
    "<groovy.mock.interceptor.Ignore: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestCode(java.lang.String,java.util.List)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeInvoke(java.lang.Object,java.lang.String,java.lang.Object[])>",
    "<groovy.util.GroovyTestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyTestCase: void assertToString(java.lang.Object,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestName(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.Demand: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class createClass(java.lang.String)>",
    "<groovy.test.GroovyAssert: void assertScript(java.lang.String)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockProxyMetaClass$FallThroughMarker: void <init>(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite: void main(java.lang.String[])>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.Statement throwAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String basename(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestMethodCodeForAssertion(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.String getFilename()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: groovy.mock.interceptor.MockProxyMetaClass make(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.StrictExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object call(java.lang.Object,java.lang.Object)>",
    "<groovy.mock.interceptor.CallSpec: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: java.util.List getAssertions()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getTestMethods(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.String getFilename()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object doCall(java.lang.Object,java.lang.Object)>"
  ],
  "2.5.14": [
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.net.URI)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Character getDifferentiator()>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: junit.framework.TestSuite getSuite()>",
    "<groovy.util.JavadocAssertionTestSuite: void <clinit>()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String)>",
    "<groovy.util.StringTestUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.mock.interceptor.StubFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.Map getLineNumberToAssertionsMap(java.lang.String,java.util.List)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader,java.lang.String)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getAssertionTags(java.lang.String)>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.TryCatchStatement tryCatchAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode,org.codehaus.groovy.ast.MethodNode,java.util.ArrayList)>",
    "<groovy.lang.GroovyLogTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: void tearDown()>",
    "<groovy.mock.interceptor.MockFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Integer getCodeIndex()>",
    "<groovy.util.StringTestUtil: void assertMultilineStringsEqual(java.lang.String,java.lang.String)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.util.Map getLineNumberToAssertions()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.File)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: void setUp()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: void <init>(groovy.lang.MetaClassRegistry,java.lang.Class,groovy.lang.MetaClass,boolean)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Binding getContext()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class buildTest(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(groovy.lang.GroovyCodeSource)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.Class,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: boolean isEligible(java.lang.String,int)>",
    "<groovy.mock.interceptor.Demand: void <init>()>",
    "<groovy.util.GroovyTestCase: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyShell createNewShell()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.String stringLog(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite()>",
    "<groovy.mock.interceptor.Ignore: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,groovy.lang.Closure)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.Object withLevel(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject getInstance(java.lang.Class,java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.String getAssertion()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.util.AllTestSuite$1: groovy.lang.GroovyClassLoader run()>",
    "<groovy.mock.interceptor.LooseExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getAssertion(java.lang.String)>",
    "<groovy.util.GroovyTestCase: void assertInspect(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: java.lang.Object verify(java.util.List)>",
    "<groovy.util.JavadocAssertionTestSuite: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockInterceptor: void beforeSet(java.lang.Object,java.lang.String,java.lang.Object)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyClassLoader getClassLoader()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String,java.lang.String)>",
    "<org.codehaus.groovy.runtime.ScriptTestAdapter: void run(junit.framework.TestResult)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeGet(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.String getCode()>",
    "<groovy.mock.interceptor.Ignore: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestCode(java.lang.String,java.util.List)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeInvoke(java.lang.Object,java.lang.String,java.lang.Object[])>",
    "<groovy.util.GroovyTestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyTestCase: void assertToString(java.lang.Object,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestName(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.Demand: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class createClass(java.lang.String)>",
    "<groovy.test.GroovyAssert: void assertScript(java.lang.String)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockProxyMetaClass$FallThroughMarker: void <init>(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite: void main(java.lang.String[])>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.Statement throwAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String basename(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestMethodCodeForAssertion(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.String getFilename()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: groovy.mock.interceptor.MockProxyMetaClass make(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.StrictExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object call(java.lang.Object,java.lang.Object)>",
    "<groovy.mock.interceptor.CallSpec: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: java.util.List getAssertions()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getTestMethods(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.String getFilename()>",
    "<groovy.util.GroovyTestSuite$1: groovy.lang.GroovyClassLoader run()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object doCall(java.lang.Object,java.lang.Object)>"
  ],
  "2.5.5": [
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.net.URI)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Character getDifferentiator()>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: junit.framework.TestSuite getSuite()>",
    "<groovy.util.JavadocAssertionTestSuite: void <clinit>()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String)>",
    "<groovy.util.StringTestUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.mock.interceptor.StubFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.Map getLineNumberToAssertionsMap(java.lang.String,java.util.List)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader,java.lang.String)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getAssertionTags(java.lang.String)>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.TryCatchStatement tryCatchAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode,org.codehaus.groovy.ast.MethodNode,java.util.ArrayList)>",
    "<groovy.lang.GroovyLogTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: void tearDown()>",
    "<groovy.mock.interceptor.MockFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Integer getCodeIndex()>",
    "<groovy.util.StringTestUtil: void assertMultilineStringsEqual(java.lang.String,java.lang.String)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.util.Map getLineNumberToAssertions()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.File)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: void setUp()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: void <init>(groovy.lang.MetaClassRegistry,java.lang.Class,groovy.lang.MetaClass,boolean)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Binding getContext()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class buildTest(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(groovy.lang.GroovyCodeSource)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.Class,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: boolean isEligible(java.lang.String,int)>",
    "<groovy.mock.interceptor.Demand: void <init>()>",
    "<groovy.util.GroovyTestCase: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyShell createNewShell()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.String stringLog(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite()>",
    "<groovy.mock.interceptor.Ignore: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,groovy.lang.Closure)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.Object withLevel(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject getInstance(java.lang.Class,java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.String getAssertion()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getAssertion(java.lang.String)>",
    "<groovy.util.GroovyTestCase: void assertInspect(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: java.lang.Object verify(java.util.List)>",
    "<groovy.util.JavadocAssertionTestSuite: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockInterceptor: void beforeSet(java.lang.Object,java.lang.String,java.lang.Object)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyClassLoader getClassLoader()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String,java.lang.String)>",
    "<org.codehaus.groovy.runtime.ScriptTestAdapter: void run(junit.framework.TestResult)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeGet(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.String getCode()>",
    "<groovy.mock.interceptor.Ignore: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestCode(java.lang.String,java.util.List)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeInvoke(java.lang.Object,java.lang.String,java.lang.Object[])>",
    "<groovy.util.GroovyTestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyTestCase: void assertToString(java.lang.Object,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestName(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.Demand: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class createClass(java.lang.String)>",
    "<groovy.test.GroovyAssert: void assertScript(java.lang.String)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockProxyMetaClass$FallThroughMarker: void <init>(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite: void main(java.lang.String[])>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.Statement throwAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String basename(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestMethodCodeForAssertion(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.String getFilename()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: groovy.mock.interceptor.MockProxyMetaClass make(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.StrictExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object call(java.lang.Object,java.lang.Object)>",
    "<groovy.mock.interceptor.CallSpec: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: java.util.List getAssertions()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getTestMethods(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.String getFilename()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object doCall(java.lang.Object,java.lang.Object)>"
  ],
  "2.5.10": [
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.net.URI)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Character getDifferentiator()>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: junit.framework.TestSuite getSuite()>",
    "<groovy.util.JavadocAssertionTestSuite: void <clinit>()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String)>",
    "<groovy.util.StringTestUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.mock.interceptor.StubFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.Map getLineNumberToAssertionsMap(java.lang.String,java.util.List)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader,java.lang.String)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getAssertionTags(java.lang.String)>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.TryCatchStatement tryCatchAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode,org.codehaus.groovy.ast.MethodNode,java.util.ArrayList)>",
    "<groovy.lang.GroovyLogTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: void tearDown()>",
    "<groovy.mock.interceptor.MockFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Integer getCodeIndex()>",
    "<groovy.util.StringTestUtil: void assertMultilineStringsEqual(java.lang.String,java.lang.String)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.util.Map getLineNumberToAssertions()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.File)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: void setUp()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: void <init>(groovy.lang.MetaClassRegistry,java.lang.Class,groovy.lang.MetaClass,boolean)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Binding getContext()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class buildTest(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(groovy.lang.GroovyCodeSource)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.Class,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: boolean isEligible(java.lang.String,int)>",
    "<groovy.mock.interceptor.Demand: void <init>()>",
    "<groovy.util.GroovyTestCase: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyShell createNewShell()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.String stringLog(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite()>",
    "<groovy.mock.interceptor.Ignore: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,groovy.lang.Closure)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.Object withLevel(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject getInstance(java.lang.Class,java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.String getAssertion()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.util.AllTestSuite$1: groovy.lang.GroovyClassLoader run()>",
    "<groovy.mock.interceptor.LooseExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getAssertion(java.lang.String)>",
    "<groovy.util.GroovyTestCase: void assertInspect(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: java.lang.Object verify(java.util.List)>",
    "<groovy.util.JavadocAssertionTestSuite: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockInterceptor: void beforeSet(java.lang.Object,java.lang.String,java.lang.Object)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyClassLoader getClassLoader()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String,java.lang.String)>",
    "<org.codehaus.groovy.runtime.ScriptTestAdapter: void run(junit.framework.TestResult)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeGet(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.String getCode()>",
    "<groovy.mock.interceptor.Ignore: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestCode(java.lang.String,java.util.List)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeInvoke(java.lang.Object,java.lang.String,java.lang.Object[])>",
    "<groovy.util.GroovyTestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyTestCase: void assertToString(java.lang.Object,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestName(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.Demand: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class createClass(java.lang.String)>",
    "<groovy.test.GroovyAssert: void assertScript(java.lang.String)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockProxyMetaClass$FallThroughMarker: void <init>(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite: void main(java.lang.String[])>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.Statement throwAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String basename(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestMethodCodeForAssertion(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.String getFilename()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: groovy.mock.interceptor.MockProxyMetaClass make(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.StrictExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object call(java.lang.Object,java.lang.Object)>",
    "<groovy.mock.interceptor.CallSpec: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: java.util.List getAssertions()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getTestMethods(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.String getFilename()>",
    "<groovy.util.GroovyTestSuite$1: groovy.lang.GroovyClassLoader run()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object doCall(java.lang.Object,java.lang.Object)>"
  ],
  "2.4.20": [
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.net.URI)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Character getDifferentiator()>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: junit.framework.TestSuite getSuite()>",
    "<groovy.util.JavadocAssertionTestSuite: void <clinit>()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String)>",
    "<groovy.util.StringTestUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.mock.interceptor.StubFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.Map getLineNumberToAssertionsMap(java.lang.String,java.util.List)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader,java.lang.String)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getAssertionTags(java.lang.String)>",
    "<groovy.lang.GroovyLogTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: void tearDown()>",
    "<groovy.mock.interceptor.MockFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Integer getCodeIndex()>",
    "<groovy.util.StringTestUtil: void assertMultilineStringsEqual(java.lang.String,java.lang.String)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.util.Map getLineNumberToAssertions()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.File)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: void setUp()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: void <init>(groovy.lang.MetaClassRegistry,java.lang.Class,groovy.lang.MetaClass,boolean)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Binding getContext()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class buildTest(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(groovy.lang.GroovyCodeSource)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.Class,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: boolean isEligible(java.lang.String,int)>",
    "<groovy.mock.interceptor.Demand: void <init>()>",
    "<groovy.util.GroovyTestCase: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyShell createNewShell()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.String stringLog(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite()>",
    "<groovy.mock.interceptor.Ignore: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,groovy.lang.Closure)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.Object withLevel(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject getInstance(java.lang.Class,java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.String getAssertion()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getAssertion(java.lang.String)>",
    "<groovy.util.GroovyTestCase: void assertInspect(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: java.lang.Object verify(java.util.List)>",
    "<groovy.util.JavadocAssertionTestSuite: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockInterceptor: void beforeSet(java.lang.Object,java.lang.String,java.lang.Object)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyClassLoader getClassLoader()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String,java.lang.String)>",
    "<org.codehaus.groovy.runtime.ScriptTestAdapter: void run(junit.framework.TestResult)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeGet(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.String getCode()>",
    "<groovy.mock.interceptor.Ignore: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestCode(java.lang.String,java.util.List)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeInvoke(java.lang.Object,java.lang.String,java.lang.Object[])>",
    "<groovy.util.GroovyTestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyTestCase: void assertToString(java.lang.Object,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestName(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.Demand: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class createClass(java.lang.String)>",
    "<groovy.test.GroovyAssert: void assertScript(java.lang.String)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockProxyMetaClass$FallThroughMarker: void <init>(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite: void main(java.lang.String[])>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String basename(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestMethodCodeForAssertion(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.String getFilename()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: groovy.mock.interceptor.MockProxyMetaClass make(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.StrictExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object call(java.lang.Object,java.lang.Object)>",
    "<groovy.mock.interceptor.CallSpec: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.Demand: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: java.util.List getAssertions()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getTestMethods(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.String getFilename()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object doCall(java.lang.Object,java.lang.Object)>"
  ],
  "2.5.0-beta-2": [
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.net.URI)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Character getDifferentiator()>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: junit.framework.TestSuite getSuite()>",
    "<groovy.util.JavadocAssertionTestSuite: void <clinit>()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String)>",
    "<groovy.util.StringTestUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.mock.interceptor.StubFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.Map getLineNumberToAssertionsMap(java.lang.String,java.util.List)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader,java.lang.String)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getAssertionTags(java.lang.String)>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.TryCatchStatement tryCatchAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode,org.codehaus.groovy.ast.MethodNode,java.util.ArrayList)>",
    "<groovy.lang.GroovyLogTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: void tearDown()>",
    "<groovy.mock.interceptor.MockFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Integer getCodeIndex()>",
    "<groovy.util.StringTestUtil: void assertMultilineStringsEqual(java.lang.String,java.lang.String)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.util.Map getLineNumberToAssertions()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.File)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: void setUp()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: void <init>(groovy.lang.MetaClassRegistry,java.lang.Class,groovy.lang.MetaClass,boolean)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Binding getContext()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class buildTest(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(groovy.lang.GroovyCodeSource)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.Class,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: boolean isEligible(java.lang.String,int)>",
    "<groovy.mock.interceptor.Demand: void <init>()>",
    "<groovy.util.GroovyTestCase: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyShell createNewShell()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.String stringLog(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite()>",
    "<groovy.mock.interceptor.Ignore: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,groovy.lang.Closure)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.Object withLevel(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject getInstance(java.lang.Class,java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.String getAssertion()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getAssertion(java.lang.String)>",
    "<groovy.util.GroovyTestCase: void assertInspect(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: java.lang.Object verify(java.util.List)>",
    "<groovy.util.JavadocAssertionTestSuite: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockInterceptor: void beforeSet(java.lang.Object,java.lang.String,java.lang.Object)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyClassLoader getClassLoader()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String,java.lang.String)>",
    "<org.codehaus.groovy.runtime.ScriptTestAdapter: void run(junit.framework.TestResult)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeGet(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.String getCode()>",
    "<groovy.mock.interceptor.Ignore: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestCode(java.lang.String,java.util.List)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeInvoke(java.lang.Object,java.lang.String,java.lang.Object[])>",
    "<groovy.util.GroovyTestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyTestCase: void assertToString(java.lang.Object,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestName(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.Demand: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class createClass(java.lang.String)>",
    "<groovy.test.GroovyAssert: void assertScript(java.lang.String)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockProxyMetaClass$FallThroughMarker: void <init>(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite: void main(java.lang.String[])>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.Statement throwAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String basename(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestMethodCodeForAssertion(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.String getFilename()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: groovy.mock.interceptor.MockProxyMetaClass make(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.StrictExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object call(java.lang.Object,java.lang.Object)>",
    "<groovy.mock.interceptor.CallSpec: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: java.util.List getAssertions()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getTestMethods(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.String getFilename()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object doCall(java.lang.Object,java.lang.Object)>"
  ],
  "2.5.17": [
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.net.URI)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Character getDifferentiator()>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: junit.framework.TestSuite getSuite()>",
    "<groovy.util.JavadocAssertionTestSuite: void <clinit>()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String)>",
    "<groovy.util.StringTestUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.mock.interceptor.StubFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.Map getLineNumberToAssertionsMap(java.lang.String,java.util.List)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader,java.lang.String)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getAssertionTags(java.lang.String)>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.TryCatchStatement tryCatchAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode,org.codehaus.groovy.ast.MethodNode,java.util.ArrayList)>",
    "<groovy.lang.GroovyLogTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: void tearDown()>",
    "<groovy.mock.interceptor.MockFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Integer getCodeIndex()>",
    "<groovy.util.StringTestUtil: void assertMultilineStringsEqual(java.lang.String,java.lang.String)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.util.Map getLineNumberToAssertions()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.File)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: void setUp()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: void <init>(groovy.lang.MetaClassRegistry,java.lang.Class,groovy.lang.MetaClass,boolean)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Binding getContext()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class buildTest(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(groovy.lang.GroovyCodeSource)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.Class,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: boolean isEligible(java.lang.String,int)>",
    "<groovy.mock.interceptor.Demand: void <init>()>",
    "<groovy.util.GroovyTestCase: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyShell createNewShell()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.String stringLog(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite()>",
    "<groovy.mock.interceptor.Ignore: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,groovy.lang.Closure)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.Object withLevel(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject getInstance(java.lang.Class,java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.String getAssertion()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.util.AllTestSuite$1: groovy.lang.GroovyClassLoader run()>",
    "<groovy.mock.interceptor.LooseExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getAssertion(java.lang.String)>",
    "<groovy.util.GroovyTestCase: void assertInspect(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: java.lang.Object verify(java.util.List)>",
    "<groovy.util.JavadocAssertionTestSuite: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockInterceptor: void beforeSet(java.lang.Object,java.lang.String,java.lang.Object)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyClassLoader getClassLoader()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String,java.lang.String)>",
    "<org.codehaus.groovy.runtime.ScriptTestAdapter: void run(junit.framework.TestResult)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeGet(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.String getCode()>",
    "<groovy.mock.interceptor.Ignore: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestCode(java.lang.String,java.util.List)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeInvoke(java.lang.Object,java.lang.String,java.lang.Object[])>",
    "<groovy.util.GroovyTestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyTestCase: void assertToString(java.lang.Object,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestName(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.Demand: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class createClass(java.lang.String)>",
    "<groovy.test.GroovyAssert: void assertScript(java.lang.String)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockProxyMetaClass$FallThroughMarker: void <init>(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite: void main(java.lang.String[])>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.Statement throwAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String basename(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestMethodCodeForAssertion(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.String getFilename()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: groovy.mock.interceptor.MockProxyMetaClass make(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.StrictExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object call(java.lang.Object,java.lang.Object)>",
    "<groovy.mock.interceptor.CallSpec: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: java.util.List getAssertions()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getTestMethods(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.String getFilename()>",
    "<groovy.util.GroovyTestSuite$1: groovy.lang.GroovyClassLoader run()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object doCall(java.lang.Object,java.lang.Object)>"
  ],
  "2.6.0-alpha-3": [
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.net.URI)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Character getDifferentiator()>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: junit.framework.TestSuite getSuite()>",
    "<groovy.util.JavadocAssertionTestSuite: void <clinit>()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String)>",
    "<groovy.util.StringTestUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.mock.interceptor.StubFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.Map getLineNumberToAssertionsMap(java.lang.String,java.util.List)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader,java.lang.String)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getAssertionTags(java.lang.String)>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.TryCatchStatement tryCatchAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode,org.codehaus.groovy.ast.MethodNode,java.util.ArrayList)>",
    "<groovy.lang.GroovyLogTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: void tearDown()>",
    "<groovy.mock.interceptor.MockFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Integer getCodeIndex()>",
    "<groovy.util.StringTestUtil: void assertMultilineStringsEqual(java.lang.String,java.lang.String)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.util.Map getLineNumberToAssertions()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.File)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: void setUp()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: void <init>(groovy.lang.MetaClassRegistry,java.lang.Class,groovy.lang.MetaClass,boolean)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Binding getContext()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class buildTest(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(groovy.lang.GroovyCodeSource)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.Class,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: boolean isEligible(java.lang.String,int)>",
    "<groovy.mock.interceptor.Demand: void <init>()>",
    "<groovy.util.GroovyTestCase: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyShell createNewShell()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.String stringLog(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite()>",
    "<groovy.mock.interceptor.Ignore: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,groovy.lang.Closure)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.Object withLevel(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject getInstance(java.lang.Class,java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.String getAssertion()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getAssertion(java.lang.String)>",
    "<groovy.util.GroovyTestCase: void assertInspect(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: java.lang.Object verify(java.util.List)>",
    "<groovy.util.JavadocAssertionTestSuite: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockInterceptor: void beforeSet(java.lang.Object,java.lang.String,java.lang.Object)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyClassLoader getClassLoader()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String,java.lang.String)>",
    "<org.codehaus.groovy.runtime.ScriptTestAdapter: void run(junit.framework.TestResult)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeGet(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.String getCode()>",
    "<groovy.mock.interceptor.Ignore: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestCode(java.lang.String,java.util.List)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeInvoke(java.lang.Object,java.lang.String,java.lang.Object[])>",
    "<groovy.util.GroovyTestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyTestCase: void assertToString(java.lang.Object,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestName(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.Demand: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class createClass(java.lang.String)>",
    "<groovy.test.GroovyAssert: void assertScript(java.lang.String)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockProxyMetaClass$FallThroughMarker: void <init>(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite: void main(java.lang.String[])>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.Statement throwAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String basename(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestMethodCodeForAssertion(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.String getFilename()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: groovy.mock.interceptor.MockProxyMetaClass make(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.StrictExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object call(java.lang.Object,java.lang.Object)>",
    "<groovy.mock.interceptor.CallSpec: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: java.util.List getAssertions()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getTestMethods(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.String getFilename()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object doCall(java.lang.Object,java.lang.Object)>"
  ],
  "2.4.19": [
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.net.URI)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Character getDifferentiator()>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: junit.framework.TestSuite getSuite()>",
    "<groovy.util.JavadocAssertionTestSuite: void <clinit>()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String)>",
    "<groovy.util.StringTestUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.mock.interceptor.StubFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.Map getLineNumberToAssertionsMap(java.lang.String,java.util.List)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader,java.lang.String)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getAssertionTags(java.lang.String)>",
    "<groovy.lang.GroovyLogTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: void tearDown()>",
    "<groovy.mock.interceptor.MockFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Integer getCodeIndex()>",
    "<groovy.util.StringTestUtil: void assertMultilineStringsEqual(java.lang.String,java.lang.String)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.util.Map getLineNumberToAssertions()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.File)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: void setUp()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: void <init>(groovy.lang.MetaClassRegistry,java.lang.Class,groovy.lang.MetaClass,boolean)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Binding getContext()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class buildTest(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(groovy.lang.GroovyCodeSource)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.Class,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: boolean isEligible(java.lang.String,int)>",
    "<groovy.mock.interceptor.Demand: void <init>()>",
    "<groovy.util.GroovyTestCase: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyShell createNewShell()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.String stringLog(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite()>",
    "<groovy.mock.interceptor.Ignore: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,groovy.lang.Closure)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.Object withLevel(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject getInstance(java.lang.Class,java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.String getAssertion()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getAssertion(java.lang.String)>",
    "<groovy.util.GroovyTestCase: void assertInspect(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: java.lang.Object verify(java.util.List)>",
    "<groovy.util.JavadocAssertionTestSuite: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockInterceptor: void beforeSet(java.lang.Object,java.lang.String,java.lang.Object)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyClassLoader getClassLoader()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String,java.lang.String)>",
    "<org.codehaus.groovy.runtime.ScriptTestAdapter: void run(junit.framework.TestResult)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeGet(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.String getCode()>",
    "<groovy.mock.interceptor.Ignore: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestCode(java.lang.String,java.util.List)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeInvoke(java.lang.Object,java.lang.String,java.lang.Object[])>",
    "<groovy.util.GroovyTestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyTestCase: void assertToString(java.lang.Object,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestName(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.Demand: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class createClass(java.lang.String)>",
    "<groovy.test.GroovyAssert: void assertScript(java.lang.String)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockProxyMetaClass$FallThroughMarker: void <init>(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite: void main(java.lang.String[])>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String basename(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestMethodCodeForAssertion(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.String getFilename()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: groovy.mock.interceptor.MockProxyMetaClass make(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.StrictExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object call(java.lang.Object,java.lang.Object)>",
    "<groovy.mock.interceptor.CallSpec: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.Demand: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: java.util.List getAssertions()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getTestMethods(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.String getFilename()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object doCall(java.lang.Object,java.lang.Object)>"
  ],
  "2.5.13": [
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.net.URI)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Character getDifferentiator()>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: junit.framework.TestSuite getSuite()>",
    "<groovy.util.JavadocAssertionTestSuite: void <clinit>()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String)>",
    "<groovy.util.StringTestUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.mock.interceptor.StubFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.Map getLineNumberToAssertionsMap(java.lang.String,java.util.List)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader,java.lang.String)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getAssertionTags(java.lang.String)>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.TryCatchStatement tryCatchAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode,org.codehaus.groovy.ast.MethodNode,java.util.ArrayList)>",
    "<groovy.lang.GroovyLogTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: void tearDown()>",
    "<groovy.mock.interceptor.MockFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Integer getCodeIndex()>",
    "<groovy.util.StringTestUtil: void assertMultilineStringsEqual(java.lang.String,java.lang.String)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.util.Map getLineNumberToAssertions()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.File)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: void setUp()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: void <init>(groovy.lang.MetaClassRegistry,java.lang.Class,groovy.lang.MetaClass,boolean)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Binding getContext()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class buildTest(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(groovy.lang.GroovyCodeSource)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.Class,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: boolean isEligible(java.lang.String,int)>",
    "<groovy.mock.interceptor.Demand: void <init>()>",
    "<groovy.util.GroovyTestCase: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyShell createNewShell()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.String stringLog(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite()>",
    "<groovy.mock.interceptor.Ignore: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,groovy.lang.Closure)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.Object withLevel(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject getInstance(java.lang.Class,java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.String getAssertion()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.util.AllTestSuite$1: groovy.lang.GroovyClassLoader run()>",
    "<groovy.mock.interceptor.LooseExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getAssertion(java.lang.String)>",
    "<groovy.util.GroovyTestCase: void assertInspect(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: java.lang.Object verify(java.util.List)>",
    "<groovy.util.JavadocAssertionTestSuite: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockInterceptor: void beforeSet(java.lang.Object,java.lang.String,java.lang.Object)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyClassLoader getClassLoader()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String,java.lang.String)>",
    "<org.codehaus.groovy.runtime.ScriptTestAdapter: void run(junit.framework.TestResult)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeGet(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.String getCode()>",
    "<groovy.mock.interceptor.Ignore: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestCode(java.lang.String,java.util.List)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeInvoke(java.lang.Object,java.lang.String,java.lang.Object[])>",
    "<groovy.util.GroovyTestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyTestCase: void assertToString(java.lang.Object,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestName(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.Demand: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class createClass(java.lang.String)>",
    "<groovy.test.GroovyAssert: void assertScript(java.lang.String)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockProxyMetaClass$FallThroughMarker: void <init>(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite: void main(java.lang.String[])>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.Statement throwAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String basename(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestMethodCodeForAssertion(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.String getFilename()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: groovy.mock.interceptor.MockProxyMetaClass make(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.StrictExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object call(java.lang.Object,java.lang.Object)>",
    "<groovy.mock.interceptor.CallSpec: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: java.util.List getAssertions()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getTestMethods(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.String getFilename()>",
    "<groovy.util.GroovyTestSuite$1: groovy.lang.GroovyClassLoader run()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object doCall(java.lang.Object,java.lang.Object)>"
  ],
  "2.5.3": [
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.net.URI)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Character getDifferentiator()>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: junit.framework.TestSuite getSuite()>",
    "<groovy.util.JavadocAssertionTestSuite: void <clinit>()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String)>",
    "<groovy.util.StringTestUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.mock.interceptor.StubFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.Map getLineNumberToAssertionsMap(java.lang.String,java.util.List)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader,java.lang.String)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getAssertionTags(java.lang.String)>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.TryCatchStatement tryCatchAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode,org.codehaus.groovy.ast.MethodNode,java.util.ArrayList)>",
    "<groovy.lang.GroovyLogTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: void tearDown()>",
    "<groovy.mock.interceptor.MockFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Integer getCodeIndex()>",
    "<groovy.util.StringTestUtil: void assertMultilineStringsEqual(java.lang.String,java.lang.String)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.util.Map getLineNumberToAssertions()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.File)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: void setUp()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: void <init>(groovy.lang.MetaClassRegistry,java.lang.Class,groovy.lang.MetaClass,boolean)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Binding getContext()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class buildTest(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(groovy.lang.GroovyCodeSource)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.Class,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: boolean isEligible(java.lang.String,int)>",
    "<groovy.mock.interceptor.Demand: void <init>()>",
    "<groovy.util.GroovyTestCase: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyShell createNewShell()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.String stringLog(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite()>",
    "<groovy.mock.interceptor.Ignore: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,groovy.lang.Closure)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.Object withLevel(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject getInstance(java.lang.Class,java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.String getAssertion()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getAssertion(java.lang.String)>",
    "<groovy.util.GroovyTestCase: void assertInspect(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: java.lang.Object verify(java.util.List)>",
    "<groovy.util.JavadocAssertionTestSuite: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockInterceptor: void beforeSet(java.lang.Object,java.lang.String,java.lang.Object)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyClassLoader getClassLoader()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String,java.lang.String)>",
    "<org.codehaus.groovy.runtime.ScriptTestAdapter: void run(junit.framework.TestResult)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeGet(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.String getCode()>",
    "<groovy.mock.interceptor.Ignore: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestCode(java.lang.String,java.util.List)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeInvoke(java.lang.Object,java.lang.String,java.lang.Object[])>",
    "<groovy.util.GroovyTestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyTestCase: void assertToString(java.lang.Object,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestName(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.Demand: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class createClass(java.lang.String)>",
    "<groovy.test.GroovyAssert: void assertScript(java.lang.String)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockProxyMetaClass$FallThroughMarker: void <init>(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite: void main(java.lang.String[])>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.Statement throwAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String basename(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestMethodCodeForAssertion(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.String getFilename()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: groovy.mock.interceptor.MockProxyMetaClass make(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.StrictExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object call(java.lang.Object,java.lang.Object)>",
    "<groovy.mock.interceptor.CallSpec: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: java.util.List getAssertions()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getTestMethods(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.String getFilename()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object doCall(java.lang.Object,java.lang.Object)>"
  ],
  "3.0.0-alpha-3": [
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.net.URI)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Character getDifferentiator()>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: junit.framework.TestSuite getSuite()>",
    "<groovy.util.JavadocAssertionTestSuite: void <clinit>()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String)>",
    "<groovy.util.StringTestUtil: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.mock.interceptor.StubFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.Map getLineNumberToAssertionsMap(java.lang.String,java.util.List)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader,java.lang.String)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject makeProxyInstance(java.lang.Object,boolean)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getAssertionTags(java.lang.String)>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.TryCatchStatement tryCatchAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode,org.codehaus.groovy.ast.MethodNode,java.util.ArrayList)>",
    "<groovy.lang.GroovyLogTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: void tearDown()>",
    "<groovy.mock.interceptor.MockFor: java.lang.Object ignore(java.lang.Object,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Integer getCodeIndex()>",
    "<groovy.util.StringTestUtil: void assertMultilineStringsEqual(java.lang.String,java.lang.String)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.util.Map getLineNumberToAssertions()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.File)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: void setUp()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: void <init>(groovy.lang.MetaClassRegistry,java.lang.Class,groovy.lang.MetaClass,boolean)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Binding getContext()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class buildTest(java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(groovy.lang.GroovyCodeSource)>",
    "<groovy.mock.interceptor.StubFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.Class,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StubFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: boolean isEligible(java.lang.String,int)>",
    "<groovy.mock.interceptor.Demand: void <init>()>",
    "<groovy.util.GroovyTestCase: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyShell createNewShell()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyDelegateInstance(java.lang.Object)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject proxyInstance(java.lang.Object)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.String stringLog(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite()>",
    "<groovy.mock.interceptor.Ignore: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,groovy.lang.Closure)>",
    "<groovy.lang.GroovyLogTestCase: java.lang.Object withLevel(java.util.logging.Level,java.lang.String,groovy.lang.Closure)>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.GroovyObject getInstance(java.lang.Class,java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: java.lang.String getAssertion()>",
    "<groovy.mock.interceptor.LooseExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockFor: void <init>(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.LooseExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getAssertion(java.lang.String)>",
    "<groovy.util.GroovyTestCase: void assertInspect(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: java.lang.Object verify(java.util.List)>",
    "<groovy.util.JavadocAssertionTestSuite: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockInterceptor: void beforeSet(java.lang.Object,java.lang.String,java.lang.Object)>",
    "<groovy.mock.interceptor.StrictExpectation: groovy.lang.Closure match(java.lang.String)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.GroovyClassLoader getClassLoader()>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.lang.String,java.lang.String)>",
    "<org.codehaus.groovy.runtime.ScriptTestAdapter: void run(junit.framework.TestResult)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeGet(java.lang.Object,java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getLineNumberToAssertionsMap_closure2: java.lang.String getCode()>",
    "<groovy.mock.interceptor.Ignore: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.StrictExpectation$_match_closure1: java.lang.String getName()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestCode(java.lang.String,java.util.List)>",
    "<groovy.mock.interceptor.MockInterceptor: java.lang.Object beforeInvoke(java.lang.Object,java.lang.String,java.lang.Object[])>",
    "<groovy.util.GroovyTestCase: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>",
    "<groovy.util.GroovyTestCase: void assertToString(java.lang.Object,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestName(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<groovy.mock.interceptor.Demand: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>",
    "<groovy.util.GroovyShellTestCase: groovy.lang.Script parse(java.io.Reader)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.Class createClass(java.lang.String)>",
    "<groovy.test.GroovyAssert: void assertScript(java.lang.String)>",
    "<groovy.test.GroovyAssert: java.lang.Throwable shouldFail(java.lang.String)>",
    "<groovy.mock.interceptor.LooseExpectation$_match_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<groovy.mock.interceptor.MockProxyMetaClass$FallThroughMarker: void <init>(java.lang.Object)>",
    "<groovy.mock.interceptor.MockInterceptor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.GroovyShellTestCase: java.lang.Object withBinding(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite: void main(java.lang.String[])>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: org.codehaus.groovy.ast.stmt.Statement throwAssertionFailedError(org.codehaus.groovy.ast.AnnotationNode)>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String basename(java.lang.String)>",
    "<groovy.util.JavadocAssertionTestSuite$_suite_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.lang.String getTestMethodCodeForAssertion(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4$_closure5: java.lang.String getFilename()>",
    "<groovy.mock.interceptor.MockProxyMetaClass: groovy.mock.interceptor.MockProxyMetaClass make(java.lang.Class,boolean)>",
    "<groovy.mock.interceptor.StrictExpectation: void <init>(groovy.mock.interceptor.Demand)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object call(java.lang.Object,java.lang.Object)>",
    "<groovy.mock.interceptor.CallSpec: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<org.codehaus.groovy.transform.NotYetImplementedASTTransformation: void <clinit>()>",
    "<groovy.mock.interceptor.Demand: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.mock.interceptor.MockFor: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertion_closure3: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<groovy.util.JavadocAssertionTestBuilder$_getAssertionTags_closure1: java.util.List getAssertions()>",
    "<groovy.util.JavadocAssertionTestBuilder: java.util.List getTestMethods(java.util.Map,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.String getFilename()>",
    "<groovy.util.JavadocAssertionTestSuite: junit.framework.Test suite(java.lang.String,java.lang.String,java.lang.String)>",
    "<groovy.util.JavadocAssertionTestBuilder$_getTestMethods_closure4: java.lang.Object doCall(java.lang.Object,java.lang.Object)>"
  ]
}