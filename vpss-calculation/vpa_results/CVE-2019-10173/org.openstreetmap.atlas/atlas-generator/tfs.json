{
  "5.0.8": [
    "<org.openstreetmap.atlas.generator.AtlasGenerator: java.util.List generateTasks(java.util.List,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.tools.spark.rdd.ShardedAtlasRDDLoader: java.util.Set getCountryShards(org.openstreetmap.atlas.geography.sharding.Sharding,java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.tools.spark.persistence.PersistenceTools: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap boundaries(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Optional lambda$atlasFetcher$93b3548b$1(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Shard,java.lang.String,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.world.WorldMultiAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap initializeCountryBoundaryMap(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceAtlas$8d5517e0$1(java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$2(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.tools.spark.utilities.SparkFileHelper: void save(java.util.List)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$2f38d685$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>"
  ],
  "5.0.9": [
    "<org.openstreetmap.atlas.generator.AtlasGenerator: java.util.List generateTasks(java.util.List,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.tools.spark.rdd.ShardedAtlasRDDLoader: java.util.Set getCountryShards(org.openstreetmap.atlas.geography.sharding.Sharding,java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.tools.spark.persistence.PersistenceTools: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap boundaries(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Optional lambda$atlasFetcher$93b3548b$1(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Shard,java.lang.String,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.world.WorldMultiAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap initializeCountryBoundaryMap(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceAtlas$8d5517e0$1(java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$2(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.tools.spark.utilities.SparkFileHelper: void save(java.util.List)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$2f38d685$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>"
  ],
  "5.2.2": [
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$0(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: void lambda$getConfiguredFilterListFrom$3(java.util.List,org.openstreetmap.atlas.streaming.resource.Resource,java.lang.String)>",
    "<org.openstreetmap.atlas.generator.tools.spark.utilities.SparkFileHelper: void save(java.util.List)>",
    "<org.openstreetmap.atlas.generator.AtlasGenerator: java.util.List generateTasks(java.util.List,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding)>",
    "<org.openstreetmap.atlas.generator.tools.spark.rdd.ShardedAtlasRDDLoader: java.util.Set getCountryShards(org.openstreetmap.atlas.geography.sharding.Sharding,java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.tools.spark.persistence.PersistenceTools: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap boundaries(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: java.util.List getConfiguredFilterListFrom(org.openstreetmap.atlas.utilities.collections.StringList,org.openstreetmap.atlas.utilities.collections.StringList,java.util.Map)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: org.openstreetmap.atlas.utilities.configuration.ConfiguredFilter getConfiguredFilterFrom(java.lang.String,org.openstreetmap.atlas.streaming.resource.Resource)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$2f38d685$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: org.openstreetmap.atlas.geography.atlas.pbf.AtlasLoadingOption buildAtlasLoadingOption(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,java.util.Map)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: org.openstreetmap.atlas.geography.atlas.pbf.BridgeConfiguredFilter getConfiguredFilterFrom(java.lang.String,java.lang.String,org.openstreetmap.atlas.streaming.resource.Resource)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Optional lambda$atlasFetcher$93b3548b$1(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Shard,java.lang.String,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceAtlas$8d5517e0$1(java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.sharding.PbfVerifier: void lambda$buildAllPbfs$1(java.util.concurrent.atomic.AtomicInteger,org.openstreetmap.atlas.streaming.resource.Resource)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap initializeCountryBoundaryMap(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldMultiAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>"
  ],
  "4.3.4": [
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateFullySlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$f78d293e$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceRelations$58bb7450$1(java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$0(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceLines$f8d67efe$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateLineSlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Iterator lambda$computeAtlasDelta$ff50ced8$1(java.util.Map,java.lang.String,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.tools.spark.persistence.PersistenceTools: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap boundaries(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateSectionedAtlas(org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap initializeCountryBoundaryMap(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$2(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Optional lambda$atlasFetcher$d9ba407$1(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,java.lang.String,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,org.openstreetmap.atlas.geography.sharding.Shard)>"
  ],
  "5.3.0": [
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper$1: void <init>(org.openstreetmap.atlas.geography.atlas.dynamic.policy.DynamicAtlasPolicy,java.lang.String)>",
    "<org.openstreetmap.atlas.mutator.configuration.mutators.ConfiguredAtlasChangeGenerator: void validate(org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.geography.atlas.change.Change)>",
    "<org.openstreetmap.atlas.mutator.testing.ConfiguredAtlasChangeGeneratorAddTurnRestrictions: java.util.Set generateWithoutValidation(org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.mutator.filtering.ChangeFilter: org.openstreetmap.atlas.geography.atlas.change.FeatureChange lambda$stripUnwantedFeatures$23(org.openstreetmap.atlas.geography.atlas.items.AtlasEntity)>",
    "<org.openstreetmap.atlas.generator.tools.spark.utilities.SparkFileHelper: void save(java.util.List)>",
    "<org.openstreetmap.atlas.mutator.configuration.parsing.provider.file.PbfRawAtlasProvider: java.util.Optional resourceToAtlas(org.openstreetmap.atlas.streaming.resource.Resource,java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper$3: void <init>(java.lang.String,org.openstreetmap.atlas.geography.atlas.change.Change[],java.util.function.UnaryOperator)>",
    "<org.openstreetmap.atlas.mutator.configuration.mutators.aql.SecureAqlChangeGenerator: org.openstreetmap.atlas.geography.atlas.dsl.engine.QueryExecutor getQueryExecutor()>",
    "<org.openstreetmap.atlas.generator.AtlasGenerator: java.util.List generateTasks(java.util.List,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding)>",
    "<org.openstreetmap.atlas.mutator.filtering.ChangeFilter: boolean lambda$stripUnwantedFeatures$22(org.openstreetmap.atlas.geography.MultiPolygon,org.openstreetmap.atlas.geography.atlas.change.Change,org.openstreetmap.atlas.geography.atlas.items.AtlasEntity)>",
    "<org.openstreetmap.atlas.generator.tools.spark.rdd.ShardedAtlasRDDLoader: java.util.Set getCountryShards(org.openstreetmap.atlas.geography.sharding.Sharding,java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.mutator.configuration.parsing.mergeforgiveness.strategies.TakeLowerNodeIdentifierStrategy: org.openstreetmap.atlas.geography.atlas.change.FeatureChange resolve(org.openstreetmap.atlas.geography.atlas.change.FeatureChange,org.openstreetmap.atlas.geography.atlas.change.FeatureChange,java.util.Map)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper: java.util.Iterator lambda$changeToAtlas$aa501200$1(org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel,java.util.function.BiFunction,scala.Tuple2)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper: java.util.Iterator lambda$shardToFeatureChanges$9486b271$1(org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel,java.util.function.BiFunction,org.openstreetmap.atlas.geography.sharding.CountryShard)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper$2: void <init>(org.openstreetmap.atlas.geography.atlas.Atlas,java.lang.String,org.openstreetmap.atlas.geography.atlas.change.Change[],java.util.function.UnaryOperator)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$2f38d685$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.mutator.configuration.parsing.mergeforgiveness.strategies.PrioritizeTagStrategy: java.util.List getPrioritizationRules(java.util.Map)>",
    "<org.openstreetmap.atlas.mutator.testing.AtlasChangeGeneratorAddTag: java.util.Set generateWithoutValidation(org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.mutator.testing.AtlasChangeGeneratorRemovePointsWithRemoveMeTag: java.util.Set generateWithoutValidation(org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel: java.util.List shards()>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Optional lambda$atlasFetcher$93b3548b$1(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Shard,java.lang.String,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.mutator.configuration.mutators.aql.InsecureAqlChangeGenerator: org.openstreetmap.atlas.geography.atlas.dsl.engine.QueryExecutor getQueryExecutor()>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceAtlas$8d5517e0$1(java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.mutator.testing.AtlasChangeGeneratorSelfConflicting: java.util.Set generateWithoutValidation(org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper: org.openstreetmap.atlas.geography.atlas.change.FeatureChange withTags(org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.geography.atlas.change.FeatureChange,java.lang.String,java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper: java.util.List executeMutations(org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.geography.sharding.CountryShard)>",
    "<org.openstreetmap.atlas.mutator.configuration.mutators.aql.SecureAqlChangeGenerator: org.openstreetmap.atlas.geography.atlas.dsl.authentication.Authenticator getAuthenticator()>",
    "<org.openstreetmap.atlas.mutator.testing.ConfiguredAtlasChangeGeneratorAddTurnRestrictions: java.util.Set mergeRelationMembers(java.util.Set,java.lang.Long)>",
    "<org.openstreetmap.atlas.generator.world.WorldMultiAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.mutator.testing.AtlasChangeGeneratorAddTag: org.openstreetmap.atlas.geography.atlas.complete.CompleteEntity createFrom(org.openstreetmap.atlas.geography.atlas.items.AtlasEntity)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutator: void execute(org.openstreetmap.atlas.utilities.runtime.CommandMap)>"
  ],
  "5.3.1": [
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper$1: void <init>(org.openstreetmap.atlas.geography.atlas.dynamic.policy.DynamicAtlasPolicy,java.lang.String)>",
    "<org.openstreetmap.atlas.mutator.configuration.mutators.ConfiguredAtlasChangeGenerator: void validate(org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.geography.atlas.change.Change)>",
    "<org.openstreetmap.atlas.mutator.testing.ConfiguredAtlasChangeGeneratorAddTurnRestrictions: java.util.Set generateWithoutValidation(org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.mutator.filtering.ChangeFilter: org.openstreetmap.atlas.geography.atlas.change.FeatureChange lambda$stripUnwantedFeatures$23(org.openstreetmap.atlas.geography.atlas.items.AtlasEntity)>",
    "<org.openstreetmap.atlas.generator.tools.spark.utilities.SparkFileHelper: void save(java.util.List)>",
    "<org.openstreetmap.atlas.mutator.configuration.parsing.provider.file.PbfRawAtlasProvider: java.util.Optional resourceToAtlas(org.openstreetmap.atlas.streaming.resource.Resource,java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.mutator.configuration.parsing.ConfiguredAtlasFetcher: java.util.Optional lambda$getCountryvoreFetcher$b1222a72$1(org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper$3: void <init>(java.lang.String,org.openstreetmap.atlas.geography.atlas.change.Change[],java.util.function.UnaryOperator)>",
    "<org.openstreetmap.atlas.mutator.configuration.mutators.aql.SecureAqlChangeGenerator: org.openstreetmap.atlas.geography.atlas.dsl.engine.QueryExecutor getQueryExecutor()>",
    "<org.openstreetmap.atlas.generator.AtlasGenerator: java.util.List generateTasks(java.util.List,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding)>",
    "<org.openstreetmap.atlas.generator.tools.spark.rdd.ShardedAtlasRDDLoader: java.util.Set getCountryShards(org.openstreetmap.atlas.geography.sharding.Sharding,java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.mutator.filtering.ChangeFilter: boolean lambda$stripUnwantedFeatures$22(org.openstreetmap.atlas.geography.MultiPolygon,org.openstreetmap.atlas.geography.atlas.change.Change,org.openstreetmap.atlas.geography.atlas.items.AtlasEntity)>",
    "<org.openstreetmap.atlas.mutator.configuration.parsing.mergeforgiveness.strategies.TakeLowerNodeIdentifierStrategy: org.openstreetmap.atlas.geography.atlas.change.FeatureChange resolve(org.openstreetmap.atlas.geography.atlas.change.FeatureChange,org.openstreetmap.atlas.geography.atlas.change.FeatureChange,java.util.Map)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper: java.util.Iterator lambda$changeToAtlas$aa501200$1(org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel,java.util.function.BiFunction,scala.Tuple2)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper$2: void <init>(org.openstreetmap.atlas.geography.atlas.Atlas,java.lang.String,org.openstreetmap.atlas.geography.atlas.change.Change[],java.util.function.UnaryOperator)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper: java.util.Iterator lambda$shardToFeatureChanges$9486b271$1(org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel,java.util.function.BiFunction,org.openstreetmap.atlas.geography.sharding.CountryShard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$2f38d685$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.mutator.configuration.parsing.mergeforgiveness.strategies.PrioritizeTagStrategy: java.util.List getPrioritizationRules(java.util.Map)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel: java.util.List shards()>",
    "<org.openstreetmap.atlas.mutator.testing.AtlasChangeGeneratorRemovePointsWithRemoveMeTag: java.util.Set generateWithoutValidation(org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.mutator.testing.AtlasChangeGeneratorAddTag: java.util.Set generateWithoutValidation(org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Optional lambda$atlasFetcher$93b3548b$1(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Shard,java.lang.String,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.mutator.configuration.mutators.aql.InsecureAqlChangeGenerator: org.openstreetmap.atlas.geography.atlas.dsl.engine.QueryExecutor getQueryExecutor()>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceAtlas$8d5517e0$1(java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.mutator.testing.AtlasChangeGeneratorSelfConflicting: java.util.Set generateWithoutValidation(org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper: org.openstreetmap.atlas.geography.atlas.change.FeatureChange withTags(org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.geography.atlas.change.FeatureChange,java.lang.String,java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper: java.util.List executeMutations(org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.geography.sharding.CountryShard)>",
    "<org.openstreetmap.atlas.mutator.configuration.mutators.aql.SecureAqlChangeGenerator: org.openstreetmap.atlas.geography.atlas.dsl.authentication.Authenticator getAuthenticator()>",
    "<org.openstreetmap.atlas.mutator.testing.ConfiguredAtlasChangeGeneratorAddTurnRestrictions: java.util.Set mergeRelationMembers(java.util.Set,java.lang.Long)>",
    "<org.openstreetmap.atlas.generator.world.WorldMultiAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.mutator.testing.AtlasChangeGeneratorAddTag: org.openstreetmap.atlas.geography.atlas.complete.CompleteEntity createFrom(org.openstreetmap.atlas.geography.atlas.items.AtlasEntity)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutator: void execute(org.openstreetmap.atlas.utilities.runtime.CommandMap)>"
  ],
  "5.0.6": [
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.tools.spark.persistence.PersistenceTools: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap boundaries(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Optional lambda$atlasFetcher$93b3548b$1(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Shard,java.lang.String,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.world.WorldMultiAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap initializeCountryBoundaryMap(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceAtlas$8d5517e0$1(java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$2(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$2f38d685$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>"
  ],
  "5.2.4": [
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$0(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: void lambda$getConfiguredFilterListFrom$3(java.util.List,org.openstreetmap.atlas.streaming.resource.Resource,java.lang.String)>",
    "<org.openstreetmap.atlas.generator.tools.spark.utilities.SparkFileHelper: void save(java.util.List)>",
    "<org.openstreetmap.atlas.generator.AtlasGenerator: java.util.List generateTasks(java.util.List,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding)>",
    "<org.openstreetmap.atlas.generator.tools.spark.rdd.ShardedAtlasRDDLoader: java.util.Set getCountryShards(org.openstreetmap.atlas.geography.sharding.Sharding,java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.tools.spark.persistence.PersistenceTools: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap boundaries(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: java.util.List getConfiguredFilterListFrom(org.openstreetmap.atlas.utilities.collections.StringList,org.openstreetmap.atlas.utilities.collections.StringList,java.util.Map)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: org.openstreetmap.atlas.utilities.configuration.ConfiguredFilter getConfiguredFilterFrom(java.lang.String,org.openstreetmap.atlas.streaming.resource.Resource)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$2f38d685$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: org.openstreetmap.atlas.geography.atlas.pbf.AtlasLoadingOption buildAtlasLoadingOption(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,java.util.Map)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: org.openstreetmap.atlas.geography.atlas.pbf.BridgeConfiguredFilter getConfiguredFilterFrom(java.lang.String,java.lang.String,org.openstreetmap.atlas.streaming.resource.Resource)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Optional lambda$atlasFetcher$93b3548b$1(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Shard,java.lang.String,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceAtlas$8d5517e0$1(java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.sharding.PbfVerifier: void lambda$buildAllPbfs$1(java.util.concurrent.atomic.AtomicInteger,org.openstreetmap.atlas.streaming.resource.Resource)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap initializeCountryBoundaryMap(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldMultiAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>"
  ],
  "4.4.3": [
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateFullySlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$f78d293e$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceRelations$58bb7450$1(java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$0(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateLineSlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Iterator lambda$computeAtlasDelta$ff50ced8$1(java.util.Map,java.lang.String,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceLines$f8d67efe$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.tools.spark.persistence.PersistenceTools: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap boundaries(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateSectionedAtlas(org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.world.WorldMultiAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap initializeCountryBoundaryMap(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$2(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Optional lambda$atlasFetcher$d9ba407$1(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,java.lang.String,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,org.openstreetmap.atlas.geography.sharding.Shard)>"
  ],
  "4.4.4": [
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateFullySlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$f78d293e$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceRelations$58bb7450$1(java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$0(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateLineSlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Iterator lambda$computeAtlasDelta$ff50ced8$1(java.util.Map,java.lang.String,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceLines$f8d67efe$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.tools.spark.persistence.PersistenceTools: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap boundaries(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateSectionedAtlas(org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.world.WorldMultiAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap initializeCountryBoundaryMap(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$2(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Optional lambda$atlasFetcher$d9ba407$1(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,java.lang.String,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,org.openstreetmap.atlas.geography.sharding.Shard)>"
  ],
  "5.1.0": [
    "<org.openstreetmap.atlas.generator.AtlasGenerator: java.util.List generateTasks(java.util.List,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.tools.spark.rdd.ShardedAtlasRDDLoader: java.util.Set getCountryShards(org.openstreetmap.atlas.geography.sharding.Sharding,java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.tools.spark.persistence.PersistenceTools: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap boundaries(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Optional lambda$atlasFetcher$93b3548b$1(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Shard,java.lang.String,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.world.WorldMultiAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap initializeCountryBoundaryMap(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceAtlas$8d5517e0$1(java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$2(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.tools.spark.utilities.SparkFileHelper: void save(java.util.List)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$2f38d685$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>"
  ],
  "5.1.1": [
    "<org.openstreetmap.atlas.generator.AtlasGenerator: java.util.List generateTasks(java.util.List,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.tools.spark.rdd.ShardedAtlasRDDLoader: java.util.Set getCountryShards(org.openstreetmap.atlas.geography.sharding.Sharding,java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.tools.spark.persistence.PersistenceTools: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap boundaries(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Optional lambda$atlasFetcher$93b3548b$1(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Shard,java.lang.String,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.world.WorldMultiAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap initializeCountryBoundaryMap(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceAtlas$8d5517e0$1(java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$2(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.tools.spark.utilities.SparkFileHelper: void save(java.util.List)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$2f38d685$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>"
  ],
  "5.0.1": [
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateFullySlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceRelations$8d5517e0$1(java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$0(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceLines$f8d67efe$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateLineSlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.tools.spark.persistence.PersistenceTools: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap boundaries(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Optional lambda$atlasFetcher$93b3548b$1(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Shard,java.lang.String,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateSectionedAtlas(org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.world.WorldMultiAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap initializeCountryBoundaryMap(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$2(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$2f38d685$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>"
  ],
  "5.0.0": [
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateFullySlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceRelations$8d5517e0$1(java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$0(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceLines$f8d67efe$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateLineSlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.tools.spark.persistence.PersistenceTools: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap boundaries(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Optional lambda$atlasFetcher$93b3548b$1(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Shard,java.lang.String,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateSectionedAtlas(org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.world.WorldMultiAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap initializeCountryBoundaryMap(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$2(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$2f38d685$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>"
  ],
  "5.3.6": [
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper$1: void <init>(org.openstreetmap.atlas.geography.atlas.dynamic.policy.DynamicAtlasPolicy,java.lang.String)>",
    "<org.openstreetmap.atlas.mutator.configuration.mutators.ConfiguredAtlasChangeGenerator: void validate(org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.geography.atlas.change.Change)>",
    "<org.openstreetmap.atlas.mutator.testing.ConfiguredAtlasChangeGeneratorAddTurnRestrictions: java.util.Set generateWithoutValidation(org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$augmentAtlas$8330db6b$1(scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.tools.spark.utilities.SparkFileHelper: void save(java.util.List)>",
    "<org.openstreetmap.atlas.mutator.configuration.parsing.provider.file.PbfRawAtlasProvider: java.util.Optional resourceToAtlas(org.openstreetmap.atlas.streaming.resource.Resource,java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.mutator.configuration.parsing.ConfiguredAtlasFetcher: java.util.Optional lambda$getCountryvoreFetcher$b1222a72$1(org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper$3: void <init>(java.lang.String,org.openstreetmap.atlas.geography.atlas.change.Change[],java.util.function.UnaryOperator)>",
    "<org.openstreetmap.atlas.generator.AtlasGenerator: java.util.List generateTasks(java.util.List,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding)>",
    "<org.openstreetmap.atlas.generator.tools.spark.rdd.ShardedAtlasRDDLoader: java.util.Set getCountryShards(org.openstreetmap.atlas.geography.sharding.Sharding,java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.mutator.filtering.ChangeFilter: org.openstreetmap.atlas.geography.atlas.change.FeatureChange lambda$stripUnwantedFeatures$28(org.openstreetmap.atlas.geography.atlas.items.AtlasEntity)>",
    "<org.openstreetmap.atlas.mutator.configuration.parsing.mergeforgiveness.strategies.TakeLowerNodeIdentifierStrategy: org.openstreetmap.atlas.geography.atlas.change.FeatureChange resolve(org.openstreetmap.atlas.geography.atlas.change.FeatureChange,org.openstreetmap.atlas.geography.atlas.change.FeatureChange,java.util.Map)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper: java.util.Iterator lambda$changeToAtlas$aa501200$1(org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel,java.util.function.BiFunction,scala.Tuple2)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper$2: void <init>(org.openstreetmap.atlas.geography.atlas.Atlas,java.lang.String,org.openstreetmap.atlas.geography.atlas.change.Change[],java.util.function.UnaryOperator)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper: java.util.Iterator lambda$shardToFeatureChanges$9486b271$1(org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel,java.util.function.BiFunction,org.openstreetmap.atlas.geography.sharding.CountryShard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$2f38d685$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.mutator.configuration.parsing.mergeforgiveness.strategies.PrioritizeTagStrategy: java.util.List getPrioritizationRules(java.util.Map)>",
    "<org.openstreetmap.atlas.mutator.testing.AtlasChangeGeneratorAddTag: java.util.Set generateWithoutValidation(org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel: java.util.List shards()>",
    "<org.openstreetmap.atlas.mutator.testing.AtlasChangeGeneratorRemovePointsWithRemoveMeTag: java.util.Set generateWithoutValidation(org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceAtlas$f8d67efe$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$buildRelationGeometries$ca484b3d$1(scala.Tuple2)>",
    "<org.openstreetmap.atlas.mutator.testing.AtlasChangeGeneratorSelfConflicting: java.util.Set generateWithoutValidation(org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper: org.openstreetmap.atlas.geography.atlas.change.FeatureChange withTags(org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.geography.atlas.change.FeatureChange,java.lang.String,java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper: java.util.List executeMutations(org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.geography.sharding.CountryShard)>",
    "<org.openstreetmap.atlas.mutator.testing.ConfiguredAtlasChangeGeneratorAddTurnRestrictions: java.util.Set mergeRelationMembers(java.util.Set,java.lang.Long)>",
    "<org.openstreetmap.atlas.mutator.filtering.ChangeFilter: boolean lambda$stripUnwantedFeatures$27(org.openstreetmap.atlas.geography.MultiPolygon,org.openstreetmap.atlas.geography.atlas.change.Change,org.openstreetmap.atlas.geography.atlas.items.AtlasEntity)>",
    "<org.openstreetmap.atlas.generator.world.WorldMultiAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.mutator.testing.AtlasChangeGeneratorAddTag: org.openstreetmap.atlas.geography.atlas.complete.CompleteEntity createFrom(org.openstreetmap.atlas.geography.atlas.items.AtlasEntity)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutator: void execute(org.openstreetmap.atlas.utilities.runtime.CommandMap)>"
  ],
  "5.3.7": [
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper$1: void <init>(org.openstreetmap.atlas.geography.atlas.dynamic.policy.DynamicAtlasPolicy,java.lang.String)>",
    "<org.openstreetmap.atlas.mutator.configuration.mutators.ConfiguredAtlasChangeGenerator: void validate(org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.geography.atlas.change.Change)>",
    "<org.openstreetmap.atlas.mutator.testing.ConfiguredAtlasChangeGeneratorAddTurnRestrictions: java.util.Set generateWithoutValidation(org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$augmentAtlas$8330db6b$1(scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.tools.spark.utilities.SparkFileHelper: void save(java.util.List)>",
    "<org.openstreetmap.atlas.mutator.configuration.parsing.provider.file.PbfRawAtlasProvider: java.util.Optional resourceToAtlas(org.openstreetmap.atlas.streaming.resource.Resource,java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.mutator.configuration.parsing.ConfiguredAtlasFetcher: java.util.Optional lambda$getCountryvoreFetcher$b1222a72$1(org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper$3: void <init>(java.lang.String,org.openstreetmap.atlas.geography.atlas.change.Change[],java.util.function.UnaryOperator)>",
    "<org.openstreetmap.atlas.generator.AtlasGenerator: java.util.List generateTasks(java.util.List,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding)>",
    "<org.openstreetmap.atlas.generator.tools.spark.rdd.ShardedAtlasRDDLoader: java.util.Set getCountryShards(org.openstreetmap.atlas.geography.sharding.Sharding,java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.mutator.filtering.ChangeFilter: org.openstreetmap.atlas.geography.atlas.change.FeatureChange lambda$stripUnwantedFeatures$28(org.openstreetmap.atlas.geography.atlas.items.AtlasEntity)>",
    "<org.openstreetmap.atlas.mutator.configuration.parsing.mergeforgiveness.strategies.TakeLowerNodeIdentifierStrategy: org.openstreetmap.atlas.geography.atlas.change.FeatureChange resolve(org.openstreetmap.atlas.geography.atlas.change.FeatureChange,org.openstreetmap.atlas.geography.atlas.change.FeatureChange,java.util.Map)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper: java.util.Iterator lambda$changeToAtlas$aa501200$1(org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel,java.util.function.BiFunction,scala.Tuple2)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper$2: void <init>(org.openstreetmap.atlas.geography.atlas.Atlas,java.lang.String,org.openstreetmap.atlas.geography.atlas.change.Change[],java.util.function.UnaryOperator)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper: java.util.Iterator lambda$shardToFeatureChanges$9486b271$1(org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel,java.util.function.BiFunction,org.openstreetmap.atlas.geography.sharding.CountryShard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$2f38d685$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.mutator.configuration.parsing.mergeforgiveness.strategies.PrioritizeTagStrategy: java.util.List getPrioritizationRules(java.util.Map)>",
    "<org.openstreetmap.atlas.mutator.testing.AtlasChangeGeneratorAddTag: java.util.Set generateWithoutValidation(org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel: java.util.List shards()>",
    "<org.openstreetmap.atlas.mutator.testing.AtlasChangeGeneratorRemovePointsWithRemoveMeTag: java.util.Set generateWithoutValidation(org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceAtlas$f8d67efe$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$buildRelationGeometries$ca484b3d$1(scala.Tuple2)>",
    "<org.openstreetmap.atlas.mutator.testing.AtlasChangeGeneratorSelfConflicting: java.util.Set generateWithoutValidation(org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper: org.openstreetmap.atlas.geography.atlas.change.FeatureChange withTags(org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.geography.atlas.change.FeatureChange,java.lang.String,java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper: java.util.List executeMutations(org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.geography.sharding.CountryShard)>",
    "<org.openstreetmap.atlas.mutator.testing.ConfiguredAtlasChangeGeneratorAddTurnRestrictions: java.util.Set mergeRelationMembers(java.util.Set,java.lang.Long)>",
    "<org.openstreetmap.atlas.mutator.filtering.ChangeFilter: boolean lambda$stripUnwantedFeatures$27(org.openstreetmap.atlas.geography.MultiPolygon,org.openstreetmap.atlas.geography.atlas.change.Change,org.openstreetmap.atlas.geography.atlas.items.AtlasEntity)>",
    "<org.openstreetmap.atlas.generator.world.WorldMultiAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.mutator.testing.AtlasChangeGeneratorAddTag: org.openstreetmap.atlas.geography.atlas.complete.CompleteEntity createFrom(org.openstreetmap.atlas.geography.atlas.items.AtlasEntity)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutator: void execute(org.openstreetmap.atlas.utilities.runtime.CommandMap)>"
  ],
  "5.3.8": [
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper$1: void <init>(org.openstreetmap.atlas.geography.atlas.dynamic.policy.DynamicAtlasPolicy,java.lang.String)>",
    "<org.openstreetmap.atlas.mutator.configuration.mutators.ConfiguredAtlasChangeGenerator: void validate(org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.geography.atlas.change.Change)>",
    "<org.openstreetmap.atlas.mutator.testing.ConfiguredAtlasChangeGeneratorAddTurnRestrictions: java.util.Set generateWithoutValidation(org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$augmentAtlas$8330db6b$1(scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.tools.spark.utilities.SparkFileHelper: void save(java.util.List)>",
    "<org.openstreetmap.atlas.mutator.configuration.parsing.provider.file.PbfRawAtlasProvider: java.util.Optional resourceToAtlas(org.openstreetmap.atlas.streaming.resource.Resource,java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.mutator.configuration.parsing.ConfiguredAtlasFetcher: java.util.Optional lambda$getCountryvoreFetcher$b1222a72$1(org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper$3: void <init>(java.lang.String,org.openstreetmap.atlas.geography.atlas.change.Change[],java.util.function.UnaryOperator)>",
    "<org.openstreetmap.atlas.generator.AtlasGenerator: java.util.List generateTasks(java.util.List,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding)>",
    "<org.openstreetmap.atlas.generator.tools.spark.rdd.ShardedAtlasRDDLoader: java.util.Set getCountryShards(org.openstreetmap.atlas.geography.sharding.Sharding,java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.mutator.filtering.ChangeFilter: org.openstreetmap.atlas.geography.atlas.change.FeatureChange lambda$stripUnwantedFeatures$28(org.openstreetmap.atlas.geography.atlas.items.AtlasEntity)>",
    "<org.openstreetmap.atlas.mutator.configuration.parsing.mergeforgiveness.strategies.TakeLowerNodeIdentifierStrategy: org.openstreetmap.atlas.geography.atlas.change.FeatureChange resolve(org.openstreetmap.atlas.geography.atlas.change.FeatureChange,org.openstreetmap.atlas.geography.atlas.change.FeatureChange,java.util.Map)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper: java.util.Iterator lambda$changeToAtlas$aa501200$1(org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel,java.util.function.BiFunction,scala.Tuple2)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper$2: void <init>(org.openstreetmap.atlas.geography.atlas.Atlas,java.lang.String,org.openstreetmap.atlas.geography.atlas.change.Change[],java.util.function.UnaryOperator)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper: java.util.Iterator lambda$shardToFeatureChanges$9486b271$1(org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel,java.util.function.BiFunction,org.openstreetmap.atlas.geography.sharding.CountryShard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$2f38d685$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.mutator.configuration.parsing.mergeforgiveness.strategies.PrioritizeTagStrategy: java.util.List getPrioritizationRules(java.util.Map)>",
    "<org.openstreetmap.atlas.mutator.testing.AtlasChangeGeneratorAddTag: java.util.Set generateWithoutValidation(org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel: java.util.List shards()>",
    "<org.openstreetmap.atlas.mutator.testing.AtlasChangeGeneratorRemovePointsWithRemoveMeTag: java.util.Set generateWithoutValidation(org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceAtlas$f8d67efe$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$buildRelationGeometries$ca484b3d$1(scala.Tuple2)>",
    "<org.openstreetmap.atlas.mutator.testing.AtlasChangeGeneratorSelfConflicting: java.util.Set generateWithoutValidation(org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper: org.openstreetmap.atlas.geography.atlas.change.FeatureChange withTags(org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.geography.atlas.change.FeatureChange,java.lang.String,java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper: java.util.List executeMutations(org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.geography.sharding.CountryShard)>",
    "<org.openstreetmap.atlas.mutator.testing.ConfiguredAtlasChangeGeneratorAddTurnRestrictions: java.util.Set mergeRelationMembers(java.util.Set,java.lang.Long)>",
    "<org.openstreetmap.atlas.mutator.filtering.ChangeFilter: boolean lambda$stripUnwantedFeatures$27(org.openstreetmap.atlas.geography.MultiPolygon,org.openstreetmap.atlas.geography.atlas.change.Change,org.openstreetmap.atlas.geography.atlas.items.AtlasEntity)>",
    "<org.openstreetmap.atlas.generator.world.WorldMultiAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.mutator.testing.AtlasChangeGeneratorAddTag: org.openstreetmap.atlas.geography.atlas.complete.CompleteEntity createFrom(org.openstreetmap.atlas.geography.atlas.items.AtlasEntity)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutator: void execute(org.openstreetmap.atlas.utilities.runtime.CommandMap)>"
  ],
  "4.3.7": [
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateFullySlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$f78d293e$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceRelations$58bb7450$1(java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$0(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceLines$f8d67efe$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateLineSlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Iterator lambda$computeAtlasDelta$ff50ced8$1(java.util.Map,java.lang.String,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.tools.spark.persistence.PersistenceTools: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap boundaries(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateSectionedAtlas(org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.world.WorldMultiAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap initializeCountryBoundaryMap(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$2(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Optional lambda$atlasFetcher$d9ba407$1(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,java.lang.String,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,org.openstreetmap.atlas.geography.sharding.Shard)>"
  ],
  "5.1.9": [
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$0(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: void lambda$getConfiguredFilterListFrom$3(java.util.List,org.openstreetmap.atlas.streaming.resource.Resource,java.lang.String)>",
    "<org.openstreetmap.atlas.generator.tools.spark.utilities.SparkFileHelper: void save(java.util.List)>",
    "<org.openstreetmap.atlas.generator.AtlasGenerator: java.util.List generateTasks(java.util.List,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding)>",
    "<org.openstreetmap.atlas.generator.tools.spark.rdd.ShardedAtlasRDDLoader: java.util.Set getCountryShards(org.openstreetmap.atlas.geography.sharding.Sharding,java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.tools.spark.persistence.PersistenceTools: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap boundaries(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: java.util.List getConfiguredFilterListFrom(org.openstreetmap.atlas.utilities.collections.StringList,org.openstreetmap.atlas.utilities.collections.StringList,java.util.Map)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: org.openstreetmap.atlas.utilities.configuration.ConfiguredFilter getConfiguredFilterFrom(java.lang.String,org.openstreetmap.atlas.streaming.resource.Resource)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$2f38d685$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: org.openstreetmap.atlas.geography.atlas.pbf.AtlasLoadingOption buildAtlasLoadingOption(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,java.util.Map)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: org.openstreetmap.atlas.geography.atlas.pbf.BridgeConfiguredFilter getConfiguredFilterFrom(java.lang.String,java.lang.String,org.openstreetmap.atlas.streaming.resource.Resource)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Optional lambda$atlasFetcher$93b3548b$1(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Shard,java.lang.String,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceAtlas$8d5517e0$1(java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.sharding.PbfVerifier: void lambda$buildAllPbfs$1(java.util.concurrent.atomic.AtomicInteger,org.openstreetmap.atlas.streaming.resource.Resource)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap initializeCountryBoundaryMap(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldMultiAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>"
  ],
  "4.2.9": [
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateFullySlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$f78d293e$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceRelations$58bb7450$1(java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$0(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceLines$f8d67efe$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateLineSlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Iterator lambda$computeAtlasDelta$ff50ced8$1(java.util.Map,java.lang.String,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateSectionedAtlas(org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap initializeCountryBoundaryMap(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: boolean lambda$static$0(org.openstreetmap.atlas.tags.Taggable)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$2(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Optional lambda$atlasFetcher$d9ba407$1(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,java.lang.String,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,org.openstreetmap.atlas.geography.sharding.Shard)>"
  ],
  "5.2.3": [
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$0(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: void lambda$getConfiguredFilterListFrom$3(java.util.List,org.openstreetmap.atlas.streaming.resource.Resource,java.lang.String)>",
    "<org.openstreetmap.atlas.generator.tools.spark.utilities.SparkFileHelper: void save(java.util.List)>",
    "<org.openstreetmap.atlas.generator.AtlasGenerator: java.util.List generateTasks(java.util.List,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding)>",
    "<org.openstreetmap.atlas.generator.tools.spark.rdd.ShardedAtlasRDDLoader: java.util.Set getCountryShards(org.openstreetmap.atlas.geography.sharding.Sharding,java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.tools.spark.persistence.PersistenceTools: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap boundaries(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: java.util.List getConfiguredFilterListFrom(org.openstreetmap.atlas.utilities.collections.StringList,org.openstreetmap.atlas.utilities.collections.StringList,java.util.Map)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: org.openstreetmap.atlas.utilities.configuration.ConfiguredFilter getConfiguredFilterFrom(java.lang.String,org.openstreetmap.atlas.streaming.resource.Resource)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$2f38d685$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: org.openstreetmap.atlas.geography.atlas.pbf.AtlasLoadingOption buildAtlasLoadingOption(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,java.util.Map)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: org.openstreetmap.atlas.geography.atlas.pbf.BridgeConfiguredFilter getConfiguredFilterFrom(java.lang.String,java.lang.String,org.openstreetmap.atlas.streaming.resource.Resource)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Optional lambda$atlasFetcher$93b3548b$1(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Shard,java.lang.String,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceAtlas$8d5517e0$1(java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.sharding.PbfVerifier: void lambda$buildAllPbfs$1(java.util.concurrent.atomic.AtomicInteger,org.openstreetmap.atlas.streaming.resource.Resource)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap initializeCountryBoundaryMap(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldMultiAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>"
  ],
  "4.4.5": [
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateFullySlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceRelations$8d5517e0$1(java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$0(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceLines$f8d67efe$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateLineSlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.tools.spark.persistence.PersistenceTools: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap boundaries(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Optional lambda$atlasFetcher$93b3548b$1(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Shard,java.lang.String,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateSectionedAtlas(org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.world.WorldMultiAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap initializeCountryBoundaryMap(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$2(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$2f38d685$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>"
  ],
  "4.3.2": [
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateFullySlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$f78d293e$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceRelations$58bb7450$1(java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$0(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceLines$f8d67efe$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateLineSlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Iterator lambda$computeAtlasDelta$ff50ced8$1(java.util.Map,java.lang.String,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateSectionedAtlas(org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap initializeCountryBoundaryMap(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$2(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Optional lambda$atlasFetcher$d9ba407$1(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,java.lang.String,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,org.openstreetmap.atlas.geography.sharding.Shard)>"
  ],
  "4.3.1": [
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateFullySlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$f78d293e$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceRelations$58bb7450$1(java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$0(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceLines$f8d67efe$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateLineSlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Iterator lambda$computeAtlasDelta$ff50ced8$1(java.util.Map,java.lang.String,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateSectionedAtlas(org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap initializeCountryBoundaryMap(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: boolean lambda$static$0(org.openstreetmap.atlas.tags.Taggable)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$2(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Optional lambda$atlasFetcher$d9ba407$1(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,java.lang.String,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,org.openstreetmap.atlas.geography.sharding.Shard)>"
  ],
  "4.3.0": [
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateFullySlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$f78d293e$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceRelations$58bb7450$1(java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$0(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceLines$f8d67efe$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateLineSlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Iterator lambda$computeAtlasDelta$ff50ced8$1(java.util.Map,java.lang.String,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateSectionedAtlas(org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap initializeCountryBoundaryMap(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: boolean lambda$static$0(org.openstreetmap.atlas.tags.Taggable)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$2(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Optional lambda$atlasFetcher$d9ba407$1(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,java.lang.String,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,org.openstreetmap.atlas.geography.sharding.Shard)>"
  ],
  "5.0.5": [
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateFullySlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceRelations$8d5517e0$1(java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$0(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceLines$f8d67efe$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateLineSlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.tools.spark.persistence.PersistenceTools: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap boundaries(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Optional lambda$atlasFetcher$93b3548b$1(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Shard,java.lang.String,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateSectionedAtlas(org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.world.WorldMultiAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap initializeCountryBoundaryMap(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$2(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$2f38d685$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>"
  ],
  "5.2.1": [
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$0(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: void lambda$getConfiguredFilterListFrom$3(java.util.List,org.openstreetmap.atlas.streaming.resource.Resource,java.lang.String)>",
    "<org.openstreetmap.atlas.generator.tools.spark.utilities.SparkFileHelper: void save(java.util.List)>",
    "<org.openstreetmap.atlas.generator.AtlasGenerator: java.util.List generateTasks(java.util.List,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding)>",
    "<org.openstreetmap.atlas.generator.tools.spark.rdd.ShardedAtlasRDDLoader: java.util.Set getCountryShards(org.openstreetmap.atlas.geography.sharding.Sharding,java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.tools.spark.persistence.PersistenceTools: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap boundaries(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: java.util.List getConfiguredFilterListFrom(org.openstreetmap.atlas.utilities.collections.StringList,org.openstreetmap.atlas.utilities.collections.StringList,java.util.Map)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: org.openstreetmap.atlas.utilities.configuration.ConfiguredFilter getConfiguredFilterFrom(java.lang.String,org.openstreetmap.atlas.streaming.resource.Resource)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$2f38d685$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: org.openstreetmap.atlas.geography.atlas.pbf.AtlasLoadingOption buildAtlasLoadingOption(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,java.util.Map)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: org.openstreetmap.atlas.geography.atlas.pbf.BridgeConfiguredFilter getConfiguredFilterFrom(java.lang.String,java.lang.String,org.openstreetmap.atlas.streaming.resource.Resource)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Optional lambda$atlasFetcher$93b3548b$1(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Shard,java.lang.String,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceAtlas$8d5517e0$1(java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.sharding.PbfVerifier: void lambda$buildAllPbfs$1(java.util.concurrent.atomic.AtomicInteger,org.openstreetmap.atlas.streaming.resource.Resource)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap initializeCountryBoundaryMap(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldMultiAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>"
  ],
  "5.1.7": [
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$0(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: void lambda$getConfiguredFilterListFrom$3(java.util.List,org.openstreetmap.atlas.streaming.resource.Resource,java.lang.String)>",
    "<org.openstreetmap.atlas.generator.tools.spark.utilities.SparkFileHelper: void save(java.util.List)>",
    "<org.openstreetmap.atlas.generator.AtlasGenerator: java.util.List generateTasks(java.util.List,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding)>",
    "<org.openstreetmap.atlas.generator.tools.spark.rdd.ShardedAtlasRDDLoader: java.util.Set getCountryShards(org.openstreetmap.atlas.geography.sharding.Sharding,java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.tools.spark.persistence.PersistenceTools: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap boundaries(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: java.util.List getConfiguredFilterListFrom(org.openstreetmap.atlas.utilities.collections.StringList,org.openstreetmap.atlas.utilities.collections.StringList,java.util.Map)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: org.openstreetmap.atlas.utilities.configuration.ConfiguredFilter getConfiguredFilterFrom(java.lang.String,org.openstreetmap.atlas.streaming.resource.Resource)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$2f38d685$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: org.openstreetmap.atlas.geography.atlas.pbf.AtlasLoadingOption buildAtlasLoadingOption(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,java.util.Map)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: org.openstreetmap.atlas.geography.atlas.pbf.BridgeConfiguredFilter getConfiguredFilterFrom(java.lang.String,java.lang.String,org.openstreetmap.atlas.streaming.resource.Resource)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Optional lambda$atlasFetcher$93b3548b$1(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Shard,java.lang.String,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceAtlas$8d5517e0$1(java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.sharding.PbfVerifier: void lambda$buildAllPbfs$1(java.util.concurrent.atomic.AtomicInteger,org.openstreetmap.atlas.streaming.resource.Resource)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap initializeCountryBoundaryMap(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldMultiAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>"
  ],
  "5.0.4": [
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateFullySlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceRelations$8d5517e0$1(java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$0(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceLines$f8d67efe$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateLineSlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.tools.spark.persistence.PersistenceTools: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap boundaries(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Optional lambda$atlasFetcher$93b3548b$1(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Shard,java.lang.String,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateSectionedAtlas(org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.world.WorldMultiAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap initializeCountryBoundaryMap(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$2(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$2f38d685$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>"
  ],
  "5.3.2": [
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper$1: void <init>(org.openstreetmap.atlas.geography.atlas.dynamic.policy.DynamicAtlasPolicy,java.lang.String)>",
    "<org.openstreetmap.atlas.mutator.configuration.mutators.ConfiguredAtlasChangeGenerator: void validate(org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.geography.atlas.change.Change)>",
    "<org.openstreetmap.atlas.mutator.testing.ConfiguredAtlasChangeGeneratorAddTurnRestrictions: java.util.Set generateWithoutValidation(org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.mutator.filtering.ChangeFilter: org.openstreetmap.atlas.geography.atlas.change.FeatureChange lambda$stripUnwantedFeatures$23(org.openstreetmap.atlas.geography.atlas.items.AtlasEntity)>",
    "<org.openstreetmap.atlas.generator.tools.spark.utilities.SparkFileHelper: void save(java.util.List)>",
    "<org.openstreetmap.atlas.mutator.configuration.parsing.provider.file.PbfRawAtlasProvider: java.util.Optional resourceToAtlas(org.openstreetmap.atlas.streaming.resource.Resource,java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.mutator.configuration.parsing.ConfiguredAtlasFetcher: java.util.Optional lambda$getCountryvoreFetcher$b1222a72$1(org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper$3: void <init>(java.lang.String,org.openstreetmap.atlas.geography.atlas.change.Change[],java.util.function.UnaryOperator)>",
    "<org.openstreetmap.atlas.mutator.configuration.mutators.aql.SecureAqlChangeGenerator: org.openstreetmap.atlas.geography.atlas.dsl.engine.QueryExecutor getQueryExecutor()>",
    "<org.openstreetmap.atlas.generator.AtlasGenerator: java.util.List generateTasks(java.util.List,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding)>",
    "<org.openstreetmap.atlas.generator.tools.spark.rdd.ShardedAtlasRDDLoader: java.util.Set getCountryShards(org.openstreetmap.atlas.geography.sharding.Sharding,java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.mutator.filtering.ChangeFilter: boolean lambda$stripUnwantedFeatures$22(org.openstreetmap.atlas.geography.MultiPolygon,org.openstreetmap.atlas.geography.atlas.change.Change,org.openstreetmap.atlas.geography.atlas.items.AtlasEntity)>",
    "<org.openstreetmap.atlas.mutator.configuration.parsing.mergeforgiveness.strategies.TakeLowerNodeIdentifierStrategy: org.openstreetmap.atlas.geography.atlas.change.FeatureChange resolve(org.openstreetmap.atlas.geography.atlas.change.FeatureChange,org.openstreetmap.atlas.geography.atlas.change.FeatureChange,java.util.Map)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper: java.util.Iterator lambda$changeToAtlas$aa501200$1(org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel,java.util.function.BiFunction,scala.Tuple2)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper$2: void <init>(org.openstreetmap.atlas.geography.atlas.Atlas,java.lang.String,org.openstreetmap.atlas.geography.atlas.change.Change[],java.util.function.UnaryOperator)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper: java.util.Iterator lambda$shardToFeatureChanges$9486b271$1(org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel,java.util.function.BiFunction,org.openstreetmap.atlas.geography.sharding.CountryShard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$2f38d685$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.mutator.configuration.parsing.mergeforgiveness.strategies.PrioritizeTagStrategy: java.util.List getPrioritizationRules(java.util.Map)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel: java.util.List shards()>",
    "<org.openstreetmap.atlas.mutator.testing.AtlasChangeGeneratorRemovePointsWithRemoveMeTag: java.util.Set generateWithoutValidation(org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.mutator.testing.AtlasChangeGeneratorAddTag: java.util.Set generateWithoutValidation(org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Optional lambda$atlasFetcher$93b3548b$1(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Shard,java.lang.String,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.mutator.configuration.mutators.aql.InsecureAqlChangeGenerator: org.openstreetmap.atlas.geography.atlas.dsl.engine.QueryExecutor getQueryExecutor()>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceAtlas$8d5517e0$1(java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.mutator.testing.AtlasChangeGeneratorSelfConflicting: java.util.Set generateWithoutValidation(org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper: org.openstreetmap.atlas.geography.atlas.change.FeatureChange withTags(org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.geography.atlas.change.FeatureChange,java.lang.String,java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper: java.util.List executeMutations(org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.geography.sharding.CountryShard)>",
    "<org.openstreetmap.atlas.mutator.configuration.mutators.aql.SecureAqlChangeGenerator: org.openstreetmap.atlas.geography.atlas.dsl.authentication.Authenticator getAuthenticator()>",
    "<org.openstreetmap.atlas.mutator.testing.ConfiguredAtlasChangeGeneratorAddTurnRestrictions: java.util.Set mergeRelationMembers(java.util.Set,java.lang.Long)>",
    "<org.openstreetmap.atlas.generator.world.WorldMultiAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.mutator.testing.AtlasChangeGeneratorAddTag: org.openstreetmap.atlas.geography.atlas.complete.CompleteEntity createFrom(org.openstreetmap.atlas.geography.atlas.items.AtlasEntity)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutator: void execute(org.openstreetmap.atlas.utilities.runtime.CommandMap)>"
  ],
  "5.2.0": [
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$0(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: void lambda$getConfiguredFilterListFrom$3(java.util.List,org.openstreetmap.atlas.streaming.resource.Resource,java.lang.String)>",
    "<org.openstreetmap.atlas.generator.tools.spark.utilities.SparkFileHelper: void save(java.util.List)>",
    "<org.openstreetmap.atlas.generator.AtlasGenerator: java.util.List generateTasks(java.util.List,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding)>",
    "<org.openstreetmap.atlas.generator.tools.spark.rdd.ShardedAtlasRDDLoader: java.util.Set getCountryShards(org.openstreetmap.atlas.geography.sharding.Sharding,java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.tools.spark.persistence.PersistenceTools: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap boundaries(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: java.util.List getConfiguredFilterListFrom(org.openstreetmap.atlas.utilities.collections.StringList,org.openstreetmap.atlas.utilities.collections.StringList,java.util.Map)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: org.openstreetmap.atlas.utilities.configuration.ConfiguredFilter getConfiguredFilterFrom(java.lang.String,org.openstreetmap.atlas.streaming.resource.Resource)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$2f38d685$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: org.openstreetmap.atlas.geography.atlas.pbf.AtlasLoadingOption buildAtlasLoadingOption(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,java.util.Map)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: org.openstreetmap.atlas.geography.atlas.pbf.BridgeConfiguredFilter getConfiguredFilterFrom(java.lang.String,java.lang.String,org.openstreetmap.atlas.streaming.resource.Resource)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Optional lambda$atlasFetcher$93b3548b$1(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Shard,java.lang.String,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceAtlas$8d5517e0$1(java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.sharding.PbfVerifier: void lambda$buildAllPbfs$1(java.util.concurrent.atomic.AtomicInteger,org.openstreetmap.atlas.streaming.resource.Resource)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap initializeCountryBoundaryMap(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldMultiAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>"
  ],
  "5.0.2": [
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateFullySlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceRelations$8d5517e0$1(java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$0(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceLines$f8d67efe$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateLineSlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.tools.spark.persistence.PersistenceTools: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap boundaries(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Optional lambda$atlasFetcher$93b3548b$1(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Shard,java.lang.String,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateSectionedAtlas(org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.world.WorldMultiAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap initializeCountryBoundaryMap(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$2(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$2f38d685$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>"
  ],
  "5.0.7": [
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.tools.spark.persistence.PersistenceTools: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap boundaries(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Optional lambda$atlasFetcher$93b3548b$1(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Shard,java.lang.String,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.world.WorldMultiAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap initializeCountryBoundaryMap(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceAtlas$8d5517e0$1(java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$2(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$2f38d685$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>"
  ],
  "5.3.9": [
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper$1: void <init>(org.openstreetmap.atlas.geography.atlas.dynamic.policy.DynamicAtlasPolicy,java.lang.String)>",
    "<org.openstreetmap.atlas.mutator.configuration.mutators.ConfiguredAtlasChangeGenerator: void validate(org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.geography.atlas.change.Change)>",
    "<org.openstreetmap.atlas.mutator.testing.ConfiguredAtlasChangeGeneratorAddTurnRestrictions: java.util.Set generateWithoutValidation(org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$augmentAtlas$8330db6b$1(scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.tools.spark.utilities.SparkFileHelper: void save(java.util.List)>",
    "<org.openstreetmap.atlas.mutator.configuration.parsing.provider.file.PbfRawAtlasProvider: java.util.Optional resourceToAtlas(org.openstreetmap.atlas.streaming.resource.Resource,java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.mutator.configuration.parsing.ConfiguredAtlasFetcher: java.util.Optional lambda$getCountryvoreFetcher$b1222a72$1(org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper$3: void <init>(java.lang.String,org.openstreetmap.atlas.geography.atlas.change.Change[],java.util.function.UnaryOperator)>",
    "<org.openstreetmap.atlas.generator.AtlasGenerator: java.util.List generateTasks(java.util.List,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding)>",
    "<org.openstreetmap.atlas.generator.tools.spark.rdd.ShardedAtlasRDDLoader: java.util.Set getCountryShards(org.openstreetmap.atlas.geography.sharding.Sharding,java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.mutator.filtering.ChangeFilter: org.openstreetmap.atlas.geography.atlas.change.FeatureChange lambda$stripUnwantedFeatures$28(org.openstreetmap.atlas.geography.atlas.items.AtlasEntity)>",
    "<org.openstreetmap.atlas.mutator.configuration.parsing.mergeforgiveness.strategies.TakeLowerNodeIdentifierStrategy: org.openstreetmap.atlas.geography.atlas.change.FeatureChange resolve(org.openstreetmap.atlas.geography.atlas.change.FeatureChange,org.openstreetmap.atlas.geography.atlas.change.FeatureChange,java.util.Map)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper: java.util.Iterator lambda$changeToAtlas$aa501200$1(org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel,java.util.function.BiFunction,scala.Tuple2)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper$2: void <init>(org.openstreetmap.atlas.geography.atlas.Atlas,java.lang.String,org.openstreetmap.atlas.geography.atlas.change.Change[],java.util.function.UnaryOperator)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper: java.util.Iterator lambda$shardToFeatureChanges$9486b271$1(org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel,java.util.function.BiFunction,org.openstreetmap.atlas.geography.sharding.CountryShard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$2f38d685$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.mutator.configuration.parsing.mergeforgiveness.strategies.PrioritizeTagStrategy: java.util.List getPrioritizationRules(java.util.Map)>",
    "<org.openstreetmap.atlas.mutator.testing.AtlasChangeGeneratorAddTag: java.util.Set generateWithoutValidation(org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel: java.util.List shards()>",
    "<org.openstreetmap.atlas.mutator.testing.AtlasChangeGeneratorRemovePointsWithRemoveMeTag: java.util.Set generateWithoutValidation(org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceAtlas$f8d67efe$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$buildRelationGeometries$ca484b3d$1(scala.Tuple2)>",
    "<org.openstreetmap.atlas.mutator.testing.AtlasChangeGeneratorSelfConflicting: java.util.Set generateWithoutValidation(org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper: org.openstreetmap.atlas.geography.atlas.change.FeatureChange withTags(org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.geography.atlas.change.FeatureChange,java.lang.String,java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper: java.util.List executeMutations(org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.geography.sharding.CountryShard)>",
    "<org.openstreetmap.atlas.mutator.testing.ConfiguredAtlasChangeGeneratorAddTurnRestrictions: java.util.Set mergeRelationMembers(java.util.Set,java.lang.Long)>",
    "<org.openstreetmap.atlas.mutator.filtering.ChangeFilter: boolean lambda$stripUnwantedFeatures$27(org.openstreetmap.atlas.geography.MultiPolygon,org.openstreetmap.atlas.geography.atlas.change.Change,org.openstreetmap.atlas.geography.atlas.items.AtlasEntity)>",
    "<org.openstreetmap.atlas.generator.world.WorldMultiAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.mutator.testing.AtlasChangeGeneratorAddTag: org.openstreetmap.atlas.geography.atlas.complete.CompleteEntity createFrom(org.openstreetmap.atlas.geography.atlas.items.AtlasEntity)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutator: void execute(org.openstreetmap.atlas.utilities.runtime.CommandMap)>"
  ],
  "4.2.8": [
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateFullySlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$f78d293e$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceRelations$58bb7450$1(java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$0(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceLines$f8d67efe$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateLineSlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.lang.Iterable lambda$computeAtlasDelta$ff50ced8$1(java.util.Map,java.lang.String,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateSectionedAtlas(org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap initializeCountryBoundaryMap(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: boolean lambda$static$0(org.openstreetmap.atlas.tags.Taggable)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$2(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Optional lambda$atlasFetcher$d9ba407$1(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,java.lang.String,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,org.openstreetmap.atlas.geography.sharding.Shard)>"
  ],
  "5.1.6": [
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$0(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: void lambda$getConfiguredFilterListFrom$3(java.util.List,org.openstreetmap.atlas.streaming.resource.Resource,java.lang.String)>",
    "<org.openstreetmap.atlas.generator.tools.spark.utilities.SparkFileHelper: void save(java.util.List)>",
    "<org.openstreetmap.atlas.generator.AtlasGenerator: java.util.List generateTasks(java.util.List,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding)>",
    "<org.openstreetmap.atlas.generator.tools.spark.rdd.ShardedAtlasRDDLoader: java.util.Set getCountryShards(org.openstreetmap.atlas.geography.sharding.Sharding,java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.tools.spark.persistence.PersistenceTools: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap boundaries(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: java.util.List getConfiguredFilterListFrom(org.openstreetmap.atlas.utilities.collections.StringList,org.openstreetmap.atlas.utilities.collections.StringList,java.util.Map)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: org.openstreetmap.atlas.utilities.configuration.ConfiguredFilter getConfiguredFilterFrom(java.lang.String,org.openstreetmap.atlas.streaming.resource.Resource)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$2f38d685$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: org.openstreetmap.atlas.geography.atlas.pbf.AtlasLoadingOption buildAtlasLoadingOption(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,java.util.Map)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: org.openstreetmap.atlas.geography.atlas.pbf.BridgeConfiguredFilter getConfiguredFilterFrom(java.lang.String,java.lang.String,org.openstreetmap.atlas.streaming.resource.Resource)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Optional lambda$atlasFetcher$93b3548b$1(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Shard,java.lang.String,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceAtlas$8d5517e0$1(java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.sharding.PbfVerifier: void lambda$buildAllPbfs$1(java.util.concurrent.atomic.AtomicInteger,org.openstreetmap.atlas.streaming.resource.Resource)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap initializeCountryBoundaryMap(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldMultiAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>"
  ],
  "5.0.3": [
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateFullySlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceRelations$8d5517e0$1(java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$0(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceLines$f8d67efe$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateLineSlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.tools.spark.persistence.PersistenceTools: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap boundaries(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Optional lambda$atlasFetcher$93b3548b$1(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Shard,java.lang.String,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateSectionedAtlas(org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.world.WorldMultiAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap initializeCountryBoundaryMap(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$2(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$2f38d685$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>"
  ],
  "5.1.4": [
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$0(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: void lambda$getConfiguredFilterListFrom$3(java.util.List,org.openstreetmap.atlas.streaming.resource.Resource,java.lang.String)>",
    "<org.openstreetmap.atlas.generator.tools.spark.utilities.SparkFileHelper: void save(java.util.List)>",
    "<org.openstreetmap.atlas.generator.AtlasGenerator: java.util.List generateTasks(java.util.List,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding)>",
    "<org.openstreetmap.atlas.generator.tools.spark.rdd.ShardedAtlasRDDLoader: java.util.Set getCountryShards(org.openstreetmap.atlas.geography.sharding.Sharding,java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.tools.spark.persistence.PersistenceTools: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap boundaries(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: java.util.List getConfiguredFilterListFrom(org.openstreetmap.atlas.utilities.collections.StringList,org.openstreetmap.atlas.utilities.collections.StringList,java.util.Map)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: org.openstreetmap.atlas.utilities.configuration.ConfiguredFilter getConfiguredFilterFrom(java.lang.String,org.openstreetmap.atlas.streaming.resource.Resource)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$2f38d685$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: org.openstreetmap.atlas.geography.atlas.pbf.AtlasLoadingOption buildAtlasLoadingOption(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,java.util.Map)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: org.openstreetmap.atlas.geography.atlas.pbf.BridgeConfiguredFilter getConfiguredFilterFrom(java.lang.String,java.lang.String,org.openstreetmap.atlas.streaming.resource.Resource)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Optional lambda$atlasFetcher$93b3548b$1(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Shard,java.lang.String,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceAtlas$8d5517e0$1(java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.sharding.PbfVerifier: void lambda$buildAllPbfs$1(java.util.concurrent.atomic.AtomicInteger,org.openstreetmap.atlas.streaming.resource.Resource)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap initializeCountryBoundaryMap(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldMultiAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>"
  ],
  "4.3.3": [
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateFullySlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$f78d293e$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceRelations$58bb7450$1(java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$0(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceLines$f8d67efe$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateLineSlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Iterator lambda$computeAtlasDelta$ff50ced8$1(java.util.Map,java.lang.String,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateSectionedAtlas(org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap initializeCountryBoundaryMap(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$2(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Optional lambda$atlasFetcher$d9ba407$1(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,java.lang.String,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,org.openstreetmap.atlas.geography.sharding.Shard)>"
  ],
  "5.3.3": [
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper$1: void <init>(org.openstreetmap.atlas.geography.atlas.dynamic.policy.DynamicAtlasPolicy,java.lang.String)>",
    "<org.openstreetmap.atlas.mutator.configuration.mutators.ConfiguredAtlasChangeGenerator: void validate(org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.geography.atlas.change.Change)>",
    "<org.openstreetmap.atlas.mutator.testing.ConfiguredAtlasChangeGeneratorAddTurnRestrictions: java.util.Set generateWithoutValidation(org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.mutator.filtering.ChangeFilter: org.openstreetmap.atlas.geography.atlas.change.FeatureChange lambda$stripUnwantedFeatures$23(org.openstreetmap.atlas.geography.atlas.items.AtlasEntity)>",
    "<org.openstreetmap.atlas.generator.tools.spark.utilities.SparkFileHelper: void save(java.util.List)>",
    "<org.openstreetmap.atlas.mutator.configuration.parsing.provider.file.PbfRawAtlasProvider: java.util.Optional resourceToAtlas(org.openstreetmap.atlas.streaming.resource.Resource,java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.mutator.configuration.parsing.ConfiguredAtlasFetcher: java.util.Optional lambda$getCountryvoreFetcher$b1222a72$1(org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper$3: void <init>(java.lang.String,org.openstreetmap.atlas.geography.atlas.change.Change[],java.util.function.UnaryOperator)>",
    "<org.openstreetmap.atlas.mutator.configuration.mutators.aql.SecureAqlChangeGenerator: org.openstreetmap.atlas.geography.atlas.dsl.engine.QueryExecutor getQueryExecutor()>",
    "<org.openstreetmap.atlas.generator.AtlasGenerator: java.util.List generateTasks(java.util.List,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding)>",
    "<org.openstreetmap.atlas.generator.tools.spark.rdd.ShardedAtlasRDDLoader: java.util.Set getCountryShards(org.openstreetmap.atlas.geography.sharding.Sharding,java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.mutator.filtering.ChangeFilter: boolean lambda$stripUnwantedFeatures$22(org.openstreetmap.atlas.geography.MultiPolygon,org.openstreetmap.atlas.geography.atlas.change.Change,org.openstreetmap.atlas.geography.atlas.items.AtlasEntity)>",
    "<org.openstreetmap.atlas.mutator.configuration.parsing.mergeforgiveness.strategies.TakeLowerNodeIdentifierStrategy: org.openstreetmap.atlas.geography.atlas.change.FeatureChange resolve(org.openstreetmap.atlas.geography.atlas.change.FeatureChange,org.openstreetmap.atlas.geography.atlas.change.FeatureChange,java.util.Map)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper: java.util.Iterator lambda$changeToAtlas$aa501200$1(org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel,java.util.function.BiFunction,scala.Tuple2)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper$2: void <init>(org.openstreetmap.atlas.geography.atlas.Atlas,java.lang.String,org.openstreetmap.atlas.geography.atlas.change.Change[],java.util.function.UnaryOperator)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper: java.util.Iterator lambda$shardToFeatureChanges$9486b271$1(org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel,java.util.function.BiFunction,org.openstreetmap.atlas.geography.sharding.CountryShard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$2f38d685$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.mutator.configuration.parsing.mergeforgiveness.strategies.PrioritizeTagStrategy: java.util.List getPrioritizationRules(java.util.Map)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel: java.util.List shards()>",
    "<org.openstreetmap.atlas.mutator.testing.AtlasChangeGeneratorRemovePointsWithRemoveMeTag: java.util.Set generateWithoutValidation(org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.mutator.testing.AtlasChangeGeneratorAddTag: java.util.Set generateWithoutValidation(org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Optional lambda$atlasFetcher$93b3548b$1(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Shard,java.lang.String,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.mutator.configuration.mutators.aql.InsecureAqlChangeGenerator: org.openstreetmap.atlas.geography.atlas.dsl.engine.QueryExecutor getQueryExecutor()>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceAtlas$8d5517e0$1(java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.mutator.testing.AtlasChangeGeneratorSelfConflicting: java.util.Set generateWithoutValidation(org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper: org.openstreetmap.atlas.geography.atlas.change.FeatureChange withTags(org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.geography.atlas.change.FeatureChange,java.lang.String,java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper: java.util.List executeMutations(org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.geography.sharding.CountryShard)>",
    "<org.openstreetmap.atlas.mutator.configuration.mutators.aql.SecureAqlChangeGenerator: org.openstreetmap.atlas.geography.atlas.dsl.authentication.Authenticator getAuthenticator()>",
    "<org.openstreetmap.atlas.mutator.testing.ConfiguredAtlasChangeGeneratorAddTurnRestrictions: java.util.Set mergeRelationMembers(java.util.Set,java.lang.Long)>",
    "<org.openstreetmap.atlas.generator.world.WorldMultiAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.mutator.testing.AtlasChangeGeneratorAddTag: org.openstreetmap.atlas.geography.atlas.complete.CompleteEntity createFrom(org.openstreetmap.atlas.geography.atlas.items.AtlasEntity)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutator: void execute(org.openstreetmap.atlas.utilities.runtime.CommandMap)>"
  ],
  "5.1.3": [
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$0(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: void lambda$getConfiguredFilterListFrom$3(java.util.List,org.openstreetmap.atlas.streaming.resource.Resource,java.lang.String)>",
    "<org.openstreetmap.atlas.generator.tools.spark.utilities.SparkFileHelper: void save(java.util.List)>",
    "<org.openstreetmap.atlas.generator.AtlasGenerator: java.util.List generateTasks(java.util.List,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding)>",
    "<org.openstreetmap.atlas.generator.tools.spark.rdd.ShardedAtlasRDDLoader: java.util.Set getCountryShards(org.openstreetmap.atlas.geography.sharding.Sharding,java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.tools.spark.persistence.PersistenceTools: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap boundaries(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: java.util.List getConfiguredFilterListFrom(org.openstreetmap.atlas.utilities.collections.StringList,org.openstreetmap.atlas.utilities.collections.StringList,java.util.Map)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: org.openstreetmap.atlas.utilities.configuration.ConfiguredFilter getConfiguredFilterFrom(java.lang.String,org.openstreetmap.atlas.streaming.resource.Resource)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$2f38d685$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: org.openstreetmap.atlas.geography.atlas.pbf.AtlasLoadingOption buildAtlasLoadingOption(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,java.util.Map)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: org.openstreetmap.atlas.geography.atlas.pbf.BridgeConfiguredFilter getConfiguredFilterFrom(java.lang.String,java.lang.String,org.openstreetmap.atlas.streaming.resource.Resource)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Optional lambda$atlasFetcher$93b3548b$1(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Shard,java.lang.String,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceAtlas$8d5517e0$1(java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.sharding.PbfVerifier: void lambda$buildAllPbfs$1(java.util.concurrent.atomic.AtomicInteger,org.openstreetmap.atlas.streaming.resource.Resource)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap initializeCountryBoundaryMap(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldMultiAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>"
  ],
  "5.1.5": [
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$0(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: void lambda$getConfiguredFilterListFrom$3(java.util.List,org.openstreetmap.atlas.streaming.resource.Resource,java.lang.String)>",
    "<org.openstreetmap.atlas.generator.tools.spark.utilities.SparkFileHelper: void save(java.util.List)>",
    "<org.openstreetmap.atlas.generator.AtlasGenerator: java.util.List generateTasks(java.util.List,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding)>",
    "<org.openstreetmap.atlas.generator.tools.spark.rdd.ShardedAtlasRDDLoader: java.util.Set getCountryShards(org.openstreetmap.atlas.geography.sharding.Sharding,java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.tools.spark.persistence.PersistenceTools: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap boundaries(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: java.util.List getConfiguredFilterListFrom(org.openstreetmap.atlas.utilities.collections.StringList,org.openstreetmap.atlas.utilities.collections.StringList,java.util.Map)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: org.openstreetmap.atlas.utilities.configuration.ConfiguredFilter getConfiguredFilterFrom(java.lang.String,org.openstreetmap.atlas.streaming.resource.Resource)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$2f38d685$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: org.openstreetmap.atlas.geography.atlas.pbf.AtlasLoadingOption buildAtlasLoadingOption(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,java.util.Map)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorParameters: org.openstreetmap.atlas.geography.atlas.pbf.BridgeConfiguredFilter getConfiguredFilterFrom(java.lang.String,java.lang.String,org.openstreetmap.atlas.streaming.resource.Resource)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Optional lambda$atlasFetcher$93b3548b$1(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Shard,java.lang.String,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceAtlas$8d5517e0$1(java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.sharding.PbfVerifier: void lambda$buildAllPbfs$1(java.util.concurrent.atomic.AtomicInteger,org.openstreetmap.atlas.streaming.resource.Resource)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap initializeCountryBoundaryMap(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldMultiAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>"
  ],
  "4.3.8": [
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateFullySlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$f78d293e$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceRelations$58bb7450$1(java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$0(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceLines$f8d67efe$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateLineSlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Iterator lambda$computeAtlasDelta$ff50ced8$1(java.util.Map,java.lang.String,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.tools.spark.persistence.PersistenceTools: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap boundaries(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateSectionedAtlas(org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.world.WorldMultiAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap initializeCountryBoundaryMap(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$2(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Optional lambda$atlasFetcher$d9ba407$1(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,java.lang.String,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,org.openstreetmap.atlas.geography.sharding.Shard)>"
  ],
  "4.3.5": [
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateFullySlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$f78d293e$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceRelations$58bb7450$1(java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$0(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceLines$f8d67efe$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateLineSlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Iterator lambda$computeAtlasDelta$ff50ced8$1(java.util.Map,java.lang.String,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.tools.spark.persistence.PersistenceTools: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap boundaries(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateSectionedAtlas(org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap initializeCountryBoundaryMap(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$2(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Optional lambda$atlasFetcher$d9ba407$1(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,java.lang.String,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,org.openstreetmap.atlas.geography.sharding.Shard)>"
  ],
  "4.2.7": [
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateFullySlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceRawAtlas$f8d67efe$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$0(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateLineSlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.lang.Iterable lambda$computeAtlasDelta$ff50ced8$1(java.util.Map,java.lang.String,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionRawAtlas$15f31be7$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.util.List,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateSectionedAtlas(org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap initializeCountryBoundaryMap(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: boolean lambda$static$0(org.openstreetmap.atlas.tags.Taggable)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceRawAtlasLines$f8d67efe$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$2(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceRawAtlasRelations$58bb7450$1(java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Optional lambda$atlasFetcher$d9ba407$1(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,java.lang.String,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,org.openstreetmap.atlas.geography.sharding.Shard)>"
  ],
  "4.3.9": [
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateFullySlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$f78d293e$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceRelations$58bb7450$1(java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$0(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceLines$f8d67efe$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateLineSlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Iterator lambda$computeAtlasDelta$ff50ced8$1(java.util.Map,java.lang.String,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.tools.spark.persistence.PersistenceTools: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap boundaries(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateSectionedAtlas(org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.world.WorldMultiAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap initializeCountryBoundaryMap(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$2(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Optional lambda$atlasFetcher$d9ba407$1(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,java.lang.String,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,org.openstreetmap.atlas.geography.sharding.Shard)>"
  ],
  "4.4.6": [
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateFullySlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceRelations$8d5517e0$1(java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$0(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceLines$f8d67efe$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateLineSlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.tools.spark.persistence.PersistenceTools: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap boundaries(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Optional lambda$atlasFetcher$93b3548b$1(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Shard,java.lang.String,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateSectionedAtlas(org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.world.WorldMultiAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap initializeCountryBoundaryMap(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$2(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$2f38d685$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>"
  ],
  "5.3.4": [
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper$1: void <init>(org.openstreetmap.atlas.geography.atlas.dynamic.policy.DynamicAtlasPolicy,java.lang.String)>",
    "<org.openstreetmap.atlas.mutator.configuration.mutators.ConfiguredAtlasChangeGenerator: void validate(org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.geography.atlas.change.Change)>",
    "<org.openstreetmap.atlas.mutator.testing.ConfiguredAtlasChangeGeneratorAddTurnRestrictions: java.util.Set generateWithoutValidation(org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.mutator.filtering.ChangeFilter: org.openstreetmap.atlas.geography.atlas.change.FeatureChange lambda$stripUnwantedFeatures$23(org.openstreetmap.atlas.geography.atlas.items.AtlasEntity)>",
    "<org.openstreetmap.atlas.generator.tools.spark.utilities.SparkFileHelper: void save(java.util.List)>",
    "<org.openstreetmap.atlas.mutator.configuration.parsing.provider.file.PbfRawAtlasProvider: java.util.Optional resourceToAtlas(org.openstreetmap.atlas.streaming.resource.Resource,java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.mutator.configuration.parsing.ConfiguredAtlasFetcher: java.util.Optional lambda$getCountryvoreFetcher$b1222a72$1(org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper$3: void <init>(java.lang.String,org.openstreetmap.atlas.geography.atlas.change.Change[],java.util.function.UnaryOperator)>",
    "<org.openstreetmap.atlas.mutator.configuration.mutators.aql.SecureAqlChangeGenerator: org.openstreetmap.atlas.geography.atlas.dsl.engine.QueryExecutor getQueryExecutor()>",
    "<org.openstreetmap.atlas.generator.AtlasGenerator: java.util.List generateTasks(java.util.List,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding)>",
    "<org.openstreetmap.atlas.generator.tools.spark.rdd.ShardedAtlasRDDLoader: java.util.Set getCountryShards(org.openstreetmap.atlas.geography.sharding.Sharding,java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.mutator.filtering.ChangeFilter: boolean lambda$stripUnwantedFeatures$22(org.openstreetmap.atlas.geography.MultiPolygon,org.openstreetmap.atlas.geography.atlas.change.Change,org.openstreetmap.atlas.geography.atlas.items.AtlasEntity)>",
    "<org.openstreetmap.atlas.mutator.configuration.parsing.mergeforgiveness.strategies.TakeLowerNodeIdentifierStrategy: org.openstreetmap.atlas.geography.atlas.change.FeatureChange resolve(org.openstreetmap.atlas.geography.atlas.change.FeatureChange,org.openstreetmap.atlas.geography.atlas.change.FeatureChange,java.util.Map)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper: java.util.Iterator lambda$changeToAtlas$aa501200$1(org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel,java.util.function.BiFunction,scala.Tuple2)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper$2: void <init>(org.openstreetmap.atlas.geography.atlas.Atlas,java.lang.String,org.openstreetmap.atlas.geography.atlas.change.Change[],java.util.function.UnaryOperator)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper: java.util.Iterator lambda$shardToFeatureChanges$9486b271$1(org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel,java.util.function.BiFunction,org.openstreetmap.atlas.geography.sharding.CountryShard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$2f38d685$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.mutator.configuration.parsing.mergeforgiveness.strategies.PrioritizeTagStrategy: java.util.List getPrioritizationRules(java.util.Map)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel: java.util.List shards()>",
    "<org.openstreetmap.atlas.mutator.testing.AtlasChangeGeneratorRemovePointsWithRemoveMeTag: java.util.Set generateWithoutValidation(org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.mutator.testing.AtlasChangeGeneratorAddTag: java.util.Set generateWithoutValidation(org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Optional lambda$atlasFetcher$93b3548b$1(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Shard,java.lang.String,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.mutator.configuration.mutators.aql.InsecureAqlChangeGenerator: org.openstreetmap.atlas.geography.atlas.dsl.engine.QueryExecutor getQueryExecutor()>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceAtlas$8d5517e0$1(java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.mutator.testing.AtlasChangeGeneratorSelfConflicting: java.util.Set generateWithoutValidation(org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper: org.openstreetmap.atlas.geography.atlas.change.FeatureChange withTags(org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.geography.atlas.change.FeatureChange,java.lang.String,java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper: java.util.List executeMutations(org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.geography.sharding.CountryShard)>",
    "<org.openstreetmap.atlas.mutator.configuration.mutators.aql.SecureAqlChangeGenerator: org.openstreetmap.atlas.geography.atlas.dsl.authentication.Authenticator getAuthenticator()>",
    "<org.openstreetmap.atlas.mutator.testing.ConfiguredAtlasChangeGeneratorAddTurnRestrictions: java.util.Set mergeRelationMembers(java.util.Set,java.lang.Long)>",
    "<org.openstreetmap.atlas.generator.world.WorldMultiAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.mutator.testing.AtlasChangeGeneratorAddTag: org.openstreetmap.atlas.geography.atlas.complete.CompleteEntity createFrom(org.openstreetmap.atlas.geography.atlas.items.AtlasEntity)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutator: void execute(org.openstreetmap.atlas.utilities.runtime.CommandMap)>"
  ],
  "5.1.2": [
    "<org.openstreetmap.atlas.generator.AtlasGenerator: java.util.List generateTasks(java.util.List,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.tools.spark.rdd.ShardedAtlasRDDLoader: java.util.Set getCountryShards(org.openstreetmap.atlas.geography.sharding.Sharding,java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.tools.spark.persistence.PersistenceTools: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap boundaries(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Optional lambda$atlasFetcher$93b3548b$1(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Shard,java.lang.String,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.world.WorldMultiAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap initializeCountryBoundaryMap(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceAtlas$8d5517e0$1(java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$2(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.tools.spark.utilities.SparkFileHelper: void save(java.util.List)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$2f38d685$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>"
  ],
  "4.4.0": [
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateFullySlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$f78d293e$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceRelations$58bb7450$1(java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$0(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceLines$f8d67efe$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateLineSlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Iterator lambda$computeAtlasDelta$ff50ced8$1(java.util.Map,java.lang.String,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.tools.spark.persistence.PersistenceTools: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap boundaries(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateSectionedAtlas(org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.world.WorldMultiAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap initializeCountryBoundaryMap(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$2(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Optional lambda$atlasFetcher$d9ba407$1(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,java.lang.String,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,org.openstreetmap.atlas.geography.sharding.Shard)>"
  ],
  "5.3.5": [
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper$1: void <init>(org.openstreetmap.atlas.geography.atlas.dynamic.policy.DynamicAtlasPolicy,java.lang.String)>",
    "<org.openstreetmap.atlas.mutator.configuration.mutators.ConfiguredAtlasChangeGenerator: void validate(org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.geography.atlas.change.Change)>",
    "<org.openstreetmap.atlas.mutator.testing.ConfiguredAtlasChangeGeneratorAddTurnRestrictions: java.util.Set generateWithoutValidation(org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$augmentAtlas$8330db6b$1(scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.tools.spark.utilities.SparkFileHelper: void save(java.util.List)>",
    "<org.openstreetmap.atlas.mutator.configuration.parsing.provider.file.PbfRawAtlasProvider: java.util.Optional resourceToAtlas(org.openstreetmap.atlas.streaming.resource.Resource,java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.mutator.configuration.parsing.ConfiguredAtlasFetcher: java.util.Optional lambda$getCountryvoreFetcher$b1222a72$1(org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper$3: void <init>(java.lang.String,org.openstreetmap.atlas.geography.atlas.change.Change[],java.util.function.UnaryOperator)>",
    "<org.openstreetmap.atlas.generator.AtlasGenerator: java.util.List generateTasks(java.util.List,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding)>",
    "<org.openstreetmap.atlas.generator.tools.spark.rdd.ShardedAtlasRDDLoader: java.util.Set getCountryShards(org.openstreetmap.atlas.geography.sharding.Sharding,java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.mutator.filtering.ChangeFilter: org.openstreetmap.atlas.geography.atlas.change.FeatureChange lambda$stripUnwantedFeatures$28(org.openstreetmap.atlas.geography.atlas.items.AtlasEntity)>",
    "<org.openstreetmap.atlas.mutator.configuration.parsing.mergeforgiveness.strategies.TakeLowerNodeIdentifierStrategy: org.openstreetmap.atlas.geography.atlas.change.FeatureChange resolve(org.openstreetmap.atlas.geography.atlas.change.FeatureChange,org.openstreetmap.atlas.geography.atlas.change.FeatureChange,java.util.Map)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper: java.util.Iterator lambda$changeToAtlas$aa501200$1(org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel,java.util.function.BiFunction,scala.Tuple2)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper$2: void <init>(org.openstreetmap.atlas.geography.atlas.Atlas,java.lang.String,org.openstreetmap.atlas.geography.atlas.change.Change[],java.util.function.UnaryOperator)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper: java.util.Iterator lambda$shardToFeatureChanges$9486b271$1(org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel,java.util.function.BiFunction,org.openstreetmap.atlas.geography.sharding.CountryShard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$2f38d685$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.mutator.configuration.parsing.mergeforgiveness.strategies.PrioritizeTagStrategy: java.util.List getPrioritizationRules(java.util.Map)>",
    "<org.openstreetmap.atlas.mutator.testing.AtlasChangeGeneratorAddTag: java.util.Set generateWithoutValidation(org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel: java.util.List shards()>",
    "<org.openstreetmap.atlas.mutator.testing.AtlasChangeGeneratorRemovePointsWithRemoveMeTag: java.util.Set generateWithoutValidation(org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceAtlas$f8d67efe$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$buildRelationGeometries$ca484b3d$1(scala.Tuple2)>",
    "<org.openstreetmap.atlas.mutator.testing.AtlasChangeGeneratorSelfConflicting: java.util.Set generateWithoutValidation(org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper: org.openstreetmap.atlas.geography.atlas.change.FeatureChange withTags(org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.geography.atlas.change.FeatureChange,java.lang.String,java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutatorHelper: java.util.List executeMutations(org.openstreetmap.atlas.mutator.configuration.AtlasMutationLevel,org.openstreetmap.atlas.geography.atlas.Atlas,org.openstreetmap.atlas.geography.sharding.CountryShard)>",
    "<org.openstreetmap.atlas.mutator.testing.ConfiguredAtlasChangeGeneratorAddTurnRestrictions: java.util.Set mergeRelationMembers(java.util.Set,java.lang.Long)>",
    "<org.openstreetmap.atlas.mutator.filtering.ChangeFilter: boolean lambda$stripUnwantedFeatures$27(org.openstreetmap.atlas.geography.MultiPolygon,org.openstreetmap.atlas.geography.atlas.change.Change,org.openstreetmap.atlas.geography.atlas.items.AtlasEntity)>",
    "<org.openstreetmap.atlas.generator.world.WorldMultiAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.mutator.testing.AtlasChangeGeneratorAddTag: org.openstreetmap.atlas.geography.atlas.complete.CompleteEntity createFrom(org.openstreetmap.atlas.geography.atlas.items.AtlasEntity)>",
    "<org.openstreetmap.atlas.mutator.AtlasMutator: void execute(org.openstreetmap.atlas.utilities.runtime.CommandMap)>"
  ],
  "4.4.1": [
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateFullySlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$f78d293e$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceRelations$58bb7450$1(java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$0(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceLines$f8d67efe$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateLineSlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Iterator lambda$computeAtlasDelta$ff50ced8$1(java.util.Map,java.lang.String,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.tools.spark.persistence.PersistenceTools: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap boundaries(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateSectionedAtlas(org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.world.WorldMultiAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap initializeCountryBoundaryMap(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$2(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Optional lambda$atlasFetcher$d9ba407$1(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,java.lang.String,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,org.openstreetmap.atlas.geography.sharding.Shard)>"
  ],
  "4.4.2": [
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateFullySlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sectionAtlas$f78d293e$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.PbfLoader: org.openstreetmap.atlas.geography.atlas.Atlas generateRawAtlas(java.lang.String,org.openstreetmap.atlas.geography.sharding.Shard)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceRelations$58bb7450$1(java.lang.String,org.openstreetmap.atlas.generator.persistence.scheme.SlippyTilePersistenceScheme,java.util.Map,java.lang.String,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$0(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$sliceLines$f8d67efe$1(org.apache.spark.broadcast.Broadcast,org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateLineSlicedAtlas(java.lang.String,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.atlas.Atlas)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Iterator lambda$computeAtlasDelta$ff50ced8$1(java.util.Map,java.lang.String,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.clipping.Clip intersectionClip(org.openstreetmap.atlas.geography.sharding.CountryShard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap)>",
    "<org.openstreetmap.atlas.generator.tools.spark.persistence.PersistenceTools: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap boundaries(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: scala.Tuple2 lambda$generateAtlasStatistics$bb4299cd$1(org.apache.spark.broadcast.Broadcast,scala.Tuple2)>",
    "<org.openstreetmap.atlas.generator.creator.RawAtlasCreator: org.openstreetmap.atlas.geography.atlas.Atlas generateSectionedAtlas(org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Sharding,java.util.function.Function)>",
    "<org.openstreetmap.atlas.generator.world.WorldMultiAtlasGenerator: int onRun(org.openstreetmap.atlas.utilities.runtime.CommandMap)>",
    "<org.openstreetmap.atlas.generator.sharding.AtlasMissingShardVerifier: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap initializeCountryBoundaryMap(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.world.WorldAtlasGenerator: org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap lambda$static$2(java.lang.String)>",
    "<org.openstreetmap.atlas.generator.AtlasGeneratorHelper: java.util.Optional lambda$atlasFetcher$d9ba407$1(org.openstreetmap.atlas.geography.boundary.CountryBoundaryMap,org.openstreetmap.atlas.geography.sharding.Shard,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,java.lang.String,org.openstreetmap.atlas.generator.tools.caching.HadoopAtlasFileCache,org.openstreetmap.atlas.geography.sharding.Shard)>"
  ]
}