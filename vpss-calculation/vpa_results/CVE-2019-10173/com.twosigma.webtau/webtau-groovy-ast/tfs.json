{
  "1.15": [
    "<com.twosigma.webtau.groovy.ast.ShouldAstCodeTransformer: org.codehaus.groovy.ast.expr.Expression transform(org.codehaus.groovy.ast.expr.Expression)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation$_visit_closure1: org.codehaus.groovy.ast.ClassCodeExpressionTransformer getTransformer()>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstCodeTransformer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation$_visit_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstCodeTransformer: org.codehaus.groovy.ast.expr.MethodCallExpression createMatcherValidationCall(org.codehaus.groovy.ast.expr.PropertyExpression,java.lang.String,org.codehaus.groovy.ast.expr.Expression)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstCodeTransformer: boolean isShouldOrWait(org.codehaus.groovy.ast.expr.PropertyExpression)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstCodeTransformer: java.lang.String matcherMethodForOperation(java.lang.String)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation: void visit(org.codehaus.groovy.ast.ASTNode[],org.codehaus.groovy.control.SourceUnit)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation$_visit_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation$_visit_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>"
  ],
  "1.20": [
    "<com.twosigma.webtau.groovy.ast.ShouldAstCodeTransformer: org.codehaus.groovy.ast.expr.Expression transform(org.codehaus.groovy.ast.expr.Expression)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation$_visit_closure1: org.codehaus.groovy.ast.ClassCodeExpressionTransformer getTransformer()>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstCodeTransformer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation$_visit_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstCodeTransformer: org.codehaus.groovy.ast.expr.MethodCallExpression createMatcherValidationCall(org.codehaus.groovy.ast.expr.PropertyExpression,java.lang.String,org.codehaus.groovy.ast.expr.Expression)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstCodeTransformer: boolean isShouldOrWait(org.codehaus.groovy.ast.expr.PropertyExpression)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstCodeTransformer: java.lang.String matcherMethodForOperation(java.lang.String)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation: void visit(org.codehaus.groovy.ast.ASTNode[],org.codehaus.groovy.control.SourceUnit)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation$_visit_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation$_visit_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>"
  ],
  "1.16": [
    "<com.twosigma.webtau.groovy.ast.ShouldAstCodeTransformer: org.codehaus.groovy.ast.expr.Expression transform(org.codehaus.groovy.ast.expr.Expression)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation$_visit_closure1: org.codehaus.groovy.ast.ClassCodeExpressionTransformer getTransformer()>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstCodeTransformer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation$_visit_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstCodeTransformer: org.codehaus.groovy.ast.expr.MethodCallExpression createMatcherValidationCall(org.codehaus.groovy.ast.expr.PropertyExpression,java.lang.String,org.codehaus.groovy.ast.expr.Expression)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstCodeTransformer: boolean isShouldOrWait(org.codehaus.groovy.ast.expr.PropertyExpression)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstCodeTransformer: java.lang.String matcherMethodForOperation(java.lang.String)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation: void visit(org.codehaus.groovy.ast.ASTNode[],org.codehaus.groovy.control.SourceUnit)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation$_visit_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation$_visit_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>"
  ],
  "1.13": [
    "<com.twosigma.webtau.groovy.ast.ShouldAstCodeTransformer: org.codehaus.groovy.ast.expr.Expression transform(org.codehaus.groovy.ast.expr.Expression)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation$_visit_closure1: org.codehaus.groovy.ast.ClassCodeExpressionTransformer getTransformer()>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstCodeTransformer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation$_visit_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstCodeTransformer: org.codehaus.groovy.ast.expr.MethodCallExpression createMatcherValidationCall(org.codehaus.groovy.ast.expr.PropertyExpression,java.lang.String,org.codehaus.groovy.ast.expr.Expression)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstCodeTransformer: boolean isShouldOrWait(org.codehaus.groovy.ast.expr.PropertyExpression)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstCodeTransformer: java.lang.String matcherMethodForOperation(java.lang.String)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation: void visit(org.codehaus.groovy.ast.ASTNode[],org.codehaus.groovy.control.SourceUnit)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation$_visit_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation$_visit_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>"
  ],
  "1.18": [
    "<com.twosigma.webtau.groovy.ast.ShouldAstCodeTransformer: org.codehaus.groovy.ast.expr.Expression transform(org.codehaus.groovy.ast.expr.Expression)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation$_visit_closure1: org.codehaus.groovy.ast.ClassCodeExpressionTransformer getTransformer()>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstCodeTransformer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation$_visit_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstCodeTransformer: org.codehaus.groovy.ast.expr.MethodCallExpression createMatcherValidationCall(org.codehaus.groovy.ast.expr.PropertyExpression,java.lang.String,org.codehaus.groovy.ast.expr.Expression)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstCodeTransformer: boolean isShouldOrWait(org.codehaus.groovy.ast.expr.PropertyExpression)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstCodeTransformer: java.lang.String matcherMethodForOperation(java.lang.String)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation: void visit(org.codehaus.groovy.ast.ASTNode[],org.codehaus.groovy.control.SourceUnit)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation$_visit_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation$_visit_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>"
  ],
  "1.19": [
    "<com.twosigma.webtau.groovy.ast.ShouldAstCodeTransformer: org.codehaus.groovy.ast.expr.Expression transform(org.codehaus.groovy.ast.expr.Expression)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation$_visit_closure1: org.codehaus.groovy.ast.ClassCodeExpressionTransformer getTransformer()>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstCodeTransformer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation$_visit_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstCodeTransformer: org.codehaus.groovy.ast.expr.MethodCallExpression createMatcherValidationCall(org.codehaus.groovy.ast.expr.PropertyExpression,java.lang.String,org.codehaus.groovy.ast.expr.Expression)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstCodeTransformer: boolean isShouldOrWait(org.codehaus.groovy.ast.expr.PropertyExpression)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstCodeTransformer: java.lang.String matcherMethodForOperation(java.lang.String)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation: void visit(org.codehaus.groovy.ast.ASTNode[],org.codehaus.groovy.control.SourceUnit)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation$_visit_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation$_visit_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>"
  ],
  "1.12": [
    "<com.twosigma.webtau.groovy.ast.ShouldAstCodeTransformer: org.codehaus.groovy.ast.expr.Expression transform(org.codehaus.groovy.ast.expr.Expression)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation$_visit_closure1: org.codehaus.groovy.ast.ClassCodeExpressionTransformer getTransformer()>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstCodeTransformer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation$_visit_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstCodeTransformer: org.codehaus.groovy.ast.expr.MethodCallExpression createMatcherValidationCall(org.codehaus.groovy.ast.expr.PropertyExpression,java.lang.String,org.codehaus.groovy.ast.expr.Expression)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstCodeTransformer: boolean isShouldOrWait(org.codehaus.groovy.ast.expr.PropertyExpression)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstCodeTransformer: java.lang.String matcherMethodForOperation(java.lang.String)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation: void visit(org.codehaus.groovy.ast.ASTNode[],org.codehaus.groovy.control.SourceUnit)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation$_visit_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation$_visit_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>"
  ],
  "1.11": [
    "<com.twosigma.webtau.groovy.ast.ShouldAstCodeTransformer: org.codehaus.groovy.ast.expr.Expression transform(org.codehaus.groovy.ast.expr.Expression)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation$_visit_closure1: org.codehaus.groovy.ast.ClassCodeExpressionTransformer getTransformer()>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstCodeTransformer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation$_visit_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstCodeTransformer: org.codehaus.groovy.ast.expr.MethodCallExpression createMatcherValidationCall(org.codehaus.groovy.ast.expr.PropertyExpression,java.lang.String,org.codehaus.groovy.ast.expr.Expression)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstCodeTransformer: boolean isShouldOrWait(org.codehaus.groovy.ast.expr.PropertyExpression)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstCodeTransformer: java.lang.String matcherMethodForOperation(java.lang.String)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation: void visit(org.codehaus.groovy.ast.ASTNode[],org.codehaus.groovy.control.SourceUnit)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation$_visit_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation$_visit_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>"
  ],
  "1.17": [
    "<com.twosigma.webtau.groovy.ast.ShouldAstCodeTransformer: org.codehaus.groovy.ast.expr.Expression transform(org.codehaus.groovy.ast.expr.Expression)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation$_visit_closure1: org.codehaus.groovy.ast.ClassCodeExpressionTransformer getTransformer()>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstCodeTransformer: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation$_visit_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstCodeTransformer: org.codehaus.groovy.ast.expr.MethodCallExpression createMatcherValidationCall(org.codehaus.groovy.ast.expr.PropertyExpression,java.lang.String,org.codehaus.groovy.ast.expr.Expression)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstCodeTransformer: boolean isShouldOrWait(org.codehaus.groovy.ast.expr.PropertyExpression)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstCodeTransformer: java.lang.String matcherMethodForOperation(java.lang.String)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation: void visit(org.codehaus.groovy.ast.ASTNode[],org.codehaus.groovy.control.SourceUnit)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation$_visit_closure1: java.lang.Object doCall(java.lang.Object)>",
    "<com.twosigma.webtau.groovy.ast.ShouldAstTransformation$_visit_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>"
  ]
}