{
  "1.30": [
    "<com.twosigma.testing.tcli.output.OutputLines: void <init>(java.lang.String,java.lang.String)>",
    "<com.twosigma.testing.tcli.process.CliProcess: void <init>(java.lang.String)>",
    "<com.twosigma.testing.tcli.output.OutputLinesCompareToHandler$_compareEqualOnly_closure1: java.lang.Object doCall(java.lang.Object,java.lang.Object)>",
    "<com.twosigma.testing.tcli.process.CliProcess$OutputCapture: void $static_propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.twosigma.testing.tcli.TcliDsl: void <init>(com.twosigma.testing.tcli.process.CliProcess)>",
    "<com.twosigma.testing.tcli.process.CliProcess$OutputCapture: java.lang.Object methodMissing(java.lang.String,java.lang.Object)>",
    "<com.twosigma.testing.tcli.TcliDsl: com.twosigma.testing.tcli.output.OutputLines getLine()>",
    "<com.twosigma.testing.tcli.output.OutputLinesCompareToHandler: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.twosigma.testing.tcli.TcliDsl: java.lang.String getOut()>",
    "<com.twosigma.testing.tcli.process.CliProcess$OutputCapture: void <init>(java.lang.StringBuilder)>",
    "<com.twosigma.testing.tcli.process.CliProcess$OutputCapture: java.lang.Object $static_methodMissing(java.lang.String,java.lang.Object)>",
    "<com.twosigma.testing.tcli.TcliDsl: void runCli(java.lang.String,groovy.lang.Closure)>",
    "<com.twosigma.testing.tcli.process.CliProcess: void start()>",
    "<com.twosigma.testing.tcli.process.CliProcess: void this$dist$set$1(java.lang.String,java.lang.Object)>",
    "<com.twosigma.testing.tcli.output.OutputLinesCompareToHandler$_compareEqualOnly_closure1: com.twosigma.webtau.expectation.ActualPath getActualPath()>",
    "<com.twosigma.testing.tcli.output.OutputLinesCompareToHandler$_compareEqualOnly_closure1: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.twosigma.testing.tcli.TcliDsl: void initWithTestRunner(com.twosigma.webtau.runner.standalone.StandaloneTestRunner)>",
    "<com.twosigma.testing.tcli.output.OutputLinesCompareToHandler$_compareEqualOnly_closure1: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference,groovy.lang.Reference)>",
    "<com.twosigma.testing.tcli.process.CliProcess$OutputCapture: java.lang.Object propertyMissing(java.lang.String)>",
    "<com.twosigma.testing.tcli.process.CliProcess$OutputCapture: void propertyMissing(java.lang.String,java.lang.Object)>",
    "<com.twosigma.testing.tcli.output.OutputLinesCompareToHandler: java.lang.String renderActualExpected(java.lang.Object,java.lang.Object)>",
    "<com.twosigma.testing.tcli.output.OutputLinesCompareToHandler$_compareEqualOnly_closure2: void <init>(java.lang.Object,java.lang.Object,groovy.lang.Reference)>",
    "<com.twosigma.testing.tcli.process.CliProcess: java.lang.Object this$dist$invoke$1(java.lang.String,java.lang.Object)>",
    "<com.twosigma.testing.tcli.process.CliProcess: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.twosigma.testing.tcli.process.CliProcess: java.lang.Object this$dist$get$1(java.lang.String)>",
    "<com.twosigma.testing.tcli.TcliDsl: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.twosigma.testing.tcli.output.OutputLinesCompareToHandler: void compareEqualOnly(com.twosigma.webtau.expectation.equality.CompareToComparator,com.twosigma.webtau.expectation.ActualPath,java.lang.Object,java.lang.Object)>",
    "<com.twosigma.testing.tcli.output.OutputLinesCompareToHandler$_compareEqualOnly_closure2: com.twosigma.testing.tcli.output.OutputLines getActualLines()>",
    "<com.twosigma.testing.tcli.process.CliProcess$OutputCapture: java.lang.Object $static_propertyMissing(java.lang.String)>",
    "<com.twosigma.testing.tcli.process.CliProcess$OutputCapture: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.twosigma.testing.tcli.output.OutputLinesCompareToHandler$_compareEqualOnly_closure2: groovy.lang.MetaClass $getStaticMetaClass()>",
    "<com.twosigma.testing.tcli.output.OutputLines: groovy.lang.MetaClass $getStaticMetaClass()>"
  ]
}