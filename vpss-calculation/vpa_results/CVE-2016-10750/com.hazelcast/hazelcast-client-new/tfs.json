{
  "3.5.4": [
    "<com.hazelcast.client.proxy.ClientMapProxy: void submitToKey(java.lang.Object,com.hazelcast.map.EntryProcessor,com.hazelcast.core.ExecutionCallback)>",
    "<com.hazelcast.client.connection.nio.ClientWriteHandler: void handle()>",
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: boolean remove(java.lang.Object,java.lang.Object)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: boolean replace(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.proxy.txn.TransactionProxy: com.hazelcast.client.impl.protocol.ClientMessage invoke(com.hazelcast.client.impl.protocol.ClientMessage)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invoke(com.hazelcast.client.impl.protocol.ClientMessage,java.lang.Object)>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleMapPutMany(java.lang.String[])>",
    "<com.hazelcast.client.spi.impl.ClientClusterServiceImpl: long getClusterTime()>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: com.hazelcast.config.CacheConfig getCacheConfigFromPartition(java.lang.String,java.lang.String)>",
    "<com.hazelcast.client.spi.impl.ClientInvocationFuture: com.hazelcast.client.impl.protocol.ClientMessage get(long,java.util.concurrent.TimeUnit)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: com.hazelcast.security.Credentials initCredentials(com.hazelcast.client.config.ClientConfig)>",
    "<com.hazelcast.client.proxy.txn.TransactionProxy: void commit()>",
    "<com.hazelcast.client.nearcache.ClientHeapNearCache: void fireEvictCache()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: com.hazelcast.client.spi.EventHandler createHandler(java.lang.Object,boolean)>",
    "<com.hazelcast.client.spi.ProxyManager: java.lang.Object instantiateClientProxy(java.lang.Class,java.lang.String,java.lang.String)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture putAsyncInternal(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean,boolean,boolean)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invoke(com.hazelcast.client.impl.protocol.ClientMessage,com.hazelcast.nio.Address)>",
    "<com.hazelcast.client.proxy.ClientExecutorServiceProxy: boolean isSyncComputation(boolean)>",
    "<com.hazelcast.client.nearcache.ClientHeapNearCache: void fireTtlCleanup()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleMapRemoveMany(java.lang.String[])>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: void put(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture getAndRemoveAsyncInternal(java.lang.Object,boolean,boolean)>",
    "<com.hazelcast.client.spi.impl.ClientListenerServiceImpl: boolean stopListening(java.lang.String,com.hazelcast.client.spi.impl.ListenerRemoveCodec)>",
    "<com.hazelcast.client.util.ClientPartitionCancellableDelegatingFuture: boolean cancel(boolean)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: int size()>",
    "<com.hazelcast.client.spi.impl.ClusterListenerSupport: void connectToOne()>",
    "<com.hazelcast.client.spi.impl.ClientListenerServiceImpl: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl,int,int)>",
    "<com.hazelcast.client.spi.impl.ClientInvocationServiceSupport$ResponseThread: void run()>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture replaceAndGetAsyncInternal(java.lang.Object,java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean,boolean,boolean)>",
    "<com.hazelcast.client.nearcache.ClientHeapNearCache: void <init>(java.lang.String,com.hazelcast.client.spi.ClientContext,com.hazelcast.config.NearCacheConfig)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: boolean putIfAbsent(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleCommand(java.lang.String)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future putAsync(java.lang.Object,java.lang.Object,long,java.util.concurrent.TimeUnit)>",
    "<com.hazelcast.client.cache.impl.ClientClusterWideIterator: com.hazelcast.cache.impl.CacheKeyIteratorResult fetch()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: com.hazelcast.client.impl.protocol.ClientMessage invoke(com.hazelcast.client.impl.protocol.ClientMessage)>",
    "<com.hazelcast.client.spi.ProxyManager: void init(com.hazelcast.client.config.ClientConfig)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCachingProvider: com.hazelcast.client.cache.impl.HazelcastClientCacheManager createHazelcastCacheManager(java.net.URI,java.lang.ClassLoader,java.util.Properties)>",
    "<com.hazelcast.client.util.ClientAddressCancellableDelegatingFuture: boolean cancel(boolean)>",
    "<com.hazelcast.client.spi.ProxyManager$ClientProxyFuture: com.hazelcast.client.spi.ClientProxy get()>",
    "<com.hazelcast.client.impl.ClusterAuthenticator: void authenticate(com.hazelcast.client.connection.nio.ClientConnection)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: com.hazelcast.client.ClientExtension createClientInitializer(java.lang.ClassLoader)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: void enableStatisticManagementOnNodes(java.lang.String,boolean,boolean)>",
    "<com.hazelcast.client.impl.DefaultClientExtension: com.hazelcast.nio.serialization.SerializationService createSerializationService()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: java.lang.Object getInternal(java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: void addInvalidationListener(com.hazelcast.core.Member)>",
    "<com.hazelcast.client.nearcache.ClientHeapNearCache: void put(java.lang.Object,java.lang.Object)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: java.lang.Object getAndPut(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invoke(com.hazelcast.client.impl.protocol.ClientMessage)>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleListAddMany(java.lang.String[])>",
    "<com.hazelcast.client.proxy.txn.xa.XATransactionProxy: com.hazelcast.client.impl.protocol.ClientMessage invoke(com.hazelcast.client.impl.protocol.ClientMessage)>",
    "<com.hazelcast.client.connection.nio.ClientReadHandler: void handle()>",
    "<com.hazelcast.client.proxy.txn.xa.XATransactionProxy: void begin()>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: void removeAllKeysInternal(java.util.Set)>",
    "<com.hazelcast.client.spi.impl.ClusterListenerSupport$ManagerAuthenticator: void authenticate(com.hazelcast.client.connection.nio.ClientConnection)>",
    "<com.hazelcast.client.spi.ClientProxy: void destroy()>",
    "<com.hazelcast.client.proxy.txn.xa.XATransactionProxy: void commit(boolean)>",
    "<com.hazelcast.client.util.ClientPartitionCancellableDelegatingFuture: boolean invokeCancelRequest(boolean)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: void destroy()>",
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: java.lang.Object getAndRemove(java.lang.Object)>",
    "<com.hazelcast.client.proxy.ClientMultiMapProxy: com.hazelcast.client.spi.EventHandler createHandler(java.lang.Object,boolean)>",
    "<com.hazelcast.client.proxy.ClientConditionProxy: boolean awaitUntil(java.util.Date)>",
    "<com.hazelcast.client.proxy.txn.TransactionProxy: void begin()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: com.hazelcast.client.impl.protocol.ClientMessage invoke(com.hazelcast.client.impl.protocol.ClientMessage,com.hazelcast.nio.serialization.Data)>",
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: boolean remove(java.lang.Object)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invokeInterruptibly(com.hazelcast.client.impl.protocol.ClientMessage,java.lang.Object)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: com.hazelcast.config.CacheConfig createConfigOnPartition(com.hazelcast.config.CacheConfig)>",
    "<com.hazelcast.client.proxy.txn.ClientTxnProxy: com.hazelcast.client.impl.protocol.ClientMessage invoke(com.hazelcast.client.impl.protocol.ClientMessage)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future submitToKey(java.lang.Object,com.hazelcast.map.EntryProcessor)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: void start()>",
    "<com.hazelcast.client.spi.impl.ClientInvocationFuture: com.hazelcast.client.impl.protocol.ClientMessage get()>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl$HeartBeat: void run()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleSetRemoveMany(java.lang.String[])>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.client.spi.impl.ClientInvocationFuture invoke(com.hazelcast.client.impl.protocol.ClientMessage,com.hazelcast.nio.serialization.Data,int)>",
    "<com.hazelcast.client.proxy.txn.xa.XATransactionProxy: void prepare()>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: java.lang.Object getSafely(java.util.concurrent.Future)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCachingProvider: com.hazelcast.core.HazelcastInstance instanceFromProperties(java.lang.ClassLoader,java.util.Properties,boolean)>",
    "<com.hazelcast.client.spi.impl.ClientListenerServiceImpl: java.lang.String startListening(com.hazelcast.client.impl.protocol.ClientMessage,java.lang.Object,com.hazelcast.client.spi.EventHandler,com.hazelcast.client.impl.ClientMessageDecoder)>",
    "<com.hazelcast.client.spi.ProxyManager: com.hazelcast.client.spi.ClientProxy getOrCreateProxy(java.lang.String,java.lang.String)>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleQOfferMany(java.lang.String[])>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleSetAddMany(java.lang.String[])>",
    "<com.hazelcast.client.nearcache.ClientHeapNearCache$2: void run()>",
    "<com.hazelcast.client.proxy.ClientExecutorServiceProxy: com.hazelcast.client.spi.impl.ClientInvocationFuture invokeOnPartitionOwner(com.hazelcast.client.impl.protocol.ClientMessage,int)>",
    "<com.hazelcast.client.util.ClientAddressCancellableDelegatingFuture: boolean invokeCancelRequest(boolean)>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl: com.hazelcast.client.connection.nio.ClientConnection createSocketConnection(com.hazelcast.nio.Address)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: void removeAllInternal()>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture putIfAbsentAsyncInternal(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean,boolean)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: java.lang.Object getAndReplace(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: com.hazelcast.client.config.ClientConfig build(java.lang.ClassLoader)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture replaceAsyncInternal(java.lang.Object,java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean,boolean,boolean)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: com.hazelcast.config.CacheConfig createConfig(java.lang.String,com.hazelcast.config.CacheConfig,boolean,boolean)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: java.util.Collection getDistributedObjects()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: com.hazelcast.monitor.LocalMapStats getLocalMapStats()>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl: void authenticate(com.hazelcast.client.connection.Authenticator,com.hazelcast.client.connection.nio.ClientConnection)>",
    "<com.hazelcast.client.proxy.txn.xa.XATransactionProxy: void checkTimeout()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future removeAsync(java.lang.Object)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture removeAsyncInternal(java.lang.Object,java.lang.Object,boolean,boolean,boolean)>",
    "<com.hazelcast.client.proxy.txn.TransactionProxy: void checkTimeout()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future getAsync(java.lang.Object)>",
    "<com.hazelcast.client.proxy.ClientExecutorServiceProxy: com.hazelcast.client.spi.impl.ClientInvocationFuture invokeOnTarget(com.hazelcast.client.impl.protocol.ClientMessage,com.hazelcast.nio.Address)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: void clearInternal()>",
    "<com.hazelcast.client.connection.nio.ClientReadHandler: void <init>(com.hazelcast.client.connection.nio.ClientConnection,com.hazelcast.nio.tcp.IOSelector,int)>"
  ],
  "3.5.1": [
    "<com.hazelcast.client.proxy.ClientMapProxy: void submitToKey(java.lang.Object,com.hazelcast.map.EntryProcessor,com.hazelcast.core.ExecutionCallback)>",
    "<com.hazelcast.client.connection.nio.ClientWriteHandler: void handle()>",
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: boolean remove(java.lang.Object,java.lang.Object)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: boolean replace(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.proxy.txn.TransactionProxy: com.hazelcast.client.impl.protocol.ClientMessage invoke(com.hazelcast.client.impl.protocol.ClientMessage)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invoke(com.hazelcast.client.impl.protocol.ClientMessage,java.lang.Object)>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleMapPutMany(java.lang.String[])>",
    "<com.hazelcast.client.spi.impl.ClientClusterServiceImpl: long getClusterTime()>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: com.hazelcast.config.CacheConfig getCacheConfigFromPartition(java.lang.String,java.lang.String)>",
    "<com.hazelcast.client.spi.impl.ClientInvocationFuture: com.hazelcast.client.impl.protocol.ClientMessage get(long,java.util.concurrent.TimeUnit)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: com.hazelcast.security.Credentials initCredentials(com.hazelcast.client.config.ClientConfig)>",
    "<com.hazelcast.client.proxy.txn.TransactionProxy: void commit()>",
    "<com.hazelcast.client.util.ClientCancellableDelegatingFuture: com.hazelcast.client.spi.impl.ClientInvocationFuture invokeCancelRequest(boolean)>",
    "<com.hazelcast.client.nearcache.ClientHeapNearCache: void fireEvictCache()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: com.hazelcast.client.spi.EventHandler createHandler(java.lang.Object,boolean)>",
    "<com.hazelcast.client.spi.ProxyManager: java.lang.Object instantiateClientProxy(java.lang.Class,java.lang.String,java.lang.String)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invoke(com.hazelcast.client.impl.protocol.ClientMessage,com.hazelcast.nio.Address)>",
    "<com.hazelcast.client.proxy.ClientExecutorServiceProxy: boolean isSyncComputation(boolean)>",
    "<com.hazelcast.client.nearcache.ClientHeapNearCache: void fireTtlCleanup()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleMapRemoveMany(java.lang.String[])>",
    "<com.hazelcast.client.util.ClientCancellableDelegatingFuture: boolean cancel(boolean)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: void put(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture removeAsyncInternal(java.lang.Object,java.lang.Object,boolean,boolean)>",
    "<com.hazelcast.client.spi.impl.ClientListenerServiceImpl: boolean stopListening(com.hazelcast.client.impl.protocol.ClientMessage,java.lang.String)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: int size()>",
    "<com.hazelcast.client.spi.impl.ClusterListenerSupport: void connectToOne()>",
    "<com.hazelcast.client.spi.impl.ClientListenerServiceImpl: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl,int,int)>",
    "<com.hazelcast.client.spi.impl.ClientInvocationServiceSupport$ResponseThread: void run()>",
    "<com.hazelcast.client.nearcache.ClientHeapNearCache: void <init>(java.lang.String,com.hazelcast.client.spi.ClientContext,com.hazelcast.config.NearCacheConfig)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: boolean putIfAbsent(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleCommand(java.lang.String)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: void removeInvalidationListener(com.hazelcast.core.Member,boolean)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future putAsync(java.lang.Object,java.lang.Object,long,java.util.concurrent.TimeUnit)>",
    "<com.hazelcast.client.cache.impl.ClientClusterWideIterator: com.hazelcast.cache.impl.CacheKeyIteratorResult fetch()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: com.hazelcast.client.impl.protocol.ClientMessage invoke(com.hazelcast.client.impl.protocol.ClientMessage)>",
    "<com.hazelcast.client.spi.ProxyManager: void init(com.hazelcast.client.config.ClientConfig)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCachingProvider: com.hazelcast.client.cache.impl.HazelcastClientCacheManager createHazelcastCacheManager(java.net.URI,java.lang.ClassLoader,java.util.Properties)>",
    "<com.hazelcast.client.spi.ProxyManager$ClientProxyFuture: com.hazelcast.client.spi.ClientProxy get()>",
    "<com.hazelcast.client.impl.ClusterAuthenticator: void authenticate(com.hazelcast.client.connection.nio.ClientConnection)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: com.hazelcast.client.ClientExtension createClientInitializer(java.lang.ClassLoader)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: void enableStatisticManagementOnNodes(java.lang.String,boolean,boolean)>",
    "<com.hazelcast.client.spi.impl.ClientListenerServiceImpl: java.lang.String startListening(com.hazelcast.client.impl.protocol.ClientMessage,java.lang.Object,com.hazelcast.client.spi.EventHandler)>",
    "<com.hazelcast.client.impl.DefaultClientExtension: com.hazelcast.nio.serialization.SerializationService createSerializationService()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: java.lang.Object getInternal(java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: void addInvalidationListener(com.hazelcast.core.Member)>",
    "<com.hazelcast.client.nearcache.ClientHeapNearCache: void put(java.lang.Object,java.lang.Object)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: java.lang.Object getAndPut(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invoke(com.hazelcast.client.impl.protocol.ClientMessage)>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleListAddMany(java.lang.String[])>",
    "<com.hazelcast.client.proxy.txn.xa.XATransactionProxy: com.hazelcast.client.impl.protocol.ClientMessage invoke(com.hazelcast.client.impl.protocol.ClientMessage)>",
    "<com.hazelcast.client.connection.nio.ClientReadHandler: void handle()>",
    "<com.hazelcast.client.proxy.txn.xa.XATransactionProxy: void begin()>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: void removeAllKeysInternal(java.util.Set)>",
    "<com.hazelcast.client.spi.impl.ClusterListenerSupport$ManagerAuthenticator: void authenticate(com.hazelcast.client.connection.nio.ClientConnection)>",
    "<com.hazelcast.client.spi.ClientProxy: void destroy()>",
    "<com.hazelcast.client.proxy.txn.xa.XATransactionProxy: void commit(boolean)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: void destroy()>",
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: java.lang.Object getAndRemove(java.lang.Object)>",
    "<com.hazelcast.client.proxy.ClientMultiMapProxy: com.hazelcast.client.spi.EventHandler createHandler(java.lang.Object,boolean)>",
    "<com.hazelcast.client.proxy.ClientConditionProxy: boolean awaitUntil(java.util.Date)>",
    "<com.hazelcast.client.proxy.txn.TransactionProxy: void begin()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: com.hazelcast.client.impl.protocol.ClientMessage invoke(com.hazelcast.client.impl.protocol.ClientMessage,com.hazelcast.nio.serialization.Data)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture putIfAbsentAsyncInternal(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean)>",
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: boolean remove(java.lang.Object)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invokeInterruptibly(com.hazelcast.client.impl.protocol.ClientMessage,java.lang.Object)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: com.hazelcast.config.CacheConfig createConfigOnPartition(com.hazelcast.config.CacheConfig)>",
    "<com.hazelcast.client.proxy.txn.ClientTxnProxy: com.hazelcast.client.impl.protocol.ClientMessage invoke(com.hazelcast.client.impl.protocol.ClientMessage)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture getAndRemoveAsyncInternal(java.lang.Object,boolean)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future submitToKey(java.lang.Object,com.hazelcast.map.EntryProcessor)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: void start()>",
    "<com.hazelcast.client.spi.impl.ClientInvocationFuture: com.hazelcast.client.impl.protocol.ClientMessage get()>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl$HeartBeat: void run()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleSetRemoveMany(java.lang.String[])>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.client.spi.impl.ClientInvocationFuture invoke(com.hazelcast.client.impl.protocol.ClientMessage,com.hazelcast.nio.serialization.Data,int)>",
    "<com.hazelcast.client.proxy.txn.xa.XATransactionProxy: void prepare()>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: java.lang.Object getSafely(java.util.concurrent.Future)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCachingProvider: com.hazelcast.core.HazelcastInstance instanceFromProperties(java.lang.ClassLoader,java.util.Properties,boolean)>",
    "<com.hazelcast.client.spi.ProxyManager: com.hazelcast.client.spi.ClientProxy getOrCreateProxy(java.lang.String,java.lang.String)>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleQOfferMany(java.lang.String[])>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleSetAddMany(java.lang.String[])>",
    "<com.hazelcast.client.nearcache.ClientHeapNearCache$2: void run()>",
    "<com.hazelcast.client.proxy.ClientExecutorServiceProxy: com.hazelcast.client.spi.impl.ClientInvocationFuture invokeOnPartitionOwner(com.hazelcast.client.impl.protocol.ClientMessage,int)>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl: com.hazelcast.client.connection.nio.ClientConnection createSocketConnection(com.hazelcast.nio.Address)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: void removeAllInternal()>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture putAsyncInternal(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean,boolean)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: java.lang.Object getAndReplace(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: com.hazelcast.client.config.ClientConfig build(java.lang.ClassLoader)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture replaceAsyncInternal(java.lang.Object,java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean,boolean,boolean)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: com.hazelcast.config.CacheConfig createConfig(java.lang.String,com.hazelcast.config.CacheConfig,boolean,boolean)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: java.util.Collection getDistributedObjects()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: com.hazelcast.monitor.LocalMapStats getLocalMapStats()>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl: void authenticate(com.hazelcast.client.connection.Authenticator,com.hazelcast.client.connection.nio.ClientConnection)>",
    "<com.hazelcast.client.proxy.txn.xa.XATransactionProxy: void checkTimeout()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future removeAsync(java.lang.Object)>",
    "<com.hazelcast.client.proxy.txn.TransactionProxy: void checkTimeout()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future getAsync(java.lang.Object)>",
    "<com.hazelcast.client.proxy.ClientExecutorServiceProxy: com.hazelcast.client.spi.impl.ClientInvocationFuture invokeOnTarget(com.hazelcast.client.impl.protocol.ClientMessage,com.hazelcast.nio.Address)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: void clearInternal()>",
    "<com.hazelcast.client.connection.nio.ClientReadHandler: void <init>(com.hazelcast.client.connection.nio.ClientConnection,com.hazelcast.nio.tcp.IOSelector,int)>"
  ],
  "3.5.3": [
    "<com.hazelcast.client.proxy.ClientMapProxy: void submitToKey(java.lang.Object,com.hazelcast.map.EntryProcessor,com.hazelcast.core.ExecutionCallback)>",
    "<com.hazelcast.client.connection.nio.ClientWriteHandler: void handle()>",
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: boolean remove(java.lang.Object,java.lang.Object)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: boolean replace(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.proxy.txn.TransactionProxy: com.hazelcast.client.impl.protocol.ClientMessage invoke(com.hazelcast.client.impl.protocol.ClientMessage)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invoke(com.hazelcast.client.impl.protocol.ClientMessage,java.lang.Object)>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleMapPutMany(java.lang.String[])>",
    "<com.hazelcast.client.spi.impl.ClientClusterServiceImpl: long getClusterTime()>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: com.hazelcast.config.CacheConfig getCacheConfigFromPartition(java.lang.String,java.lang.String)>",
    "<com.hazelcast.client.spi.impl.ClientInvocationFuture: com.hazelcast.client.impl.protocol.ClientMessage get(long,java.util.concurrent.TimeUnit)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: com.hazelcast.security.Credentials initCredentials(com.hazelcast.client.config.ClientConfig)>",
    "<com.hazelcast.client.proxy.txn.TransactionProxy: void commit()>",
    "<com.hazelcast.client.nearcache.ClientHeapNearCache: void fireEvictCache()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: com.hazelcast.client.spi.EventHandler createHandler(java.lang.Object,boolean)>",
    "<com.hazelcast.client.spi.ProxyManager: java.lang.Object instantiateClientProxy(java.lang.Class,java.lang.String,java.lang.String)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture putAsyncInternal(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean,boolean,boolean)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invoke(com.hazelcast.client.impl.protocol.ClientMessage,com.hazelcast.nio.Address)>",
    "<com.hazelcast.client.proxy.ClientExecutorServiceProxy: boolean isSyncComputation(boolean)>",
    "<com.hazelcast.client.nearcache.ClientHeapNearCache: void fireTtlCleanup()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleMapRemoveMany(java.lang.String[])>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: void put(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture getAndRemoveAsyncInternal(java.lang.Object,boolean,boolean)>",
    "<com.hazelcast.client.spi.impl.ClientListenerServiceImpl: boolean stopListening(java.lang.String,com.hazelcast.client.spi.impl.ListenerRemoveCodec)>",
    "<com.hazelcast.client.util.ClientPartitionCancellableDelegatingFuture: boolean cancel(boolean)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: int size()>",
    "<com.hazelcast.client.spi.impl.ClusterListenerSupport: void connectToOne()>",
    "<com.hazelcast.client.spi.impl.ClientListenerServiceImpl: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl,int,int)>",
    "<com.hazelcast.client.spi.impl.ClientInvocationServiceSupport$ResponseThread: void run()>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture replaceAndGetAsyncInternal(java.lang.Object,java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean,boolean,boolean)>",
    "<com.hazelcast.client.nearcache.ClientHeapNearCache: void <init>(java.lang.String,com.hazelcast.client.spi.ClientContext,com.hazelcast.config.NearCacheConfig)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: boolean putIfAbsent(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleCommand(java.lang.String)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future putAsync(java.lang.Object,java.lang.Object,long,java.util.concurrent.TimeUnit)>",
    "<com.hazelcast.client.cache.impl.ClientClusterWideIterator: com.hazelcast.cache.impl.CacheKeyIteratorResult fetch()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: com.hazelcast.client.impl.protocol.ClientMessage invoke(com.hazelcast.client.impl.protocol.ClientMessage)>",
    "<com.hazelcast.client.spi.ProxyManager: void init(com.hazelcast.client.config.ClientConfig)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCachingProvider: com.hazelcast.client.cache.impl.HazelcastClientCacheManager createHazelcastCacheManager(java.net.URI,java.lang.ClassLoader,java.util.Properties)>",
    "<com.hazelcast.client.util.ClientAddressCancellableDelegatingFuture: boolean cancel(boolean)>",
    "<com.hazelcast.client.spi.ProxyManager$ClientProxyFuture: com.hazelcast.client.spi.ClientProxy get()>",
    "<com.hazelcast.client.impl.ClusterAuthenticator: void authenticate(com.hazelcast.client.connection.nio.ClientConnection)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: com.hazelcast.client.ClientExtension createClientInitializer(java.lang.ClassLoader)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: void enableStatisticManagementOnNodes(java.lang.String,boolean,boolean)>",
    "<com.hazelcast.client.impl.DefaultClientExtension: com.hazelcast.nio.serialization.SerializationService createSerializationService()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: java.lang.Object getInternal(java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: void addInvalidationListener(com.hazelcast.core.Member)>",
    "<com.hazelcast.client.nearcache.ClientHeapNearCache: void put(java.lang.Object,java.lang.Object)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: java.lang.Object getAndPut(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invoke(com.hazelcast.client.impl.protocol.ClientMessage)>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleListAddMany(java.lang.String[])>",
    "<com.hazelcast.client.proxy.txn.xa.XATransactionProxy: com.hazelcast.client.impl.protocol.ClientMessage invoke(com.hazelcast.client.impl.protocol.ClientMessage)>",
    "<com.hazelcast.client.connection.nio.ClientReadHandler: void handle()>",
    "<com.hazelcast.client.proxy.txn.xa.XATransactionProxy: void begin()>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: void removeAllKeysInternal(java.util.Set)>",
    "<com.hazelcast.client.spi.impl.ClusterListenerSupport$ManagerAuthenticator: void authenticate(com.hazelcast.client.connection.nio.ClientConnection)>",
    "<com.hazelcast.client.spi.ClientProxy: void destroy()>",
    "<com.hazelcast.client.util.ClientAddressCancellableDelegatingFuture: com.hazelcast.client.spi.impl.ClientInvocationFuture invokeCancelRequest(boolean)>",
    "<com.hazelcast.client.proxy.txn.xa.XATransactionProxy: void commit(boolean)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: void destroy()>",
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: java.lang.Object getAndRemove(java.lang.Object)>",
    "<com.hazelcast.client.proxy.ClientMultiMapProxy: com.hazelcast.client.spi.EventHandler createHandler(java.lang.Object,boolean)>",
    "<com.hazelcast.client.proxy.ClientConditionProxy: boolean awaitUntil(java.util.Date)>",
    "<com.hazelcast.client.proxy.txn.TransactionProxy: void begin()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: com.hazelcast.client.impl.protocol.ClientMessage invoke(com.hazelcast.client.impl.protocol.ClientMessage,com.hazelcast.nio.serialization.Data)>",
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: boolean remove(java.lang.Object)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invokeInterruptibly(com.hazelcast.client.impl.protocol.ClientMessage,java.lang.Object)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: com.hazelcast.config.CacheConfig createConfigOnPartition(com.hazelcast.config.CacheConfig)>",
    "<com.hazelcast.client.proxy.txn.ClientTxnProxy: com.hazelcast.client.impl.protocol.ClientMessage invoke(com.hazelcast.client.impl.protocol.ClientMessage)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future submitToKey(java.lang.Object,com.hazelcast.map.EntryProcessor)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: void start()>",
    "<com.hazelcast.client.spi.impl.ClientInvocationFuture: com.hazelcast.client.impl.protocol.ClientMessage get()>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl$HeartBeat: void run()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleSetRemoveMany(java.lang.String[])>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.client.spi.impl.ClientInvocationFuture invoke(com.hazelcast.client.impl.protocol.ClientMessage,com.hazelcast.nio.serialization.Data,int)>",
    "<com.hazelcast.client.proxy.txn.xa.XATransactionProxy: void prepare()>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: java.lang.Object getSafely(java.util.concurrent.Future)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCachingProvider: com.hazelcast.core.HazelcastInstance instanceFromProperties(java.lang.ClassLoader,java.util.Properties,boolean)>",
    "<com.hazelcast.client.spi.impl.ClientListenerServiceImpl: java.lang.String startListening(com.hazelcast.client.impl.protocol.ClientMessage,java.lang.Object,com.hazelcast.client.spi.EventHandler,com.hazelcast.client.impl.ClientMessageDecoder)>",
    "<com.hazelcast.client.spi.ProxyManager: com.hazelcast.client.spi.ClientProxy getOrCreateProxy(java.lang.String,java.lang.String)>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleQOfferMany(java.lang.String[])>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleSetAddMany(java.lang.String[])>",
    "<com.hazelcast.client.nearcache.ClientHeapNearCache$2: void run()>",
    "<com.hazelcast.client.proxy.ClientExecutorServiceProxy: com.hazelcast.client.spi.impl.ClientInvocationFuture invokeOnPartitionOwner(com.hazelcast.client.impl.protocol.ClientMessage,int)>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl: com.hazelcast.client.connection.nio.ClientConnection createSocketConnection(com.hazelcast.nio.Address)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: void removeAllInternal()>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture putIfAbsentAsyncInternal(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean,boolean)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: java.lang.Object getAndReplace(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: com.hazelcast.client.config.ClientConfig build(java.lang.ClassLoader)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture replaceAsyncInternal(java.lang.Object,java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean,boolean,boolean)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: com.hazelcast.config.CacheConfig createConfig(java.lang.String,com.hazelcast.config.CacheConfig,boolean,boolean)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: java.util.Collection getDistributedObjects()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: com.hazelcast.monitor.LocalMapStats getLocalMapStats()>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl: void authenticate(com.hazelcast.client.connection.Authenticator,com.hazelcast.client.connection.nio.ClientConnection)>",
    "<com.hazelcast.client.proxy.txn.xa.XATransactionProxy: void checkTimeout()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future removeAsync(java.lang.Object)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture removeAsyncInternal(java.lang.Object,java.lang.Object,boolean,boolean,boolean)>",
    "<com.hazelcast.client.proxy.txn.TransactionProxy: void checkTimeout()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future getAsync(java.lang.Object)>",
    "<com.hazelcast.client.proxy.ClientExecutorServiceProxy: com.hazelcast.client.spi.impl.ClientInvocationFuture invokeOnTarget(com.hazelcast.client.impl.protocol.ClientMessage,com.hazelcast.nio.Address)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: void clearInternal()>",
    "<com.hazelcast.client.util.ClientPartitionCancellableDelegatingFuture: com.hazelcast.client.spi.impl.ClientInvocationFuture invokeCancelRequest(boolean)>",
    "<com.hazelcast.client.connection.nio.ClientReadHandler: void <init>(com.hazelcast.client.connection.nio.ClientConnection,com.hazelcast.nio.tcp.IOSelector,int)>"
  ],
  "3.5.2": [
    "<com.hazelcast.client.proxy.ClientMapProxy: void submitToKey(java.lang.Object,com.hazelcast.map.EntryProcessor,com.hazelcast.core.ExecutionCallback)>",
    "<com.hazelcast.client.connection.nio.ClientWriteHandler: void handle()>",
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: boolean remove(java.lang.Object,java.lang.Object)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: boolean replace(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.proxy.txn.TransactionProxy: com.hazelcast.client.impl.protocol.ClientMessage invoke(com.hazelcast.client.impl.protocol.ClientMessage)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invoke(com.hazelcast.client.impl.protocol.ClientMessage,java.lang.Object)>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleMapPutMany(java.lang.String[])>",
    "<com.hazelcast.client.spi.impl.ClientClusterServiceImpl: long getClusterTime()>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: com.hazelcast.config.CacheConfig getCacheConfigFromPartition(java.lang.String,java.lang.String)>",
    "<com.hazelcast.client.spi.impl.ClientInvocationFuture: com.hazelcast.client.impl.protocol.ClientMessage get(long,java.util.concurrent.TimeUnit)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: com.hazelcast.security.Credentials initCredentials(com.hazelcast.client.config.ClientConfig)>",
    "<com.hazelcast.client.proxy.txn.TransactionProxy: void commit()>",
    "<com.hazelcast.client.nearcache.ClientHeapNearCache: void fireEvictCache()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: com.hazelcast.client.spi.EventHandler createHandler(java.lang.Object,boolean)>",
    "<com.hazelcast.client.spi.ProxyManager: java.lang.Object instantiateClientProxy(java.lang.Class,java.lang.String,java.lang.String)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invoke(com.hazelcast.client.impl.protocol.ClientMessage,com.hazelcast.nio.Address)>",
    "<com.hazelcast.client.proxy.ClientExecutorServiceProxy: boolean isSyncComputation(boolean)>",
    "<com.hazelcast.client.nearcache.ClientHeapNearCache: void fireTtlCleanup()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleMapRemoveMany(java.lang.String[])>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: void put(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture removeAsyncInternal(java.lang.Object,java.lang.Object,boolean,boolean)>",
    "<com.hazelcast.client.spi.impl.ClientListenerServiceImpl: boolean stopListening(java.lang.String,com.hazelcast.client.spi.impl.ListenerRemoveCodec)>",
    "<com.hazelcast.client.util.ClientPartitionCancellableDelegatingFuture: boolean cancel(boolean)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: int size()>",
    "<com.hazelcast.client.spi.impl.ClusterListenerSupport: void connectToOne()>",
    "<com.hazelcast.client.spi.impl.ClientListenerServiceImpl: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl,int,int)>",
    "<com.hazelcast.client.spi.impl.ClientInvocationServiceSupport$ResponseThread: void run()>",
    "<com.hazelcast.client.nearcache.ClientHeapNearCache: void <init>(java.lang.String,com.hazelcast.client.spi.ClientContext,com.hazelcast.config.NearCacheConfig)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: boolean putIfAbsent(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleCommand(java.lang.String)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future putAsync(java.lang.Object,java.lang.Object,long,java.util.concurrent.TimeUnit)>",
    "<com.hazelcast.client.cache.impl.ClientClusterWideIterator: com.hazelcast.cache.impl.CacheKeyIteratorResult fetch()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: com.hazelcast.client.impl.protocol.ClientMessage invoke(com.hazelcast.client.impl.protocol.ClientMessage)>",
    "<com.hazelcast.client.spi.ProxyManager: void init(com.hazelcast.client.config.ClientConfig)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCachingProvider: com.hazelcast.client.cache.impl.HazelcastClientCacheManager createHazelcastCacheManager(java.net.URI,java.lang.ClassLoader,java.util.Properties)>",
    "<com.hazelcast.client.util.ClientAddressCancellableDelegatingFuture: boolean cancel(boolean)>",
    "<com.hazelcast.client.spi.ProxyManager$ClientProxyFuture: com.hazelcast.client.spi.ClientProxy get()>",
    "<com.hazelcast.client.impl.ClusterAuthenticator: void authenticate(com.hazelcast.client.connection.nio.ClientConnection)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: com.hazelcast.client.ClientExtension createClientInitializer(java.lang.ClassLoader)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: void enableStatisticManagementOnNodes(java.lang.String,boolean,boolean)>",
    "<com.hazelcast.client.impl.DefaultClientExtension: com.hazelcast.nio.serialization.SerializationService createSerializationService()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: java.lang.Object getInternal(java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: void addInvalidationListener(com.hazelcast.core.Member)>",
    "<com.hazelcast.client.nearcache.ClientHeapNearCache: void put(java.lang.Object,java.lang.Object)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: java.lang.Object getAndPut(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invoke(com.hazelcast.client.impl.protocol.ClientMessage)>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleListAddMany(java.lang.String[])>",
    "<com.hazelcast.client.proxy.txn.xa.XATransactionProxy: com.hazelcast.client.impl.protocol.ClientMessage invoke(com.hazelcast.client.impl.protocol.ClientMessage)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture replaceAndGetAsyncInternal(java.lang.Object,java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean,boolean)>",
    "<com.hazelcast.client.connection.nio.ClientReadHandler: void handle()>",
    "<com.hazelcast.client.proxy.txn.xa.XATransactionProxy: void begin()>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: void removeAllKeysInternal(java.util.Set)>",
    "<com.hazelcast.client.spi.impl.ClusterListenerSupport$ManagerAuthenticator: void authenticate(com.hazelcast.client.connection.nio.ClientConnection)>",
    "<com.hazelcast.client.spi.ClientProxy: void destroy()>",
    "<com.hazelcast.client.util.ClientAddressCancellableDelegatingFuture: com.hazelcast.client.spi.impl.ClientInvocationFuture invokeCancelRequest(boolean)>",
    "<com.hazelcast.client.proxy.txn.xa.XATransactionProxy: void commit(boolean)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: void destroy()>",
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: java.lang.Object getAndRemove(java.lang.Object)>",
    "<com.hazelcast.client.proxy.ClientMultiMapProxy: com.hazelcast.client.spi.EventHandler createHandler(java.lang.Object,boolean)>",
    "<com.hazelcast.client.proxy.ClientConditionProxy: boolean awaitUntil(java.util.Date)>",
    "<com.hazelcast.client.proxy.txn.TransactionProxy: void begin()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: com.hazelcast.client.impl.protocol.ClientMessage invoke(com.hazelcast.client.impl.protocol.ClientMessage,com.hazelcast.nio.serialization.Data)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture putIfAbsentAsyncInternal(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean)>",
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: boolean remove(java.lang.Object)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invokeInterruptibly(com.hazelcast.client.impl.protocol.ClientMessage,java.lang.Object)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: com.hazelcast.config.CacheConfig createConfigOnPartition(com.hazelcast.config.CacheConfig)>",
    "<com.hazelcast.client.proxy.txn.ClientTxnProxy: com.hazelcast.client.impl.protocol.ClientMessage invoke(com.hazelcast.client.impl.protocol.ClientMessage)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture getAndRemoveAsyncInternal(java.lang.Object,boolean)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future submitToKey(java.lang.Object,com.hazelcast.map.EntryProcessor)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: void start()>",
    "<com.hazelcast.client.spi.impl.ClientInvocationFuture: com.hazelcast.client.impl.protocol.ClientMessage get()>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl$HeartBeat: void run()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleSetRemoveMany(java.lang.String[])>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.client.spi.impl.ClientInvocationFuture invoke(com.hazelcast.client.impl.protocol.ClientMessage,com.hazelcast.nio.serialization.Data,int)>",
    "<com.hazelcast.client.proxy.txn.xa.XATransactionProxy: void prepare()>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: java.lang.Object getSafely(java.util.concurrent.Future)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCachingProvider: com.hazelcast.core.HazelcastInstance instanceFromProperties(java.lang.ClassLoader,java.util.Properties,boolean)>",
    "<com.hazelcast.client.spi.impl.ClientListenerServiceImpl: java.lang.String startListening(com.hazelcast.client.impl.protocol.ClientMessage,java.lang.Object,com.hazelcast.client.spi.EventHandler,com.hazelcast.client.impl.ClientMessageDecoder)>",
    "<com.hazelcast.client.spi.ProxyManager: com.hazelcast.client.spi.ClientProxy getOrCreateProxy(java.lang.String,java.lang.String)>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleQOfferMany(java.lang.String[])>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleSetAddMany(java.lang.String[])>",
    "<com.hazelcast.client.nearcache.ClientHeapNearCache$2: void run()>",
    "<com.hazelcast.client.proxy.ClientExecutorServiceProxy: com.hazelcast.client.spi.impl.ClientInvocationFuture invokeOnPartitionOwner(com.hazelcast.client.impl.protocol.ClientMessage,int)>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl: com.hazelcast.client.connection.nio.ClientConnection createSocketConnection(com.hazelcast.nio.Address)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: void removeAllInternal()>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture putAsyncInternal(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean,boolean)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: java.lang.Object getAndReplace(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: com.hazelcast.client.config.ClientConfig build(java.lang.ClassLoader)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: com.hazelcast.config.CacheConfig createConfig(java.lang.String,com.hazelcast.config.CacheConfig,boolean,boolean)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: java.util.Collection getDistributedObjects()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: com.hazelcast.monitor.LocalMapStats getLocalMapStats()>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl: void authenticate(com.hazelcast.client.connection.Authenticator,com.hazelcast.client.connection.nio.ClientConnection)>",
    "<com.hazelcast.client.proxy.txn.xa.XATransactionProxy: void checkTimeout()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future removeAsync(java.lang.Object)>",
    "<com.hazelcast.client.proxy.txn.TransactionProxy: void checkTimeout()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future getAsync(java.lang.Object)>",
    "<com.hazelcast.client.proxy.ClientExecutorServiceProxy: com.hazelcast.client.spi.impl.ClientInvocationFuture invokeOnTarget(com.hazelcast.client.impl.protocol.ClientMessage,com.hazelcast.nio.Address)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: void clearInternal()>",
    "<com.hazelcast.client.util.ClientPartitionCancellableDelegatingFuture: com.hazelcast.client.spi.impl.ClientInvocationFuture invokeCancelRequest(boolean)>",
    "<com.hazelcast.client.connection.nio.ClientReadHandler: void <init>(com.hazelcast.client.connection.nio.ClientConnection,com.hazelcast.nio.tcp.IOSelector,int)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture replaceAsyncInternal(java.lang.Object,java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean,boolean)>"
  ],
  "3.5": [
    "<com.hazelcast.client.proxy.ClientMapProxy: void submitToKey(java.lang.Object,com.hazelcast.map.EntryProcessor,com.hazelcast.core.ExecutionCallback)>",
    "<com.hazelcast.client.connection.nio.ClientWriteHandler: void handle()>",
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: boolean remove(java.lang.Object,java.lang.Object)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: boolean replace(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.proxy.txn.TransactionProxy: com.hazelcast.client.impl.protocol.ClientMessage invoke(com.hazelcast.client.impl.protocol.ClientMessage)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invoke(com.hazelcast.client.impl.protocol.ClientMessage,java.lang.Object)>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleMapPutMany(java.lang.String[])>",
    "<com.hazelcast.client.spi.impl.ClientClusterServiceImpl: long getClusterTime()>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: com.hazelcast.config.CacheConfig getCacheConfigFromPartition(java.lang.String,java.lang.String)>",
    "<com.hazelcast.client.spi.impl.ClientInvocationFuture: com.hazelcast.client.impl.protocol.ClientMessage get(long,java.util.concurrent.TimeUnit)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: com.hazelcast.security.Credentials initCredentials(com.hazelcast.client.config.ClientConfig)>",
    "<com.hazelcast.client.proxy.txn.TransactionProxy: void commit()>",
    "<com.hazelcast.client.util.ClientCancellableDelegatingFuture: com.hazelcast.client.spi.impl.ClientInvocationFuture invokeCancelRequest(boolean)>",
    "<com.hazelcast.client.nearcache.ClientHeapNearCache: void fireEvictCache()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: com.hazelcast.client.spi.EventHandler createHandler(java.lang.Object,boolean)>",
    "<com.hazelcast.client.spi.ProxyManager: java.lang.Object instantiateClientProxy(java.lang.Class,java.lang.String,java.lang.String)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invoke(com.hazelcast.client.impl.protocol.ClientMessage,com.hazelcast.nio.Address)>",
    "<com.hazelcast.client.proxy.ClientExecutorServiceProxy: boolean isSyncComputation(boolean)>",
    "<com.hazelcast.client.nearcache.ClientHeapNearCache: void fireTtlCleanup()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleMapRemoveMany(java.lang.String[])>",
    "<com.hazelcast.client.util.ClientCancellableDelegatingFuture: boolean cancel(boolean)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: void put(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture removeAsyncInternal(java.lang.Object,java.lang.Object,boolean,boolean)>",
    "<com.hazelcast.client.spi.impl.ClientListenerServiceImpl: boolean stopListening(com.hazelcast.client.impl.protocol.ClientMessage,java.lang.String)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: int size()>",
    "<com.hazelcast.client.spi.impl.ClusterListenerSupport: void connectToOne()>",
    "<com.hazelcast.client.spi.impl.ClientListenerServiceImpl: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl,int,int)>",
    "<com.hazelcast.client.spi.impl.ClientInvocationServiceSupport$ResponseThread: void run()>",
    "<com.hazelcast.client.nearcache.ClientHeapNearCache: void <init>(java.lang.String,com.hazelcast.client.spi.ClientContext,com.hazelcast.config.NearCacheConfig)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: boolean putIfAbsent(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleCommand(java.lang.String)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: void removeInvalidationListener(com.hazelcast.core.Member,boolean)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future putAsync(java.lang.Object,java.lang.Object,long,java.util.concurrent.TimeUnit)>",
    "<com.hazelcast.client.cache.impl.ClientClusterWideIterator: com.hazelcast.cache.impl.CacheKeyIteratorResult fetch()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: com.hazelcast.client.impl.protocol.ClientMessage invoke(com.hazelcast.client.impl.protocol.ClientMessage)>",
    "<com.hazelcast.client.spi.ProxyManager: void init(com.hazelcast.client.config.ClientConfig)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCachingProvider: com.hazelcast.client.cache.impl.HazelcastClientCacheManager createHazelcastCacheManager(java.net.URI,java.lang.ClassLoader,java.util.Properties)>",
    "<com.hazelcast.client.spi.ProxyManager$ClientProxyFuture: com.hazelcast.client.spi.ClientProxy get()>",
    "<com.hazelcast.client.impl.ClusterAuthenticator: void authenticate(com.hazelcast.client.connection.nio.ClientConnection)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: com.hazelcast.client.ClientExtension createClientInitializer(java.lang.ClassLoader)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: void enableStatisticManagementOnNodes(java.lang.String,boolean,boolean)>",
    "<com.hazelcast.client.spi.impl.ClientListenerServiceImpl: java.lang.String startListening(com.hazelcast.client.impl.protocol.ClientMessage,java.lang.Object,com.hazelcast.client.spi.EventHandler)>",
    "<com.hazelcast.client.impl.DefaultClientExtension: com.hazelcast.nio.serialization.SerializationService createSerializationService()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: java.lang.Object getInternal(java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: void addInvalidationListener(com.hazelcast.core.Member)>",
    "<com.hazelcast.client.nearcache.ClientHeapNearCache: void put(java.lang.Object,java.lang.Object)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: java.lang.Object getAndPut(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invoke(com.hazelcast.client.impl.protocol.ClientMessage)>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleListAddMany(java.lang.String[])>",
    "<com.hazelcast.client.proxy.txn.xa.XATransactionProxy: com.hazelcast.client.impl.protocol.ClientMessage invoke(com.hazelcast.client.impl.protocol.ClientMessage)>",
    "<com.hazelcast.client.connection.nio.ClientReadHandler: void handle()>",
    "<com.hazelcast.client.proxy.txn.xa.XATransactionProxy: void begin()>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: void removeAllKeysInternal(java.util.Set)>",
    "<com.hazelcast.client.spi.impl.ClusterListenerSupport$ManagerAuthenticator: void authenticate(com.hazelcast.client.connection.nio.ClientConnection)>",
    "<com.hazelcast.client.spi.ClientProxy: void destroy()>",
    "<com.hazelcast.client.proxy.txn.xa.XATransactionProxy: void commit(boolean)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: void destroy()>",
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: java.lang.Object getAndRemove(java.lang.Object)>",
    "<com.hazelcast.client.proxy.ClientMultiMapProxy: com.hazelcast.client.spi.EventHandler createHandler(java.lang.Object,boolean)>",
    "<com.hazelcast.client.proxy.ClientConditionProxy: boolean awaitUntil(java.util.Date)>",
    "<com.hazelcast.client.proxy.txn.TransactionProxy: void begin()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: com.hazelcast.client.impl.protocol.ClientMessage invoke(com.hazelcast.client.impl.protocol.ClientMessage,com.hazelcast.nio.serialization.Data)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture putIfAbsentAsyncInternal(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean)>",
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: boolean remove(java.lang.Object)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invokeInterruptibly(com.hazelcast.client.impl.protocol.ClientMessage,java.lang.Object)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: com.hazelcast.config.CacheConfig createConfigOnPartition(com.hazelcast.config.CacheConfig)>",
    "<com.hazelcast.client.proxy.txn.ClientTxnProxy: com.hazelcast.client.impl.protocol.ClientMessage invoke(com.hazelcast.client.impl.protocol.ClientMessage)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture getAndRemoveAsyncInternal(java.lang.Object,boolean)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future submitToKey(java.lang.Object,com.hazelcast.map.EntryProcessor)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: void start()>",
    "<com.hazelcast.client.spi.impl.ClientInvocationFuture: com.hazelcast.client.impl.protocol.ClientMessage get()>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl$HeartBeat: void run()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleSetRemoveMany(java.lang.String[])>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.client.spi.impl.ClientInvocationFuture invoke(com.hazelcast.client.impl.protocol.ClientMessage,com.hazelcast.nio.serialization.Data,int)>",
    "<com.hazelcast.client.proxy.txn.xa.XATransactionProxy: void prepare()>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: java.lang.Object getSafely(java.util.concurrent.Future)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCachingProvider: com.hazelcast.core.HazelcastInstance instanceFromProperties(java.lang.ClassLoader,java.util.Properties,boolean)>",
    "<com.hazelcast.client.spi.ProxyManager: com.hazelcast.client.spi.ClientProxy getOrCreateProxy(java.lang.String,java.lang.String)>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleQOfferMany(java.lang.String[])>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleSetAddMany(java.lang.String[])>",
    "<com.hazelcast.client.nearcache.ClientHeapNearCache$2: void run()>",
    "<com.hazelcast.client.proxy.ClientExecutorServiceProxy: com.hazelcast.client.spi.impl.ClientInvocationFuture invokeOnPartitionOwner(com.hazelcast.client.impl.protocol.ClientMessage,int)>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl: com.hazelcast.client.connection.nio.ClientConnection createSocketConnection(com.hazelcast.nio.Address)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: void removeAllInternal()>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture putAsyncInternal(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean,boolean)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: java.lang.Object getAndReplace(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: com.hazelcast.client.config.ClientConfig build(java.lang.ClassLoader)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture replaceAsyncInternal(java.lang.Object,java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean,boolean,boolean)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: com.hazelcast.config.CacheConfig createConfig(java.lang.String,com.hazelcast.config.CacheConfig,boolean,boolean)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: java.util.Collection getDistributedObjects()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: com.hazelcast.monitor.LocalMapStats getLocalMapStats()>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl: void authenticate(com.hazelcast.client.connection.Authenticator,com.hazelcast.client.connection.nio.ClientConnection)>",
    "<com.hazelcast.client.proxy.txn.xa.XATransactionProxy: void checkTimeout()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future removeAsync(java.lang.Object)>",
    "<com.hazelcast.client.proxy.txn.TransactionProxy: void checkTimeout()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future getAsync(java.lang.Object)>",
    "<com.hazelcast.client.proxy.ClientExecutorServiceProxy: com.hazelcast.client.spi.impl.ClientInvocationFuture invokeOnTarget(com.hazelcast.client.impl.protocol.ClientMessage,com.hazelcast.nio.Address)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: void clearInternal()>",
    "<com.hazelcast.client.connection.nio.ClientReadHandler: void <init>(com.hazelcast.client.connection.nio.ClientConnection,com.hazelcast.nio.tcp.IOSelector,int)>"
  ],
  "3.5.5": [
    "<com.hazelcast.client.proxy.ClientMapProxy: void submitToKey(java.lang.Object,com.hazelcast.map.EntryProcessor,com.hazelcast.core.ExecutionCallback)>",
    "<com.hazelcast.client.connection.nio.ClientWriteHandler: void handle()>",
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: boolean remove(java.lang.Object,java.lang.Object)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: boolean replace(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.proxy.txn.TransactionProxy: com.hazelcast.client.impl.protocol.ClientMessage invoke(com.hazelcast.client.impl.protocol.ClientMessage)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invoke(com.hazelcast.client.impl.protocol.ClientMessage,java.lang.Object)>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleMapPutMany(java.lang.String[])>",
    "<com.hazelcast.client.spi.impl.ClientClusterServiceImpl: long getClusterTime()>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: com.hazelcast.config.CacheConfig getCacheConfigFromPartition(java.lang.String,java.lang.String)>",
    "<com.hazelcast.client.spi.impl.ClientInvocationFuture: com.hazelcast.client.impl.protocol.ClientMessage get(long,java.util.concurrent.TimeUnit)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: com.hazelcast.security.Credentials initCredentials(com.hazelcast.client.config.ClientConfig)>",
    "<com.hazelcast.client.proxy.txn.TransactionProxy: void commit()>",
    "<com.hazelcast.client.nearcache.ClientHeapNearCache: void fireEvictCache()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: com.hazelcast.client.spi.EventHandler createHandler(java.lang.Object,boolean)>",
    "<com.hazelcast.client.spi.ProxyManager: java.lang.Object instantiateClientProxy(java.lang.Class,java.lang.String,java.lang.String)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture putAsyncInternal(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean,boolean,boolean)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invoke(com.hazelcast.client.impl.protocol.ClientMessage,com.hazelcast.nio.Address)>",
    "<com.hazelcast.client.proxy.ClientExecutorServiceProxy: boolean isSyncComputation(boolean)>",
    "<com.hazelcast.client.nearcache.ClientHeapNearCache: void fireTtlCleanup()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleMapRemoveMany(java.lang.String[])>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: void put(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture getAndRemoveAsyncInternal(java.lang.Object,boolean,boolean)>",
    "<com.hazelcast.client.spi.impl.ClientListenerServiceImpl: boolean stopListening(java.lang.String,com.hazelcast.client.spi.impl.ListenerRemoveCodec)>",
    "<com.hazelcast.client.util.ClientPartitionCancellableDelegatingFuture: boolean cancel(boolean)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: int size()>",
    "<com.hazelcast.client.spi.impl.ClusterListenerSupport: void connectToOne()>",
    "<com.hazelcast.client.spi.impl.ClientListenerServiceImpl: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl,int,int)>",
    "<com.hazelcast.client.spi.impl.ClientInvocationServiceSupport$ResponseThread: void run()>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture replaceAndGetAsyncInternal(java.lang.Object,java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean,boolean,boolean)>",
    "<com.hazelcast.client.nearcache.ClientHeapNearCache: void <init>(java.lang.String,com.hazelcast.client.spi.ClientContext,com.hazelcast.config.NearCacheConfig)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: boolean putIfAbsent(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleCommand(java.lang.String)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future putAsync(java.lang.Object,java.lang.Object,long,java.util.concurrent.TimeUnit)>",
    "<com.hazelcast.client.cache.impl.ClientClusterWideIterator: com.hazelcast.cache.impl.CacheKeyIteratorResult fetch()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: com.hazelcast.client.impl.protocol.ClientMessage invoke(com.hazelcast.client.impl.protocol.ClientMessage)>",
    "<com.hazelcast.client.spi.ProxyManager: void init(com.hazelcast.client.config.ClientConfig)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCachingProvider: com.hazelcast.client.cache.impl.HazelcastClientCacheManager createHazelcastCacheManager(java.net.URI,java.lang.ClassLoader,java.util.Properties)>",
    "<com.hazelcast.client.util.ClientAddressCancellableDelegatingFuture: boolean cancel(boolean)>",
    "<com.hazelcast.client.spi.ProxyManager$ClientProxyFuture: com.hazelcast.client.spi.ClientProxy get()>",
    "<com.hazelcast.client.impl.ClusterAuthenticator: void authenticate(com.hazelcast.client.connection.nio.ClientConnection)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: com.hazelcast.client.ClientExtension createClientInitializer(java.lang.ClassLoader)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: void enableStatisticManagementOnNodes(java.lang.String,boolean,boolean)>",
    "<com.hazelcast.client.impl.DefaultClientExtension: com.hazelcast.nio.serialization.SerializationService createSerializationService()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: java.lang.Object getInternal(java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: void addInvalidationListener(com.hazelcast.core.Member)>",
    "<com.hazelcast.client.nearcache.ClientHeapNearCache: void put(java.lang.Object,java.lang.Object)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: java.lang.Object getAndPut(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invoke(com.hazelcast.client.impl.protocol.ClientMessage)>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleListAddMany(java.lang.String[])>",
    "<com.hazelcast.client.proxy.txn.xa.XATransactionProxy: com.hazelcast.client.impl.protocol.ClientMessage invoke(com.hazelcast.client.impl.protocol.ClientMessage)>",
    "<com.hazelcast.client.connection.nio.ClientReadHandler: void handle()>",
    "<com.hazelcast.client.proxy.txn.xa.XATransactionProxy: void begin()>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: void removeAllKeysInternal(java.util.Set)>",
    "<com.hazelcast.client.spi.impl.ClusterListenerSupport$ManagerAuthenticator: void authenticate(com.hazelcast.client.connection.nio.ClientConnection)>",
    "<com.hazelcast.client.spi.ClientProxy: void destroy()>",
    "<com.hazelcast.client.proxy.txn.xa.XATransactionProxy: void commit(boolean)>",
    "<com.hazelcast.client.util.ClientPartitionCancellableDelegatingFuture: boolean invokeCancelRequest(boolean)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: void destroy()>",
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: java.lang.Object getAndRemove(java.lang.Object)>",
    "<com.hazelcast.client.proxy.ClientMultiMapProxy: com.hazelcast.client.spi.EventHandler createHandler(java.lang.Object,boolean)>",
    "<com.hazelcast.client.proxy.ClientConditionProxy: boolean awaitUntil(java.util.Date)>",
    "<com.hazelcast.client.proxy.txn.TransactionProxy: void begin()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: com.hazelcast.client.impl.protocol.ClientMessage invoke(com.hazelcast.client.impl.protocol.ClientMessage,com.hazelcast.nio.serialization.Data)>",
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: boolean remove(java.lang.Object)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invokeInterruptibly(com.hazelcast.client.impl.protocol.ClientMessage,java.lang.Object)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: com.hazelcast.config.CacheConfig createConfigOnPartition(com.hazelcast.config.CacheConfig)>",
    "<com.hazelcast.client.proxy.txn.ClientTxnProxy: com.hazelcast.client.impl.protocol.ClientMessage invoke(com.hazelcast.client.impl.protocol.ClientMessage)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future submitToKey(java.lang.Object,com.hazelcast.map.EntryProcessor)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: void start()>",
    "<com.hazelcast.client.spi.impl.ClientInvocationFuture: com.hazelcast.client.impl.protocol.ClientMessage get()>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl$HeartBeat: void run()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleSetRemoveMany(java.lang.String[])>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.client.spi.impl.ClientInvocationFuture invoke(com.hazelcast.client.impl.protocol.ClientMessage,com.hazelcast.nio.serialization.Data,int)>",
    "<com.hazelcast.client.proxy.txn.xa.XATransactionProxy: void prepare()>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: java.lang.Object getSafely(java.util.concurrent.Future)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCachingProvider: com.hazelcast.core.HazelcastInstance instanceFromProperties(java.lang.ClassLoader,java.util.Properties,boolean)>",
    "<com.hazelcast.client.spi.impl.ClientListenerServiceImpl: java.lang.String startListening(com.hazelcast.client.impl.protocol.ClientMessage,java.lang.Object,com.hazelcast.client.spi.EventHandler,com.hazelcast.client.impl.ClientMessageDecoder)>",
    "<com.hazelcast.client.spi.ProxyManager: com.hazelcast.client.spi.ClientProxy getOrCreateProxy(java.lang.String,java.lang.String)>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleQOfferMany(java.lang.String[])>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleSetAddMany(java.lang.String[])>",
    "<com.hazelcast.client.nearcache.ClientHeapNearCache$2: void run()>",
    "<com.hazelcast.client.proxy.ClientExecutorServiceProxy: com.hazelcast.client.spi.impl.ClientInvocationFuture invokeOnPartitionOwner(com.hazelcast.client.impl.protocol.ClientMessage,int)>",
    "<com.hazelcast.client.util.ClientAddressCancellableDelegatingFuture: boolean invokeCancelRequest(boolean)>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl: com.hazelcast.client.connection.nio.ClientConnection createSocketConnection(com.hazelcast.nio.Address)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: void removeAllInternal()>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture putIfAbsentAsyncInternal(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean,boolean)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: java.lang.Object getAndReplace(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: com.hazelcast.client.config.ClientConfig build(java.lang.ClassLoader)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture replaceAsyncInternal(java.lang.Object,java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean,boolean,boolean)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: com.hazelcast.config.CacheConfig createConfig(java.lang.String,com.hazelcast.config.CacheConfig,boolean,boolean)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: java.util.Collection getDistributedObjects()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: com.hazelcast.monitor.LocalMapStats getLocalMapStats()>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl: void authenticate(com.hazelcast.client.connection.Authenticator,com.hazelcast.client.connection.nio.ClientConnection)>",
    "<com.hazelcast.client.proxy.txn.xa.XATransactionProxy: void checkTimeout()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future removeAsync(java.lang.Object)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture removeAsyncInternal(java.lang.Object,java.lang.Object,boolean,boolean,boolean)>",
    "<com.hazelcast.client.proxy.txn.TransactionProxy: void checkTimeout()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future getAsync(java.lang.Object)>",
    "<com.hazelcast.client.proxy.ClientExecutorServiceProxy: com.hazelcast.client.spi.impl.ClientInvocationFuture invokeOnTarget(com.hazelcast.client.impl.protocol.ClientMessage,com.hazelcast.nio.Address)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: void clearInternal()>",
    "<com.hazelcast.client.connection.nio.ClientReadHandler: void <init>(com.hazelcast.client.connection.nio.ClientConnection,com.hazelcast.nio.tcp.IOSelector,int)>"
  ]
}