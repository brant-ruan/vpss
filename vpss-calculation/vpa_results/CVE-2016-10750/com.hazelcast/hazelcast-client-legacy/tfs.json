{
  "3.6.2": [
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: boolean containsKey(java.lang.Object)>",
    "<com.hazelcast.client.txn.proxy.xa.XATransactionProxy: void checkTimeout()>",
    "<com.hazelcast.client.map.impl.nearcache.ClientHeapNearCache: void put(java.lang.Object,java.lang.Object)>",
    "<com.hazelcast.client.connection.nio.ClientWriteHandler: void handle()>",
    "<com.hazelcast.client.map.impl.nearcache.ClientHeapNearCache: void <init>(java.lang.String,com.hazelcast.client.spi.ClientContext,com.hazelcast.config.NearCacheConfig)>",
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: boolean remove(java.lang.Object,java.lang.Object)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: boolean replace(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.impl.LifecycleServiceImpl: com.hazelcast.logging.ILogger getLogger()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: org.w3c.dom.Document parse(java.io.InputStream)>",
    "<com.hazelcast.client.txn.proxy.xa.XATransactionProxy: void commit(boolean)>",
    "<com.hazelcast.client.spi.impl.ClientClusterServiceImpl: long getClusterTime()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleMapPutMany(java.lang.String[])>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: com.hazelcast.config.CacheConfig getCacheConfigFromPartition(java.lang.String,java.lang.String)>",
    "<com.hazelcast.client.txn.proxy.xa.XATransactionProxy: void prepare()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: void putAll(java.util.Map,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future removeAsyncInternal(com.hazelcast.nio.serialization.Data)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: void putAllInternal(java.util.List,com.hazelcast.map.impl.MapEntries[])>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: com.hazelcast.security.Credentials initCredentials(com.hazelcast.client.config.ClientConfig)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: void handleFailureOnCompletionListener(javax.cache.integration.CompletionListener,java.lang.Throwable)>",
    "<com.hazelcast.client.spi.impl.ClientInvocationServiceSupport: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl)>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl: void <clinit>()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest)>",
    "<com.hazelcast.client.spi.ProxyManager: java.lang.Object instantiateClientProxy(java.lang.Class,java.lang.String,java.lang.String)>",
    "<com.hazelcast.client.spi.impl.listener.ClientListenerServiceImpl: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl,int,int)>",
    "<com.hazelcast.client.util.ClientCancellableDelegatingFuture: java.lang.Boolean invokeCancelRequest(boolean)>",
    "<com.hazelcast.client.proxy.ClientExecutorServiceProxy: boolean isSyncComputation(boolean)>",
    "<com.hazelcast.client.map.impl.nearcache.ClientHeapNearCache: void fireTtlCleanup()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleMapRemoveMany(java.lang.String[])>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: void waitResponseFromAllPartitionsForPutAll(java.util.List,long)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: java.lang.Object putInternal(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean,boolean,boolean)>",
    "<com.hazelcast.client.util.ClientCancellableDelegatingFuture: boolean cancel(boolean)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: com.hazelcast.spi.discovery.integration.DiscoveryService initDiscoveryService(com.hazelcast.client.config.ClientConfig)>",
    "<com.hazelcast.client.proxy.ClientReliableTopicProxy: void publish(java.lang.Object)>",
    "<com.hazelcast.client.connection.nio.ClientReadHandler: void <init>(com.hazelcast.client.connection.nio.ClientConnection,com.hazelcast.nio.tcp.nonblocking.NonBlockingIOThread,int)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: void removeAllInternal(java.util.Set)>",
    "<com.hazelcast.client.connection.nio.ClientConnection: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl,int)>",
    "<com.hazelcast.client.txn.TransactionProxy: void commit()>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture replaceAsyncInternal(java.lang.Object,java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean,boolean,boolean,boolean)>",
    "<com.hazelcast.client.config.QueryCacheConfigBuilderHelper: void <init>()>",
    "<com.hazelcast.client.spi.impl.AwsAddressProvider: void <clinit>()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: int size()>",
    "<com.hazelcast.client.spi.impl.ClientMembershipListener: void <clinit>()>",
    "<com.hazelcast.client.spi.impl.ClusterListenerSupport: void connectToOne()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.lang.String addEntryListenerInternal(java.lang.Object,com.hazelcast.query.Predicate,boolean,java.lang.Object)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future submitToKeyInternal(com.hazelcast.nio.serialization.Data,com.hazelcast.map.EntryProcessor)>",
    "<com.hazelcast.client.connection.nio.AbstractClientSelectionHandler: void <init>(com.hazelcast.client.connection.nio.ClientConnection,com.hazelcast.nio.tcp.nonblocking.NonBlockingIOThread)>",
    "<com.hazelcast.client.spi.impl.ClientInvocationServiceSupport$ResponseThread: void run()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: void <init>(com.hazelcast.config.CacheConfig,com.hazelcast.client.spi.ClientContext)>",
    "<com.hazelcast.client.txn.proxy.xa.XAResourceProxy: void <clinit>()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleCommand(java.lang.String)>",
    "<com.hazelcast.client.cache.impl.ClientClusterWideIterator: com.hazelcast.cache.impl.CacheKeyIteratorResult fetch()>",
    "<com.hazelcast.client.txn.TransactionProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest,java.lang.Object)>",
    "<com.hazelcast.client.spi.ProxyManager: void init(com.hazelcast.client.config.ClientConfig)>",
    "<com.hazelcast.client.proxy.ClientReplicatedMapProxy: void addNearCacheInvalidateListener()>",
    "<com.hazelcast.client.spi.impl.AwsAddressTranslator: void <clinit>()>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCachingProvider: com.hazelcast.client.cache.impl.HazelcastClientCacheManager createHazelcastCacheManager(java.net.URI,java.lang.ClassLoader,java.util.Properties)>",
    "<com.hazelcast.client.proxy.ClientMapReduceProxy$ClientCompletableFuture: void <init>(com.hazelcast.client.proxy.ClientMapReduceProxy,java.lang.String)>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: void <init>()>",
    "<com.hazelcast.client.spi.impl.ClientExecutionServiceImpl: com.hazelcast.core.ICompletableFuture submitInternal(java.lang.Runnable)>",
    "<com.hazelcast.client.spi.ProxyManager$ClientProxyFuture: com.hazelcast.client.spi.ClientProxy get()>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCachingProvider: com.hazelcast.core.HazelcastInstance getOrCreateInstance(java.lang.ClassLoader,java.util.Properties,boolean)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future putAsyncInternal(long,java.util.concurrent.TimeUnit,com.hazelcast.nio.serialization.Data,com.hazelcast.nio.serialization.Data)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: java.lang.Object putIfAbsentInternal(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean,boolean)>",
    "<com.hazelcast.client.impl.ClusterAuthenticator: void authenticate(com.hazelcast.client.connection.nio.ClientConnection)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: com.hazelcast.client.ClientExtension createClientInitializer(java.lang.ClassLoader)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: void enableStatisticManagementOnNodes(java.lang.String,boolean,boolean)>",
    "<com.hazelcast.client.proxy.NearCachedClientMapProxy: void addNearCacheInvalidateListener(com.hazelcast.client.spi.EventHandler)>",
    "<com.hazelcast.client.map.impl.nearcache.ClientHeapNearCache: void fireEvictCache()>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest)>",
    "<com.hazelcast.client.spi.impl.ClientExecutionServiceImpl: com.hazelcast.core.ICompletableFuture submit(java.util.concurrent.Callable)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: java.lang.Object getInternal(java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: void submitToKeyInternal(com.hazelcast.nio.serialization.Data,com.hazelcast.map.EntryProcessor,com.hazelcast.core.ExecutionCallback)>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleListAddMany(java.lang.String[])>",
    "<com.hazelcast.client.impl.DefaultClientExtension: void <clinit>()>",
    "<com.hazelcast.client.connection.nio.ClientReadHandler: void handle()>",
    "<com.hazelcast.client.util.AddressHelper: java.util.Collection getPossibleSocketAddresses(int,java.lang.String,int)>",
    "<com.hazelcast.client.spi.impl.ClusterListenerSupport$ManagerAuthenticator: void authenticate(com.hazelcast.client.connection.nio.ClientConnection)>",
    "<com.hazelcast.client.spi.ClientProxy: void destroy()>",
    "<com.hazelcast.client.proxy.ClientExecutorServiceProxy: com.hazelcast.core.ICompletableFuture invokeOnTarget(com.hazelcast.client.impl.client.TargetClientRequest,com.hazelcast.nio.Address)>",
    "<com.hazelcast.client.impl.LifecycleServiceImpl: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl)>",
    "<com.hazelcast.client.spi.impl.ClientExecutionServiceImpl: com.hazelcast.core.ICompletableFuture submit(java.lang.Runnable)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: void destroy()>",
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: java.lang.Object getAndRemove(java.lang.Object)>",
    "<com.hazelcast.client.config.ClientConfig: void <clinit>()>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture removeAsyncInternal(java.lang.Object,java.lang.Object,boolean,boolean,boolean,boolean)>",
    "<com.hazelcast.client.impl.DefaultClientConnectionManagerFactory: void <clinit>()>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: void <clinit>()>",
    "<com.hazelcast.client.proxy.ClientConditionProxy: boolean awaitUntil(java.util.Date)>",
    "<com.hazelcast.client.txn.TransactionProxy: void begin()>",
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: boolean remove(java.lang.Object)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: com.hazelcast.config.CacheConfig createConfigOnPartition(com.hazelcast.config.CacheConfig)>",
    "<com.hazelcast.client.spi.impl.ClientInvocation: void <clinit>()>",
    "<com.hazelcast.client.spi.impl.ClientExecutionServiceImpl: void <clinit>()>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: void start()>",
    "<com.hazelcast.client.impl.DefaultClientExtension: com.hazelcast.internal.serialization.SerializationService createSerializationService()>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: void <init>(java.net.URL)>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl$HeartBeat: void run()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleSetRemoveMany(java.lang.String[])>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.client.spi.impl.ClientInvocationFuture invoke(com.hazelcast.client.impl.client.ClientRequest,int,boolean)>",
    "<com.hazelcast.client.spi.impl.ClientPartitionServiceImpl: void <clinit>()>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: java.lang.Object getSafely(java.util.concurrent.Future)>",
    "<com.hazelcast.client.spi.ProxyManager: com.hazelcast.client.spi.ClientProxy getOrCreateProxy(java.lang.String,java.lang.String)>",
    "<com.hazelcast.client.config.XmlClientConfigLocator: void <clinit>()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleQOfferMany(java.lang.String[])>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleSetAddMany(java.lang.String[])>",
    "<com.hazelcast.client.connection.nio.ClientConnection: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl,com.hazelcast.nio.tcp.nonblocking.NonBlockingIOThread,com.hazelcast.nio.tcp.nonblocking.NonBlockingIOThread,int,com.hazelcast.nio.tcp.SocketChannelWrapper)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invokeInterruptibly(com.hazelcast.client.impl.client.ClientRequest,java.lang.Object)>",
    "<com.hazelcast.client.spi.impl.ClientInvocationFuture: void <clinit>()>",
    "<com.hazelcast.client.proxy.ClientExecutorServiceProxy: com.hazelcast.core.ICompletableFuture invokeOnPartitionOwner(com.hazelcast.client.impl.client.ClientRequest,int)>",
    "<com.hazelcast.client.proxy.ClientReliableTopicProxy: void <init>(java.lang.String,com.hazelcast.client.impl.HazelcastClientInstanceImpl)>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl: com.hazelcast.client.connection.nio.ClientConnection createSocketConnection(com.hazelcast.nio.Address)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: java.lang.Object getAndReplace(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest,com.hazelcast.nio.Address)>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: com.hazelcast.client.config.ClientConfig build(java.lang.ClassLoader)>",
    "<com.hazelcast.client.spi.impl.ClientInvocationFuture: java.lang.Object get(long,java.util.concurrent.TimeUnit)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: com.hazelcast.config.CacheConfig createConfig(java.lang.String,com.hazelcast.config.CacheConfig,boolean,boolean)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invokeOnPartition(com.hazelcast.client.impl.client.ClientRequest,int)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: java.util.Collection getDistributedObjects()>",
    "<com.hazelcast.client.spi.impl.ClusterListenerSupport: void <clinit>()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: com.hazelcast.monitor.LocalMapStats getLocalMapStats()>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl: void authenticate(com.hazelcast.client.connection.Authenticator,com.hazelcast.client.connection.nio.ClientConnection)>",
    "<com.hazelcast.client.map.impl.nearcache.ClientHeapNearCache$2: void run()>",
    "<com.hazelcast.client.spi.impl.discovery.DiscoveryAddressProvider: void <clinit>()>",
    "<com.hazelcast.client.txn.proxy.xa.XATransactionProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: void clearInternal()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: com.hazelcast.core.ICompletableFuture getAsyncInternal(com.hazelcast.nio.serialization.Data)>",
    "<com.hazelcast.client.txn.proxy.ClientTxnProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest)>",
    "<com.hazelcast.client.spi.impl.ClientClusterServiceImpl: void <clinit>()>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl: void initializeSelectors(com.hazelcast.client.impl.HazelcastClientInstanceImpl)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.List getAllInternal(java.util.Map,java.util.Map)>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: void <clinit>()>",
    "<com.hazelcast.client.spi.impl.ClientInvocationFuture: java.lang.Object get()>",
    "<com.hazelcast.client.txn.proxy.xa.XATransactionProxy: void begin()>",
    "<com.hazelcast.client.txn.TransactionProxy: void checkTimeout()>"
  ],
  "3.6.7": [
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: boolean containsKey(java.lang.Object)>",
    "<com.hazelcast.client.txn.proxy.xa.XATransactionProxy: void checkTimeout()>",
    "<com.hazelcast.client.map.impl.nearcache.ClientHeapNearCache: void put(java.lang.Object,java.lang.Object)>",
    "<com.hazelcast.client.connection.nio.ClientWriteHandler: void handle()>",
    "<com.hazelcast.client.map.impl.nearcache.ClientHeapNearCache: void <init>(java.lang.String,com.hazelcast.client.spi.ClientContext,com.hazelcast.config.NearCacheConfig)>",
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: boolean remove(java.lang.Object,java.lang.Object)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: boolean replace(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.impl.LifecycleServiceImpl: com.hazelcast.logging.ILogger getLogger()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: org.w3c.dom.Document parse(java.io.InputStream)>",
    "<com.hazelcast.client.txn.proxy.xa.XATransactionProxy: void commit(boolean)>",
    "<com.hazelcast.client.spi.impl.ClientClusterServiceImpl: long getClusterTime()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleMapPutMany(java.lang.String[])>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: com.hazelcast.config.CacheConfig getCacheConfigFromPartition(java.lang.String,java.lang.String)>",
    "<com.hazelcast.client.txn.proxy.xa.XATransactionProxy: void prepare()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: void putAll(java.util.Map,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future removeAsyncInternal(com.hazelcast.nio.serialization.Data)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: void putAllInternal(java.util.List,com.hazelcast.map.impl.MapEntries[])>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: com.hazelcast.security.Credentials initCredentials(com.hazelcast.client.config.ClientConfig)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: void handleFailureOnCompletionListener(javax.cache.integration.CompletionListener,java.lang.Throwable)>",
    "<com.hazelcast.client.spi.impl.ClientInvocationServiceSupport: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl)>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl: void <clinit>()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest)>",
    "<com.hazelcast.client.spi.ProxyManager: java.lang.Object instantiateClientProxy(java.lang.Class,java.lang.String,java.lang.String)>",
    "<com.hazelcast.client.spi.impl.listener.ClientListenerServiceImpl: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl,int,int)>",
    "<com.hazelcast.client.util.ClientCancellableDelegatingFuture: java.lang.Boolean invokeCancelRequest(boolean)>",
    "<com.hazelcast.client.proxy.ClientExecutorServiceProxy: boolean isSyncComputation(boolean)>",
    "<com.hazelcast.client.map.impl.nearcache.ClientHeapNearCache: void fireTtlCleanup()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleMapRemoveMany(java.lang.String[])>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: void waitResponseFromAllPartitionsForPutAll(java.util.List,long)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: java.lang.Object putInternal(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean,boolean,boolean)>",
    "<com.hazelcast.client.util.ClientCancellableDelegatingFuture: boolean cancel(boolean)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: com.hazelcast.spi.discovery.integration.DiscoveryService initDiscoveryService(com.hazelcast.client.config.ClientConfig)>",
    "<com.hazelcast.client.proxy.ClientReliableTopicProxy: void publish(java.lang.Object)>",
    "<com.hazelcast.client.connection.nio.ClientReadHandler: void <init>(com.hazelcast.client.connection.nio.ClientConnection,com.hazelcast.nio.tcp.nonblocking.NonBlockingIOThread,int)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: void removeAllInternal(java.util.Set)>",
    "<com.hazelcast.client.connection.nio.ClientConnection: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl,int)>",
    "<com.hazelcast.client.txn.TransactionProxy: void commit()>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture replaceAsyncInternal(java.lang.Object,java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean,boolean,boolean,boolean)>",
    "<com.hazelcast.client.config.QueryCacheConfigBuilderHelper: void <init>()>",
    "<com.hazelcast.client.spi.impl.AwsAddressProvider: void <clinit>()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: int size()>",
    "<com.hazelcast.client.spi.impl.ClientMembershipListener: void <clinit>()>",
    "<com.hazelcast.client.spi.impl.ClusterListenerSupport: void connectToOne()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.lang.String addEntryListenerInternal(java.lang.Object,com.hazelcast.query.Predicate,boolean,java.lang.Object)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future submitToKeyInternal(com.hazelcast.nio.serialization.Data,com.hazelcast.map.EntryProcessor)>",
    "<com.hazelcast.client.connection.nio.AbstractClientSelectionHandler: void <init>(com.hazelcast.client.connection.nio.ClientConnection,com.hazelcast.nio.tcp.nonblocking.NonBlockingIOThread)>",
    "<com.hazelcast.client.spi.impl.ClientInvocationServiceSupport$ResponseThread: void run()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: void <init>(com.hazelcast.config.CacheConfig,com.hazelcast.client.spi.ClientContext)>",
    "<com.hazelcast.client.txn.proxy.xa.XAResourceProxy: void <clinit>()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleCommand(java.lang.String)>",
    "<com.hazelcast.client.cache.impl.ClientClusterWideIterator: com.hazelcast.cache.impl.CacheKeyIteratorResult fetch()>",
    "<com.hazelcast.client.txn.TransactionProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest,java.lang.Object)>",
    "<com.hazelcast.client.spi.ProxyManager: void init(com.hazelcast.client.config.ClientConfig)>",
    "<com.hazelcast.client.proxy.ClientReplicatedMapProxy: void addNearCacheInvalidateListener()>",
    "<com.hazelcast.client.spi.impl.AwsAddressTranslator: void <clinit>()>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCachingProvider: com.hazelcast.client.cache.impl.HazelcastClientCacheManager createHazelcastCacheManager(java.net.URI,java.lang.ClassLoader,java.util.Properties)>",
    "<com.hazelcast.client.proxy.ClientMapReduceProxy$ClientCompletableFuture: void <init>(com.hazelcast.client.proxy.ClientMapReduceProxy,java.lang.String)>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: void <init>()>",
    "<com.hazelcast.client.spi.impl.ClientExecutionServiceImpl: com.hazelcast.core.ICompletableFuture submitInternal(java.lang.Runnable)>",
    "<com.hazelcast.client.spi.ProxyManager$ClientProxyFuture: com.hazelcast.client.spi.ClientProxy get()>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCachingProvider: com.hazelcast.core.HazelcastInstance getOrCreateInstance(java.lang.ClassLoader,java.util.Properties,boolean)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future putAsyncInternal(long,java.util.concurrent.TimeUnit,com.hazelcast.nio.serialization.Data,com.hazelcast.nio.serialization.Data)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: java.lang.Object putIfAbsentInternal(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean,boolean)>",
    "<com.hazelcast.client.impl.ClusterAuthenticator: void authenticate(com.hazelcast.client.connection.nio.ClientConnection)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: com.hazelcast.client.ClientExtension createClientInitializer(java.lang.ClassLoader)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: void enableStatisticManagementOnNodes(java.lang.String,boolean,boolean)>",
    "<com.hazelcast.client.proxy.NearCachedClientMapProxy: void addNearCacheInvalidateListener(com.hazelcast.client.spi.EventHandler)>",
    "<com.hazelcast.client.map.impl.nearcache.ClientHeapNearCache: void fireEvictCache()>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest)>",
    "<com.hazelcast.client.spi.impl.ClientExecutionServiceImpl: com.hazelcast.core.ICompletableFuture submit(java.util.concurrent.Callable)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: java.lang.Object getInternal(java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: void submitToKeyInternal(com.hazelcast.nio.serialization.Data,com.hazelcast.map.EntryProcessor,com.hazelcast.core.ExecutionCallback)>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleListAddMany(java.lang.String[])>",
    "<com.hazelcast.client.impl.DefaultClientExtension: void <clinit>()>",
    "<com.hazelcast.client.connection.nio.ClientReadHandler: void handle()>",
    "<com.hazelcast.client.util.AddressHelper: java.util.Collection getPossibleSocketAddresses(int,java.lang.String,int)>",
    "<com.hazelcast.client.spi.impl.ClusterListenerSupport$ManagerAuthenticator: void authenticate(com.hazelcast.client.connection.nio.ClientConnection)>",
    "<com.hazelcast.client.spi.ClientProxy: void destroy()>",
    "<com.hazelcast.client.proxy.ClientExecutorServiceProxy: com.hazelcast.core.ICompletableFuture invokeOnTarget(com.hazelcast.client.impl.client.TargetClientRequest,com.hazelcast.nio.Address)>",
    "<com.hazelcast.client.impl.LifecycleServiceImpl: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl)>",
    "<com.hazelcast.client.spi.impl.ClientExecutionServiceImpl: com.hazelcast.core.ICompletableFuture submit(java.lang.Runnable)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: void destroy()>",
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: java.lang.Object getAndRemove(java.lang.Object)>",
    "<com.hazelcast.client.config.ClientConfig: void <clinit>()>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture removeAsyncInternal(java.lang.Object,java.lang.Object,boolean,boolean,boolean,boolean)>",
    "<com.hazelcast.client.impl.DefaultClientConnectionManagerFactory: void <clinit>()>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: void <clinit>()>",
    "<com.hazelcast.client.proxy.ClientConditionProxy: boolean awaitUntil(java.util.Date)>",
    "<com.hazelcast.client.txn.TransactionProxy: void begin()>",
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: boolean remove(java.lang.Object)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: com.hazelcast.config.CacheConfig createConfigOnPartition(com.hazelcast.config.CacheConfig)>",
    "<com.hazelcast.client.spi.impl.ClientInvocation: void <clinit>()>",
    "<com.hazelcast.client.spi.impl.ClientExecutionServiceImpl: void <clinit>()>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: void start()>",
    "<com.hazelcast.client.impl.DefaultClientExtension: com.hazelcast.internal.serialization.SerializationService createSerializationService()>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: void <init>(java.net.URL)>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl$HeartBeat: void run()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleSetRemoveMany(java.lang.String[])>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.client.spi.impl.ClientInvocationFuture invoke(com.hazelcast.client.impl.client.ClientRequest,int,boolean)>",
    "<com.hazelcast.client.spi.impl.ClientPartitionServiceImpl: void <clinit>()>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: java.lang.Object getSafely(java.util.concurrent.Future)>",
    "<com.hazelcast.client.spi.ProxyManager: com.hazelcast.client.spi.ClientProxy getOrCreateProxy(java.lang.String,java.lang.String)>",
    "<com.hazelcast.client.config.XmlClientConfigLocator: void <clinit>()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleQOfferMany(java.lang.String[])>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleSetAddMany(java.lang.String[])>",
    "<com.hazelcast.client.connection.nio.ClientConnection: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl,com.hazelcast.nio.tcp.nonblocking.NonBlockingIOThread,com.hazelcast.nio.tcp.nonblocking.NonBlockingIOThread,int,com.hazelcast.nio.tcp.SocketChannelWrapper)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invokeInterruptibly(com.hazelcast.client.impl.client.ClientRequest,java.lang.Object)>",
    "<com.hazelcast.client.spi.impl.ClientInvocationFuture: void <clinit>()>",
    "<com.hazelcast.client.proxy.ClientExecutorServiceProxy: com.hazelcast.core.ICompletableFuture invokeOnPartitionOwner(com.hazelcast.client.impl.client.ClientRequest,int)>",
    "<com.hazelcast.client.proxy.ClientReliableTopicProxy: void <init>(java.lang.String,com.hazelcast.client.impl.HazelcastClientInstanceImpl)>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl: com.hazelcast.client.connection.nio.ClientConnection createSocketConnection(com.hazelcast.nio.Address)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: java.lang.Object getAndReplace(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest,com.hazelcast.nio.Address)>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: com.hazelcast.client.config.ClientConfig build(java.lang.ClassLoader)>",
    "<com.hazelcast.client.spi.impl.ClientInvocationFuture: java.lang.Object get(long,java.util.concurrent.TimeUnit)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: com.hazelcast.config.CacheConfig createConfig(java.lang.String,com.hazelcast.config.CacheConfig,boolean,boolean)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invokeOnPartition(com.hazelcast.client.impl.client.ClientRequest,int)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: java.util.Collection getDistributedObjects()>",
    "<com.hazelcast.client.spi.impl.ClusterListenerSupport: void <clinit>()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: com.hazelcast.monitor.LocalMapStats getLocalMapStats()>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl: void authenticate(com.hazelcast.client.connection.Authenticator,com.hazelcast.client.connection.nio.ClientConnection)>",
    "<com.hazelcast.client.map.impl.nearcache.ClientHeapNearCache$2: void run()>",
    "<com.hazelcast.client.spi.impl.discovery.DiscoveryAddressProvider: void <clinit>()>",
    "<com.hazelcast.client.txn.proxy.xa.XATransactionProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: void clearInternal()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: com.hazelcast.core.ICompletableFuture getAsyncInternal(com.hazelcast.nio.serialization.Data)>",
    "<com.hazelcast.client.txn.proxy.ClientTxnProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest)>",
    "<com.hazelcast.client.spi.impl.ClientClusterServiceImpl: void <clinit>()>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl: void initializeSelectors(com.hazelcast.client.impl.HazelcastClientInstanceImpl)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.List getAllInternal(java.util.Map,java.util.Map)>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: void <clinit>()>",
    "<com.hazelcast.client.spi.impl.ClientInvocationFuture: java.lang.Object get()>",
    "<com.hazelcast.client.txn.proxy.xa.XATransactionProxy: void begin()>",
    "<com.hazelcast.client.txn.TransactionProxy: void checkTimeout()>"
  ],
  "3.6.4": [
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: boolean containsKey(java.lang.Object)>",
    "<com.hazelcast.client.txn.proxy.xa.XATransactionProxy: void checkTimeout()>",
    "<com.hazelcast.client.map.impl.nearcache.ClientHeapNearCache: void put(java.lang.Object,java.lang.Object)>",
    "<com.hazelcast.client.connection.nio.ClientWriteHandler: void handle()>",
    "<com.hazelcast.client.map.impl.nearcache.ClientHeapNearCache: void <init>(java.lang.String,com.hazelcast.client.spi.ClientContext,com.hazelcast.config.NearCacheConfig)>",
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: boolean remove(java.lang.Object,java.lang.Object)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: boolean replace(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.impl.LifecycleServiceImpl: com.hazelcast.logging.ILogger getLogger()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: org.w3c.dom.Document parse(java.io.InputStream)>",
    "<com.hazelcast.client.txn.proxy.xa.XATransactionProxy: void commit(boolean)>",
    "<com.hazelcast.client.spi.impl.ClientClusterServiceImpl: long getClusterTime()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleMapPutMany(java.lang.String[])>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: com.hazelcast.config.CacheConfig getCacheConfigFromPartition(java.lang.String,java.lang.String)>",
    "<com.hazelcast.client.txn.proxy.xa.XATransactionProxy: void prepare()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: void putAll(java.util.Map,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future removeAsyncInternal(com.hazelcast.nio.serialization.Data)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: void putAllInternal(java.util.List,com.hazelcast.map.impl.MapEntries[])>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: com.hazelcast.security.Credentials initCredentials(com.hazelcast.client.config.ClientConfig)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: void handleFailureOnCompletionListener(javax.cache.integration.CompletionListener,java.lang.Throwable)>",
    "<com.hazelcast.client.spi.impl.ClientInvocationServiceSupport: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl)>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl: void <clinit>()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest)>",
    "<com.hazelcast.client.spi.ProxyManager: java.lang.Object instantiateClientProxy(java.lang.Class,java.lang.String,java.lang.String)>",
    "<com.hazelcast.client.spi.impl.listener.ClientListenerServiceImpl: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl,int,int)>",
    "<com.hazelcast.client.util.ClientCancellableDelegatingFuture: java.lang.Boolean invokeCancelRequest(boolean)>",
    "<com.hazelcast.client.proxy.ClientExecutorServiceProxy: boolean isSyncComputation(boolean)>",
    "<com.hazelcast.client.map.impl.nearcache.ClientHeapNearCache: void fireTtlCleanup()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleMapRemoveMany(java.lang.String[])>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: void waitResponseFromAllPartitionsForPutAll(java.util.List,long)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: java.lang.Object putInternal(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean,boolean,boolean)>",
    "<com.hazelcast.client.util.ClientCancellableDelegatingFuture: boolean cancel(boolean)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: com.hazelcast.spi.discovery.integration.DiscoveryService initDiscoveryService(com.hazelcast.client.config.ClientConfig)>",
    "<com.hazelcast.client.proxy.ClientReliableTopicProxy: void publish(java.lang.Object)>",
    "<com.hazelcast.client.connection.nio.ClientReadHandler: void <init>(com.hazelcast.client.connection.nio.ClientConnection,com.hazelcast.nio.tcp.nonblocking.NonBlockingIOThread,int)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: void removeAllInternal(java.util.Set)>",
    "<com.hazelcast.client.connection.nio.ClientConnection: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl,int)>",
    "<com.hazelcast.client.txn.TransactionProxy: void commit()>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture replaceAsyncInternal(java.lang.Object,java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean,boolean,boolean,boolean)>",
    "<com.hazelcast.client.config.QueryCacheConfigBuilderHelper: void <init>()>",
    "<com.hazelcast.client.spi.impl.AwsAddressProvider: void <clinit>()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: int size()>",
    "<com.hazelcast.client.spi.impl.ClientMembershipListener: void <clinit>()>",
    "<com.hazelcast.client.spi.impl.ClusterListenerSupport: void connectToOne()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.lang.String addEntryListenerInternal(java.lang.Object,com.hazelcast.query.Predicate,boolean,java.lang.Object)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future submitToKeyInternal(com.hazelcast.nio.serialization.Data,com.hazelcast.map.EntryProcessor)>",
    "<com.hazelcast.client.connection.nio.AbstractClientSelectionHandler: void <init>(com.hazelcast.client.connection.nio.ClientConnection,com.hazelcast.nio.tcp.nonblocking.NonBlockingIOThread)>",
    "<com.hazelcast.client.spi.impl.ClientInvocationServiceSupport$ResponseThread: void run()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: void <init>(com.hazelcast.config.CacheConfig,com.hazelcast.client.spi.ClientContext)>",
    "<com.hazelcast.client.txn.proxy.xa.XAResourceProxy: void <clinit>()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleCommand(java.lang.String)>",
    "<com.hazelcast.client.cache.impl.ClientClusterWideIterator: com.hazelcast.cache.impl.CacheKeyIteratorResult fetch()>",
    "<com.hazelcast.client.txn.TransactionProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest,java.lang.Object)>",
    "<com.hazelcast.client.spi.ProxyManager: void init(com.hazelcast.client.config.ClientConfig)>",
    "<com.hazelcast.client.proxy.ClientReplicatedMapProxy: void addNearCacheInvalidateListener()>",
    "<com.hazelcast.client.spi.impl.AwsAddressTranslator: void <clinit>()>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCachingProvider: com.hazelcast.client.cache.impl.HazelcastClientCacheManager createHazelcastCacheManager(java.net.URI,java.lang.ClassLoader,java.util.Properties)>",
    "<com.hazelcast.client.proxy.ClientMapReduceProxy$ClientCompletableFuture: void <init>(com.hazelcast.client.proxy.ClientMapReduceProxy,java.lang.String)>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: void <init>()>",
    "<com.hazelcast.client.spi.impl.ClientExecutionServiceImpl: com.hazelcast.core.ICompletableFuture submitInternal(java.lang.Runnable)>",
    "<com.hazelcast.client.spi.ProxyManager$ClientProxyFuture: com.hazelcast.client.spi.ClientProxy get()>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCachingProvider: com.hazelcast.core.HazelcastInstance getOrCreateInstance(java.lang.ClassLoader,java.util.Properties,boolean)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future putAsyncInternal(long,java.util.concurrent.TimeUnit,com.hazelcast.nio.serialization.Data,com.hazelcast.nio.serialization.Data)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: java.lang.Object putIfAbsentInternal(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean,boolean)>",
    "<com.hazelcast.client.impl.ClusterAuthenticator: void authenticate(com.hazelcast.client.connection.nio.ClientConnection)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: com.hazelcast.client.ClientExtension createClientInitializer(java.lang.ClassLoader)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: void enableStatisticManagementOnNodes(java.lang.String,boolean,boolean)>",
    "<com.hazelcast.client.proxy.NearCachedClientMapProxy: void addNearCacheInvalidateListener(com.hazelcast.client.spi.EventHandler)>",
    "<com.hazelcast.client.map.impl.nearcache.ClientHeapNearCache: void fireEvictCache()>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest)>",
    "<com.hazelcast.client.spi.impl.ClientExecutionServiceImpl: com.hazelcast.core.ICompletableFuture submit(java.util.concurrent.Callable)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: java.lang.Object getInternal(java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: void submitToKeyInternal(com.hazelcast.nio.serialization.Data,com.hazelcast.map.EntryProcessor,com.hazelcast.core.ExecutionCallback)>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleListAddMany(java.lang.String[])>",
    "<com.hazelcast.client.impl.DefaultClientExtension: void <clinit>()>",
    "<com.hazelcast.client.connection.nio.ClientReadHandler: void handle()>",
    "<com.hazelcast.client.util.AddressHelper: java.util.Collection getPossibleSocketAddresses(int,java.lang.String,int)>",
    "<com.hazelcast.client.spi.impl.ClusterListenerSupport$ManagerAuthenticator: void authenticate(com.hazelcast.client.connection.nio.ClientConnection)>",
    "<com.hazelcast.client.spi.ClientProxy: void destroy()>",
    "<com.hazelcast.client.proxy.ClientExecutorServiceProxy: com.hazelcast.core.ICompletableFuture invokeOnTarget(com.hazelcast.client.impl.client.TargetClientRequest,com.hazelcast.nio.Address)>",
    "<com.hazelcast.client.impl.LifecycleServiceImpl: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl)>",
    "<com.hazelcast.client.spi.impl.ClientExecutionServiceImpl: com.hazelcast.core.ICompletableFuture submit(java.lang.Runnable)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: void destroy()>",
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: java.lang.Object getAndRemove(java.lang.Object)>",
    "<com.hazelcast.client.config.ClientConfig: void <clinit>()>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture removeAsyncInternal(java.lang.Object,java.lang.Object,boolean,boolean,boolean,boolean)>",
    "<com.hazelcast.client.impl.DefaultClientConnectionManagerFactory: void <clinit>()>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: void <clinit>()>",
    "<com.hazelcast.client.proxy.ClientConditionProxy: boolean awaitUntil(java.util.Date)>",
    "<com.hazelcast.client.txn.TransactionProxy: void begin()>",
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: boolean remove(java.lang.Object)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: com.hazelcast.config.CacheConfig createConfigOnPartition(com.hazelcast.config.CacheConfig)>",
    "<com.hazelcast.client.spi.impl.ClientInvocation: void <clinit>()>",
    "<com.hazelcast.client.spi.impl.ClientExecutionServiceImpl: void <clinit>()>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: void start()>",
    "<com.hazelcast.client.impl.DefaultClientExtension: com.hazelcast.internal.serialization.SerializationService createSerializationService()>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: void <init>(java.net.URL)>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl$HeartBeat: void run()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleSetRemoveMany(java.lang.String[])>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.client.spi.impl.ClientInvocationFuture invoke(com.hazelcast.client.impl.client.ClientRequest,int,boolean)>",
    "<com.hazelcast.client.spi.impl.ClientPartitionServiceImpl: void <clinit>()>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: java.lang.Object getSafely(java.util.concurrent.Future)>",
    "<com.hazelcast.client.spi.ProxyManager: com.hazelcast.client.spi.ClientProxy getOrCreateProxy(java.lang.String,java.lang.String)>",
    "<com.hazelcast.client.config.XmlClientConfigLocator: void <clinit>()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleQOfferMany(java.lang.String[])>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleSetAddMany(java.lang.String[])>",
    "<com.hazelcast.client.connection.nio.ClientConnection: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl,com.hazelcast.nio.tcp.nonblocking.NonBlockingIOThread,com.hazelcast.nio.tcp.nonblocking.NonBlockingIOThread,int,com.hazelcast.nio.tcp.SocketChannelWrapper)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invokeInterruptibly(com.hazelcast.client.impl.client.ClientRequest,java.lang.Object)>",
    "<com.hazelcast.client.spi.impl.ClientInvocationFuture: void <clinit>()>",
    "<com.hazelcast.client.proxy.ClientExecutorServiceProxy: com.hazelcast.core.ICompletableFuture invokeOnPartitionOwner(com.hazelcast.client.impl.client.ClientRequest,int)>",
    "<com.hazelcast.client.proxy.ClientReliableTopicProxy: void <init>(java.lang.String,com.hazelcast.client.impl.HazelcastClientInstanceImpl)>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl: com.hazelcast.client.connection.nio.ClientConnection createSocketConnection(com.hazelcast.nio.Address)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: java.lang.Object getAndReplace(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest,com.hazelcast.nio.Address)>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: com.hazelcast.client.config.ClientConfig build(java.lang.ClassLoader)>",
    "<com.hazelcast.client.spi.impl.ClientInvocationFuture: java.lang.Object get(long,java.util.concurrent.TimeUnit)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: com.hazelcast.config.CacheConfig createConfig(java.lang.String,com.hazelcast.config.CacheConfig,boolean,boolean)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invokeOnPartition(com.hazelcast.client.impl.client.ClientRequest,int)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: java.util.Collection getDistributedObjects()>",
    "<com.hazelcast.client.spi.impl.ClusterListenerSupport: void <clinit>()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: com.hazelcast.monitor.LocalMapStats getLocalMapStats()>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl: void authenticate(com.hazelcast.client.connection.Authenticator,com.hazelcast.client.connection.nio.ClientConnection)>",
    "<com.hazelcast.client.map.impl.nearcache.ClientHeapNearCache$2: void run()>",
    "<com.hazelcast.client.spi.impl.discovery.DiscoveryAddressProvider: void <clinit>()>",
    "<com.hazelcast.client.txn.proxy.xa.XATransactionProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: void clearInternal()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: com.hazelcast.core.ICompletableFuture getAsyncInternal(com.hazelcast.nio.serialization.Data)>",
    "<com.hazelcast.client.txn.proxy.ClientTxnProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest)>",
    "<com.hazelcast.client.spi.impl.ClientClusterServiceImpl: void <clinit>()>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl: void initializeSelectors(com.hazelcast.client.impl.HazelcastClientInstanceImpl)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.List getAllInternal(java.util.Map,java.util.Map)>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: void <clinit>()>",
    "<com.hazelcast.client.spi.impl.ClientInvocationFuture: java.lang.Object get()>",
    "<com.hazelcast.client.txn.proxy.xa.XATransactionProxy: void begin()>",
    "<com.hazelcast.client.txn.TransactionProxy: void checkTimeout()>"
  ],
  "3.6.5": [
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: boolean containsKey(java.lang.Object)>",
    "<com.hazelcast.client.txn.proxy.xa.XATransactionProxy: void checkTimeout()>",
    "<com.hazelcast.client.map.impl.nearcache.ClientHeapNearCache: void put(java.lang.Object,java.lang.Object)>",
    "<com.hazelcast.client.connection.nio.ClientWriteHandler: void handle()>",
    "<com.hazelcast.client.map.impl.nearcache.ClientHeapNearCache: void <init>(java.lang.String,com.hazelcast.client.spi.ClientContext,com.hazelcast.config.NearCacheConfig)>",
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: boolean remove(java.lang.Object,java.lang.Object)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: boolean replace(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.impl.LifecycleServiceImpl: com.hazelcast.logging.ILogger getLogger()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: org.w3c.dom.Document parse(java.io.InputStream)>",
    "<com.hazelcast.client.txn.proxy.xa.XATransactionProxy: void commit(boolean)>",
    "<com.hazelcast.client.spi.impl.ClientClusterServiceImpl: long getClusterTime()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleMapPutMany(java.lang.String[])>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: com.hazelcast.config.CacheConfig getCacheConfigFromPartition(java.lang.String,java.lang.String)>",
    "<com.hazelcast.client.txn.proxy.xa.XATransactionProxy: void prepare()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: void putAll(java.util.Map,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future removeAsyncInternal(com.hazelcast.nio.serialization.Data)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: void putAllInternal(java.util.List,com.hazelcast.map.impl.MapEntries[])>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: com.hazelcast.security.Credentials initCredentials(com.hazelcast.client.config.ClientConfig)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: void handleFailureOnCompletionListener(javax.cache.integration.CompletionListener,java.lang.Throwable)>",
    "<com.hazelcast.client.spi.impl.ClientInvocationServiceSupport: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl)>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl: void <clinit>()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest)>",
    "<com.hazelcast.client.spi.ProxyManager: java.lang.Object instantiateClientProxy(java.lang.Class,java.lang.String,java.lang.String)>",
    "<com.hazelcast.client.spi.impl.listener.ClientListenerServiceImpl: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl,int,int)>",
    "<com.hazelcast.client.util.ClientCancellableDelegatingFuture: java.lang.Boolean invokeCancelRequest(boolean)>",
    "<com.hazelcast.client.proxy.ClientExecutorServiceProxy: boolean isSyncComputation(boolean)>",
    "<com.hazelcast.client.map.impl.nearcache.ClientHeapNearCache: void fireTtlCleanup()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleMapRemoveMany(java.lang.String[])>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: void waitResponseFromAllPartitionsForPutAll(java.util.List,long)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: java.lang.Object putInternal(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean,boolean,boolean)>",
    "<com.hazelcast.client.util.ClientCancellableDelegatingFuture: boolean cancel(boolean)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: com.hazelcast.spi.discovery.integration.DiscoveryService initDiscoveryService(com.hazelcast.client.config.ClientConfig)>",
    "<com.hazelcast.client.proxy.ClientReliableTopicProxy: void publish(java.lang.Object)>",
    "<com.hazelcast.client.connection.nio.ClientReadHandler: void <init>(com.hazelcast.client.connection.nio.ClientConnection,com.hazelcast.nio.tcp.nonblocking.NonBlockingIOThread,int)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: void removeAllInternal(java.util.Set)>",
    "<com.hazelcast.client.connection.nio.ClientConnection: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl,int)>",
    "<com.hazelcast.client.txn.TransactionProxy: void commit()>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture replaceAsyncInternal(java.lang.Object,java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean,boolean,boolean,boolean)>",
    "<com.hazelcast.client.config.QueryCacheConfigBuilderHelper: void <init>()>",
    "<com.hazelcast.client.spi.impl.AwsAddressProvider: void <clinit>()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: int size()>",
    "<com.hazelcast.client.spi.impl.ClientMembershipListener: void <clinit>()>",
    "<com.hazelcast.client.spi.impl.ClusterListenerSupport: void connectToOne()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.lang.String addEntryListenerInternal(java.lang.Object,com.hazelcast.query.Predicate,boolean,java.lang.Object)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future submitToKeyInternal(com.hazelcast.nio.serialization.Data,com.hazelcast.map.EntryProcessor)>",
    "<com.hazelcast.client.connection.nio.AbstractClientSelectionHandler: void <init>(com.hazelcast.client.connection.nio.ClientConnection,com.hazelcast.nio.tcp.nonblocking.NonBlockingIOThread)>",
    "<com.hazelcast.client.spi.impl.ClientInvocationServiceSupport$ResponseThread: void run()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: void <init>(com.hazelcast.config.CacheConfig,com.hazelcast.client.spi.ClientContext)>",
    "<com.hazelcast.client.txn.proxy.xa.XAResourceProxy: void <clinit>()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleCommand(java.lang.String)>",
    "<com.hazelcast.client.cache.impl.ClientClusterWideIterator: com.hazelcast.cache.impl.CacheKeyIteratorResult fetch()>",
    "<com.hazelcast.client.txn.TransactionProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest,java.lang.Object)>",
    "<com.hazelcast.client.spi.ProxyManager: void init(com.hazelcast.client.config.ClientConfig)>",
    "<com.hazelcast.client.proxy.ClientReplicatedMapProxy: void addNearCacheInvalidateListener()>",
    "<com.hazelcast.client.spi.impl.AwsAddressTranslator: void <clinit>()>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCachingProvider: com.hazelcast.client.cache.impl.HazelcastClientCacheManager createHazelcastCacheManager(java.net.URI,java.lang.ClassLoader,java.util.Properties)>",
    "<com.hazelcast.client.proxy.ClientMapReduceProxy$ClientCompletableFuture: void <init>(com.hazelcast.client.proxy.ClientMapReduceProxy,java.lang.String)>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: void <init>()>",
    "<com.hazelcast.client.spi.impl.ClientExecutionServiceImpl: com.hazelcast.core.ICompletableFuture submitInternal(java.lang.Runnable)>",
    "<com.hazelcast.client.spi.ProxyManager$ClientProxyFuture: com.hazelcast.client.spi.ClientProxy get()>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCachingProvider: com.hazelcast.core.HazelcastInstance getOrCreateInstance(java.lang.ClassLoader,java.util.Properties,boolean)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future putAsyncInternal(long,java.util.concurrent.TimeUnit,com.hazelcast.nio.serialization.Data,com.hazelcast.nio.serialization.Data)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: java.lang.Object putIfAbsentInternal(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean,boolean)>",
    "<com.hazelcast.client.impl.ClusterAuthenticator: void authenticate(com.hazelcast.client.connection.nio.ClientConnection)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: com.hazelcast.client.ClientExtension createClientInitializer(java.lang.ClassLoader)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: void enableStatisticManagementOnNodes(java.lang.String,boolean,boolean)>",
    "<com.hazelcast.client.proxy.NearCachedClientMapProxy: void addNearCacheInvalidateListener(com.hazelcast.client.spi.EventHandler)>",
    "<com.hazelcast.client.map.impl.nearcache.ClientHeapNearCache: void fireEvictCache()>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest)>",
    "<com.hazelcast.client.spi.impl.ClientExecutionServiceImpl: com.hazelcast.core.ICompletableFuture submit(java.util.concurrent.Callable)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: java.lang.Object getInternal(java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: void submitToKeyInternal(com.hazelcast.nio.serialization.Data,com.hazelcast.map.EntryProcessor,com.hazelcast.core.ExecutionCallback)>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleListAddMany(java.lang.String[])>",
    "<com.hazelcast.client.impl.DefaultClientExtension: void <clinit>()>",
    "<com.hazelcast.client.connection.nio.ClientReadHandler: void handle()>",
    "<com.hazelcast.client.util.AddressHelper: java.util.Collection getPossibleSocketAddresses(int,java.lang.String,int)>",
    "<com.hazelcast.client.spi.impl.ClusterListenerSupport$ManagerAuthenticator: void authenticate(com.hazelcast.client.connection.nio.ClientConnection)>",
    "<com.hazelcast.client.spi.ClientProxy: void destroy()>",
    "<com.hazelcast.client.proxy.ClientExecutorServiceProxy: com.hazelcast.core.ICompletableFuture invokeOnTarget(com.hazelcast.client.impl.client.TargetClientRequest,com.hazelcast.nio.Address)>",
    "<com.hazelcast.client.impl.LifecycleServiceImpl: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl)>",
    "<com.hazelcast.client.spi.impl.ClientExecutionServiceImpl: com.hazelcast.core.ICompletableFuture submit(java.lang.Runnable)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: void destroy()>",
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: java.lang.Object getAndRemove(java.lang.Object)>",
    "<com.hazelcast.client.config.ClientConfig: void <clinit>()>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture removeAsyncInternal(java.lang.Object,java.lang.Object,boolean,boolean,boolean,boolean)>",
    "<com.hazelcast.client.impl.DefaultClientConnectionManagerFactory: void <clinit>()>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: void <clinit>()>",
    "<com.hazelcast.client.proxy.ClientConditionProxy: boolean awaitUntil(java.util.Date)>",
    "<com.hazelcast.client.txn.TransactionProxy: void begin()>",
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: boolean remove(java.lang.Object)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: com.hazelcast.config.CacheConfig createConfigOnPartition(com.hazelcast.config.CacheConfig)>",
    "<com.hazelcast.client.spi.impl.ClientInvocation: void <clinit>()>",
    "<com.hazelcast.client.spi.impl.ClientExecutionServiceImpl: void <clinit>()>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: void start()>",
    "<com.hazelcast.client.impl.DefaultClientExtension: com.hazelcast.internal.serialization.SerializationService createSerializationService()>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: void <init>(java.net.URL)>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl$HeartBeat: void run()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleSetRemoveMany(java.lang.String[])>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.client.spi.impl.ClientInvocationFuture invoke(com.hazelcast.client.impl.client.ClientRequest,int,boolean)>",
    "<com.hazelcast.client.spi.impl.ClientPartitionServiceImpl: void <clinit>()>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: java.lang.Object getSafely(java.util.concurrent.Future)>",
    "<com.hazelcast.client.spi.ProxyManager: com.hazelcast.client.spi.ClientProxy getOrCreateProxy(java.lang.String,java.lang.String)>",
    "<com.hazelcast.client.config.XmlClientConfigLocator: void <clinit>()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleQOfferMany(java.lang.String[])>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleSetAddMany(java.lang.String[])>",
    "<com.hazelcast.client.connection.nio.ClientConnection: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl,com.hazelcast.nio.tcp.nonblocking.NonBlockingIOThread,com.hazelcast.nio.tcp.nonblocking.NonBlockingIOThread,int,com.hazelcast.nio.tcp.SocketChannelWrapper)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invokeInterruptibly(com.hazelcast.client.impl.client.ClientRequest,java.lang.Object)>",
    "<com.hazelcast.client.spi.impl.ClientInvocationFuture: void <clinit>()>",
    "<com.hazelcast.client.proxy.ClientExecutorServiceProxy: com.hazelcast.core.ICompletableFuture invokeOnPartitionOwner(com.hazelcast.client.impl.client.ClientRequest,int)>",
    "<com.hazelcast.client.proxy.ClientReliableTopicProxy: void <init>(java.lang.String,com.hazelcast.client.impl.HazelcastClientInstanceImpl)>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl: com.hazelcast.client.connection.nio.ClientConnection createSocketConnection(com.hazelcast.nio.Address)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: java.lang.Object getAndReplace(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest,com.hazelcast.nio.Address)>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: com.hazelcast.client.config.ClientConfig build(java.lang.ClassLoader)>",
    "<com.hazelcast.client.spi.impl.ClientInvocationFuture: java.lang.Object get(long,java.util.concurrent.TimeUnit)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: com.hazelcast.config.CacheConfig createConfig(java.lang.String,com.hazelcast.config.CacheConfig,boolean,boolean)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invokeOnPartition(com.hazelcast.client.impl.client.ClientRequest,int)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: java.util.Collection getDistributedObjects()>",
    "<com.hazelcast.client.spi.impl.ClusterListenerSupport: void <clinit>()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: com.hazelcast.monitor.LocalMapStats getLocalMapStats()>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl: void authenticate(com.hazelcast.client.connection.Authenticator,com.hazelcast.client.connection.nio.ClientConnection)>",
    "<com.hazelcast.client.map.impl.nearcache.ClientHeapNearCache$2: void run()>",
    "<com.hazelcast.client.spi.impl.discovery.DiscoveryAddressProvider: void <clinit>()>",
    "<com.hazelcast.client.txn.proxy.xa.XATransactionProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: void clearInternal()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: com.hazelcast.core.ICompletableFuture getAsyncInternal(com.hazelcast.nio.serialization.Data)>",
    "<com.hazelcast.client.txn.proxy.ClientTxnProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest)>",
    "<com.hazelcast.client.spi.impl.ClientClusterServiceImpl: void <clinit>()>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl: void initializeSelectors(com.hazelcast.client.impl.HazelcastClientInstanceImpl)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.List getAllInternal(java.util.Map,java.util.Map)>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: void <clinit>()>",
    "<com.hazelcast.client.spi.impl.ClientInvocationFuture: java.lang.Object get()>",
    "<com.hazelcast.client.txn.proxy.xa.XATransactionProxy: void begin()>",
    "<com.hazelcast.client.txn.TransactionProxy: void checkTimeout()>"
  ],
  "3.6.8": [
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: boolean containsKey(java.lang.Object)>",
    "<com.hazelcast.client.txn.proxy.xa.XATransactionProxy: void checkTimeout()>",
    "<com.hazelcast.client.map.impl.nearcache.ClientHeapNearCache: void put(java.lang.Object,java.lang.Object)>",
    "<com.hazelcast.client.connection.nio.ClientWriteHandler: void handle()>",
    "<com.hazelcast.client.map.impl.nearcache.ClientHeapNearCache: void <init>(java.lang.String,com.hazelcast.client.spi.ClientContext,com.hazelcast.config.NearCacheConfig)>",
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: boolean remove(java.lang.Object,java.lang.Object)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: boolean replace(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.impl.LifecycleServiceImpl: com.hazelcast.logging.ILogger getLogger()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: org.w3c.dom.Document parse(java.io.InputStream)>",
    "<com.hazelcast.client.txn.proxy.xa.XATransactionProxy: void commit(boolean)>",
    "<com.hazelcast.client.spi.impl.ClientClusterServiceImpl: long getClusterTime()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleMapPutMany(java.lang.String[])>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: com.hazelcast.config.CacheConfig getCacheConfigFromPartition(java.lang.String,java.lang.String)>",
    "<com.hazelcast.client.txn.proxy.xa.XATransactionProxy: void prepare()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: void putAll(java.util.Map,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future removeAsyncInternal(com.hazelcast.nio.serialization.Data)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: void putAllInternal(java.util.List,com.hazelcast.map.impl.MapEntries[])>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: com.hazelcast.security.Credentials initCredentials(com.hazelcast.client.config.ClientConfig)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: void handleFailureOnCompletionListener(javax.cache.integration.CompletionListener,java.lang.Throwable)>",
    "<com.hazelcast.client.spi.impl.ClientInvocationServiceSupport: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl)>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl: void <clinit>()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest)>",
    "<com.hazelcast.client.spi.ProxyManager: java.lang.Object instantiateClientProxy(java.lang.Class,java.lang.String,java.lang.String)>",
    "<com.hazelcast.client.spi.impl.listener.ClientListenerServiceImpl: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl,int,int)>",
    "<com.hazelcast.client.util.ClientCancellableDelegatingFuture: java.lang.Boolean invokeCancelRequest(boolean)>",
    "<com.hazelcast.client.proxy.ClientExecutorServiceProxy: boolean isSyncComputation(boolean)>",
    "<com.hazelcast.client.map.impl.nearcache.ClientHeapNearCache: void fireTtlCleanup()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleMapRemoveMany(java.lang.String[])>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: void waitResponseFromAllPartitionsForPutAll(java.util.List,long)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: java.lang.Object putInternal(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean,boolean,boolean)>",
    "<com.hazelcast.client.util.ClientCancellableDelegatingFuture: boolean cancel(boolean)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: com.hazelcast.spi.discovery.integration.DiscoveryService initDiscoveryService(com.hazelcast.client.config.ClientConfig)>",
    "<com.hazelcast.client.proxy.ClientReliableTopicProxy: void publish(java.lang.Object)>",
    "<com.hazelcast.client.connection.nio.ClientReadHandler: void <init>(com.hazelcast.client.connection.nio.ClientConnection,com.hazelcast.nio.tcp.nonblocking.NonBlockingIOThread,int)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: void removeAllInternal(java.util.Set)>",
    "<com.hazelcast.client.connection.nio.ClientConnection: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl,int)>",
    "<com.hazelcast.client.txn.TransactionProxy: void commit()>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture replaceAsyncInternal(java.lang.Object,java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean,boolean,boolean,boolean)>",
    "<com.hazelcast.client.config.QueryCacheConfigBuilderHelper: void <init>()>",
    "<com.hazelcast.client.spi.impl.AwsAddressProvider: void <clinit>()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: int size()>",
    "<com.hazelcast.client.spi.impl.ClientMembershipListener: void <clinit>()>",
    "<com.hazelcast.client.spi.impl.ClusterListenerSupport: void connectToOne()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.lang.String addEntryListenerInternal(java.lang.Object,com.hazelcast.query.Predicate,boolean,java.lang.Object)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future submitToKeyInternal(com.hazelcast.nio.serialization.Data,com.hazelcast.map.EntryProcessor)>",
    "<com.hazelcast.client.connection.nio.AbstractClientSelectionHandler: void <init>(com.hazelcast.client.connection.nio.ClientConnection,com.hazelcast.nio.tcp.nonblocking.NonBlockingIOThread)>",
    "<com.hazelcast.client.spi.impl.ClientInvocationServiceSupport$ResponseThread: void run()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: void <init>(com.hazelcast.config.CacheConfig,com.hazelcast.client.spi.ClientContext)>",
    "<com.hazelcast.client.txn.proxy.xa.XAResourceProxy: void <clinit>()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleCommand(java.lang.String)>",
    "<com.hazelcast.client.cache.impl.ClientClusterWideIterator: com.hazelcast.cache.impl.CacheKeyIteratorResult fetch()>",
    "<com.hazelcast.client.txn.TransactionProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest,java.lang.Object)>",
    "<com.hazelcast.client.spi.ProxyManager: void init(com.hazelcast.client.config.ClientConfig)>",
    "<com.hazelcast.client.proxy.ClientReplicatedMapProxy: void addNearCacheInvalidateListener()>",
    "<com.hazelcast.client.spi.impl.AwsAddressTranslator: void <clinit>()>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCachingProvider: com.hazelcast.client.cache.impl.HazelcastClientCacheManager createHazelcastCacheManager(java.net.URI,java.lang.ClassLoader,java.util.Properties)>",
    "<com.hazelcast.client.proxy.ClientMapReduceProxy$ClientCompletableFuture: void <init>(com.hazelcast.client.proxy.ClientMapReduceProxy,java.lang.String)>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: void <init>()>",
    "<com.hazelcast.client.spi.impl.ClientExecutionServiceImpl: com.hazelcast.core.ICompletableFuture submitInternal(java.lang.Runnable)>",
    "<com.hazelcast.client.spi.ProxyManager$ClientProxyFuture: com.hazelcast.client.spi.ClientProxy get()>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCachingProvider: com.hazelcast.core.HazelcastInstance getOrCreateInstance(java.lang.ClassLoader,java.util.Properties,boolean)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future putAsyncInternal(long,java.util.concurrent.TimeUnit,com.hazelcast.nio.serialization.Data,com.hazelcast.nio.serialization.Data)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: java.lang.Object putIfAbsentInternal(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean,boolean)>",
    "<com.hazelcast.client.impl.ClusterAuthenticator: void authenticate(com.hazelcast.client.connection.nio.ClientConnection)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: com.hazelcast.client.ClientExtension createClientInitializer(java.lang.ClassLoader)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: void enableStatisticManagementOnNodes(java.lang.String,boolean,boolean)>",
    "<com.hazelcast.client.proxy.NearCachedClientMapProxy: void addNearCacheInvalidateListener(com.hazelcast.client.spi.EventHandler)>",
    "<com.hazelcast.client.map.impl.nearcache.ClientHeapNearCache: void fireEvictCache()>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest)>",
    "<com.hazelcast.client.spi.impl.ClientExecutionServiceImpl: com.hazelcast.core.ICompletableFuture submit(java.util.concurrent.Callable)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: java.lang.Object getInternal(java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: void submitToKeyInternal(com.hazelcast.nio.serialization.Data,com.hazelcast.map.EntryProcessor,com.hazelcast.core.ExecutionCallback)>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleListAddMany(java.lang.String[])>",
    "<com.hazelcast.client.impl.DefaultClientExtension: void <clinit>()>",
    "<com.hazelcast.client.connection.nio.ClientReadHandler: void handle()>",
    "<com.hazelcast.client.util.AddressHelper: java.util.Collection getPossibleSocketAddresses(int,java.lang.String,int)>",
    "<com.hazelcast.client.spi.impl.ClusterListenerSupport$ManagerAuthenticator: void authenticate(com.hazelcast.client.connection.nio.ClientConnection)>",
    "<com.hazelcast.client.spi.ClientProxy: void destroy()>",
    "<com.hazelcast.client.proxy.ClientExecutorServiceProxy: com.hazelcast.core.ICompletableFuture invokeOnTarget(com.hazelcast.client.impl.client.TargetClientRequest,com.hazelcast.nio.Address)>",
    "<com.hazelcast.client.impl.LifecycleServiceImpl: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl)>",
    "<com.hazelcast.client.spi.impl.ClientExecutionServiceImpl: com.hazelcast.core.ICompletableFuture submit(java.lang.Runnable)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: void destroy()>",
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: java.lang.Object getAndRemove(java.lang.Object)>",
    "<com.hazelcast.client.config.ClientConfig: void <clinit>()>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture removeAsyncInternal(java.lang.Object,java.lang.Object,boolean,boolean,boolean,boolean)>",
    "<com.hazelcast.client.impl.DefaultClientConnectionManagerFactory: void <clinit>()>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: void <clinit>()>",
    "<com.hazelcast.client.proxy.ClientConditionProxy: boolean awaitUntil(java.util.Date)>",
    "<com.hazelcast.client.txn.TransactionProxy: void begin()>",
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: boolean remove(java.lang.Object)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: com.hazelcast.config.CacheConfig createConfigOnPartition(com.hazelcast.config.CacheConfig)>",
    "<com.hazelcast.client.spi.impl.ClientInvocation: void <clinit>()>",
    "<com.hazelcast.client.spi.impl.ClientExecutionServiceImpl: void <clinit>()>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: void start()>",
    "<com.hazelcast.client.impl.DefaultClientExtension: com.hazelcast.internal.serialization.SerializationService createSerializationService()>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: void <init>(java.net.URL)>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl$HeartBeat: void run()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleSetRemoveMany(java.lang.String[])>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.client.spi.impl.ClientInvocationFuture invoke(com.hazelcast.client.impl.client.ClientRequest,int,boolean)>",
    "<com.hazelcast.client.spi.impl.ClientPartitionServiceImpl: void <clinit>()>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: java.lang.Object getSafely(java.util.concurrent.Future)>",
    "<com.hazelcast.client.spi.ProxyManager: com.hazelcast.client.spi.ClientProxy getOrCreateProxy(java.lang.String,java.lang.String)>",
    "<com.hazelcast.client.config.XmlClientConfigLocator: void <clinit>()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleQOfferMany(java.lang.String[])>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleSetAddMany(java.lang.String[])>",
    "<com.hazelcast.client.connection.nio.ClientConnection: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl,com.hazelcast.nio.tcp.nonblocking.NonBlockingIOThread,com.hazelcast.nio.tcp.nonblocking.NonBlockingIOThread,int,com.hazelcast.nio.tcp.SocketChannelWrapper)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invokeInterruptibly(com.hazelcast.client.impl.client.ClientRequest,java.lang.Object)>",
    "<com.hazelcast.client.spi.impl.ClientInvocationFuture: void <clinit>()>",
    "<com.hazelcast.client.proxy.ClientExecutorServiceProxy: com.hazelcast.core.ICompletableFuture invokeOnPartitionOwner(com.hazelcast.client.impl.client.ClientRequest,int)>",
    "<com.hazelcast.client.proxy.ClientReliableTopicProxy: void <init>(java.lang.String,com.hazelcast.client.impl.HazelcastClientInstanceImpl)>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl: com.hazelcast.client.connection.nio.ClientConnection createSocketConnection(com.hazelcast.nio.Address)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: java.lang.Object getAndReplace(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest,com.hazelcast.nio.Address)>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: com.hazelcast.client.config.ClientConfig build(java.lang.ClassLoader)>",
    "<com.hazelcast.client.spi.impl.ClientInvocationFuture: java.lang.Object get(long,java.util.concurrent.TimeUnit)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: com.hazelcast.config.CacheConfig createConfig(java.lang.String,com.hazelcast.config.CacheConfig,boolean,boolean)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invokeOnPartition(com.hazelcast.client.impl.client.ClientRequest,int)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: java.util.Collection getDistributedObjects()>",
    "<com.hazelcast.client.spi.impl.ClusterListenerSupport: void <clinit>()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: com.hazelcast.monitor.LocalMapStats getLocalMapStats()>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl: void authenticate(com.hazelcast.client.connection.Authenticator,com.hazelcast.client.connection.nio.ClientConnection)>",
    "<com.hazelcast.client.map.impl.nearcache.ClientHeapNearCache$2: void run()>",
    "<com.hazelcast.client.spi.impl.discovery.DiscoveryAddressProvider: void <clinit>()>",
    "<com.hazelcast.client.txn.proxy.xa.XATransactionProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: void clearInternal()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: com.hazelcast.core.ICompletableFuture getAsyncInternal(com.hazelcast.nio.serialization.Data)>",
    "<com.hazelcast.client.txn.proxy.ClientTxnProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest)>",
    "<com.hazelcast.client.spi.impl.ClientClusterServiceImpl: void <clinit>()>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl: void initializeSelectors(com.hazelcast.client.impl.HazelcastClientInstanceImpl)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.List getAllInternal(java.util.Map,java.util.Map)>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: void <clinit>()>",
    "<com.hazelcast.client.spi.impl.ClientInvocationFuture: java.lang.Object get()>",
    "<com.hazelcast.client.txn.proxy.xa.XATransactionProxy: void begin()>",
    "<com.hazelcast.client.txn.TransactionProxy: void checkTimeout()>"
  ],
  "3.6.3": [
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: boolean containsKey(java.lang.Object)>",
    "<com.hazelcast.client.txn.proxy.xa.XATransactionProxy: void checkTimeout()>",
    "<com.hazelcast.client.map.impl.nearcache.ClientHeapNearCache: void put(java.lang.Object,java.lang.Object)>",
    "<com.hazelcast.client.connection.nio.ClientWriteHandler: void handle()>",
    "<com.hazelcast.client.map.impl.nearcache.ClientHeapNearCache: void <init>(java.lang.String,com.hazelcast.client.spi.ClientContext,com.hazelcast.config.NearCacheConfig)>",
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: boolean remove(java.lang.Object,java.lang.Object)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: boolean replace(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.impl.LifecycleServiceImpl: com.hazelcast.logging.ILogger getLogger()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: org.w3c.dom.Document parse(java.io.InputStream)>",
    "<com.hazelcast.client.txn.proxy.xa.XATransactionProxy: void commit(boolean)>",
    "<com.hazelcast.client.spi.impl.ClientClusterServiceImpl: long getClusterTime()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleMapPutMany(java.lang.String[])>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: com.hazelcast.config.CacheConfig getCacheConfigFromPartition(java.lang.String,java.lang.String)>",
    "<com.hazelcast.client.txn.proxy.xa.XATransactionProxy: void prepare()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: void putAll(java.util.Map,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future removeAsyncInternal(com.hazelcast.nio.serialization.Data)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: void putAllInternal(java.util.List,com.hazelcast.map.impl.MapEntries[])>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: com.hazelcast.security.Credentials initCredentials(com.hazelcast.client.config.ClientConfig)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: void handleFailureOnCompletionListener(javax.cache.integration.CompletionListener,java.lang.Throwable)>",
    "<com.hazelcast.client.spi.impl.ClientInvocationServiceSupport: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl)>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl: void <clinit>()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest)>",
    "<com.hazelcast.client.spi.ProxyManager: java.lang.Object instantiateClientProxy(java.lang.Class,java.lang.String,java.lang.String)>",
    "<com.hazelcast.client.spi.impl.listener.ClientListenerServiceImpl: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl,int,int)>",
    "<com.hazelcast.client.util.ClientCancellableDelegatingFuture: java.lang.Boolean invokeCancelRequest(boolean)>",
    "<com.hazelcast.client.proxy.ClientExecutorServiceProxy: boolean isSyncComputation(boolean)>",
    "<com.hazelcast.client.map.impl.nearcache.ClientHeapNearCache: void fireTtlCleanup()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleMapRemoveMany(java.lang.String[])>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: void waitResponseFromAllPartitionsForPutAll(java.util.List,long)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: java.lang.Object putInternal(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean,boolean,boolean)>",
    "<com.hazelcast.client.util.ClientCancellableDelegatingFuture: boolean cancel(boolean)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: com.hazelcast.spi.discovery.integration.DiscoveryService initDiscoveryService(com.hazelcast.client.config.ClientConfig)>",
    "<com.hazelcast.client.proxy.ClientReliableTopicProxy: void publish(java.lang.Object)>",
    "<com.hazelcast.client.connection.nio.ClientReadHandler: void <init>(com.hazelcast.client.connection.nio.ClientConnection,com.hazelcast.nio.tcp.nonblocking.NonBlockingIOThread,int)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: void removeAllInternal(java.util.Set)>",
    "<com.hazelcast.client.connection.nio.ClientConnection: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl,int)>",
    "<com.hazelcast.client.txn.TransactionProxy: void commit()>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture replaceAsyncInternal(java.lang.Object,java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean,boolean,boolean,boolean)>",
    "<com.hazelcast.client.config.QueryCacheConfigBuilderHelper: void <init>()>",
    "<com.hazelcast.client.spi.impl.AwsAddressProvider: void <clinit>()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: int size()>",
    "<com.hazelcast.client.spi.impl.ClientMembershipListener: void <clinit>()>",
    "<com.hazelcast.client.spi.impl.ClusterListenerSupport: void connectToOne()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.lang.String addEntryListenerInternal(java.lang.Object,com.hazelcast.query.Predicate,boolean,java.lang.Object)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future submitToKeyInternal(com.hazelcast.nio.serialization.Data,com.hazelcast.map.EntryProcessor)>",
    "<com.hazelcast.client.connection.nio.AbstractClientSelectionHandler: void <init>(com.hazelcast.client.connection.nio.ClientConnection,com.hazelcast.nio.tcp.nonblocking.NonBlockingIOThread)>",
    "<com.hazelcast.client.spi.impl.ClientInvocationServiceSupport$ResponseThread: void run()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: void <init>(com.hazelcast.config.CacheConfig,com.hazelcast.client.spi.ClientContext)>",
    "<com.hazelcast.client.txn.proxy.xa.XAResourceProxy: void <clinit>()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleCommand(java.lang.String)>",
    "<com.hazelcast.client.cache.impl.ClientClusterWideIterator: com.hazelcast.cache.impl.CacheKeyIteratorResult fetch()>",
    "<com.hazelcast.client.txn.TransactionProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest,java.lang.Object)>",
    "<com.hazelcast.client.spi.ProxyManager: void init(com.hazelcast.client.config.ClientConfig)>",
    "<com.hazelcast.client.proxy.ClientReplicatedMapProxy: void addNearCacheInvalidateListener()>",
    "<com.hazelcast.client.spi.impl.AwsAddressTranslator: void <clinit>()>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCachingProvider: com.hazelcast.client.cache.impl.HazelcastClientCacheManager createHazelcastCacheManager(java.net.URI,java.lang.ClassLoader,java.util.Properties)>",
    "<com.hazelcast.client.proxy.ClientMapReduceProxy$ClientCompletableFuture: void <init>(com.hazelcast.client.proxy.ClientMapReduceProxy,java.lang.String)>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: void <init>()>",
    "<com.hazelcast.client.spi.impl.ClientExecutionServiceImpl: com.hazelcast.core.ICompletableFuture submitInternal(java.lang.Runnable)>",
    "<com.hazelcast.client.spi.ProxyManager$ClientProxyFuture: com.hazelcast.client.spi.ClientProxy get()>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCachingProvider: com.hazelcast.core.HazelcastInstance getOrCreateInstance(java.lang.ClassLoader,java.util.Properties,boolean)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future putAsyncInternal(long,java.util.concurrent.TimeUnit,com.hazelcast.nio.serialization.Data,com.hazelcast.nio.serialization.Data)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: java.lang.Object putIfAbsentInternal(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean,boolean)>",
    "<com.hazelcast.client.impl.ClusterAuthenticator: void authenticate(com.hazelcast.client.connection.nio.ClientConnection)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: com.hazelcast.client.ClientExtension createClientInitializer(java.lang.ClassLoader)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: void enableStatisticManagementOnNodes(java.lang.String,boolean,boolean)>",
    "<com.hazelcast.client.proxy.NearCachedClientMapProxy: void addNearCacheInvalidateListener(com.hazelcast.client.spi.EventHandler)>",
    "<com.hazelcast.client.map.impl.nearcache.ClientHeapNearCache: void fireEvictCache()>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest)>",
    "<com.hazelcast.client.spi.impl.ClientExecutionServiceImpl: com.hazelcast.core.ICompletableFuture submit(java.util.concurrent.Callable)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: java.lang.Object getInternal(java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: void submitToKeyInternal(com.hazelcast.nio.serialization.Data,com.hazelcast.map.EntryProcessor,com.hazelcast.core.ExecutionCallback)>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleListAddMany(java.lang.String[])>",
    "<com.hazelcast.client.impl.DefaultClientExtension: void <clinit>()>",
    "<com.hazelcast.client.connection.nio.ClientReadHandler: void handle()>",
    "<com.hazelcast.client.util.AddressHelper: java.util.Collection getPossibleSocketAddresses(int,java.lang.String,int)>",
    "<com.hazelcast.client.spi.impl.ClusterListenerSupport$ManagerAuthenticator: void authenticate(com.hazelcast.client.connection.nio.ClientConnection)>",
    "<com.hazelcast.client.spi.ClientProxy: void destroy()>",
    "<com.hazelcast.client.proxy.ClientExecutorServiceProxy: com.hazelcast.core.ICompletableFuture invokeOnTarget(com.hazelcast.client.impl.client.TargetClientRequest,com.hazelcast.nio.Address)>",
    "<com.hazelcast.client.impl.LifecycleServiceImpl: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl)>",
    "<com.hazelcast.client.spi.impl.ClientExecutionServiceImpl: com.hazelcast.core.ICompletableFuture submit(java.lang.Runnable)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: void destroy()>",
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: java.lang.Object getAndRemove(java.lang.Object)>",
    "<com.hazelcast.client.config.ClientConfig: void <clinit>()>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture removeAsyncInternal(java.lang.Object,java.lang.Object,boolean,boolean,boolean,boolean)>",
    "<com.hazelcast.client.impl.DefaultClientConnectionManagerFactory: void <clinit>()>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: void <clinit>()>",
    "<com.hazelcast.client.proxy.ClientConditionProxy: boolean awaitUntil(java.util.Date)>",
    "<com.hazelcast.client.txn.TransactionProxy: void begin()>",
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: boolean remove(java.lang.Object)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: com.hazelcast.config.CacheConfig createConfigOnPartition(com.hazelcast.config.CacheConfig)>",
    "<com.hazelcast.client.spi.impl.ClientInvocation: void <clinit>()>",
    "<com.hazelcast.client.spi.impl.ClientExecutionServiceImpl: void <clinit>()>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: void start()>",
    "<com.hazelcast.client.impl.DefaultClientExtension: com.hazelcast.internal.serialization.SerializationService createSerializationService()>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: void <init>(java.net.URL)>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl$HeartBeat: void run()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleSetRemoveMany(java.lang.String[])>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.client.spi.impl.ClientInvocationFuture invoke(com.hazelcast.client.impl.client.ClientRequest,int,boolean)>",
    "<com.hazelcast.client.spi.impl.ClientPartitionServiceImpl: void <clinit>()>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: java.lang.Object getSafely(java.util.concurrent.Future)>",
    "<com.hazelcast.client.spi.ProxyManager: com.hazelcast.client.spi.ClientProxy getOrCreateProxy(java.lang.String,java.lang.String)>",
    "<com.hazelcast.client.config.XmlClientConfigLocator: void <clinit>()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleQOfferMany(java.lang.String[])>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleSetAddMany(java.lang.String[])>",
    "<com.hazelcast.client.connection.nio.ClientConnection: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl,com.hazelcast.nio.tcp.nonblocking.NonBlockingIOThread,com.hazelcast.nio.tcp.nonblocking.NonBlockingIOThread,int,com.hazelcast.nio.tcp.SocketChannelWrapper)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invokeInterruptibly(com.hazelcast.client.impl.client.ClientRequest,java.lang.Object)>",
    "<com.hazelcast.client.spi.impl.ClientInvocationFuture: void <clinit>()>",
    "<com.hazelcast.client.proxy.ClientExecutorServiceProxy: com.hazelcast.core.ICompletableFuture invokeOnPartitionOwner(com.hazelcast.client.impl.client.ClientRequest,int)>",
    "<com.hazelcast.client.proxy.ClientReliableTopicProxy: void <init>(java.lang.String,com.hazelcast.client.impl.HazelcastClientInstanceImpl)>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl: com.hazelcast.client.connection.nio.ClientConnection createSocketConnection(com.hazelcast.nio.Address)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: java.lang.Object getAndReplace(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest,com.hazelcast.nio.Address)>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: com.hazelcast.client.config.ClientConfig build(java.lang.ClassLoader)>",
    "<com.hazelcast.client.spi.impl.ClientInvocationFuture: java.lang.Object get(long,java.util.concurrent.TimeUnit)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: com.hazelcast.config.CacheConfig createConfig(java.lang.String,com.hazelcast.config.CacheConfig,boolean,boolean)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invokeOnPartition(com.hazelcast.client.impl.client.ClientRequest,int)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: java.util.Collection getDistributedObjects()>",
    "<com.hazelcast.client.spi.impl.ClusterListenerSupport: void <clinit>()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: com.hazelcast.monitor.LocalMapStats getLocalMapStats()>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl: void authenticate(com.hazelcast.client.connection.Authenticator,com.hazelcast.client.connection.nio.ClientConnection)>",
    "<com.hazelcast.client.map.impl.nearcache.ClientHeapNearCache$2: void run()>",
    "<com.hazelcast.client.spi.impl.discovery.DiscoveryAddressProvider: void <clinit>()>",
    "<com.hazelcast.client.txn.proxy.xa.XATransactionProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: void clearInternal()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: com.hazelcast.core.ICompletableFuture getAsyncInternal(com.hazelcast.nio.serialization.Data)>",
    "<com.hazelcast.client.txn.proxy.ClientTxnProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest)>",
    "<com.hazelcast.client.spi.impl.ClientClusterServiceImpl: void <clinit>()>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl: void initializeSelectors(com.hazelcast.client.impl.HazelcastClientInstanceImpl)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.List getAllInternal(java.util.Map,java.util.Map)>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: void <clinit>()>",
    "<com.hazelcast.client.spi.impl.ClientInvocationFuture: java.lang.Object get()>",
    "<com.hazelcast.client.txn.proxy.xa.XATransactionProxy: void begin()>",
    "<com.hazelcast.client.txn.TransactionProxy: void checkTimeout()>"
  ],
  "3.6.6": [
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: boolean containsKey(java.lang.Object)>",
    "<com.hazelcast.client.txn.proxy.xa.XATransactionProxy: void checkTimeout()>",
    "<com.hazelcast.client.map.impl.nearcache.ClientHeapNearCache: void put(java.lang.Object,java.lang.Object)>",
    "<com.hazelcast.client.connection.nio.ClientWriteHandler: void handle()>",
    "<com.hazelcast.client.map.impl.nearcache.ClientHeapNearCache: void <init>(java.lang.String,com.hazelcast.client.spi.ClientContext,com.hazelcast.config.NearCacheConfig)>",
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: boolean remove(java.lang.Object,java.lang.Object)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: boolean replace(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.impl.LifecycleServiceImpl: com.hazelcast.logging.ILogger getLogger()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: org.w3c.dom.Document parse(java.io.InputStream)>",
    "<com.hazelcast.client.txn.proxy.xa.XATransactionProxy: void commit(boolean)>",
    "<com.hazelcast.client.spi.impl.ClientClusterServiceImpl: long getClusterTime()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleMapPutMany(java.lang.String[])>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: com.hazelcast.config.CacheConfig getCacheConfigFromPartition(java.lang.String,java.lang.String)>",
    "<com.hazelcast.client.txn.proxy.xa.XATransactionProxy: void prepare()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: void putAll(java.util.Map,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future removeAsyncInternal(com.hazelcast.nio.serialization.Data)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: void putAllInternal(java.util.List,com.hazelcast.map.impl.MapEntries[])>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: com.hazelcast.security.Credentials initCredentials(com.hazelcast.client.config.ClientConfig)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: void handleFailureOnCompletionListener(javax.cache.integration.CompletionListener,java.lang.Throwable)>",
    "<com.hazelcast.client.spi.impl.ClientInvocationServiceSupport: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl)>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl: void <clinit>()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest)>",
    "<com.hazelcast.client.spi.ProxyManager: java.lang.Object instantiateClientProxy(java.lang.Class,java.lang.String,java.lang.String)>",
    "<com.hazelcast.client.spi.impl.listener.ClientListenerServiceImpl: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl,int,int)>",
    "<com.hazelcast.client.util.ClientCancellableDelegatingFuture: java.lang.Boolean invokeCancelRequest(boolean)>",
    "<com.hazelcast.client.proxy.ClientExecutorServiceProxy: boolean isSyncComputation(boolean)>",
    "<com.hazelcast.client.map.impl.nearcache.ClientHeapNearCache: void fireTtlCleanup()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleMapRemoveMany(java.lang.String[])>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: void waitResponseFromAllPartitionsForPutAll(java.util.List,long)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: java.lang.Object putInternal(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean,boolean,boolean)>",
    "<com.hazelcast.client.util.ClientCancellableDelegatingFuture: boolean cancel(boolean)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: com.hazelcast.spi.discovery.integration.DiscoveryService initDiscoveryService(com.hazelcast.client.config.ClientConfig)>",
    "<com.hazelcast.client.proxy.ClientReliableTopicProxy: void publish(java.lang.Object)>",
    "<com.hazelcast.client.connection.nio.ClientReadHandler: void <init>(com.hazelcast.client.connection.nio.ClientConnection,com.hazelcast.nio.tcp.nonblocking.NonBlockingIOThread,int)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: void removeAllInternal(java.util.Set)>",
    "<com.hazelcast.client.connection.nio.ClientConnection: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl,int)>",
    "<com.hazelcast.client.txn.TransactionProxy: void commit()>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture replaceAsyncInternal(java.lang.Object,java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean,boolean,boolean,boolean)>",
    "<com.hazelcast.client.config.QueryCacheConfigBuilderHelper: void <init>()>",
    "<com.hazelcast.client.spi.impl.AwsAddressProvider: void <clinit>()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: int size()>",
    "<com.hazelcast.client.spi.impl.ClientMembershipListener: void <clinit>()>",
    "<com.hazelcast.client.spi.impl.ClusterListenerSupport: void connectToOne()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.lang.String addEntryListenerInternal(java.lang.Object,com.hazelcast.query.Predicate,boolean,java.lang.Object)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future submitToKeyInternal(com.hazelcast.nio.serialization.Data,com.hazelcast.map.EntryProcessor)>",
    "<com.hazelcast.client.connection.nio.AbstractClientSelectionHandler: void <init>(com.hazelcast.client.connection.nio.ClientConnection,com.hazelcast.nio.tcp.nonblocking.NonBlockingIOThread)>",
    "<com.hazelcast.client.spi.impl.ClientInvocationServiceSupport$ResponseThread: void run()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: void <init>(com.hazelcast.config.CacheConfig,com.hazelcast.client.spi.ClientContext)>",
    "<com.hazelcast.client.txn.proxy.xa.XAResourceProxy: void <clinit>()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleCommand(java.lang.String)>",
    "<com.hazelcast.client.cache.impl.ClientClusterWideIterator: com.hazelcast.cache.impl.CacheKeyIteratorResult fetch()>",
    "<com.hazelcast.client.txn.TransactionProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest,java.lang.Object)>",
    "<com.hazelcast.client.spi.ProxyManager: void init(com.hazelcast.client.config.ClientConfig)>",
    "<com.hazelcast.client.proxy.ClientReplicatedMapProxy: void addNearCacheInvalidateListener()>",
    "<com.hazelcast.client.spi.impl.AwsAddressTranslator: void <clinit>()>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCachingProvider: com.hazelcast.client.cache.impl.HazelcastClientCacheManager createHazelcastCacheManager(java.net.URI,java.lang.ClassLoader,java.util.Properties)>",
    "<com.hazelcast.client.proxy.ClientMapReduceProxy$ClientCompletableFuture: void <init>(com.hazelcast.client.proxy.ClientMapReduceProxy,java.lang.String)>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: void <init>()>",
    "<com.hazelcast.client.spi.impl.ClientExecutionServiceImpl: com.hazelcast.core.ICompletableFuture submitInternal(java.lang.Runnable)>",
    "<com.hazelcast.client.spi.ProxyManager$ClientProxyFuture: com.hazelcast.client.spi.ClientProxy get()>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCachingProvider: com.hazelcast.core.HazelcastInstance getOrCreateInstance(java.lang.ClassLoader,java.util.Properties,boolean)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future putAsyncInternal(long,java.util.concurrent.TimeUnit,com.hazelcast.nio.serialization.Data,com.hazelcast.nio.serialization.Data)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: java.lang.Object putIfAbsentInternal(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean,boolean)>",
    "<com.hazelcast.client.impl.ClusterAuthenticator: void authenticate(com.hazelcast.client.connection.nio.ClientConnection)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: com.hazelcast.client.ClientExtension createClientInitializer(java.lang.ClassLoader)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: void enableStatisticManagementOnNodes(java.lang.String,boolean,boolean)>",
    "<com.hazelcast.client.proxy.NearCachedClientMapProxy: void addNearCacheInvalidateListener(com.hazelcast.client.spi.EventHandler)>",
    "<com.hazelcast.client.map.impl.nearcache.ClientHeapNearCache: void fireEvictCache()>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest)>",
    "<com.hazelcast.client.spi.impl.ClientExecutionServiceImpl: com.hazelcast.core.ICompletableFuture submit(java.util.concurrent.Callable)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: java.lang.Object getInternal(java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: void submitToKeyInternal(com.hazelcast.nio.serialization.Data,com.hazelcast.map.EntryProcessor,com.hazelcast.core.ExecutionCallback)>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleListAddMany(java.lang.String[])>",
    "<com.hazelcast.client.impl.DefaultClientExtension: void <clinit>()>",
    "<com.hazelcast.client.connection.nio.ClientReadHandler: void handle()>",
    "<com.hazelcast.client.util.AddressHelper: java.util.Collection getPossibleSocketAddresses(int,java.lang.String,int)>",
    "<com.hazelcast.client.spi.impl.ClusterListenerSupport$ManagerAuthenticator: void authenticate(com.hazelcast.client.connection.nio.ClientConnection)>",
    "<com.hazelcast.client.spi.ClientProxy: void destroy()>",
    "<com.hazelcast.client.proxy.ClientExecutorServiceProxy: com.hazelcast.core.ICompletableFuture invokeOnTarget(com.hazelcast.client.impl.client.TargetClientRequest,com.hazelcast.nio.Address)>",
    "<com.hazelcast.client.impl.LifecycleServiceImpl: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl)>",
    "<com.hazelcast.client.spi.impl.ClientExecutionServiceImpl: com.hazelcast.core.ICompletableFuture submit(java.lang.Runnable)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: void destroy()>",
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: java.lang.Object getAndRemove(java.lang.Object)>",
    "<com.hazelcast.client.config.ClientConfig: void <clinit>()>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture removeAsyncInternal(java.lang.Object,java.lang.Object,boolean,boolean,boolean,boolean)>",
    "<com.hazelcast.client.impl.DefaultClientConnectionManagerFactory: void <clinit>()>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: void <clinit>()>",
    "<com.hazelcast.client.proxy.ClientConditionProxy: boolean awaitUntil(java.util.Date)>",
    "<com.hazelcast.client.txn.TransactionProxy: void begin()>",
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: boolean remove(java.lang.Object)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: com.hazelcast.config.CacheConfig createConfigOnPartition(com.hazelcast.config.CacheConfig)>",
    "<com.hazelcast.client.spi.impl.ClientInvocation: void <clinit>()>",
    "<com.hazelcast.client.spi.impl.ClientExecutionServiceImpl: void <clinit>()>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: void start()>",
    "<com.hazelcast.client.impl.DefaultClientExtension: com.hazelcast.internal.serialization.SerializationService createSerializationService()>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: void <init>(java.net.URL)>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl$HeartBeat: void run()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleSetRemoveMany(java.lang.String[])>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.client.spi.impl.ClientInvocationFuture invoke(com.hazelcast.client.impl.client.ClientRequest,int,boolean)>",
    "<com.hazelcast.client.spi.impl.ClientPartitionServiceImpl: void <clinit>()>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: java.lang.Object getSafely(java.util.concurrent.Future)>",
    "<com.hazelcast.client.spi.ProxyManager: com.hazelcast.client.spi.ClientProxy getOrCreateProxy(java.lang.String,java.lang.String)>",
    "<com.hazelcast.client.config.XmlClientConfigLocator: void <clinit>()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleQOfferMany(java.lang.String[])>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleSetAddMany(java.lang.String[])>",
    "<com.hazelcast.client.connection.nio.ClientConnection: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl,com.hazelcast.nio.tcp.nonblocking.NonBlockingIOThread,com.hazelcast.nio.tcp.nonblocking.NonBlockingIOThread,int,com.hazelcast.nio.tcp.SocketChannelWrapper)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invokeInterruptibly(com.hazelcast.client.impl.client.ClientRequest,java.lang.Object)>",
    "<com.hazelcast.client.spi.impl.ClientInvocationFuture: void <clinit>()>",
    "<com.hazelcast.client.proxy.ClientExecutorServiceProxy: com.hazelcast.core.ICompletableFuture invokeOnPartitionOwner(com.hazelcast.client.impl.client.ClientRequest,int)>",
    "<com.hazelcast.client.proxy.ClientReliableTopicProxy: void <init>(java.lang.String,com.hazelcast.client.impl.HazelcastClientInstanceImpl)>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl: com.hazelcast.client.connection.nio.ClientConnection createSocketConnection(com.hazelcast.nio.Address)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: java.lang.Object getAndReplace(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest,com.hazelcast.nio.Address)>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: com.hazelcast.client.config.ClientConfig build(java.lang.ClassLoader)>",
    "<com.hazelcast.client.spi.impl.ClientInvocationFuture: java.lang.Object get(long,java.util.concurrent.TimeUnit)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: com.hazelcast.config.CacheConfig createConfig(java.lang.String,com.hazelcast.config.CacheConfig,boolean,boolean)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invokeOnPartition(com.hazelcast.client.impl.client.ClientRequest,int)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: java.util.Collection getDistributedObjects()>",
    "<com.hazelcast.client.spi.impl.ClusterListenerSupport: void <clinit>()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: com.hazelcast.monitor.LocalMapStats getLocalMapStats()>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl: void authenticate(com.hazelcast.client.connection.Authenticator,com.hazelcast.client.connection.nio.ClientConnection)>",
    "<com.hazelcast.client.map.impl.nearcache.ClientHeapNearCache$2: void run()>",
    "<com.hazelcast.client.spi.impl.discovery.DiscoveryAddressProvider: void <clinit>()>",
    "<com.hazelcast.client.txn.proxy.xa.XATransactionProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: void clearInternal()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: com.hazelcast.core.ICompletableFuture getAsyncInternal(com.hazelcast.nio.serialization.Data)>",
    "<com.hazelcast.client.txn.proxy.ClientTxnProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest)>",
    "<com.hazelcast.client.spi.impl.ClientClusterServiceImpl: void <clinit>()>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl: void initializeSelectors(com.hazelcast.client.impl.HazelcastClientInstanceImpl)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.List getAllInternal(java.util.Map,java.util.Map)>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: void <clinit>()>",
    "<com.hazelcast.client.spi.impl.ClientInvocationFuture: java.lang.Object get()>",
    "<com.hazelcast.client.txn.proxy.xa.XATransactionProxy: void begin()>",
    "<com.hazelcast.client.txn.TransactionProxy: void checkTimeout()>"
  ],
  "3.6.1": [
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: boolean containsKey(java.lang.Object)>",
    "<com.hazelcast.client.txn.proxy.xa.XATransactionProxy: void checkTimeout()>",
    "<com.hazelcast.client.map.impl.nearcache.ClientHeapNearCache: void put(java.lang.Object,java.lang.Object)>",
    "<com.hazelcast.client.connection.nio.ClientWriteHandler: void handle()>",
    "<com.hazelcast.client.map.impl.nearcache.ClientHeapNearCache: void <init>(java.lang.String,com.hazelcast.client.spi.ClientContext,com.hazelcast.config.NearCacheConfig)>",
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: boolean remove(java.lang.Object,java.lang.Object)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: boolean replace(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.impl.LifecycleServiceImpl: com.hazelcast.logging.ILogger getLogger()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: org.w3c.dom.Document parse(java.io.InputStream)>",
    "<com.hazelcast.client.txn.proxy.xa.XATransactionProxy: void commit(boolean)>",
    "<com.hazelcast.client.spi.impl.ClientClusterServiceImpl: long getClusterTime()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleMapPutMany(java.lang.String[])>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: com.hazelcast.config.CacheConfig getCacheConfigFromPartition(java.lang.String,java.lang.String)>",
    "<com.hazelcast.client.txn.proxy.xa.XATransactionProxy: void prepare()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: void putAll(java.util.Map,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future removeAsyncInternal(com.hazelcast.nio.serialization.Data)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: void putAllInternal(java.util.List,com.hazelcast.map.impl.MapEntries[])>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: com.hazelcast.security.Credentials initCredentials(com.hazelcast.client.config.ClientConfig)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: void handleFailureOnCompletionListener(javax.cache.integration.CompletionListener,java.lang.Throwable)>",
    "<com.hazelcast.client.spi.impl.ClientInvocationServiceSupport: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl)>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl: void <clinit>()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest)>",
    "<com.hazelcast.client.spi.ProxyManager: java.lang.Object instantiateClientProxy(java.lang.Class,java.lang.String,java.lang.String)>",
    "<com.hazelcast.client.spi.impl.listener.ClientListenerServiceImpl: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl,int,int)>",
    "<com.hazelcast.client.util.ClientCancellableDelegatingFuture: java.lang.Boolean invokeCancelRequest(boolean)>",
    "<com.hazelcast.client.proxy.ClientExecutorServiceProxy: boolean isSyncComputation(boolean)>",
    "<com.hazelcast.client.map.impl.nearcache.ClientHeapNearCache: void fireTtlCleanup()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleMapRemoveMany(java.lang.String[])>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: void waitResponseFromAllPartitionsForPutAll(java.util.List,long)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: java.lang.Object putInternal(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean,boolean,boolean)>",
    "<com.hazelcast.client.util.ClientCancellableDelegatingFuture: boolean cancel(boolean)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: com.hazelcast.spi.discovery.integration.DiscoveryService initDiscoveryService(com.hazelcast.client.config.ClientConfig)>",
    "<com.hazelcast.client.proxy.ClientReliableTopicProxy: void publish(java.lang.Object)>",
    "<com.hazelcast.client.connection.nio.ClientReadHandler: void <init>(com.hazelcast.client.connection.nio.ClientConnection,com.hazelcast.nio.tcp.nonblocking.NonBlockingIOThread,int)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: void removeAllInternal(java.util.Set)>",
    "<com.hazelcast.client.connection.nio.ClientConnection: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl,int)>",
    "<com.hazelcast.client.txn.TransactionProxy: void commit()>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture replaceAsyncInternal(java.lang.Object,java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean,boolean,boolean,boolean)>",
    "<com.hazelcast.client.config.QueryCacheConfigBuilderHelper: void <init>()>",
    "<com.hazelcast.client.spi.impl.AwsAddressProvider: void <clinit>()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: int size()>",
    "<com.hazelcast.client.spi.impl.ClientMembershipListener: void <clinit>()>",
    "<com.hazelcast.client.spi.impl.ClusterListenerSupport: void connectToOne()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.lang.String addEntryListenerInternal(java.lang.Object,com.hazelcast.query.Predicate,boolean,java.lang.Object)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future submitToKeyInternal(com.hazelcast.nio.serialization.Data,com.hazelcast.map.EntryProcessor)>",
    "<com.hazelcast.client.connection.nio.AbstractClientSelectionHandler: void <init>(com.hazelcast.client.connection.nio.ClientConnection,com.hazelcast.nio.tcp.nonblocking.NonBlockingIOThread)>",
    "<com.hazelcast.client.spi.impl.ClientInvocationServiceSupport$ResponseThread: void run()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: void <init>(com.hazelcast.config.CacheConfig,com.hazelcast.client.spi.ClientContext)>",
    "<com.hazelcast.client.txn.proxy.xa.XAResourceProxy: void <clinit>()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleCommand(java.lang.String)>",
    "<com.hazelcast.client.cache.impl.ClientClusterWideIterator: com.hazelcast.cache.impl.CacheKeyIteratorResult fetch()>",
    "<com.hazelcast.client.txn.TransactionProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest,java.lang.Object)>",
    "<com.hazelcast.client.spi.ProxyManager: void init(com.hazelcast.client.config.ClientConfig)>",
    "<com.hazelcast.client.proxy.ClientReplicatedMapProxy: void addNearCacheInvalidateListener()>",
    "<com.hazelcast.client.spi.impl.AwsAddressTranslator: void <clinit>()>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCachingProvider: com.hazelcast.client.cache.impl.HazelcastClientCacheManager createHazelcastCacheManager(java.net.URI,java.lang.ClassLoader,java.util.Properties)>",
    "<com.hazelcast.client.proxy.ClientMapReduceProxy$ClientCompletableFuture: void <init>(com.hazelcast.client.proxy.ClientMapReduceProxy,java.lang.String)>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: void <init>()>",
    "<com.hazelcast.client.spi.impl.ClientExecutionServiceImpl: com.hazelcast.core.ICompletableFuture submitInternal(java.lang.Runnable)>",
    "<com.hazelcast.client.spi.ProxyManager$ClientProxyFuture: com.hazelcast.client.spi.ClientProxy get()>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCachingProvider: com.hazelcast.core.HazelcastInstance getOrCreateInstance(java.lang.ClassLoader,java.util.Properties,boolean)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future putAsyncInternal(long,java.util.concurrent.TimeUnit,com.hazelcast.nio.serialization.Data,com.hazelcast.nio.serialization.Data)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: java.lang.Object putIfAbsentInternal(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean,boolean)>",
    "<com.hazelcast.client.impl.ClusterAuthenticator: void authenticate(com.hazelcast.client.connection.nio.ClientConnection)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: com.hazelcast.client.ClientExtension createClientInitializer(java.lang.ClassLoader)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: void enableStatisticManagementOnNodes(java.lang.String,boolean,boolean)>",
    "<com.hazelcast.client.proxy.NearCachedClientMapProxy: void addNearCacheInvalidateListener(com.hazelcast.client.spi.EventHandler)>",
    "<com.hazelcast.client.map.impl.nearcache.ClientHeapNearCache: void fireEvictCache()>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest)>",
    "<com.hazelcast.client.spi.impl.ClientExecutionServiceImpl: com.hazelcast.core.ICompletableFuture submit(java.util.concurrent.Callable)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: java.lang.Object getInternal(java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: void submitToKeyInternal(com.hazelcast.nio.serialization.Data,com.hazelcast.map.EntryProcessor,com.hazelcast.core.ExecutionCallback)>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleListAddMany(java.lang.String[])>",
    "<com.hazelcast.client.impl.DefaultClientExtension: void <clinit>()>",
    "<com.hazelcast.client.connection.nio.ClientReadHandler: void handle()>",
    "<com.hazelcast.client.util.AddressHelper: java.util.Collection getPossibleSocketAddresses(int,java.lang.String,int)>",
    "<com.hazelcast.client.spi.impl.ClusterListenerSupport$ManagerAuthenticator: void authenticate(com.hazelcast.client.connection.nio.ClientConnection)>",
    "<com.hazelcast.client.spi.ClientProxy: void destroy()>",
    "<com.hazelcast.client.proxy.ClientExecutorServiceProxy: com.hazelcast.core.ICompletableFuture invokeOnTarget(com.hazelcast.client.impl.client.TargetClientRequest,com.hazelcast.nio.Address)>",
    "<com.hazelcast.client.impl.LifecycleServiceImpl: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl)>",
    "<com.hazelcast.client.spi.impl.ClientExecutionServiceImpl: com.hazelcast.core.ICompletableFuture submit(java.lang.Runnable)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: void destroy()>",
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: java.lang.Object getAndRemove(java.lang.Object)>",
    "<com.hazelcast.client.config.ClientConfig: void <clinit>()>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture removeAsyncInternal(java.lang.Object,java.lang.Object,boolean,boolean,boolean,boolean)>",
    "<com.hazelcast.client.impl.DefaultClientConnectionManagerFactory: void <clinit>()>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: void <clinit>()>",
    "<com.hazelcast.client.proxy.ClientConditionProxy: boolean awaitUntil(java.util.Date)>",
    "<com.hazelcast.client.txn.TransactionProxy: void begin()>",
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: boolean remove(java.lang.Object)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: com.hazelcast.config.CacheConfig createConfigOnPartition(com.hazelcast.config.CacheConfig)>",
    "<com.hazelcast.client.spi.impl.ClientInvocation: void <clinit>()>",
    "<com.hazelcast.client.spi.impl.ClientExecutionServiceImpl: void <clinit>()>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: void start()>",
    "<com.hazelcast.client.impl.DefaultClientExtension: com.hazelcast.internal.serialization.SerializationService createSerializationService()>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: void <init>(java.net.URL)>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl$HeartBeat: void run()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleSetRemoveMany(java.lang.String[])>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.client.spi.impl.ClientInvocationFuture invoke(com.hazelcast.client.impl.client.ClientRequest,int,boolean)>",
    "<com.hazelcast.client.spi.impl.ClientPartitionServiceImpl: void <clinit>()>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: java.lang.Object getSafely(java.util.concurrent.Future)>",
    "<com.hazelcast.client.spi.ProxyManager: com.hazelcast.client.spi.ClientProxy getOrCreateProxy(java.lang.String,java.lang.String)>",
    "<com.hazelcast.client.config.XmlClientConfigLocator: void <clinit>()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleQOfferMany(java.lang.String[])>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleSetAddMany(java.lang.String[])>",
    "<com.hazelcast.client.connection.nio.ClientConnection: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl,com.hazelcast.nio.tcp.nonblocking.NonBlockingIOThread,com.hazelcast.nio.tcp.nonblocking.NonBlockingIOThread,int,com.hazelcast.nio.tcp.SocketChannelWrapper)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invokeInterruptibly(com.hazelcast.client.impl.client.ClientRequest,java.lang.Object)>",
    "<com.hazelcast.client.spi.impl.ClientInvocationFuture: void <clinit>()>",
    "<com.hazelcast.client.proxy.ClientExecutorServiceProxy: com.hazelcast.core.ICompletableFuture invokeOnPartitionOwner(com.hazelcast.client.impl.client.ClientRequest,int)>",
    "<com.hazelcast.client.proxy.ClientReliableTopicProxy: void <init>(java.lang.String,com.hazelcast.client.impl.HazelcastClientInstanceImpl)>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl: com.hazelcast.client.connection.nio.ClientConnection createSocketConnection(com.hazelcast.nio.Address)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: java.lang.Object getAndReplace(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest,com.hazelcast.nio.Address)>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: com.hazelcast.client.config.ClientConfig build(java.lang.ClassLoader)>",
    "<com.hazelcast.client.spi.impl.ClientInvocationFuture: java.lang.Object get(long,java.util.concurrent.TimeUnit)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: com.hazelcast.config.CacheConfig createConfig(java.lang.String,com.hazelcast.config.CacheConfig,boolean,boolean)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invokeOnPartition(com.hazelcast.client.impl.client.ClientRequest,int)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: java.util.Collection getDistributedObjects()>",
    "<com.hazelcast.client.spi.impl.ClusterListenerSupport: void <clinit>()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: com.hazelcast.monitor.LocalMapStats getLocalMapStats()>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl: void authenticate(com.hazelcast.client.connection.Authenticator,com.hazelcast.client.connection.nio.ClientConnection)>",
    "<com.hazelcast.client.map.impl.nearcache.ClientHeapNearCache$2: void run()>",
    "<com.hazelcast.client.spi.impl.discovery.DiscoveryAddressProvider: void <clinit>()>",
    "<com.hazelcast.client.txn.proxy.xa.XATransactionProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: void clearInternal()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: com.hazelcast.core.ICompletableFuture getAsyncInternal(com.hazelcast.nio.serialization.Data)>",
    "<com.hazelcast.client.txn.proxy.ClientTxnProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest)>",
    "<com.hazelcast.client.spi.impl.ClientClusterServiceImpl: void <clinit>()>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl: void initializeSelectors(com.hazelcast.client.impl.HazelcastClientInstanceImpl)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.List getAllInternal(java.util.Map,java.util.Map)>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: void <clinit>()>",
    "<com.hazelcast.client.spi.impl.ClientInvocationFuture: java.lang.Object get()>",
    "<com.hazelcast.client.txn.proxy.xa.XATransactionProxy: void begin()>",
    "<com.hazelcast.client.txn.TransactionProxy: void checkTimeout()>"
  ],
  "3.6": [
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: boolean containsKey(java.lang.Object)>",
    "<com.hazelcast.client.txn.proxy.xa.XATransactionProxy: void checkTimeout()>",
    "<com.hazelcast.client.map.impl.nearcache.ClientHeapNearCache: void put(java.lang.Object,java.lang.Object)>",
    "<com.hazelcast.client.connection.nio.ClientWriteHandler: void handle()>",
    "<com.hazelcast.client.map.impl.nearcache.ClientHeapNearCache: void <init>(java.lang.String,com.hazelcast.client.spi.ClientContext,com.hazelcast.config.NearCacheConfig)>",
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: boolean remove(java.lang.Object,java.lang.Object)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: boolean replace(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.impl.LifecycleServiceImpl: com.hazelcast.logging.ILogger getLogger()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: org.w3c.dom.Document parse(java.io.InputStream)>",
    "<com.hazelcast.client.txn.proxy.xa.XATransactionProxy: void commit(boolean)>",
    "<com.hazelcast.client.spi.impl.ClientClusterServiceImpl: long getClusterTime()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleMapPutMany(java.lang.String[])>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: com.hazelcast.config.CacheConfig getCacheConfigFromPartition(java.lang.String,java.lang.String)>",
    "<com.hazelcast.client.txn.proxy.xa.XATransactionProxy: void prepare()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: void putAll(java.util.Map,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future removeAsyncInternal(com.hazelcast.nio.serialization.Data)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: void putAllInternal(java.util.List,com.hazelcast.map.impl.MapEntries[])>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: com.hazelcast.security.Credentials initCredentials(com.hazelcast.client.config.ClientConfig)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: void handleFailureOnCompletionListener(javax.cache.integration.CompletionListener,java.lang.Throwable)>",
    "<com.hazelcast.client.spi.impl.ClientInvocationServiceSupport: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl)>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl: void <clinit>()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest)>",
    "<com.hazelcast.client.spi.ProxyManager: java.lang.Object instantiateClientProxy(java.lang.Class,java.lang.String,java.lang.String)>",
    "<com.hazelcast.client.spi.impl.listener.ClientListenerServiceImpl: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl,int,int)>",
    "<com.hazelcast.client.util.ClientCancellableDelegatingFuture: java.lang.Boolean invokeCancelRequest(boolean)>",
    "<com.hazelcast.client.proxy.ClientExecutorServiceProxy: boolean isSyncComputation(boolean)>",
    "<com.hazelcast.client.map.impl.nearcache.ClientHeapNearCache: void fireTtlCleanup()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleMapRemoveMany(java.lang.String[])>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: void waitResponseFromAllPartitionsForPutAll(java.util.List,long)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: java.lang.Object putInternal(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean,boolean,boolean)>",
    "<com.hazelcast.client.util.ClientCancellableDelegatingFuture: boolean cancel(boolean)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: com.hazelcast.spi.discovery.integration.DiscoveryService initDiscoveryService(com.hazelcast.client.config.ClientConfig)>",
    "<com.hazelcast.client.proxy.ClientReliableTopicProxy: void publish(java.lang.Object)>",
    "<com.hazelcast.client.connection.nio.ClientReadHandler: void <init>(com.hazelcast.client.connection.nio.ClientConnection,com.hazelcast.nio.tcp.nonblocking.NonBlockingIOThread,int)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: void removeAllInternal(java.util.Set)>",
    "<com.hazelcast.client.connection.nio.ClientConnection: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl,int)>",
    "<com.hazelcast.client.txn.TransactionProxy: void commit()>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture replaceAsyncInternal(java.lang.Object,java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean,boolean,boolean,boolean)>",
    "<com.hazelcast.client.config.QueryCacheConfigBuilderHelper: void <init>()>",
    "<com.hazelcast.client.spi.impl.AwsAddressProvider: void <clinit>()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: int size()>",
    "<com.hazelcast.client.spi.impl.ClientMembershipListener: void <clinit>()>",
    "<com.hazelcast.client.spi.impl.ClusterListenerSupport: void connectToOne()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.lang.String addEntryListenerInternal(java.lang.Object,com.hazelcast.query.Predicate,boolean,java.lang.Object)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future submitToKeyInternal(com.hazelcast.nio.serialization.Data,com.hazelcast.map.EntryProcessor)>",
    "<com.hazelcast.client.connection.nio.AbstractClientSelectionHandler: void <init>(com.hazelcast.client.connection.nio.ClientConnection,com.hazelcast.nio.tcp.nonblocking.NonBlockingIOThread)>",
    "<com.hazelcast.client.spi.impl.ClientInvocationServiceSupport$ResponseThread: void run()>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: void <init>(com.hazelcast.config.CacheConfig,com.hazelcast.client.spi.ClientContext)>",
    "<com.hazelcast.client.txn.proxy.xa.XAResourceProxy: void <clinit>()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleCommand(java.lang.String)>",
    "<com.hazelcast.client.cache.impl.ClientClusterWideIterator: com.hazelcast.cache.impl.CacheKeyIteratorResult fetch()>",
    "<com.hazelcast.client.txn.TransactionProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest,java.lang.Object)>",
    "<com.hazelcast.client.spi.ProxyManager: void init(com.hazelcast.client.config.ClientConfig)>",
    "<com.hazelcast.client.proxy.ClientReplicatedMapProxy: void addNearCacheInvalidateListener()>",
    "<com.hazelcast.client.spi.impl.AwsAddressTranslator: void <clinit>()>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCachingProvider: com.hazelcast.client.cache.impl.HazelcastClientCacheManager createHazelcastCacheManager(java.net.URI,java.lang.ClassLoader,java.util.Properties)>",
    "<com.hazelcast.client.proxy.ClientMapReduceProxy$ClientCompletableFuture: void <init>(com.hazelcast.client.proxy.ClientMapReduceProxy,java.lang.String)>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: void <init>()>",
    "<com.hazelcast.client.spi.impl.ClientExecutionServiceImpl: com.hazelcast.core.ICompletableFuture submitInternal(java.lang.Runnable)>",
    "<com.hazelcast.client.spi.ProxyManager$ClientProxyFuture: com.hazelcast.client.spi.ClientProxy get()>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCachingProvider: com.hazelcast.core.HazelcastInstance getOrCreateInstance(java.lang.ClassLoader,java.util.Properties,boolean)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.concurrent.Future putAsyncInternal(long,java.util.concurrent.TimeUnit,com.hazelcast.nio.serialization.Data,com.hazelcast.nio.serialization.Data)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: java.lang.Object putIfAbsentInternal(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean,boolean)>",
    "<com.hazelcast.client.impl.ClusterAuthenticator: void authenticate(com.hazelcast.client.connection.nio.ClientConnection)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: com.hazelcast.client.ClientExtension createClientInitializer(java.lang.ClassLoader)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: void enableStatisticManagementOnNodes(java.lang.String,boolean,boolean)>",
    "<com.hazelcast.client.proxy.NearCachedClientMapProxy: void addNearCacheInvalidateListener(com.hazelcast.client.spi.EventHandler)>",
    "<com.hazelcast.client.map.impl.nearcache.ClientHeapNearCache: void fireEvictCache()>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest)>",
    "<com.hazelcast.client.spi.impl.ClientExecutionServiceImpl: com.hazelcast.core.ICompletableFuture submit(java.util.concurrent.Callable)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: java.lang.Object getInternal(java.lang.Object,javax.cache.expiry.ExpiryPolicy,boolean)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: void submitToKeyInternal(com.hazelcast.nio.serialization.Data,com.hazelcast.map.EntryProcessor,com.hazelcast.core.ExecutionCallback)>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleListAddMany(java.lang.String[])>",
    "<com.hazelcast.client.impl.DefaultClientExtension: void <clinit>()>",
    "<com.hazelcast.client.connection.nio.ClientReadHandler: void handle()>",
    "<com.hazelcast.client.util.AddressHelper: java.util.Collection getPossibleSocketAddresses(int,java.lang.String,int)>",
    "<com.hazelcast.client.spi.impl.ClusterListenerSupport$ManagerAuthenticator: void authenticate(com.hazelcast.client.connection.nio.ClientConnection)>",
    "<com.hazelcast.client.spi.ClientProxy: void destroy()>",
    "<com.hazelcast.client.proxy.ClientExecutorServiceProxy: com.hazelcast.core.ICompletableFuture invokeOnTarget(com.hazelcast.client.impl.client.TargetClientRequest,com.hazelcast.nio.Address)>",
    "<com.hazelcast.client.impl.LifecycleServiceImpl: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl)>",
    "<com.hazelcast.client.spi.impl.ClientExecutionServiceImpl: com.hazelcast.core.ICompletableFuture submit(java.lang.Runnable)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxyBase: void destroy()>",
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: java.lang.Object getAndRemove(java.lang.Object)>",
    "<com.hazelcast.client.config.ClientConfig: void <clinit>()>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.core.ICompletableFuture removeAsyncInternal(java.lang.Object,java.lang.Object,boolean,boolean,boolean,boolean)>",
    "<com.hazelcast.client.impl.DefaultClientConnectionManagerFactory: void <clinit>()>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: void <clinit>()>",
    "<com.hazelcast.client.proxy.ClientConditionProxy: boolean awaitUntil(java.util.Date)>",
    "<com.hazelcast.client.txn.TransactionProxy: void begin()>",
    "<com.hazelcast.client.cache.impl.ClientCacheProxy: boolean remove(java.lang.Object)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: com.hazelcast.config.CacheConfig createConfigOnPartition(com.hazelcast.config.CacheConfig)>",
    "<com.hazelcast.client.spi.impl.ClientInvocation: void <clinit>()>",
    "<com.hazelcast.client.spi.impl.ClientExecutionServiceImpl: void <clinit>()>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: void start()>",
    "<com.hazelcast.client.impl.DefaultClientExtension: com.hazelcast.internal.serialization.SerializationService createSerializationService()>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: void <init>(java.net.URL)>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl$HeartBeat: void run()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleSetRemoveMany(java.lang.String[])>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: com.hazelcast.client.spi.impl.ClientInvocationFuture invoke(com.hazelcast.client.impl.client.ClientRequest,int,boolean)>",
    "<com.hazelcast.client.spi.impl.ClientPartitionServiceImpl: void <clinit>()>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: java.lang.Object getSafely(java.util.concurrent.Future)>",
    "<com.hazelcast.client.spi.ProxyManager: com.hazelcast.client.spi.ClientProxy getOrCreateProxy(java.lang.String,java.lang.String)>",
    "<com.hazelcast.client.config.XmlClientConfigLocator: void <clinit>()>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleQOfferMany(java.lang.String[])>",
    "<com.hazelcast.client.console.ClientConsoleApp: void handleSetAddMany(java.lang.String[])>",
    "<com.hazelcast.client.connection.nio.ClientConnection: void <init>(com.hazelcast.client.impl.HazelcastClientInstanceImpl,com.hazelcast.nio.tcp.nonblocking.NonBlockingIOThread,com.hazelcast.nio.tcp.nonblocking.NonBlockingIOThread,int,com.hazelcast.nio.tcp.SocketChannelWrapper)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invokeInterruptibly(com.hazelcast.client.impl.client.ClientRequest,java.lang.Object)>",
    "<com.hazelcast.client.spi.impl.ClientInvocationFuture: void <clinit>()>",
    "<com.hazelcast.client.proxy.ClientExecutorServiceProxy: com.hazelcast.core.ICompletableFuture invokeOnPartitionOwner(com.hazelcast.client.impl.client.ClientRequest,int)>",
    "<com.hazelcast.client.proxy.ClientReliableTopicProxy: void <init>(java.lang.String,com.hazelcast.client.impl.HazelcastClientInstanceImpl)>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl: com.hazelcast.client.connection.nio.ClientConnection createSocketConnection(com.hazelcast.nio.Address)>",
    "<com.hazelcast.client.cache.impl.AbstractClientCacheProxy: java.lang.Object getAndReplace(java.lang.Object,java.lang.Object,javax.cache.expiry.ExpiryPolicy)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest,com.hazelcast.nio.Address)>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: com.hazelcast.client.config.ClientConfig build(java.lang.ClassLoader)>",
    "<com.hazelcast.client.spi.impl.ClientInvocationFuture: java.lang.Object get(long,java.util.concurrent.TimeUnit)>",
    "<com.hazelcast.client.cache.impl.HazelcastClientCacheManager: com.hazelcast.config.CacheConfig createConfig(java.lang.String,com.hazelcast.config.CacheConfig,boolean,boolean)>",
    "<com.hazelcast.client.spi.ClientProxy: java.lang.Object invokeOnPartition(com.hazelcast.client.impl.client.ClientRequest,int)>",
    "<com.hazelcast.client.impl.HazelcastClientInstanceImpl: java.util.Collection getDistributedObjects()>",
    "<com.hazelcast.client.spi.impl.ClusterListenerSupport: void <clinit>()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: com.hazelcast.monitor.LocalMapStats getLocalMapStats()>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl: void authenticate(com.hazelcast.client.connection.Authenticator,com.hazelcast.client.connection.nio.ClientConnection)>",
    "<com.hazelcast.client.map.impl.nearcache.ClientHeapNearCache$2: void run()>",
    "<com.hazelcast.client.spi.impl.discovery.DiscoveryAddressProvider: void <clinit>()>",
    "<com.hazelcast.client.txn.proxy.xa.XATransactionProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest)>",
    "<com.hazelcast.client.cache.impl.AbstractClientInternalCacheProxy: void clearInternal()>",
    "<com.hazelcast.client.proxy.ClientMapProxy: com.hazelcast.core.ICompletableFuture getAsyncInternal(com.hazelcast.nio.serialization.Data)>",
    "<com.hazelcast.client.txn.proxy.ClientTxnProxy: java.lang.Object invoke(com.hazelcast.client.impl.client.ClientRequest)>",
    "<com.hazelcast.client.spi.impl.ClientClusterServiceImpl: void <clinit>()>",
    "<com.hazelcast.client.connection.nio.ClientConnectionManagerImpl: void initializeSelectors(com.hazelcast.client.impl.HazelcastClientInstanceImpl)>",
    "<com.hazelcast.client.proxy.ClientMapProxy: java.util.List getAllInternal(java.util.Map,java.util.Map)>",
    "<com.hazelcast.client.config.XmlClientConfigBuilder: void <clinit>()>",
    "<com.hazelcast.client.spi.impl.ClientInvocationFuture: java.lang.Object get()>",
    "<com.hazelcast.client.txn.proxy.xa.XATransactionProxy: void begin()>",
    "<com.hazelcast.client.txn.TransactionProxy: void checkTimeout()>"
  ]
}