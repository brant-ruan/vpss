{
  "0.14.0": [
    "<org.apache.solr.core.HdfsDirectoryFactory: long size(java.lang.String)>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory: shade.logisland.chronix.solr642.org.apache.lucene.store.Lock obtainLock(shade.logisland.chronix.solr642.org.apache.lucene.store.Directory,java.lang.String)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: org.apache.hadoop.fs.FileSystem lambda$removeDirectory$1(org.apache.solr.core.CachingDirectoryFactory$CacheValue,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: void move(shade.logisland.chronix.solr642.org.apache.lucene.store.Directory,shade.logisland.chronix.solr642.org.apache.lucene.store.Directory,java.lang.String,shade.logisland.chronix.solr642.org.apache.lucene.store.IOContext)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: org.apache.hadoop.fs.FileSystem lambda$cleanupOldIndexDirectories$2(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: void renameWithOverwrite(shade.logisland.chronix.solr642.org.apache.lucene.store.Directory,java.lang.String,java.lang.String)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: void initKerberos()>",
    "<org.apache.solr.core.backup.repository.HdfsBackupRepository: void init(org.apache.solr.common.util.NamedList)>",
    "<org.apache.solr.store.hdfs.HdfsDirectory: void <init>(org.apache.hadoop.fs.Path,shade.logisland.chronix.solr642.org.apache.lucene.store.LockFactory,org.apache.hadoop.conf.Configuration,int)>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory$HdfsLock: void close()>",
    "<org.apache.solr.core.HdfsDirectoryFactory: org.apache.hadoop.fs.FileSystem lambda$exists$0(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.update.HdfsUpdateLog: void init(org.apache.solr.update.UpdateHandler,org.apache.solr.core.SolrCore)>"
  ]
}