{
  "1.8.0": [
    "<hive.org.apache.calcite.avatica.AvaticaStatement: java.sql.ResultSet executeQuery(java.lang.String)>",
    "<hive.com.google.common.collect.LinkedHashMultimap$ValueSet: boolean add(java.lang.Object)>",
    "<hive.parquet.org.codehaus.jackson.map.deser.StdDeserializerProvider: hive.parquet.org.codehaus.jackson.map.JsonDeserializer _createAndCache2(hive.parquet.org.codehaus.jackson.map.DeserializationConfig,hive.parquet.org.codehaus.jackson.type.JavaType,hive.parquet.org.codehaus.jackson.map.BeanProperty)>",
    "<hive.parquet.org.codehaus.jackson.map.deser.std.StdValueInstantiator: hive.parquet.org.codehaus.jackson.map.JsonMappingException wrapException(java.lang.Throwable)>",
    "<hive.parquet.org.codehaus.jackson.map.ext.JodaDeserializers$JodaDeserializer: org.joda.time.DateTime parseLocal(hive.parquet.org.codehaus.jackson.JsonParser)>",
    "<hive.parquet.org.codehaus.jackson.map.deser.SettableAnyProperty: void _throwAsIOE(java.lang.Exception,java.lang.String,java.lang.Object)>",
    "<hive.com.google.common.util.concurrent.Futures: java.lang.Object newFromConstructor(java.lang.reflect.Constructor,java.lang.Throwable)>",
    "<hive.parquet.org.codehaus.jackson.map.ser.StdSerializerProvider: void _serializeValue(hive.parquet.org.codehaus.jackson.JsonGenerator,java.lang.Object)>",
    "<hive.parquet.org.codehaus.jackson.map.util.ClassUtil: java.lang.Object createInstance(java.lang.Class,boolean)>",
    "<hive.com.google.protobuf.SmallSortedMap$Entry: boolean equals(java.lang.Object,java.lang.Object)>",
    "<hive.com.google.common.collect.RegularImmutableSet: boolean contains(java.lang.Object)>",
    "<hive.parquet.org.codehaus.jackson.map.ext.JodaDeserializers$PeriodDeserializer: org.joda.time.ReadablePeriod deserialize(hive.parquet.org.codehaus.jackson.JsonParser,hive.parquet.org.codehaus.jackson.map.DeserializationContext)>",
    "<hive.parquet.org.apache.thrift.TBaseHelper: int compareTo(java.lang.Comparable,java.lang.Comparable)>",
    "<hive.parquet.org.codehaus.jackson.map.util.ClassUtil: java.lang.Class findClass(java.lang.String)>",
    "<hive.com.google.protobuf.SmallSortedMap: int binarySearchInArray(java.lang.Comparable)>",
    "<hive.parquet.org.codehaus.jackson.map.ser.StdSerializerProvider: void _serializeValue(hive.parquet.org.codehaus.jackson.JsonGenerator,java.lang.Object,hive.parquet.org.codehaus.jackson.type.JavaType)>",
    "<hive.org.apache.calcite.runtime.FlatLists$Flat2List: int indexOf(java.lang.Object)>",
    "<hive.parquet.format.Statistics: int hashCode()>",
    "<hive.com.google.common.collect.LinkedHashMultimap$ValueSet: boolean contains(java.lang.Object)>",
    "<hive.org.apache.calcite.sql.parser.impl.SqlParserImpl: hive.org.apache.calcite.sql.parser.SqlParseException convertException(java.lang.Throwable)>",
    "<hive.com.google.common.collect.SingletonImmutableList: java.lang.String toString()>",
    "<hive.com.google.common.collect.RegularImmutableList: boolean equals(java.lang.Object)>",
    "<hive.parquet.org.codehaus.jackson.map.introspect.BasicBeanDescription: java.lang.Object instantiateBean(boolean)>",
    "<hive.parquet.format.ColumnMetaData: int hashCode()>",
    "<hive.parquet.format.PageHeader: int hashCode()>",
    "<hive.com.google.common.base.Present: int hashCode()>",
    "<hive.com.google.common.collect.SingletonImmutableSet: int hashCode()>",
    "<hive.org.apache.calcite.runtime.Utilities: boolean equal(java.lang.Object,java.lang.Object)>",
    "<hive.parquet.org.codehaus.jackson.impl.Utf8StreamParser: byte[] getBinaryValue(hive.parquet.org.codehaus.jackson.Base64Variant)>",
    "<hive.com.google.common.collect.LinkedHashMultimap$ValueSet$1: void remove()>",
    "<hive.parquet.org.codehaus.jackson.map.ext.JodaSerializers$JodaSerializer: java.lang.String printLocalDate(org.joda.time.ReadablePartial)>",
    "<hive.org.apache.calcite.util.Permutation: boolean equals(java.lang.Object)>",
    "<hive.com.google.common.collect.Cut$AboveValue: int hashCode()>",
    "<hive.org.apache.calcite.avatica.AvaticaStatement: void executeInternal(java.lang.String)>",
    "<hive.com.google.common.collect.SingletonImmutableSet: boolean contains(java.lang.Object)>",
    "<hive.com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)>",
    "<hive.com.google.common.collect.ReverseNaturalOrdering: int compare(java.lang.Comparable,java.lang.Comparable)>",
    "<hive.com.google.common.collect.ImmutableSet: boolean equals(java.lang.Object)>",
    "<hive.org.apache.calcite.sql.SqlUtil: java.lang.String getAliasedSignature(hive.org.apache.calcite.sql.SqlOperator,java.lang.String,java.util.List)>",
    "<hive.parquet.org.codehaus.jackson.map.ser.BasicSerializerFactory: hive.parquet.org.codehaus.jackson.map.JsonSerializer findSerializerByLookup(hive.parquet.org.codehaus.jackson.type.JavaType,hive.parquet.org.codehaus.jackson.map.SerializationConfig,hive.parquet.org.codehaus.jackson.map.introspect.BasicBeanDescription,hive.parquet.org.codehaus.jackson.map.BeanProperty,boolean)>",
    "<hive.parquet.org.codehaus.jackson.map.ser.StdSerializerProvider: hive.parquet.org.codehaus.jackson.map.JsonSerializer _createAndCacheUntypedSerializer(hive.parquet.org.codehaus.jackson.type.JavaType,hive.parquet.org.codehaus.jackson.map.BeanProperty)>",
    "<hive.com.google.common.collect.RegularContiguousSet: hive.com.google.common.collect.ContiguousSet intersection(hive.com.google.common.collect.ContiguousSet)>",
    "<hive.com.google.protobuf.AbstractMessage: int hashFields(int,java.util.Map)>",
    "<hive.com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>",
    "<hive.com.google.common.collect.Iterators: boolean contains(java.util.Iterator,java.lang.Object)>",
    "<hive.com.google.common.collect.SingletonImmutableList: boolean contains(java.lang.Object)>",
    "<hive.com.google.common.base.Equivalence$Equals: int doHash(java.lang.Object)>",
    "<hive.org.apache.calcite.util.mapping.Mappings$FiniteAbstractMapping: boolean equals(java.lang.Object)>",
    "<hive.parquet.org.codehaus.jackson.map.JsonMappingException: hive.parquet.org.codehaus.jackson.map.JsonMappingException wrapWithPath(java.lang.Throwable,hive.parquet.org.codehaus.jackson.map.JsonMappingException$Reference)>",
    "<hive.parquet.org.codehaus.jackson.map.ext.JodaDeserializers$DateTimeDeserializer: org.joda.time.ReadableInstant deserialize(hive.parquet.org.codehaus.jackson.JsonParser,hive.parquet.org.codehaus.jackson.map.DeserializationContext)>",
    "<hive.com.google.common.collect.Sets: int hashCodeImpl(java.util.Set)>",
    "<hive.org.apache.calcite.avatica.AvaticaConnection: java.sql.ResultSet executeQueryInternal(hive.org.apache.calcite.avatica.AvaticaStatement,hive.org.apache.calcite.avatica.Meta$Signature,hive.org.apache.calcite.avatica.Meta$Frame)>",
    "<hive.com.google.common.collect.RegularImmutableMap: java.lang.Object get(java.lang.Object)>",
    "<hive.com.google.protobuf.SmallSortedMap$EntrySet: boolean contains(java.lang.Object)>",
    "<hive.parquet.org.codehaus.jackson.map.deser.SettableBeanProperty: void _throwAsIOE(java.lang.Exception,java.lang.Object)>",
    "<hive.com.google.common.collect.ImmutableSortedAsList: int indexOf(java.lang.Object)>",
    "<hive.com.google.common.collect.Range: int compareOrThrow(java.lang.Comparable,java.lang.Comparable)>",
    "<hive.parquet.org.codehaus.jackson.map.deser.std.StdDeserializer: java.util.Date _parseDate(hive.parquet.org.codehaus.jackson.JsonParser,hive.parquet.org.codehaus.jackson.map.DeserializationContext)>",
    "<hive.org.apache.calcite.sql.parser.impl.SimpleCharStream: void ExpandBuff(boolean)>",
    "<hive.com.google.protobuf.LiteralByteString: boolean equals(java.lang.Object)>",
    "<hive.parquet.format.KeyValue: int hashCode()>",
    "<hive.org.apache.calcite.adapter.clone.ColumnLoader$ValueSet: void add(java.lang.Comparable)>",
    "<hive.parquet.org.codehaus.jackson.map.deser.SettableBeanProperty: java.io.IOException _throwAsIOE(java.lang.Exception)>",
    "<hive.org.apache.calcite.adapter.enumerable.RexImpTable: boolean allSame(java.util.List)>",
    "<hive.org.apache.calcite.runtime.Utilities: int hash(java.lang.Object)>",
    "<hive.parquet.org.codehaus.jackson.map.type.TypeParser: java.lang.Class findClass(java.lang.String,hive.parquet.org.codehaus.jackson.map.type.TypeParser$MyTokenizer)>",
    "<hive.parquet.format.FileMetaData: int hashCode()>",
    "<hive.com.google.common.collect.Multisets$AbstractEntry: int hashCode()>",
    "<hive.org.apache.calcite.util.ImmutableIntList: boolean equals(java.lang.Object)>",
    "<hive.org.apache.calcite.util.Util: java.lang.String sepList(java.util.List,java.lang.String)>",
    "<hive.parquet.org.codehaus.jackson.map.util.ClassUtil: void throwAsIAE(java.lang.Throwable)>",
    "<hive.com.google.common.collect.ImmutableSetMultimap: void readObject(java.io.ObjectInputStream)>",
    "<hive.parquet.format.DataPageHeader: int hashCode()>",
    "<hive.com.google.common.collect.RegularImmutableMap: void <init>(java.util.Map$Entry[])>",
    "<hive.parquet.org.codehaus.jackson.map.ext.DOMDeserializer: org.w3c.dom.Document parse(java.lang.String)>",
    "<hive.parquet.org.codehaus.jackson.map.deser.std.StdKeyDeserializer: java.lang.Object deserializeKey(java.lang.String,hive.parquet.org.codehaus.jackson.map.DeserializationContext)>",
    "<hive.parquet.org.codehaus.jackson.impl.ReaderBasedParser: byte[] getBinaryValue(hive.parquet.org.codehaus.jackson.Base64Variant)>",
    "<hive.com.google.common.collect.RegularImmutableBiMap: void <init>(java.util.Collection)>",
    "<hive.parquet.org.codehaus.jackson.map.ser.StdSerializerProvider: hive.parquet.org.codehaus.jackson.map.JsonSerializer _createAndCacheUntypedSerializer(java.lang.Class,hive.parquet.org.codehaus.jackson.map.BeanProperty)>",
    "<hive.parquet.format.DataPageHeaderV2: int hashCode()>",
    "<hive.com.google.common.collect.AbstractMapEntry: int hashCode()>",
    "<hive.org.apache.calcite.util.Pair: int compare(java.lang.Comparable,java.lang.Comparable)>",
    "<hive.parquet.org.codehaus.jackson.map.ext.JodaDeserializers$LocalDateTimeDeserializer: org.joda.time.LocalDateTime deserialize(hive.parquet.org.codehaus.jackson.JsonParser,hive.parquet.org.codehaus.jackson.map.DeserializationContext)>",
    "<hive.com.google.common.collect.SingletonImmutableBiMap: boolean containsKey(java.lang.Object)>",
    "<hive.parquet.org.codehaus.jackson.map.ext.DOMSerializer: void <init>()>",
    "<hive.parquet.format.ColumnChunk: int hashCode()>",
    "<hive.parquet.org.codehaus.jackson.map.deser.StdDeserializationContext: hive.parquet.org.codehaus.jackson.map.JsonMappingException instantiationException(java.lang.Class,java.lang.Throwable)>",
    "<hive.parquet.example.data.simple.SimpleGroup: java.lang.String toString(java.lang.String)>",
    "<hive.com.google.common.collect.UsingToStringOrdering: int compare(java.lang.Object,java.lang.Object)>",
    "<hive.com.google.common.collect.NaturalOrdering: int compare(java.lang.Comparable,java.lang.Comparable)>",
    "<hive.com.google.common.collect.ImmutableSet: hive.com.google.common.collect.ImmutableSet construct(int,java.lang.Object[])>",
    "<hive.org.apache.calcite.util.Util: int hash(int,java.lang.Object)>",
    "<hive.com.google.common.collect.SingletonImmutableList: boolean equals(java.lang.Object)>",
    "<hive.parquet.org.codehaus.jackson.map.util.ClassUtil: java.lang.reflect.Constructor findConstructor(java.lang.Class,boolean)>",
    "<hive.org.apache.calcite.runtime.FlatLists$Flat3List: boolean equals(java.lang.Object)>",
    "<hive.com.google.protobuf.SmallSortedMap$Entry: int compareTo(hive.com.google.protobuf.SmallSortedMap$Entry)>",
    "<hive.com.google.common.collect.SingletonImmutableSet: java.lang.String toString()>",
    "<hive.parquet.org.codehaus.jackson.map.deser.SettableBeanProperty$InnerClassProperty: void deserializeAndSet(hive.parquet.org.codehaus.jackson.JsonParser,hive.parquet.org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>",
    "<hive.com.google.common.collect.ImmutableListMultimap: void readObject(java.io.ObjectInputStream)>",
    "<hive.parquet.org.codehaus.jackson.map.jsontype.impl.ClassNameIdResolver: hive.parquet.org.codehaus.jackson.type.JavaType typeFromId(java.lang.String)>",
    "<hive.com.google.common.collect.SingletonImmutableSet: boolean equals(java.lang.Object)>",
    "<hive.org.apache.calcite.rex.RexUtil$3: java.lang.String apply(java.lang.Object)>",
    "<hive.com.google.common.collect.SingletonImmutableList: int indexOf(java.lang.Object)>",
    "<hive.parquet.org.codehaus.jackson.map.ext.JodaDeserializers$LocalDateDeserializer: org.joda.time.LocalDate deserialize(hive.parquet.org.codehaus.jackson.JsonParser,hive.parquet.org.codehaus.jackson.map.DeserializationContext)>",
    "<hive.com.google.common.collect.SingletonImmutableBiMap: boolean containsValue(java.lang.Object)>",
    "<hive.com.google.common.collect.Cut$BelowValue: int hashCode()>",
    "<hive.com.google.protobuf.SmallSortedMap$Entry: int hashCode()>",
    "<hive.parquet.org.codehaus.jackson.map.ext.JodaSerializers$JodaSerializer: java.lang.String printLocalDate(org.joda.time.ReadableInstant)>",
    "<hive.com.google.common.collect.ImmutableMapEntrySet: boolean contains(java.lang.Object)>",
    "<hive.org.apache.calcite.sql.advise.SqlAdvisor: java.util.List validate(java.lang.String)>",
    "<hive.com.google.common.base.Present: boolean equals(java.lang.Object)>",
    "<hive.org.apache.calcite.runtime.Utilities: int compare(java.lang.Comparable,java.lang.Comparable)>",
    "<hive.parquet.hadoop.codec.CodecConfig: hive.parquet.hadoop.metadata.CompressionCodecName getHadoopCompressionCodec()>",
    "<hive.parquet.org.codehaus.jackson.map.ser.BasicSerializerFactory: hive.parquet.org.codehaus.jackson.type.JavaType modifySecondaryTypesByAnnotation(hive.parquet.org.codehaus.jackson.map.SerializationConfig,hive.parquet.org.codehaus.jackson.map.introspect.Annotated,hive.parquet.org.codehaus.jackson.type.JavaType)>",
    "<hive.com.google.common.collect.SingletonImmutableList: int hashCode()>",
    "<hive.parquet.org.codehaus.jackson.map.deser.BasicDeserializerFactory: hive.parquet.org.codehaus.jackson.type.JavaType modifyTypeByAnnotation(hive.parquet.org.codehaus.jackson.map.DeserializationConfig,hive.parquet.org.codehaus.jackson.map.introspect.Annotated,hive.parquet.org.codehaus.jackson.type.JavaType,java.lang.String)>",
    "<hive.parquet.org.codehaus.jackson.map.ext.JodaDeserializers$DateMidnightDeserializer: org.joda.time.DateMidnight deserialize(hive.parquet.org.codehaus.jackson.JsonParser,hive.parquet.org.codehaus.jackson.map.DeserializationContext)>",
    "<hive.com.google.common.collect.Lists: int hashCodeImpl(java.util.List)>",
    "<hive.org.apache.calcite.adapter.clone.ColumnLoader$Kev: int compareTo(hive.org.apache.calcite.adapter.clone.ColumnLoader$Kev)>",
    "<hive.parquet.format.SchemaElement: int hashCode()>",
    "<hive.parquet.org.codehaus.jackson.map.ser.BasicSerializerFactory: hive.parquet.org.codehaus.jackson.type.JavaType modifyTypeByAnnotation(hive.parquet.org.codehaus.jackson.map.SerializationConfig,hive.parquet.org.codehaus.jackson.map.introspect.Annotated,hive.parquet.org.codehaus.jackson.type.JavaType)>",
    "<hive.parquet.format.RowGroup: int hashCode()>",
    "<hive.com.google.common.collect.SingletonImmutableBiMap: java.lang.Object get(java.lang.Object)>",
    "<hive.com.google.common.cache.RemovalNotification: int hashCode()>",
    "<hive.parquet.org.apache.thrift.transport.TSaslTransport: void sendAndThrowMessage(hive.parquet.org.apache.thrift.transport.TSaslTransport$NegotiationStatus,java.lang.String)>",
    "<hive.com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException: java.lang.String getMessage()>",
    "<hive.com.google.common.collect.HashBiMap: int hash(java.lang.Object)>",
    "<hive.com.google.common.base.Functions$ToStringFunction: java.lang.String apply(java.lang.Object)>",
    "<hive.parquet.org.codehaus.jackson.map.ext.JodaSerializers$JodaSerializer: java.lang.String printLocalDateTime(org.joda.time.ReadablePartial)>"
  ]
}