{
  "0.7.1": [
    "<org.apache.hama.ml.recommendation.cf.InputConverter: boolean convert(java.lang.String)>",
    "<org.apache.hama.ml.kmeans.KMeansBSP: void prepareInput(int,int,int,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.FileSystem)>",
    "<org.apache.hama.ml.kmeans.KMeansBSP: void setup(org.apache.hama.bsp.BSPPeer)>",
    "<org.apache.hama.ml.semiclustering.SemiClusteringVertex: void initClusters()>",
    "<org.apache.hama.ml.kmeans.KMeansBSP: void main(java.lang.String[])>",
    "<org.apache.hama.ml.kmeans.KMeansBSP: org.apache.hadoop.fs.Path prepareInputText(int,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.FileSystem,boolean)>",
    "<org.apache.hama.ml.kmeans.KMeansBSP: void recalculateAssignmentsAndWrite(org.apache.hama.bsp.BSPPeer)>",
    "<org.apache.hama.ml.regression.VectorDoubleFileInputFormat$VectorDoubleRecorderReader: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hama.bsp.FileSplit)>",
    "<org.apache.hama.ml.semiclustering.SemiClusteringVertex: void compute(java.lang.Iterable)>",
    "<org.apache.hama.ml.recommendation.cf.OnlineCF: boolean load(java.lang.String,boolean)>",
    "<org.apache.hama.ml.kmeans.KMeansBSP: java.util.HashMap readClusterCenters(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.FileSystem)>"
  ],
  "0.7.0": [
    "<org.apache.hama.ml.recommendation.cf.InputConverter: boolean convert(java.lang.String)>",
    "<org.apache.hama.ml.kmeans.KMeansBSP: void prepareInput(int,int,int,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.FileSystem)>",
    "<org.apache.hama.ml.kmeans.KMeansBSP: void setup(org.apache.hama.bsp.BSPPeer)>",
    "<org.apache.hama.ml.semiclustering.SemiClusteringVertex: void initClusters()>",
    "<org.apache.hama.ml.perception.SmallMultiLayerPerceptron: void readFromModel()>",
    "<org.apache.hama.ml.ann.SmallLayeredNeuralNetwork: void trainInternal(org.apache.hadoop.fs.Path,java.util.Map)>",
    "<org.apache.hama.ml.kmeans.KMeansBSP: void main(java.lang.String[])>",
    "<org.apache.hama.ml.perception.SmallMultiLayerPerceptron: void train(org.apache.hadoop.fs.Path,java.util.Map)>",
    "<org.apache.hama.ml.perception.SmallMultiLayerPerceptron: void writeModelToFile(java.lang.String)>",
    "<org.apache.hama.ml.kmeans.KMeansBSP: org.apache.hadoop.fs.Path prepareInputText(int,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.FileSystem,boolean)>",
    "<org.apache.hama.ml.recommendation.cf.OnlineCF: boolean load(java.lang.String,boolean)>",
    "<org.apache.hama.ml.kmeans.KMeansBSP: void recalculateAssignmentsAndWrite(org.apache.hama.bsp.BSPPeer)>",
    "<org.apache.hama.ml.regression.VectorDoubleFileInputFormat$VectorDoubleRecorderReader: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hama.bsp.FileSplit)>",
    "<org.apache.hama.ml.semiclustering.SemiClusteringVertex: void compute(java.lang.Iterable)>",
    "<org.apache.hama.ml.ann.NeuralNetwork: void readFromModel()>",
    "<org.apache.hama.ml.ann.NeuralNetwork: void writeModelToFile()>",
    "<org.apache.hama.ml.kmeans.KMeansBSP: java.util.HashMap readClusterCenters(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.FileSystem)>"
  ]
}