{
  "0.7.0": [
    "<org.apache.hama.bsp.FileOutputFormat: void checkOutputSpecs(org.apache.hadoop.fs.FileSystem,org.apache.hama.bsp.BSPJob)>",
    "<org.apache.hama.bsp.FileInputFormat: void setInputPaths(org.apache.hama.bsp.BSPJob,org.apache.hadoop.fs.Path[])>",
    "<org.apache.hama.bsp.BSPMaster: void <init>(org.apache.hama.HamaConfiguration,java.lang.String)>",
    "<org.apache.hama.bsp.BSPMaster: java.net.InetSocketAddress getAddress(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hama.BSPMasterRunner: void main(java.lang.String[])>",
    "<org.apache.hama.GroomServerRunner: void main(java.lang.String[])>",
    "<org.apache.hama.pipes.PipesApplication: java.util.List setupCommand(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hama.bsp.JobInProgress: void initTasks()>",
    "<org.apache.hama.bsp.BSPJobClient: java.io.DataOutputStream writeSplitsFileHeader(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,int)>",
    "<org.apache.hama.bsp.BSPPeerImpl: void deleteLocalFiles()>",
    "<org.apache.hama.bsp.LineRecordReader: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hama.bsp.FileSplit)>",
    "<org.apache.hama.ipc.RPC: org.apache.hama.ipc.VersionedProtocol getProxy(java.lang.Class,long,java.net.InetSocketAddress,org.apache.hadoop.security.UserGroupInformation,org.apache.hadoop.conf.Configuration,javax.net.SocketFactory,int,org.apache.hama.ipc.RetryPolicy,boolean)>",
    "<org.apache.hama.bsp.BSPJobContext: org.apache.hadoop.fs.Path getWorkingDirectory()>",
    "<org.apache.hama.bsp.BSPJobClient: org.apache.hadoop.fs.FileSystem getFs()>",
    "<org.apache.hama.ipc.RPC: org.apache.hama.ipc.VersionedProtocol getProxy(java.lang.Class,long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration,javax.net.SocketFactory,int)>",
    "<org.apache.hama.ipc.ConnectionHeader: void readFields(java.io.DataInput)>",
    "<org.apache.hama.bsp.Counters: java.lang.String unescape(java.lang.String)>",
    "<org.apache.hama.bsp.GroomServer: void deleteLocalFiles(java.lang.String)>",
    "<org.apache.hama.bsp.BSPMaster: void deleteLocalFiles()>",
    "<org.apache.hama.bsp.ft.AsyncRcvdMsgCheckpointImpl$CheckpointPeerService: void initialize(org.apache.hama.bsp.BSPJob,org.apache.hama.bsp.BSPPeer,org.apache.hama.bsp.sync.PeerSyncClient,java.net.InetSocketAddress,org.apache.hama.bsp.TaskAttemptID,long,org.apache.hadoop.conf.Configuration,org.apache.hama.bsp.message.MessageManager)>",
    "<org.apache.hama.bsp.BSPPeerImpl: void <init>(org.apache.hama.bsp.BSPJob,org.apache.hama.HamaConfiguration,org.apache.hama.bsp.TaskAttemptID,org.apache.hama.ipc.BSPPeerProtocol,int,java.lang.String,org.apache.hadoop.io.BytesWritable,org.apache.hama.bsp.Counters,long,org.apache.hama.bsp.TaskStatus$State)>",
    "<org.apache.hama.bsp.GroomServer: void initialize()>",
    "<org.apache.hama.ipc.AsyncRPC: org.apache.hama.ipc.VersionedProtocol getProxy(java.lang.Class,long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration,javax.net.SocketFactory)>",
    "<org.apache.hama.util.RunJar$1: void run()>",
    "<org.apache.hama.bsp.TaskLog: void cleanup(int)>",
    "<org.apache.hama.bsp.SequenceFileRecordReader: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hama.bsp.FileSplit)>",
    "<org.apache.hama.bsp.GroomServer: void localizeJob(org.apache.hama.bsp.GroomServer$TaskInProgress)>",
    "<org.apache.hama.bsp.TextOutputFormat: org.apache.hama.bsp.RecordWriter getRecordWriter(org.apache.hadoop.fs.FileSystem,org.apache.hama.bsp.BSPJob,java.lang.String)>",
    "<org.apache.hama.ZooKeeperRunner: void main(java.lang.String[])>",
    "<org.apache.hama.bsp.BSPJobClient: void main(java.lang.String[])>",
    "<org.apache.hama.ipc.RPC: org.apache.hama.ipc.VersionedProtocol getProxy(java.lang.Class,long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration,javax.net.SocketFactory)>",
    "<org.apache.hama.bsp.GroomServer$TaskInProgress: void localizeTask(org.apache.hama.bsp.Task)>",
    "<org.apache.hama.bsp.TextInputFormat: boolean isSplitable(org.apache.hama.bsp.BSPJob,org.apache.hadoop.fs.Path)>",
    "<org.apache.hama.pipes.util.SequenceFileDumper: void main(java.lang.String[])>",
    "<org.apache.hama.pipes.protocol.UplinkReader: void seqFileOpen()>",
    "<org.apache.hama.bsp.FileInputFormat: void addInputPath(org.apache.hama.bsp.BSPJob,org.apache.hadoop.fs.Path)>",
    "<org.apache.hama.pipes.Submitter: int run(java.lang.String[])>",
    "<org.apache.hama.ipc.Server: void <init>(java.lang.String,int,java.lang.Class,int,org.apache.hadoop.conf.Configuration,java.lang.String,org.apache.hadoop.security.token.SecretManager)>",
    "<org.apache.hama.bsp.JobInProgress: void garbageCollect()>",
    "<org.apache.hama.ipc.RPC$Invocation: void readFields(java.io.DataInput)>",
    "<org.apache.hama.bsp.FileInputFormat: org.apache.hadoop.fs.Path[] getInputPaths(org.apache.hama.bsp.BSPJob)>",
    "<org.apache.hama.bsp.GroomServer: void deleteLocalFiles()>",
    "<org.apache.hama.bsp.Counters: java.lang.String escape(java.lang.String)>",
    "<org.apache.hama.bsp.BSPMaster: void deleteLocalFiles(java.lang.String)>",
    "<org.apache.hama.bsp.GroomServer: void checkLocalDirs(java.lang.String[])>",
    "<org.apache.hama.bsp.GroomServer$BSPPeerChild: void main(java.lang.String[])>",
    "<org.apache.hama.pipes.protocol.UplinkReader: void <init>(org.apache.hama.pipes.protocol.BinaryProtocol,org.apache.hadoop.conf.Configuration,java.io.InputStream)>",
    "<org.apache.hama.pipes.util.DistributedCacheUtil: void moveLocalFiles(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hama.bsp.JobInProgress: void <init>(org.apache.hama.bsp.BSPJobID,org.apache.hadoop.fs.Path,org.apache.hama.bsp.BSPMaster,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hama.bsp.ft.AsyncRcvdMsgCheckpointImpl$CheckpointMasterService: void restartJob(long,java.util.Map,java.util.Map,org.apache.hama.bsp.TaskInProgress[],java.util.Map,java.util.Map)>",
    "<org.apache.hama.BSPMasterRunner: int run(java.lang.String[])>",
    "<org.apache.hama.pipes.util.DistributedCacheUtil: java.lang.String addFilesToHDFS(org.apache.hadoop.conf.Configuration,java.lang.String)>",
    "<org.apache.hama.ipc.Client$ConnectionId: java.lang.String getRemotePrincipal(org.apache.hadoop.conf.Configuration,java.net.InetSocketAddress,java.lang.Class)>",
    "<org.apache.hama.ipc.Server$Connection: boolean authorizeConnection()>",
    "<org.apache.hama.GroomServerRunner: int run(java.lang.String[])>",
    "<org.apache.hama.ipc.AsyncRPC$Invocation: void readFields(java.io.DataInput)>",
    "<org.apache.hama.pipes.protocol.UplinkReader: void seqFileReadNext()>",
    "<org.apache.hama.bsp.FileInputFormat: org.apache.hadoop.fs.FileStatus[] listStatus(org.apache.hama.bsp.BSPJob)>",
    "<org.apache.hama.bsp.BSPJobClient: java.lang.String[] executeShellCommand(java.lang.String[])>",
    "<org.apache.hama.util.BSPNetUtils: java.net.InetSocketAddress makeSocketAddr(java.lang.String,int)>",
    "<org.apache.hama.bsp.LocalBSPRunner: org.apache.hama.bsp.JobStatus submitJob(org.apache.hama.bsp.BSPJobID,java.lang.String)>",
    "<org.apache.hama.pipes.util.DistributedCacheUtil: java.net.URL[] addJarsToJobClasspath(org.apache.hadoop.conf.Configuration)>"
  ],
  "0.7.1": [
    "<org.apache.hama.bsp.FileOutputFormat: void checkOutputSpecs(org.apache.hadoop.fs.FileSystem,org.apache.hama.bsp.BSPJob)>",
    "<org.apache.hama.bsp.FileInputFormat: void setInputPaths(org.apache.hama.bsp.BSPJob,org.apache.hadoop.fs.Path[])>",
    "<org.apache.hama.bsp.BSPMaster: void <init>(org.apache.hama.HamaConfiguration,java.lang.String)>",
    "<org.apache.hama.bsp.BSPMaster: java.net.InetSocketAddress getAddress(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hama.BSPMasterRunner: void main(java.lang.String[])>",
    "<org.apache.hama.GroomServerRunner: void main(java.lang.String[])>",
    "<org.apache.hama.pipes.PipesApplication: java.util.List setupCommand(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hama.bsp.JobInProgress: void initTasks()>",
    "<org.apache.hama.bsp.BSPJobClient: java.io.DataOutputStream writeSplitsFileHeader(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,int)>",
    "<org.apache.hama.bsp.BSPPeerImpl: void deleteLocalFiles()>",
    "<org.apache.hama.bsp.LineRecordReader: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hama.bsp.FileSplit)>",
    "<org.apache.hama.ipc.RPC: org.apache.hama.ipc.VersionedProtocol getProxy(java.lang.Class,long,java.net.InetSocketAddress,org.apache.hadoop.security.UserGroupInformation,org.apache.hadoop.conf.Configuration,javax.net.SocketFactory,int,org.apache.hama.ipc.RetryPolicy,boolean)>",
    "<org.apache.hama.bsp.BSPJobContext: org.apache.hadoop.fs.Path getWorkingDirectory()>",
    "<org.apache.hama.bsp.BSPJobClient: org.apache.hadoop.fs.FileSystem getFs()>",
    "<org.apache.hama.ipc.RPC: org.apache.hama.ipc.VersionedProtocol getProxy(java.lang.Class,long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration,javax.net.SocketFactory,int)>",
    "<org.apache.hama.ipc.ConnectionHeader: void readFields(java.io.DataInput)>",
    "<org.apache.hama.bsp.Counters: java.lang.String unescape(java.lang.String)>",
    "<org.apache.hama.bsp.GroomServer: void deleteLocalFiles(java.lang.String)>",
    "<org.apache.hama.bsp.BSPMaster: void deleteLocalFiles()>",
    "<org.apache.hama.bsp.ft.AsyncRcvdMsgCheckpointImpl$CheckpointPeerService: void initialize(org.apache.hama.bsp.BSPJob,org.apache.hama.bsp.BSPPeer,org.apache.hama.bsp.sync.PeerSyncClient,java.net.InetSocketAddress,org.apache.hama.bsp.TaskAttemptID,long,org.apache.hadoop.conf.Configuration,org.apache.hama.bsp.message.MessageManager)>",
    "<org.apache.hama.bsp.BSPPeerImpl: void <init>(org.apache.hama.bsp.BSPJob,org.apache.hama.HamaConfiguration,org.apache.hama.bsp.TaskAttemptID,org.apache.hama.ipc.BSPPeerProtocol,int,java.lang.String,org.apache.hadoop.io.BytesWritable,org.apache.hama.bsp.Counters,long,org.apache.hama.bsp.TaskStatus$State)>",
    "<org.apache.hama.bsp.GroomServer: void initialize()>",
    "<org.apache.hama.ipc.AsyncRPC: org.apache.hama.ipc.VersionedProtocol getProxy(java.lang.Class,long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration,javax.net.SocketFactory)>",
    "<org.apache.hama.util.RunJar$1: void run()>",
    "<org.apache.hama.bsp.TaskLog: void cleanup(int)>",
    "<org.apache.hama.bsp.SequenceFileRecordReader: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hama.bsp.FileSplit)>",
    "<org.apache.hama.bsp.GroomServer: void localizeJob(org.apache.hama.bsp.GroomServer$TaskInProgress)>",
    "<org.apache.hama.bsp.TextOutputFormat: org.apache.hama.bsp.RecordWriter getRecordWriter(org.apache.hadoop.fs.FileSystem,org.apache.hama.bsp.BSPJob,java.lang.String)>",
    "<org.apache.hama.ZooKeeperRunner: void main(java.lang.String[])>",
    "<org.apache.hama.bsp.BSPJobClient: void main(java.lang.String[])>",
    "<org.apache.hama.ipc.RPC: org.apache.hama.ipc.VersionedProtocol getProxy(java.lang.Class,long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration,javax.net.SocketFactory)>",
    "<org.apache.hama.bsp.GroomServer$TaskInProgress: void localizeTask(org.apache.hama.bsp.Task)>",
    "<org.apache.hama.bsp.TextInputFormat: boolean isSplitable(org.apache.hama.bsp.BSPJob,org.apache.hadoop.fs.Path)>",
    "<org.apache.hama.pipes.util.SequenceFileDumper: void main(java.lang.String[])>",
    "<org.apache.hama.pipes.protocol.UplinkReader: void seqFileOpen()>",
    "<org.apache.hama.bsp.FileInputFormat: void addInputPath(org.apache.hama.bsp.BSPJob,org.apache.hadoop.fs.Path)>",
    "<org.apache.hama.pipes.Submitter: int run(java.lang.String[])>",
    "<org.apache.hama.ipc.Server: void <init>(java.lang.String,int,java.lang.Class,int,org.apache.hadoop.conf.Configuration,java.lang.String,org.apache.hadoop.security.token.SecretManager)>",
    "<org.apache.hama.bsp.JobInProgress: void garbageCollect()>",
    "<org.apache.hama.ipc.RPC$Invocation: void readFields(java.io.DataInput)>",
    "<org.apache.hama.bsp.FileInputFormat: org.apache.hadoop.fs.Path[] getInputPaths(org.apache.hama.bsp.BSPJob)>",
    "<org.apache.hama.bsp.GroomServer: void deleteLocalFiles()>",
    "<org.apache.hama.bsp.Counters: java.lang.String escape(java.lang.String)>",
    "<org.apache.hama.bsp.BSPMaster: void deleteLocalFiles(java.lang.String)>",
    "<org.apache.hama.bsp.GroomServer: void checkLocalDirs(java.lang.String[])>",
    "<org.apache.hama.bsp.GroomServer$BSPPeerChild: void main(java.lang.String[])>",
    "<org.apache.hama.pipes.protocol.UplinkReader: void <init>(org.apache.hama.pipes.protocol.BinaryProtocol,org.apache.hadoop.conf.Configuration,java.io.InputStream)>",
    "<org.apache.hama.pipes.util.DistributedCacheUtil: void moveLocalFiles(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hama.bsp.JobInProgress: void <init>(org.apache.hama.bsp.BSPJobID,org.apache.hadoop.fs.Path,org.apache.hama.bsp.BSPMaster,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hama.bsp.ft.AsyncRcvdMsgCheckpointImpl$CheckpointMasterService: void restartJob(long,java.util.Map,java.util.Map,org.apache.hama.bsp.TaskInProgress[],java.util.Map,java.util.Map)>",
    "<org.apache.hama.BSPMasterRunner: int run(java.lang.String[])>",
    "<org.apache.hama.pipes.util.DistributedCacheUtil: java.lang.String addFilesToHDFS(org.apache.hadoop.conf.Configuration,java.lang.String)>",
    "<org.apache.hama.ipc.Client$ConnectionId: java.lang.String getRemotePrincipal(org.apache.hadoop.conf.Configuration,java.net.InetSocketAddress,java.lang.Class)>",
    "<org.apache.hama.ipc.Server$Connection: boolean authorizeConnection()>",
    "<org.apache.hama.GroomServerRunner: int run(java.lang.String[])>",
    "<org.apache.hama.ipc.AsyncRPC$Invocation: void readFields(java.io.DataInput)>",
    "<org.apache.hama.pipes.protocol.UplinkReader: void seqFileReadNext()>",
    "<org.apache.hama.bsp.FileInputFormat: org.apache.hadoop.fs.FileStatus[] listStatus(org.apache.hama.bsp.BSPJob)>",
    "<org.apache.hama.bsp.BSPJobClient: java.lang.String[] executeShellCommand(java.lang.String[])>",
    "<org.apache.hama.util.BSPNetUtils: java.net.InetSocketAddress makeSocketAddr(java.lang.String,int)>",
    "<org.apache.hama.bsp.LocalBSPRunner: org.apache.hama.bsp.JobStatus submitJob(org.apache.hama.bsp.BSPJobID,java.lang.String)>",
    "<org.apache.hama.pipes.util.DistributedCacheUtil: java.net.URL[] addJarsToJobClasspath(org.apache.hadoop.conf.Configuration)>"
  ]
}