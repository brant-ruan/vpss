{
  "2.3.9_arenadata2": [
    "<org.apache.hadoop.hive.llap.daemon.impl.LlapProtocolServerImpl: void serviceStart()>",
    "<org.apache.hadoop.hive.llap.daemon.impl.LlapDaemon: void main(java.lang.String[])>",
    "<org.apache.hadoop.hive.llap.io.encoded.OrcEncodedDataReader: void <init>(org.apache.hadoop.hive.llap.cache.LowLevelCache,org.apache.hadoop.hive.llap.cache.BufferUsageManager,org.apache.hadoop.hive.llap.io.metadata.OrcMetadataCache,org.apache.hadoop.conf.Configuration,org.apache.hadoop.conf.Configuration,org.apache.hadoop.mapred.FileSplit,java.util.List,org.apache.hadoop.hive.ql.io.sarg.SearchArgument,java.lang.String[],org.apache.hadoop.hive.llap.io.decode.OrcEncodedDataConsumer,org.apache.hadoop.hive.llap.counters.QueryFragmentCounters,org.apache.orc.TypeDescription)>",
    "<org.apache.hadoop.hive.llap.io.encoded.SerDeEncodedDataReader: void <init>(org.apache.hadoop.hive.llap.cache.SerDeLowLevelCacheImpl,org.apache.hadoop.hive.llap.cache.BufferUsageManager,org.apache.hadoop.conf.Configuration,org.apache.hadoop.mapred.FileSplit,java.util.List,org.apache.hadoop.hive.llap.io.decode.OrcEncodedDataConsumer,org.apache.hadoop.mapred.JobConf,org.apache.hadoop.mapred.Reporter,org.apache.hadoop.mapred.InputFormat,org.apache.hadoop.hive.serde2.Deserializer,org.apache.hadoop.hive.llap.counters.QueryFragmentCounters,org.apache.orc.TypeDescription,java.util.Map)>",
    "<org.apache.hadoop.hive.llap.daemon.impl.QueryTracker: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[],java.lang.String)>",
    "<org.apache.hadoop.hive.llap.daemon.impl.LlapTokenChecker: void checkPermissions(java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>",
    "<org.apache.hadoop.hive.llap.daemon.impl.AMReporter$AMNodeInfo$1: org.apache.hadoop.hive.llap.protocol.LlapTaskUmbilicalProtocol run()>",
    "<org.apache.hadoop.hive.llap.shufflehandler.ShuffleHandler$Shuffle: org.jboss.netty.channel.ChannelFuture sendMapOutput(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.String,java.lang.String,int,org.apache.hadoop.hive.llap.shufflehandler.ShuffleHandler$Shuffle$MapOutputInfo)>",
    "<org.apache.hadoop.hive.llap.daemon.impl.AMReporter$AMNodeInfo: org.apache.hadoop.hive.llap.protocol.LlapTaskUmbilicalProtocol getUmbilical()>",
    "<org.apache.hadoop.hive.llap.daemon.impl.QueryTracker: org.apache.hadoop.hive.llap.daemon.impl.QueryFragmentInfo registerFragment(org.apache.hadoop.hive.llap.daemon.impl.QueryIdentifier,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,int,int,java.lang.String,org.apache.hadoop.hive.llap.daemon.rpc.LlapDaemonProtocolProtos$SignableVertexSpec,org.apache.hadoop.security.token.Token,java.lang.String,org.apache.hadoop.hive.llap.daemon.impl.LlapTokenChecker$LlapTokenInfo,org.apache.hadoop.hive.llap.LlapNodeId)>",
    "<org.apache.hadoop.hive.llap.shufflehandler.FadvisedFileRegion: void transferSuccessful()>",
    "<org.apache.hadoop.hive.llap.cli.LlapSliderUtils: void startCluster(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String,org.apache.hadoop.fs.Path,java.lang.String)>",
    "<org.apache.hadoop.hive.llap.shufflehandler.FadvisedChunkedFile: void close()>",
    "<org.apache.hadoop.hive.llap.daemon.impl.LlapProtocolServerImpl: org.apache.hadoop.ipc.RPC$Server startProtocolServer(int,int,java.util.concurrent.atomic.AtomicReference,org.apache.hadoop.conf.Configuration,com.google.protobuf.BlockingService,java.lang.Class,org.apache.hadoop.hive.conf.HiveConf$ConfVars[])>",
    "<org.apache.hadoop.hive.llap.daemon.impl.LlapTokenChecker: org.apache.hadoop.hive.llap.daemon.impl.LlapTokenChecker$LlapTokenInfo getTokenInfo(java.lang.String)>",
    "<org.apache.hadoop.hive.llap.daemon.impl.ContainerRunnerImpl: void logSecurityErrorRarely(java.lang.String)>",
    "<org.apache.hadoop.hive.llap.daemon.impl.ContainerRunnerImpl: void <init>(org.apache.hadoop.conf.Configuration,int,int,boolean,java.lang.String[],java.util.concurrent.atomic.AtomicReference,java.util.concurrent.atomic.AtomicReference,long,org.apache.hadoop.hive.llap.metrics.LlapDaemonExecutorMetrics,org.apache.hadoop.hive.llap.daemon.impl.AMReporter,java.lang.ClassLoader,org.apache.hadoop.hive.llap.DaemonId,org.apache.hadoop.hive.common.UgiFactory,javax.net.SocketFactory)>",
    "<org.apache.hadoop.hive.llap.daemon.impl.TaskRunnerCallable$1: org.apache.hadoop.hive.llap.protocol.LlapTaskUmbilicalProtocol run()>",
    "<org.apache.hadoop.hive.llap.daemon.services.impl.LlapWebServices: void serviceInit(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.hive.llap.cli.LlapServiceDriver: int run(java.lang.String[])>",
    "<org.apache.hadoop.hive.llap.daemon.impl.LlapDaemon: void <init>(org.apache.hadoop.conf.Configuration,int,long,boolean,boolean,long,java.lang.String[],int,int,int,int,java.lang.String)>",
    "<org.apache.hadoop.hive.llap.daemon.impl.LlapProtocolServerImpl: org.apache.hadoop.hive.llap.daemon.rpc.LlapDaemonProtocolProtos$GetTokenResponseProto getDelegationToken(com.google.protobuf.RpcController,org.apache.hadoop.hive.llap.daemon.rpc.LlapDaemonProtocolProtos$GetTokenRequestProto)>",
    "<org.apache.hadoop.hive.llap.daemon.impl.QueryInfo: void setupUmbilicalUgi(java.lang.String,org.apache.hadoop.security.token.Token,java.lang.String,int)>",
    "<org.apache.hadoop.hive.llap.daemon.impl.TaskRunnerCallable: org.apache.tez.runtime.task.TaskRunner2Result callInternal()>"
  ],
  "2.3.9_arenadata1": [
    "<org.apache.hadoop.hive.llap.daemon.impl.LlapProtocolServerImpl: void serviceStart()>",
    "<org.apache.hadoop.hive.llap.daemon.impl.LlapDaemon: void main(java.lang.String[])>",
    "<org.apache.hadoop.hive.llap.io.encoded.OrcEncodedDataReader: void <init>(org.apache.hadoop.hive.llap.cache.LowLevelCache,org.apache.hadoop.hive.llap.cache.BufferUsageManager,org.apache.hadoop.hive.llap.io.metadata.OrcMetadataCache,org.apache.hadoop.conf.Configuration,org.apache.hadoop.conf.Configuration,org.apache.hadoop.mapred.FileSplit,java.util.List,org.apache.hadoop.hive.ql.io.sarg.SearchArgument,java.lang.String[],org.apache.hadoop.hive.llap.io.decode.OrcEncodedDataConsumer,org.apache.hadoop.hive.llap.counters.QueryFragmentCounters,org.apache.orc.TypeDescription)>",
    "<org.apache.hadoop.hive.llap.io.encoded.SerDeEncodedDataReader: void <init>(org.apache.hadoop.hive.llap.cache.SerDeLowLevelCacheImpl,org.apache.hadoop.hive.llap.cache.BufferUsageManager,org.apache.hadoop.conf.Configuration,org.apache.hadoop.mapred.FileSplit,java.util.List,org.apache.hadoop.hive.llap.io.decode.OrcEncodedDataConsumer,org.apache.hadoop.mapred.JobConf,org.apache.hadoop.mapred.Reporter,org.apache.hadoop.mapred.InputFormat,org.apache.hadoop.hive.serde2.Deserializer,org.apache.hadoop.hive.llap.counters.QueryFragmentCounters,org.apache.orc.TypeDescription,java.util.Map)>",
    "<org.apache.hadoop.hive.llap.daemon.impl.QueryTracker: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[],java.lang.String)>",
    "<org.apache.hadoop.hive.llap.daemon.impl.LlapTokenChecker: void checkPermissions(java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>",
    "<org.apache.hadoop.hive.llap.daemon.impl.AMReporter$AMNodeInfo$1: org.apache.hadoop.hive.llap.protocol.LlapTaskUmbilicalProtocol run()>",
    "<org.apache.hadoop.hive.llap.shufflehandler.ShuffleHandler$Shuffle: org.jboss.netty.channel.ChannelFuture sendMapOutput(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.String,java.lang.String,int,org.apache.hadoop.hive.llap.shufflehandler.ShuffleHandler$Shuffle$MapOutputInfo)>",
    "<org.apache.hadoop.hive.llap.daemon.impl.AMReporter$AMNodeInfo: org.apache.hadoop.hive.llap.protocol.LlapTaskUmbilicalProtocol getUmbilical()>",
    "<org.apache.hadoop.hive.llap.daemon.impl.QueryTracker: org.apache.hadoop.hive.llap.daemon.impl.QueryFragmentInfo registerFragment(org.apache.hadoop.hive.llap.daemon.impl.QueryIdentifier,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,int,int,java.lang.String,org.apache.hadoop.hive.llap.daemon.rpc.LlapDaemonProtocolProtos$SignableVertexSpec,org.apache.hadoop.security.token.Token,java.lang.String,org.apache.hadoop.hive.llap.daemon.impl.LlapTokenChecker$LlapTokenInfo,org.apache.hadoop.hive.llap.LlapNodeId)>",
    "<org.apache.hadoop.hive.llap.shufflehandler.FadvisedFileRegion: void transferSuccessful()>",
    "<org.apache.hadoop.hive.llap.cli.LlapSliderUtils: void startCluster(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String,org.apache.hadoop.fs.Path,java.lang.String)>",
    "<org.apache.hadoop.hive.llap.shufflehandler.FadvisedChunkedFile: void close()>",
    "<org.apache.hadoop.hive.llap.daemon.impl.LlapProtocolServerImpl: org.apache.hadoop.ipc.RPC$Server startProtocolServer(int,int,java.util.concurrent.atomic.AtomicReference,org.apache.hadoop.conf.Configuration,com.google.protobuf.BlockingService,java.lang.Class,org.apache.hadoop.hive.conf.HiveConf$ConfVars[])>",
    "<org.apache.hadoop.hive.llap.daemon.impl.LlapTokenChecker: org.apache.hadoop.hive.llap.daemon.impl.LlapTokenChecker$LlapTokenInfo getTokenInfo(java.lang.String)>",
    "<org.apache.hadoop.hive.llap.daemon.impl.ContainerRunnerImpl: void logSecurityErrorRarely(java.lang.String)>",
    "<org.apache.hadoop.hive.llap.daemon.impl.ContainerRunnerImpl: void <init>(org.apache.hadoop.conf.Configuration,int,int,boolean,java.lang.String[],java.util.concurrent.atomic.AtomicReference,java.util.concurrent.atomic.AtomicReference,long,org.apache.hadoop.hive.llap.metrics.LlapDaemonExecutorMetrics,org.apache.hadoop.hive.llap.daemon.impl.AMReporter,java.lang.ClassLoader,org.apache.hadoop.hive.llap.DaemonId,org.apache.hadoop.hive.common.UgiFactory,javax.net.SocketFactory)>",
    "<org.apache.hadoop.hive.llap.daemon.impl.TaskRunnerCallable$1: org.apache.hadoop.hive.llap.protocol.LlapTaskUmbilicalProtocol run()>",
    "<org.apache.hadoop.hive.llap.daemon.services.impl.LlapWebServices: void serviceInit(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.hive.llap.cli.LlapServiceDriver: int run(java.lang.String[])>",
    "<org.apache.hadoop.hive.llap.daemon.impl.LlapDaemon: void <init>(org.apache.hadoop.conf.Configuration,int,long,boolean,boolean,long,java.lang.String[],int,int,int,int,java.lang.String)>",
    "<org.apache.hadoop.hive.llap.daemon.impl.LlapProtocolServerImpl: org.apache.hadoop.hive.llap.daemon.rpc.LlapDaemonProtocolProtos$GetTokenResponseProto getDelegationToken(com.google.protobuf.RpcController,org.apache.hadoop.hive.llap.daemon.rpc.LlapDaemonProtocolProtos$GetTokenRequestProto)>",
    "<org.apache.hadoop.hive.llap.daemon.impl.QueryInfo: void setupUmbilicalUgi(java.lang.String,org.apache.hadoop.security.token.Token,java.lang.String,int)>",
    "<org.apache.hadoop.hive.llap.daemon.impl.TaskRunnerCallable: org.apache.tez.runtime.task.TaskRunner2Result callInternal()>"
  ],
  "2.3.9_arenadata3": [
    "<org.apache.hadoop.hive.llap.daemon.impl.LlapProtocolServerImpl: void serviceStart()>",
    "<org.apache.hadoop.hive.llap.daemon.impl.LlapDaemon: void main(java.lang.String[])>",
    "<org.apache.hadoop.hive.llap.io.encoded.OrcEncodedDataReader: void <init>(org.apache.hadoop.hive.llap.cache.LowLevelCache,org.apache.hadoop.hive.llap.cache.BufferUsageManager,org.apache.hadoop.hive.llap.io.metadata.OrcMetadataCache,org.apache.hadoop.conf.Configuration,org.apache.hadoop.conf.Configuration,org.apache.hadoop.mapred.FileSplit,java.util.List,org.apache.hadoop.hive.ql.io.sarg.SearchArgument,java.lang.String[],org.apache.hadoop.hive.llap.io.decode.OrcEncodedDataConsumer,org.apache.hadoop.hive.llap.counters.QueryFragmentCounters,org.apache.orc.TypeDescription)>",
    "<org.apache.hadoop.hive.llap.io.encoded.SerDeEncodedDataReader: void <init>(org.apache.hadoop.hive.llap.cache.SerDeLowLevelCacheImpl,org.apache.hadoop.hive.llap.cache.BufferUsageManager,org.apache.hadoop.conf.Configuration,org.apache.hadoop.mapred.FileSplit,java.util.List,org.apache.hadoop.hive.llap.io.decode.OrcEncodedDataConsumer,org.apache.hadoop.mapred.JobConf,org.apache.hadoop.mapred.Reporter,org.apache.hadoop.mapred.InputFormat,org.apache.hadoop.hive.serde2.Deserializer,org.apache.hadoop.hive.llap.counters.QueryFragmentCounters,org.apache.orc.TypeDescription,java.util.Map)>",
    "<org.apache.hadoop.hive.llap.daemon.impl.QueryTracker: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[],java.lang.String)>",
    "<org.apache.hadoop.hive.llap.daemon.impl.LlapTokenChecker: void checkPermissions(java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>",
    "<org.apache.hadoop.hive.llap.daemon.impl.AMReporter$AMNodeInfo$1: org.apache.hadoop.hive.llap.protocol.LlapTaskUmbilicalProtocol run()>",
    "<org.apache.hadoop.hive.llap.shufflehandler.ShuffleHandler$Shuffle: org.jboss.netty.channel.ChannelFuture sendMapOutput(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,java.lang.String,java.lang.String,int,org.apache.hadoop.hive.llap.shufflehandler.ShuffleHandler$Shuffle$MapOutputInfo)>",
    "<org.apache.hadoop.hive.llap.daemon.impl.AMReporter$AMNodeInfo: org.apache.hadoop.hive.llap.protocol.LlapTaskUmbilicalProtocol getUmbilical()>",
    "<org.apache.hadoop.hive.llap.daemon.impl.QueryTracker: org.apache.hadoop.hive.llap.daemon.impl.QueryFragmentInfo registerFragment(org.apache.hadoop.hive.llap.daemon.impl.QueryIdentifier,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,int,int,java.lang.String,org.apache.hadoop.hive.llap.daemon.rpc.LlapDaemonProtocolProtos$SignableVertexSpec,org.apache.hadoop.security.token.Token,java.lang.String,org.apache.hadoop.hive.llap.daemon.impl.LlapTokenChecker$LlapTokenInfo,org.apache.hadoop.hive.llap.LlapNodeId)>",
    "<org.apache.hadoop.hive.llap.shufflehandler.FadvisedFileRegion: void transferSuccessful()>",
    "<org.apache.hadoop.hive.llap.cli.LlapSliderUtils: void startCluster(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String,org.apache.hadoop.fs.Path,java.lang.String)>",
    "<org.apache.hadoop.hive.llap.shufflehandler.FadvisedChunkedFile: void close()>",
    "<org.apache.hadoop.hive.llap.daemon.impl.LlapProtocolServerImpl: org.apache.hadoop.ipc.RPC$Server startProtocolServer(int,int,java.util.concurrent.atomic.AtomicReference,org.apache.hadoop.conf.Configuration,com.google.protobuf.BlockingService,java.lang.Class,org.apache.hadoop.hive.conf.HiveConf$ConfVars[])>",
    "<org.apache.hadoop.hive.llap.daemon.impl.LlapTokenChecker: org.apache.hadoop.hive.llap.daemon.impl.LlapTokenChecker$LlapTokenInfo getTokenInfo(java.lang.String)>",
    "<org.apache.hadoop.hive.llap.daemon.impl.ContainerRunnerImpl: void logSecurityErrorRarely(java.lang.String)>",
    "<org.apache.hadoop.hive.llap.daemon.impl.ContainerRunnerImpl: void <init>(org.apache.hadoop.conf.Configuration,int,int,boolean,java.lang.String[],java.util.concurrent.atomic.AtomicReference,java.util.concurrent.atomic.AtomicReference,long,org.apache.hadoop.hive.llap.metrics.LlapDaemonExecutorMetrics,org.apache.hadoop.hive.llap.daemon.impl.AMReporter,java.lang.ClassLoader,org.apache.hadoop.hive.llap.DaemonId,org.apache.hadoop.hive.common.UgiFactory,javax.net.SocketFactory)>",
    "<org.apache.hadoop.hive.llap.daemon.impl.TaskRunnerCallable$1: org.apache.hadoop.hive.llap.protocol.LlapTaskUmbilicalProtocol run()>",
    "<org.apache.hadoop.hive.llap.daemon.services.impl.LlapWebServices: void serviceInit(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.hive.llap.cli.LlapServiceDriver: int run(java.lang.String[])>",
    "<org.apache.hadoop.hive.llap.daemon.impl.LlapDaemon: void <init>(org.apache.hadoop.conf.Configuration,int,long,boolean,boolean,long,java.lang.String[],int,int,int,int,java.lang.String)>",
    "<org.apache.hadoop.hive.llap.daemon.impl.LlapProtocolServerImpl: org.apache.hadoop.hive.llap.daemon.rpc.LlapDaemonProtocolProtos$GetTokenResponseProto getDelegationToken(com.google.protobuf.RpcController,org.apache.hadoop.hive.llap.daemon.rpc.LlapDaemonProtocolProtos$GetTokenRequestProto)>",
    "<org.apache.hadoop.hive.llap.daemon.impl.QueryInfo: void setupUmbilicalUgi(java.lang.String,org.apache.hadoop.security.token.Token,java.lang.String,int)>",
    "<org.apache.hadoop.hive.llap.daemon.impl.TaskRunnerCallable: org.apache.tez.runtime.task.TaskRunner2Result callInternal()>"
  ]
}