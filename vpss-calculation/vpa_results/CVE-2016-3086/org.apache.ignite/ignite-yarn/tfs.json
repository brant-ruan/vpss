{
  "1.5.0.final": [
    "<org.mortbay.io.bio.StringEndPoint: java.lang.String getOutput()>",
    "<org.apache.hadoop.yarn.security.client.ClientToAMTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.hadoop.yarn.conf.HAUtil: java.lang.String getRMHAId(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.log4j.lf5.viewer.LogTable$LogTableListSelectionListener: void valueChanged(javax.swing.event.ListSelectionEvent)>",
    "<org.mortbay.jetty.handler.ResourceHandler: void setResourceBase(java.lang.String)>",
    "<org.mortbay.util.UrlEncoded: java.lang.String encode(org.mortbay.util.MultiMap,java.lang.String,boolean)>",
    "<com.google.inject.internal.asm.$ClassWriter: java.lang.String getCommonSuperClass(java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.Session: com.jcraft.jsch.KeyExchange receive_kexinit(com.jcraft.jsch.Buffer)>",
    "<org.apache.commons.lang.StringUtils: java.lang.String join(java.lang.Object[],char,int,int)>",
    "<com.google.inject.util.Node: java.lang.String toString()>",
    "<com.google.inject.internal.cglib.core.$EmitUtils: void push_object(com.google.inject.internal.cglib.core.$CodeEmitter,java.lang.Object)>",
    "<org.apache.hadoop.yarn.util.timeline.TimelineUtils: org.apache.hadoop.io.Text buildTimelineTokenService(org.apache.hadoop.conf.Configuration)>",
    "<com.google.inject.spi.Message: java.lang.String getSource()>",
    "<org.codehaus.jackson.map.ser.std.ToStringSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
    "<com.jcraft.jsch.KeyPairRSA: void generate(int)>",
    "<org.apache.commons.collections.ExtendedProperties: java.lang.String interpolateHelper(java.lang.String,java.util.List)>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String getString(java.lang.String)>",
    "<com.google.common.collect.SingletonImmutableSet: java.lang.String toString()>",
    "<org.apache.hadoop.yarn.util.Apps: void setEnvFromInputString(java.util.Map,java.lang.String,java.lang.String)>",
    "<org.apache.htrace.fasterxml.jackson.databind.ser.std.StdKeySerializer: void serialize(java.lang.Object,org.apache.htrace.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.fasterxml.jackson.databind.SerializerProvider)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ApplicationClientProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.logaggregation.LogCLIHelpers: int dumpAllContainersLogs(org.apache.hadoop.yarn.api.records.ApplicationId,java.lang.String,java.io.PrintStream)>",
    "<com.google.common.collect.SingletonImmutableMap: java.lang.String toString()>",
    "<com.jcraft.jsch.ChannelSftp: void put(java.io.InputStream,java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int)>",
    "<org.apache.hadoop.yarn.util.WindowsResourceCalculatorPlugin: java.lang.String getSystemInfoInfoFromShell()>",
    "<com.jcraft.jsch.ChannelSftp$1: void close()>",
    "<org.apache.hadoop.yarn.util.FSDownload: long unpack(java.io.File,java.io.File)>",
    "<org.mortbay.util.MultiMap: java.lang.String getString(java.lang.Object)>",
    "<org.apache.hadoop.yarn.util.ConverterUtils: org.apache.hadoop.security.token.Token convertFromYarn(org.apache.hadoop.yarn.api.records.Token,java.net.InetSocketAddress)>",
    "<com.google.inject.internal.MessageProcessor: java.lang.String getRootMessage(java.lang.Throwable)>",
    "<org.apache.zookeeper.server.quorum.QuorumCnxManager: boolean receiveConnection(java.net.Socket)>",
    "<org.mortbay.xml.XmlConfiguration: void configure(java.lang.Object,org.mortbay.xml.XmlParser$Node,int)>",
    "<org.apache.hadoop.yarn.webapp.WebApps$Builder: org.apache.hadoop.yarn.webapp.WebApp start(org.apache.hadoop.yarn.webapp.WebApp)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ApplicationHistoryProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.log4j.lf5.viewer.configure.MRUFileManager: java.lang.String[] getMRUFileList()>",
    "<org.apache.log4j.or.DefaultRenderer: java.lang.String doRender(java.lang.Object)>",
    "<org.apache.htrace.fasterxml.jackson.databind.node.POJONode: java.lang.String asText()>",
    "<org.mortbay.jetty.handler.ContextHandler: void setResourceBase(java.lang.String)>",
    "<org.apache.htrace.fasterxml.jackson.databind.deser.SettableAnyProperty$AnySetterReferring: void handleResolvedForwardReference(java.lang.Object,java.lang.Object)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl$TimelineURLConnectionFactory: java.net.HttpURLConnection getHttpURLConnection(java.net.URL)>",
    "<com.jcraft.jsch.ProxyHTTP: void connect(com.jcraft.jsch.SocketFactory,java.lang.String,int,int)>",
    "<org.apache.avro.generic.GenericData: int compare(java.lang.Object,java.lang.Object,org.apache.avro.Schema,boolean)>",
    "<org.mortbay.jetty.Request: javax.servlet.http.Cookie[] getCookies()>",
    "<com.jcraft.jsch.Channel: void connect(int)>",
    "<org.apache.log4j.or.sax.AttributesRenderer: java.lang.String doRender(java.lang.Object)>",
    "<org.apache.commons.configuration.XMLConfiguration$XMLNode: void updateElement(java.lang.Object)>",
    "<org.apache.hadoop.yarn.nodelabels.FileSystemNodeLabelsStore: java.lang.String getDefaultFSNodeLabelsRootDir()>",
    "<org.apache.hadoop.yarn.server.api.impl.pb.client.SCMAdminProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.conf.YarnConfiguration: void <clinit>()>",
    "<org.apache.hadoop.yarn.security.AMRMTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.log4j.DefaultThrowableRenderer: java.lang.String[] render(java.lang.Throwable)>",
    "<org.mortbay.resource.Resource: org.mortbay.resource.Resource newResource(java.net.URL,boolean)>",
    "<org.apache.hadoop.yarn.server.security.ApplicationACLsManager: void addApplication(org.apache.hadoop.yarn.api.records.ApplicationId,java.util.Map)>",
    "<com.google.common.util.concurrent.Futures: java.lang.Object newFromConstructor(java.lang.reflect.Constructor,java.lang.Throwable)>",
    "<org.apache.hadoop.yarn.webapp.log.AggregatedLogsBlock: void render(org.apache.hadoop.yarn.webapp.view.HtmlBlock$Block)>",
    "<org.mortbay.jetty.servlet.DefaultServlet: void init()>",
    "<org.jets3t.service.utils.ServiceUtils: java.lang.String join(java.util.List,java.lang.String)>",
    "<com.jcraft.jsch.ChannelSftp$1: void write(byte[],int,int)>",
    "<org.xerial.snappy.SnappyLoader: void loadSnappySystemProperties()>",
    "<org.apache.avro.generic.GenericData: void toString(java.lang.Object,java.lang.StringBuilder)>",
    "<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.Object)>",
    "<org.apache.htrace.fasterxml.jackson.databind.deser.std.StringDeserializer: java.lang.String deserialize(org.apache.htrace.fasterxml.jackson.core.JsonParser,org.apache.htrace.fasterxml.jackson.databind.DeserializationContext)>",
    "<org.codehaus.jackson.map.ser.std.StdKeySerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
    "<com.jcraft.jsch.ChannelSftp: void put(java.lang.String,java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int)>",
    "<org.jets3t.service.utils.RestUtils: java.lang.String makeServiceCanonicalString(java.lang.String,java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.util.List)>",
    "<org.apache.ignite.yarn.IgniteYarnClient: void main(java.lang.String[])>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ApplicationMasterProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.security.ContainerTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.commons.logging.LogConfigurationException: void <init>(java.lang.Throwable)>",
    "<org.apache.commons.cli.HelpFormatter: java.lang.StringBuffer renderOptions(java.lang.StringBuffer,int,org.apache.commons.cli.Options,int,int)>",
    "<org.apache.hadoop.yarn.logaggregation.LogCLIHelpers: int dumpAContainersLogs(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.Session: void connect(int)>",
    "<org.apache.hadoop.yarn.util.YarnVersionInfo: java.lang.String getBuildVersion()>",
    "<org.apache.log4j.helpers.PatternParser$MDCPatternConverter: java.lang.String convert(org.apache.log4j.spi.LoggingEvent)>",
    "<com.google.common.base.Functions$ToStringFunction: java.lang.String apply(java.lang.Object)>",
    "<org.mortbay.jetty.security.SslSocketConnector: java.net.ServerSocket newServerSocket(java.lang.String,int,int)>",
    "<org.apache.hadoop.yarn.webapp.util.WebAppUtils: java.util.List getProxyHostsAndPortsForAmFilter(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: void serviceInit(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.commons.configuration.AbstractConfiguration$1: java.lang.String lookup(java.lang.String)>",
    "<org.apache.hadoop.yarn.security.AdminACLsManager: void <init>(org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.Session: void initInflater(java.lang.String)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ClientSCMProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.Session: void updateKeys(com.jcraft.jsch.KeyExchange)>",
    "<org.apache.commons.configuration.XMLConfiguration$XMLBuilderVisitor: void updateAttribute(org.apache.commons.configuration.HierarchicalConfiguration$Node,org.w3c.dom.Element,java.lang.String,char)>",
    "<org.apache.hadoop.yarn.client.AHSProxy: java.lang.Object getProxy(org.apache.hadoop.conf.Configuration,java.lang.Class,java.net.InetSocketAddress)>",
    "<org.apache.hadoop.yarn.conf.HAUtil: java.util.Collection getRMHAIds(org.apache.hadoop.conf.Configuration)>",
    "<org.mortbay.xml.XmlConfiguration: void set(java.lang.Object,org.mortbay.xml.XmlParser$Node)>",
    "<org.apache.log4j.or.ThreadGroupRenderer: java.lang.String doRender(java.lang.Object)>",
    "<com.jcraft.jsch.KeyPairDSA: void generate(int)>",
    "<org.apache.htrace.commons.logging.LogConfigurationException: void <init>(java.lang.Throwable)>",
    "<org.apache.hadoop.yarn.security.client.RMDelegationTokenIdentifier$Renewer: org.apache.hadoop.yarn.api.ApplicationClientProtocol getRmClient(org.apache.hadoop.security.token.Token,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.util.RMHAUtils: java.util.List getRMHAWebappAddresses(org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<com.google.inject.internal.Initializer$InjectableReference: java.lang.String toString()>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogValue: java.io.FileInputStream secureOpenFile(java.io.File)>",
    "<org.apache.commons.configuration.AbstractConfiguration: java.lang.String interpolate(java.lang.String)>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogReader: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)>",
    "<org.apache.hadoop.yarn.server.security.ApplicationACLsManager: void <clinit>()>",
    "<org.apache.commons.lang.ObjectUtils: java.lang.String toString(java.lang.Object)>",
    "<net.sf.cglib.core.EmitUtils: void push_object(net.sf.cglib.core.CodeEmitter,java.lang.Object)>",
    "<com.jcraft.jsch.ProxySOCKS4: void connect(com.jcraft.jsch.SocketFactory,java.lang.String,int,int)>",
    "<org.apache.hadoop.yarn.server.api.impl.pb.client.ResourceManagerAdministrationProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.client.ClientRMProxy: void setAMRMTokenService(org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.KeyPair: com.jcraft.jsch.KeyPair load(com.jcraft.jsch.JSch,java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.ProxySOCKS5: void connect(com.jcraft.jsch.SocketFactory,java.lang.String,int,int)>",
    "<org.apache.directory.api.util.OsgiUtils: java.lang.String getBundleExports(java.io.File)>",
    "<org.codehaus.jettison.json.JSONArray: java.lang.String getString(int)>",
    "<com.google.inject.internal.ProcessedBindingData: void initializeBindings()>",
    "<org.jets3t.service.utils.ServiceUtils: java.util.Map cleanRestMetadataMap(java.util.Map,java.lang.String,java.lang.String)>",
    "<org.apache.commons.lang.exception.ExceptionUtils: java.lang.String[] getRootCauseStackTrace(java.lang.Throwable)>",
    "<org.apache.hadoop.yarn.util.WindowsBasedProcessTree: java.lang.String getAllProcessInfoFromShell()>",
    "<javax.xml.bind.ContextFinder: java.util.Properties loadJAXBProperties(java.lang.ClassLoader,java.lang.String)>",
    "<com.jcraft.jsch.IdentityFile: boolean setPassphrase(byte[])>",
    "<org.mortbay.jetty.handler.DebugHandler: void handle(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,int)>",
    "<com.jcraft.jsch.KnownHosts: void setKnownHosts(java.io.InputStream)>",
    "<org.mortbay.xml.XmlConfiguration: java.lang.Object value(java.lang.Object,org.mortbay.xml.XmlParser$Node)>",
    "<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
    "<org.apache.hadoop.yarn.util.RMHAUtils: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState getHAState(org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<org.apache.commons.lang.StringUtils: java.lang.String join(java.lang.Object[],java.lang.String,int,int)>",
    "<com.jcraft.jsch.Session: void initDeflater(java.lang.String)>",
    "<com.jcraft.jsch.Util: java.net.Socket createSocket(java.lang.String,int,int)>",
    "<org.apache.hadoop.yarn.util.YarnVersionInfo: void <init>()>",
    "<com.google.common.collect.SingletonImmutableList: java.lang.String toString()>",
    "<org.codehaus.jettison.json.JSONObject: java.io.Writer write(java.io.Writer)>",
    "<org.mortbay.jetty.Request: void extractParameters()>",
    "<com.jcraft.jsch.ChannelSftp: void _put(java.io.InputStream,java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int)>",
    "<org.codehaus.jettison.mapped.MappedXMLStreamReader: void <init>(org.codehaus.jettison.json.JSONObject,org.codehaus.jettison.mapped.MappedNamespaceConvention)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: long renewDelegationToken(org.apache.hadoop.security.token.Token)>",
    "<org.apache.hadoop.yarn.webapp.view.HtmlBlock: org.apache.hadoop.security.UserGroupInformation getCallerUGI()>",
    "<org.apache.hadoop.yarn.util.RMHAUtils: java.lang.String findActiveRMHAId(org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<org.apache.commons.lang.text.StrLookup$MapStrLookup: java.lang.String lookup(java.lang.String)>",
    "<com.google.inject.spi.Message: java.lang.Object writeReplace()>",
    "<org.apache.hadoop.yarn.webapp.util.WebAppUtils: java.lang.String getResolvedAddress(java.net.InetSocketAddress)>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogWriter$1: org.apache.hadoop.fs.FSDataOutputStream run()>",
    "<com.sun.xml.bind.api.impl.NameConverter$Standard: java.lang.String combine(java.util.List,char)>",
    "<com.jcraft.jsch.ChannelSftp: void start()>",
    "<org.mortbay.jetty.servlet.ServletHandler$Chain: java.lang.String toString()>",
    "<org.jets3t.service.utils.gatekeeper.GatekeeperMessage: void encodeProperty(java.util.Properties,java.lang.String,java.lang.Object)>",
    "<org.apache.hadoop.yarn.conf.YarnConfiguration: java.net.InetSocketAddress getSocketAddr(java.lang.String,java.lang.String,int)>",
    "<com.google.common.util.concurrent.AbstractListeningExecutorService: java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit)>",
    "<org.apache.hadoop.yarn.util.WindowsBasedProcessTree: boolean isAvailable()>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: void cancelDelegationToken(org.apache.hadoop.security.token.Token)>",
    "<org.jets3t.service.model.StorageObject: long getContentLength()>",
    "<org.apache.jute.compiler.generated.Rcc: void main(java.lang.String[])>",
    "<org.apache.hadoop.yarn.util.FSDownload: org.apache.hadoop.fs.Path copy(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)>",
    "<org.apache.htrace.fasterxml.jackson.databind.util.TokenBuffer$Parser: java.lang.String getText()>",
    "<org.apache.avro.generic.GenericData$Array: java.lang.String toString()>",
    "<com.google.inject.internal.util.$ImmutableSet$SingletonImmutableSet: java.lang.String toString()>",
    "<com.jcraft.jsch.IdentityFile: com.jcraft.jsch.IdentityFile newInstance(java.lang.String,java.lang.String,com.jcraft.jsch.JSch)>",
    "<org.apache.commons.io.filefilter.AndFileFilter: java.lang.String toString()>",
    "<org.apache.ignite.yarn.IgniteYarnClient: void setupAppMasterEnv(java.util.Map,org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<org.apache.zookeeper.server.quorum.QuorumPeerConfig: void parseProperties(java.util.Properties)>",
    "<org.codehaus.jackson.map.ser.std.RawSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
    "<org.mortbay.jetty.security.HashUserRealm: void loadConfig()>",
    "<com.jcraft.jsch.Channel$1: void flush()>",
    "<org.apache.htrace.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,org.apache.htrace.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.fasterxml.jackson.databind.SerializerProvider)>",
    "<org.apache.hadoop.yarn.client.RMProxy: java.lang.Object getProxy(org.apache.hadoop.conf.Configuration,java.lang.Class,java.net.InetSocketAddress)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: void putTimelineDataInJSONFile(java.lang.String,java.lang.String)>",
    "<org.apache.hadoop.yarn.conf.HAUtil: boolean isHAEnabled(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ContainerManagementProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.IdentityFile: void <init>(java.lang.String,byte[],byte[],com.jcraft.jsch.JSch)>",
    "<com.jcraft.jsch.Session: void setTimeout(int)>",
    "<org.apache.log4j.jmx.Agent: void startServer(java.lang.Object)>",
    "<org.apache.commons.beanutils.BeanComparator: int compare(java.lang.Object,java.lang.Object)>",
    "<org.mortbay.io.bio.StringEndPoint: void setInput(java.lang.String)>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String toString()>",
    "<org.apache.hadoop.yarn.security.NMTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.ignite.yarn.ApplicationMaster: void init()>",
    "<org.apache.hadoop.yarn.util.ProcfsBasedProcessTree: void <clinit>()>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogWriter: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.security.UserGroupInformation)>",
    "<org.mortbay.jetty.security.BasicAuthenticator: java.security.Principal authenticate(org.mortbay.jetty.security.UserRealm,java.lang.String,org.mortbay.jetty.Request,org.mortbay.jetty.Response)>",
    "<org.mortbay.util.LazyList: java.lang.String[] toStringArray(java.lang.Object)>",
    "<com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)>",
    "<com.google.inject.internal.util.$ImmutableSet: java.lang.String toString()>",
    "<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String valueToString(java.lang.Object)>",
    "<org.apache.htrace.fasterxml.jackson.core.JsonLocation: java.lang.String toString()>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>",
    "<org.mortbay.xml.XmlParser: void setValidating(boolean)>",
    "<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>",
    "<com.sun.jersey.api.uri.UriTemplate: java.lang.StringBuilder createURIComponent(com.sun.jersey.api.uri.UriComponent$Type,java.lang.String,java.util.Map,boolean,java.lang.StringBuilder)>",
    "<org.apache.commons.lang.builder.ReflectionToStringBuilder: java.lang.String[] toNoNullStringArray(java.lang.Object[])>",
    "<org.apache.htrace.fasterxml.jackson.databind.util.TokenBuffer$Parser: org.apache.htrace.fasterxml.jackson.core.JsonToken nextToken()>",
    "<org.mortbay.jetty.servlet.Invoker: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "<org.apache.hadoop.yarn.conf.HAUtil: boolean isAutomaticFailoverEnabled(org.apache.hadoop.conf.Configuration)>",
    "<org.objectweb.asm.ClassWriter: java.lang.String getCommonSuperClass(java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.Session: void setPortForwarding(java.lang.String,int)>",
    "<org.apache.hadoop.yarn.client.ClientRMProxy: org.apache.hadoop.io.Text getTokenService(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String,int)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: org.apache.hadoop.security.authentication.client.ConnectionConfigurator newSslConnConfigurator(int,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.htrace.fasterxml.jackson.databind.ser.std.ToStringSerializer: void serialize(java.lang.Object,org.apache.htrace.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.fasterxml.jackson.databind.SerializerProvider)>",
    "<javax.xml.bind.JAXBException: java.lang.String toString()>",
    "<org.mortbay.log.StdErrLog: void format(java.lang.Throwable)>",
    "<org.apache.commons.configuration.XMLConfiguration: void handleDelimiters(org.apache.commons.configuration.HierarchicalConfiguration$Node,org.apache.commons.configuration.HierarchicalConfiguration$Node,boolean)>",
    "<org.apache.avro.generic.GenericData: int hashCode(java.lang.Object,org.apache.avro.Schema)>",
    "<org.apache.hadoop.yarn.security.ConfiguredYarnAuthorizer: void init(org.apache.hadoop.conf.Configuration)>"
  ],
  "1.7.0": [
    "<org.mortbay.io.bio.StringEndPoint: java.lang.String getOutput()>",
    "<org.apache.hadoop.yarn.security.client.ClientToAMTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.hadoop.yarn.conf.HAUtil: java.lang.String getRMHAId(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.log4j.lf5.viewer.LogTable$LogTableListSelectionListener: void valueChanged(javax.swing.event.ListSelectionEvent)>",
    "<org.mortbay.jetty.handler.ResourceHandler: void setResourceBase(java.lang.String)>",
    "<org.mortbay.util.UrlEncoded: java.lang.String encode(org.mortbay.util.MultiMap,java.lang.String,boolean)>",
    "<com.google.inject.internal.asm.$ClassWriter: java.lang.String getCommonSuperClass(java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.Session: com.jcraft.jsch.KeyExchange receive_kexinit(com.jcraft.jsch.Buffer)>",
    "<org.apache.commons.lang.StringUtils: java.lang.String join(java.lang.Object[],char,int,int)>",
    "<com.google.inject.util.Node: java.lang.String toString()>",
    "<com.google.inject.internal.cglib.core.$EmitUtils: void push_object(com.google.inject.internal.cglib.core.$CodeEmitter,java.lang.Object)>",
    "<org.apache.hadoop.yarn.util.timeline.TimelineUtils: org.apache.hadoop.io.Text buildTimelineTokenService(org.apache.hadoop.conf.Configuration)>",
    "<com.google.inject.spi.Message: java.lang.String getSource()>",
    "<org.codehaus.jackson.map.ser.std.ToStringSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
    "<com.jcraft.jsch.KeyPairRSA: void generate(int)>",
    "<org.apache.commons.collections.ExtendedProperties: java.lang.String interpolateHelper(java.lang.String,java.util.List)>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String getString(java.lang.String)>",
    "<com.google.common.collect.SingletonImmutableSet: java.lang.String toString()>",
    "<org.apache.hadoop.yarn.util.Apps: void setEnvFromInputString(java.util.Map,java.lang.String,java.lang.String)>",
    "<org.apache.htrace.fasterxml.jackson.databind.ser.std.StdKeySerializer: void serialize(java.lang.Object,org.apache.htrace.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.fasterxml.jackson.databind.SerializerProvider)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ApplicationClientProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.logaggregation.LogCLIHelpers: int dumpAllContainersLogs(org.apache.hadoop.yarn.api.records.ApplicationId,java.lang.String,java.io.PrintStream)>",
    "<com.google.common.collect.SingletonImmutableMap: java.lang.String toString()>",
    "<com.jcraft.jsch.ChannelSftp: void put(java.io.InputStream,java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int)>",
    "<org.apache.hadoop.yarn.util.WindowsResourceCalculatorPlugin: java.lang.String getSystemInfoInfoFromShell()>",
    "<com.jcraft.jsch.ChannelSftp$1: void close()>",
    "<org.apache.hadoop.yarn.util.FSDownload: long unpack(java.io.File,java.io.File)>",
    "<org.mortbay.util.MultiMap: java.lang.String getString(java.lang.Object)>",
    "<org.apache.hadoop.yarn.util.ConverterUtils: org.apache.hadoop.security.token.Token convertFromYarn(org.apache.hadoop.yarn.api.records.Token,java.net.InetSocketAddress)>",
    "<com.google.inject.internal.MessageProcessor: java.lang.String getRootMessage(java.lang.Throwable)>",
    "<org.apache.zookeeper.server.quorum.QuorumCnxManager: boolean receiveConnection(java.net.Socket)>",
    "<org.mortbay.xml.XmlConfiguration: void configure(java.lang.Object,org.mortbay.xml.XmlParser$Node,int)>",
    "<org.apache.hadoop.yarn.webapp.WebApps$Builder: org.apache.hadoop.yarn.webapp.WebApp start(org.apache.hadoop.yarn.webapp.WebApp)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ApplicationHistoryProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.log4j.lf5.viewer.configure.MRUFileManager: java.lang.String[] getMRUFileList()>",
    "<org.apache.log4j.or.DefaultRenderer: java.lang.String doRender(java.lang.Object)>",
    "<org.apache.htrace.fasterxml.jackson.databind.node.POJONode: java.lang.String asText()>",
    "<org.mortbay.jetty.handler.ContextHandler: void setResourceBase(java.lang.String)>",
    "<org.apache.htrace.fasterxml.jackson.databind.deser.SettableAnyProperty$AnySetterReferring: void handleResolvedForwardReference(java.lang.Object,java.lang.Object)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl$TimelineURLConnectionFactory: java.net.HttpURLConnection getHttpURLConnection(java.net.URL)>",
    "<com.jcraft.jsch.ProxyHTTP: void connect(com.jcraft.jsch.SocketFactory,java.lang.String,int,int)>",
    "<org.apache.avro.generic.GenericData: int compare(java.lang.Object,java.lang.Object,org.apache.avro.Schema,boolean)>",
    "<org.mortbay.jetty.Request: javax.servlet.http.Cookie[] getCookies()>",
    "<com.jcraft.jsch.Channel: void connect(int)>",
    "<org.apache.log4j.or.sax.AttributesRenderer: java.lang.String doRender(java.lang.Object)>",
    "<org.apache.commons.configuration.XMLConfiguration$XMLNode: void updateElement(java.lang.Object)>",
    "<org.apache.hadoop.yarn.nodelabels.FileSystemNodeLabelsStore: java.lang.String getDefaultFSNodeLabelsRootDir()>",
    "<org.apache.hadoop.yarn.server.api.impl.pb.client.SCMAdminProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.conf.YarnConfiguration: void <clinit>()>",
    "<org.apache.hadoop.yarn.security.AMRMTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.log4j.DefaultThrowableRenderer: java.lang.String[] render(java.lang.Throwable)>",
    "<org.mortbay.resource.Resource: org.mortbay.resource.Resource newResource(java.net.URL,boolean)>",
    "<org.apache.hadoop.yarn.server.security.ApplicationACLsManager: void addApplication(org.apache.hadoop.yarn.api.records.ApplicationId,java.util.Map)>",
    "<com.google.common.util.concurrent.Futures: java.lang.Object newFromConstructor(java.lang.reflect.Constructor,java.lang.Throwable)>",
    "<org.apache.hadoop.yarn.webapp.log.AggregatedLogsBlock: void render(org.apache.hadoop.yarn.webapp.view.HtmlBlock$Block)>",
    "<org.mortbay.jetty.servlet.DefaultServlet: void init()>",
    "<org.jets3t.service.utils.ServiceUtils: java.lang.String join(java.util.List,java.lang.String)>",
    "<com.jcraft.jsch.ChannelSftp$1: void write(byte[],int,int)>",
    "<org.xerial.snappy.SnappyLoader: void loadSnappySystemProperties()>",
    "<org.apache.avro.generic.GenericData: void toString(java.lang.Object,java.lang.StringBuilder)>",
    "<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.Object)>",
    "<org.apache.htrace.fasterxml.jackson.databind.deser.std.StringDeserializer: java.lang.String deserialize(org.apache.htrace.fasterxml.jackson.core.JsonParser,org.apache.htrace.fasterxml.jackson.databind.DeserializationContext)>",
    "<org.codehaus.jackson.map.ser.std.StdKeySerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
    "<com.jcraft.jsch.ChannelSftp: void put(java.lang.String,java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int)>",
    "<org.jets3t.service.utils.RestUtils: java.lang.String makeServiceCanonicalString(java.lang.String,java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.util.List)>",
    "<org.apache.ignite.yarn.IgniteYarnClient: void main(java.lang.String[])>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ApplicationMasterProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.security.ContainerTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.commons.logging.LogConfigurationException: void <init>(java.lang.Throwable)>",
    "<org.apache.commons.cli.HelpFormatter: java.lang.StringBuffer renderOptions(java.lang.StringBuffer,int,org.apache.commons.cli.Options,int,int)>",
    "<org.apache.hadoop.yarn.logaggregation.LogCLIHelpers: int dumpAContainersLogs(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.Session: void connect(int)>",
    "<org.apache.hadoop.yarn.util.YarnVersionInfo: java.lang.String getBuildVersion()>",
    "<org.apache.log4j.helpers.PatternParser$MDCPatternConverter: java.lang.String convert(org.apache.log4j.spi.LoggingEvent)>",
    "<com.google.common.base.Functions$ToStringFunction: java.lang.String apply(java.lang.Object)>",
    "<org.mortbay.jetty.security.SslSocketConnector: java.net.ServerSocket newServerSocket(java.lang.String,int,int)>",
    "<org.apache.hadoop.yarn.webapp.util.WebAppUtils: java.util.List getProxyHostsAndPortsForAmFilter(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: void serviceInit(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.commons.configuration.AbstractConfiguration$1: java.lang.String lookup(java.lang.String)>",
    "<org.apache.hadoop.yarn.security.AdminACLsManager: void <init>(org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.Session: void initInflater(java.lang.String)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ClientSCMProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.Session: void updateKeys(com.jcraft.jsch.KeyExchange)>",
    "<org.apache.commons.configuration.XMLConfiguration$XMLBuilderVisitor: void updateAttribute(org.apache.commons.configuration.HierarchicalConfiguration$Node,org.w3c.dom.Element,java.lang.String,char)>",
    "<org.apache.hadoop.yarn.client.AHSProxy: java.lang.Object getProxy(org.apache.hadoop.conf.Configuration,java.lang.Class,java.net.InetSocketAddress)>",
    "<org.apache.hadoop.yarn.conf.HAUtil: java.util.Collection getRMHAIds(org.apache.hadoop.conf.Configuration)>",
    "<org.mortbay.xml.XmlConfiguration: void set(java.lang.Object,org.mortbay.xml.XmlParser$Node)>",
    "<org.apache.log4j.or.ThreadGroupRenderer: java.lang.String doRender(java.lang.Object)>",
    "<com.jcraft.jsch.KeyPairDSA: void generate(int)>",
    "<org.apache.htrace.commons.logging.LogConfigurationException: void <init>(java.lang.Throwable)>",
    "<org.apache.hadoop.yarn.security.client.RMDelegationTokenIdentifier$Renewer: org.apache.hadoop.yarn.api.ApplicationClientProtocol getRmClient(org.apache.hadoop.security.token.Token,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.util.RMHAUtils: java.util.List getRMHAWebappAddresses(org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<com.google.inject.internal.Initializer$InjectableReference: java.lang.String toString()>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogValue: java.io.FileInputStream secureOpenFile(java.io.File)>",
    "<org.apache.commons.configuration.AbstractConfiguration: java.lang.String interpolate(java.lang.String)>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogReader: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)>",
    "<org.apache.hadoop.yarn.server.security.ApplicationACLsManager: void <clinit>()>",
    "<org.apache.commons.lang.ObjectUtils: java.lang.String toString(java.lang.Object)>",
    "<net.sf.cglib.core.EmitUtils: void push_object(net.sf.cglib.core.CodeEmitter,java.lang.Object)>",
    "<com.jcraft.jsch.ProxySOCKS4: void connect(com.jcraft.jsch.SocketFactory,java.lang.String,int,int)>",
    "<org.apache.hadoop.yarn.server.api.impl.pb.client.ResourceManagerAdministrationProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.client.ClientRMProxy: void setAMRMTokenService(org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.KeyPair: com.jcraft.jsch.KeyPair load(com.jcraft.jsch.JSch,java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.ProxySOCKS5: void connect(com.jcraft.jsch.SocketFactory,java.lang.String,int,int)>",
    "<org.apache.directory.api.util.OsgiUtils: java.lang.String getBundleExports(java.io.File)>",
    "<org.codehaus.jettison.json.JSONArray: java.lang.String getString(int)>",
    "<com.google.inject.internal.ProcessedBindingData: void initializeBindings()>",
    "<org.jets3t.service.utils.ServiceUtils: java.util.Map cleanRestMetadataMap(java.util.Map,java.lang.String,java.lang.String)>",
    "<org.apache.commons.lang.exception.ExceptionUtils: java.lang.String[] getRootCauseStackTrace(java.lang.Throwable)>",
    "<org.apache.hadoop.yarn.util.WindowsBasedProcessTree: java.lang.String getAllProcessInfoFromShell()>",
    "<javax.xml.bind.ContextFinder: java.util.Properties loadJAXBProperties(java.lang.ClassLoader,java.lang.String)>",
    "<com.jcraft.jsch.IdentityFile: boolean setPassphrase(byte[])>",
    "<org.mortbay.jetty.handler.DebugHandler: void handle(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,int)>",
    "<com.jcraft.jsch.KnownHosts: void setKnownHosts(java.io.InputStream)>",
    "<org.mortbay.xml.XmlConfiguration: java.lang.Object value(java.lang.Object,org.mortbay.xml.XmlParser$Node)>",
    "<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
    "<org.apache.hadoop.yarn.util.RMHAUtils: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState getHAState(org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<org.apache.commons.lang.StringUtils: java.lang.String join(java.lang.Object[],java.lang.String,int,int)>",
    "<com.jcraft.jsch.Session: void initDeflater(java.lang.String)>",
    "<com.jcraft.jsch.Util: java.net.Socket createSocket(java.lang.String,int,int)>",
    "<org.apache.hadoop.yarn.util.YarnVersionInfo: void <init>()>",
    "<com.google.common.collect.SingletonImmutableList: java.lang.String toString()>",
    "<org.codehaus.jettison.json.JSONObject: java.io.Writer write(java.io.Writer)>",
    "<org.mortbay.jetty.Request: void extractParameters()>",
    "<com.jcraft.jsch.ChannelSftp: void _put(java.io.InputStream,java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int)>",
    "<org.codehaus.jettison.mapped.MappedXMLStreamReader: void <init>(org.codehaus.jettison.json.JSONObject,org.codehaus.jettison.mapped.MappedNamespaceConvention)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: long renewDelegationToken(org.apache.hadoop.security.token.Token)>",
    "<org.apache.hadoop.yarn.webapp.view.HtmlBlock: org.apache.hadoop.security.UserGroupInformation getCallerUGI()>",
    "<org.apache.hadoop.yarn.util.RMHAUtils: java.lang.String findActiveRMHAId(org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<org.apache.commons.lang.text.StrLookup$MapStrLookup: java.lang.String lookup(java.lang.String)>",
    "<com.google.inject.spi.Message: java.lang.Object writeReplace()>",
    "<org.apache.hadoop.yarn.webapp.util.WebAppUtils: java.lang.String getResolvedAddress(java.net.InetSocketAddress)>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogWriter$1: org.apache.hadoop.fs.FSDataOutputStream run()>",
    "<com.sun.xml.bind.api.impl.NameConverter$Standard: java.lang.String combine(java.util.List,char)>",
    "<com.jcraft.jsch.ChannelSftp: void start()>",
    "<org.mortbay.jetty.servlet.ServletHandler$Chain: java.lang.String toString()>",
    "<org.jets3t.service.utils.gatekeeper.GatekeeperMessage: void encodeProperty(java.util.Properties,java.lang.String,java.lang.Object)>",
    "<org.apache.hadoop.yarn.conf.YarnConfiguration: java.net.InetSocketAddress getSocketAddr(java.lang.String,java.lang.String,int)>",
    "<com.google.common.util.concurrent.AbstractListeningExecutorService: java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit)>",
    "<org.apache.hadoop.yarn.util.WindowsBasedProcessTree: boolean isAvailable()>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: void cancelDelegationToken(org.apache.hadoop.security.token.Token)>",
    "<org.jets3t.service.model.StorageObject: long getContentLength()>",
    "<org.apache.jute.compiler.generated.Rcc: void main(java.lang.String[])>",
    "<org.apache.hadoop.yarn.util.FSDownload: org.apache.hadoop.fs.Path copy(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)>",
    "<org.apache.htrace.fasterxml.jackson.databind.util.TokenBuffer$Parser: java.lang.String getText()>",
    "<org.apache.avro.generic.GenericData$Array: java.lang.String toString()>",
    "<com.google.inject.internal.util.$ImmutableSet$SingletonImmutableSet: java.lang.String toString()>",
    "<com.jcraft.jsch.IdentityFile: com.jcraft.jsch.IdentityFile newInstance(java.lang.String,java.lang.String,com.jcraft.jsch.JSch)>",
    "<org.apache.commons.io.filefilter.AndFileFilter: java.lang.String toString()>",
    "<org.apache.ignite.yarn.IgniteYarnClient: void setupAppMasterEnv(java.util.Map,org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<org.apache.zookeeper.server.quorum.QuorumPeerConfig: void parseProperties(java.util.Properties)>",
    "<org.codehaus.jackson.map.ser.std.RawSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
    "<org.mortbay.jetty.security.HashUserRealm: void loadConfig()>",
    "<com.jcraft.jsch.Channel$1: void flush()>",
    "<org.apache.htrace.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,org.apache.htrace.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.fasterxml.jackson.databind.SerializerProvider)>",
    "<org.apache.hadoop.yarn.client.RMProxy: java.lang.Object getProxy(org.apache.hadoop.conf.Configuration,java.lang.Class,java.net.InetSocketAddress)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: void putTimelineDataInJSONFile(java.lang.String,java.lang.String)>",
    "<org.apache.hadoop.yarn.conf.HAUtil: boolean isHAEnabled(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ContainerManagementProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.IdentityFile: void <init>(java.lang.String,byte[],byte[],com.jcraft.jsch.JSch)>",
    "<com.jcraft.jsch.Session: void setTimeout(int)>",
    "<org.apache.log4j.jmx.Agent: void startServer(java.lang.Object)>",
    "<org.apache.commons.beanutils.BeanComparator: int compare(java.lang.Object,java.lang.Object)>",
    "<org.mortbay.io.bio.StringEndPoint: void setInput(java.lang.String)>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String toString()>",
    "<org.apache.hadoop.yarn.security.NMTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.ignite.yarn.ApplicationMaster: void init()>",
    "<org.apache.hadoop.yarn.util.ProcfsBasedProcessTree: void <clinit>()>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogWriter: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.security.UserGroupInformation)>",
    "<org.mortbay.jetty.security.BasicAuthenticator: java.security.Principal authenticate(org.mortbay.jetty.security.UserRealm,java.lang.String,org.mortbay.jetty.Request,org.mortbay.jetty.Response)>",
    "<org.mortbay.util.LazyList: java.lang.String[] toStringArray(java.lang.Object)>",
    "<com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)>",
    "<com.google.inject.internal.util.$ImmutableSet: java.lang.String toString()>",
    "<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
    "<org.apache.ignite.yarn.ApplicationMaster: void onContainersAllocated(java.util.List)>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String valueToString(java.lang.Object)>",
    "<org.apache.htrace.fasterxml.jackson.core.JsonLocation: java.lang.String toString()>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>",
    "<org.mortbay.xml.XmlParser: void setValidating(boolean)>",
    "<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>",
    "<com.sun.jersey.api.uri.UriTemplate: java.lang.StringBuilder createURIComponent(com.sun.jersey.api.uri.UriComponent$Type,java.lang.String,java.util.Map,boolean,java.lang.StringBuilder)>",
    "<org.apache.commons.lang.builder.ReflectionToStringBuilder: java.lang.String[] toNoNullStringArray(java.lang.Object[])>",
    "<org.apache.htrace.fasterxml.jackson.databind.util.TokenBuffer$Parser: org.apache.htrace.fasterxml.jackson.core.JsonToken nextToken()>",
    "<org.mortbay.jetty.servlet.Invoker: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "<org.apache.hadoop.yarn.conf.HAUtil: boolean isAutomaticFailoverEnabled(org.apache.hadoop.conf.Configuration)>",
    "<org.objectweb.asm.ClassWriter: java.lang.String getCommonSuperClass(java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.Session: void setPortForwarding(java.lang.String,int)>",
    "<org.apache.hadoop.yarn.client.ClientRMProxy: org.apache.hadoop.io.Text getTokenService(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String,int)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: org.apache.hadoop.security.authentication.client.ConnectionConfigurator newSslConnConfigurator(int,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.htrace.fasterxml.jackson.databind.ser.std.ToStringSerializer: void serialize(java.lang.Object,org.apache.htrace.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.fasterxml.jackson.databind.SerializerProvider)>",
    "<javax.xml.bind.JAXBException: java.lang.String toString()>",
    "<org.mortbay.log.StdErrLog: void format(java.lang.Throwable)>",
    "<org.apache.commons.configuration.XMLConfiguration: void handleDelimiters(org.apache.commons.configuration.HierarchicalConfiguration$Node,org.apache.commons.configuration.HierarchicalConfiguration$Node,boolean)>",
    "<org.apache.avro.generic.GenericData: int hashCode(java.lang.Object,org.apache.avro.Schema)>",
    "<org.apache.hadoop.yarn.security.ConfiguredYarnAuthorizer: void init(org.apache.hadoop.conf.Configuration)>"
  ],
  "1.8.0": [
    "<org.mortbay.io.bio.StringEndPoint: java.lang.String getOutput()>",
    "<org.apache.hadoop.yarn.security.client.ClientToAMTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.hadoop.yarn.conf.HAUtil: java.lang.String getRMHAId(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.log4j.lf5.viewer.LogTable$LogTableListSelectionListener: void valueChanged(javax.swing.event.ListSelectionEvent)>",
    "<org.mortbay.jetty.handler.ResourceHandler: void setResourceBase(java.lang.String)>",
    "<org.mortbay.util.UrlEncoded: java.lang.String encode(org.mortbay.util.MultiMap,java.lang.String,boolean)>",
    "<com.google.inject.internal.asm.$ClassWriter: java.lang.String getCommonSuperClass(java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.Session: com.jcraft.jsch.KeyExchange receive_kexinit(com.jcraft.jsch.Buffer)>",
    "<org.apache.commons.lang.StringUtils: java.lang.String join(java.lang.Object[],char,int,int)>",
    "<com.google.inject.util.Node: java.lang.String toString()>",
    "<com.google.inject.internal.cglib.core.$EmitUtils: void push_object(com.google.inject.internal.cglib.core.$CodeEmitter,java.lang.Object)>",
    "<org.apache.hadoop.yarn.util.timeline.TimelineUtils: org.apache.hadoop.io.Text buildTimelineTokenService(org.apache.hadoop.conf.Configuration)>",
    "<com.google.inject.spi.Message: java.lang.String getSource()>",
    "<org.codehaus.jackson.map.ser.std.ToStringSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
    "<com.jcraft.jsch.KeyPairRSA: void generate(int)>",
    "<org.apache.commons.collections.ExtendedProperties: java.lang.String interpolateHelper(java.lang.String,java.util.List)>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String getString(java.lang.String)>",
    "<com.google.common.collect.SingletonImmutableSet: java.lang.String toString()>",
    "<org.apache.hadoop.yarn.util.Apps: void setEnvFromInputString(java.util.Map,java.lang.String,java.lang.String)>",
    "<org.apache.htrace.fasterxml.jackson.databind.ser.std.StdKeySerializer: void serialize(java.lang.Object,org.apache.htrace.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.fasterxml.jackson.databind.SerializerProvider)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ApplicationClientProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.logaggregation.LogCLIHelpers: int dumpAllContainersLogs(org.apache.hadoop.yarn.api.records.ApplicationId,java.lang.String,java.io.PrintStream)>",
    "<com.google.common.collect.SingletonImmutableMap: java.lang.String toString()>",
    "<com.jcraft.jsch.ChannelSftp: void put(java.io.InputStream,java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int)>",
    "<org.apache.hadoop.yarn.util.WindowsResourceCalculatorPlugin: java.lang.String getSystemInfoInfoFromShell()>",
    "<com.jcraft.jsch.ChannelSftp$1: void close()>",
    "<org.apache.hadoop.yarn.util.FSDownload: long unpack(java.io.File,java.io.File)>",
    "<org.mortbay.util.MultiMap: java.lang.String getString(java.lang.Object)>",
    "<org.apache.hadoop.yarn.util.ConverterUtils: org.apache.hadoop.security.token.Token convertFromYarn(org.apache.hadoop.yarn.api.records.Token,java.net.InetSocketAddress)>",
    "<com.google.inject.internal.MessageProcessor: java.lang.String getRootMessage(java.lang.Throwable)>",
    "<org.apache.zookeeper.server.quorum.QuorumCnxManager: boolean receiveConnection(java.net.Socket)>",
    "<org.mortbay.xml.XmlConfiguration: void configure(java.lang.Object,org.mortbay.xml.XmlParser$Node,int)>",
    "<org.apache.hadoop.yarn.webapp.WebApps$Builder: org.apache.hadoop.yarn.webapp.WebApp start(org.apache.hadoop.yarn.webapp.WebApp)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ApplicationHistoryProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.log4j.lf5.viewer.configure.MRUFileManager: java.lang.String[] getMRUFileList()>",
    "<org.apache.log4j.or.DefaultRenderer: java.lang.String doRender(java.lang.Object)>",
    "<org.apache.htrace.fasterxml.jackson.databind.node.POJONode: java.lang.String asText()>",
    "<org.mortbay.jetty.handler.ContextHandler: void setResourceBase(java.lang.String)>",
    "<org.apache.htrace.fasterxml.jackson.databind.deser.SettableAnyProperty$AnySetterReferring: void handleResolvedForwardReference(java.lang.Object,java.lang.Object)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl$TimelineURLConnectionFactory: java.net.HttpURLConnection getHttpURLConnection(java.net.URL)>",
    "<com.jcraft.jsch.ProxyHTTP: void connect(com.jcraft.jsch.SocketFactory,java.lang.String,int,int)>",
    "<org.apache.avro.generic.GenericData: int compare(java.lang.Object,java.lang.Object,org.apache.avro.Schema,boolean)>",
    "<org.mortbay.jetty.Request: javax.servlet.http.Cookie[] getCookies()>",
    "<com.jcraft.jsch.Channel: void connect(int)>",
    "<org.apache.log4j.or.sax.AttributesRenderer: java.lang.String doRender(java.lang.Object)>",
    "<org.apache.commons.configuration.XMLConfiguration$XMLNode: void updateElement(java.lang.Object)>",
    "<org.apache.hadoop.yarn.nodelabels.FileSystemNodeLabelsStore: java.lang.String getDefaultFSNodeLabelsRootDir()>",
    "<org.apache.hadoop.yarn.server.api.impl.pb.client.SCMAdminProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.conf.YarnConfiguration: void <clinit>()>",
    "<org.apache.hadoop.yarn.security.AMRMTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.log4j.DefaultThrowableRenderer: java.lang.String[] render(java.lang.Throwable)>",
    "<org.mortbay.resource.Resource: org.mortbay.resource.Resource newResource(java.net.URL,boolean)>",
    "<org.apache.hadoop.yarn.server.security.ApplicationACLsManager: void addApplication(org.apache.hadoop.yarn.api.records.ApplicationId,java.util.Map)>",
    "<com.google.common.util.concurrent.Futures: java.lang.Object newFromConstructor(java.lang.reflect.Constructor,java.lang.Throwable)>",
    "<org.apache.hadoop.yarn.webapp.log.AggregatedLogsBlock: void render(org.apache.hadoop.yarn.webapp.view.HtmlBlock$Block)>",
    "<org.mortbay.jetty.servlet.DefaultServlet: void init()>",
    "<org.jets3t.service.utils.ServiceUtils: java.lang.String join(java.util.List,java.lang.String)>",
    "<com.jcraft.jsch.ChannelSftp$1: void write(byte[],int,int)>",
    "<org.xerial.snappy.SnappyLoader: void loadSnappySystemProperties()>",
    "<org.apache.avro.generic.GenericData: void toString(java.lang.Object,java.lang.StringBuilder)>",
    "<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.Object)>",
    "<org.apache.htrace.fasterxml.jackson.databind.deser.std.StringDeserializer: java.lang.String deserialize(org.apache.htrace.fasterxml.jackson.core.JsonParser,org.apache.htrace.fasterxml.jackson.databind.DeserializationContext)>",
    "<org.codehaus.jackson.map.ser.std.StdKeySerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
    "<com.jcraft.jsch.ChannelSftp: void put(java.lang.String,java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int)>",
    "<org.jets3t.service.utils.RestUtils: java.lang.String makeServiceCanonicalString(java.lang.String,java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.util.List)>",
    "<org.apache.ignite.yarn.IgniteYarnClient: void main(java.lang.String[])>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ApplicationMasterProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.security.ContainerTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.commons.logging.LogConfigurationException: void <init>(java.lang.Throwable)>",
    "<org.apache.commons.cli.HelpFormatter: java.lang.StringBuffer renderOptions(java.lang.StringBuffer,int,org.apache.commons.cli.Options,int,int)>",
    "<org.apache.hadoop.yarn.logaggregation.LogCLIHelpers: int dumpAContainersLogs(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.Session: void connect(int)>",
    "<org.apache.hadoop.yarn.util.YarnVersionInfo: java.lang.String getBuildVersion()>",
    "<org.apache.log4j.helpers.PatternParser$MDCPatternConverter: java.lang.String convert(org.apache.log4j.spi.LoggingEvent)>",
    "<com.google.common.base.Functions$ToStringFunction: java.lang.String apply(java.lang.Object)>",
    "<org.mortbay.jetty.security.SslSocketConnector: java.net.ServerSocket newServerSocket(java.lang.String,int,int)>",
    "<org.apache.hadoop.yarn.webapp.util.WebAppUtils: java.util.List getProxyHostsAndPortsForAmFilter(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: void serviceInit(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.commons.configuration.AbstractConfiguration$1: java.lang.String lookup(java.lang.String)>",
    "<org.apache.hadoop.yarn.security.AdminACLsManager: void <init>(org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.Session: void initInflater(java.lang.String)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ClientSCMProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.Session: void updateKeys(com.jcraft.jsch.KeyExchange)>",
    "<org.apache.commons.configuration.XMLConfiguration$XMLBuilderVisitor: void updateAttribute(org.apache.commons.configuration.HierarchicalConfiguration$Node,org.w3c.dom.Element,java.lang.String,char)>",
    "<org.apache.hadoop.yarn.client.AHSProxy: java.lang.Object getProxy(org.apache.hadoop.conf.Configuration,java.lang.Class,java.net.InetSocketAddress)>",
    "<org.apache.hadoop.yarn.conf.HAUtil: java.util.Collection getRMHAIds(org.apache.hadoop.conf.Configuration)>",
    "<org.mortbay.xml.XmlConfiguration: void set(java.lang.Object,org.mortbay.xml.XmlParser$Node)>",
    "<org.apache.log4j.or.ThreadGroupRenderer: java.lang.String doRender(java.lang.Object)>",
    "<com.jcraft.jsch.KeyPairDSA: void generate(int)>",
    "<org.apache.htrace.commons.logging.LogConfigurationException: void <init>(java.lang.Throwable)>",
    "<org.apache.hadoop.yarn.security.client.RMDelegationTokenIdentifier$Renewer: org.apache.hadoop.yarn.api.ApplicationClientProtocol getRmClient(org.apache.hadoop.security.token.Token,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.util.RMHAUtils: java.util.List getRMHAWebappAddresses(org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<com.google.inject.internal.Initializer$InjectableReference: java.lang.String toString()>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogValue: java.io.FileInputStream secureOpenFile(java.io.File)>",
    "<org.apache.commons.configuration.AbstractConfiguration: java.lang.String interpolate(java.lang.String)>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogReader: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)>",
    "<org.apache.hadoop.yarn.server.security.ApplicationACLsManager: void <clinit>()>",
    "<org.apache.commons.lang.ObjectUtils: java.lang.String toString(java.lang.Object)>",
    "<net.sf.cglib.core.EmitUtils: void push_object(net.sf.cglib.core.CodeEmitter,java.lang.Object)>",
    "<com.jcraft.jsch.ProxySOCKS4: void connect(com.jcraft.jsch.SocketFactory,java.lang.String,int,int)>",
    "<org.apache.hadoop.yarn.server.api.impl.pb.client.ResourceManagerAdministrationProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.client.ClientRMProxy: void setAMRMTokenService(org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.KeyPair: com.jcraft.jsch.KeyPair load(com.jcraft.jsch.JSch,java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.ProxySOCKS5: void connect(com.jcraft.jsch.SocketFactory,java.lang.String,int,int)>",
    "<org.apache.directory.api.util.OsgiUtils: java.lang.String getBundleExports(java.io.File)>",
    "<org.codehaus.jettison.json.JSONArray: java.lang.String getString(int)>",
    "<com.google.inject.internal.ProcessedBindingData: void initializeBindings()>",
    "<org.jets3t.service.utils.ServiceUtils: java.util.Map cleanRestMetadataMap(java.util.Map,java.lang.String,java.lang.String)>",
    "<org.apache.commons.lang.exception.ExceptionUtils: java.lang.String[] getRootCauseStackTrace(java.lang.Throwable)>",
    "<org.apache.hadoop.yarn.util.WindowsBasedProcessTree: java.lang.String getAllProcessInfoFromShell()>",
    "<javax.xml.bind.ContextFinder: java.util.Properties loadJAXBProperties(java.lang.ClassLoader,java.lang.String)>",
    "<com.jcraft.jsch.IdentityFile: boolean setPassphrase(byte[])>",
    "<org.mortbay.jetty.handler.DebugHandler: void handle(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,int)>",
    "<com.jcraft.jsch.KnownHosts: void setKnownHosts(java.io.InputStream)>",
    "<org.mortbay.xml.XmlConfiguration: java.lang.Object value(java.lang.Object,org.mortbay.xml.XmlParser$Node)>",
    "<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
    "<org.apache.hadoop.yarn.util.RMHAUtils: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState getHAState(org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<org.apache.commons.lang.StringUtils: java.lang.String join(java.lang.Object[],java.lang.String,int,int)>",
    "<com.jcraft.jsch.Session: void initDeflater(java.lang.String)>",
    "<com.jcraft.jsch.Util: java.net.Socket createSocket(java.lang.String,int,int)>",
    "<org.apache.hadoop.yarn.util.YarnVersionInfo: void <init>()>",
    "<com.google.common.collect.SingletonImmutableList: java.lang.String toString()>",
    "<org.codehaus.jettison.json.JSONObject: java.io.Writer write(java.io.Writer)>",
    "<org.mortbay.jetty.Request: void extractParameters()>",
    "<com.jcraft.jsch.ChannelSftp: void _put(java.io.InputStream,java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int)>",
    "<org.codehaus.jettison.mapped.MappedXMLStreamReader: void <init>(org.codehaus.jettison.json.JSONObject,org.codehaus.jettison.mapped.MappedNamespaceConvention)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: long renewDelegationToken(org.apache.hadoop.security.token.Token)>",
    "<org.apache.hadoop.yarn.webapp.view.HtmlBlock: org.apache.hadoop.security.UserGroupInformation getCallerUGI()>",
    "<org.apache.hadoop.yarn.util.RMHAUtils: java.lang.String findActiveRMHAId(org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<org.apache.commons.lang.text.StrLookup$MapStrLookup: java.lang.String lookup(java.lang.String)>",
    "<com.google.inject.spi.Message: java.lang.Object writeReplace()>",
    "<org.apache.hadoop.yarn.webapp.util.WebAppUtils: java.lang.String getResolvedAddress(java.net.InetSocketAddress)>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogWriter$1: org.apache.hadoop.fs.FSDataOutputStream run()>",
    "<com.sun.xml.bind.api.impl.NameConverter$Standard: java.lang.String combine(java.util.List,char)>",
    "<com.jcraft.jsch.ChannelSftp: void start()>",
    "<org.mortbay.jetty.servlet.ServletHandler$Chain: java.lang.String toString()>",
    "<org.jets3t.service.utils.gatekeeper.GatekeeperMessage: void encodeProperty(java.util.Properties,java.lang.String,java.lang.Object)>",
    "<org.apache.hadoop.yarn.conf.YarnConfiguration: java.net.InetSocketAddress getSocketAddr(java.lang.String,java.lang.String,int)>",
    "<com.google.common.util.concurrent.AbstractListeningExecutorService: java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit)>",
    "<org.apache.hadoop.yarn.util.WindowsBasedProcessTree: boolean isAvailable()>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: void cancelDelegationToken(org.apache.hadoop.security.token.Token)>",
    "<org.jets3t.service.model.StorageObject: long getContentLength()>",
    "<org.apache.jute.compiler.generated.Rcc: void main(java.lang.String[])>",
    "<org.apache.hadoop.yarn.util.FSDownload: org.apache.hadoop.fs.Path copy(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)>",
    "<org.apache.htrace.fasterxml.jackson.databind.util.TokenBuffer$Parser: java.lang.String getText()>",
    "<org.apache.avro.generic.GenericData$Array: java.lang.String toString()>",
    "<com.google.inject.internal.util.$ImmutableSet$SingletonImmutableSet: java.lang.String toString()>",
    "<com.jcraft.jsch.IdentityFile: com.jcraft.jsch.IdentityFile newInstance(java.lang.String,java.lang.String,com.jcraft.jsch.JSch)>",
    "<org.apache.commons.io.filefilter.AndFileFilter: java.lang.String toString()>",
    "<org.apache.ignite.yarn.IgniteYarnClient: void setupAppMasterEnv(java.util.Map,org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<org.apache.zookeeper.server.quorum.QuorumPeerConfig: void parseProperties(java.util.Properties)>",
    "<org.codehaus.jackson.map.ser.std.RawSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
    "<org.mortbay.jetty.security.HashUserRealm: void loadConfig()>",
    "<com.jcraft.jsch.Channel$1: void flush()>",
    "<org.apache.htrace.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,org.apache.htrace.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.fasterxml.jackson.databind.SerializerProvider)>",
    "<org.apache.hadoop.yarn.client.RMProxy: java.lang.Object getProxy(org.apache.hadoop.conf.Configuration,java.lang.Class,java.net.InetSocketAddress)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: void putTimelineDataInJSONFile(java.lang.String,java.lang.String)>",
    "<org.apache.hadoop.yarn.conf.HAUtil: boolean isHAEnabled(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ContainerManagementProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.IdentityFile: void <init>(java.lang.String,byte[],byte[],com.jcraft.jsch.JSch)>",
    "<com.jcraft.jsch.Session: void setTimeout(int)>",
    "<org.apache.log4j.jmx.Agent: void startServer(java.lang.Object)>",
    "<org.apache.commons.beanutils.BeanComparator: int compare(java.lang.Object,java.lang.Object)>",
    "<org.mortbay.io.bio.StringEndPoint: void setInput(java.lang.String)>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String toString()>",
    "<org.apache.hadoop.yarn.security.NMTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.ignite.yarn.ApplicationMaster: void init()>",
    "<org.apache.hadoop.yarn.util.ProcfsBasedProcessTree: void <clinit>()>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogWriter: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.security.UserGroupInformation)>",
    "<org.mortbay.jetty.security.BasicAuthenticator: java.security.Principal authenticate(org.mortbay.jetty.security.UserRealm,java.lang.String,org.mortbay.jetty.Request,org.mortbay.jetty.Response)>",
    "<org.mortbay.util.LazyList: java.lang.String[] toStringArray(java.lang.Object)>",
    "<com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)>",
    "<com.google.inject.internal.util.$ImmutableSet: java.lang.String toString()>",
    "<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
    "<org.apache.ignite.yarn.ApplicationMaster: void onContainersAllocated(java.util.List)>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String valueToString(java.lang.Object)>",
    "<org.apache.htrace.fasterxml.jackson.core.JsonLocation: java.lang.String toString()>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>",
    "<org.mortbay.xml.XmlParser: void setValidating(boolean)>",
    "<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>",
    "<com.sun.jersey.api.uri.UriTemplate: java.lang.StringBuilder createURIComponent(com.sun.jersey.api.uri.UriComponent$Type,java.lang.String,java.util.Map,boolean,java.lang.StringBuilder)>",
    "<org.apache.commons.lang.builder.ReflectionToStringBuilder: java.lang.String[] toNoNullStringArray(java.lang.Object[])>",
    "<org.apache.htrace.fasterxml.jackson.databind.util.TokenBuffer$Parser: org.apache.htrace.fasterxml.jackson.core.JsonToken nextToken()>",
    "<org.mortbay.jetty.servlet.Invoker: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "<org.apache.hadoop.yarn.conf.HAUtil: boolean isAutomaticFailoverEnabled(org.apache.hadoop.conf.Configuration)>",
    "<org.objectweb.asm.ClassWriter: java.lang.String getCommonSuperClass(java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.Session: void setPortForwarding(java.lang.String,int)>",
    "<org.apache.hadoop.yarn.client.ClientRMProxy: org.apache.hadoop.io.Text getTokenService(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String,int)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: org.apache.hadoop.security.authentication.client.ConnectionConfigurator newSslConnConfigurator(int,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.htrace.fasterxml.jackson.databind.ser.std.ToStringSerializer: void serialize(java.lang.Object,org.apache.htrace.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.fasterxml.jackson.databind.SerializerProvider)>",
    "<javax.xml.bind.JAXBException: java.lang.String toString()>",
    "<org.mortbay.log.StdErrLog: void format(java.lang.Throwable)>",
    "<org.apache.commons.configuration.XMLConfiguration: void handleDelimiters(org.apache.commons.configuration.HierarchicalConfiguration$Node,org.apache.commons.configuration.HierarchicalConfiguration$Node,boolean)>",
    "<org.apache.avro.generic.GenericData: int hashCode(java.lang.Object,org.apache.avro.Schema)>",
    "<org.apache.hadoop.yarn.security.ConfiguredYarnAuthorizer: void init(org.apache.hadoop.conf.Configuration)>"
  ],
  "2.6.0": [
    "<org.mortbay.io.bio.StringEndPoint: java.lang.String getOutput()>",
    "<org.apache.hadoop.yarn.security.client.ClientToAMTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.hadoop.yarn.conf.HAUtil: java.lang.String getRMHAId(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.log4j.lf5.viewer.LogTable$LogTableListSelectionListener: void valueChanged(javax.swing.event.ListSelectionEvent)>",
    "<org.mortbay.jetty.handler.ResourceHandler: void setResourceBase(java.lang.String)>",
    "<org.mortbay.util.UrlEncoded: java.lang.String encode(org.mortbay.util.MultiMap,java.lang.String,boolean)>",
    "<com.google.inject.internal.asm.$ClassWriter: java.lang.String getCommonSuperClass(java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.Session: com.jcraft.jsch.KeyExchange receive_kexinit(com.jcraft.jsch.Buffer)>",
    "<org.apache.commons.lang.StringUtils: java.lang.String join(java.lang.Object[],char,int,int)>",
    "<com.google.inject.util.Node: java.lang.String toString()>",
    "<com.google.inject.internal.cglib.core.$EmitUtils: void push_object(com.google.inject.internal.cglib.core.$CodeEmitter,java.lang.Object)>",
    "<org.apache.hadoop.yarn.util.timeline.TimelineUtils: org.apache.hadoop.io.Text buildTimelineTokenService(org.apache.hadoop.conf.Configuration)>",
    "<com.google.inject.spi.Message: java.lang.String getSource()>",
    "<org.codehaus.jackson.map.ser.std.ToStringSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
    "<com.jcraft.jsch.KeyPairRSA: void generate(int)>",
    "<org.apache.commons.collections.ExtendedProperties: java.lang.String interpolateHelper(java.lang.String,java.util.List)>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String getString(java.lang.String)>",
    "<com.google.common.collect.SingletonImmutableSet: java.lang.String toString()>",
    "<org.apache.hadoop.yarn.util.Apps: void setEnvFromInputString(java.util.Map,java.lang.String,java.lang.String)>",
    "<org.apache.htrace.fasterxml.jackson.databind.ser.std.StdKeySerializer: void serialize(java.lang.Object,org.apache.htrace.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.fasterxml.jackson.databind.SerializerProvider)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ApplicationClientProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.logaggregation.LogCLIHelpers: int dumpAllContainersLogs(org.apache.hadoop.yarn.api.records.ApplicationId,java.lang.String,java.io.PrintStream)>",
    "<com.google.common.collect.SingletonImmutableMap: java.lang.String toString()>",
    "<com.jcraft.jsch.ChannelSftp: void put(java.io.InputStream,java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int)>",
    "<org.apache.hadoop.yarn.util.WindowsResourceCalculatorPlugin: java.lang.String getSystemInfoInfoFromShell()>",
    "<com.jcraft.jsch.ChannelSftp$1: void close()>",
    "<org.apache.hadoop.yarn.util.FSDownload: long unpack(java.io.File,java.io.File)>",
    "<org.mortbay.util.MultiMap: java.lang.String getString(java.lang.Object)>",
    "<org.apache.hadoop.yarn.util.ConverterUtils: org.apache.hadoop.security.token.Token convertFromYarn(org.apache.hadoop.yarn.api.records.Token,java.net.InetSocketAddress)>",
    "<com.google.inject.internal.MessageProcessor: java.lang.String getRootMessage(java.lang.Throwable)>",
    "<org.apache.zookeeper.server.quorum.QuorumCnxManager: boolean receiveConnection(java.net.Socket)>",
    "<org.mortbay.xml.XmlConfiguration: void configure(java.lang.Object,org.mortbay.xml.XmlParser$Node,int)>",
    "<org.apache.hadoop.yarn.webapp.WebApps$Builder: org.apache.hadoop.yarn.webapp.WebApp start(org.apache.hadoop.yarn.webapp.WebApp)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ApplicationHistoryProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.log4j.lf5.viewer.configure.MRUFileManager: java.lang.String[] getMRUFileList()>",
    "<org.apache.log4j.or.DefaultRenderer: java.lang.String doRender(java.lang.Object)>",
    "<org.apache.htrace.fasterxml.jackson.databind.node.POJONode: java.lang.String asText()>",
    "<org.mortbay.jetty.handler.ContextHandler: void setResourceBase(java.lang.String)>",
    "<org.apache.htrace.fasterxml.jackson.databind.deser.SettableAnyProperty$AnySetterReferring: void handleResolvedForwardReference(java.lang.Object,java.lang.Object)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl$TimelineURLConnectionFactory: java.net.HttpURLConnection getHttpURLConnection(java.net.URL)>",
    "<com.jcraft.jsch.ProxyHTTP: void connect(com.jcraft.jsch.SocketFactory,java.lang.String,int,int)>",
    "<org.apache.avro.generic.GenericData: int compare(java.lang.Object,java.lang.Object,org.apache.avro.Schema,boolean)>",
    "<org.mortbay.jetty.Request: javax.servlet.http.Cookie[] getCookies()>",
    "<com.jcraft.jsch.Channel: void connect(int)>",
    "<org.apache.log4j.or.sax.AttributesRenderer: java.lang.String doRender(java.lang.Object)>",
    "<org.apache.commons.configuration.XMLConfiguration$XMLNode: void updateElement(java.lang.Object)>",
    "<org.apache.hadoop.yarn.nodelabels.FileSystemNodeLabelsStore: java.lang.String getDefaultFSNodeLabelsRootDir()>",
    "<org.apache.hadoop.yarn.server.api.impl.pb.client.SCMAdminProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.conf.YarnConfiguration: void <clinit>()>",
    "<org.apache.hadoop.yarn.security.AMRMTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.log4j.DefaultThrowableRenderer: java.lang.String[] render(java.lang.Throwable)>",
    "<org.mortbay.resource.Resource: org.mortbay.resource.Resource newResource(java.net.URL,boolean)>",
    "<org.apache.hadoop.yarn.server.security.ApplicationACLsManager: void addApplication(org.apache.hadoop.yarn.api.records.ApplicationId,java.util.Map)>",
    "<com.google.common.util.concurrent.Futures: java.lang.Object newFromConstructor(java.lang.reflect.Constructor,java.lang.Throwable)>",
    "<org.apache.hadoop.yarn.webapp.log.AggregatedLogsBlock: void render(org.apache.hadoop.yarn.webapp.view.HtmlBlock$Block)>",
    "<org.mortbay.jetty.servlet.DefaultServlet: void init()>",
    "<org.jets3t.service.utils.ServiceUtils: java.lang.String join(java.util.List,java.lang.String)>",
    "<com.jcraft.jsch.ChannelSftp$1: void write(byte[],int,int)>",
    "<org.xerial.snappy.SnappyLoader: void loadSnappySystemProperties()>",
    "<org.apache.avro.generic.GenericData: void toString(java.lang.Object,java.lang.StringBuilder)>",
    "<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.Object)>",
    "<org.apache.htrace.fasterxml.jackson.databind.deser.std.StringDeserializer: java.lang.String deserialize(org.apache.htrace.fasterxml.jackson.core.JsonParser,org.apache.htrace.fasterxml.jackson.databind.DeserializationContext)>",
    "<org.codehaus.jackson.map.ser.std.StdKeySerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
    "<com.jcraft.jsch.ChannelSftp: void put(java.lang.String,java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int)>",
    "<org.jets3t.service.utils.RestUtils: java.lang.String makeServiceCanonicalString(java.lang.String,java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.util.List)>",
    "<org.apache.ignite.yarn.IgniteYarnClient: void main(java.lang.String[])>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ApplicationMasterProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.security.ContainerTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.commons.logging.LogConfigurationException: void <init>(java.lang.Throwable)>",
    "<org.apache.commons.cli.HelpFormatter: java.lang.StringBuffer renderOptions(java.lang.StringBuffer,int,org.apache.commons.cli.Options,int,int)>",
    "<org.apache.hadoop.yarn.logaggregation.LogCLIHelpers: int dumpAContainersLogs(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.Session: void connect(int)>",
    "<org.apache.hadoop.yarn.util.YarnVersionInfo: java.lang.String getBuildVersion()>",
    "<org.apache.log4j.helpers.PatternParser$MDCPatternConverter: java.lang.String convert(org.apache.log4j.spi.LoggingEvent)>",
    "<com.google.common.base.Functions$ToStringFunction: java.lang.String apply(java.lang.Object)>",
    "<org.mortbay.jetty.security.SslSocketConnector: java.net.ServerSocket newServerSocket(java.lang.String,int,int)>",
    "<org.apache.hadoop.yarn.webapp.util.WebAppUtils: java.util.List getProxyHostsAndPortsForAmFilter(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: void serviceInit(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.commons.configuration.AbstractConfiguration$1: java.lang.String lookup(java.lang.String)>",
    "<org.apache.hadoop.yarn.security.AdminACLsManager: void <init>(org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.Session: void initInflater(java.lang.String)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ClientSCMProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.Session: void updateKeys(com.jcraft.jsch.KeyExchange)>",
    "<org.apache.commons.configuration.XMLConfiguration$XMLBuilderVisitor: void updateAttribute(org.apache.commons.configuration.HierarchicalConfiguration$Node,org.w3c.dom.Element,java.lang.String,char)>",
    "<org.apache.hadoop.yarn.client.AHSProxy: java.lang.Object getProxy(org.apache.hadoop.conf.Configuration,java.lang.Class,java.net.InetSocketAddress)>",
    "<org.apache.hadoop.yarn.conf.HAUtil: java.util.Collection getRMHAIds(org.apache.hadoop.conf.Configuration)>",
    "<org.mortbay.xml.XmlConfiguration: void set(java.lang.Object,org.mortbay.xml.XmlParser$Node)>",
    "<org.apache.log4j.or.ThreadGroupRenderer: java.lang.String doRender(java.lang.Object)>",
    "<com.jcraft.jsch.KeyPairDSA: void generate(int)>",
    "<org.apache.htrace.commons.logging.LogConfigurationException: void <init>(java.lang.Throwable)>",
    "<org.apache.hadoop.yarn.security.client.RMDelegationTokenIdentifier$Renewer: org.apache.hadoop.yarn.api.ApplicationClientProtocol getRmClient(org.apache.hadoop.security.token.Token,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.util.RMHAUtils: java.util.List getRMHAWebappAddresses(org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<com.google.inject.internal.Initializer$InjectableReference: java.lang.String toString()>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogValue: java.io.FileInputStream secureOpenFile(java.io.File)>",
    "<org.apache.commons.configuration.AbstractConfiguration: java.lang.String interpolate(java.lang.String)>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogReader: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)>",
    "<org.apache.hadoop.yarn.server.security.ApplicationACLsManager: void <clinit>()>",
    "<org.apache.commons.lang.ObjectUtils: java.lang.String toString(java.lang.Object)>",
    "<com.jcraft.jsch.ProxySOCKS4: void connect(com.jcraft.jsch.SocketFactory,java.lang.String,int,int)>",
    "<org.apache.hadoop.yarn.server.api.impl.pb.client.ResourceManagerAdministrationProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.client.ClientRMProxy: void setAMRMTokenService(org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.KeyPair: com.jcraft.jsch.KeyPair load(com.jcraft.jsch.JSch,java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.ProxySOCKS5: void connect(com.jcraft.jsch.SocketFactory,java.lang.String,int,int)>",
    "<org.apache.directory.api.util.OsgiUtils: java.lang.String getBundleExports(java.io.File)>",
    "<org.codehaus.jettison.json.JSONArray: java.lang.String getString(int)>",
    "<com.google.inject.internal.ProcessedBindingData: void initializeBindings()>",
    "<org.jets3t.service.utils.ServiceUtils: java.util.Map cleanRestMetadataMap(java.util.Map,java.lang.String,java.lang.String)>",
    "<org.apache.commons.lang.exception.ExceptionUtils: java.lang.String[] getRootCauseStackTrace(java.lang.Throwable)>",
    "<org.apache.hadoop.yarn.util.WindowsBasedProcessTree: java.lang.String getAllProcessInfoFromShell()>",
    "<javax.xml.bind.ContextFinder: java.util.Properties loadJAXBProperties(java.lang.ClassLoader,java.lang.String)>",
    "<com.jcraft.jsch.IdentityFile: boolean setPassphrase(byte[])>",
    "<org.mortbay.jetty.handler.DebugHandler: void handle(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,int)>",
    "<com.jcraft.jsch.KnownHosts: void setKnownHosts(java.io.InputStream)>",
    "<org.mortbay.xml.XmlConfiguration: java.lang.Object value(java.lang.Object,org.mortbay.xml.XmlParser$Node)>",
    "<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
    "<org.apache.hadoop.yarn.util.RMHAUtils: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState getHAState(org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<org.apache.commons.lang.StringUtils: java.lang.String join(java.lang.Object[],java.lang.String,int,int)>",
    "<com.jcraft.jsch.Session: void initDeflater(java.lang.String)>",
    "<com.jcraft.jsch.Util: java.net.Socket createSocket(java.lang.String,int,int)>",
    "<org.apache.hadoop.yarn.util.YarnVersionInfo: void <init>()>",
    "<com.google.common.collect.SingletonImmutableList: java.lang.String toString()>",
    "<org.codehaus.jettison.json.JSONObject: java.io.Writer write(java.io.Writer)>",
    "<org.mortbay.jetty.Request: void extractParameters()>",
    "<com.jcraft.jsch.ChannelSftp: void _put(java.io.InputStream,java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int)>",
    "<org.codehaus.jettison.mapped.MappedXMLStreamReader: void <init>(org.codehaus.jettison.json.JSONObject,org.codehaus.jettison.mapped.MappedNamespaceConvention)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: long renewDelegationToken(org.apache.hadoop.security.token.Token)>",
    "<org.apache.hadoop.yarn.webapp.view.HtmlBlock: org.apache.hadoop.security.UserGroupInformation getCallerUGI()>",
    "<org.apache.hadoop.yarn.util.RMHAUtils: java.lang.String findActiveRMHAId(org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<org.apache.commons.lang.text.StrLookup$MapStrLookup: java.lang.String lookup(java.lang.String)>",
    "<com.google.inject.spi.Message: java.lang.Object writeReplace()>",
    "<org.apache.hadoop.yarn.webapp.util.WebAppUtils: java.lang.String getResolvedAddress(java.net.InetSocketAddress)>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogWriter$1: org.apache.hadoop.fs.FSDataOutputStream run()>",
    "<com.sun.xml.bind.api.impl.NameConverter$Standard: java.lang.String combine(java.util.List,char)>",
    "<com.jcraft.jsch.ChannelSftp: void start()>",
    "<org.mortbay.jetty.servlet.ServletHandler$Chain: java.lang.String toString()>",
    "<org.jets3t.service.utils.gatekeeper.GatekeeperMessage: void encodeProperty(java.util.Properties,java.lang.String,java.lang.Object)>",
    "<org.apache.hadoop.yarn.conf.YarnConfiguration: java.net.InetSocketAddress getSocketAddr(java.lang.String,java.lang.String,int)>",
    "<com.google.common.util.concurrent.AbstractListeningExecutorService: java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit)>",
    "<org.apache.hadoop.yarn.util.WindowsBasedProcessTree: boolean isAvailable()>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: void cancelDelegationToken(org.apache.hadoop.security.token.Token)>",
    "<org.jets3t.service.model.StorageObject: long getContentLength()>",
    "<org.apache.jute.compiler.generated.Rcc: void main(java.lang.String[])>",
    "<org.apache.hadoop.yarn.util.FSDownload: org.apache.hadoop.fs.Path copy(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)>",
    "<org.apache.htrace.fasterxml.jackson.databind.util.TokenBuffer$Parser: java.lang.String getText()>",
    "<org.apache.avro.generic.GenericData$Array: java.lang.String toString()>",
    "<com.google.inject.internal.util.$ImmutableSet$SingletonImmutableSet: java.lang.String toString()>",
    "<com.jcraft.jsch.IdentityFile: com.jcraft.jsch.IdentityFile newInstance(java.lang.String,java.lang.String,com.jcraft.jsch.JSch)>",
    "<org.apache.commons.io.filefilter.AndFileFilter: java.lang.String toString()>",
    "<org.apache.ignite.yarn.IgniteYarnClient: void setupAppMasterEnv(java.util.Map,org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<org.apache.zookeeper.server.quorum.QuorumPeerConfig: void parseProperties(java.util.Properties)>",
    "<org.codehaus.jackson.map.ser.std.RawSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
    "<org.mortbay.jetty.security.HashUserRealm: void loadConfig()>",
    "<com.jcraft.jsch.Channel$1: void flush()>",
    "<org.apache.htrace.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,org.apache.htrace.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.fasterxml.jackson.databind.SerializerProvider)>",
    "<org.apache.hadoop.yarn.client.RMProxy: java.lang.Object getProxy(org.apache.hadoop.conf.Configuration,java.lang.Class,java.net.InetSocketAddress)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: void putTimelineDataInJSONFile(java.lang.String,java.lang.String)>",
    "<org.apache.hadoop.yarn.conf.HAUtil: boolean isHAEnabled(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ContainerManagementProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.IdentityFile: void <init>(java.lang.String,byte[],byte[],com.jcraft.jsch.JSch)>",
    "<com.jcraft.jsch.Session: void setTimeout(int)>",
    "<org.apache.log4j.jmx.Agent: void startServer(java.lang.Object)>",
    "<org.mortbay.io.bio.StringEndPoint: void setInput(java.lang.String)>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String toString()>",
    "<org.apache.hadoop.yarn.security.NMTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.ignite.yarn.ApplicationMaster: void init()>",
    "<org.apache.hadoop.yarn.util.ProcfsBasedProcessTree: void <clinit>()>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogWriter: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.security.UserGroupInformation)>",
    "<org.mortbay.jetty.security.BasicAuthenticator: java.security.Principal authenticate(org.mortbay.jetty.security.UserRealm,java.lang.String,org.mortbay.jetty.Request,org.mortbay.jetty.Response)>",
    "<org.mortbay.util.LazyList: java.lang.String[] toStringArray(java.lang.Object)>",
    "<com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)>",
    "<com.google.inject.internal.util.$ImmutableSet: java.lang.String toString()>",
    "<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
    "<org.apache.ignite.yarn.ApplicationMaster: void onContainersAllocated(java.util.List)>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String valueToString(java.lang.Object)>",
    "<org.apache.htrace.fasterxml.jackson.core.JsonLocation: java.lang.String toString()>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>",
    "<org.mortbay.xml.XmlParser: void setValidating(boolean)>",
    "<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>",
    "<com.sun.jersey.api.uri.UriTemplate: java.lang.StringBuilder createURIComponent(com.sun.jersey.api.uri.UriComponent$Type,java.lang.String,java.util.Map,boolean,java.lang.StringBuilder)>",
    "<org.apache.commons.lang.builder.ReflectionToStringBuilder: java.lang.String[] toNoNullStringArray(java.lang.Object[])>",
    "<org.apache.htrace.fasterxml.jackson.databind.util.TokenBuffer$Parser: org.apache.htrace.fasterxml.jackson.core.JsonToken nextToken()>",
    "<org.mortbay.jetty.servlet.Invoker: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "<org.apache.hadoop.yarn.conf.HAUtil: boolean isAutomaticFailoverEnabled(org.apache.hadoop.conf.Configuration)>",
    "<org.objectweb.asm.ClassWriter: java.lang.String getCommonSuperClass(java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.Session: void setPortForwarding(java.lang.String,int)>",
    "<org.apache.hadoop.yarn.client.ClientRMProxy: org.apache.hadoop.io.Text getTokenService(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String,int)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: org.apache.hadoop.security.authentication.client.ConnectionConfigurator newSslConnConfigurator(int,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.htrace.fasterxml.jackson.databind.ser.std.ToStringSerializer: void serialize(java.lang.Object,org.apache.htrace.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.fasterxml.jackson.databind.SerializerProvider)>",
    "<javax.xml.bind.JAXBException: java.lang.String toString()>",
    "<org.mortbay.log.StdErrLog: void format(java.lang.Throwable)>",
    "<org.apache.commons.configuration.XMLConfiguration: void handleDelimiters(org.apache.commons.configuration.HierarchicalConfiguration$Node,org.apache.commons.configuration.HierarchicalConfiguration$Node,boolean)>",
    "<org.apache.avro.generic.GenericData: int hashCode(java.lang.Object,org.apache.avro.Schema)>",
    "<org.apache.hadoop.yarn.security.ConfiguredYarnAuthorizer: void init(org.apache.hadoop.conf.Configuration)>"
  ],
  "2.2.0": [
    "<org.mortbay.io.bio.StringEndPoint: java.lang.String getOutput()>",
    "<org.apache.hadoop.yarn.security.client.ClientToAMTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.hadoop.yarn.conf.HAUtil: java.lang.String getRMHAId(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.log4j.lf5.viewer.LogTable$LogTableListSelectionListener: void valueChanged(javax.swing.event.ListSelectionEvent)>",
    "<org.mortbay.jetty.handler.ResourceHandler: void setResourceBase(java.lang.String)>",
    "<org.mortbay.util.UrlEncoded: java.lang.String encode(org.mortbay.util.MultiMap,java.lang.String,boolean)>",
    "<com.google.inject.internal.asm.$ClassWriter: java.lang.String getCommonSuperClass(java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.Session: com.jcraft.jsch.KeyExchange receive_kexinit(com.jcraft.jsch.Buffer)>",
    "<org.apache.commons.lang.StringUtils: java.lang.String join(java.lang.Object[],char,int,int)>",
    "<com.google.inject.util.Node: java.lang.String toString()>",
    "<com.google.inject.internal.cglib.core.$EmitUtils: void push_object(com.google.inject.internal.cglib.core.$CodeEmitter,java.lang.Object)>",
    "<org.apache.hadoop.yarn.util.timeline.TimelineUtils: org.apache.hadoop.io.Text buildTimelineTokenService(org.apache.hadoop.conf.Configuration)>",
    "<com.google.inject.spi.Message: java.lang.String getSource()>",
    "<org.codehaus.jackson.map.ser.std.ToStringSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
    "<com.jcraft.jsch.KeyPairRSA: void generate(int)>",
    "<org.apache.commons.collections.ExtendedProperties: java.lang.String interpolateHelper(java.lang.String,java.util.List)>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String getString(java.lang.String)>",
    "<com.google.common.collect.SingletonImmutableSet: java.lang.String toString()>",
    "<org.apache.hadoop.yarn.util.Apps: void setEnvFromInputString(java.util.Map,java.lang.String,java.lang.String)>",
    "<org.apache.htrace.fasterxml.jackson.databind.ser.std.StdKeySerializer: void serialize(java.lang.Object,org.apache.htrace.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.fasterxml.jackson.databind.SerializerProvider)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ApplicationClientProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.logaggregation.LogCLIHelpers: int dumpAllContainersLogs(org.apache.hadoop.yarn.api.records.ApplicationId,java.lang.String,java.io.PrintStream)>",
    "<com.google.common.collect.SingletonImmutableMap: java.lang.String toString()>",
    "<com.jcraft.jsch.ChannelSftp: void put(java.io.InputStream,java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int)>",
    "<org.apache.hadoop.yarn.util.WindowsResourceCalculatorPlugin: java.lang.String getSystemInfoInfoFromShell()>",
    "<com.jcraft.jsch.ChannelSftp$1: void close()>",
    "<org.apache.hadoop.yarn.util.FSDownload: long unpack(java.io.File,java.io.File)>",
    "<org.mortbay.util.MultiMap: java.lang.String getString(java.lang.Object)>",
    "<org.apache.hadoop.yarn.util.ConverterUtils: org.apache.hadoop.security.token.Token convertFromYarn(org.apache.hadoop.yarn.api.records.Token,java.net.InetSocketAddress)>",
    "<com.google.inject.internal.MessageProcessor: java.lang.String getRootMessage(java.lang.Throwable)>",
    "<org.apache.zookeeper.server.quorum.QuorumCnxManager: boolean receiveConnection(java.net.Socket)>",
    "<org.mortbay.xml.XmlConfiguration: void configure(java.lang.Object,org.mortbay.xml.XmlParser$Node,int)>",
    "<org.apache.hadoop.yarn.webapp.WebApps$Builder: org.apache.hadoop.yarn.webapp.WebApp start(org.apache.hadoop.yarn.webapp.WebApp)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ApplicationHistoryProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.log4j.lf5.viewer.configure.MRUFileManager: java.lang.String[] getMRUFileList()>",
    "<org.apache.log4j.or.DefaultRenderer: java.lang.String doRender(java.lang.Object)>",
    "<org.apache.htrace.fasterxml.jackson.databind.node.POJONode: java.lang.String asText()>",
    "<org.mortbay.jetty.handler.ContextHandler: void setResourceBase(java.lang.String)>",
    "<org.apache.htrace.fasterxml.jackson.databind.deser.SettableAnyProperty$AnySetterReferring: void handleResolvedForwardReference(java.lang.Object,java.lang.Object)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl$TimelineURLConnectionFactory: java.net.HttpURLConnection getHttpURLConnection(java.net.URL)>",
    "<com.jcraft.jsch.ProxyHTTP: void connect(com.jcraft.jsch.SocketFactory,java.lang.String,int,int)>",
    "<org.apache.avro.generic.GenericData: int compare(java.lang.Object,java.lang.Object,org.apache.avro.Schema,boolean)>",
    "<org.mortbay.jetty.Request: javax.servlet.http.Cookie[] getCookies()>",
    "<com.jcraft.jsch.Channel: void connect(int)>",
    "<org.apache.log4j.or.sax.AttributesRenderer: java.lang.String doRender(java.lang.Object)>",
    "<org.apache.commons.configuration.XMLConfiguration$XMLNode: void updateElement(java.lang.Object)>",
    "<org.apache.hadoop.yarn.nodelabels.FileSystemNodeLabelsStore: java.lang.String getDefaultFSNodeLabelsRootDir()>",
    "<org.apache.hadoop.yarn.server.api.impl.pb.client.SCMAdminProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.conf.YarnConfiguration: void <clinit>()>",
    "<org.apache.hadoop.yarn.security.AMRMTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.log4j.DefaultThrowableRenderer: java.lang.String[] render(java.lang.Throwable)>",
    "<org.mortbay.resource.Resource: org.mortbay.resource.Resource newResource(java.net.URL,boolean)>",
    "<org.apache.hadoop.yarn.server.security.ApplicationACLsManager: void addApplication(org.apache.hadoop.yarn.api.records.ApplicationId,java.util.Map)>",
    "<com.google.common.util.concurrent.Futures: java.lang.Object newFromConstructor(java.lang.reflect.Constructor,java.lang.Throwable)>",
    "<org.apache.hadoop.yarn.webapp.log.AggregatedLogsBlock: void render(org.apache.hadoop.yarn.webapp.view.HtmlBlock$Block)>",
    "<org.mortbay.jetty.servlet.DefaultServlet: void init()>",
    "<org.jets3t.service.utils.ServiceUtils: java.lang.String join(java.util.List,java.lang.String)>",
    "<com.jcraft.jsch.ChannelSftp$1: void write(byte[],int,int)>",
    "<org.xerial.snappy.SnappyLoader: void loadSnappySystemProperties()>",
    "<org.apache.avro.generic.GenericData: void toString(java.lang.Object,java.lang.StringBuilder)>",
    "<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.Object)>",
    "<org.apache.htrace.fasterxml.jackson.databind.deser.std.StringDeserializer: java.lang.String deserialize(org.apache.htrace.fasterxml.jackson.core.JsonParser,org.apache.htrace.fasterxml.jackson.databind.DeserializationContext)>",
    "<org.codehaus.jackson.map.ser.std.StdKeySerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
    "<com.jcraft.jsch.ChannelSftp: void put(java.lang.String,java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int)>",
    "<org.jets3t.service.utils.RestUtils: java.lang.String makeServiceCanonicalString(java.lang.String,java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.util.List)>",
    "<org.apache.ignite.yarn.IgniteYarnClient: void main(java.lang.String[])>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ApplicationMasterProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.security.ContainerTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.commons.logging.LogConfigurationException: void <init>(java.lang.Throwable)>",
    "<org.apache.commons.cli.HelpFormatter: java.lang.StringBuffer renderOptions(java.lang.StringBuffer,int,org.apache.commons.cli.Options,int,int)>",
    "<org.apache.hadoop.yarn.logaggregation.LogCLIHelpers: int dumpAContainersLogs(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.Session: void connect(int)>",
    "<org.apache.hadoop.yarn.util.YarnVersionInfo: java.lang.String getBuildVersion()>",
    "<org.apache.log4j.helpers.PatternParser$MDCPatternConverter: java.lang.String convert(org.apache.log4j.spi.LoggingEvent)>",
    "<com.google.common.base.Functions$ToStringFunction: java.lang.String apply(java.lang.Object)>",
    "<org.mortbay.jetty.security.SslSocketConnector: java.net.ServerSocket newServerSocket(java.lang.String,int,int)>",
    "<org.apache.hadoop.yarn.webapp.util.WebAppUtils: java.util.List getProxyHostsAndPortsForAmFilter(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: void serviceInit(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.commons.configuration.AbstractConfiguration$1: java.lang.String lookup(java.lang.String)>",
    "<org.apache.hadoop.yarn.security.AdminACLsManager: void <init>(org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.Session: void initInflater(java.lang.String)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ClientSCMProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.Session: void updateKeys(com.jcraft.jsch.KeyExchange)>",
    "<org.apache.commons.configuration.XMLConfiguration$XMLBuilderVisitor: void updateAttribute(org.apache.commons.configuration.HierarchicalConfiguration$Node,org.w3c.dom.Element,java.lang.String,char)>",
    "<org.apache.hadoop.yarn.client.AHSProxy: java.lang.Object getProxy(org.apache.hadoop.conf.Configuration,java.lang.Class,java.net.InetSocketAddress)>",
    "<org.apache.hadoop.yarn.conf.HAUtil: java.util.Collection getRMHAIds(org.apache.hadoop.conf.Configuration)>",
    "<org.mortbay.xml.XmlConfiguration: void set(java.lang.Object,org.mortbay.xml.XmlParser$Node)>",
    "<org.apache.log4j.or.ThreadGroupRenderer: java.lang.String doRender(java.lang.Object)>",
    "<com.jcraft.jsch.KeyPairDSA: void generate(int)>",
    "<org.apache.htrace.commons.logging.LogConfigurationException: void <init>(java.lang.Throwable)>",
    "<org.apache.hadoop.yarn.security.client.RMDelegationTokenIdentifier$Renewer: org.apache.hadoop.yarn.api.ApplicationClientProtocol getRmClient(org.apache.hadoop.security.token.Token,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.util.RMHAUtils: java.util.List getRMHAWebappAddresses(org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<com.google.inject.internal.Initializer$InjectableReference: java.lang.String toString()>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogValue: java.io.FileInputStream secureOpenFile(java.io.File)>",
    "<org.apache.commons.configuration.AbstractConfiguration: java.lang.String interpolate(java.lang.String)>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogReader: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)>",
    "<org.apache.hadoop.yarn.server.security.ApplicationACLsManager: void <clinit>()>",
    "<org.apache.commons.lang.ObjectUtils: java.lang.String toString(java.lang.Object)>",
    "<net.sf.cglib.core.EmitUtils: void push_object(net.sf.cglib.core.CodeEmitter,java.lang.Object)>",
    "<com.jcraft.jsch.ProxySOCKS4: void connect(com.jcraft.jsch.SocketFactory,java.lang.String,int,int)>",
    "<org.apache.hadoop.yarn.server.api.impl.pb.client.ResourceManagerAdministrationProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.client.ClientRMProxy: void setAMRMTokenService(org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.KeyPair: com.jcraft.jsch.KeyPair load(com.jcraft.jsch.JSch,java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.ProxySOCKS5: void connect(com.jcraft.jsch.SocketFactory,java.lang.String,int,int)>",
    "<org.apache.directory.api.util.OsgiUtils: java.lang.String getBundleExports(java.io.File)>",
    "<org.codehaus.jettison.json.JSONArray: java.lang.String getString(int)>",
    "<com.google.inject.internal.ProcessedBindingData: void initializeBindings()>",
    "<org.jets3t.service.utils.ServiceUtils: java.util.Map cleanRestMetadataMap(java.util.Map,java.lang.String,java.lang.String)>",
    "<org.apache.commons.lang.exception.ExceptionUtils: java.lang.String[] getRootCauseStackTrace(java.lang.Throwable)>",
    "<org.apache.hadoop.yarn.util.WindowsBasedProcessTree: java.lang.String getAllProcessInfoFromShell()>",
    "<javax.xml.bind.ContextFinder: java.util.Properties loadJAXBProperties(java.lang.ClassLoader,java.lang.String)>",
    "<com.jcraft.jsch.IdentityFile: boolean setPassphrase(byte[])>",
    "<org.mortbay.jetty.handler.DebugHandler: void handle(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,int)>",
    "<com.jcraft.jsch.KnownHosts: void setKnownHosts(java.io.InputStream)>",
    "<org.mortbay.xml.XmlConfiguration: java.lang.Object value(java.lang.Object,org.mortbay.xml.XmlParser$Node)>",
    "<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
    "<org.apache.hadoop.yarn.util.RMHAUtils: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState getHAState(org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<org.apache.commons.lang.StringUtils: java.lang.String join(java.lang.Object[],java.lang.String,int,int)>",
    "<com.jcraft.jsch.Session: void initDeflater(java.lang.String)>",
    "<com.jcraft.jsch.Util: java.net.Socket createSocket(java.lang.String,int,int)>",
    "<org.apache.hadoop.yarn.util.YarnVersionInfo: void <init>()>",
    "<com.google.common.collect.SingletonImmutableList: java.lang.String toString()>",
    "<org.codehaus.jettison.json.JSONObject: java.io.Writer write(java.io.Writer)>",
    "<org.mortbay.jetty.Request: void extractParameters()>",
    "<com.jcraft.jsch.ChannelSftp: void _put(java.io.InputStream,java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int)>",
    "<org.codehaus.jettison.mapped.MappedXMLStreamReader: void <init>(org.codehaus.jettison.json.JSONObject,org.codehaus.jettison.mapped.MappedNamespaceConvention)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: long renewDelegationToken(org.apache.hadoop.security.token.Token)>",
    "<org.apache.hadoop.yarn.webapp.view.HtmlBlock: org.apache.hadoop.security.UserGroupInformation getCallerUGI()>",
    "<org.apache.hadoop.yarn.util.RMHAUtils: java.lang.String findActiveRMHAId(org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<org.apache.commons.lang.text.StrLookup$MapStrLookup: java.lang.String lookup(java.lang.String)>",
    "<com.google.inject.spi.Message: java.lang.Object writeReplace()>",
    "<org.apache.hadoop.yarn.webapp.util.WebAppUtils: java.lang.String getResolvedAddress(java.net.InetSocketAddress)>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogWriter$1: org.apache.hadoop.fs.FSDataOutputStream run()>",
    "<com.sun.xml.bind.api.impl.NameConverter$Standard: java.lang.String combine(java.util.List,char)>",
    "<com.jcraft.jsch.ChannelSftp: void start()>",
    "<org.mortbay.jetty.servlet.ServletHandler$Chain: java.lang.String toString()>",
    "<org.jets3t.service.utils.gatekeeper.GatekeeperMessage: void encodeProperty(java.util.Properties,java.lang.String,java.lang.Object)>",
    "<org.apache.hadoop.yarn.conf.YarnConfiguration: java.net.InetSocketAddress getSocketAddr(java.lang.String,java.lang.String,int)>",
    "<com.google.common.util.concurrent.AbstractListeningExecutorService: java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit)>",
    "<org.apache.hadoop.yarn.util.WindowsBasedProcessTree: boolean isAvailable()>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: void cancelDelegationToken(org.apache.hadoop.security.token.Token)>",
    "<org.jets3t.service.model.StorageObject: long getContentLength()>",
    "<org.apache.jute.compiler.generated.Rcc: void main(java.lang.String[])>",
    "<org.apache.hadoop.yarn.util.FSDownload: org.apache.hadoop.fs.Path copy(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)>",
    "<org.apache.htrace.fasterxml.jackson.databind.util.TokenBuffer$Parser: java.lang.String getText()>",
    "<org.apache.avro.generic.GenericData$Array: java.lang.String toString()>",
    "<com.google.inject.internal.util.$ImmutableSet$SingletonImmutableSet: java.lang.String toString()>",
    "<com.jcraft.jsch.IdentityFile: com.jcraft.jsch.IdentityFile newInstance(java.lang.String,java.lang.String,com.jcraft.jsch.JSch)>",
    "<org.apache.commons.io.filefilter.AndFileFilter: java.lang.String toString()>",
    "<org.apache.ignite.yarn.IgniteYarnClient: void setupAppMasterEnv(java.util.Map,org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<org.apache.zookeeper.server.quorum.QuorumPeerConfig: void parseProperties(java.util.Properties)>",
    "<org.codehaus.jackson.map.ser.std.RawSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
    "<org.mortbay.jetty.security.HashUserRealm: void loadConfig()>",
    "<com.jcraft.jsch.Channel$1: void flush()>",
    "<org.apache.htrace.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,org.apache.htrace.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.fasterxml.jackson.databind.SerializerProvider)>",
    "<org.apache.hadoop.yarn.client.RMProxy: java.lang.Object getProxy(org.apache.hadoop.conf.Configuration,java.lang.Class,java.net.InetSocketAddress)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: void putTimelineDataInJSONFile(java.lang.String,java.lang.String)>",
    "<org.apache.hadoop.yarn.conf.HAUtil: boolean isHAEnabled(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ContainerManagementProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.IdentityFile: void <init>(java.lang.String,byte[],byte[],com.jcraft.jsch.JSch)>",
    "<com.jcraft.jsch.Session: void setTimeout(int)>",
    "<org.apache.log4j.jmx.Agent: void startServer(java.lang.Object)>",
    "<org.apache.commons.beanutils.BeanComparator: int compare(java.lang.Object,java.lang.Object)>",
    "<org.mortbay.io.bio.StringEndPoint: void setInput(java.lang.String)>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String toString()>",
    "<org.apache.hadoop.yarn.security.NMTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.ignite.yarn.ApplicationMaster: void init()>",
    "<org.apache.hadoop.yarn.util.ProcfsBasedProcessTree: void <clinit>()>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogWriter: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.security.UserGroupInformation)>",
    "<org.mortbay.jetty.security.BasicAuthenticator: java.security.Principal authenticate(org.mortbay.jetty.security.UserRealm,java.lang.String,org.mortbay.jetty.Request,org.mortbay.jetty.Response)>",
    "<org.mortbay.util.LazyList: java.lang.String[] toStringArray(java.lang.Object)>",
    "<com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)>",
    "<com.google.inject.internal.util.$ImmutableSet: java.lang.String toString()>",
    "<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
    "<org.apache.ignite.yarn.ApplicationMaster: void onContainersAllocated(java.util.List)>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String valueToString(java.lang.Object)>",
    "<org.apache.htrace.fasterxml.jackson.core.JsonLocation: java.lang.String toString()>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>",
    "<org.mortbay.xml.XmlParser: void setValidating(boolean)>",
    "<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>",
    "<com.sun.jersey.api.uri.UriTemplate: java.lang.StringBuilder createURIComponent(com.sun.jersey.api.uri.UriComponent$Type,java.lang.String,java.util.Map,boolean,java.lang.StringBuilder)>",
    "<org.apache.commons.lang.builder.ReflectionToStringBuilder: java.lang.String[] toNoNullStringArray(java.lang.Object[])>",
    "<org.apache.htrace.fasterxml.jackson.databind.util.TokenBuffer$Parser: org.apache.htrace.fasterxml.jackson.core.JsonToken nextToken()>",
    "<org.mortbay.jetty.servlet.Invoker: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "<org.apache.hadoop.yarn.conf.HAUtil: boolean isAutomaticFailoverEnabled(org.apache.hadoop.conf.Configuration)>",
    "<org.objectweb.asm.ClassWriter: java.lang.String getCommonSuperClass(java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.Session: void setPortForwarding(java.lang.String,int)>",
    "<org.apache.hadoop.yarn.client.ClientRMProxy: org.apache.hadoop.io.Text getTokenService(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String,int)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: org.apache.hadoop.security.authentication.client.ConnectionConfigurator newSslConnConfigurator(int,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.htrace.fasterxml.jackson.databind.ser.std.ToStringSerializer: void serialize(java.lang.Object,org.apache.htrace.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.fasterxml.jackson.databind.SerializerProvider)>",
    "<javax.xml.bind.JAXBException: java.lang.String toString()>",
    "<org.mortbay.log.StdErrLog: void format(java.lang.Throwable)>",
    "<org.apache.commons.configuration.XMLConfiguration: void handleDelimiters(org.apache.commons.configuration.HierarchicalConfiguration$Node,org.apache.commons.configuration.HierarchicalConfiguration$Node,boolean)>",
    "<org.apache.avro.generic.GenericData: int hashCode(java.lang.Object,org.apache.avro.Schema)>",
    "<org.apache.hadoop.yarn.security.ConfiguredYarnAuthorizer: void init(org.apache.hadoop.conf.Configuration)>"
  ],
  "1.6.0": [
    "<org.mortbay.io.bio.StringEndPoint: java.lang.String getOutput()>",
    "<org.apache.hadoop.yarn.security.client.ClientToAMTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.hadoop.yarn.conf.HAUtil: java.lang.String getRMHAId(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.log4j.lf5.viewer.LogTable$LogTableListSelectionListener: void valueChanged(javax.swing.event.ListSelectionEvent)>",
    "<org.mortbay.jetty.handler.ResourceHandler: void setResourceBase(java.lang.String)>",
    "<org.mortbay.util.UrlEncoded: java.lang.String encode(org.mortbay.util.MultiMap,java.lang.String,boolean)>",
    "<com.google.inject.internal.asm.$ClassWriter: java.lang.String getCommonSuperClass(java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.Session: com.jcraft.jsch.KeyExchange receive_kexinit(com.jcraft.jsch.Buffer)>",
    "<org.apache.commons.lang.StringUtils: java.lang.String join(java.lang.Object[],char,int,int)>",
    "<com.google.inject.util.Node: java.lang.String toString()>",
    "<com.google.inject.internal.cglib.core.$EmitUtils: void push_object(com.google.inject.internal.cglib.core.$CodeEmitter,java.lang.Object)>",
    "<org.apache.hadoop.yarn.util.timeline.TimelineUtils: org.apache.hadoop.io.Text buildTimelineTokenService(org.apache.hadoop.conf.Configuration)>",
    "<com.google.inject.spi.Message: java.lang.String getSource()>",
    "<org.codehaus.jackson.map.ser.std.ToStringSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
    "<com.jcraft.jsch.KeyPairRSA: void generate(int)>",
    "<org.apache.commons.collections.ExtendedProperties: java.lang.String interpolateHelper(java.lang.String,java.util.List)>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String getString(java.lang.String)>",
    "<com.google.common.collect.SingletonImmutableSet: java.lang.String toString()>",
    "<org.apache.hadoop.yarn.util.Apps: void setEnvFromInputString(java.util.Map,java.lang.String,java.lang.String)>",
    "<org.apache.htrace.fasterxml.jackson.databind.ser.std.StdKeySerializer: void serialize(java.lang.Object,org.apache.htrace.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.fasterxml.jackson.databind.SerializerProvider)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ApplicationClientProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.logaggregation.LogCLIHelpers: int dumpAllContainersLogs(org.apache.hadoop.yarn.api.records.ApplicationId,java.lang.String,java.io.PrintStream)>",
    "<com.google.common.collect.SingletonImmutableMap: java.lang.String toString()>",
    "<com.jcraft.jsch.ChannelSftp: void put(java.io.InputStream,java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int)>",
    "<org.apache.hadoop.yarn.util.WindowsResourceCalculatorPlugin: java.lang.String getSystemInfoInfoFromShell()>",
    "<com.jcraft.jsch.ChannelSftp$1: void close()>",
    "<org.apache.hadoop.yarn.util.FSDownload: long unpack(java.io.File,java.io.File)>",
    "<org.mortbay.util.MultiMap: java.lang.String getString(java.lang.Object)>",
    "<org.apache.hadoop.yarn.util.ConverterUtils: org.apache.hadoop.security.token.Token convertFromYarn(org.apache.hadoop.yarn.api.records.Token,java.net.InetSocketAddress)>",
    "<com.google.inject.internal.MessageProcessor: java.lang.String getRootMessage(java.lang.Throwable)>",
    "<org.apache.zookeeper.server.quorum.QuorumCnxManager: boolean receiveConnection(java.net.Socket)>",
    "<org.mortbay.xml.XmlConfiguration: void configure(java.lang.Object,org.mortbay.xml.XmlParser$Node,int)>",
    "<org.apache.hadoop.yarn.webapp.WebApps$Builder: org.apache.hadoop.yarn.webapp.WebApp start(org.apache.hadoop.yarn.webapp.WebApp)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ApplicationHistoryProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.log4j.lf5.viewer.configure.MRUFileManager: java.lang.String[] getMRUFileList()>",
    "<org.apache.log4j.or.DefaultRenderer: java.lang.String doRender(java.lang.Object)>",
    "<org.apache.htrace.fasterxml.jackson.databind.node.POJONode: java.lang.String asText()>",
    "<org.mortbay.jetty.handler.ContextHandler: void setResourceBase(java.lang.String)>",
    "<org.apache.htrace.fasterxml.jackson.databind.deser.SettableAnyProperty$AnySetterReferring: void handleResolvedForwardReference(java.lang.Object,java.lang.Object)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl$TimelineURLConnectionFactory: java.net.HttpURLConnection getHttpURLConnection(java.net.URL)>",
    "<com.jcraft.jsch.ProxyHTTP: void connect(com.jcraft.jsch.SocketFactory,java.lang.String,int,int)>",
    "<org.apache.avro.generic.GenericData: int compare(java.lang.Object,java.lang.Object,org.apache.avro.Schema,boolean)>",
    "<org.mortbay.jetty.Request: javax.servlet.http.Cookie[] getCookies()>",
    "<com.jcraft.jsch.Channel: void connect(int)>",
    "<org.apache.log4j.or.sax.AttributesRenderer: java.lang.String doRender(java.lang.Object)>",
    "<org.apache.commons.configuration.XMLConfiguration$XMLNode: void updateElement(java.lang.Object)>",
    "<org.apache.hadoop.yarn.nodelabels.FileSystemNodeLabelsStore: java.lang.String getDefaultFSNodeLabelsRootDir()>",
    "<org.apache.hadoop.yarn.server.api.impl.pb.client.SCMAdminProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.conf.YarnConfiguration: void <clinit>()>",
    "<org.apache.hadoop.yarn.security.AMRMTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.log4j.DefaultThrowableRenderer: java.lang.String[] render(java.lang.Throwable)>",
    "<org.mortbay.resource.Resource: org.mortbay.resource.Resource newResource(java.net.URL,boolean)>",
    "<org.apache.hadoop.yarn.server.security.ApplicationACLsManager: void addApplication(org.apache.hadoop.yarn.api.records.ApplicationId,java.util.Map)>",
    "<com.google.common.util.concurrent.Futures: java.lang.Object newFromConstructor(java.lang.reflect.Constructor,java.lang.Throwable)>",
    "<org.apache.hadoop.yarn.webapp.log.AggregatedLogsBlock: void render(org.apache.hadoop.yarn.webapp.view.HtmlBlock$Block)>",
    "<org.mortbay.jetty.servlet.DefaultServlet: void init()>",
    "<org.jets3t.service.utils.ServiceUtils: java.lang.String join(java.util.List,java.lang.String)>",
    "<com.jcraft.jsch.ChannelSftp$1: void write(byte[],int,int)>",
    "<org.xerial.snappy.SnappyLoader: void loadSnappySystemProperties()>",
    "<org.apache.avro.generic.GenericData: void toString(java.lang.Object,java.lang.StringBuilder)>",
    "<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.Object)>",
    "<org.apache.htrace.fasterxml.jackson.databind.deser.std.StringDeserializer: java.lang.String deserialize(org.apache.htrace.fasterxml.jackson.core.JsonParser,org.apache.htrace.fasterxml.jackson.databind.DeserializationContext)>",
    "<org.codehaus.jackson.map.ser.std.StdKeySerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
    "<com.jcraft.jsch.ChannelSftp: void put(java.lang.String,java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int)>",
    "<org.jets3t.service.utils.RestUtils: java.lang.String makeServiceCanonicalString(java.lang.String,java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.util.List)>",
    "<org.apache.ignite.yarn.IgniteYarnClient: void main(java.lang.String[])>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ApplicationMasterProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.security.ContainerTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.commons.logging.LogConfigurationException: void <init>(java.lang.Throwable)>",
    "<org.apache.commons.cli.HelpFormatter: java.lang.StringBuffer renderOptions(java.lang.StringBuffer,int,org.apache.commons.cli.Options,int,int)>",
    "<org.apache.hadoop.yarn.logaggregation.LogCLIHelpers: int dumpAContainersLogs(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.Session: void connect(int)>",
    "<org.apache.hadoop.yarn.util.YarnVersionInfo: java.lang.String getBuildVersion()>",
    "<org.apache.log4j.helpers.PatternParser$MDCPatternConverter: java.lang.String convert(org.apache.log4j.spi.LoggingEvent)>",
    "<com.google.common.base.Functions$ToStringFunction: java.lang.String apply(java.lang.Object)>",
    "<org.mortbay.jetty.security.SslSocketConnector: java.net.ServerSocket newServerSocket(java.lang.String,int,int)>",
    "<org.apache.hadoop.yarn.webapp.util.WebAppUtils: java.util.List getProxyHostsAndPortsForAmFilter(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: void serviceInit(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.commons.configuration.AbstractConfiguration$1: java.lang.String lookup(java.lang.String)>",
    "<org.apache.hadoop.yarn.security.AdminACLsManager: void <init>(org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.Session: void initInflater(java.lang.String)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ClientSCMProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.Session: void updateKeys(com.jcraft.jsch.KeyExchange)>",
    "<org.apache.commons.configuration.XMLConfiguration$XMLBuilderVisitor: void updateAttribute(org.apache.commons.configuration.HierarchicalConfiguration$Node,org.w3c.dom.Element,java.lang.String,char)>",
    "<org.apache.hadoop.yarn.client.AHSProxy: java.lang.Object getProxy(org.apache.hadoop.conf.Configuration,java.lang.Class,java.net.InetSocketAddress)>",
    "<org.apache.hadoop.yarn.conf.HAUtil: java.util.Collection getRMHAIds(org.apache.hadoop.conf.Configuration)>",
    "<org.mortbay.xml.XmlConfiguration: void set(java.lang.Object,org.mortbay.xml.XmlParser$Node)>",
    "<org.apache.log4j.or.ThreadGroupRenderer: java.lang.String doRender(java.lang.Object)>",
    "<com.jcraft.jsch.KeyPairDSA: void generate(int)>",
    "<org.apache.htrace.commons.logging.LogConfigurationException: void <init>(java.lang.Throwable)>",
    "<org.apache.hadoop.yarn.security.client.RMDelegationTokenIdentifier$Renewer: org.apache.hadoop.yarn.api.ApplicationClientProtocol getRmClient(org.apache.hadoop.security.token.Token,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.util.RMHAUtils: java.util.List getRMHAWebappAddresses(org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<com.google.inject.internal.Initializer$InjectableReference: java.lang.String toString()>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogValue: java.io.FileInputStream secureOpenFile(java.io.File)>",
    "<org.apache.commons.configuration.AbstractConfiguration: java.lang.String interpolate(java.lang.String)>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogReader: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)>",
    "<org.apache.hadoop.yarn.server.security.ApplicationACLsManager: void <clinit>()>",
    "<org.apache.commons.lang.ObjectUtils: java.lang.String toString(java.lang.Object)>",
    "<net.sf.cglib.core.EmitUtils: void push_object(net.sf.cglib.core.CodeEmitter,java.lang.Object)>",
    "<com.jcraft.jsch.ProxySOCKS4: void connect(com.jcraft.jsch.SocketFactory,java.lang.String,int,int)>",
    "<org.apache.hadoop.yarn.server.api.impl.pb.client.ResourceManagerAdministrationProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.client.ClientRMProxy: void setAMRMTokenService(org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.KeyPair: com.jcraft.jsch.KeyPair load(com.jcraft.jsch.JSch,java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.ProxySOCKS5: void connect(com.jcraft.jsch.SocketFactory,java.lang.String,int,int)>",
    "<org.apache.directory.api.util.OsgiUtils: java.lang.String getBundleExports(java.io.File)>",
    "<org.codehaus.jettison.json.JSONArray: java.lang.String getString(int)>",
    "<com.google.inject.internal.ProcessedBindingData: void initializeBindings()>",
    "<org.jets3t.service.utils.ServiceUtils: java.util.Map cleanRestMetadataMap(java.util.Map,java.lang.String,java.lang.String)>",
    "<org.apache.commons.lang.exception.ExceptionUtils: java.lang.String[] getRootCauseStackTrace(java.lang.Throwable)>",
    "<org.apache.hadoop.yarn.util.WindowsBasedProcessTree: java.lang.String getAllProcessInfoFromShell()>",
    "<javax.xml.bind.ContextFinder: java.util.Properties loadJAXBProperties(java.lang.ClassLoader,java.lang.String)>",
    "<com.jcraft.jsch.IdentityFile: boolean setPassphrase(byte[])>",
    "<org.mortbay.jetty.handler.DebugHandler: void handle(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,int)>",
    "<com.jcraft.jsch.KnownHosts: void setKnownHosts(java.io.InputStream)>",
    "<org.mortbay.xml.XmlConfiguration: java.lang.Object value(java.lang.Object,org.mortbay.xml.XmlParser$Node)>",
    "<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
    "<org.apache.hadoop.yarn.util.RMHAUtils: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState getHAState(org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<org.apache.commons.lang.StringUtils: java.lang.String join(java.lang.Object[],java.lang.String,int,int)>",
    "<com.jcraft.jsch.Session: void initDeflater(java.lang.String)>",
    "<com.jcraft.jsch.Util: java.net.Socket createSocket(java.lang.String,int,int)>",
    "<org.apache.hadoop.yarn.util.YarnVersionInfo: void <init>()>",
    "<com.google.common.collect.SingletonImmutableList: java.lang.String toString()>",
    "<org.codehaus.jettison.json.JSONObject: java.io.Writer write(java.io.Writer)>",
    "<org.mortbay.jetty.Request: void extractParameters()>",
    "<com.jcraft.jsch.ChannelSftp: void _put(java.io.InputStream,java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int)>",
    "<org.codehaus.jettison.mapped.MappedXMLStreamReader: void <init>(org.codehaus.jettison.json.JSONObject,org.codehaus.jettison.mapped.MappedNamespaceConvention)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: long renewDelegationToken(org.apache.hadoop.security.token.Token)>",
    "<org.apache.hadoop.yarn.webapp.view.HtmlBlock: org.apache.hadoop.security.UserGroupInformation getCallerUGI()>",
    "<org.apache.hadoop.yarn.util.RMHAUtils: java.lang.String findActiveRMHAId(org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<org.apache.commons.lang.text.StrLookup$MapStrLookup: java.lang.String lookup(java.lang.String)>",
    "<com.google.inject.spi.Message: java.lang.Object writeReplace()>",
    "<org.apache.hadoop.yarn.webapp.util.WebAppUtils: java.lang.String getResolvedAddress(java.net.InetSocketAddress)>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogWriter$1: org.apache.hadoop.fs.FSDataOutputStream run()>",
    "<com.sun.xml.bind.api.impl.NameConverter$Standard: java.lang.String combine(java.util.List,char)>",
    "<com.jcraft.jsch.ChannelSftp: void start()>",
    "<org.mortbay.jetty.servlet.ServletHandler$Chain: java.lang.String toString()>",
    "<org.jets3t.service.utils.gatekeeper.GatekeeperMessage: void encodeProperty(java.util.Properties,java.lang.String,java.lang.Object)>",
    "<org.apache.hadoop.yarn.conf.YarnConfiguration: java.net.InetSocketAddress getSocketAddr(java.lang.String,java.lang.String,int)>",
    "<com.google.common.util.concurrent.AbstractListeningExecutorService: java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit)>",
    "<org.apache.hadoop.yarn.util.WindowsBasedProcessTree: boolean isAvailable()>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: void cancelDelegationToken(org.apache.hadoop.security.token.Token)>",
    "<org.jets3t.service.model.StorageObject: long getContentLength()>",
    "<org.apache.jute.compiler.generated.Rcc: void main(java.lang.String[])>",
    "<org.apache.hadoop.yarn.util.FSDownload: org.apache.hadoop.fs.Path copy(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)>",
    "<org.apache.htrace.fasterxml.jackson.databind.util.TokenBuffer$Parser: java.lang.String getText()>",
    "<org.apache.avro.generic.GenericData$Array: java.lang.String toString()>",
    "<com.google.inject.internal.util.$ImmutableSet$SingletonImmutableSet: java.lang.String toString()>",
    "<com.jcraft.jsch.IdentityFile: com.jcraft.jsch.IdentityFile newInstance(java.lang.String,java.lang.String,com.jcraft.jsch.JSch)>",
    "<org.apache.commons.io.filefilter.AndFileFilter: java.lang.String toString()>",
    "<org.apache.ignite.yarn.IgniteYarnClient: void setupAppMasterEnv(java.util.Map,org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<org.apache.zookeeper.server.quorum.QuorumPeerConfig: void parseProperties(java.util.Properties)>",
    "<org.codehaus.jackson.map.ser.std.RawSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
    "<org.mortbay.jetty.security.HashUserRealm: void loadConfig()>",
    "<com.jcraft.jsch.Channel$1: void flush()>",
    "<org.apache.htrace.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,org.apache.htrace.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.fasterxml.jackson.databind.SerializerProvider)>",
    "<org.apache.hadoop.yarn.client.RMProxy: java.lang.Object getProxy(org.apache.hadoop.conf.Configuration,java.lang.Class,java.net.InetSocketAddress)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: void putTimelineDataInJSONFile(java.lang.String,java.lang.String)>",
    "<org.apache.hadoop.yarn.conf.HAUtil: boolean isHAEnabled(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ContainerManagementProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.IdentityFile: void <init>(java.lang.String,byte[],byte[],com.jcraft.jsch.JSch)>",
    "<com.jcraft.jsch.Session: void setTimeout(int)>",
    "<org.apache.log4j.jmx.Agent: void startServer(java.lang.Object)>",
    "<org.apache.commons.beanutils.BeanComparator: int compare(java.lang.Object,java.lang.Object)>",
    "<org.mortbay.io.bio.StringEndPoint: void setInput(java.lang.String)>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String toString()>",
    "<org.apache.hadoop.yarn.security.NMTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.ignite.yarn.ApplicationMaster: void init()>",
    "<org.apache.hadoop.yarn.util.ProcfsBasedProcessTree: void <clinit>()>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogWriter: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.security.UserGroupInformation)>",
    "<org.mortbay.jetty.security.BasicAuthenticator: java.security.Principal authenticate(org.mortbay.jetty.security.UserRealm,java.lang.String,org.mortbay.jetty.Request,org.mortbay.jetty.Response)>",
    "<org.mortbay.util.LazyList: java.lang.String[] toStringArray(java.lang.Object)>",
    "<com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)>",
    "<com.google.inject.internal.util.$ImmutableSet: java.lang.String toString()>",
    "<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
    "<org.apache.ignite.yarn.ApplicationMaster: void onContainersAllocated(java.util.List)>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String valueToString(java.lang.Object)>",
    "<org.apache.htrace.fasterxml.jackson.core.JsonLocation: java.lang.String toString()>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>",
    "<org.mortbay.xml.XmlParser: void setValidating(boolean)>",
    "<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>",
    "<com.sun.jersey.api.uri.UriTemplate: java.lang.StringBuilder createURIComponent(com.sun.jersey.api.uri.UriComponent$Type,java.lang.String,java.util.Map,boolean,java.lang.StringBuilder)>",
    "<org.apache.commons.lang.builder.ReflectionToStringBuilder: java.lang.String[] toNoNullStringArray(java.lang.Object[])>",
    "<org.apache.htrace.fasterxml.jackson.databind.util.TokenBuffer$Parser: org.apache.htrace.fasterxml.jackson.core.JsonToken nextToken()>",
    "<org.mortbay.jetty.servlet.Invoker: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "<org.apache.hadoop.yarn.conf.HAUtil: boolean isAutomaticFailoverEnabled(org.apache.hadoop.conf.Configuration)>",
    "<org.objectweb.asm.ClassWriter: java.lang.String getCommonSuperClass(java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.Session: void setPortForwarding(java.lang.String,int)>",
    "<org.apache.hadoop.yarn.client.ClientRMProxy: org.apache.hadoop.io.Text getTokenService(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String,int)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: org.apache.hadoop.security.authentication.client.ConnectionConfigurator newSslConnConfigurator(int,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.htrace.fasterxml.jackson.databind.ser.std.ToStringSerializer: void serialize(java.lang.Object,org.apache.htrace.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.fasterxml.jackson.databind.SerializerProvider)>",
    "<javax.xml.bind.JAXBException: java.lang.String toString()>",
    "<org.mortbay.log.StdErrLog: void format(java.lang.Throwable)>",
    "<org.apache.commons.configuration.XMLConfiguration: void handleDelimiters(org.apache.commons.configuration.HierarchicalConfiguration$Node,org.apache.commons.configuration.HierarchicalConfiguration$Node,boolean)>",
    "<org.apache.avro.generic.GenericData: int hashCode(java.lang.Object,org.apache.avro.Schema)>",
    "<org.apache.hadoop.yarn.security.ConfiguredYarnAuthorizer: void init(org.apache.hadoop.conf.Configuration)>"
  ],
  "2.0.0": [
    "<org.mortbay.io.bio.StringEndPoint: java.lang.String getOutput()>",
    "<org.apache.hadoop.yarn.security.client.ClientToAMTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.hadoop.yarn.conf.HAUtil: java.lang.String getRMHAId(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.log4j.lf5.viewer.LogTable$LogTableListSelectionListener: void valueChanged(javax.swing.event.ListSelectionEvent)>",
    "<org.mortbay.jetty.handler.ResourceHandler: void setResourceBase(java.lang.String)>",
    "<org.mortbay.util.UrlEncoded: java.lang.String encode(org.mortbay.util.MultiMap,java.lang.String,boolean)>",
    "<com.google.inject.internal.asm.$ClassWriter: java.lang.String getCommonSuperClass(java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.Session: com.jcraft.jsch.KeyExchange receive_kexinit(com.jcraft.jsch.Buffer)>",
    "<org.apache.commons.lang.StringUtils: java.lang.String join(java.lang.Object[],char,int,int)>",
    "<com.google.inject.util.Node: java.lang.String toString()>",
    "<com.google.inject.internal.cglib.core.$EmitUtils: void push_object(com.google.inject.internal.cglib.core.$CodeEmitter,java.lang.Object)>",
    "<org.apache.hadoop.yarn.util.timeline.TimelineUtils: org.apache.hadoop.io.Text buildTimelineTokenService(org.apache.hadoop.conf.Configuration)>",
    "<com.google.inject.spi.Message: java.lang.String getSource()>",
    "<org.codehaus.jackson.map.ser.std.ToStringSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
    "<com.jcraft.jsch.KeyPairRSA: void generate(int)>",
    "<org.apache.commons.collections.ExtendedProperties: java.lang.String interpolateHelper(java.lang.String,java.util.List)>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String getString(java.lang.String)>",
    "<com.google.common.collect.SingletonImmutableSet: java.lang.String toString()>",
    "<org.apache.hadoop.yarn.util.Apps: void setEnvFromInputString(java.util.Map,java.lang.String,java.lang.String)>",
    "<org.apache.htrace.fasterxml.jackson.databind.ser.std.StdKeySerializer: void serialize(java.lang.Object,org.apache.htrace.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.fasterxml.jackson.databind.SerializerProvider)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ApplicationClientProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.logaggregation.LogCLIHelpers: int dumpAllContainersLogs(org.apache.hadoop.yarn.api.records.ApplicationId,java.lang.String,java.io.PrintStream)>",
    "<com.google.common.collect.SingletonImmutableMap: java.lang.String toString()>",
    "<com.jcraft.jsch.ChannelSftp: void put(java.io.InputStream,java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int)>",
    "<org.apache.hadoop.yarn.util.WindowsResourceCalculatorPlugin: java.lang.String getSystemInfoInfoFromShell()>",
    "<com.jcraft.jsch.ChannelSftp$1: void close()>",
    "<org.apache.hadoop.yarn.util.FSDownload: long unpack(java.io.File,java.io.File)>",
    "<org.mortbay.util.MultiMap: java.lang.String getString(java.lang.Object)>",
    "<org.apache.hadoop.yarn.util.ConverterUtils: org.apache.hadoop.security.token.Token convertFromYarn(org.apache.hadoop.yarn.api.records.Token,java.net.InetSocketAddress)>",
    "<com.google.inject.internal.MessageProcessor: java.lang.String getRootMessage(java.lang.Throwable)>",
    "<org.apache.zookeeper.server.quorum.QuorumCnxManager: boolean receiveConnection(java.net.Socket)>",
    "<org.mortbay.xml.XmlConfiguration: void configure(java.lang.Object,org.mortbay.xml.XmlParser$Node,int)>",
    "<org.apache.hadoop.yarn.webapp.WebApps$Builder: org.apache.hadoop.yarn.webapp.WebApp start(org.apache.hadoop.yarn.webapp.WebApp)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ApplicationHistoryProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.log4j.lf5.viewer.configure.MRUFileManager: java.lang.String[] getMRUFileList()>",
    "<org.apache.log4j.or.DefaultRenderer: java.lang.String doRender(java.lang.Object)>",
    "<org.apache.htrace.fasterxml.jackson.databind.node.POJONode: java.lang.String asText()>",
    "<org.mortbay.jetty.handler.ContextHandler: void setResourceBase(java.lang.String)>",
    "<org.apache.htrace.fasterxml.jackson.databind.deser.SettableAnyProperty$AnySetterReferring: void handleResolvedForwardReference(java.lang.Object,java.lang.Object)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl$TimelineURLConnectionFactory: java.net.HttpURLConnection getHttpURLConnection(java.net.URL)>",
    "<com.jcraft.jsch.ProxyHTTP: void connect(com.jcraft.jsch.SocketFactory,java.lang.String,int,int)>",
    "<org.apache.avro.generic.GenericData: int compare(java.lang.Object,java.lang.Object,org.apache.avro.Schema,boolean)>",
    "<org.mortbay.jetty.Request: javax.servlet.http.Cookie[] getCookies()>",
    "<com.jcraft.jsch.Channel: void connect(int)>",
    "<org.apache.log4j.or.sax.AttributesRenderer: java.lang.String doRender(java.lang.Object)>",
    "<org.apache.commons.configuration.XMLConfiguration$XMLNode: void updateElement(java.lang.Object)>",
    "<org.apache.hadoop.yarn.nodelabels.FileSystemNodeLabelsStore: java.lang.String getDefaultFSNodeLabelsRootDir()>",
    "<org.apache.hadoop.yarn.server.api.impl.pb.client.SCMAdminProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.conf.YarnConfiguration: void <clinit>()>",
    "<org.apache.hadoop.yarn.security.AMRMTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.log4j.DefaultThrowableRenderer: java.lang.String[] render(java.lang.Throwable)>",
    "<org.mortbay.resource.Resource: org.mortbay.resource.Resource newResource(java.net.URL,boolean)>",
    "<org.apache.hadoop.yarn.server.security.ApplicationACLsManager: void addApplication(org.apache.hadoop.yarn.api.records.ApplicationId,java.util.Map)>",
    "<com.google.common.util.concurrent.Futures: java.lang.Object newFromConstructor(java.lang.reflect.Constructor,java.lang.Throwable)>",
    "<org.apache.hadoop.yarn.webapp.log.AggregatedLogsBlock: void render(org.apache.hadoop.yarn.webapp.view.HtmlBlock$Block)>",
    "<org.mortbay.jetty.servlet.DefaultServlet: void init()>",
    "<org.jets3t.service.utils.ServiceUtils: java.lang.String join(java.util.List,java.lang.String)>",
    "<com.jcraft.jsch.ChannelSftp$1: void write(byte[],int,int)>",
    "<org.xerial.snappy.SnappyLoader: void loadSnappySystemProperties()>",
    "<org.apache.avro.generic.GenericData: void toString(java.lang.Object,java.lang.StringBuilder)>",
    "<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.Object)>",
    "<org.apache.htrace.fasterxml.jackson.databind.deser.std.StringDeserializer: java.lang.String deserialize(org.apache.htrace.fasterxml.jackson.core.JsonParser,org.apache.htrace.fasterxml.jackson.databind.DeserializationContext)>",
    "<org.codehaus.jackson.map.ser.std.StdKeySerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
    "<com.jcraft.jsch.ChannelSftp: void put(java.lang.String,java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int)>",
    "<org.jets3t.service.utils.RestUtils: java.lang.String makeServiceCanonicalString(java.lang.String,java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.util.List)>",
    "<org.apache.ignite.yarn.IgniteYarnClient: void main(java.lang.String[])>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ApplicationMasterProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.security.ContainerTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.commons.logging.LogConfigurationException: void <init>(java.lang.Throwable)>",
    "<org.apache.commons.cli.HelpFormatter: java.lang.StringBuffer renderOptions(java.lang.StringBuffer,int,org.apache.commons.cli.Options,int,int)>",
    "<org.apache.hadoop.yarn.logaggregation.LogCLIHelpers: int dumpAContainersLogs(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.Session: void connect(int)>",
    "<org.apache.hadoop.yarn.util.YarnVersionInfo: java.lang.String getBuildVersion()>",
    "<org.apache.log4j.helpers.PatternParser$MDCPatternConverter: java.lang.String convert(org.apache.log4j.spi.LoggingEvent)>",
    "<com.google.common.base.Functions$ToStringFunction: java.lang.String apply(java.lang.Object)>",
    "<org.mortbay.jetty.security.SslSocketConnector: java.net.ServerSocket newServerSocket(java.lang.String,int,int)>",
    "<org.apache.hadoop.yarn.webapp.util.WebAppUtils: java.util.List getProxyHostsAndPortsForAmFilter(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: void serviceInit(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.commons.configuration.AbstractConfiguration$1: java.lang.String lookup(java.lang.String)>",
    "<org.apache.hadoop.yarn.security.AdminACLsManager: void <init>(org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.Session: void initInflater(java.lang.String)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ClientSCMProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.Session: void updateKeys(com.jcraft.jsch.KeyExchange)>",
    "<org.apache.commons.configuration.XMLConfiguration$XMLBuilderVisitor: void updateAttribute(org.apache.commons.configuration.HierarchicalConfiguration$Node,org.w3c.dom.Element,java.lang.String,char)>",
    "<org.apache.hadoop.yarn.client.AHSProxy: java.lang.Object getProxy(org.apache.hadoop.conf.Configuration,java.lang.Class,java.net.InetSocketAddress)>",
    "<org.apache.hadoop.yarn.conf.HAUtil: java.util.Collection getRMHAIds(org.apache.hadoop.conf.Configuration)>",
    "<org.mortbay.xml.XmlConfiguration: void set(java.lang.Object,org.mortbay.xml.XmlParser$Node)>",
    "<org.apache.log4j.or.ThreadGroupRenderer: java.lang.String doRender(java.lang.Object)>",
    "<com.jcraft.jsch.KeyPairDSA: void generate(int)>",
    "<org.apache.htrace.commons.logging.LogConfigurationException: void <init>(java.lang.Throwable)>",
    "<org.apache.hadoop.yarn.security.client.RMDelegationTokenIdentifier$Renewer: org.apache.hadoop.yarn.api.ApplicationClientProtocol getRmClient(org.apache.hadoop.security.token.Token,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.util.RMHAUtils: java.util.List getRMHAWebappAddresses(org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<com.google.inject.internal.Initializer$InjectableReference: java.lang.String toString()>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogValue: java.io.FileInputStream secureOpenFile(java.io.File)>",
    "<org.apache.commons.configuration.AbstractConfiguration: java.lang.String interpolate(java.lang.String)>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogReader: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)>",
    "<org.apache.hadoop.yarn.server.security.ApplicationACLsManager: void <clinit>()>",
    "<org.apache.commons.lang.ObjectUtils: java.lang.String toString(java.lang.Object)>",
    "<net.sf.cglib.core.EmitUtils: void push_object(net.sf.cglib.core.CodeEmitter,java.lang.Object)>",
    "<com.jcraft.jsch.ProxySOCKS4: void connect(com.jcraft.jsch.SocketFactory,java.lang.String,int,int)>",
    "<org.apache.hadoop.yarn.server.api.impl.pb.client.ResourceManagerAdministrationProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.client.ClientRMProxy: void setAMRMTokenService(org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.KeyPair: com.jcraft.jsch.KeyPair load(com.jcraft.jsch.JSch,java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.ProxySOCKS5: void connect(com.jcraft.jsch.SocketFactory,java.lang.String,int,int)>",
    "<org.apache.directory.api.util.OsgiUtils: java.lang.String getBundleExports(java.io.File)>",
    "<org.codehaus.jettison.json.JSONArray: java.lang.String getString(int)>",
    "<com.google.inject.internal.ProcessedBindingData: void initializeBindings()>",
    "<org.jets3t.service.utils.ServiceUtils: java.util.Map cleanRestMetadataMap(java.util.Map,java.lang.String,java.lang.String)>",
    "<org.apache.commons.lang.exception.ExceptionUtils: java.lang.String[] getRootCauseStackTrace(java.lang.Throwable)>",
    "<org.apache.hadoop.yarn.util.WindowsBasedProcessTree: java.lang.String getAllProcessInfoFromShell()>",
    "<javax.xml.bind.ContextFinder: java.util.Properties loadJAXBProperties(java.lang.ClassLoader,java.lang.String)>",
    "<com.jcraft.jsch.IdentityFile: boolean setPassphrase(byte[])>",
    "<org.mortbay.jetty.handler.DebugHandler: void handle(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,int)>",
    "<com.jcraft.jsch.KnownHosts: void setKnownHosts(java.io.InputStream)>",
    "<org.mortbay.xml.XmlConfiguration: java.lang.Object value(java.lang.Object,org.mortbay.xml.XmlParser$Node)>",
    "<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
    "<org.apache.hadoop.yarn.util.RMHAUtils: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState getHAState(org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<org.apache.commons.lang.StringUtils: java.lang.String join(java.lang.Object[],java.lang.String,int,int)>",
    "<com.jcraft.jsch.Session: void initDeflater(java.lang.String)>",
    "<com.jcraft.jsch.Util: java.net.Socket createSocket(java.lang.String,int,int)>",
    "<org.apache.hadoop.yarn.util.YarnVersionInfo: void <init>()>",
    "<com.google.common.collect.SingletonImmutableList: java.lang.String toString()>",
    "<org.codehaus.jettison.json.JSONObject: java.io.Writer write(java.io.Writer)>",
    "<org.mortbay.jetty.Request: void extractParameters()>",
    "<com.jcraft.jsch.ChannelSftp: void _put(java.io.InputStream,java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int)>",
    "<org.codehaus.jettison.mapped.MappedXMLStreamReader: void <init>(org.codehaus.jettison.json.JSONObject,org.codehaus.jettison.mapped.MappedNamespaceConvention)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: long renewDelegationToken(org.apache.hadoop.security.token.Token)>",
    "<org.apache.hadoop.yarn.webapp.view.HtmlBlock: org.apache.hadoop.security.UserGroupInformation getCallerUGI()>",
    "<org.apache.hadoop.yarn.util.RMHAUtils: java.lang.String findActiveRMHAId(org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<org.apache.commons.lang.text.StrLookup$MapStrLookup: java.lang.String lookup(java.lang.String)>",
    "<com.google.inject.spi.Message: java.lang.Object writeReplace()>",
    "<org.apache.hadoop.yarn.webapp.util.WebAppUtils: java.lang.String getResolvedAddress(java.net.InetSocketAddress)>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogWriter$1: org.apache.hadoop.fs.FSDataOutputStream run()>",
    "<com.sun.xml.bind.api.impl.NameConverter$Standard: java.lang.String combine(java.util.List,char)>",
    "<com.jcraft.jsch.ChannelSftp: void start()>",
    "<org.mortbay.jetty.servlet.ServletHandler$Chain: java.lang.String toString()>",
    "<org.jets3t.service.utils.gatekeeper.GatekeeperMessage: void encodeProperty(java.util.Properties,java.lang.String,java.lang.Object)>",
    "<org.apache.hadoop.yarn.conf.YarnConfiguration: java.net.InetSocketAddress getSocketAddr(java.lang.String,java.lang.String,int)>",
    "<com.google.common.util.concurrent.AbstractListeningExecutorService: java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit)>",
    "<org.apache.hadoop.yarn.util.WindowsBasedProcessTree: boolean isAvailable()>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: void cancelDelegationToken(org.apache.hadoop.security.token.Token)>",
    "<org.jets3t.service.model.StorageObject: long getContentLength()>",
    "<org.apache.jute.compiler.generated.Rcc: void main(java.lang.String[])>",
    "<org.apache.hadoop.yarn.util.FSDownload: org.apache.hadoop.fs.Path copy(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)>",
    "<org.apache.htrace.fasterxml.jackson.databind.util.TokenBuffer$Parser: java.lang.String getText()>",
    "<org.apache.avro.generic.GenericData$Array: java.lang.String toString()>",
    "<com.google.inject.internal.util.$ImmutableSet$SingletonImmutableSet: java.lang.String toString()>",
    "<com.jcraft.jsch.IdentityFile: com.jcraft.jsch.IdentityFile newInstance(java.lang.String,java.lang.String,com.jcraft.jsch.JSch)>",
    "<org.apache.commons.io.filefilter.AndFileFilter: java.lang.String toString()>",
    "<org.apache.ignite.yarn.IgniteYarnClient: void setupAppMasterEnv(java.util.Map,org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<org.apache.zookeeper.server.quorum.QuorumPeerConfig: void parseProperties(java.util.Properties)>",
    "<org.codehaus.jackson.map.ser.std.RawSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
    "<org.mortbay.jetty.security.HashUserRealm: void loadConfig()>",
    "<com.jcraft.jsch.Channel$1: void flush()>",
    "<org.apache.htrace.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,org.apache.htrace.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.fasterxml.jackson.databind.SerializerProvider)>",
    "<org.apache.hadoop.yarn.client.RMProxy: java.lang.Object getProxy(org.apache.hadoop.conf.Configuration,java.lang.Class,java.net.InetSocketAddress)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: void putTimelineDataInJSONFile(java.lang.String,java.lang.String)>",
    "<org.apache.hadoop.yarn.conf.HAUtil: boolean isHAEnabled(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ContainerManagementProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.IdentityFile: void <init>(java.lang.String,byte[],byte[],com.jcraft.jsch.JSch)>",
    "<com.jcraft.jsch.Session: void setTimeout(int)>",
    "<org.apache.log4j.jmx.Agent: void startServer(java.lang.Object)>",
    "<org.apache.commons.beanutils.BeanComparator: int compare(java.lang.Object,java.lang.Object)>",
    "<org.mortbay.io.bio.StringEndPoint: void setInput(java.lang.String)>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String toString()>",
    "<org.apache.hadoop.yarn.security.NMTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.ignite.yarn.ApplicationMaster: void init()>",
    "<org.apache.hadoop.yarn.util.ProcfsBasedProcessTree: void <clinit>()>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogWriter: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.security.UserGroupInformation)>",
    "<org.mortbay.jetty.security.BasicAuthenticator: java.security.Principal authenticate(org.mortbay.jetty.security.UserRealm,java.lang.String,org.mortbay.jetty.Request,org.mortbay.jetty.Response)>",
    "<org.mortbay.util.LazyList: java.lang.String[] toStringArray(java.lang.Object)>",
    "<com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)>",
    "<com.google.inject.internal.util.$ImmutableSet: java.lang.String toString()>",
    "<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
    "<org.apache.ignite.yarn.ApplicationMaster: void onContainersAllocated(java.util.List)>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String valueToString(java.lang.Object)>",
    "<org.apache.htrace.fasterxml.jackson.core.JsonLocation: java.lang.String toString()>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>",
    "<org.mortbay.xml.XmlParser: void setValidating(boolean)>",
    "<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>",
    "<com.sun.jersey.api.uri.UriTemplate: java.lang.StringBuilder createURIComponent(com.sun.jersey.api.uri.UriComponent$Type,java.lang.String,java.util.Map,boolean,java.lang.StringBuilder)>",
    "<org.apache.commons.lang.builder.ReflectionToStringBuilder: java.lang.String[] toNoNullStringArray(java.lang.Object[])>",
    "<org.apache.htrace.fasterxml.jackson.databind.util.TokenBuffer$Parser: org.apache.htrace.fasterxml.jackson.core.JsonToken nextToken()>",
    "<org.mortbay.jetty.servlet.Invoker: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "<org.apache.hadoop.yarn.conf.HAUtil: boolean isAutomaticFailoverEnabled(org.apache.hadoop.conf.Configuration)>",
    "<org.objectweb.asm.ClassWriter: java.lang.String getCommonSuperClass(java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.Session: void setPortForwarding(java.lang.String,int)>",
    "<org.apache.hadoop.yarn.client.ClientRMProxy: org.apache.hadoop.io.Text getTokenService(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String,int)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: org.apache.hadoop.security.authentication.client.ConnectionConfigurator newSslConnConfigurator(int,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.htrace.fasterxml.jackson.databind.ser.std.ToStringSerializer: void serialize(java.lang.Object,org.apache.htrace.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.fasterxml.jackson.databind.SerializerProvider)>",
    "<javax.xml.bind.JAXBException: java.lang.String toString()>",
    "<org.mortbay.log.StdErrLog: void format(java.lang.Throwable)>",
    "<org.apache.commons.configuration.XMLConfiguration: void handleDelimiters(org.apache.commons.configuration.HierarchicalConfiguration$Node,org.apache.commons.configuration.HierarchicalConfiguration$Node,boolean)>",
    "<org.apache.avro.generic.GenericData: int hashCode(java.lang.Object,org.apache.avro.Schema)>",
    "<org.apache.hadoop.yarn.security.ConfiguredYarnAuthorizer: void init(org.apache.hadoop.conf.Configuration)>"
  ],
  "2.5.0": [
    "<org.mortbay.io.bio.StringEndPoint: java.lang.String getOutput()>",
    "<org.apache.hadoop.yarn.security.client.ClientToAMTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.hadoop.yarn.conf.HAUtil: java.lang.String getRMHAId(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.log4j.lf5.viewer.LogTable$LogTableListSelectionListener: void valueChanged(javax.swing.event.ListSelectionEvent)>",
    "<org.mortbay.jetty.handler.ResourceHandler: void setResourceBase(java.lang.String)>",
    "<org.mortbay.util.UrlEncoded: java.lang.String encode(org.mortbay.util.MultiMap,java.lang.String,boolean)>",
    "<com.google.inject.internal.asm.$ClassWriter: java.lang.String getCommonSuperClass(java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.Session: com.jcraft.jsch.KeyExchange receive_kexinit(com.jcraft.jsch.Buffer)>",
    "<org.apache.commons.lang.StringUtils: java.lang.String join(java.lang.Object[],char,int,int)>",
    "<com.google.inject.util.Node: java.lang.String toString()>",
    "<com.google.inject.internal.cglib.core.$EmitUtils: void push_object(com.google.inject.internal.cglib.core.$CodeEmitter,java.lang.Object)>",
    "<org.apache.hadoop.yarn.util.timeline.TimelineUtils: org.apache.hadoop.io.Text buildTimelineTokenService(org.apache.hadoop.conf.Configuration)>",
    "<com.google.inject.spi.Message: java.lang.String getSource()>",
    "<org.codehaus.jackson.map.ser.std.ToStringSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
    "<com.jcraft.jsch.KeyPairRSA: void generate(int)>",
    "<org.apache.commons.collections.ExtendedProperties: java.lang.String interpolateHelper(java.lang.String,java.util.List)>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String getString(java.lang.String)>",
    "<com.google.common.collect.SingletonImmutableSet: java.lang.String toString()>",
    "<org.apache.hadoop.yarn.util.Apps: void setEnvFromInputString(java.util.Map,java.lang.String,java.lang.String)>",
    "<org.apache.htrace.fasterxml.jackson.databind.ser.std.StdKeySerializer: void serialize(java.lang.Object,org.apache.htrace.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.fasterxml.jackson.databind.SerializerProvider)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ApplicationClientProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.logaggregation.LogCLIHelpers: int dumpAllContainersLogs(org.apache.hadoop.yarn.api.records.ApplicationId,java.lang.String,java.io.PrintStream)>",
    "<com.google.common.collect.SingletonImmutableMap: java.lang.String toString()>",
    "<com.jcraft.jsch.ChannelSftp: void put(java.io.InputStream,java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int)>",
    "<org.apache.hadoop.yarn.util.WindowsResourceCalculatorPlugin: java.lang.String getSystemInfoInfoFromShell()>",
    "<com.jcraft.jsch.ChannelSftp$1: void close()>",
    "<org.apache.hadoop.yarn.util.FSDownload: long unpack(java.io.File,java.io.File)>",
    "<org.mortbay.util.MultiMap: java.lang.String getString(java.lang.Object)>",
    "<org.apache.hadoop.yarn.util.ConverterUtils: org.apache.hadoop.security.token.Token convertFromYarn(org.apache.hadoop.yarn.api.records.Token,java.net.InetSocketAddress)>",
    "<com.google.inject.internal.MessageProcessor: java.lang.String getRootMessage(java.lang.Throwable)>",
    "<org.apache.zookeeper.server.quorum.QuorumCnxManager: boolean receiveConnection(java.net.Socket)>",
    "<org.mortbay.xml.XmlConfiguration: void configure(java.lang.Object,org.mortbay.xml.XmlParser$Node,int)>",
    "<org.apache.hadoop.yarn.webapp.WebApps$Builder: org.apache.hadoop.yarn.webapp.WebApp start(org.apache.hadoop.yarn.webapp.WebApp)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ApplicationHistoryProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.log4j.lf5.viewer.configure.MRUFileManager: java.lang.String[] getMRUFileList()>",
    "<org.apache.log4j.or.DefaultRenderer: java.lang.String doRender(java.lang.Object)>",
    "<org.apache.htrace.fasterxml.jackson.databind.node.POJONode: java.lang.String asText()>",
    "<org.mortbay.jetty.handler.ContextHandler: void setResourceBase(java.lang.String)>",
    "<org.apache.htrace.fasterxml.jackson.databind.deser.SettableAnyProperty$AnySetterReferring: void handleResolvedForwardReference(java.lang.Object,java.lang.Object)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl$TimelineURLConnectionFactory: java.net.HttpURLConnection getHttpURLConnection(java.net.URL)>",
    "<com.jcraft.jsch.ProxyHTTP: void connect(com.jcraft.jsch.SocketFactory,java.lang.String,int,int)>",
    "<org.apache.avro.generic.GenericData: int compare(java.lang.Object,java.lang.Object,org.apache.avro.Schema,boolean)>",
    "<org.mortbay.jetty.Request: javax.servlet.http.Cookie[] getCookies()>",
    "<com.jcraft.jsch.Channel: void connect(int)>",
    "<org.apache.log4j.or.sax.AttributesRenderer: java.lang.String doRender(java.lang.Object)>",
    "<org.apache.commons.configuration.XMLConfiguration$XMLNode: void updateElement(java.lang.Object)>",
    "<org.apache.hadoop.yarn.nodelabels.FileSystemNodeLabelsStore: java.lang.String getDefaultFSNodeLabelsRootDir()>",
    "<org.apache.hadoop.yarn.server.api.impl.pb.client.SCMAdminProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.conf.YarnConfiguration: void <clinit>()>",
    "<org.apache.hadoop.yarn.security.AMRMTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.log4j.DefaultThrowableRenderer: java.lang.String[] render(java.lang.Throwable)>",
    "<org.mortbay.resource.Resource: org.mortbay.resource.Resource newResource(java.net.URL,boolean)>",
    "<org.apache.hadoop.yarn.server.security.ApplicationACLsManager: void addApplication(org.apache.hadoop.yarn.api.records.ApplicationId,java.util.Map)>",
    "<com.google.common.util.concurrent.Futures: java.lang.Object newFromConstructor(java.lang.reflect.Constructor,java.lang.Throwable)>",
    "<org.apache.hadoop.yarn.webapp.log.AggregatedLogsBlock: void render(org.apache.hadoop.yarn.webapp.view.HtmlBlock$Block)>",
    "<org.mortbay.jetty.servlet.DefaultServlet: void init()>",
    "<org.jets3t.service.utils.ServiceUtils: java.lang.String join(java.util.List,java.lang.String)>",
    "<com.jcraft.jsch.ChannelSftp$1: void write(byte[],int,int)>",
    "<org.xerial.snappy.SnappyLoader: void loadSnappySystemProperties()>",
    "<org.apache.avro.generic.GenericData: void toString(java.lang.Object,java.lang.StringBuilder)>",
    "<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.Object)>",
    "<org.apache.htrace.fasterxml.jackson.databind.deser.std.StringDeserializer: java.lang.String deserialize(org.apache.htrace.fasterxml.jackson.core.JsonParser,org.apache.htrace.fasterxml.jackson.databind.DeserializationContext)>",
    "<org.codehaus.jackson.map.ser.std.StdKeySerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
    "<com.jcraft.jsch.ChannelSftp: void put(java.lang.String,java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int)>",
    "<org.jets3t.service.utils.RestUtils: java.lang.String makeServiceCanonicalString(java.lang.String,java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.util.List)>",
    "<org.apache.ignite.yarn.IgniteYarnClient: void main(java.lang.String[])>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ApplicationMasterProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.security.ContainerTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.commons.logging.LogConfigurationException: void <init>(java.lang.Throwable)>",
    "<org.apache.commons.cli.HelpFormatter: java.lang.StringBuffer renderOptions(java.lang.StringBuffer,int,org.apache.commons.cli.Options,int,int)>",
    "<org.apache.hadoop.yarn.logaggregation.LogCLIHelpers: int dumpAContainersLogs(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.Session: void connect(int)>",
    "<org.apache.hadoop.yarn.util.YarnVersionInfo: java.lang.String getBuildVersion()>",
    "<org.apache.log4j.helpers.PatternParser$MDCPatternConverter: java.lang.String convert(org.apache.log4j.spi.LoggingEvent)>",
    "<com.google.common.base.Functions$ToStringFunction: java.lang.String apply(java.lang.Object)>",
    "<org.mortbay.jetty.security.SslSocketConnector: java.net.ServerSocket newServerSocket(java.lang.String,int,int)>",
    "<org.apache.hadoop.yarn.webapp.util.WebAppUtils: java.util.List getProxyHostsAndPortsForAmFilter(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: void serviceInit(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.commons.configuration.AbstractConfiguration$1: java.lang.String lookup(java.lang.String)>",
    "<org.apache.hadoop.yarn.security.AdminACLsManager: void <init>(org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.Session: void initInflater(java.lang.String)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ClientSCMProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.Session: void updateKeys(com.jcraft.jsch.KeyExchange)>",
    "<org.apache.commons.configuration.XMLConfiguration$XMLBuilderVisitor: void updateAttribute(org.apache.commons.configuration.HierarchicalConfiguration$Node,org.w3c.dom.Element,java.lang.String,char)>",
    "<org.apache.hadoop.yarn.client.AHSProxy: java.lang.Object getProxy(org.apache.hadoop.conf.Configuration,java.lang.Class,java.net.InetSocketAddress)>",
    "<org.apache.hadoop.yarn.conf.HAUtil: java.util.Collection getRMHAIds(org.apache.hadoop.conf.Configuration)>",
    "<org.mortbay.xml.XmlConfiguration: void set(java.lang.Object,org.mortbay.xml.XmlParser$Node)>",
    "<org.apache.log4j.or.ThreadGroupRenderer: java.lang.String doRender(java.lang.Object)>",
    "<com.jcraft.jsch.KeyPairDSA: void generate(int)>",
    "<org.apache.htrace.commons.logging.LogConfigurationException: void <init>(java.lang.Throwable)>",
    "<org.apache.hadoop.yarn.security.client.RMDelegationTokenIdentifier$Renewer: org.apache.hadoop.yarn.api.ApplicationClientProtocol getRmClient(org.apache.hadoop.security.token.Token,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.util.RMHAUtils: java.util.List getRMHAWebappAddresses(org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<com.google.inject.internal.Initializer$InjectableReference: java.lang.String toString()>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogValue: java.io.FileInputStream secureOpenFile(java.io.File)>",
    "<org.apache.commons.configuration.AbstractConfiguration: java.lang.String interpolate(java.lang.String)>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogReader: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)>",
    "<org.apache.hadoop.yarn.server.security.ApplicationACLsManager: void <clinit>()>",
    "<org.apache.commons.lang.ObjectUtils: java.lang.String toString(java.lang.Object)>",
    "<com.jcraft.jsch.ProxySOCKS4: void connect(com.jcraft.jsch.SocketFactory,java.lang.String,int,int)>",
    "<org.apache.hadoop.yarn.server.api.impl.pb.client.ResourceManagerAdministrationProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.client.ClientRMProxy: void setAMRMTokenService(org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.KeyPair: com.jcraft.jsch.KeyPair load(com.jcraft.jsch.JSch,java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.ProxySOCKS5: void connect(com.jcraft.jsch.SocketFactory,java.lang.String,int,int)>",
    "<org.apache.directory.api.util.OsgiUtils: java.lang.String getBundleExports(java.io.File)>",
    "<org.codehaus.jettison.json.JSONArray: java.lang.String getString(int)>",
    "<com.google.inject.internal.ProcessedBindingData: void initializeBindings()>",
    "<org.jets3t.service.utils.ServiceUtils: java.util.Map cleanRestMetadataMap(java.util.Map,java.lang.String,java.lang.String)>",
    "<org.apache.commons.lang.exception.ExceptionUtils: java.lang.String[] getRootCauseStackTrace(java.lang.Throwable)>",
    "<org.apache.hadoop.yarn.util.WindowsBasedProcessTree: java.lang.String getAllProcessInfoFromShell()>",
    "<javax.xml.bind.ContextFinder: java.util.Properties loadJAXBProperties(java.lang.ClassLoader,java.lang.String)>",
    "<com.jcraft.jsch.IdentityFile: boolean setPassphrase(byte[])>",
    "<org.mortbay.jetty.handler.DebugHandler: void handle(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,int)>",
    "<com.jcraft.jsch.KnownHosts: void setKnownHosts(java.io.InputStream)>",
    "<org.mortbay.xml.XmlConfiguration: java.lang.Object value(java.lang.Object,org.mortbay.xml.XmlParser$Node)>",
    "<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
    "<org.apache.hadoop.yarn.util.RMHAUtils: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState getHAState(org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<org.apache.commons.lang.StringUtils: java.lang.String join(java.lang.Object[],java.lang.String,int,int)>",
    "<com.jcraft.jsch.Session: void initDeflater(java.lang.String)>",
    "<com.jcraft.jsch.Util: java.net.Socket createSocket(java.lang.String,int,int)>",
    "<org.apache.hadoop.yarn.util.YarnVersionInfo: void <init>()>",
    "<com.google.common.collect.SingletonImmutableList: java.lang.String toString()>",
    "<org.codehaus.jettison.json.JSONObject: java.io.Writer write(java.io.Writer)>",
    "<org.mortbay.jetty.Request: void extractParameters()>",
    "<com.jcraft.jsch.ChannelSftp: void _put(java.io.InputStream,java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int)>",
    "<org.codehaus.jettison.mapped.MappedXMLStreamReader: void <init>(org.codehaus.jettison.json.JSONObject,org.codehaus.jettison.mapped.MappedNamespaceConvention)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: long renewDelegationToken(org.apache.hadoop.security.token.Token)>",
    "<org.apache.hadoop.yarn.webapp.view.HtmlBlock: org.apache.hadoop.security.UserGroupInformation getCallerUGI()>",
    "<org.apache.hadoop.yarn.util.RMHAUtils: java.lang.String findActiveRMHAId(org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<org.apache.commons.lang.text.StrLookup$MapStrLookup: java.lang.String lookup(java.lang.String)>",
    "<com.google.inject.spi.Message: java.lang.Object writeReplace()>",
    "<org.apache.hadoop.yarn.webapp.util.WebAppUtils: java.lang.String getResolvedAddress(java.net.InetSocketAddress)>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogWriter$1: org.apache.hadoop.fs.FSDataOutputStream run()>",
    "<com.sun.xml.bind.api.impl.NameConverter$Standard: java.lang.String combine(java.util.List,char)>",
    "<com.jcraft.jsch.ChannelSftp: void start()>",
    "<org.mortbay.jetty.servlet.ServletHandler$Chain: java.lang.String toString()>",
    "<org.jets3t.service.utils.gatekeeper.GatekeeperMessage: void encodeProperty(java.util.Properties,java.lang.String,java.lang.Object)>",
    "<org.apache.hadoop.yarn.conf.YarnConfiguration: java.net.InetSocketAddress getSocketAddr(java.lang.String,java.lang.String,int)>",
    "<com.google.common.util.concurrent.AbstractListeningExecutorService: java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit)>",
    "<org.apache.hadoop.yarn.util.WindowsBasedProcessTree: boolean isAvailable()>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: void cancelDelegationToken(org.apache.hadoop.security.token.Token)>",
    "<org.jets3t.service.model.StorageObject: long getContentLength()>",
    "<org.apache.jute.compiler.generated.Rcc: void main(java.lang.String[])>",
    "<org.apache.hadoop.yarn.util.FSDownload: org.apache.hadoop.fs.Path copy(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)>",
    "<org.apache.htrace.fasterxml.jackson.databind.util.TokenBuffer$Parser: java.lang.String getText()>",
    "<org.apache.avro.generic.GenericData$Array: java.lang.String toString()>",
    "<com.google.inject.internal.util.$ImmutableSet$SingletonImmutableSet: java.lang.String toString()>",
    "<com.jcraft.jsch.IdentityFile: com.jcraft.jsch.IdentityFile newInstance(java.lang.String,java.lang.String,com.jcraft.jsch.JSch)>",
    "<org.apache.commons.io.filefilter.AndFileFilter: java.lang.String toString()>",
    "<org.apache.ignite.yarn.IgniteYarnClient: void setupAppMasterEnv(java.util.Map,org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<org.apache.zookeeper.server.quorum.QuorumPeerConfig: void parseProperties(java.util.Properties)>",
    "<org.codehaus.jackson.map.ser.std.RawSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
    "<org.mortbay.jetty.security.HashUserRealm: void loadConfig()>",
    "<com.jcraft.jsch.Channel$1: void flush()>",
    "<org.apache.htrace.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,org.apache.htrace.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.fasterxml.jackson.databind.SerializerProvider)>",
    "<org.apache.hadoop.yarn.client.RMProxy: java.lang.Object getProxy(org.apache.hadoop.conf.Configuration,java.lang.Class,java.net.InetSocketAddress)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: void putTimelineDataInJSONFile(java.lang.String,java.lang.String)>",
    "<org.apache.hadoop.yarn.conf.HAUtil: boolean isHAEnabled(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ContainerManagementProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.IdentityFile: void <init>(java.lang.String,byte[],byte[],com.jcraft.jsch.JSch)>",
    "<com.jcraft.jsch.Session: void setTimeout(int)>",
    "<org.apache.log4j.jmx.Agent: void startServer(java.lang.Object)>",
    "<org.mortbay.io.bio.StringEndPoint: void setInput(java.lang.String)>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String toString()>",
    "<org.apache.hadoop.yarn.security.NMTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.ignite.yarn.ApplicationMaster: void init()>",
    "<org.apache.hadoop.yarn.util.ProcfsBasedProcessTree: void <clinit>()>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogWriter: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.security.UserGroupInformation)>",
    "<org.mortbay.jetty.security.BasicAuthenticator: java.security.Principal authenticate(org.mortbay.jetty.security.UserRealm,java.lang.String,org.mortbay.jetty.Request,org.mortbay.jetty.Response)>",
    "<org.mortbay.util.LazyList: java.lang.String[] toStringArray(java.lang.Object)>",
    "<com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)>",
    "<com.google.inject.internal.util.$ImmutableSet: java.lang.String toString()>",
    "<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
    "<org.apache.ignite.yarn.ApplicationMaster: void onContainersAllocated(java.util.List)>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String valueToString(java.lang.Object)>",
    "<org.apache.htrace.fasterxml.jackson.core.JsonLocation: java.lang.String toString()>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>",
    "<org.mortbay.xml.XmlParser: void setValidating(boolean)>",
    "<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>",
    "<com.sun.jersey.api.uri.UriTemplate: java.lang.StringBuilder createURIComponent(com.sun.jersey.api.uri.UriComponent$Type,java.lang.String,java.util.Map,boolean,java.lang.StringBuilder)>",
    "<org.apache.commons.lang.builder.ReflectionToStringBuilder: java.lang.String[] toNoNullStringArray(java.lang.Object[])>",
    "<org.apache.htrace.fasterxml.jackson.databind.util.TokenBuffer$Parser: org.apache.htrace.fasterxml.jackson.core.JsonToken nextToken()>",
    "<org.mortbay.jetty.servlet.Invoker: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "<org.apache.hadoop.yarn.conf.HAUtil: boolean isAutomaticFailoverEnabled(org.apache.hadoop.conf.Configuration)>",
    "<org.objectweb.asm.ClassWriter: java.lang.String getCommonSuperClass(java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.Session: void setPortForwarding(java.lang.String,int)>",
    "<org.apache.hadoop.yarn.client.ClientRMProxy: org.apache.hadoop.io.Text getTokenService(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String,int)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: org.apache.hadoop.security.authentication.client.ConnectionConfigurator newSslConnConfigurator(int,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.htrace.fasterxml.jackson.databind.ser.std.ToStringSerializer: void serialize(java.lang.Object,org.apache.htrace.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.fasterxml.jackson.databind.SerializerProvider)>",
    "<javax.xml.bind.JAXBException: java.lang.String toString()>",
    "<org.mortbay.log.StdErrLog: void format(java.lang.Throwable)>",
    "<org.apache.commons.configuration.XMLConfiguration: void handleDelimiters(org.apache.commons.configuration.HierarchicalConfiguration$Node,org.apache.commons.configuration.HierarchicalConfiguration$Node,boolean)>",
    "<org.apache.avro.generic.GenericData: int hashCode(java.lang.Object,org.apache.avro.Schema)>",
    "<org.apache.hadoop.yarn.security.ConfiguredYarnAuthorizer: void init(org.apache.hadoop.conf.Configuration)>"
  ],
  "2.1.0": [
    "<org.mortbay.io.bio.StringEndPoint: java.lang.String getOutput()>",
    "<org.apache.hadoop.yarn.security.client.ClientToAMTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.hadoop.yarn.conf.HAUtil: java.lang.String getRMHAId(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.log4j.lf5.viewer.LogTable$LogTableListSelectionListener: void valueChanged(javax.swing.event.ListSelectionEvent)>",
    "<org.mortbay.jetty.handler.ResourceHandler: void setResourceBase(java.lang.String)>",
    "<org.mortbay.util.UrlEncoded: java.lang.String encode(org.mortbay.util.MultiMap,java.lang.String,boolean)>",
    "<com.google.inject.internal.asm.$ClassWriter: java.lang.String getCommonSuperClass(java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.Session: com.jcraft.jsch.KeyExchange receive_kexinit(com.jcraft.jsch.Buffer)>",
    "<org.apache.commons.lang.StringUtils: java.lang.String join(java.lang.Object[],char,int,int)>",
    "<com.google.inject.util.Node: java.lang.String toString()>",
    "<com.google.inject.internal.cglib.core.$EmitUtils: void push_object(com.google.inject.internal.cglib.core.$CodeEmitter,java.lang.Object)>",
    "<org.apache.hadoop.yarn.util.timeline.TimelineUtils: org.apache.hadoop.io.Text buildTimelineTokenService(org.apache.hadoop.conf.Configuration)>",
    "<com.google.inject.spi.Message: java.lang.String getSource()>",
    "<org.codehaus.jackson.map.ser.std.ToStringSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
    "<com.jcraft.jsch.KeyPairRSA: void generate(int)>",
    "<org.apache.commons.collections.ExtendedProperties: java.lang.String interpolateHelper(java.lang.String,java.util.List)>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String getString(java.lang.String)>",
    "<com.google.common.collect.SingletonImmutableSet: java.lang.String toString()>",
    "<org.apache.hadoop.yarn.util.Apps: void setEnvFromInputString(java.util.Map,java.lang.String,java.lang.String)>",
    "<org.apache.htrace.fasterxml.jackson.databind.ser.std.StdKeySerializer: void serialize(java.lang.Object,org.apache.htrace.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.fasterxml.jackson.databind.SerializerProvider)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ApplicationClientProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.logaggregation.LogCLIHelpers: int dumpAllContainersLogs(org.apache.hadoop.yarn.api.records.ApplicationId,java.lang.String,java.io.PrintStream)>",
    "<com.google.common.collect.SingletonImmutableMap: java.lang.String toString()>",
    "<com.jcraft.jsch.ChannelSftp: void put(java.io.InputStream,java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int)>",
    "<org.apache.hadoop.yarn.util.WindowsResourceCalculatorPlugin: java.lang.String getSystemInfoInfoFromShell()>",
    "<com.jcraft.jsch.ChannelSftp$1: void close()>",
    "<org.apache.hadoop.yarn.util.FSDownload: long unpack(java.io.File,java.io.File)>",
    "<org.mortbay.util.MultiMap: java.lang.String getString(java.lang.Object)>",
    "<org.apache.hadoop.yarn.util.ConverterUtils: org.apache.hadoop.security.token.Token convertFromYarn(org.apache.hadoop.yarn.api.records.Token,java.net.InetSocketAddress)>",
    "<com.google.inject.internal.MessageProcessor: java.lang.String getRootMessage(java.lang.Throwable)>",
    "<org.apache.zookeeper.server.quorum.QuorumCnxManager: boolean receiveConnection(java.net.Socket)>",
    "<org.mortbay.xml.XmlConfiguration: void configure(java.lang.Object,org.mortbay.xml.XmlParser$Node,int)>",
    "<org.apache.hadoop.yarn.webapp.WebApps$Builder: org.apache.hadoop.yarn.webapp.WebApp start(org.apache.hadoop.yarn.webapp.WebApp)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ApplicationHistoryProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.log4j.lf5.viewer.configure.MRUFileManager: java.lang.String[] getMRUFileList()>",
    "<org.apache.log4j.or.DefaultRenderer: java.lang.String doRender(java.lang.Object)>",
    "<org.apache.htrace.fasterxml.jackson.databind.node.POJONode: java.lang.String asText()>",
    "<org.mortbay.jetty.handler.ContextHandler: void setResourceBase(java.lang.String)>",
    "<org.apache.htrace.fasterxml.jackson.databind.deser.SettableAnyProperty$AnySetterReferring: void handleResolvedForwardReference(java.lang.Object,java.lang.Object)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl$TimelineURLConnectionFactory: java.net.HttpURLConnection getHttpURLConnection(java.net.URL)>",
    "<com.jcraft.jsch.ProxyHTTP: void connect(com.jcraft.jsch.SocketFactory,java.lang.String,int,int)>",
    "<org.apache.avro.generic.GenericData: int compare(java.lang.Object,java.lang.Object,org.apache.avro.Schema,boolean)>",
    "<org.mortbay.jetty.Request: javax.servlet.http.Cookie[] getCookies()>",
    "<com.jcraft.jsch.Channel: void connect(int)>",
    "<org.apache.log4j.or.sax.AttributesRenderer: java.lang.String doRender(java.lang.Object)>",
    "<org.apache.commons.configuration.XMLConfiguration$XMLNode: void updateElement(java.lang.Object)>",
    "<org.apache.hadoop.yarn.nodelabels.FileSystemNodeLabelsStore: java.lang.String getDefaultFSNodeLabelsRootDir()>",
    "<org.apache.hadoop.yarn.server.api.impl.pb.client.SCMAdminProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.conf.YarnConfiguration: void <clinit>()>",
    "<org.apache.hadoop.yarn.security.AMRMTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.log4j.DefaultThrowableRenderer: java.lang.String[] render(java.lang.Throwable)>",
    "<org.mortbay.resource.Resource: org.mortbay.resource.Resource newResource(java.net.URL,boolean)>",
    "<org.apache.hadoop.yarn.server.security.ApplicationACLsManager: void addApplication(org.apache.hadoop.yarn.api.records.ApplicationId,java.util.Map)>",
    "<com.google.common.util.concurrent.Futures: java.lang.Object newFromConstructor(java.lang.reflect.Constructor,java.lang.Throwable)>",
    "<org.apache.hadoop.yarn.webapp.log.AggregatedLogsBlock: void render(org.apache.hadoop.yarn.webapp.view.HtmlBlock$Block)>",
    "<org.mortbay.jetty.servlet.DefaultServlet: void init()>",
    "<org.jets3t.service.utils.ServiceUtils: java.lang.String join(java.util.List,java.lang.String)>",
    "<com.jcraft.jsch.ChannelSftp$1: void write(byte[],int,int)>",
    "<org.xerial.snappy.SnappyLoader: void loadSnappySystemProperties()>",
    "<org.apache.avro.generic.GenericData: void toString(java.lang.Object,java.lang.StringBuilder)>",
    "<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.Object)>",
    "<org.apache.htrace.fasterxml.jackson.databind.deser.std.StringDeserializer: java.lang.String deserialize(org.apache.htrace.fasterxml.jackson.core.JsonParser,org.apache.htrace.fasterxml.jackson.databind.DeserializationContext)>",
    "<org.codehaus.jackson.map.ser.std.StdKeySerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
    "<com.jcraft.jsch.ChannelSftp: void put(java.lang.String,java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int)>",
    "<org.jets3t.service.utils.RestUtils: java.lang.String makeServiceCanonicalString(java.lang.String,java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.util.List)>",
    "<org.apache.ignite.yarn.IgniteYarnClient: void main(java.lang.String[])>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ApplicationMasterProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.security.ContainerTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.commons.logging.LogConfigurationException: void <init>(java.lang.Throwable)>",
    "<org.apache.commons.cli.HelpFormatter: java.lang.StringBuffer renderOptions(java.lang.StringBuffer,int,org.apache.commons.cli.Options,int,int)>",
    "<org.apache.hadoop.yarn.logaggregation.LogCLIHelpers: int dumpAContainersLogs(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.Session: void connect(int)>",
    "<org.apache.hadoop.yarn.util.YarnVersionInfo: java.lang.String getBuildVersion()>",
    "<org.apache.log4j.helpers.PatternParser$MDCPatternConverter: java.lang.String convert(org.apache.log4j.spi.LoggingEvent)>",
    "<com.google.common.base.Functions$ToStringFunction: java.lang.String apply(java.lang.Object)>",
    "<org.mortbay.jetty.security.SslSocketConnector: java.net.ServerSocket newServerSocket(java.lang.String,int,int)>",
    "<org.apache.hadoop.yarn.webapp.util.WebAppUtils: java.util.List getProxyHostsAndPortsForAmFilter(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: void serviceInit(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.commons.configuration.AbstractConfiguration$1: java.lang.String lookup(java.lang.String)>",
    "<org.apache.hadoop.yarn.security.AdminACLsManager: void <init>(org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.Session: void initInflater(java.lang.String)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ClientSCMProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.Session: void updateKeys(com.jcraft.jsch.KeyExchange)>",
    "<org.apache.commons.configuration.XMLConfiguration$XMLBuilderVisitor: void updateAttribute(org.apache.commons.configuration.HierarchicalConfiguration$Node,org.w3c.dom.Element,java.lang.String,char)>",
    "<org.apache.hadoop.yarn.client.AHSProxy: java.lang.Object getProxy(org.apache.hadoop.conf.Configuration,java.lang.Class,java.net.InetSocketAddress)>",
    "<org.apache.hadoop.yarn.conf.HAUtil: java.util.Collection getRMHAIds(org.apache.hadoop.conf.Configuration)>",
    "<org.mortbay.xml.XmlConfiguration: void set(java.lang.Object,org.mortbay.xml.XmlParser$Node)>",
    "<org.apache.log4j.or.ThreadGroupRenderer: java.lang.String doRender(java.lang.Object)>",
    "<com.jcraft.jsch.KeyPairDSA: void generate(int)>",
    "<org.apache.htrace.commons.logging.LogConfigurationException: void <init>(java.lang.Throwable)>",
    "<org.apache.hadoop.yarn.security.client.RMDelegationTokenIdentifier$Renewer: org.apache.hadoop.yarn.api.ApplicationClientProtocol getRmClient(org.apache.hadoop.security.token.Token,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.util.RMHAUtils: java.util.List getRMHAWebappAddresses(org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<com.google.inject.internal.Initializer$InjectableReference: java.lang.String toString()>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogValue: java.io.FileInputStream secureOpenFile(java.io.File)>",
    "<org.apache.commons.configuration.AbstractConfiguration: java.lang.String interpolate(java.lang.String)>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogReader: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)>",
    "<org.apache.hadoop.yarn.server.security.ApplicationACLsManager: void <clinit>()>",
    "<org.apache.commons.lang.ObjectUtils: java.lang.String toString(java.lang.Object)>",
    "<net.sf.cglib.core.EmitUtils: void push_object(net.sf.cglib.core.CodeEmitter,java.lang.Object)>",
    "<com.jcraft.jsch.ProxySOCKS4: void connect(com.jcraft.jsch.SocketFactory,java.lang.String,int,int)>",
    "<org.apache.hadoop.yarn.server.api.impl.pb.client.ResourceManagerAdministrationProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.client.ClientRMProxy: void setAMRMTokenService(org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.KeyPair: com.jcraft.jsch.KeyPair load(com.jcraft.jsch.JSch,java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.ProxySOCKS5: void connect(com.jcraft.jsch.SocketFactory,java.lang.String,int,int)>",
    "<org.apache.directory.api.util.OsgiUtils: java.lang.String getBundleExports(java.io.File)>",
    "<org.codehaus.jettison.json.JSONArray: java.lang.String getString(int)>",
    "<com.google.inject.internal.ProcessedBindingData: void initializeBindings()>",
    "<org.jets3t.service.utils.ServiceUtils: java.util.Map cleanRestMetadataMap(java.util.Map,java.lang.String,java.lang.String)>",
    "<org.apache.commons.lang.exception.ExceptionUtils: java.lang.String[] getRootCauseStackTrace(java.lang.Throwable)>",
    "<org.apache.hadoop.yarn.util.WindowsBasedProcessTree: java.lang.String getAllProcessInfoFromShell()>",
    "<javax.xml.bind.ContextFinder: java.util.Properties loadJAXBProperties(java.lang.ClassLoader,java.lang.String)>",
    "<com.jcraft.jsch.IdentityFile: boolean setPassphrase(byte[])>",
    "<org.mortbay.jetty.handler.DebugHandler: void handle(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,int)>",
    "<com.jcraft.jsch.KnownHosts: void setKnownHosts(java.io.InputStream)>",
    "<org.mortbay.xml.XmlConfiguration: java.lang.Object value(java.lang.Object,org.mortbay.xml.XmlParser$Node)>",
    "<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
    "<org.apache.hadoop.yarn.util.RMHAUtils: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState getHAState(org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<org.apache.commons.lang.StringUtils: java.lang.String join(java.lang.Object[],java.lang.String,int,int)>",
    "<com.jcraft.jsch.Session: void initDeflater(java.lang.String)>",
    "<com.jcraft.jsch.Util: java.net.Socket createSocket(java.lang.String,int,int)>",
    "<org.apache.hadoop.yarn.util.YarnVersionInfo: void <init>()>",
    "<com.google.common.collect.SingletonImmutableList: java.lang.String toString()>",
    "<org.codehaus.jettison.json.JSONObject: java.io.Writer write(java.io.Writer)>",
    "<org.mortbay.jetty.Request: void extractParameters()>",
    "<com.jcraft.jsch.ChannelSftp: void _put(java.io.InputStream,java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int)>",
    "<org.codehaus.jettison.mapped.MappedXMLStreamReader: void <init>(org.codehaus.jettison.json.JSONObject,org.codehaus.jettison.mapped.MappedNamespaceConvention)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: long renewDelegationToken(org.apache.hadoop.security.token.Token)>",
    "<org.apache.hadoop.yarn.webapp.view.HtmlBlock: org.apache.hadoop.security.UserGroupInformation getCallerUGI()>",
    "<org.apache.hadoop.yarn.util.RMHAUtils: java.lang.String findActiveRMHAId(org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<org.apache.commons.lang.text.StrLookup$MapStrLookup: java.lang.String lookup(java.lang.String)>",
    "<com.google.inject.spi.Message: java.lang.Object writeReplace()>",
    "<org.apache.hadoop.yarn.webapp.util.WebAppUtils: java.lang.String getResolvedAddress(java.net.InetSocketAddress)>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogWriter$1: org.apache.hadoop.fs.FSDataOutputStream run()>",
    "<com.sun.xml.bind.api.impl.NameConverter$Standard: java.lang.String combine(java.util.List,char)>",
    "<com.jcraft.jsch.ChannelSftp: void start()>",
    "<org.mortbay.jetty.servlet.ServletHandler$Chain: java.lang.String toString()>",
    "<org.jets3t.service.utils.gatekeeper.GatekeeperMessage: void encodeProperty(java.util.Properties,java.lang.String,java.lang.Object)>",
    "<org.apache.hadoop.yarn.conf.YarnConfiguration: java.net.InetSocketAddress getSocketAddr(java.lang.String,java.lang.String,int)>",
    "<com.google.common.util.concurrent.AbstractListeningExecutorService: java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit)>",
    "<org.apache.hadoop.yarn.util.WindowsBasedProcessTree: boolean isAvailable()>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: void cancelDelegationToken(org.apache.hadoop.security.token.Token)>",
    "<org.jets3t.service.model.StorageObject: long getContentLength()>",
    "<org.apache.jute.compiler.generated.Rcc: void main(java.lang.String[])>",
    "<org.apache.hadoop.yarn.util.FSDownload: org.apache.hadoop.fs.Path copy(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)>",
    "<org.apache.htrace.fasterxml.jackson.databind.util.TokenBuffer$Parser: java.lang.String getText()>",
    "<org.apache.avro.generic.GenericData$Array: java.lang.String toString()>",
    "<com.google.inject.internal.util.$ImmutableSet$SingletonImmutableSet: java.lang.String toString()>",
    "<com.jcraft.jsch.IdentityFile: com.jcraft.jsch.IdentityFile newInstance(java.lang.String,java.lang.String,com.jcraft.jsch.JSch)>",
    "<org.apache.commons.io.filefilter.AndFileFilter: java.lang.String toString()>",
    "<org.apache.ignite.yarn.IgniteYarnClient: void setupAppMasterEnv(java.util.Map,org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<org.apache.zookeeper.server.quorum.QuorumPeerConfig: void parseProperties(java.util.Properties)>",
    "<org.codehaus.jackson.map.ser.std.RawSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
    "<org.mortbay.jetty.security.HashUserRealm: void loadConfig()>",
    "<com.jcraft.jsch.Channel$1: void flush()>",
    "<org.apache.htrace.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,org.apache.htrace.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.fasterxml.jackson.databind.SerializerProvider)>",
    "<org.apache.hadoop.yarn.client.RMProxy: java.lang.Object getProxy(org.apache.hadoop.conf.Configuration,java.lang.Class,java.net.InetSocketAddress)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: void putTimelineDataInJSONFile(java.lang.String,java.lang.String)>",
    "<org.apache.hadoop.yarn.conf.HAUtil: boolean isHAEnabled(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ContainerManagementProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.IdentityFile: void <init>(java.lang.String,byte[],byte[],com.jcraft.jsch.JSch)>",
    "<com.jcraft.jsch.Session: void setTimeout(int)>",
    "<org.apache.log4j.jmx.Agent: void startServer(java.lang.Object)>",
    "<org.apache.commons.beanutils.BeanComparator: int compare(java.lang.Object,java.lang.Object)>",
    "<org.mortbay.io.bio.StringEndPoint: void setInput(java.lang.String)>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String toString()>",
    "<org.apache.hadoop.yarn.security.NMTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.ignite.yarn.ApplicationMaster: void init()>",
    "<org.apache.hadoop.yarn.util.ProcfsBasedProcessTree: void <clinit>()>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogWriter: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.security.UserGroupInformation)>",
    "<org.mortbay.jetty.security.BasicAuthenticator: java.security.Principal authenticate(org.mortbay.jetty.security.UserRealm,java.lang.String,org.mortbay.jetty.Request,org.mortbay.jetty.Response)>",
    "<org.mortbay.util.LazyList: java.lang.String[] toStringArray(java.lang.Object)>",
    "<com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)>",
    "<com.google.inject.internal.util.$ImmutableSet: java.lang.String toString()>",
    "<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
    "<org.apache.ignite.yarn.ApplicationMaster: void onContainersAllocated(java.util.List)>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String valueToString(java.lang.Object)>",
    "<org.apache.htrace.fasterxml.jackson.core.JsonLocation: java.lang.String toString()>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>",
    "<org.mortbay.xml.XmlParser: void setValidating(boolean)>",
    "<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>",
    "<com.sun.jersey.api.uri.UriTemplate: java.lang.StringBuilder createURIComponent(com.sun.jersey.api.uri.UriComponent$Type,java.lang.String,java.util.Map,boolean,java.lang.StringBuilder)>",
    "<org.apache.commons.lang.builder.ReflectionToStringBuilder: java.lang.String[] toNoNullStringArray(java.lang.Object[])>",
    "<org.apache.htrace.fasterxml.jackson.databind.util.TokenBuffer$Parser: org.apache.htrace.fasterxml.jackson.core.JsonToken nextToken()>",
    "<org.mortbay.jetty.servlet.Invoker: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "<org.apache.hadoop.yarn.conf.HAUtil: boolean isAutomaticFailoverEnabled(org.apache.hadoop.conf.Configuration)>",
    "<org.objectweb.asm.ClassWriter: java.lang.String getCommonSuperClass(java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.Session: void setPortForwarding(java.lang.String,int)>",
    "<org.apache.hadoop.yarn.client.ClientRMProxy: org.apache.hadoop.io.Text getTokenService(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String,int)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: org.apache.hadoop.security.authentication.client.ConnectionConfigurator newSslConnConfigurator(int,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.htrace.fasterxml.jackson.databind.ser.std.ToStringSerializer: void serialize(java.lang.Object,org.apache.htrace.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.fasterxml.jackson.databind.SerializerProvider)>",
    "<javax.xml.bind.JAXBException: java.lang.String toString()>",
    "<org.mortbay.log.StdErrLog: void format(java.lang.Throwable)>",
    "<org.apache.commons.configuration.XMLConfiguration: void handleDelimiters(org.apache.commons.configuration.HierarchicalConfiguration$Node,org.apache.commons.configuration.HierarchicalConfiguration$Node,boolean)>",
    "<org.apache.avro.generic.GenericData: int hashCode(java.lang.Object,org.apache.avro.Schema)>",
    "<org.apache.hadoop.yarn.security.ConfiguredYarnAuthorizer: void init(org.apache.hadoop.conf.Configuration)>"
  ],
  "1.5.0-b1": [
    "<org.mortbay.io.bio.StringEndPoint: java.lang.String getOutput()>",
    "<org.apache.hadoop.yarn.security.client.ClientToAMTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.hadoop.yarn.conf.HAUtil: java.lang.String getRMHAId(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.log4j.lf5.viewer.LogTable$LogTableListSelectionListener: void valueChanged(javax.swing.event.ListSelectionEvent)>",
    "<org.mortbay.jetty.handler.ResourceHandler: void setResourceBase(java.lang.String)>",
    "<org.mortbay.util.UrlEncoded: java.lang.String encode(org.mortbay.util.MultiMap,java.lang.String,boolean)>",
    "<com.google.inject.internal.asm.$ClassWriter: java.lang.String getCommonSuperClass(java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.Session: com.jcraft.jsch.KeyExchange receive_kexinit(com.jcraft.jsch.Buffer)>",
    "<org.apache.commons.lang.StringUtils: java.lang.String join(java.lang.Object[],char,int,int)>",
    "<com.google.inject.util.Node: java.lang.String toString()>",
    "<com.google.inject.internal.cglib.core.$EmitUtils: void push_object(com.google.inject.internal.cglib.core.$CodeEmitter,java.lang.Object)>",
    "<org.apache.hadoop.yarn.util.timeline.TimelineUtils: org.apache.hadoop.io.Text buildTimelineTokenService(org.apache.hadoop.conf.Configuration)>",
    "<com.google.inject.spi.Message: java.lang.String getSource()>",
    "<org.codehaus.jackson.map.ser.std.ToStringSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
    "<com.jcraft.jsch.KeyPairRSA: void generate(int)>",
    "<org.apache.commons.collections.ExtendedProperties: java.lang.String interpolateHelper(java.lang.String,java.util.List)>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String getString(java.lang.String)>",
    "<com.google.common.collect.SingletonImmutableSet: java.lang.String toString()>",
    "<org.apache.hadoop.yarn.util.Apps: void setEnvFromInputString(java.util.Map,java.lang.String,java.lang.String)>",
    "<org.apache.htrace.fasterxml.jackson.databind.ser.std.StdKeySerializer: void serialize(java.lang.Object,org.apache.htrace.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.fasterxml.jackson.databind.SerializerProvider)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ApplicationClientProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.logaggregation.LogCLIHelpers: int dumpAllContainersLogs(org.apache.hadoop.yarn.api.records.ApplicationId,java.lang.String,java.io.PrintStream)>",
    "<com.google.common.collect.SingletonImmutableMap: java.lang.String toString()>",
    "<com.jcraft.jsch.ChannelSftp: void put(java.io.InputStream,java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int)>",
    "<org.apache.hadoop.yarn.util.WindowsResourceCalculatorPlugin: java.lang.String getSystemInfoInfoFromShell()>",
    "<com.jcraft.jsch.ChannelSftp$1: void close()>",
    "<org.apache.hadoop.yarn.util.FSDownload: long unpack(java.io.File,java.io.File)>",
    "<org.mortbay.util.MultiMap: java.lang.String getString(java.lang.Object)>",
    "<org.apache.hadoop.yarn.util.ConverterUtils: org.apache.hadoop.security.token.Token convertFromYarn(org.apache.hadoop.yarn.api.records.Token,java.net.InetSocketAddress)>",
    "<com.google.inject.internal.MessageProcessor: java.lang.String getRootMessage(java.lang.Throwable)>",
    "<org.apache.zookeeper.server.quorum.QuorumCnxManager: boolean receiveConnection(java.net.Socket)>",
    "<org.mortbay.xml.XmlConfiguration: void configure(java.lang.Object,org.mortbay.xml.XmlParser$Node,int)>",
    "<org.apache.hadoop.yarn.webapp.WebApps$Builder: org.apache.hadoop.yarn.webapp.WebApp start(org.apache.hadoop.yarn.webapp.WebApp)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ApplicationHistoryProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.log4j.lf5.viewer.configure.MRUFileManager: java.lang.String[] getMRUFileList()>",
    "<org.apache.log4j.or.DefaultRenderer: java.lang.String doRender(java.lang.Object)>",
    "<org.apache.htrace.fasterxml.jackson.databind.node.POJONode: java.lang.String asText()>",
    "<org.mortbay.jetty.handler.ContextHandler: void setResourceBase(java.lang.String)>",
    "<org.apache.htrace.fasterxml.jackson.databind.deser.SettableAnyProperty$AnySetterReferring: void handleResolvedForwardReference(java.lang.Object,java.lang.Object)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl$TimelineURLConnectionFactory: java.net.HttpURLConnection getHttpURLConnection(java.net.URL)>",
    "<com.jcraft.jsch.ProxyHTTP: void connect(com.jcraft.jsch.SocketFactory,java.lang.String,int,int)>",
    "<org.apache.avro.generic.GenericData: int compare(java.lang.Object,java.lang.Object,org.apache.avro.Schema,boolean)>",
    "<org.mortbay.jetty.Request: javax.servlet.http.Cookie[] getCookies()>",
    "<com.jcraft.jsch.Channel: void connect(int)>",
    "<org.apache.log4j.or.sax.AttributesRenderer: java.lang.String doRender(java.lang.Object)>",
    "<org.apache.commons.configuration.XMLConfiguration$XMLNode: void updateElement(java.lang.Object)>",
    "<org.apache.hadoop.yarn.nodelabels.FileSystemNodeLabelsStore: java.lang.String getDefaultFSNodeLabelsRootDir()>",
    "<org.apache.hadoop.yarn.server.api.impl.pb.client.SCMAdminProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.conf.YarnConfiguration: void <clinit>()>",
    "<org.apache.hadoop.yarn.security.AMRMTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.log4j.DefaultThrowableRenderer: java.lang.String[] render(java.lang.Throwable)>",
    "<org.mortbay.resource.Resource: org.mortbay.resource.Resource newResource(java.net.URL,boolean)>",
    "<org.apache.hadoop.yarn.server.security.ApplicationACLsManager: void addApplication(org.apache.hadoop.yarn.api.records.ApplicationId,java.util.Map)>",
    "<com.google.common.util.concurrent.Futures: java.lang.Object newFromConstructor(java.lang.reflect.Constructor,java.lang.Throwable)>",
    "<org.apache.hadoop.yarn.webapp.log.AggregatedLogsBlock: void render(org.apache.hadoop.yarn.webapp.view.HtmlBlock$Block)>",
    "<org.mortbay.jetty.servlet.DefaultServlet: void init()>",
    "<org.jets3t.service.utils.ServiceUtils: java.lang.String join(java.util.List,java.lang.String)>",
    "<com.jcraft.jsch.ChannelSftp$1: void write(byte[],int,int)>",
    "<org.xerial.snappy.SnappyLoader: void loadSnappySystemProperties()>",
    "<org.apache.avro.generic.GenericData: void toString(java.lang.Object,java.lang.StringBuilder)>",
    "<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.Object)>",
    "<org.apache.htrace.fasterxml.jackson.databind.deser.std.StringDeserializer: java.lang.String deserialize(org.apache.htrace.fasterxml.jackson.core.JsonParser,org.apache.htrace.fasterxml.jackson.databind.DeserializationContext)>",
    "<org.codehaus.jackson.map.ser.std.StdKeySerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
    "<com.jcraft.jsch.ChannelSftp: void put(java.lang.String,java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int)>",
    "<org.jets3t.service.utils.RestUtils: java.lang.String makeServiceCanonicalString(java.lang.String,java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.util.List)>",
    "<org.apache.ignite.yarn.IgniteYarnClient: void main(java.lang.String[])>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ApplicationMasterProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.security.ContainerTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.commons.logging.LogConfigurationException: void <init>(java.lang.Throwable)>",
    "<org.apache.commons.cli.HelpFormatter: java.lang.StringBuffer renderOptions(java.lang.StringBuffer,int,org.apache.commons.cli.Options,int,int)>",
    "<org.apache.hadoop.yarn.logaggregation.LogCLIHelpers: int dumpAContainersLogs(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.Session: void connect(int)>",
    "<org.apache.hadoop.yarn.util.YarnVersionInfo: java.lang.String getBuildVersion()>",
    "<org.apache.log4j.helpers.PatternParser$MDCPatternConverter: java.lang.String convert(org.apache.log4j.spi.LoggingEvent)>",
    "<com.google.common.base.Functions$ToStringFunction: java.lang.String apply(java.lang.Object)>",
    "<org.mortbay.jetty.security.SslSocketConnector: java.net.ServerSocket newServerSocket(java.lang.String,int,int)>",
    "<org.apache.hadoop.yarn.webapp.util.WebAppUtils: java.util.List getProxyHostsAndPortsForAmFilter(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: void serviceInit(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.commons.configuration.AbstractConfiguration$1: java.lang.String lookup(java.lang.String)>",
    "<org.apache.hadoop.yarn.security.AdminACLsManager: void <init>(org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.Session: void initInflater(java.lang.String)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ClientSCMProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.Session: void updateKeys(com.jcraft.jsch.KeyExchange)>",
    "<org.apache.commons.configuration.XMLConfiguration$XMLBuilderVisitor: void updateAttribute(org.apache.commons.configuration.HierarchicalConfiguration$Node,org.w3c.dom.Element,java.lang.String,char)>",
    "<org.apache.hadoop.yarn.client.AHSProxy: java.lang.Object getProxy(org.apache.hadoop.conf.Configuration,java.lang.Class,java.net.InetSocketAddress)>",
    "<org.apache.hadoop.yarn.conf.HAUtil: java.util.Collection getRMHAIds(org.apache.hadoop.conf.Configuration)>",
    "<org.mortbay.xml.XmlConfiguration: void set(java.lang.Object,org.mortbay.xml.XmlParser$Node)>",
    "<org.apache.log4j.or.ThreadGroupRenderer: java.lang.String doRender(java.lang.Object)>",
    "<com.jcraft.jsch.KeyPairDSA: void generate(int)>",
    "<org.apache.htrace.commons.logging.LogConfigurationException: void <init>(java.lang.Throwable)>",
    "<org.apache.hadoop.yarn.security.client.RMDelegationTokenIdentifier$Renewer: org.apache.hadoop.yarn.api.ApplicationClientProtocol getRmClient(org.apache.hadoop.security.token.Token,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.util.RMHAUtils: java.util.List getRMHAWebappAddresses(org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<com.google.inject.internal.Initializer$InjectableReference: java.lang.String toString()>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogValue: java.io.FileInputStream secureOpenFile(java.io.File)>",
    "<org.apache.commons.configuration.AbstractConfiguration: java.lang.String interpolate(java.lang.String)>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogReader: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)>",
    "<org.apache.hadoop.yarn.server.security.ApplicationACLsManager: void <clinit>()>",
    "<org.apache.commons.lang.ObjectUtils: java.lang.String toString(java.lang.Object)>",
    "<net.sf.cglib.core.EmitUtils: void push_object(net.sf.cglib.core.CodeEmitter,java.lang.Object)>",
    "<com.jcraft.jsch.ProxySOCKS4: void connect(com.jcraft.jsch.SocketFactory,java.lang.String,int,int)>",
    "<org.apache.hadoop.yarn.server.api.impl.pb.client.ResourceManagerAdministrationProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.client.ClientRMProxy: void setAMRMTokenService(org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.KeyPair: com.jcraft.jsch.KeyPair load(com.jcraft.jsch.JSch,java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.ProxySOCKS5: void connect(com.jcraft.jsch.SocketFactory,java.lang.String,int,int)>",
    "<org.apache.directory.api.util.OsgiUtils: java.lang.String getBundleExports(java.io.File)>",
    "<org.codehaus.jettison.json.JSONArray: java.lang.String getString(int)>",
    "<com.google.inject.internal.ProcessedBindingData: void initializeBindings()>",
    "<org.jets3t.service.utils.ServiceUtils: java.util.Map cleanRestMetadataMap(java.util.Map,java.lang.String,java.lang.String)>",
    "<org.apache.commons.lang.exception.ExceptionUtils: java.lang.String[] getRootCauseStackTrace(java.lang.Throwable)>",
    "<org.apache.hadoop.yarn.util.WindowsBasedProcessTree: java.lang.String getAllProcessInfoFromShell()>",
    "<javax.xml.bind.ContextFinder: java.util.Properties loadJAXBProperties(java.lang.ClassLoader,java.lang.String)>",
    "<com.jcraft.jsch.IdentityFile: boolean setPassphrase(byte[])>",
    "<org.mortbay.jetty.handler.DebugHandler: void handle(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,int)>",
    "<com.jcraft.jsch.KnownHosts: void setKnownHosts(java.io.InputStream)>",
    "<org.mortbay.xml.XmlConfiguration: java.lang.Object value(java.lang.Object,org.mortbay.xml.XmlParser$Node)>",
    "<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
    "<org.apache.hadoop.yarn.util.RMHAUtils: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState getHAState(org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<org.apache.commons.lang.StringUtils: java.lang.String join(java.lang.Object[],java.lang.String,int,int)>",
    "<com.jcraft.jsch.Session: void initDeflater(java.lang.String)>",
    "<com.jcraft.jsch.Util: java.net.Socket createSocket(java.lang.String,int,int)>",
    "<org.apache.hadoop.yarn.util.YarnVersionInfo: void <init>()>",
    "<com.google.common.collect.SingletonImmutableList: java.lang.String toString()>",
    "<org.codehaus.jettison.json.JSONObject: java.io.Writer write(java.io.Writer)>",
    "<org.mortbay.jetty.Request: void extractParameters()>",
    "<com.jcraft.jsch.ChannelSftp: void _put(java.io.InputStream,java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int)>",
    "<org.codehaus.jettison.mapped.MappedXMLStreamReader: void <init>(org.codehaus.jettison.json.JSONObject,org.codehaus.jettison.mapped.MappedNamespaceConvention)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: long renewDelegationToken(org.apache.hadoop.security.token.Token)>",
    "<org.apache.hadoop.yarn.webapp.view.HtmlBlock: org.apache.hadoop.security.UserGroupInformation getCallerUGI()>",
    "<org.apache.hadoop.yarn.util.RMHAUtils: java.lang.String findActiveRMHAId(org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<org.apache.commons.lang.text.StrLookup$MapStrLookup: java.lang.String lookup(java.lang.String)>",
    "<com.google.inject.spi.Message: java.lang.Object writeReplace()>",
    "<org.apache.hadoop.yarn.webapp.util.WebAppUtils: java.lang.String getResolvedAddress(java.net.InetSocketAddress)>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogWriter$1: org.apache.hadoop.fs.FSDataOutputStream run()>",
    "<com.sun.xml.bind.api.impl.NameConverter$Standard: java.lang.String combine(java.util.List,char)>",
    "<com.jcraft.jsch.ChannelSftp: void start()>",
    "<org.mortbay.jetty.servlet.ServletHandler$Chain: java.lang.String toString()>",
    "<org.jets3t.service.utils.gatekeeper.GatekeeperMessage: void encodeProperty(java.util.Properties,java.lang.String,java.lang.Object)>",
    "<org.apache.hadoop.yarn.conf.YarnConfiguration: java.net.InetSocketAddress getSocketAddr(java.lang.String,java.lang.String,int)>",
    "<com.google.common.util.concurrent.AbstractListeningExecutorService: java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit)>",
    "<org.apache.hadoop.yarn.util.WindowsBasedProcessTree: boolean isAvailable()>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: void cancelDelegationToken(org.apache.hadoop.security.token.Token)>",
    "<org.jets3t.service.model.StorageObject: long getContentLength()>",
    "<org.apache.jute.compiler.generated.Rcc: void main(java.lang.String[])>",
    "<org.apache.hadoop.yarn.util.FSDownload: org.apache.hadoop.fs.Path copy(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)>",
    "<org.apache.htrace.fasterxml.jackson.databind.util.TokenBuffer$Parser: java.lang.String getText()>",
    "<org.apache.avro.generic.GenericData$Array: java.lang.String toString()>",
    "<com.google.inject.internal.util.$ImmutableSet$SingletonImmutableSet: java.lang.String toString()>",
    "<com.jcraft.jsch.IdentityFile: com.jcraft.jsch.IdentityFile newInstance(java.lang.String,java.lang.String,com.jcraft.jsch.JSch)>",
    "<org.apache.commons.io.filefilter.AndFileFilter: java.lang.String toString()>",
    "<org.apache.ignite.yarn.IgniteYarnClient: void setupAppMasterEnv(java.util.Map,org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<org.apache.zookeeper.server.quorum.QuorumPeerConfig: void parseProperties(java.util.Properties)>",
    "<org.codehaus.jackson.map.ser.std.RawSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
    "<org.mortbay.jetty.security.HashUserRealm: void loadConfig()>",
    "<com.jcraft.jsch.Channel$1: void flush()>",
    "<org.apache.htrace.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,org.apache.htrace.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.fasterxml.jackson.databind.SerializerProvider)>",
    "<org.apache.hadoop.yarn.client.RMProxy: java.lang.Object getProxy(org.apache.hadoop.conf.Configuration,java.lang.Class,java.net.InetSocketAddress)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: void putTimelineDataInJSONFile(java.lang.String,java.lang.String)>",
    "<org.apache.hadoop.yarn.conf.HAUtil: boolean isHAEnabled(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ContainerManagementProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.IdentityFile: void <init>(java.lang.String,byte[],byte[],com.jcraft.jsch.JSch)>",
    "<com.jcraft.jsch.Session: void setTimeout(int)>",
    "<org.apache.log4j.jmx.Agent: void startServer(java.lang.Object)>",
    "<org.apache.commons.beanutils.BeanComparator: int compare(java.lang.Object,java.lang.Object)>",
    "<org.mortbay.io.bio.StringEndPoint: void setInput(java.lang.String)>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String toString()>",
    "<org.apache.hadoop.yarn.security.NMTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.ignite.yarn.ApplicationMaster: void init()>",
    "<org.apache.hadoop.yarn.util.ProcfsBasedProcessTree: void <clinit>()>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogWriter: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.security.UserGroupInformation)>",
    "<org.mortbay.jetty.security.BasicAuthenticator: java.security.Principal authenticate(org.mortbay.jetty.security.UserRealm,java.lang.String,org.mortbay.jetty.Request,org.mortbay.jetty.Response)>",
    "<org.mortbay.util.LazyList: java.lang.String[] toStringArray(java.lang.Object)>",
    "<com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)>",
    "<com.google.inject.internal.util.$ImmutableSet: java.lang.String toString()>",
    "<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String valueToString(java.lang.Object)>",
    "<org.apache.htrace.fasterxml.jackson.core.JsonLocation: java.lang.String toString()>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>",
    "<org.mortbay.xml.XmlParser: void setValidating(boolean)>",
    "<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>",
    "<com.sun.jersey.api.uri.UriTemplate: java.lang.StringBuilder createURIComponent(com.sun.jersey.api.uri.UriComponent$Type,java.lang.String,java.util.Map,boolean,java.lang.StringBuilder)>",
    "<org.apache.commons.lang.builder.ReflectionToStringBuilder: java.lang.String[] toNoNullStringArray(java.lang.Object[])>",
    "<org.apache.htrace.fasterxml.jackson.databind.util.TokenBuffer$Parser: org.apache.htrace.fasterxml.jackson.core.JsonToken nextToken()>",
    "<org.mortbay.jetty.servlet.Invoker: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "<org.apache.hadoop.yarn.conf.HAUtil: boolean isAutomaticFailoverEnabled(org.apache.hadoop.conf.Configuration)>",
    "<org.objectweb.asm.ClassWriter: java.lang.String getCommonSuperClass(java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.Session: void setPortForwarding(java.lang.String,int)>",
    "<org.apache.hadoop.yarn.client.ClientRMProxy: org.apache.hadoop.io.Text getTokenService(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String,int)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: org.apache.hadoop.security.authentication.client.ConnectionConfigurator newSslConnConfigurator(int,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.htrace.fasterxml.jackson.databind.ser.std.ToStringSerializer: void serialize(java.lang.Object,org.apache.htrace.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.fasterxml.jackson.databind.SerializerProvider)>",
    "<javax.xml.bind.JAXBException: java.lang.String toString()>",
    "<org.mortbay.log.StdErrLog: void format(java.lang.Throwable)>",
    "<org.apache.commons.configuration.XMLConfiguration: void handleDelimiters(org.apache.commons.configuration.HierarchicalConfiguration$Node,org.apache.commons.configuration.HierarchicalConfiguration$Node,boolean)>",
    "<org.apache.avro.generic.GenericData: int hashCode(java.lang.Object,org.apache.avro.Schema)>",
    "<org.apache.hadoop.yarn.security.ConfiguredYarnAuthorizer: void init(org.apache.hadoop.conf.Configuration)>"
  ],
  "2.4.0": [
    "<org.mortbay.io.bio.StringEndPoint: java.lang.String getOutput()>",
    "<org.apache.hadoop.yarn.security.client.ClientToAMTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.hadoop.yarn.conf.HAUtil: java.lang.String getRMHAId(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.log4j.lf5.viewer.LogTable$LogTableListSelectionListener: void valueChanged(javax.swing.event.ListSelectionEvent)>",
    "<org.mortbay.jetty.handler.ResourceHandler: void setResourceBase(java.lang.String)>",
    "<org.mortbay.util.UrlEncoded: java.lang.String encode(org.mortbay.util.MultiMap,java.lang.String,boolean)>",
    "<com.google.inject.internal.asm.$ClassWriter: java.lang.String getCommonSuperClass(java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.Session: com.jcraft.jsch.KeyExchange receive_kexinit(com.jcraft.jsch.Buffer)>",
    "<org.apache.commons.lang.StringUtils: java.lang.String join(java.lang.Object[],char,int,int)>",
    "<com.google.inject.util.Node: java.lang.String toString()>",
    "<com.google.inject.internal.cglib.core.$EmitUtils: void push_object(com.google.inject.internal.cglib.core.$CodeEmitter,java.lang.Object)>",
    "<org.apache.hadoop.yarn.util.timeline.TimelineUtils: org.apache.hadoop.io.Text buildTimelineTokenService(org.apache.hadoop.conf.Configuration)>",
    "<com.google.inject.spi.Message: java.lang.String getSource()>",
    "<org.codehaus.jackson.map.ser.std.ToStringSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
    "<com.jcraft.jsch.KeyPairRSA: void generate(int)>",
    "<org.apache.commons.collections.ExtendedProperties: java.lang.String interpolateHelper(java.lang.String,java.util.List)>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String getString(java.lang.String)>",
    "<com.google.common.collect.SingletonImmutableSet: java.lang.String toString()>",
    "<org.apache.hadoop.yarn.util.Apps: void setEnvFromInputString(java.util.Map,java.lang.String,java.lang.String)>",
    "<org.apache.htrace.fasterxml.jackson.databind.ser.std.StdKeySerializer: void serialize(java.lang.Object,org.apache.htrace.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.fasterxml.jackson.databind.SerializerProvider)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ApplicationClientProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.logaggregation.LogCLIHelpers: int dumpAllContainersLogs(org.apache.hadoop.yarn.api.records.ApplicationId,java.lang.String,java.io.PrintStream)>",
    "<com.google.common.collect.SingletonImmutableMap: java.lang.String toString()>",
    "<com.jcraft.jsch.ChannelSftp: void put(java.io.InputStream,java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int)>",
    "<org.apache.hadoop.yarn.util.WindowsResourceCalculatorPlugin: java.lang.String getSystemInfoInfoFromShell()>",
    "<com.jcraft.jsch.ChannelSftp$1: void close()>",
    "<org.apache.hadoop.yarn.util.FSDownload: long unpack(java.io.File,java.io.File)>",
    "<org.mortbay.util.MultiMap: java.lang.String getString(java.lang.Object)>",
    "<org.apache.hadoop.yarn.util.ConverterUtils: org.apache.hadoop.security.token.Token convertFromYarn(org.apache.hadoop.yarn.api.records.Token,java.net.InetSocketAddress)>",
    "<com.google.inject.internal.MessageProcessor: java.lang.String getRootMessage(java.lang.Throwable)>",
    "<org.apache.zookeeper.server.quorum.QuorumCnxManager: boolean receiveConnection(java.net.Socket)>",
    "<org.mortbay.xml.XmlConfiguration: void configure(java.lang.Object,org.mortbay.xml.XmlParser$Node,int)>",
    "<org.apache.hadoop.yarn.webapp.WebApps$Builder: org.apache.hadoop.yarn.webapp.WebApp start(org.apache.hadoop.yarn.webapp.WebApp)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ApplicationHistoryProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.log4j.lf5.viewer.configure.MRUFileManager: java.lang.String[] getMRUFileList()>",
    "<org.apache.log4j.or.DefaultRenderer: java.lang.String doRender(java.lang.Object)>",
    "<org.apache.htrace.fasterxml.jackson.databind.node.POJONode: java.lang.String asText()>",
    "<org.mortbay.jetty.handler.ContextHandler: void setResourceBase(java.lang.String)>",
    "<org.apache.htrace.fasterxml.jackson.databind.deser.SettableAnyProperty$AnySetterReferring: void handleResolvedForwardReference(java.lang.Object,java.lang.Object)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl$TimelineURLConnectionFactory: java.net.HttpURLConnection getHttpURLConnection(java.net.URL)>",
    "<com.jcraft.jsch.ProxyHTTP: void connect(com.jcraft.jsch.SocketFactory,java.lang.String,int,int)>",
    "<org.apache.avro.generic.GenericData: int compare(java.lang.Object,java.lang.Object,org.apache.avro.Schema,boolean)>",
    "<org.mortbay.jetty.Request: javax.servlet.http.Cookie[] getCookies()>",
    "<com.jcraft.jsch.Channel: void connect(int)>",
    "<org.apache.log4j.or.sax.AttributesRenderer: java.lang.String doRender(java.lang.Object)>",
    "<org.apache.commons.configuration.XMLConfiguration$XMLNode: void updateElement(java.lang.Object)>",
    "<org.apache.hadoop.yarn.nodelabels.FileSystemNodeLabelsStore: java.lang.String getDefaultFSNodeLabelsRootDir()>",
    "<org.apache.hadoop.yarn.server.api.impl.pb.client.SCMAdminProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.conf.YarnConfiguration: void <clinit>()>",
    "<org.apache.hadoop.yarn.security.AMRMTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.log4j.DefaultThrowableRenderer: java.lang.String[] render(java.lang.Throwable)>",
    "<org.mortbay.resource.Resource: org.mortbay.resource.Resource newResource(java.net.URL,boolean)>",
    "<org.apache.hadoop.yarn.server.security.ApplicationACLsManager: void addApplication(org.apache.hadoop.yarn.api.records.ApplicationId,java.util.Map)>",
    "<com.google.common.util.concurrent.Futures: java.lang.Object newFromConstructor(java.lang.reflect.Constructor,java.lang.Throwable)>",
    "<org.apache.hadoop.yarn.webapp.log.AggregatedLogsBlock: void render(org.apache.hadoop.yarn.webapp.view.HtmlBlock$Block)>",
    "<org.mortbay.jetty.servlet.DefaultServlet: void init()>",
    "<org.jets3t.service.utils.ServiceUtils: java.lang.String join(java.util.List,java.lang.String)>",
    "<com.jcraft.jsch.ChannelSftp$1: void write(byte[],int,int)>",
    "<org.xerial.snappy.SnappyLoader: void loadSnappySystemProperties()>",
    "<org.apache.avro.generic.GenericData: void toString(java.lang.Object,java.lang.StringBuilder)>",
    "<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.Object)>",
    "<org.apache.htrace.fasterxml.jackson.databind.deser.std.StringDeserializer: java.lang.String deserialize(org.apache.htrace.fasterxml.jackson.core.JsonParser,org.apache.htrace.fasterxml.jackson.databind.DeserializationContext)>",
    "<org.codehaus.jackson.map.ser.std.StdKeySerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
    "<com.jcraft.jsch.ChannelSftp: void put(java.lang.String,java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int)>",
    "<org.jets3t.service.utils.RestUtils: java.lang.String makeServiceCanonicalString(java.lang.String,java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.util.List)>",
    "<org.apache.ignite.yarn.IgniteYarnClient: void main(java.lang.String[])>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ApplicationMasterProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.security.ContainerTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.commons.logging.LogConfigurationException: void <init>(java.lang.Throwable)>",
    "<org.apache.commons.cli.HelpFormatter: java.lang.StringBuffer renderOptions(java.lang.StringBuffer,int,org.apache.commons.cli.Options,int,int)>",
    "<org.apache.hadoop.yarn.logaggregation.LogCLIHelpers: int dumpAContainersLogs(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.Session: void connect(int)>",
    "<org.apache.hadoop.yarn.util.YarnVersionInfo: java.lang.String getBuildVersion()>",
    "<org.apache.log4j.helpers.PatternParser$MDCPatternConverter: java.lang.String convert(org.apache.log4j.spi.LoggingEvent)>",
    "<com.google.common.base.Functions$ToStringFunction: java.lang.String apply(java.lang.Object)>",
    "<org.mortbay.jetty.security.SslSocketConnector: java.net.ServerSocket newServerSocket(java.lang.String,int,int)>",
    "<org.apache.hadoop.yarn.webapp.util.WebAppUtils: java.util.List getProxyHostsAndPortsForAmFilter(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: void serviceInit(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.commons.configuration.AbstractConfiguration$1: java.lang.String lookup(java.lang.String)>",
    "<org.apache.hadoop.yarn.security.AdminACLsManager: void <init>(org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.Session: void initInflater(java.lang.String)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ClientSCMProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.Session: void updateKeys(com.jcraft.jsch.KeyExchange)>",
    "<org.apache.commons.configuration.XMLConfiguration$XMLBuilderVisitor: void updateAttribute(org.apache.commons.configuration.HierarchicalConfiguration$Node,org.w3c.dom.Element,java.lang.String,char)>",
    "<org.apache.hadoop.yarn.client.AHSProxy: java.lang.Object getProxy(org.apache.hadoop.conf.Configuration,java.lang.Class,java.net.InetSocketAddress)>",
    "<org.apache.hadoop.yarn.conf.HAUtil: java.util.Collection getRMHAIds(org.apache.hadoop.conf.Configuration)>",
    "<org.mortbay.xml.XmlConfiguration: void set(java.lang.Object,org.mortbay.xml.XmlParser$Node)>",
    "<org.apache.log4j.or.ThreadGroupRenderer: java.lang.String doRender(java.lang.Object)>",
    "<com.jcraft.jsch.KeyPairDSA: void generate(int)>",
    "<org.apache.htrace.commons.logging.LogConfigurationException: void <init>(java.lang.Throwable)>",
    "<org.apache.hadoop.yarn.security.client.RMDelegationTokenIdentifier$Renewer: org.apache.hadoop.yarn.api.ApplicationClientProtocol getRmClient(org.apache.hadoop.security.token.Token,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.util.RMHAUtils: java.util.List getRMHAWebappAddresses(org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<com.google.inject.internal.Initializer$InjectableReference: java.lang.String toString()>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogValue: java.io.FileInputStream secureOpenFile(java.io.File)>",
    "<org.apache.commons.configuration.AbstractConfiguration: java.lang.String interpolate(java.lang.String)>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogReader: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)>",
    "<org.apache.hadoop.yarn.server.security.ApplicationACLsManager: void <clinit>()>",
    "<org.apache.commons.lang.ObjectUtils: java.lang.String toString(java.lang.Object)>",
    "<net.sf.cglib.core.EmitUtils: void push_object(net.sf.cglib.core.CodeEmitter,java.lang.Object)>",
    "<com.jcraft.jsch.ProxySOCKS4: void connect(com.jcraft.jsch.SocketFactory,java.lang.String,int,int)>",
    "<org.apache.hadoop.yarn.server.api.impl.pb.client.ResourceManagerAdministrationProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.client.ClientRMProxy: void setAMRMTokenService(org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.KeyPair: com.jcraft.jsch.KeyPair load(com.jcraft.jsch.JSch,java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.ProxySOCKS5: void connect(com.jcraft.jsch.SocketFactory,java.lang.String,int,int)>",
    "<org.apache.directory.api.util.OsgiUtils: java.lang.String getBundleExports(java.io.File)>",
    "<org.codehaus.jettison.json.JSONArray: java.lang.String getString(int)>",
    "<com.google.inject.internal.ProcessedBindingData: void initializeBindings()>",
    "<org.jets3t.service.utils.ServiceUtils: java.util.Map cleanRestMetadataMap(java.util.Map,java.lang.String,java.lang.String)>",
    "<org.apache.commons.lang.exception.ExceptionUtils: java.lang.String[] getRootCauseStackTrace(java.lang.Throwable)>",
    "<org.apache.hadoop.yarn.util.WindowsBasedProcessTree: java.lang.String getAllProcessInfoFromShell()>",
    "<javax.xml.bind.ContextFinder: java.util.Properties loadJAXBProperties(java.lang.ClassLoader,java.lang.String)>",
    "<com.jcraft.jsch.IdentityFile: boolean setPassphrase(byte[])>",
    "<org.mortbay.jetty.handler.DebugHandler: void handle(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,int)>",
    "<com.jcraft.jsch.KnownHosts: void setKnownHosts(java.io.InputStream)>",
    "<org.mortbay.xml.XmlConfiguration: java.lang.Object value(java.lang.Object,org.mortbay.xml.XmlParser$Node)>",
    "<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
    "<org.apache.hadoop.yarn.util.RMHAUtils: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState getHAState(org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<org.apache.commons.lang.StringUtils: java.lang.String join(java.lang.Object[],java.lang.String,int,int)>",
    "<com.jcraft.jsch.Session: void initDeflater(java.lang.String)>",
    "<com.jcraft.jsch.Util: java.net.Socket createSocket(java.lang.String,int,int)>",
    "<org.apache.hadoop.yarn.util.YarnVersionInfo: void <init>()>",
    "<com.google.common.collect.SingletonImmutableList: java.lang.String toString()>",
    "<org.codehaus.jettison.json.JSONObject: java.io.Writer write(java.io.Writer)>",
    "<org.mortbay.jetty.Request: void extractParameters()>",
    "<com.jcraft.jsch.ChannelSftp: void _put(java.io.InputStream,java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int)>",
    "<org.codehaus.jettison.mapped.MappedXMLStreamReader: void <init>(org.codehaus.jettison.json.JSONObject,org.codehaus.jettison.mapped.MappedNamespaceConvention)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: long renewDelegationToken(org.apache.hadoop.security.token.Token)>",
    "<org.apache.hadoop.yarn.webapp.view.HtmlBlock: org.apache.hadoop.security.UserGroupInformation getCallerUGI()>",
    "<org.apache.hadoop.yarn.util.RMHAUtils: java.lang.String findActiveRMHAId(org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<org.apache.commons.lang.text.StrLookup$MapStrLookup: java.lang.String lookup(java.lang.String)>",
    "<com.google.inject.spi.Message: java.lang.Object writeReplace()>",
    "<org.apache.hadoop.yarn.webapp.util.WebAppUtils: java.lang.String getResolvedAddress(java.net.InetSocketAddress)>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogWriter$1: org.apache.hadoop.fs.FSDataOutputStream run()>",
    "<com.sun.xml.bind.api.impl.NameConverter$Standard: java.lang.String combine(java.util.List,char)>",
    "<com.jcraft.jsch.ChannelSftp: void start()>",
    "<org.mortbay.jetty.servlet.ServletHandler$Chain: java.lang.String toString()>",
    "<org.jets3t.service.utils.gatekeeper.GatekeeperMessage: void encodeProperty(java.util.Properties,java.lang.String,java.lang.Object)>",
    "<org.apache.hadoop.yarn.conf.YarnConfiguration: java.net.InetSocketAddress getSocketAddr(java.lang.String,java.lang.String,int)>",
    "<com.google.common.util.concurrent.AbstractListeningExecutorService: java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit)>",
    "<org.apache.hadoop.yarn.util.WindowsBasedProcessTree: boolean isAvailable()>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: void cancelDelegationToken(org.apache.hadoop.security.token.Token)>",
    "<org.jets3t.service.model.StorageObject: long getContentLength()>",
    "<org.apache.jute.compiler.generated.Rcc: void main(java.lang.String[])>",
    "<org.apache.hadoop.yarn.util.FSDownload: org.apache.hadoop.fs.Path copy(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)>",
    "<org.apache.htrace.fasterxml.jackson.databind.util.TokenBuffer$Parser: java.lang.String getText()>",
    "<org.apache.avro.generic.GenericData$Array: java.lang.String toString()>",
    "<com.google.inject.internal.util.$ImmutableSet$SingletonImmutableSet: java.lang.String toString()>",
    "<com.jcraft.jsch.IdentityFile: com.jcraft.jsch.IdentityFile newInstance(java.lang.String,java.lang.String,com.jcraft.jsch.JSch)>",
    "<org.apache.commons.io.filefilter.AndFileFilter: java.lang.String toString()>",
    "<org.apache.ignite.yarn.IgniteYarnClient: void setupAppMasterEnv(java.util.Map,org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<org.apache.zookeeper.server.quorum.QuorumPeerConfig: void parseProperties(java.util.Properties)>",
    "<org.codehaus.jackson.map.ser.std.RawSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
    "<org.mortbay.jetty.security.HashUserRealm: void loadConfig()>",
    "<com.jcraft.jsch.Channel$1: void flush()>",
    "<org.apache.htrace.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,org.apache.htrace.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.fasterxml.jackson.databind.SerializerProvider)>",
    "<org.apache.hadoop.yarn.client.RMProxy: java.lang.Object getProxy(org.apache.hadoop.conf.Configuration,java.lang.Class,java.net.InetSocketAddress)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: void putTimelineDataInJSONFile(java.lang.String,java.lang.String)>",
    "<org.apache.hadoop.yarn.conf.HAUtil: boolean isHAEnabled(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ContainerManagementProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.IdentityFile: void <init>(java.lang.String,byte[],byte[],com.jcraft.jsch.JSch)>",
    "<com.jcraft.jsch.Session: void setTimeout(int)>",
    "<org.apache.log4j.jmx.Agent: void startServer(java.lang.Object)>",
    "<org.apache.commons.beanutils.BeanComparator: int compare(java.lang.Object,java.lang.Object)>",
    "<org.mortbay.io.bio.StringEndPoint: void setInput(java.lang.String)>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String toString()>",
    "<org.apache.hadoop.yarn.security.NMTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.ignite.yarn.ApplicationMaster: void init()>",
    "<org.apache.hadoop.yarn.util.ProcfsBasedProcessTree: void <clinit>()>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogWriter: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.security.UserGroupInformation)>",
    "<org.mortbay.jetty.security.BasicAuthenticator: java.security.Principal authenticate(org.mortbay.jetty.security.UserRealm,java.lang.String,org.mortbay.jetty.Request,org.mortbay.jetty.Response)>",
    "<org.mortbay.util.LazyList: java.lang.String[] toStringArray(java.lang.Object)>",
    "<com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)>",
    "<com.google.inject.internal.util.$ImmutableSet: java.lang.String toString()>",
    "<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
    "<org.apache.ignite.yarn.ApplicationMaster: void onContainersAllocated(java.util.List)>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String valueToString(java.lang.Object)>",
    "<org.apache.htrace.fasterxml.jackson.core.JsonLocation: java.lang.String toString()>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>",
    "<org.mortbay.xml.XmlParser: void setValidating(boolean)>",
    "<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>",
    "<com.sun.jersey.api.uri.UriTemplate: java.lang.StringBuilder createURIComponent(com.sun.jersey.api.uri.UriComponent$Type,java.lang.String,java.util.Map,boolean,java.lang.StringBuilder)>",
    "<org.apache.commons.lang.builder.ReflectionToStringBuilder: java.lang.String[] toNoNullStringArray(java.lang.Object[])>",
    "<org.apache.htrace.fasterxml.jackson.databind.util.TokenBuffer$Parser: org.apache.htrace.fasterxml.jackson.core.JsonToken nextToken()>",
    "<org.mortbay.jetty.servlet.Invoker: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "<org.apache.hadoop.yarn.conf.HAUtil: boolean isAutomaticFailoverEnabled(org.apache.hadoop.conf.Configuration)>",
    "<org.objectweb.asm.ClassWriter: java.lang.String getCommonSuperClass(java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.Session: void setPortForwarding(java.lang.String,int)>",
    "<org.apache.hadoop.yarn.client.ClientRMProxy: org.apache.hadoop.io.Text getTokenService(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String,int)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: org.apache.hadoop.security.authentication.client.ConnectionConfigurator newSslConnConfigurator(int,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.htrace.fasterxml.jackson.databind.ser.std.ToStringSerializer: void serialize(java.lang.Object,org.apache.htrace.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.fasterxml.jackson.databind.SerializerProvider)>",
    "<javax.xml.bind.JAXBException: java.lang.String toString()>",
    "<org.mortbay.log.StdErrLog: void format(java.lang.Throwable)>",
    "<org.apache.commons.configuration.XMLConfiguration: void handleDelimiters(org.apache.commons.configuration.HierarchicalConfiguration$Node,org.apache.commons.configuration.HierarchicalConfiguration$Node,boolean)>",
    "<org.apache.avro.generic.GenericData: int hashCode(java.lang.Object,org.apache.avro.Schema)>",
    "<org.apache.hadoop.yarn.security.ConfiguredYarnAuthorizer: void init(org.apache.hadoop.conf.Configuration)>"
  ],
  "1.4.0": [
    "<org.mortbay.io.bio.StringEndPoint: java.lang.String getOutput()>",
    "<org.apache.hadoop.yarn.security.client.ClientToAMTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.hadoop.yarn.conf.HAUtil: java.lang.String getRMHAId(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.log4j.lf5.viewer.LogTable$LogTableListSelectionListener: void valueChanged(javax.swing.event.ListSelectionEvent)>",
    "<org.mortbay.jetty.handler.ResourceHandler: void setResourceBase(java.lang.String)>",
    "<org.mortbay.util.UrlEncoded: java.lang.String encode(org.mortbay.util.MultiMap,java.lang.String,boolean)>",
    "<com.google.inject.internal.asm.$ClassWriter: java.lang.String getCommonSuperClass(java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.Session: com.jcraft.jsch.KeyExchange receive_kexinit(com.jcraft.jsch.Buffer)>",
    "<org.apache.commons.lang.StringUtils: java.lang.String join(java.lang.Object[],char,int,int)>",
    "<com.google.inject.util.Node: java.lang.String toString()>",
    "<com.google.inject.internal.cglib.core.$EmitUtils: void push_object(com.google.inject.internal.cglib.core.$CodeEmitter,java.lang.Object)>",
    "<org.apache.hadoop.yarn.util.timeline.TimelineUtils: org.apache.hadoop.io.Text buildTimelineTokenService(org.apache.hadoop.conf.Configuration)>",
    "<com.google.inject.spi.Message: java.lang.String getSource()>",
    "<org.codehaus.jackson.map.ser.std.ToStringSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
    "<com.jcraft.jsch.KeyPairRSA: void generate(int)>",
    "<org.apache.commons.collections.ExtendedProperties: java.lang.String interpolateHelper(java.lang.String,java.util.List)>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String getString(java.lang.String)>",
    "<com.google.common.collect.SingletonImmutableSet: java.lang.String toString()>",
    "<org.apache.hadoop.yarn.util.Apps: void setEnvFromInputString(java.util.Map,java.lang.String,java.lang.String)>",
    "<org.apache.htrace.fasterxml.jackson.databind.ser.std.StdKeySerializer: void serialize(java.lang.Object,org.apache.htrace.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.fasterxml.jackson.databind.SerializerProvider)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ApplicationClientProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.logaggregation.LogCLIHelpers: int dumpAllContainersLogs(org.apache.hadoop.yarn.api.records.ApplicationId,java.lang.String,java.io.PrintStream)>",
    "<com.google.common.collect.SingletonImmutableMap: java.lang.String toString()>",
    "<com.jcraft.jsch.ChannelSftp: void put(java.io.InputStream,java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int)>",
    "<org.apache.hadoop.yarn.util.WindowsResourceCalculatorPlugin: java.lang.String getSystemInfoInfoFromShell()>",
    "<com.jcraft.jsch.ChannelSftp$1: void close()>",
    "<org.apache.hadoop.yarn.util.FSDownload: long unpack(java.io.File,java.io.File)>",
    "<org.mortbay.util.MultiMap: java.lang.String getString(java.lang.Object)>",
    "<org.apache.hadoop.yarn.util.ConverterUtils: org.apache.hadoop.security.token.Token convertFromYarn(org.apache.hadoop.yarn.api.records.Token,java.net.InetSocketAddress)>",
    "<com.google.inject.internal.MessageProcessor: java.lang.String getRootMessage(java.lang.Throwable)>",
    "<org.apache.zookeeper.server.quorum.QuorumCnxManager: boolean receiveConnection(java.net.Socket)>",
    "<org.mortbay.xml.XmlConfiguration: void configure(java.lang.Object,org.mortbay.xml.XmlParser$Node,int)>",
    "<org.apache.hadoop.yarn.webapp.WebApps$Builder: org.apache.hadoop.yarn.webapp.WebApp start(org.apache.hadoop.yarn.webapp.WebApp)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ApplicationHistoryProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.log4j.lf5.viewer.configure.MRUFileManager: java.lang.String[] getMRUFileList()>",
    "<org.apache.log4j.or.DefaultRenderer: java.lang.String doRender(java.lang.Object)>",
    "<org.apache.htrace.fasterxml.jackson.databind.node.POJONode: java.lang.String asText()>",
    "<org.mortbay.jetty.handler.ContextHandler: void setResourceBase(java.lang.String)>",
    "<org.apache.htrace.fasterxml.jackson.databind.deser.SettableAnyProperty$AnySetterReferring: void handleResolvedForwardReference(java.lang.Object,java.lang.Object)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl$TimelineURLConnectionFactory: java.net.HttpURLConnection getHttpURLConnection(java.net.URL)>",
    "<com.jcraft.jsch.ProxyHTTP: void connect(com.jcraft.jsch.SocketFactory,java.lang.String,int,int)>",
    "<org.apache.avro.generic.GenericData: int compare(java.lang.Object,java.lang.Object,org.apache.avro.Schema,boolean)>",
    "<org.mortbay.jetty.Request: javax.servlet.http.Cookie[] getCookies()>",
    "<com.jcraft.jsch.Channel: void connect(int)>",
    "<org.apache.log4j.or.sax.AttributesRenderer: java.lang.String doRender(java.lang.Object)>",
    "<org.apache.commons.configuration.XMLConfiguration$XMLNode: void updateElement(java.lang.Object)>",
    "<org.apache.hadoop.yarn.nodelabels.FileSystemNodeLabelsStore: java.lang.String getDefaultFSNodeLabelsRootDir()>",
    "<org.apache.hadoop.yarn.server.api.impl.pb.client.SCMAdminProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.conf.YarnConfiguration: void <clinit>()>",
    "<org.apache.hadoop.yarn.security.AMRMTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.log4j.DefaultThrowableRenderer: java.lang.String[] render(java.lang.Throwable)>",
    "<org.mortbay.resource.Resource: org.mortbay.resource.Resource newResource(java.net.URL,boolean)>",
    "<org.apache.hadoop.yarn.server.security.ApplicationACLsManager: void addApplication(org.apache.hadoop.yarn.api.records.ApplicationId,java.util.Map)>",
    "<com.google.common.util.concurrent.Futures: java.lang.Object newFromConstructor(java.lang.reflect.Constructor,java.lang.Throwable)>",
    "<org.apache.hadoop.yarn.webapp.log.AggregatedLogsBlock: void render(org.apache.hadoop.yarn.webapp.view.HtmlBlock$Block)>",
    "<org.mortbay.jetty.servlet.DefaultServlet: void init()>",
    "<org.jets3t.service.utils.ServiceUtils: java.lang.String join(java.util.List,java.lang.String)>",
    "<com.jcraft.jsch.ChannelSftp$1: void write(byte[],int,int)>",
    "<org.xerial.snappy.SnappyLoader: void loadSnappySystemProperties()>",
    "<org.apache.avro.generic.GenericData: void toString(java.lang.Object,java.lang.StringBuilder)>",
    "<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.Object)>",
    "<org.apache.htrace.fasterxml.jackson.databind.deser.std.StringDeserializer: java.lang.String deserialize(org.apache.htrace.fasterxml.jackson.core.JsonParser,org.apache.htrace.fasterxml.jackson.databind.DeserializationContext)>",
    "<org.codehaus.jackson.map.ser.std.StdKeySerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
    "<com.jcraft.jsch.ChannelSftp: void put(java.lang.String,java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int)>",
    "<org.jets3t.service.utils.RestUtils: java.lang.String makeServiceCanonicalString(java.lang.String,java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.util.List)>",
    "<org.apache.ignite.yarn.IgniteYarnClient: void main(java.lang.String[])>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ApplicationMasterProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.security.ContainerTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.commons.logging.LogConfigurationException: void <init>(java.lang.Throwable)>",
    "<org.apache.commons.cli.HelpFormatter: java.lang.StringBuffer renderOptions(java.lang.StringBuffer,int,org.apache.commons.cli.Options,int,int)>",
    "<org.apache.hadoop.yarn.logaggregation.LogCLIHelpers: int dumpAContainersLogs(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.Session: void connect(int)>",
    "<org.apache.hadoop.yarn.util.YarnVersionInfo: java.lang.String getBuildVersion()>",
    "<org.apache.log4j.helpers.PatternParser$MDCPatternConverter: java.lang.String convert(org.apache.log4j.spi.LoggingEvent)>",
    "<com.google.common.base.Functions$ToStringFunction: java.lang.String apply(java.lang.Object)>",
    "<org.mortbay.jetty.security.SslSocketConnector: java.net.ServerSocket newServerSocket(java.lang.String,int,int)>",
    "<org.apache.hadoop.yarn.webapp.util.WebAppUtils: java.util.List getProxyHostsAndPortsForAmFilter(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: void serviceInit(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.commons.configuration.AbstractConfiguration$1: java.lang.String lookup(java.lang.String)>",
    "<org.apache.hadoop.yarn.security.AdminACLsManager: void <init>(org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.Session: void initInflater(java.lang.String)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ClientSCMProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.Session: void updateKeys(com.jcraft.jsch.KeyExchange)>",
    "<org.apache.commons.configuration.XMLConfiguration$XMLBuilderVisitor: void updateAttribute(org.apache.commons.configuration.HierarchicalConfiguration$Node,org.w3c.dom.Element,java.lang.String,char)>",
    "<org.apache.hadoop.yarn.client.AHSProxy: java.lang.Object getProxy(org.apache.hadoop.conf.Configuration,java.lang.Class,java.net.InetSocketAddress)>",
    "<org.apache.hadoop.yarn.conf.HAUtil: java.util.Collection getRMHAIds(org.apache.hadoop.conf.Configuration)>",
    "<org.mortbay.xml.XmlConfiguration: void set(java.lang.Object,org.mortbay.xml.XmlParser$Node)>",
    "<org.apache.log4j.or.ThreadGroupRenderer: java.lang.String doRender(java.lang.Object)>",
    "<com.jcraft.jsch.KeyPairDSA: void generate(int)>",
    "<org.apache.htrace.commons.logging.LogConfigurationException: void <init>(java.lang.Throwable)>",
    "<org.apache.hadoop.yarn.security.client.RMDelegationTokenIdentifier$Renewer: org.apache.hadoop.yarn.api.ApplicationClientProtocol getRmClient(org.apache.hadoop.security.token.Token,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.util.RMHAUtils: java.util.List getRMHAWebappAddresses(org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<com.google.inject.internal.Initializer$InjectableReference: java.lang.String toString()>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogValue: java.io.FileInputStream secureOpenFile(java.io.File)>",
    "<org.apache.commons.configuration.AbstractConfiguration: java.lang.String interpolate(java.lang.String)>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogReader: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)>",
    "<org.apache.hadoop.yarn.server.security.ApplicationACLsManager: void <clinit>()>",
    "<org.apache.commons.lang.ObjectUtils: java.lang.String toString(java.lang.Object)>",
    "<net.sf.cglib.core.EmitUtils: void push_object(net.sf.cglib.core.CodeEmitter,java.lang.Object)>",
    "<com.jcraft.jsch.ProxySOCKS4: void connect(com.jcraft.jsch.SocketFactory,java.lang.String,int,int)>",
    "<org.apache.hadoop.yarn.server.api.impl.pb.client.ResourceManagerAdministrationProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.client.ClientRMProxy: void setAMRMTokenService(org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.KeyPair: com.jcraft.jsch.KeyPair load(com.jcraft.jsch.JSch,java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.ProxySOCKS5: void connect(com.jcraft.jsch.SocketFactory,java.lang.String,int,int)>",
    "<org.apache.directory.api.util.OsgiUtils: java.lang.String getBundleExports(java.io.File)>",
    "<org.codehaus.jettison.json.JSONArray: java.lang.String getString(int)>",
    "<com.google.inject.internal.ProcessedBindingData: void initializeBindings()>",
    "<org.jets3t.service.utils.ServiceUtils: java.util.Map cleanRestMetadataMap(java.util.Map,java.lang.String,java.lang.String)>",
    "<org.apache.commons.lang.exception.ExceptionUtils: java.lang.String[] getRootCauseStackTrace(java.lang.Throwable)>",
    "<org.apache.hadoop.yarn.util.WindowsBasedProcessTree: java.lang.String getAllProcessInfoFromShell()>",
    "<javax.xml.bind.ContextFinder: java.util.Properties loadJAXBProperties(java.lang.ClassLoader,java.lang.String)>",
    "<com.jcraft.jsch.IdentityFile: boolean setPassphrase(byte[])>",
    "<org.mortbay.jetty.handler.DebugHandler: void handle(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,int)>",
    "<com.jcraft.jsch.KnownHosts: void setKnownHosts(java.io.InputStream)>",
    "<org.mortbay.xml.XmlConfiguration: java.lang.Object value(java.lang.Object,org.mortbay.xml.XmlParser$Node)>",
    "<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
    "<org.apache.hadoop.yarn.util.RMHAUtils: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState getHAState(org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<org.apache.commons.lang.StringUtils: java.lang.String join(java.lang.Object[],java.lang.String,int,int)>",
    "<com.jcraft.jsch.Session: void initDeflater(java.lang.String)>",
    "<com.jcraft.jsch.Util: java.net.Socket createSocket(java.lang.String,int,int)>",
    "<org.apache.hadoop.yarn.util.YarnVersionInfo: void <init>()>",
    "<com.google.common.collect.SingletonImmutableList: java.lang.String toString()>",
    "<org.codehaus.jettison.json.JSONObject: java.io.Writer write(java.io.Writer)>",
    "<org.mortbay.jetty.Request: void extractParameters()>",
    "<com.jcraft.jsch.ChannelSftp: void _put(java.io.InputStream,java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int)>",
    "<org.codehaus.jettison.mapped.MappedXMLStreamReader: void <init>(org.codehaus.jettison.json.JSONObject,org.codehaus.jettison.mapped.MappedNamespaceConvention)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: long renewDelegationToken(org.apache.hadoop.security.token.Token)>",
    "<org.apache.hadoop.yarn.webapp.view.HtmlBlock: org.apache.hadoop.security.UserGroupInformation getCallerUGI()>",
    "<org.apache.hadoop.yarn.util.RMHAUtils: java.lang.String findActiveRMHAId(org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<org.apache.commons.lang.text.StrLookup$MapStrLookup: java.lang.String lookup(java.lang.String)>",
    "<com.google.inject.spi.Message: java.lang.Object writeReplace()>",
    "<org.apache.hadoop.yarn.webapp.util.WebAppUtils: java.lang.String getResolvedAddress(java.net.InetSocketAddress)>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogWriter$1: org.apache.hadoop.fs.FSDataOutputStream run()>",
    "<com.sun.xml.bind.api.impl.NameConverter$Standard: java.lang.String combine(java.util.List,char)>",
    "<com.jcraft.jsch.ChannelSftp: void start()>",
    "<org.mortbay.jetty.servlet.ServletHandler$Chain: java.lang.String toString()>",
    "<org.jets3t.service.utils.gatekeeper.GatekeeperMessage: void encodeProperty(java.util.Properties,java.lang.String,java.lang.Object)>",
    "<org.apache.hadoop.yarn.conf.YarnConfiguration: java.net.InetSocketAddress getSocketAddr(java.lang.String,java.lang.String,int)>",
    "<com.google.common.util.concurrent.AbstractListeningExecutorService: java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit)>",
    "<org.apache.hadoop.yarn.util.WindowsBasedProcessTree: boolean isAvailable()>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: void cancelDelegationToken(org.apache.hadoop.security.token.Token)>",
    "<org.jets3t.service.model.StorageObject: long getContentLength()>",
    "<org.apache.jute.compiler.generated.Rcc: void main(java.lang.String[])>",
    "<org.apache.hadoop.yarn.util.FSDownload: org.apache.hadoop.fs.Path copy(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)>",
    "<org.apache.htrace.fasterxml.jackson.databind.util.TokenBuffer$Parser: java.lang.String getText()>",
    "<org.apache.avro.generic.GenericData$Array: java.lang.String toString()>",
    "<com.google.inject.internal.util.$ImmutableSet$SingletonImmutableSet: java.lang.String toString()>",
    "<com.jcraft.jsch.IdentityFile: com.jcraft.jsch.IdentityFile newInstance(java.lang.String,java.lang.String,com.jcraft.jsch.JSch)>",
    "<org.apache.commons.io.filefilter.AndFileFilter: java.lang.String toString()>",
    "<org.apache.ignite.yarn.IgniteYarnClient: void setupAppMasterEnv(java.util.Map,org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<org.apache.zookeeper.server.quorum.QuorumPeerConfig: void parseProperties(java.util.Properties)>",
    "<org.codehaus.jackson.map.ser.std.RawSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
    "<org.mortbay.jetty.security.HashUserRealm: void loadConfig()>",
    "<com.jcraft.jsch.Channel$1: void flush()>",
    "<org.apache.htrace.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,org.apache.htrace.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.fasterxml.jackson.databind.SerializerProvider)>",
    "<org.apache.hadoop.yarn.client.RMProxy: java.lang.Object getProxy(org.apache.hadoop.conf.Configuration,java.lang.Class,java.net.InetSocketAddress)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: void putTimelineDataInJSONFile(java.lang.String,java.lang.String)>",
    "<org.apache.hadoop.yarn.conf.HAUtil: boolean isHAEnabled(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ContainerManagementProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.IdentityFile: void <init>(java.lang.String,byte[],byte[],com.jcraft.jsch.JSch)>",
    "<com.jcraft.jsch.Session: void setTimeout(int)>",
    "<org.apache.log4j.jmx.Agent: void startServer(java.lang.Object)>",
    "<org.apache.commons.beanutils.BeanComparator: int compare(java.lang.Object,java.lang.Object)>",
    "<org.mortbay.io.bio.StringEndPoint: void setInput(java.lang.String)>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String toString()>",
    "<org.apache.hadoop.yarn.security.NMTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.ignite.yarn.ApplicationMaster: void init()>",
    "<org.apache.hadoop.yarn.util.ProcfsBasedProcessTree: void <clinit>()>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogWriter: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.security.UserGroupInformation)>",
    "<org.mortbay.jetty.security.BasicAuthenticator: java.security.Principal authenticate(org.mortbay.jetty.security.UserRealm,java.lang.String,org.mortbay.jetty.Request,org.mortbay.jetty.Response)>",
    "<org.mortbay.util.LazyList: java.lang.String[] toStringArray(java.lang.Object)>",
    "<com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)>",
    "<com.google.inject.internal.util.$ImmutableSet: java.lang.String toString()>",
    "<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String valueToString(java.lang.Object)>",
    "<org.apache.htrace.fasterxml.jackson.core.JsonLocation: java.lang.String toString()>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>",
    "<org.mortbay.xml.XmlParser: void setValidating(boolean)>",
    "<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>",
    "<com.sun.jersey.api.uri.UriTemplate: java.lang.StringBuilder createURIComponent(com.sun.jersey.api.uri.UriComponent$Type,java.lang.String,java.util.Map,boolean,java.lang.StringBuilder)>",
    "<org.apache.commons.lang.builder.ReflectionToStringBuilder: java.lang.String[] toNoNullStringArray(java.lang.Object[])>",
    "<org.apache.htrace.fasterxml.jackson.databind.util.TokenBuffer$Parser: org.apache.htrace.fasterxml.jackson.core.JsonToken nextToken()>",
    "<org.mortbay.jetty.servlet.Invoker: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "<org.apache.hadoop.yarn.conf.HAUtil: boolean isAutomaticFailoverEnabled(org.apache.hadoop.conf.Configuration)>",
    "<org.objectweb.asm.ClassWriter: java.lang.String getCommonSuperClass(java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.Session: void setPortForwarding(java.lang.String,int)>",
    "<org.apache.hadoop.yarn.client.ClientRMProxy: org.apache.hadoop.io.Text getTokenService(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String,int)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: org.apache.hadoop.security.authentication.client.ConnectionConfigurator newSslConnConfigurator(int,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.htrace.fasterxml.jackson.databind.ser.std.ToStringSerializer: void serialize(java.lang.Object,org.apache.htrace.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.fasterxml.jackson.databind.SerializerProvider)>",
    "<javax.xml.bind.JAXBException: java.lang.String toString()>",
    "<org.mortbay.log.StdErrLog: void format(java.lang.Throwable)>",
    "<org.apache.commons.configuration.XMLConfiguration: void handleDelimiters(org.apache.commons.configuration.HierarchicalConfiguration$Node,org.apache.commons.configuration.HierarchicalConfiguration$Node,boolean)>",
    "<org.apache.avro.generic.GenericData: int hashCode(java.lang.Object,org.apache.avro.Schema)>",
    "<org.apache.hadoop.yarn.security.ConfiguredYarnAuthorizer: void init(org.apache.hadoop.conf.Configuration)>"
  ],
  "1.9.0": [
    "<org.mortbay.io.bio.StringEndPoint: java.lang.String getOutput()>",
    "<org.apache.hadoop.yarn.security.client.ClientToAMTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.hadoop.yarn.conf.HAUtil: java.lang.String getRMHAId(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.log4j.lf5.viewer.LogTable$LogTableListSelectionListener: void valueChanged(javax.swing.event.ListSelectionEvent)>",
    "<org.mortbay.jetty.handler.ResourceHandler: void setResourceBase(java.lang.String)>",
    "<org.mortbay.util.UrlEncoded: java.lang.String encode(org.mortbay.util.MultiMap,java.lang.String,boolean)>",
    "<com.google.inject.internal.asm.$ClassWriter: java.lang.String getCommonSuperClass(java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.Session: com.jcraft.jsch.KeyExchange receive_kexinit(com.jcraft.jsch.Buffer)>",
    "<org.apache.commons.lang.StringUtils: java.lang.String join(java.lang.Object[],char,int,int)>",
    "<com.google.inject.util.Node: java.lang.String toString()>",
    "<com.google.inject.internal.cglib.core.$EmitUtils: void push_object(com.google.inject.internal.cglib.core.$CodeEmitter,java.lang.Object)>",
    "<org.apache.hadoop.yarn.util.timeline.TimelineUtils: org.apache.hadoop.io.Text buildTimelineTokenService(org.apache.hadoop.conf.Configuration)>",
    "<com.google.inject.spi.Message: java.lang.String getSource()>",
    "<org.codehaus.jackson.map.ser.std.ToStringSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
    "<com.jcraft.jsch.KeyPairRSA: void generate(int)>",
    "<org.apache.commons.collections.ExtendedProperties: java.lang.String interpolateHelper(java.lang.String,java.util.List)>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String getString(java.lang.String)>",
    "<com.google.common.collect.SingletonImmutableSet: java.lang.String toString()>",
    "<org.apache.hadoop.yarn.util.Apps: void setEnvFromInputString(java.util.Map,java.lang.String,java.lang.String)>",
    "<org.apache.htrace.fasterxml.jackson.databind.ser.std.StdKeySerializer: void serialize(java.lang.Object,org.apache.htrace.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.fasterxml.jackson.databind.SerializerProvider)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ApplicationClientProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.logaggregation.LogCLIHelpers: int dumpAllContainersLogs(org.apache.hadoop.yarn.api.records.ApplicationId,java.lang.String,java.io.PrintStream)>",
    "<com.google.common.collect.SingletonImmutableMap: java.lang.String toString()>",
    "<com.jcraft.jsch.ChannelSftp: void put(java.io.InputStream,java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int)>",
    "<org.apache.hadoop.yarn.util.WindowsResourceCalculatorPlugin: java.lang.String getSystemInfoInfoFromShell()>",
    "<com.jcraft.jsch.ChannelSftp$1: void close()>",
    "<org.apache.hadoop.yarn.util.FSDownload: long unpack(java.io.File,java.io.File)>",
    "<org.mortbay.util.MultiMap: java.lang.String getString(java.lang.Object)>",
    "<org.apache.hadoop.yarn.util.ConverterUtils: org.apache.hadoop.security.token.Token convertFromYarn(org.apache.hadoop.yarn.api.records.Token,java.net.InetSocketAddress)>",
    "<com.google.inject.internal.MessageProcessor: java.lang.String getRootMessage(java.lang.Throwable)>",
    "<org.apache.zookeeper.server.quorum.QuorumCnxManager: boolean receiveConnection(java.net.Socket)>",
    "<org.mortbay.xml.XmlConfiguration: void configure(java.lang.Object,org.mortbay.xml.XmlParser$Node,int)>",
    "<org.apache.hadoop.yarn.webapp.WebApps$Builder: org.apache.hadoop.yarn.webapp.WebApp start(org.apache.hadoop.yarn.webapp.WebApp)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ApplicationHistoryProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.log4j.lf5.viewer.configure.MRUFileManager: java.lang.String[] getMRUFileList()>",
    "<org.apache.log4j.or.DefaultRenderer: java.lang.String doRender(java.lang.Object)>",
    "<org.apache.htrace.fasterxml.jackson.databind.node.POJONode: java.lang.String asText()>",
    "<org.mortbay.jetty.handler.ContextHandler: void setResourceBase(java.lang.String)>",
    "<org.apache.htrace.fasterxml.jackson.databind.deser.SettableAnyProperty$AnySetterReferring: void handleResolvedForwardReference(java.lang.Object,java.lang.Object)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl$TimelineURLConnectionFactory: java.net.HttpURLConnection getHttpURLConnection(java.net.URL)>",
    "<com.jcraft.jsch.ProxyHTTP: void connect(com.jcraft.jsch.SocketFactory,java.lang.String,int,int)>",
    "<org.apache.avro.generic.GenericData: int compare(java.lang.Object,java.lang.Object,org.apache.avro.Schema,boolean)>",
    "<org.mortbay.jetty.Request: javax.servlet.http.Cookie[] getCookies()>",
    "<com.jcraft.jsch.Channel: void connect(int)>",
    "<org.apache.log4j.or.sax.AttributesRenderer: java.lang.String doRender(java.lang.Object)>",
    "<org.apache.commons.configuration.XMLConfiguration$XMLNode: void updateElement(java.lang.Object)>",
    "<org.apache.hadoop.yarn.nodelabels.FileSystemNodeLabelsStore: java.lang.String getDefaultFSNodeLabelsRootDir()>",
    "<org.apache.hadoop.yarn.server.api.impl.pb.client.SCMAdminProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.conf.YarnConfiguration: void <clinit>()>",
    "<org.apache.hadoop.yarn.security.AMRMTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.log4j.DefaultThrowableRenderer: java.lang.String[] render(java.lang.Throwable)>",
    "<org.mortbay.resource.Resource: org.mortbay.resource.Resource newResource(java.net.URL,boolean)>",
    "<org.apache.hadoop.yarn.server.security.ApplicationACLsManager: void addApplication(org.apache.hadoop.yarn.api.records.ApplicationId,java.util.Map)>",
    "<com.google.common.util.concurrent.Futures: java.lang.Object newFromConstructor(java.lang.reflect.Constructor,java.lang.Throwable)>",
    "<org.apache.hadoop.yarn.webapp.log.AggregatedLogsBlock: void render(org.apache.hadoop.yarn.webapp.view.HtmlBlock$Block)>",
    "<org.mortbay.jetty.servlet.DefaultServlet: void init()>",
    "<org.jets3t.service.utils.ServiceUtils: java.lang.String join(java.util.List,java.lang.String)>",
    "<com.jcraft.jsch.ChannelSftp$1: void write(byte[],int,int)>",
    "<org.xerial.snappy.SnappyLoader: void loadSnappySystemProperties()>",
    "<org.apache.avro.generic.GenericData: void toString(java.lang.Object,java.lang.StringBuilder)>",
    "<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.Object)>",
    "<org.apache.htrace.fasterxml.jackson.databind.deser.std.StringDeserializer: java.lang.String deserialize(org.apache.htrace.fasterxml.jackson.core.JsonParser,org.apache.htrace.fasterxml.jackson.databind.DeserializationContext)>",
    "<org.codehaus.jackson.map.ser.std.StdKeySerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
    "<com.jcraft.jsch.ChannelSftp: void put(java.lang.String,java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int)>",
    "<org.jets3t.service.utils.RestUtils: java.lang.String makeServiceCanonicalString(java.lang.String,java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.util.List)>",
    "<org.apache.ignite.yarn.IgniteYarnClient: void main(java.lang.String[])>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ApplicationMasterProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.security.ContainerTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.commons.logging.LogConfigurationException: void <init>(java.lang.Throwable)>",
    "<org.apache.commons.cli.HelpFormatter: java.lang.StringBuffer renderOptions(java.lang.StringBuffer,int,org.apache.commons.cli.Options,int,int)>",
    "<org.apache.hadoop.yarn.logaggregation.LogCLIHelpers: int dumpAContainersLogs(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.Session: void connect(int)>",
    "<org.apache.hadoop.yarn.util.YarnVersionInfo: java.lang.String getBuildVersion()>",
    "<org.apache.log4j.helpers.PatternParser$MDCPatternConverter: java.lang.String convert(org.apache.log4j.spi.LoggingEvent)>",
    "<com.google.common.base.Functions$ToStringFunction: java.lang.String apply(java.lang.Object)>",
    "<org.mortbay.jetty.security.SslSocketConnector: java.net.ServerSocket newServerSocket(java.lang.String,int,int)>",
    "<org.apache.hadoop.yarn.webapp.util.WebAppUtils: java.util.List getProxyHostsAndPortsForAmFilter(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: void serviceInit(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.commons.configuration.AbstractConfiguration$1: java.lang.String lookup(java.lang.String)>",
    "<org.apache.hadoop.yarn.security.AdminACLsManager: void <init>(org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.Session: void initInflater(java.lang.String)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ClientSCMProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.Session: void updateKeys(com.jcraft.jsch.KeyExchange)>",
    "<org.apache.commons.configuration.XMLConfiguration$XMLBuilderVisitor: void updateAttribute(org.apache.commons.configuration.HierarchicalConfiguration$Node,org.w3c.dom.Element,java.lang.String,char)>",
    "<org.apache.hadoop.yarn.client.AHSProxy: java.lang.Object getProxy(org.apache.hadoop.conf.Configuration,java.lang.Class,java.net.InetSocketAddress)>",
    "<org.apache.hadoop.yarn.conf.HAUtil: java.util.Collection getRMHAIds(org.apache.hadoop.conf.Configuration)>",
    "<org.mortbay.xml.XmlConfiguration: void set(java.lang.Object,org.mortbay.xml.XmlParser$Node)>",
    "<org.apache.log4j.or.ThreadGroupRenderer: java.lang.String doRender(java.lang.Object)>",
    "<com.jcraft.jsch.KeyPairDSA: void generate(int)>",
    "<org.apache.htrace.commons.logging.LogConfigurationException: void <init>(java.lang.Throwable)>",
    "<org.apache.hadoop.yarn.security.client.RMDelegationTokenIdentifier$Renewer: org.apache.hadoop.yarn.api.ApplicationClientProtocol getRmClient(org.apache.hadoop.security.token.Token,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.util.RMHAUtils: java.util.List getRMHAWebappAddresses(org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<com.google.inject.internal.Initializer$InjectableReference: java.lang.String toString()>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogValue: java.io.FileInputStream secureOpenFile(java.io.File)>",
    "<org.apache.commons.configuration.AbstractConfiguration: java.lang.String interpolate(java.lang.String)>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogReader: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)>",
    "<org.apache.hadoop.yarn.server.security.ApplicationACLsManager: void <clinit>()>",
    "<org.apache.commons.lang.ObjectUtils: java.lang.String toString(java.lang.Object)>",
    "<net.sf.cglib.core.EmitUtils: void push_object(net.sf.cglib.core.CodeEmitter,java.lang.Object)>",
    "<com.jcraft.jsch.ProxySOCKS4: void connect(com.jcraft.jsch.SocketFactory,java.lang.String,int,int)>",
    "<org.apache.hadoop.yarn.server.api.impl.pb.client.ResourceManagerAdministrationProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.client.ClientRMProxy: void setAMRMTokenService(org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.KeyPair: com.jcraft.jsch.KeyPair load(com.jcraft.jsch.JSch,java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.ProxySOCKS5: void connect(com.jcraft.jsch.SocketFactory,java.lang.String,int,int)>",
    "<org.apache.directory.api.util.OsgiUtils: java.lang.String getBundleExports(java.io.File)>",
    "<org.codehaus.jettison.json.JSONArray: java.lang.String getString(int)>",
    "<com.google.inject.internal.ProcessedBindingData: void initializeBindings()>",
    "<org.jets3t.service.utils.ServiceUtils: java.util.Map cleanRestMetadataMap(java.util.Map,java.lang.String,java.lang.String)>",
    "<org.apache.commons.lang.exception.ExceptionUtils: java.lang.String[] getRootCauseStackTrace(java.lang.Throwable)>",
    "<org.apache.hadoop.yarn.util.WindowsBasedProcessTree: java.lang.String getAllProcessInfoFromShell()>",
    "<javax.xml.bind.ContextFinder: java.util.Properties loadJAXBProperties(java.lang.ClassLoader,java.lang.String)>",
    "<com.jcraft.jsch.IdentityFile: boolean setPassphrase(byte[])>",
    "<org.mortbay.jetty.handler.DebugHandler: void handle(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,int)>",
    "<com.jcraft.jsch.KnownHosts: void setKnownHosts(java.io.InputStream)>",
    "<org.mortbay.xml.XmlConfiguration: java.lang.Object value(java.lang.Object,org.mortbay.xml.XmlParser$Node)>",
    "<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
    "<org.apache.hadoop.yarn.util.RMHAUtils: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState getHAState(org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<org.apache.commons.lang.StringUtils: java.lang.String join(java.lang.Object[],java.lang.String,int,int)>",
    "<com.jcraft.jsch.Session: void initDeflater(java.lang.String)>",
    "<com.jcraft.jsch.Util: java.net.Socket createSocket(java.lang.String,int,int)>",
    "<org.apache.hadoop.yarn.util.YarnVersionInfo: void <init>()>",
    "<com.google.common.collect.SingletonImmutableList: java.lang.String toString()>",
    "<org.codehaus.jettison.json.JSONObject: java.io.Writer write(java.io.Writer)>",
    "<org.mortbay.jetty.Request: void extractParameters()>",
    "<com.jcraft.jsch.ChannelSftp: void _put(java.io.InputStream,java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int)>",
    "<org.codehaus.jettison.mapped.MappedXMLStreamReader: void <init>(org.codehaus.jettison.json.JSONObject,org.codehaus.jettison.mapped.MappedNamespaceConvention)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: long renewDelegationToken(org.apache.hadoop.security.token.Token)>",
    "<org.apache.hadoop.yarn.webapp.view.HtmlBlock: org.apache.hadoop.security.UserGroupInformation getCallerUGI()>",
    "<org.apache.hadoop.yarn.util.RMHAUtils: java.lang.String findActiveRMHAId(org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<org.apache.commons.lang.text.StrLookup$MapStrLookup: java.lang.String lookup(java.lang.String)>",
    "<com.google.inject.spi.Message: java.lang.Object writeReplace()>",
    "<org.apache.hadoop.yarn.webapp.util.WebAppUtils: java.lang.String getResolvedAddress(java.net.InetSocketAddress)>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogWriter$1: org.apache.hadoop.fs.FSDataOutputStream run()>",
    "<com.sun.xml.bind.api.impl.NameConverter$Standard: java.lang.String combine(java.util.List,char)>",
    "<com.jcraft.jsch.ChannelSftp: void start()>",
    "<org.mortbay.jetty.servlet.ServletHandler$Chain: java.lang.String toString()>",
    "<org.jets3t.service.utils.gatekeeper.GatekeeperMessage: void encodeProperty(java.util.Properties,java.lang.String,java.lang.Object)>",
    "<org.apache.hadoop.yarn.conf.YarnConfiguration: java.net.InetSocketAddress getSocketAddr(java.lang.String,java.lang.String,int)>",
    "<com.google.common.util.concurrent.AbstractListeningExecutorService: java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit)>",
    "<org.apache.hadoop.yarn.util.WindowsBasedProcessTree: boolean isAvailable()>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: void cancelDelegationToken(org.apache.hadoop.security.token.Token)>",
    "<org.jets3t.service.model.StorageObject: long getContentLength()>",
    "<org.apache.jute.compiler.generated.Rcc: void main(java.lang.String[])>",
    "<org.apache.hadoop.yarn.util.FSDownload: org.apache.hadoop.fs.Path copy(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)>",
    "<org.apache.htrace.fasterxml.jackson.databind.util.TokenBuffer$Parser: java.lang.String getText()>",
    "<org.apache.avro.generic.GenericData$Array: java.lang.String toString()>",
    "<com.google.inject.internal.util.$ImmutableSet$SingletonImmutableSet: java.lang.String toString()>",
    "<com.jcraft.jsch.IdentityFile: com.jcraft.jsch.IdentityFile newInstance(java.lang.String,java.lang.String,com.jcraft.jsch.JSch)>",
    "<org.apache.commons.io.filefilter.AndFileFilter: java.lang.String toString()>",
    "<org.apache.ignite.yarn.IgniteYarnClient: void setupAppMasterEnv(java.util.Map,org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<org.apache.zookeeper.server.quorum.QuorumPeerConfig: void parseProperties(java.util.Properties)>",
    "<org.codehaus.jackson.map.ser.std.RawSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
    "<org.mortbay.jetty.security.HashUserRealm: void loadConfig()>",
    "<com.jcraft.jsch.Channel$1: void flush()>",
    "<org.apache.htrace.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,org.apache.htrace.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.fasterxml.jackson.databind.SerializerProvider)>",
    "<org.apache.hadoop.yarn.client.RMProxy: java.lang.Object getProxy(org.apache.hadoop.conf.Configuration,java.lang.Class,java.net.InetSocketAddress)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: void putTimelineDataInJSONFile(java.lang.String,java.lang.String)>",
    "<org.apache.hadoop.yarn.conf.HAUtil: boolean isHAEnabled(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ContainerManagementProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.IdentityFile: void <init>(java.lang.String,byte[],byte[],com.jcraft.jsch.JSch)>",
    "<com.jcraft.jsch.Session: void setTimeout(int)>",
    "<org.apache.log4j.jmx.Agent: void startServer(java.lang.Object)>",
    "<org.apache.commons.beanutils.BeanComparator: int compare(java.lang.Object,java.lang.Object)>",
    "<org.mortbay.io.bio.StringEndPoint: void setInput(java.lang.String)>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String toString()>",
    "<org.apache.hadoop.yarn.security.NMTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.ignite.yarn.ApplicationMaster: void init()>",
    "<org.apache.hadoop.yarn.util.ProcfsBasedProcessTree: void <clinit>()>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogWriter: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.security.UserGroupInformation)>",
    "<org.mortbay.jetty.security.BasicAuthenticator: java.security.Principal authenticate(org.mortbay.jetty.security.UserRealm,java.lang.String,org.mortbay.jetty.Request,org.mortbay.jetty.Response)>",
    "<org.mortbay.util.LazyList: java.lang.String[] toStringArray(java.lang.Object)>",
    "<com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)>",
    "<com.google.inject.internal.util.$ImmutableSet: java.lang.String toString()>",
    "<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
    "<org.apache.ignite.yarn.ApplicationMaster: void onContainersAllocated(java.util.List)>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String valueToString(java.lang.Object)>",
    "<org.apache.htrace.fasterxml.jackson.core.JsonLocation: java.lang.String toString()>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>",
    "<org.mortbay.xml.XmlParser: void setValidating(boolean)>",
    "<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>",
    "<com.sun.jersey.api.uri.UriTemplate: java.lang.StringBuilder createURIComponent(com.sun.jersey.api.uri.UriComponent$Type,java.lang.String,java.util.Map,boolean,java.lang.StringBuilder)>",
    "<org.apache.commons.lang.builder.ReflectionToStringBuilder: java.lang.String[] toNoNullStringArray(java.lang.Object[])>",
    "<org.apache.htrace.fasterxml.jackson.databind.util.TokenBuffer$Parser: org.apache.htrace.fasterxml.jackson.core.JsonToken nextToken()>",
    "<org.mortbay.jetty.servlet.Invoker: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "<org.apache.hadoop.yarn.conf.HAUtil: boolean isAutomaticFailoverEnabled(org.apache.hadoop.conf.Configuration)>",
    "<org.objectweb.asm.ClassWriter: java.lang.String getCommonSuperClass(java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.Session: void setPortForwarding(java.lang.String,int)>",
    "<org.apache.hadoop.yarn.client.ClientRMProxy: org.apache.hadoop.io.Text getTokenService(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String,int)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: org.apache.hadoop.security.authentication.client.ConnectionConfigurator newSslConnConfigurator(int,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.htrace.fasterxml.jackson.databind.ser.std.ToStringSerializer: void serialize(java.lang.Object,org.apache.htrace.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.fasterxml.jackson.databind.SerializerProvider)>",
    "<javax.xml.bind.JAXBException: java.lang.String toString()>",
    "<org.mortbay.log.StdErrLog: void format(java.lang.Throwable)>",
    "<org.apache.commons.configuration.XMLConfiguration: void handleDelimiters(org.apache.commons.configuration.HierarchicalConfiguration$Node,org.apache.commons.configuration.HierarchicalConfiguration$Node,boolean)>",
    "<org.apache.avro.generic.GenericData: int hashCode(java.lang.Object,org.apache.avro.Schema)>",
    "<org.apache.hadoop.yarn.security.ConfiguredYarnAuthorizer: void init(org.apache.hadoop.conf.Configuration)>"
  ],
  "1.3.0-incubating": [
    "<org.apache.ignite.yarn.ApplicationMaster: void init()>",
    "<org.apache.ignite.yarn.IgniteYarnClient: void main(java.lang.String[])>"
  ],
  "2.3.0": [
    "<org.mortbay.io.bio.StringEndPoint: java.lang.String getOutput()>",
    "<org.apache.hadoop.yarn.security.client.ClientToAMTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.hadoop.yarn.conf.HAUtil: java.lang.String getRMHAId(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.log4j.lf5.viewer.LogTable$LogTableListSelectionListener: void valueChanged(javax.swing.event.ListSelectionEvent)>",
    "<org.mortbay.jetty.handler.ResourceHandler: void setResourceBase(java.lang.String)>",
    "<org.mortbay.util.UrlEncoded: java.lang.String encode(org.mortbay.util.MultiMap,java.lang.String,boolean)>",
    "<com.google.inject.internal.asm.$ClassWriter: java.lang.String getCommonSuperClass(java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.Session: com.jcraft.jsch.KeyExchange receive_kexinit(com.jcraft.jsch.Buffer)>",
    "<org.apache.commons.lang.StringUtils: java.lang.String join(java.lang.Object[],char,int,int)>",
    "<com.google.inject.util.Node: java.lang.String toString()>",
    "<com.google.inject.internal.cglib.core.$EmitUtils: void push_object(com.google.inject.internal.cglib.core.$CodeEmitter,java.lang.Object)>",
    "<org.apache.hadoop.yarn.util.timeline.TimelineUtils: org.apache.hadoop.io.Text buildTimelineTokenService(org.apache.hadoop.conf.Configuration)>",
    "<com.google.inject.spi.Message: java.lang.String getSource()>",
    "<org.codehaus.jackson.map.ser.std.ToStringSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
    "<com.jcraft.jsch.KeyPairRSA: void generate(int)>",
    "<org.apache.commons.collections.ExtendedProperties: java.lang.String interpolateHelper(java.lang.String,java.util.List)>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String getString(java.lang.String)>",
    "<com.google.common.collect.SingletonImmutableSet: java.lang.String toString()>",
    "<org.apache.hadoop.yarn.util.Apps: void setEnvFromInputString(java.util.Map,java.lang.String,java.lang.String)>",
    "<org.apache.htrace.fasterxml.jackson.databind.ser.std.StdKeySerializer: void serialize(java.lang.Object,org.apache.htrace.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.fasterxml.jackson.databind.SerializerProvider)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ApplicationClientProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.logaggregation.LogCLIHelpers: int dumpAllContainersLogs(org.apache.hadoop.yarn.api.records.ApplicationId,java.lang.String,java.io.PrintStream)>",
    "<com.google.common.collect.SingletonImmutableMap: java.lang.String toString()>",
    "<com.jcraft.jsch.ChannelSftp: void put(java.io.InputStream,java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int)>",
    "<org.apache.hadoop.yarn.util.WindowsResourceCalculatorPlugin: java.lang.String getSystemInfoInfoFromShell()>",
    "<com.jcraft.jsch.ChannelSftp$1: void close()>",
    "<org.apache.hadoop.yarn.util.FSDownload: long unpack(java.io.File,java.io.File)>",
    "<org.mortbay.util.MultiMap: java.lang.String getString(java.lang.Object)>",
    "<org.apache.hadoop.yarn.util.ConverterUtils: org.apache.hadoop.security.token.Token convertFromYarn(org.apache.hadoop.yarn.api.records.Token,java.net.InetSocketAddress)>",
    "<com.google.inject.internal.MessageProcessor: java.lang.String getRootMessage(java.lang.Throwable)>",
    "<org.apache.zookeeper.server.quorum.QuorumCnxManager: boolean receiveConnection(java.net.Socket)>",
    "<org.mortbay.xml.XmlConfiguration: void configure(java.lang.Object,org.mortbay.xml.XmlParser$Node,int)>",
    "<org.apache.hadoop.yarn.webapp.WebApps$Builder: org.apache.hadoop.yarn.webapp.WebApp start(org.apache.hadoop.yarn.webapp.WebApp)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ApplicationHistoryProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.log4j.lf5.viewer.configure.MRUFileManager: java.lang.String[] getMRUFileList()>",
    "<org.apache.log4j.or.DefaultRenderer: java.lang.String doRender(java.lang.Object)>",
    "<org.apache.htrace.fasterxml.jackson.databind.node.POJONode: java.lang.String asText()>",
    "<org.mortbay.jetty.handler.ContextHandler: void setResourceBase(java.lang.String)>",
    "<org.apache.htrace.fasterxml.jackson.databind.deser.SettableAnyProperty$AnySetterReferring: void handleResolvedForwardReference(java.lang.Object,java.lang.Object)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl$TimelineURLConnectionFactory: java.net.HttpURLConnection getHttpURLConnection(java.net.URL)>",
    "<com.jcraft.jsch.ProxyHTTP: void connect(com.jcraft.jsch.SocketFactory,java.lang.String,int,int)>",
    "<org.apache.avro.generic.GenericData: int compare(java.lang.Object,java.lang.Object,org.apache.avro.Schema,boolean)>",
    "<org.mortbay.jetty.Request: javax.servlet.http.Cookie[] getCookies()>",
    "<com.jcraft.jsch.Channel: void connect(int)>",
    "<org.apache.log4j.or.sax.AttributesRenderer: java.lang.String doRender(java.lang.Object)>",
    "<org.apache.commons.configuration.XMLConfiguration$XMLNode: void updateElement(java.lang.Object)>",
    "<org.apache.hadoop.yarn.nodelabels.FileSystemNodeLabelsStore: java.lang.String getDefaultFSNodeLabelsRootDir()>",
    "<org.apache.hadoop.yarn.server.api.impl.pb.client.SCMAdminProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.conf.YarnConfiguration: void <clinit>()>",
    "<org.apache.hadoop.yarn.security.AMRMTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.log4j.DefaultThrowableRenderer: java.lang.String[] render(java.lang.Throwable)>",
    "<org.mortbay.resource.Resource: org.mortbay.resource.Resource newResource(java.net.URL,boolean)>",
    "<org.apache.hadoop.yarn.server.security.ApplicationACLsManager: void addApplication(org.apache.hadoop.yarn.api.records.ApplicationId,java.util.Map)>",
    "<com.google.common.util.concurrent.Futures: java.lang.Object newFromConstructor(java.lang.reflect.Constructor,java.lang.Throwable)>",
    "<org.apache.hadoop.yarn.webapp.log.AggregatedLogsBlock: void render(org.apache.hadoop.yarn.webapp.view.HtmlBlock$Block)>",
    "<org.mortbay.jetty.servlet.DefaultServlet: void init()>",
    "<org.jets3t.service.utils.ServiceUtils: java.lang.String join(java.util.List,java.lang.String)>",
    "<com.jcraft.jsch.ChannelSftp$1: void write(byte[],int,int)>",
    "<org.xerial.snappy.SnappyLoader: void loadSnappySystemProperties()>",
    "<org.apache.avro.generic.GenericData: void toString(java.lang.Object,java.lang.StringBuilder)>",
    "<org.apache.commons.lang.text.StrBuilder: org.apache.commons.lang.text.StrBuilder append(java.lang.Object)>",
    "<org.apache.htrace.fasterxml.jackson.databind.deser.std.StringDeserializer: java.lang.String deserialize(org.apache.htrace.fasterxml.jackson.core.JsonParser,org.apache.htrace.fasterxml.jackson.databind.DeserializationContext)>",
    "<org.codehaus.jackson.map.ser.std.StdKeySerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
    "<com.jcraft.jsch.ChannelSftp: void put(java.lang.String,java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int)>",
    "<org.jets3t.service.utils.RestUtils: java.lang.String makeServiceCanonicalString(java.lang.String,java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.util.List)>",
    "<org.apache.ignite.yarn.IgniteYarnClient: void main(java.lang.String[])>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ApplicationMasterProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.security.ContainerTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.commons.logging.LogConfigurationException: void <init>(java.lang.Throwable)>",
    "<org.apache.commons.cli.HelpFormatter: java.lang.StringBuffer renderOptions(java.lang.StringBuffer,int,org.apache.commons.cli.Options,int,int)>",
    "<org.apache.hadoop.yarn.logaggregation.LogCLIHelpers: int dumpAContainersLogs(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.Session: void connect(int)>",
    "<org.apache.hadoop.yarn.util.YarnVersionInfo: java.lang.String getBuildVersion()>",
    "<org.apache.log4j.helpers.PatternParser$MDCPatternConverter: java.lang.String convert(org.apache.log4j.spi.LoggingEvent)>",
    "<com.google.common.base.Functions$ToStringFunction: java.lang.String apply(java.lang.Object)>",
    "<org.mortbay.jetty.security.SslSocketConnector: java.net.ServerSocket newServerSocket(java.lang.String,int,int)>",
    "<org.apache.hadoop.yarn.webapp.util.WebAppUtils: java.util.List getProxyHostsAndPortsForAmFilter(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: void serviceInit(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.commons.configuration.AbstractConfiguration$1: java.lang.String lookup(java.lang.String)>",
    "<org.apache.hadoop.yarn.security.AdminACLsManager: void <init>(org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.Session: void initInflater(java.lang.String)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ClientSCMProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.Session: void updateKeys(com.jcraft.jsch.KeyExchange)>",
    "<org.apache.commons.configuration.XMLConfiguration$XMLBuilderVisitor: void updateAttribute(org.apache.commons.configuration.HierarchicalConfiguration$Node,org.w3c.dom.Element,java.lang.String,char)>",
    "<org.apache.hadoop.yarn.client.AHSProxy: java.lang.Object getProxy(org.apache.hadoop.conf.Configuration,java.lang.Class,java.net.InetSocketAddress)>",
    "<org.apache.hadoop.yarn.conf.HAUtil: java.util.Collection getRMHAIds(org.apache.hadoop.conf.Configuration)>",
    "<org.mortbay.xml.XmlConfiguration: void set(java.lang.Object,org.mortbay.xml.XmlParser$Node)>",
    "<org.apache.log4j.or.ThreadGroupRenderer: java.lang.String doRender(java.lang.Object)>",
    "<com.jcraft.jsch.KeyPairDSA: void generate(int)>",
    "<org.apache.htrace.commons.logging.LogConfigurationException: void <init>(java.lang.Throwable)>",
    "<org.apache.hadoop.yarn.security.client.RMDelegationTokenIdentifier$Renewer: org.apache.hadoop.yarn.api.ApplicationClientProtocol getRmClient(org.apache.hadoop.security.token.Token,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.util.RMHAUtils: java.util.List getRMHAWebappAddresses(org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<com.google.inject.internal.Initializer$InjectableReference: java.lang.String toString()>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogValue: java.io.FileInputStream secureOpenFile(java.io.File)>",
    "<org.apache.commons.configuration.AbstractConfiguration: java.lang.String interpolate(java.lang.String)>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogReader: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path)>",
    "<org.apache.hadoop.yarn.server.security.ApplicationACLsManager: void <clinit>()>",
    "<org.apache.commons.lang.ObjectUtils: java.lang.String toString(java.lang.Object)>",
    "<net.sf.cglib.core.EmitUtils: void push_object(net.sf.cglib.core.CodeEmitter,java.lang.Object)>",
    "<com.jcraft.jsch.ProxySOCKS4: void connect(com.jcraft.jsch.SocketFactory,java.lang.String,int,int)>",
    "<org.apache.hadoop.yarn.server.api.impl.pb.client.ResourceManagerAdministrationProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.client.ClientRMProxy: void setAMRMTokenService(org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.KeyPair: com.jcraft.jsch.KeyPair load(com.jcraft.jsch.JSch,java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.ProxySOCKS5: void connect(com.jcraft.jsch.SocketFactory,java.lang.String,int,int)>",
    "<org.apache.directory.api.util.OsgiUtils: java.lang.String getBundleExports(java.io.File)>",
    "<org.codehaus.jettison.json.JSONArray: java.lang.String getString(int)>",
    "<com.google.inject.internal.ProcessedBindingData: void initializeBindings()>",
    "<org.jets3t.service.utils.ServiceUtils: java.util.Map cleanRestMetadataMap(java.util.Map,java.lang.String,java.lang.String)>",
    "<org.apache.commons.lang.exception.ExceptionUtils: java.lang.String[] getRootCauseStackTrace(java.lang.Throwable)>",
    "<org.apache.hadoop.yarn.util.WindowsBasedProcessTree: java.lang.String getAllProcessInfoFromShell()>",
    "<javax.xml.bind.ContextFinder: java.util.Properties loadJAXBProperties(java.lang.ClassLoader,java.lang.String)>",
    "<com.jcraft.jsch.IdentityFile: boolean setPassphrase(byte[])>",
    "<org.mortbay.jetty.handler.DebugHandler: void handle(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,int)>",
    "<com.jcraft.jsch.KnownHosts: void setKnownHosts(java.io.InputStream)>",
    "<org.mortbay.xml.XmlConfiguration: java.lang.Object value(java.lang.Object,org.mortbay.xml.XmlParser$Node)>",
    "<org.apache.commons.lang.exception.NestableRuntimeException: java.lang.String getMessage()>",
    "<org.apache.hadoop.yarn.util.RMHAUtils: org.apache.hadoop.ha.HAServiceProtocol$HAServiceState getHAState(org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<org.apache.commons.lang.StringUtils: java.lang.String join(java.lang.Object[],java.lang.String,int,int)>",
    "<com.jcraft.jsch.Session: void initDeflater(java.lang.String)>",
    "<com.jcraft.jsch.Util: java.net.Socket createSocket(java.lang.String,int,int)>",
    "<org.apache.hadoop.yarn.util.YarnVersionInfo: void <init>()>",
    "<com.google.common.collect.SingletonImmutableList: java.lang.String toString()>",
    "<org.codehaus.jettison.json.JSONObject: java.io.Writer write(java.io.Writer)>",
    "<org.mortbay.jetty.Request: void extractParameters()>",
    "<com.jcraft.jsch.ChannelSftp: void _put(java.io.InputStream,java.lang.String,com.jcraft.jsch.SftpProgressMonitor,int)>",
    "<org.codehaus.jettison.mapped.MappedXMLStreamReader: void <init>(org.codehaus.jettison.json.JSONObject,org.codehaus.jettison.mapped.MappedNamespaceConvention)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: long renewDelegationToken(org.apache.hadoop.security.token.Token)>",
    "<org.apache.hadoop.yarn.webapp.view.HtmlBlock: org.apache.hadoop.security.UserGroupInformation getCallerUGI()>",
    "<org.apache.hadoop.yarn.util.RMHAUtils: java.lang.String findActiveRMHAId(org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<org.apache.commons.lang.text.StrLookup$MapStrLookup: java.lang.String lookup(java.lang.String)>",
    "<com.google.inject.spi.Message: java.lang.Object writeReplace()>",
    "<org.apache.hadoop.yarn.webapp.util.WebAppUtils: java.lang.String getResolvedAddress(java.net.InetSocketAddress)>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogWriter$1: org.apache.hadoop.fs.FSDataOutputStream run()>",
    "<com.sun.xml.bind.api.impl.NameConverter$Standard: java.lang.String combine(java.util.List,char)>",
    "<com.jcraft.jsch.ChannelSftp: void start()>",
    "<org.mortbay.jetty.servlet.ServletHandler$Chain: java.lang.String toString()>",
    "<org.jets3t.service.utils.gatekeeper.GatekeeperMessage: void encodeProperty(java.util.Properties,java.lang.String,java.lang.Object)>",
    "<org.apache.hadoop.yarn.conf.YarnConfiguration: java.net.InetSocketAddress getSocketAddr(java.lang.String,java.lang.String,int)>",
    "<com.google.common.util.concurrent.AbstractListeningExecutorService: java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit)>",
    "<org.apache.hadoop.yarn.util.WindowsBasedProcessTree: boolean isAvailable()>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: void cancelDelegationToken(org.apache.hadoop.security.token.Token)>",
    "<org.jets3t.service.model.StorageObject: long getContentLength()>",
    "<org.apache.jute.compiler.generated.Rcc: void main(java.lang.String[])>",
    "<org.apache.hadoop.yarn.util.FSDownload: org.apache.hadoop.fs.Path copy(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)>",
    "<org.apache.htrace.fasterxml.jackson.databind.util.TokenBuffer$Parser: java.lang.String getText()>",
    "<org.apache.avro.generic.GenericData$Array: java.lang.String toString()>",
    "<com.google.inject.internal.util.$ImmutableSet$SingletonImmutableSet: java.lang.String toString()>",
    "<com.jcraft.jsch.IdentityFile: com.jcraft.jsch.IdentityFile newInstance(java.lang.String,java.lang.String,com.jcraft.jsch.JSch)>",
    "<org.apache.commons.io.filefilter.AndFileFilter: java.lang.String toString()>",
    "<org.apache.ignite.yarn.IgniteYarnClient: void setupAppMasterEnv(java.util.Map,org.apache.hadoop.yarn.conf.YarnConfiguration)>",
    "<org.apache.zookeeper.server.quorum.QuorumPeerConfig: void parseProperties(java.util.Properties)>",
    "<org.codehaus.jackson.map.ser.std.RawSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
    "<org.mortbay.jetty.security.HashUserRealm: void loadConfig()>",
    "<com.jcraft.jsch.Channel$1: void flush()>",
    "<org.apache.htrace.fasterxml.jackson.databind.ser.std.RawSerializer: void serialize(java.lang.Object,org.apache.htrace.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.fasterxml.jackson.databind.SerializerProvider)>",
    "<org.apache.hadoop.yarn.client.RMProxy: java.lang.Object getProxy(org.apache.hadoop.conf.Configuration,java.lang.Class,java.net.InetSocketAddress)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: void putTimelineDataInJSONFile(java.lang.String,java.lang.String)>",
    "<org.apache.hadoop.yarn.conf.HAUtil: boolean isHAEnabled(org.apache.hadoop.conf.Configuration)>",
    "<org.apache.hadoop.yarn.api.impl.pb.client.ContainerManagementProtocolPBClientImpl: void <init>(long,java.net.InetSocketAddress,org.apache.hadoop.conf.Configuration)>",
    "<com.jcraft.jsch.IdentityFile: void <init>(java.lang.String,byte[],byte[],com.jcraft.jsch.JSch)>",
    "<com.jcraft.jsch.Session: void setTimeout(int)>",
    "<org.apache.log4j.jmx.Agent: void startServer(java.lang.Object)>",
    "<org.apache.commons.beanutils.BeanComparator: int compare(java.lang.Object,java.lang.Object)>",
    "<org.mortbay.io.bio.StringEndPoint: void setInput(java.lang.String)>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String toString()>",
    "<org.apache.hadoop.yarn.security.NMTokenIdentifier: org.apache.hadoop.security.UserGroupInformation getUser()>",
    "<org.apache.ignite.yarn.ApplicationMaster: void init()>",
    "<org.apache.hadoop.yarn.util.ProcfsBasedProcessTree: void <clinit>()>",
    "<org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat$LogWriter: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,org.apache.hadoop.security.UserGroupInformation)>",
    "<org.mortbay.jetty.security.BasicAuthenticator: java.security.Principal authenticate(org.mortbay.jetty.security.UserRealm,java.lang.String,org.mortbay.jetty.Request,org.mortbay.jetty.Response)>",
    "<org.mortbay.util.LazyList: java.lang.String[] toStringArray(java.lang.Object)>",
    "<com.google.common.base.Joiner: java.lang.CharSequence toString(java.lang.Object)>",
    "<com.google.inject.internal.util.$ImmutableSet: java.lang.String toString()>",
    "<org.apache.commons.lang.exception.NestableException: java.lang.String getMessage()>",
    "<org.apache.ignite.yarn.ApplicationMaster: void onContainersAllocated(java.util.List)>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String valueToString(java.lang.Object)>",
    "<org.apache.htrace.fasterxml.jackson.core.JsonLocation: java.lang.String toString()>",
    "<org.codehaus.jettison.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>",
    "<org.mortbay.xml.XmlParser: void setValidating(boolean)>",
    "<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>",
    "<com.sun.jersey.api.uri.UriTemplate: java.lang.StringBuilder createURIComponent(com.sun.jersey.api.uri.UriComponent$Type,java.lang.String,java.util.Map,boolean,java.lang.StringBuilder)>",
    "<org.apache.commons.lang.builder.ReflectionToStringBuilder: java.lang.String[] toNoNullStringArray(java.lang.Object[])>",
    "<org.apache.htrace.fasterxml.jackson.databind.util.TokenBuffer$Parser: org.apache.htrace.fasterxml.jackson.core.JsonToken nextToken()>",
    "<org.mortbay.jetty.servlet.Invoker: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "<org.apache.hadoop.yarn.conf.HAUtil: boolean isAutomaticFailoverEnabled(org.apache.hadoop.conf.Configuration)>",
    "<org.objectweb.asm.ClassWriter: java.lang.String getCommonSuperClass(java.lang.String,java.lang.String)>",
    "<com.jcraft.jsch.Session: void setPortForwarding(java.lang.String,int)>",
    "<org.apache.hadoop.yarn.client.ClientRMProxy: org.apache.hadoop.io.Text getTokenService(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String,int)>",
    "<org.apache.hadoop.yarn.client.api.impl.TimelineClientImpl: org.apache.hadoop.security.authentication.client.ConnectionConfigurator newSslConnConfigurator(int,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.htrace.fasterxml.jackson.databind.ser.std.ToStringSerializer: void serialize(java.lang.Object,org.apache.htrace.fasterxml.jackson.core.JsonGenerator,org.apache.htrace.fasterxml.jackson.databind.SerializerProvider)>",
    "<javax.xml.bind.JAXBException: java.lang.String toString()>",
    "<org.mortbay.log.StdErrLog: void format(java.lang.Throwable)>",
    "<org.apache.commons.configuration.XMLConfiguration: void handleDelimiters(org.apache.commons.configuration.HierarchicalConfiguration$Node,org.apache.commons.configuration.HierarchicalConfiguration$Node,boolean)>",
    "<org.apache.avro.generic.GenericData: int hashCode(java.lang.Object,org.apache.avro.Schema)>",
    "<org.apache.hadoop.yarn.security.ConfiguredYarnAuthorizer: void init(org.apache.hadoop.conf.Configuration)>"
  ]
}