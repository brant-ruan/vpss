{
  "1.25.16": [
    "<com.ikzen.mapreduce.tool.GetMongoDbDataTool: void main(java.lang.String[])>",
    "<com.ikzen.mapreduce.input.ZipFileLineRecordReader: void initialize(org.apache.hadoop.mapreduce.InputSplit,org.apache.hadoop.mapreduce.TaskAttemptContext)>",
    "<com.ikzen.mapreduce.input.ChangePartitionTableLocationRecordReader: void initialize(org.apache.hadoop.mapreduce.InputSplit,org.apache.hadoop.mapreduce.TaskAttemptContext)>",
    "<com.ikzen.mapreduce.tool.GetJsonDataTool: void main(java.lang.String[])>",
    "<com.ikzen.spark.DataUpdater: void main(java.lang.String[])>",
    "<com.ikzen.mapreduce.tool.ChangeTableLocationTool: void addHiveDelegationToken(org.apache.hadoop.security.Credentials,java.lang.String,java.lang.String)>",
    "<com.ikzen.mapreduce.input.HiveZipFileLineRecordReader: void <init>(org.apache.hadoop.mapred.FileSplit,org.apache.hadoop.mapred.JobConf)>",
    "<com.ikzen.mapreduce.tool.ExportTableDataTool: void addHiveDelegationToken(org.apache.hadoop.security.Credentials,java.lang.String,java.lang.String)>",
    "<com.ikzen.mapreduce.tool.UpdateDataTool: void addHiveDelegationToken(org.apache.hadoop.security.Credentials,java.lang.String,java.lang.String)>",
    "<com.ikzen.mapreduce.input.DirLineInputRecordReader: void initialize(org.apache.hadoop.mapreduce.InputSplit,org.apache.hadoop.mapreduce.TaskAttemptContext)>",
    "<com.ikzen.mapreduce.tool.ChangePartitionTableLocationTool: void main(java.lang.String[])>",
    "<com.ikzen.mapreduce.tool.PartitionDataTool: void addHiveDelegationToken(org.apache.hadoop.security.Credentials,java.lang.String,java.lang.String)>",
    "<com.ikzen.mapreduce.tool.ChangePartitionTableLocationTool: void addHiveDelegationToken(org.apache.hadoop.security.Credentials,java.lang.String,java.lang.String)>",
    "<com.ikzen.mapreduce.input.ZipFileXMLRecordReader: void initialize(org.apache.hadoop.mapreduce.InputSplit,org.apache.hadoop.mapreduce.TaskAttemptContext)>",
    "<com.ikzen.mapreduce.tool.MongoDbToElasticsearchTool: void main(java.lang.String[])>",
    "<com.ikzen.utils.CleanAndOptimize: void cleanAndOptimizeResources()>",
    "<com.ikzen.mapreduce.tool.UpdateDataTool: void main(java.lang.String[])>",
    "<com.ikzen.mapreduce.mapper.UpdateData: void setup(org.apache.hadoop.mapreduce.Mapper$Context)>",
    "<com.ikzen.demo.GetStockQuote: void main(java.lang.String[])>",
    "<com.ikzen.mapreduce.tool.ExportTableDataTool: void main(java.lang.String[])>",
    "<com.ikzen.spark.DataUpdater: void cleanup(java.lang.String)>",
    "<com.ikzen.mapreduce.input.DirFileInputRecordReader: void initialize(org.apache.hadoop.mapreduce.InputSplit,org.apache.hadoop.mapreduce.TaskAttemptContext)>",
    "<com.ikzen.mapreduce.input.JsonDirLineInputRecordReader: void initialize(org.apache.hadoop.mapreduce.InputSplit,org.apache.hadoop.mapreduce.TaskAttemptContext)>",
    "<com.ikzen.mapreduce.input.UpdateDataRecordReader: void initialize(org.apache.hadoop.mapreduce.InputSplit,org.apache.hadoop.mapreduce.TaskAttemptContext)>",
    "<com.ikzen.mapreduce.input.BZip2DirLineInputRecordReader: void initialize(org.apache.hadoop.mapreduce.InputSplit,org.apache.hadoop.mapreduce.TaskAttemptContext)>",
    "<com.ikzen.mapreduce.tool.ChangeTableLocationTool: void main(java.lang.String[])>",
    "<com.ikzen.mapreduce.tool.PartitionDataTool: void main(java.lang.String[])>",
    "<com.ikzen.spark.DataUpdater: void map(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer[],java.lang.Long,java.lang.Long,java.lang.String,java.lang.String,java.lang.Double)>",
    "<com.ikzen.mapreduce.input.BZip2TarDirLineInputRecordReader: void initialize(org.apache.hadoop.mapreduce.InputSplit,org.apache.hadoop.mapreduce.TaskAttemptContext)>",
    "<com.ikzen.mapreduce.mapper.PartitionData: void setup(org.apache.hadoop.mapreduce.Mapper$Context)>",
    "<com.ikzen.mapreduce.input.ZipFileRecordReader: void initialize(org.apache.hadoop.mapreduce.InputSplit,org.apache.hadoop.mapreduce.TaskAttemptContext)>",
    "<com.ikzen.spark.DataProcessor: void main(java.lang.String[])>",
    "<com.ikzen.spark.DataProcessor: java.io.DataOutputStream nextZipFile(java.lang.String,int,java.lang.String,int,long)>"
  ]
}