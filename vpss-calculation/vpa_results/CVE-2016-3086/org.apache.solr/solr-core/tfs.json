{
  "6.2.1": [
    "<org.apache.solr.core.HdfsDirectoryFactory: long size(java.lang.String)>",
    "<org.apache.solr.update.HdfsUpdateLog: void init(org.apache.solr.update.UpdateHandler,org.apache.solr.core.SolrCore)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: org.apache.hadoop.fs.FileSystem lambda$removeDirectory$1(org.apache.solr.core.CachingDirectoryFactory$CacheValue,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.store.hdfs.HdfsDirectory: void <init>(org.apache.hadoop.fs.Path,org.apache.lucene.store.LockFactory,org.apache.hadoop.conf.Configuration,int)>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory: org.apache.lucene.store.Lock obtainLock(org.apache.lucene.store.Directory,java.lang.String)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: org.apache.hadoop.fs.FileSystem lambda$cleanupOldIndexDirectories$2(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: void initKerberos()>",
    "<org.apache.solr.core.backup.repository.HdfsBackupRepository: void init(org.apache.solr.common.util.NamedList)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: org.apache.hadoop.fs.FileSystem lambda$exists$0(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory$HdfsLock: void close()>"
  ],
  "6.3.0": [
    "<org.apache.solr.core.HdfsDirectoryFactory: long size(java.lang.String)>",
    "<org.apache.solr.update.HdfsUpdateLog: void init(org.apache.solr.update.UpdateHandler,org.apache.solr.core.SolrCore)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: org.apache.hadoop.fs.FileSystem lambda$removeDirectory$1(org.apache.solr.core.CachingDirectoryFactory$CacheValue,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.store.hdfs.HdfsDirectory: void <init>(org.apache.hadoop.fs.Path,org.apache.lucene.store.LockFactory,org.apache.hadoop.conf.Configuration,int)>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory: org.apache.lucene.store.Lock obtainLock(org.apache.lucene.store.Directory,java.lang.String)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: org.apache.hadoop.fs.FileSystem lambda$cleanupOldIndexDirectories$2(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: void initKerberos()>",
    "<org.apache.solr.core.backup.repository.HdfsBackupRepository: void init(org.apache.solr.common.util.NamedList)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: org.apache.hadoop.fs.FileSystem lambda$exists$0(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory$HdfsLock: void close()>"
  ],
  "6.4.1": [
    "<org.apache.solr.core.HdfsDirectoryFactory: long size(java.lang.String)>",
    "<org.apache.solr.update.HdfsUpdateLog: void init(org.apache.solr.update.UpdateHandler,org.apache.solr.core.SolrCore)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: org.apache.hadoop.fs.FileSystem lambda$removeDirectory$1(org.apache.solr.core.CachingDirectoryFactory$CacheValue,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.store.hdfs.HdfsDirectory: void <init>(org.apache.hadoop.fs.Path,org.apache.lucene.store.LockFactory,org.apache.hadoop.conf.Configuration,int)>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory: org.apache.lucene.store.Lock obtainLock(org.apache.lucene.store.Directory,java.lang.String)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: org.apache.hadoop.fs.FileSystem lambda$cleanupOldIndexDirectories$2(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: void move(org.apache.lucene.store.Directory,org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.store.IOContext)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: void initKerberos()>",
    "<org.apache.solr.core.backup.repository.HdfsBackupRepository: void init(org.apache.solr.common.util.NamedList)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: org.apache.hadoop.fs.FileSystem lambda$exists$0(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory$HdfsLock: void close()>",
    "<org.apache.solr.core.HdfsDirectoryFactory: void renameWithOverwrite(org.apache.lucene.store.Directory,java.lang.String,java.lang.String)>"
  ],
  "6.4.2": [
    "<org.apache.solr.core.HdfsDirectoryFactory: long size(java.lang.String)>",
    "<org.apache.solr.update.HdfsUpdateLog: void init(org.apache.solr.update.UpdateHandler,org.apache.solr.core.SolrCore)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: org.apache.hadoop.fs.FileSystem lambda$removeDirectory$1(org.apache.solr.core.CachingDirectoryFactory$CacheValue,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.store.hdfs.HdfsDirectory: void <init>(org.apache.hadoop.fs.Path,org.apache.lucene.store.LockFactory,org.apache.hadoop.conf.Configuration,int)>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory: org.apache.lucene.store.Lock obtainLock(org.apache.lucene.store.Directory,java.lang.String)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: org.apache.hadoop.fs.FileSystem lambda$cleanupOldIndexDirectories$2(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: void move(org.apache.lucene.store.Directory,org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.store.IOContext)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: void initKerberos()>",
    "<org.apache.solr.core.backup.repository.HdfsBackupRepository: void init(org.apache.solr.common.util.NamedList)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: org.apache.hadoop.fs.FileSystem lambda$exists$0(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory$HdfsLock: void close()>",
    "<org.apache.solr.core.HdfsDirectoryFactory: void renameWithOverwrite(org.apache.lucene.store.Directory,java.lang.String,java.lang.String)>"
  ],
  "6.5.1": [
    "<org.apache.solr.core.HdfsDirectoryFactory: long size(java.lang.String)>",
    "<org.apache.solr.update.HdfsUpdateLog: void init(org.apache.solr.update.UpdateHandler,org.apache.solr.core.SolrCore)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: org.apache.hadoop.fs.FileSystem lambda$removeDirectory$1(org.apache.solr.core.CachingDirectoryFactory$CacheValue,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.store.hdfs.HdfsDirectory: void <init>(org.apache.hadoop.fs.Path,org.apache.lucene.store.LockFactory,org.apache.hadoop.conf.Configuration,int)>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory: org.apache.lucene.store.Lock obtainLock(org.apache.lucene.store.Directory,java.lang.String)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: org.apache.hadoop.fs.FileSystem lambda$cleanupOldIndexDirectories$2(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: void move(org.apache.lucene.store.Directory,org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.store.IOContext)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: void initKerberos()>",
    "<org.apache.solr.core.backup.repository.HdfsBackupRepository: void init(org.apache.solr.common.util.NamedList)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: org.apache.hadoop.fs.FileSystem lambda$exists$0(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory$HdfsLock: void close()>",
    "<org.apache.solr.core.HdfsDirectoryFactory: void renameWithOverwrite(org.apache.lucene.store.Directory,java.lang.String,java.lang.String)>"
  ],
  "6.2.0": [
    "<org.apache.solr.core.HdfsDirectoryFactory: long size(java.lang.String)>",
    "<org.apache.solr.update.HdfsUpdateLog: void init(org.apache.solr.update.UpdateHandler,org.apache.solr.core.SolrCore)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: org.apache.hadoop.fs.FileSystem lambda$removeDirectory$1(org.apache.solr.core.CachingDirectoryFactory$CacheValue,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.store.hdfs.HdfsDirectory: void <init>(org.apache.hadoop.fs.Path,org.apache.lucene.store.LockFactory,org.apache.hadoop.conf.Configuration,int)>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory: org.apache.lucene.store.Lock obtainLock(org.apache.lucene.store.Directory,java.lang.String)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: org.apache.hadoop.fs.FileSystem lambda$cleanupOldIndexDirectories$2(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: void initKerberos()>",
    "<org.apache.solr.core.backup.repository.HdfsBackupRepository: void init(org.apache.solr.common.util.NamedList)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: org.apache.hadoop.fs.FileSystem lambda$exists$0(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory$HdfsLock: void close()>"
  ],
  "6.5.0": [
    "<org.apache.solr.core.HdfsDirectoryFactory: long size(java.lang.String)>",
    "<org.apache.solr.update.HdfsUpdateLog: void init(org.apache.solr.update.UpdateHandler,org.apache.solr.core.SolrCore)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: org.apache.hadoop.fs.FileSystem lambda$removeDirectory$1(org.apache.solr.core.CachingDirectoryFactory$CacheValue,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.store.hdfs.HdfsDirectory: void <init>(org.apache.hadoop.fs.Path,org.apache.lucene.store.LockFactory,org.apache.hadoop.conf.Configuration,int)>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory: org.apache.lucene.store.Lock obtainLock(org.apache.lucene.store.Directory,java.lang.String)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: org.apache.hadoop.fs.FileSystem lambda$cleanupOldIndexDirectories$2(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: void move(org.apache.lucene.store.Directory,org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.store.IOContext)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: void initKerberos()>",
    "<org.apache.solr.core.backup.repository.HdfsBackupRepository: void init(org.apache.solr.common.util.NamedList)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: org.apache.hadoop.fs.FileSystem lambda$exists$0(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory$HdfsLock: void close()>",
    "<org.apache.solr.core.HdfsDirectoryFactory: void renameWithOverwrite(org.apache.lucene.store.Directory,java.lang.String,java.lang.String)>"
  ],
  "6.6.0": [
    "<org.apache.solr.core.HdfsDirectoryFactory: long size(java.lang.String)>",
    "<org.apache.solr.update.HdfsUpdateLog: void init(org.apache.solr.update.UpdateHandler,org.apache.solr.core.SolrCore)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: org.apache.hadoop.fs.FileSystem lambda$removeDirectory$1(org.apache.solr.core.CachingDirectoryFactory$CacheValue,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.store.hdfs.HdfsDirectory: void <init>(org.apache.hadoop.fs.Path,org.apache.lucene.store.LockFactory,org.apache.hadoop.conf.Configuration,int)>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory: org.apache.lucene.store.Lock obtainLock(org.apache.lucene.store.Directory,java.lang.String)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: org.apache.hadoop.fs.FileSystem lambda$cleanupOldIndexDirectories$2(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: void move(org.apache.lucene.store.Directory,org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.store.IOContext)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: void initKerberos()>",
    "<org.apache.solr.core.backup.repository.HdfsBackupRepository: void init(org.apache.solr.common.util.NamedList)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: org.apache.hadoop.fs.FileSystem lambda$exists$0(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory$HdfsLock: void close()>",
    "<org.apache.solr.core.HdfsDirectoryFactory: void renameWithOverwrite(org.apache.lucene.store.Directory,java.lang.String,java.lang.String)>"
  ],
  "6.4.0": [
    "<org.apache.solr.core.HdfsDirectoryFactory: long size(java.lang.String)>",
    "<org.apache.solr.update.HdfsUpdateLog: void init(org.apache.solr.update.UpdateHandler,org.apache.solr.core.SolrCore)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: org.apache.hadoop.fs.FileSystem lambda$removeDirectory$1(org.apache.solr.core.CachingDirectoryFactory$CacheValue,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.store.hdfs.HdfsDirectory: void <init>(org.apache.hadoop.fs.Path,org.apache.lucene.store.LockFactory,org.apache.hadoop.conf.Configuration,int)>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory: org.apache.lucene.store.Lock obtainLock(org.apache.lucene.store.Directory,java.lang.String)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: org.apache.hadoop.fs.FileSystem lambda$cleanupOldIndexDirectories$2(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: void move(org.apache.lucene.store.Directory,org.apache.lucene.store.Directory,java.lang.String,org.apache.lucene.store.IOContext)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: void initKerberos()>",
    "<org.apache.solr.core.backup.repository.HdfsBackupRepository: void init(org.apache.solr.common.util.NamedList)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: org.apache.hadoop.fs.FileSystem lambda$exists$0(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory$HdfsLock: void close()>",
    "<org.apache.solr.core.HdfsDirectoryFactory: void renameWithOverwrite(org.apache.lucene.store.Directory,java.lang.String,java.lang.String)>"
  ],
  "5.3.0": [
    "<org.apache.solr.store.hdfs.HdfsDirectory: void <init>(org.apache.hadoop.fs.Path,org.apache.lucene.store.LockFactory,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.core.HdfsDirectoryFactory$3: org.apache.hadoop.fs.FileSystem call()>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory: org.apache.lucene.store.Lock obtainLock(org.apache.lucene.store.Directory,java.lang.String)>",
    "<org.apache.solr.core.HdfsDirectoryFactory$4: org.apache.hadoop.fs.FileSystem call()>",
    "<org.apache.solr.core.HdfsDirectoryFactory: void initKerberos()>",
    "<org.apache.solr.core.HdfsDirectoryFactory$2: org.apache.hadoop.fs.FileSystem call()>",
    "<org.apache.solr.update.HdfsUpdateLog: void init(org.apache.solr.update.UpdateHandler,org.apache.solr.core.SolrCore)>"
  ],
  "5.5.4": [
    "<org.apache.solr.store.hdfs.HdfsDirectory: void <init>(org.apache.hadoop.fs.Path,org.apache.lucene.store.LockFactory,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.update.HdfsUpdateLog: void init(org.apache.solr.update.UpdateHandler,org.apache.solr.core.SolrCore)>",
    "<org.apache.solr.core.HdfsDirectoryFactory$3: org.apache.hadoop.fs.FileSystem call()>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory: org.apache.lucene.store.Lock obtainLock(org.apache.lucene.store.Directory,java.lang.String)>",
    "<org.apache.solr.core.HdfsDirectoryFactory$4: org.apache.hadoop.fs.FileSystem call()>",
    "<org.apache.solr.core.HdfsDirectoryFactory: void initKerberos()>",
    "<org.apache.solr.core.HdfsDirectoryFactory$2: org.apache.hadoop.fs.FileSystem call()>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory$HdfsLock: void close()>"
  ],
  "6.0.0": [
    "<org.apache.solr.store.hdfs.HdfsDirectory: void <init>(org.apache.hadoop.fs.Path,org.apache.lucene.store.LockFactory,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.update.HdfsUpdateLog: void init(org.apache.solr.update.UpdateHandler,org.apache.solr.core.SolrCore)>",
    "<org.apache.solr.core.HdfsDirectoryFactory$3: org.apache.hadoop.fs.FileSystem call()>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory: org.apache.lucene.store.Lock obtainLock(org.apache.lucene.store.Directory,java.lang.String)>",
    "<org.apache.solr.core.HdfsDirectoryFactory$4: org.apache.hadoop.fs.FileSystem call()>",
    "<org.apache.solr.core.HdfsDirectoryFactory: void initKerberos()>",
    "<org.apache.solr.core.HdfsDirectoryFactory$2: org.apache.hadoop.fs.FileSystem call()>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory$HdfsLock: void close()>"
  ],
  "5.1.0": [
    "<org.apache.solr.store.hdfs.HdfsLockFactory$HdfsLock: boolean obtain()>",
    "<org.apache.solr.store.hdfs.HdfsDirectory: void <init>(org.apache.hadoop.fs.Path,org.apache.lucene.store.LockFactory,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.update.HdfsUpdateLog: void init(org.apache.solr.update.UpdateHandler,org.apache.solr.core.SolrCore)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: void removeDirectory(org.apache.solr.core.CachingDirectoryFactory$CacheValue)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: void initKerberos()>",
    "<org.apache.solr.core.HdfsDirectoryFactory: boolean exists(java.lang.String)>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory$HdfsLock: boolean isLocked()>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory$HdfsLock: void close()>"
  ],
  "5.5.3": [
    "<org.apache.solr.store.hdfs.HdfsDirectory: void <init>(org.apache.hadoop.fs.Path,org.apache.lucene.store.LockFactory,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.update.HdfsUpdateLog: void init(org.apache.solr.update.UpdateHandler,org.apache.solr.core.SolrCore)>",
    "<org.apache.solr.core.HdfsDirectoryFactory$3: org.apache.hadoop.fs.FileSystem call()>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory: org.apache.lucene.store.Lock obtainLock(org.apache.lucene.store.Directory,java.lang.String)>",
    "<org.apache.solr.core.HdfsDirectoryFactory$4: org.apache.hadoop.fs.FileSystem call()>",
    "<org.apache.solr.core.HdfsDirectoryFactory: void initKerberos()>",
    "<org.apache.solr.core.HdfsDirectoryFactory$2: org.apache.hadoop.fs.FileSystem call()>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory$HdfsLock: void close()>"
  ],
  "5.5.5": [
    "<org.apache.solr.store.hdfs.HdfsDirectory: void <init>(org.apache.hadoop.fs.Path,org.apache.lucene.store.LockFactory,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.update.HdfsUpdateLog: void init(org.apache.solr.update.UpdateHandler,org.apache.solr.core.SolrCore)>",
    "<org.apache.solr.core.HdfsDirectoryFactory$3: org.apache.hadoop.fs.FileSystem call()>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory: org.apache.lucene.store.Lock obtainLock(org.apache.lucene.store.Directory,java.lang.String)>",
    "<org.apache.solr.core.HdfsDirectoryFactory$4: org.apache.hadoop.fs.FileSystem call()>",
    "<org.apache.solr.core.HdfsDirectoryFactory: void initKerberos()>",
    "<org.apache.solr.core.HdfsDirectoryFactory$2: org.apache.hadoop.fs.FileSystem call()>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory$HdfsLock: void close()>"
  ],
  "5.2.1": [
    "<org.apache.solr.store.hdfs.HdfsLockFactory$HdfsLock: boolean obtain()>",
    "<org.apache.solr.store.hdfs.HdfsDirectory: void <init>(org.apache.hadoop.fs.Path,org.apache.lucene.store.LockFactory,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.update.HdfsUpdateLog: void init(org.apache.solr.update.UpdateHandler,org.apache.solr.core.SolrCore)>",
    "<org.apache.solr.core.HdfsDirectoryFactory$3: org.apache.hadoop.fs.FileSystem call()>",
    "<org.apache.solr.core.HdfsDirectoryFactory: void initKerberos()>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory$HdfsLock: boolean isLocked()>",
    "<org.apache.solr.core.HdfsDirectoryFactory$2: org.apache.hadoop.fs.FileSystem call()>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory$HdfsLock: void close()>"
  ],
  "5.3.2": [
    "<org.apache.solr.store.hdfs.HdfsDirectory: void <init>(org.apache.hadoop.fs.Path,org.apache.lucene.store.LockFactory,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.core.HdfsDirectoryFactory$3: org.apache.hadoop.fs.FileSystem call()>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory: org.apache.lucene.store.Lock obtainLock(org.apache.lucene.store.Directory,java.lang.String)>",
    "<org.apache.solr.core.HdfsDirectoryFactory$4: org.apache.hadoop.fs.FileSystem call()>",
    "<org.apache.solr.core.HdfsDirectoryFactory: void initKerberos()>",
    "<org.apache.solr.core.HdfsDirectoryFactory$2: org.apache.hadoop.fs.FileSystem call()>",
    "<org.apache.solr.update.HdfsUpdateLog: void init(org.apache.solr.update.UpdateHandler,org.apache.solr.core.SolrCore)>"
  ],
  "5.2.0": [
    "<org.apache.solr.store.hdfs.HdfsLockFactory$HdfsLock: boolean obtain()>",
    "<org.apache.solr.store.hdfs.HdfsDirectory: void <init>(org.apache.hadoop.fs.Path,org.apache.lucene.store.LockFactory,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.update.HdfsUpdateLog: void init(org.apache.solr.update.UpdateHandler,org.apache.solr.core.SolrCore)>",
    "<org.apache.solr.core.HdfsDirectoryFactory$3: org.apache.hadoop.fs.FileSystem call()>",
    "<org.apache.solr.core.HdfsDirectoryFactory: void initKerberos()>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory$HdfsLock: boolean isLocked()>",
    "<org.apache.solr.core.HdfsDirectoryFactory$2: org.apache.hadoop.fs.FileSystem call()>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory$HdfsLock: void close()>"
  ],
  "6.0.1": [
    "<org.apache.solr.store.hdfs.HdfsDirectory: void <init>(org.apache.hadoop.fs.Path,org.apache.lucene.store.LockFactory,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.update.HdfsUpdateLog: void init(org.apache.solr.update.UpdateHandler,org.apache.solr.core.SolrCore)>",
    "<org.apache.solr.core.HdfsDirectoryFactory$3: org.apache.hadoop.fs.FileSystem call()>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory: org.apache.lucene.store.Lock obtainLock(org.apache.lucene.store.Directory,java.lang.String)>",
    "<org.apache.solr.core.HdfsDirectoryFactory$4: org.apache.hadoop.fs.FileSystem call()>",
    "<org.apache.solr.core.HdfsDirectoryFactory: void initKerberos()>",
    "<org.apache.solr.core.HdfsDirectoryFactory$2: org.apache.hadoop.fs.FileSystem call()>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory$HdfsLock: void close()>"
  ],
  "5.5.0": [
    "<org.apache.solr.store.hdfs.HdfsDirectory: void <init>(org.apache.hadoop.fs.Path,org.apache.lucene.store.LockFactory,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.update.HdfsUpdateLog: void init(org.apache.solr.update.UpdateHandler,org.apache.solr.core.SolrCore)>",
    "<org.apache.solr.core.HdfsDirectoryFactory$3: org.apache.hadoop.fs.FileSystem call()>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory: org.apache.lucene.store.Lock obtainLock(org.apache.lucene.store.Directory,java.lang.String)>",
    "<org.apache.solr.core.HdfsDirectoryFactory$4: org.apache.hadoop.fs.FileSystem call()>",
    "<org.apache.solr.core.HdfsDirectoryFactory: void initKerberos()>",
    "<org.apache.solr.core.HdfsDirectoryFactory$2: org.apache.hadoop.fs.FileSystem call()>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory$HdfsLock: void close()>"
  ],
  "6.1.0": [
    "<org.apache.solr.store.hdfs.HdfsDirectory: void <init>(org.apache.hadoop.fs.Path,org.apache.lucene.store.LockFactory,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.update.HdfsUpdateLog: void init(org.apache.solr.update.UpdateHandler,org.apache.solr.core.SolrCore)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: org.apache.hadoop.fs.FileSystem lambda$removeDirectory$56(org.apache.solr.core.CachingDirectoryFactory$CacheValue,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: org.apache.hadoop.fs.FileSystem lambda$cleanupOldIndexDirectories$57(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory: org.apache.lucene.store.Lock obtainLock(org.apache.lucene.store.Directory,java.lang.String)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: org.apache.hadoop.fs.FileSystem lambda$exists$55(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.core.HdfsDirectoryFactory: void initKerberos()>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory$HdfsLock: void close()>"
  ],
  "5.5.1": [
    "<org.apache.solr.store.hdfs.HdfsDirectory: void <init>(org.apache.hadoop.fs.Path,org.apache.lucene.store.LockFactory,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.update.HdfsUpdateLog: void init(org.apache.solr.update.UpdateHandler,org.apache.solr.core.SolrCore)>",
    "<org.apache.solr.core.HdfsDirectoryFactory$3: org.apache.hadoop.fs.FileSystem call()>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory: org.apache.lucene.store.Lock obtainLock(org.apache.lucene.store.Directory,java.lang.String)>",
    "<org.apache.solr.core.HdfsDirectoryFactory$4: org.apache.hadoop.fs.FileSystem call()>",
    "<org.apache.solr.core.HdfsDirectoryFactory: void initKerberos()>",
    "<org.apache.solr.core.HdfsDirectoryFactory$2: org.apache.hadoop.fs.FileSystem call()>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory$HdfsLock: void close()>"
  ],
  "5.4.0": [
    "<org.apache.solr.store.hdfs.HdfsDirectory: void <init>(org.apache.hadoop.fs.Path,org.apache.lucene.store.LockFactory,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.core.HdfsDirectoryFactory$3: org.apache.hadoop.fs.FileSystem call()>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory: org.apache.lucene.store.Lock obtainLock(org.apache.lucene.store.Directory,java.lang.String)>",
    "<org.apache.solr.core.HdfsDirectoryFactory$4: org.apache.hadoop.fs.FileSystem call()>",
    "<org.apache.solr.core.HdfsDirectoryFactory: void initKerberos()>",
    "<org.apache.solr.core.HdfsDirectoryFactory$2: org.apache.hadoop.fs.FileSystem call()>",
    "<org.apache.solr.update.HdfsUpdateLog: void init(org.apache.solr.update.UpdateHandler,org.apache.solr.core.SolrCore)>"
  ],
  "5.3.1": [
    "<org.apache.solr.store.hdfs.HdfsDirectory: void <init>(org.apache.hadoop.fs.Path,org.apache.lucene.store.LockFactory,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.core.HdfsDirectoryFactory$3: org.apache.hadoop.fs.FileSystem call()>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory: org.apache.lucene.store.Lock obtainLock(org.apache.lucene.store.Directory,java.lang.String)>",
    "<org.apache.solr.core.HdfsDirectoryFactory$4: org.apache.hadoop.fs.FileSystem call()>",
    "<org.apache.solr.core.HdfsDirectoryFactory: void initKerberos()>",
    "<org.apache.solr.core.HdfsDirectoryFactory$2: org.apache.hadoop.fs.FileSystem call()>",
    "<org.apache.solr.update.HdfsUpdateLog: void init(org.apache.solr.update.UpdateHandler,org.apache.solr.core.SolrCore)>"
  ],
  "5.5.2": [
    "<org.apache.solr.store.hdfs.HdfsDirectory: void <init>(org.apache.hadoop.fs.Path,org.apache.lucene.store.LockFactory,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.update.HdfsUpdateLog: void init(org.apache.solr.update.UpdateHandler,org.apache.solr.core.SolrCore)>",
    "<org.apache.solr.core.HdfsDirectoryFactory$3: org.apache.hadoop.fs.FileSystem call()>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory: org.apache.lucene.store.Lock obtainLock(org.apache.lucene.store.Directory,java.lang.String)>",
    "<org.apache.solr.core.HdfsDirectoryFactory$4: org.apache.hadoop.fs.FileSystem call()>",
    "<org.apache.solr.core.HdfsDirectoryFactory: void initKerberos()>",
    "<org.apache.solr.core.HdfsDirectoryFactory$2: org.apache.hadoop.fs.FileSystem call()>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory$HdfsLock: void close()>"
  ],
  "5.4.1": [
    "<org.apache.solr.store.hdfs.HdfsDirectory: void <init>(org.apache.hadoop.fs.Path,org.apache.lucene.store.LockFactory,org.apache.hadoop.conf.Configuration)>",
    "<org.apache.solr.core.HdfsDirectoryFactory$3: org.apache.hadoop.fs.FileSystem call()>",
    "<org.apache.solr.store.hdfs.HdfsLockFactory: org.apache.lucene.store.Lock obtainLock(org.apache.lucene.store.Directory,java.lang.String)>",
    "<org.apache.solr.core.HdfsDirectoryFactory$4: org.apache.hadoop.fs.FileSystem call()>",
    "<org.apache.solr.core.HdfsDirectoryFactory: void initKerberos()>",
    "<org.apache.solr.core.HdfsDirectoryFactory$2: org.apache.hadoop.fs.FileSystem call()>",
    "<org.apache.solr.update.HdfsUpdateLog: void init(org.apache.solr.update.UpdateHandler,org.apache.solr.core.SolrCore)>"
  ]
}