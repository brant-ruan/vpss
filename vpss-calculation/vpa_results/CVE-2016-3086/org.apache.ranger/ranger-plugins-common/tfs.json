{
  "0.6.3": [
    "<org.apache.hadoop.security.SecureClientLogin: java.security.Principal createUserPrincipal(java.lang.String)>",
    "<org.apache.hadoop.security.SecureClientLogin: javax.security.auth.Subject login(java.lang.String)>",
    "<org.apache.ranger.admin.client.RangerAdminRESTClient: org.apache.ranger.plugin.util.ServicePolicies getServicePoliciesIfUpdated(long)>",
    "<org.apache.ranger.plugin.service.RangerBasePlugin: void init()>",
    "<org.apache.ranger.admin.client.RangerAdminRESTClient: void grantAccess(org.apache.ranger.plugin.util.GrantRevokeRequest)>",
    "<org.apache.ranger.admin.client.RangerAdminRESTClient: org.apache.ranger.plugin.util.ServiceTags getServiceTagsIfUpdated(long)>",
    "<org.apache.ranger.admin.client.RangerAdminRESTClient: java.util.List getTagTypes(java.lang.String)>",
    "<org.apache.ranger.admin.client.RangerAdminRESTClient: void revokeAccess(org.apache.ranger.plugin.util.GrantRevokeRequest)>",
    "<org.apache.ranger.plugin.store.rest.ServiceRESTStore: org.apache.ranger.plugin.util.ServicePolicies getServicePoliciesIfUpdated(java.lang.String,java.lang.Long)>",
    "<org.apache.hadoop.security.SecureClientLogin: javax.security.auth.Subject loginUserFromKeytab(java.lang.String,java.lang.String)>",
    "<org.apache.hadoop.security.SecureClientLogin: javax.security.auth.Subject loginUserFromKeytab(java.lang.String,java.lang.String,java.lang.String)>",
    "<org.apache.ranger.plugin.store.EmbeddedServiceDefsUtil: void init(org.apache.ranger.plugin.store.ServiceStore)>",
    "<org.apache.hadoop.security.SecureClientLogin: javax.security.auth.Subject loginUserWithPassword(java.lang.String,java.lang.String)>"
  ],
  "1.2.0": [
    "<org.apache.hadoop.security.SecureClientLogin: java.security.Principal createUserPrincipal(java.lang.String)>",
    "<org.apache.hadoop.security.SecureClientLogin: javax.security.auth.Subject login(java.lang.String)>",
    "<org.apache.ranger.plugin.store.AbstractServiceStore: boolean updateTagServiceDefForUpdatingRowFilterDef(org.apache.ranger.plugin.model.RangerServiceDef,org.apache.ranger.plugin.model.RangerServiceDef,long,java.lang.String)>",
    "<org.apache.ranger.plugin.service.RangerBasePlugin: void init()>",
    "<org.apache.hadoop.security.SecureClientLogin: javax.security.auth.Subject loginUserWithPassword(java.lang.String,java.lang.String)>",
    "<org.apache.hadoop.security.SecureClientLogin: javax.security.auth.Subject loginUserFromKeytab(java.lang.String,java.lang.String,java.lang.String)>",
    "<org.apache.ranger.admin.client.RangerAdminRESTClient: org.apache.ranger.plugin.util.ServiceTags getServiceTagsIfUpdated(long,long)>",
    "<org.apache.ranger.admin.client.RangerAdminRESTClient: void grantAccess(org.apache.ranger.plugin.util.GrantRevokeRequest)>",
    "<org.apache.ranger.admin.client.RangerAdminRESTClient: java.util.List getTagTypes(java.lang.String)>",
    "<org.apache.ranger.admin.client.RangerAdminRESTClient: void revokeAccess(org.apache.ranger.plugin.util.GrantRevokeRequest)>",
    "<org.apache.ranger.plugin.util.ServiceDefUtil: boolean getOption_enableDenyAndExceptionsInPolicies(org.apache.ranger.plugin.model.RangerServiceDef)>",
    "<org.apache.ranger.plugin.util.PolicyRefresher: void <init>(org.apache.ranger.plugin.service.RangerBasePlugin,java.lang.String,java.lang.String,java.lang.String,org.apache.ranger.admin.client.RangerAdminClient,long,java.lang.String)>",
    "<org.apache.hadoop.security.SecureClientLogin: javax.security.auth.Subject loginUserFromKeytab(java.lang.String,java.lang.String)>",
    "<org.apache.ranger.plugin.store.AbstractServiceStore: boolean updateResourceInTagServiceDef(org.apache.ranger.plugin.model.RangerServiceDef)>",
    "<org.apache.ranger.plugin.store.EmbeddedServiceDefsUtil: void init(org.apache.ranger.plugin.store.ServiceStore)>",
    "<org.apache.ranger.admin.client.RangerAdminRESTClient: org.apache.ranger.plugin.util.ServicePolicies getServicePoliciesIfUpdated(long,long)>",
    "<org.apache.ranger.plugin.contextenricher.RangerTagEnricher: void init()>"
  ],
  "0.7.0": [
    "<org.apache.hadoop.security.SecureClientLogin: java.security.Principal createUserPrincipal(java.lang.String)>",
    "<org.apache.hadoop.security.SecureClientLogin: javax.security.auth.Subject login(java.lang.String)>",
    "<org.apache.ranger.plugin.service.RangerBasePlugin: void init()>",
    "<org.apache.hadoop.security.SecureClientLogin: javax.security.auth.Subject loginUserWithPassword(java.lang.String,java.lang.String)>",
    "<org.apache.ranger.admin.client.RangerAdminRESTClient: org.apache.ranger.plugin.util.ServiceTags getServiceTagsIfUpdated(long,long)>",
    "<org.apache.ranger.admin.client.RangerAdminRESTClient: void grantAccess(org.apache.ranger.plugin.util.GrantRevokeRequest)>",
    "<org.apache.ranger.admin.client.RangerAdminRESTClient: java.util.List getTagTypes(java.lang.String)>",
    "<org.apache.ranger.admin.client.RangerAdminRESTClient: void revokeAccess(org.apache.ranger.plugin.util.GrantRevokeRequest)>",
    "<org.apache.ranger.plugin.util.PolicyRefresher: void <init>(org.apache.ranger.plugin.service.RangerBasePlugin,java.lang.String,java.lang.String,java.lang.String,org.apache.ranger.admin.client.RangerAdminClient,long,java.lang.String)>",
    "<org.apache.hadoop.security.SecureClientLogin: javax.security.auth.Subject loginUserFromKeytab(java.lang.String,java.lang.String)>",
    "<org.apache.hadoop.security.SecureClientLogin: javax.security.auth.Subject loginUserFromKeytab(java.lang.String,java.lang.String,java.lang.String)>",
    "<org.apache.ranger.plugin.store.EmbeddedServiceDefsUtil: void init(org.apache.ranger.plugin.store.ServiceStore)>",
    "<org.apache.ranger.admin.client.RangerAdminRESTClient: org.apache.ranger.plugin.util.ServicePolicies getServicePoliciesIfUpdated(long,long)>",
    "<org.apache.ranger.plugin.contextenricher.RangerTagEnricher: void init()>"
  ],
  "1.0.0": [
    "<org.apache.hadoop.security.SecureClientLogin: java.security.Principal createUserPrincipal(java.lang.String)>",
    "<org.apache.hadoop.security.SecureClientLogin: javax.security.auth.Subject login(java.lang.String)>",
    "<org.apache.ranger.plugin.store.AbstractServiceStore: boolean updateTagServiceDefForUpdatingRowFilterDef(org.apache.ranger.plugin.model.RangerServiceDef,org.apache.ranger.plugin.model.RangerServiceDef,long,java.lang.String)>",
    "<org.apache.ranger.plugin.service.RangerBasePlugin: void init()>",
    "<org.apache.hadoop.security.SecureClientLogin: javax.security.auth.Subject loginUserWithPassword(java.lang.String,java.lang.String)>",
    "<org.apache.hadoop.security.SecureClientLogin: javax.security.auth.Subject loginUserFromKeytab(java.lang.String,java.lang.String,java.lang.String)>",
    "<org.apache.ranger.admin.client.RangerAdminRESTClient: org.apache.ranger.plugin.util.ServiceTags getServiceTagsIfUpdated(long,long)>",
    "<org.apache.ranger.admin.client.RangerAdminRESTClient: void grantAccess(org.apache.ranger.plugin.util.GrantRevokeRequest)>",
    "<org.apache.ranger.admin.client.RangerAdminRESTClient: java.util.List getTagTypes(java.lang.String)>",
    "<org.apache.ranger.admin.client.RangerAdminRESTClient: void revokeAccess(org.apache.ranger.plugin.util.GrantRevokeRequest)>",
    "<org.apache.ranger.plugin.util.ServiceDefUtil: boolean getOption_enableDenyAndExceptionsInPolicies(org.apache.ranger.plugin.model.RangerServiceDef)>",
    "<org.apache.ranger.plugin.util.PolicyRefresher: void <init>(org.apache.ranger.plugin.service.RangerBasePlugin,java.lang.String,java.lang.String,java.lang.String,org.apache.ranger.admin.client.RangerAdminClient,long,java.lang.String)>",
    "<org.apache.hadoop.security.SecureClientLogin: javax.security.auth.Subject loginUserFromKeytab(java.lang.String,java.lang.String)>",
    "<org.apache.ranger.plugin.store.AbstractServiceStore: boolean updateResourceInTagServiceDef(org.apache.ranger.plugin.model.RangerServiceDef)>",
    "<org.apache.ranger.plugin.store.EmbeddedServiceDefsUtil: void init(org.apache.ranger.plugin.store.ServiceStore)>",
    "<org.apache.ranger.admin.client.RangerAdminRESTClient: org.apache.ranger.plugin.util.ServicePolicies getServicePoliciesIfUpdated(long,long)>",
    "<org.apache.ranger.plugin.contextenricher.RangerTagEnricher: void init()>"
  ],
  "0.6.1": [
    "<org.apache.hadoop.security.SecureClientLogin: java.security.Principal createUserPrincipal(java.lang.String)>",
    "<org.apache.hadoop.security.SecureClientLogin: javax.security.auth.Subject login(java.lang.String)>",
    "<org.apache.ranger.admin.client.RangerAdminRESTClient: org.apache.ranger.plugin.util.ServicePolicies getServicePoliciesIfUpdated(long)>",
    "<org.apache.ranger.plugin.service.RangerBasePlugin: void init()>",
    "<org.apache.ranger.admin.client.RangerAdminRESTClient: void grantAccess(org.apache.ranger.plugin.util.GrantRevokeRequest)>",
    "<org.apache.ranger.admin.client.RangerAdminRESTClient: org.apache.ranger.plugin.util.ServiceTags getServiceTagsIfUpdated(long)>",
    "<org.apache.ranger.admin.client.RangerAdminRESTClient: java.util.List getTagTypes(java.lang.String)>",
    "<org.apache.ranger.admin.client.RangerAdminRESTClient: void revokeAccess(org.apache.ranger.plugin.util.GrantRevokeRequest)>",
    "<org.apache.ranger.plugin.store.rest.ServiceRESTStore: org.apache.ranger.plugin.util.ServicePolicies getServicePoliciesIfUpdated(java.lang.String,java.lang.Long)>",
    "<org.apache.hadoop.security.SecureClientLogin: javax.security.auth.Subject loginUserFromKeytab(java.lang.String,java.lang.String)>",
    "<org.apache.hadoop.security.SecureClientLogin: javax.security.auth.Subject loginUserFromKeytab(java.lang.String,java.lang.String,java.lang.String)>",
    "<org.apache.ranger.plugin.store.EmbeddedServiceDefsUtil: void init(org.apache.ranger.plugin.store.ServiceStore)>",
    "<org.apache.hadoop.security.SecureClientLogin: javax.security.auth.Subject loginUserWithPassword(java.lang.String,java.lang.String)>"
  ],
  "0.6.0": [
    "<org.apache.hadoop.security.SecureClientLogin: java.security.Principal createUserPrincipal(java.lang.String)>",
    "<org.apache.hadoop.security.SecureClientLogin: javax.security.auth.Subject login(java.lang.String)>",
    "<org.apache.ranger.admin.client.RangerAdminRESTClient: org.apache.ranger.plugin.util.ServicePolicies getServicePoliciesIfUpdated(long)>",
    "<org.apache.ranger.plugin.service.RangerBasePlugin: void init()>",
    "<org.apache.ranger.admin.client.RangerAdminRESTClient: void grantAccess(org.apache.ranger.plugin.util.GrantRevokeRequest)>",
    "<org.apache.ranger.admin.client.RangerAdminRESTClient: org.apache.ranger.plugin.util.ServiceTags getServiceTagsIfUpdated(long)>",
    "<org.apache.ranger.admin.client.RangerAdminRESTClient: java.util.List getTagTypes(java.lang.String)>",
    "<org.apache.ranger.admin.client.RangerAdminRESTClient: void revokeAccess(org.apache.ranger.plugin.util.GrantRevokeRequest)>",
    "<org.apache.ranger.plugin.store.rest.ServiceRESTStore: org.apache.ranger.plugin.util.ServicePolicies getServicePoliciesIfUpdated(java.lang.String,java.lang.Long)>",
    "<org.apache.hadoop.security.SecureClientLogin: javax.security.auth.Subject loginUserFromKeytab(java.lang.String,java.lang.String)>",
    "<org.apache.hadoop.security.SecureClientLogin: javax.security.auth.Subject loginUserFromKeytab(java.lang.String,java.lang.String,java.lang.String)>",
    "<org.apache.ranger.plugin.store.EmbeddedServiceDefsUtil: void init(org.apache.ranger.plugin.store.ServiceStore)>",
    "<org.apache.hadoop.security.SecureClientLogin: javax.security.auth.Subject loginUserWithPassword(java.lang.String,java.lang.String)>"
  ],
  "1.1.0": [
    "<org.apache.hadoop.security.SecureClientLogin: java.security.Principal createUserPrincipal(java.lang.String)>",
    "<org.apache.hadoop.security.SecureClientLogin: javax.security.auth.Subject login(java.lang.String)>",
    "<org.apache.ranger.plugin.store.AbstractServiceStore: boolean updateTagServiceDefForUpdatingRowFilterDef(org.apache.ranger.plugin.model.RangerServiceDef,org.apache.ranger.plugin.model.RangerServiceDef,long,java.lang.String)>",
    "<org.apache.ranger.plugin.service.RangerBasePlugin: void init()>",
    "<org.apache.hadoop.security.SecureClientLogin: javax.security.auth.Subject loginUserWithPassword(java.lang.String,java.lang.String)>",
    "<org.apache.hadoop.security.SecureClientLogin: javax.security.auth.Subject loginUserFromKeytab(java.lang.String,java.lang.String,java.lang.String)>",
    "<org.apache.ranger.admin.client.RangerAdminRESTClient: org.apache.ranger.plugin.util.ServiceTags getServiceTagsIfUpdated(long,long)>",
    "<org.apache.ranger.admin.client.RangerAdminRESTClient: void grantAccess(org.apache.ranger.plugin.util.GrantRevokeRequest)>",
    "<org.apache.ranger.admin.client.RangerAdminRESTClient: java.util.List getTagTypes(java.lang.String)>",
    "<org.apache.ranger.admin.client.RangerAdminRESTClient: void revokeAccess(org.apache.ranger.plugin.util.GrantRevokeRequest)>",
    "<org.apache.ranger.plugin.util.ServiceDefUtil: boolean getOption_enableDenyAndExceptionsInPolicies(org.apache.ranger.plugin.model.RangerServiceDef)>",
    "<org.apache.ranger.plugin.util.PolicyRefresher: void <init>(org.apache.ranger.plugin.service.RangerBasePlugin,java.lang.String,java.lang.String,java.lang.String,org.apache.ranger.admin.client.RangerAdminClient,long,java.lang.String)>",
    "<org.apache.hadoop.security.SecureClientLogin: javax.security.auth.Subject loginUserFromKeytab(java.lang.String,java.lang.String)>",
    "<org.apache.ranger.plugin.store.AbstractServiceStore: boolean updateResourceInTagServiceDef(org.apache.ranger.plugin.model.RangerServiceDef)>",
    "<org.apache.ranger.plugin.store.EmbeddedServiceDefsUtil: void init(org.apache.ranger.plugin.store.ServiceStore)>",
    "<org.apache.ranger.admin.client.RangerAdminRESTClient: org.apache.ranger.plugin.util.ServicePolicies getServicePoliciesIfUpdated(long,long)>",
    "<org.apache.ranger.plugin.contextenricher.RangerTagEnricher: void init()>"
  ],
  "0.6.2": [
    "<org.apache.hadoop.security.SecureClientLogin: java.security.Principal createUserPrincipal(java.lang.String)>",
    "<org.apache.hadoop.security.SecureClientLogin: javax.security.auth.Subject login(java.lang.String)>",
    "<org.apache.ranger.admin.client.RangerAdminRESTClient: org.apache.ranger.plugin.util.ServicePolicies getServicePoliciesIfUpdated(long)>",
    "<org.apache.ranger.plugin.service.RangerBasePlugin: void init()>",
    "<org.apache.ranger.admin.client.RangerAdminRESTClient: void grantAccess(org.apache.ranger.plugin.util.GrantRevokeRequest)>",
    "<org.apache.ranger.admin.client.RangerAdminRESTClient: org.apache.ranger.plugin.util.ServiceTags getServiceTagsIfUpdated(long)>",
    "<org.apache.ranger.admin.client.RangerAdminRESTClient: java.util.List getTagTypes(java.lang.String)>",
    "<org.apache.ranger.admin.client.RangerAdminRESTClient: void revokeAccess(org.apache.ranger.plugin.util.GrantRevokeRequest)>",
    "<org.apache.ranger.plugin.store.rest.ServiceRESTStore: org.apache.ranger.plugin.util.ServicePolicies getServicePoliciesIfUpdated(java.lang.String,java.lang.Long)>",
    "<org.apache.hadoop.security.SecureClientLogin: javax.security.auth.Subject loginUserFromKeytab(java.lang.String,java.lang.String)>",
    "<org.apache.hadoop.security.SecureClientLogin: javax.security.auth.Subject loginUserFromKeytab(java.lang.String,java.lang.String,java.lang.String)>",
    "<org.apache.ranger.plugin.store.EmbeddedServiceDefsUtil: void init(org.apache.ranger.plugin.store.ServiceStore)>",
    "<org.apache.hadoop.security.SecureClientLogin: javax.security.auth.Subject loginUserWithPassword(java.lang.String,java.lang.String)>"
  ],
  "0.7.1": [
    "<org.apache.hadoop.security.SecureClientLogin: java.security.Principal createUserPrincipal(java.lang.String)>",
    "<org.apache.hadoop.security.SecureClientLogin: javax.security.auth.Subject login(java.lang.String)>",
    "<org.apache.ranger.plugin.service.RangerBasePlugin: void init()>",
    "<org.apache.hadoop.security.SecureClientLogin: javax.security.auth.Subject loginUserWithPassword(java.lang.String,java.lang.String)>",
    "<org.apache.ranger.admin.client.RangerAdminRESTClient: org.apache.ranger.plugin.util.ServiceTags getServiceTagsIfUpdated(long,long)>",
    "<org.apache.ranger.admin.client.RangerAdminRESTClient: void grantAccess(org.apache.ranger.plugin.util.GrantRevokeRequest)>",
    "<org.apache.ranger.admin.client.RangerAdminRESTClient: java.util.List getTagTypes(java.lang.String)>",
    "<org.apache.ranger.admin.client.RangerAdminRESTClient: void revokeAccess(org.apache.ranger.plugin.util.GrantRevokeRequest)>",
    "<org.apache.ranger.plugin.util.PolicyRefresher: void <init>(org.apache.ranger.plugin.service.RangerBasePlugin,java.lang.String,java.lang.String,java.lang.String,org.apache.ranger.admin.client.RangerAdminClient,long,java.lang.String)>",
    "<org.apache.hadoop.security.SecureClientLogin: javax.security.auth.Subject loginUserFromKeytab(java.lang.String,java.lang.String)>",
    "<org.apache.hadoop.security.SecureClientLogin: javax.security.auth.Subject loginUserFromKeytab(java.lang.String,java.lang.String,java.lang.String)>",
    "<org.apache.ranger.plugin.store.EmbeddedServiceDefsUtil: void init(org.apache.ranger.plugin.store.ServiceStore)>",
    "<org.apache.ranger.admin.client.RangerAdminRESTClient: org.apache.ranger.plugin.util.ServicePolicies getServicePoliciesIfUpdated(long,long)>",
    "<org.apache.ranger.plugin.contextenricher.RangerTagEnricher: void init()>"
  ]
}