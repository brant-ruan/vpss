{
  "1.28": [
    "<com.ibm.icu.impl.locale.KeyTypeData: boolean isDeprecated(java.lang.String,java.lang.String)>",
    "<com.ibm.icu.util.ULocale: java.lang.String toLanguageTag()>",
    "<org.apache.tika.eval.langid.LanguageIDWrapper: void loadBuiltInModels()>",
    "<org.apache.xmlbeans.impl.tool.XSTCTester: org.apache.xmlbeans.impl.tool.XSTCTester$TestCase[] parseLTGFile(java.io.File,java.util.Collection)>",
    "<org.apache.xmlbeans.QNameSetBuilder: void removeAllImpl(java.util.Set,java.util.Set,java.util.Set,java.util.Set)>",
    "<org.apache.xmlbeans.QNameSet: java.lang.String toString()>",
    "<org.apache.commons.collections4.map.AbstractHashedMap$HashEntry: int hashCode()>",
    "<com.ibm.icu.util.MeasureUnit: java.util.Set getAvailable()>",
    "<com.ibm.icu.text.ListFormatter$FormattedListBuilder: com.ibm.icu.text.ListFormatter$FormattedListBuilder append(java.lang.String,java.lang.Object,boolean)>",
    "<org.apache.xmlbeans.impl.tool.TypeHierarchyPrinter: void main(java.lang.String[])>",
    "<org.apache.xmlbeans.impl.common.XmlErrorWatcher: java.util.Iterator iterator()>",
    "<com.ibm.icu.impl.TimeZoneGenericNames: java.util.Collection findLocal(java.lang.String,int,java.util.EnumSet)>",
    "<org.apache.commons.compress.utils.CountingOutputStream: void write(int)>",
    "<com.ibm.icu.util.LocaleMatcher: void processMapping()>",
    "<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection: int size()>",
    "<org.apache.commons.compress.archivers.sevenz.CLI$Mode$1: java.lang.String getContentMethods(org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry)>",
    "<com.ibm.icu.impl.locale.LocaleExtensions: java.lang.String toID(java.util.SortedMap)>",
    "<com.ibm.icu.impl.ICUConfig: void <clinit>()>",
    "<com.ibm.icu.impl.locale.XLocaleDistance$StringDistanceTable: void copy(com.ibm.icu.impl.locale.XLocaleDistance$StringDistanceTable)>",
    "<com.ibm.icu.impl.ValidIdentifiers: com.ibm.icu.impl.ValidIdentifiers$Datasubtype isValid(com.ibm.icu.impl.ValidIdentifiers$Datatype,java.util.Set,java.lang.String)>",
    "<org.apache.tika.eval.TikaEvalCLI: void handleCompare(java.lang.String[])>",
    "<com.ibm.icu.text.TransliteratorRegistry: void removeSTV(java.lang.String,java.lang.String,java.lang.String)>",
    "<org.apache.xmlbeans.impl.store.Cur$CurLoadContext: void xmlns(java.lang.String,java.lang.String)>",
    "<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.util.Map)>",
    "<org.apache.commons.collections4.multiset.AbstractMultiSet$AbstractEntry: boolean equals(java.lang.Object)>",
    "<org.apache.tika.eval.reports.XLSXNumFormatter: void applyStyleAndValue(int,java.sql.ResultSet,org.apache.poi.ss.usermodel.Cell)>",
    "<com.ibm.icu.impl.TimeZoneNamesImpl: java.util.Collection find(java.lang.CharSequence,int,java.util.EnumSet)>",
    "<com.ibm.icu.text.DateFormatSymbols: java.lang.String[] loadDayPeriodStrings(java.util.Map)>",
    "<org.apache.xmlbeans.impl.schema.SchemaPropertyImpl: javax.xml.namespace.QName[] acceptedNames()>",
    "<com.ibm.icu.impl.locale.XLocaleDistance$StringDistanceTable: java.lang.StringBuilder toString(boolean,java.lang.String,com.ibm.icu.impl.locale.XLocaleDistance$IdMakerFull,java.lang.StringBuilder)>",
    "<com.ibm.icu.impl.locale.XLocaleDistance$StringDistanceTable: com.ibm.icu.impl.locale.XLocaleDistance$DistanceNode addSubtable(java.lang.String,java.lang.String,int)>",
    "<com.ibm.icu.util.LocaleMatcher: void <init>(com.ibm.icu.util.LocalePriorityList,com.ibm.icu.util.LocaleMatcher$LanguageMatcherData,double)>",
    "<com.ibm.icu.lang.UCharacter$UnicodeBlock: com.ibm.icu.lang.UCharacter$UnicodeBlock forName(java.lang.String)>",
    "<org.apache.xmlbeans.QNameSetBuilder: void removeAllMatchingBoth(java.util.Set,java.util.Set,java.util.Set)>",
    "<org.apache.logging.log4j.core.config.ConfigurationFactory$Factory: org.apache.logging.log4j.core.config.Configuration getConfiguration(org.apache.logging.log4j.core.LoggerContext,org.apache.logging.log4j.core.config.ConfigurationSource)>",
    "<org.apache.tika.eval.XMLErrorLogUpdater$ErrorMsgUpdater: int getContainerId(java.lang.String)>",
    "<org.apache.xmlbeans.impl.store.Saver: java.lang.String getNonDefaultUriMapping(java.lang.String)>",
    "<com.ibm.icu.text.DateTimePatternGenerator: java.lang.String getFilteredPattern(com.ibm.icu.text.DateTimePatternGenerator$FormatParser,java.util.BitSet)>",
    "<org.apache.logging.log4j.core.net.ssl.AbstractKeyStoreConfiguration: java.security.KeyStore load()>",
    "<com.ibm.icu.impl.ValidIdentifiers$ValiditySet: void <init>(java.util.Set,boolean)>",
    "<com.ibm.icu.impl.locale.XLocaleDistance$StringDistanceTable: com.ibm.icu.impl.locale.XLocaleDistance$DistanceNode getNode(java.lang.String,java.lang.String)>",
    "<com.ibm.icu.impl.locale.XLocaleDistance$StringDistanceTable: int getDistance(java.lang.String,java.lang.String,com.ibm.icu.util.Output,boolean)>",
    "<org.apache.commons.compress.archivers.dump.TapeInputStream: void close()>",
    "<org.apache.commons.compress.utils.CountingInputStream: int read()>",
    "<org.apache.logging.log4j.message.ParameterFormatter: void appendCollection(java.lang.Object,java.lang.StringBuilder,java.util.Set)>",
    "<org.apache.xmlbeans.QNameSet: boolean isDisjointImpl(org.apache.xmlbeans.QNameSetSpecification,org.apache.xmlbeans.QNameSetSpecification)>",
    "<com.ibm.icu.text.ListFormatter$FormattedListBuilder: void <init>(java.lang.Object,boolean)>",
    "<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void assertContainersSynchronized()>",
    "<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$ValuesIterator: void <init>(org.apache.commons.collections4.multimap.AbstractMultiValuedMap,java.lang.Object)>",
    "<org.apache.commons.codec.language.bm.Rule: java.util.Map getInstanceMap(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,java.lang.String)>",
    "<com.ibm.icu.impl.locale.XLocaleDistance: java.util.Set fill(java.lang.String,com.ibm.icu.impl.locale.XCldrStub$TreeMultimap,com.ibm.icu.impl.locale.XCldrStub$Multimap)>",
    "<org.apache.logging.log4j.core.config.properties.PropertiesConfigurationBuilder: org.apache.logging.log4j.core.config.builder.api.ComponentBuilder processRemainingProperties(org.apache.logging.log4j.core.config.builder.api.ComponentBuilder,java.util.Properties)>",
    "<com.ibm.icu.impl.ValidIdentifiers$ValiditySet: boolean contains(java.lang.String)>",
    "<org.apache.xmlbeans.QNameSetBuilder: void removeAllMatchingNeither(java.util.Set,java.util.Set,java.util.Set)>",
    "<org.apache.xmlbeans.impl.common.IOUtil: void copyCompletely(java.io.InputStream,java.io.OutputStream)>",
    "<org.apache.commons.compress.utils.CountingInputStream: int read(byte[],int,int)>",
    "<org.apache.tika.eval.TikaEvalCLI: void handleProfileFiles(java.lang.String[])>",
    "<org.apache.logging.log4j.core.jmx.LoggerContextAdmin: java.lang.String getConfigText(java.lang.String)>",
    "<org.apache.xmlbeans.impl.store.Saver: java.lang.String ensureMapping(java.lang.String,java.lang.String,boolean,boolean)>",
    "<org.apache.xmlbeans.impl.values.XmlListImpl: boolean equal_xmlLists(java.util.List,java.util.List)>",
    "<com.ibm.icu.impl.ICULocaleService: java.util.Locale[] getAvailableLocales()>",
    "<com.ibm.icu.impl.number.CurrencyPluralInfoAffixProvider: void <init>(com.ibm.icu.text.CurrencyPluralInfo,com.ibm.icu.impl.number.DecimalFormatProperties)>",
    "<org.apache.xmlbeans.impl.tool.XMLBean: void execute()>",
    "<com.ibm.icu.impl.locale.XCldrStub$ImmutableMultimap: com.ibm.icu.impl.locale.XCldrStub$Multimap copyOf(com.ibm.icu.impl.locale.XCldrStub$Multimap)>",
    "<com.ibm.icu.impl.locale.InternalLocaleBuilder: com.ibm.icu.impl.locale.InternalLocaleBuilder setLocale(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)>",
    "<org.apache.xmlbeans.impl.tool.CommandLine: java.io.File[] filesEndingWith(java.lang.String)>",
    "<com.ibm.icu.impl.locale.XLocaleMatcher: com.ibm.icu.impl.locale.XCldrStub$Multimap extractLsrMap(java.util.Set,java.util.Set)>",
    "<org.apache.commons.compress.harmony.unpack200.bytecode.CPRef: boolean equals(java.lang.Object)>",
    "<com.ibm.icu.impl.number.MutablePatternModifier: com.ibm.icu.impl.number.MutablePatternModifier$ImmutablePatternModifier createImmutableAndChain(com.ibm.icu.impl.number.MicroPropsGenerator)>",
    "<org.apache.xmlbeans.QNameSetBuilder: boolean isDisjointImpl(org.apache.xmlbeans.QNameSetSpecification,org.apache.xmlbeans.QNameSetSpecification)>",
    "<org.apache.commons.collections4.comparators.ComparableComparator: int compare(java.lang.Comparable,java.lang.Comparable)>",
    "<com.ibm.icu.impl.TimeZoneNamesImpl: void loadStrings(java.lang.String)>",
    "<com.ibm.icu.impl.locale.XCldrStub: java.lang.String join(java.lang.Iterable,java.lang.String)>",
    "<org.apache.logging.log4j.core.appender.FileManager: void <init>(org.apache.logging.log4j.core.LoggerContext,java.lang.String,java.io.OutputStream,boolean,boolean,boolean,java.lang.String,org.apache.logging.log4j.core.Layout,java.lang.String,java.lang.String,java.lang.String,boolean,java.nio.ByteBuffer)>",
    "<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$ValuesIterator: java.lang.Object next()>",
    "<com.ibm.icu.impl.ZoneMeta: java.util.Set getAvailableIDs(com.ibm.icu.util.TimeZone$SystemTimeZoneType,java.lang.String,java.lang.Integer)>",
    "<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeIdConstraintData(org.apache.xmlbeans.SchemaIdentityConstraint)>",
    "<org.xml.sax.helpers.XMLReaderFactory: java.lang.String jarLookup(java.lang.ClassLoader)>",
    "<com.google.gson.internal.LinkedTreeMap$Node: boolean equals(java.lang.Object)>",
    "<com.ibm.icu.impl.ICULocaleService: com.ibm.icu.util.ULocale[] getAvailableULocales()>",
    "<com.google.gson.internal.LinkedTreeMap$Node: int hashCode()>",
    "<org.apache.xmlbeans.impl.tool.StreamInstanceValidator: void main(java.lang.String[])>",
    "<com.ibm.icu.text.PluralRanges$Matrix: com.ibm.icu.impl.StandardPlural endSame(com.ibm.icu.impl.StandardPlural)>",
    "<org.apache.tika.eval.AbstractProfiler: void writeTagData(java.lang.String,org.apache.tika.eval.util.ContentTags,org.apache.tika.eval.db.TableInfo)>",
    "<com.ibm.icu.text.MessageFormat: void format(int,com.ibm.icu.text.MessageFormat$PluralSelectorContext,java.lang.Object[],java.util.Map,com.ibm.icu.text.MessageFormat$AppendableWrapper,java.text.FieldPosition)>",
    "<org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry: void setContentMethods(java.lang.Iterable)>",
    "<org.apache.tika.eval.tokens.AnalyzerManager: org.apache.tika.eval.tokens.AnalyzerManager newInstance(int)>",
    "<com.ibm.icu.impl.locale.XLocaleMatcher: java.util.Set asSet(com.ibm.icu.util.LocalePriorityList)>",
    "<com.google.gson.internal.LinkedTreeMap: com.google.gson.internal.LinkedTreeMap$Node find(java.lang.Object,boolean)>",
    "<org.apache.xmlbeans.impl.store.Saver: void processElement()>",
    "<org.apache.commons.compress.archivers.tar.TarFile: void buildSparseInputStreams()>",
    "<com.ibm.icu.text.DateTimePatternGenerator: void hackTimes(com.ibm.icu.text.DateTimePatternGenerator$PatternInfo,java.lang.String)>",
    "<org.apache.xmlbeans.impl.tool.InstanceValidator: int extraMain(java.lang.String[])>",
    "<com.ibm.icu.impl.SimpleCache: java.lang.Object get(java.lang.Object)>",
    "<com.ibm.icu.impl.ICUService: java.util.Set getVisibleIDs(java.lang.String)>",
    "<org.apache.commons.compress.utils.IOUtils: int readFully(java.io.InputStream,byte[],int,int)>",
    "<org.apache.commons.codec.language.bm.Languages$SomeLanguages: boolean isSingleton()>",
    "<org.apache.tika.eval.tools.CommonTokenOverlapCounter: void compare(java.lang.String,java.lang.String,org.apache.tika.eval.tokens.CommonTokenCountManager)>",
    "<com.ibm.icu.impl.number.LongNameHandler: void simpleFormatsToModifiers(java.lang.String[],com.ibm.icu.text.NumberFormat$Field,java.util.Map)>",
    "<com.ibm.icu.impl.ValidIdentifiers: com.ibm.icu.impl.ValidIdentifiers$Datasubtype isValid(com.ibm.icu.impl.ValidIdentifiers$Datatype,java.util.Set,java.lang.String,java.lang.String)>",
    "<org.apache.commons.codec.language.bm.Languages$SomeLanguages: java.lang.String getAny()>",
    "<org.apache.xmlbeans.QNameSetBuilder: void addAllImpl(java.util.Set,java.util.Set,java.util.Set,java.util.Set)>",
    "<org.apache.commons.collections4.ListUtils: boolean isEqualList(java.util.Collection,java.util.Collection)>",
    "<javax.xml.xpath.XPathException: void printStackTrace(java.io.PrintWriter)>",
    "<org.apache.xmlbeans.QNameSet: org.apache.xmlbeans.QNameSet forSets(java.util.Set,java.util.Set,java.util.Set,java.util.Set)>",
    "<org.apache.commons.codec.language.bm.Rule: void <clinit>()>",
    "<org.apache.logging.log4j.core.config.ConfigurationFactory$Factory: org.apache.logging.log4j.core.config.Configuration getConfiguration(org.apache.logging.log4j.core.LoggerContext,boolean,java.lang.String)>",
    "<com.ibm.icu.impl.locale.XLocaleDistance$StringDistanceTable: void addSubtables(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>",
    "<org.apache.logging.log4j.core.config.ConfigurationFactory$Factory: org.apache.logging.log4j.core.config.Configuration getConfiguration(java.lang.String,org.apache.logging.log4j.core.LoggerContext,java.lang.String)>",
    "<com.ibm.icu.impl.StringRange: void compact(java.util.Set,com.ibm.icu.impl.StringRange$Adder,boolean,boolean)>",
    "<org.apache.tika.eval.XMLErrorLogUpdater$ErrorMsgUpdater: void update(java.lang.String,java.lang.String,org.apache.tika.eval.AbstractProfiler$PARSE_ERROR_TYPE)>",
    "<org.apache.logging.log4j.core.tools.picocli.CommandLine$Help$Layout: void addPositionalParameters(java.util.List,org.apache.logging.log4j.core.tools.picocli.CommandLine$Help$IParamLabelRenderer)>",
    "<org.apache.xmlbeans.impl.tool.StreamInstanceValidator: void validateFiles(java.io.File[],org.apache.xmlbeans.SchemaTypeLoader,org.apache.xmlbeans.XmlOptions)>",
    "<com.ibm.icu.impl.locale.XLocaleDistance$CompactAndImmutablizer: java.util.Map compact(java.util.Map,int)>",
    "<com.google.gson.Gson: com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)>",
    "<org.apache.logging.log4j.core.tools.picocli.CommandLine$Help: java.lang.String detailedSynopsis(int,java.util.Comparator,boolean)>",
    "<com.ibm.icu.number.NumberSkeletonImpl$BlueprintHelpers: void parseMeasureUnitOption(com.ibm.icu.impl.StringSegment,com.ibm.icu.impl.number.MacroProps)>",
    "<org.apache.tika.eval.db.JDBCUtil: void <init>(java.lang.String,java.lang.String)>",
    "<org.apache.logging.log4j.util.EnvironmentPropertySource: void forEach(org.apache.logging.log4j.util.BiConsumer)>",
    "<org.apache.commons.collections4.multiset.AbstractMultiSet$AbstractEntry: int hashCode()>",
    "<org.apache.commons.collections4.CollectionUtils: java.util.List collate(java.lang.Iterable,java.lang.Iterable,java.util.Comparator,boolean)>",
    "<org.apache.xmlbeans.impl.tool.Diff: void main(java.lang.String[])>",
    "<org.apache.tika.eval.db.H2Util: boolean databaseExists(java.nio.file.Path)>",
    "<org.apache.commons.codec.language.bm.Languages$SomeLanguages: org.apache.commons.codec.language.bm.Languages$LanguageSet restrictTo(org.apache.commons.codec.language.bm.Languages$LanguageSet)>",
    "<org.apache.commons.collections4.CollectionUtils: boolean addAll(java.util.Collection,java.lang.Iterable)>",
    "<org.apache.logging.log4j.util.PropertiesPropertySource: void forEach(org.apache.logging.log4j.util.BiConsumer)>",
    "<org.apache.commons.compress.archivers.tar.TarArchiveEntry: void readOsSpecificProperties(java.nio.file.Path,java.nio.file.LinkOption[])>",
    "<org.apache.logging.log4j.core.util.FileUtils: boolean isFilePosixAttributeViewSupported()>",
    "<org.apache.commons.collections4.iterators.ZippingIterator: boolean hasNext()>",
    "<org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry: boolean equalSevenZMethods(java.lang.Iterable,java.lang.Iterable)>",
    "<com.ibm.icu.impl.locale.XCldrStub$Multimap: void putAll(com.ibm.icu.impl.locale.XCldrStub$Multimap)>",
    "<org.apache.commons.collections4.map.AbstractHashedMap$HashEntry: boolean equals(java.lang.Object)>",
    "<org.apache.xmlbeans.XmlSimpleList: java.lang.String stringValue(java.lang.Object)>",
    "<com.ibm.icu.impl.locale.LanguageTag: com.ibm.icu.impl.locale.LanguageTag parseLocale(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)>",
    "<org.apache.xmlbeans.impl.jam.internal.DirectoryScanner: boolean matchPath(java.lang.String,java.lang.String,boolean)>",
    "<org.apache.tika.eval.reports.ResultsReporter: java.nio.file.Path getDefaultReportsConfig(java.sql.Connection)>",
    "<com.ibm.icu.text.AnyTransliterator: void register()>",
    "<org.apache.xmlbeans.impl.tool.CodeGenUtil: boolean externalJar(java.io.File,java.io.File,java.lang.String,boolean,boolean)>",
    "<org.apache.xmlbeans.impl.store.Saver: void addMapping(java.lang.String,java.lang.String)>",
    "<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: java.util.Map buildTypeRefsByClassname(java.util.Map)>",
    "<com.ibm.icu.impl.locale.KeyTypeData: void initFromResourceBundle()>",
    "<com.ibm.icu.text.PluralRules$FixedDecimalSamples: java.lang.String toString()>",
    "<org.apache.xmlbeans.impl.schema.StscState: javax.xml.namespace.QName compatName(javax.xml.namespace.QName,java.lang.String)>",
    "<org.apache.tika.eval.XMLErrorLogUpdater: void update(java.sql.Connection,org.apache.tika.eval.db.TableInfo,java.nio.file.Path)>",
    "<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void saveLoader()>",
    "<org.apache.xmlbeans.QNameSet: java.util.Set minSetCopy(java.util.Set)>",
    "<com.ibm.icu.impl.SimpleCache: void put(java.lang.Object,java.lang.Object)>",
    "<com.ibm.icu.text.MessageFormat$AppendableWrapper: void formatAndAppend(java.text.Format,java.lang.Object)>",
    "<org.apache.commons.codec.language.bm.Rule: java.util.List getInstance(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,org.apache.commons.codec.language.bm.Languages$LanguageSet)>",
    "<com.ibm.icu.impl.locale.XLocaleMatcher: java.util.Set extractLsrSet(java.util.Set)>",
    "<org.apache.commons.compress.archivers.tar.TarArchiveInputStream: int readSparse(byte[],int,int)>",
    "<org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder$MainTool: void parse(org.apache.xmlbeans.impl.jam.internal.parser.ParserClassBuilder,java.io.File)>",
    "<org.apache.xmlbeans.impl.store.Saver: void <init>(org.apache.xmlbeans.impl.store.Cur,org.apache.xmlbeans.XmlOptions)>",
    "<com.ibm.icu.impl.locale.XLocaleDistance: void <clinit>()>",
    "<com.ibm.icu.impl.locale.XCldrStub$Multimap: java.util.Set values()>",
    "<com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter: void write(com.google.gson.stream.JsonWriter,java.util.Collection)>",
    "<com.ibm.icu.impl.locale.XLocaleDistance: void <init>(com.ibm.icu.impl.locale.XLocaleDistance$DistanceTable,com.ibm.icu.impl.locale.XLocaleDistance$RegionMapper)>",
    "<org.apache.commons.collections4.iterators.ZippingIterator: java.lang.Object next()>",
    "<com.ibm.icu.text.TransliteratorRegistry: java.util.Enumeration getAvailableVariants(java.lang.String,java.lang.String)>",
    "<org.apache.commons.collections4.keyvalue.AbstractMapEntry: int hashCode()>",
    "<com.ibm.icu.text.TransliteratorRegistry: java.util.Enumeration getAvailableTargets(java.lang.String)>",
    "<org.apache.commons.codec.language.bm.Languages$SomeLanguages: org.apache.commons.codec.language.bm.Languages$LanguageSet merge(org.apache.commons.codec.language.bm.Languages$LanguageSet)>",
    "<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl$XsbReader: void writeQNameSet(org.apache.xmlbeans.QNameSet)>",
    "<com.ibm.icu.impl.locale.XLocaleDistance: java.util.Set getContainingMacrosFor(java.util.Collection,java.util.Set)>",
    "<org.apache.tika.eval.db.JDBCUtil: java.sql.Connection getConnection()>",
    "<org.apache.xmlbeans.impl.tool.XSTCTester: void summarizeResultAsHTMLTableRows(org.apache.xmlbeans.impl.tool.XSTCTester$TestCaseResult,java.io.PrintWriter,boolean)>",
    "<com.ibm.icu.impl.locale.KeyTypeData: boolean isDeprecated(java.lang.String)>",
    "<org.apache.tika.eval.TikaEvalCLI: void handleProfile(java.lang.String[])>",
    "<com.ibm.icu.impl.duration.impl.ResourceBasedPeriodFormatterDataService: void <init>()>",
    "<com.ibm.icu.impl.locale.XLikelySubtags: com.ibm.icu.impl.locale.XLikelySubtags$LSR maximize(java.lang.String,java.lang.String,java.lang.String)>",
    "<org.apache.xmlbeans.impl.store.Locale: void applyNamespaces(org.apache.xmlbeans.impl.store.Cur,java.util.Map)>",
    "<org.apache.commons.compress.archivers.sevenz.SevenZFile$1: int read(byte[],int,int)>",
    "<org.apache.commons.collections4.keyvalue.AbstractMapEntry: boolean equals(java.lang.Object)>",
    "<org.apache.commons.codec.language.DaitchMokotoffSoundex: java.lang.String[] soundex(java.lang.String,boolean)>",
    "<org.apache.xmlbeans.impl.inst2xsd.Inst2Xsd: boolean validateInstances(org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument[],org.apache.xmlbeans.XmlObject[])>",
    "<org.apache.commons.compress.harmony.pack200.ClassBands: void finaliseBands()>",
    "<org.apache.logging.log4j.core.config.ConfigurationFactory$Factory: org.apache.logging.log4j.core.config.Configuration getConfiguration(org.apache.logging.log4j.core.LoggerContext,java.lang.String,java.net.URI)>",
    "<com.ibm.icu.text.TimeZoneFormat: java.lang.String parseShortZoneID(java.lang.String,java.text.ParsePosition)>",
    "<org.apache.logging.log4j.core.impl.JdkMapAdapterStringMap: void putValue(java.lang.String,java.lang.Object)>",
    "<org.apache.xmlbeans.impl.store.Cur$CurLoadContext: javax.xml.namespace.QName checkName(javax.xml.namespace.QName,boolean)>",
    "<org.apache.xmlbeans.impl.repackage.Repackage: void repackageJavaFile(java.lang.String)>",
    "<org.apache.commons.collections4.ListUtils: int hashCodeForList(java.util.Collection)>",
    "<org.apache.commons.compress.archivers.tar.TarArchiveInputStream: void buildSparseInputStreams()>",
    "<org.apache.tika.eval.reports.Report: void writeCell(java.sql.ResultSetMetaData,int,java.sql.ResultSet,org.apache.poi.ss.usermodel.Cell)>",
    "<org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication: org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication invoke()>",
    "<org.apache.commons.collections4.iterators.CollatingIterator: boolean set(int)>",
    "<com.ibm.icu.impl.locale.InternalLocaleBuilder: com.ibm.icu.impl.locale.InternalLocaleBuilder setExtensions(java.util.List,java.lang.String)>",
    "<org.apache.commons.collections4.iterators.CollatingIterator: boolean anyHasNext(java.util.List)>",
    "<org.apache.commons.collections4.keyvalue.MultiKey: void calculateHashCode(java.lang.Object[])>",
    "<com.google.gson.internal.LinkedTreeMap$1: int compare(java.lang.Comparable,java.lang.Comparable)>",
    "<org.apache.commons.logging.impl.SimpleLog: void <clinit>()>",
    "<com.ibm.icu.impl.locale.KeyTypeData: void initFromTables()>",
    "<com.ibm.icu.util.LocalePriorityList: java.util.Iterator iterator()>",
    "<com.ibm.icu.util.MeasureUnit: com.ibm.icu.util.MeasureUnit addUnit(java.lang.String,java.lang.String,com.ibm.icu.util.MeasureUnit$Factory)>",
    "<com.ibm.icu.text.DateIntervalInfo: com.ibm.icu.text.DateIntervalInfo$PatternInfo getIntervalPattern(java.lang.String,int)>",
    "<com.ibm.icu.impl.locale.XLikelySubtags$Maker: java.lang.Object getSubtable(java.util.Map,java.lang.Object)>",
    "<org.apache.logging.log4j.util.PropertiesUtil: java.util.Map partitionOnCommonPrefixes(java.util.Properties)>",
    "<org.apache.xmlbeans.QNameSet: boolean contains(javax.xml.namespace.QName)>",
    "<org.apache.logging.log4j.core.config.plugins.util.PluginRegistry: java.util.Map decodeCacheFiles(java.lang.ClassLoader)>",
    "<javax.xml.transform.TransformerException: void printStackTrace(java.io.PrintWriter)>",
    "<com.ibm.icu.impl.locale.XLocaleDistance$RegionMapper: java.lang.String toString()>",
    "<javax.xml.xpath.XPathException: void printStackTrace(java.io.PrintStream)>",
    "<org.apache.commons.compress.archivers.sevenz.SevenZFile$1: int read()>",
    "<org.apache.logging.log4j.simple.SimpleLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>",
    "<org.apache.tika.eval.reports.ResultsReporter: void main(java.lang.String[])>",
    "<org.apache.logging.log4j.util.PropertiesUtil: java.util.Properties extractSubset(java.util.Properties,java.lang.String)>",
    "<org.apache.commons.collections4.CollectionUtils: java.util.Map getCardinalityMap(java.lang.Iterable)>",
    "<com.ibm.icu.text.PluralRanges$Matrix: com.ibm.icu.impl.StandardPlural startSame(com.ibm.icu.impl.StandardPlural,java.util.EnumSet,com.ibm.icu.util.Output)>",
    "<com.ibm.icu.impl.LocaleDisplayNamesImpl: java.util.List getUiListCompareWholeItems(java.util.Set,java.util.Comparator)>",
    "<org.apache.tika.eval.XMLErrorLogUpdater: void main(java.lang.String[])>",
    "<org.apache.logging.log4j.util.LowLevelLogUtil: void logException(java.lang.Throwable)>",
    "<org.apache.commons.collections4.CollectionUtils: boolean addAll(java.util.Collection,java.util.Iterator)>",
    "<org.apache.xmlbeans.impl.tool.XMLBeanXSTCHarness: void runTestCase(org.apache.xmlbeans.impl.tool.XSTCTester$TestCaseResult)>",
    "<org.apache.xmlbeans.XmlSimpleList: int hashCode()>",
    "<org.apache.logging.log4j.core.config.plugins.util.PluginManager: void mergeByName(java.util.Map,java.util.List)>",
    "<org.apache.commons.compress.archivers.zip.ZipEncodingHelper: boolean isUTF8(java.lang.String)>",
    "<org.apache.xmlbeans.impl.tool.CodeGenUtil: boolean externalCompile(java.util.List,java.io.File,java.io.File[],boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>",
    "<com.ibm.icu.impl.TZDBTimeZoneNames: void prepareFind()>",
    "<org.apache.commons.compress.utils.IOUtils: long copyRange(java.io.InputStream,long,java.io.OutputStream,int)>",
    "<org.apache.logging.log4j.core.tools.picocli.CommandLine$Help: java.lang.String abbreviatedSynopsis()>",
    "<com.ibm.icu.text.DateFormatSymbols: void initializeData(com.ibm.icu.util.ULocale,com.ibm.icu.impl.ICUResourceBundle,java.lang.String)>",
    "<org.apache.logging.log4j.message.ParameterFormatter: void tryObjectToString(java.lang.Object,java.lang.StringBuilder)>",
    "<org.apache.tika.eval.TikaEvalCLI: void handleStartDB(java.lang.String[])>",
    "<com.ibm.icu.util.ULocale: com.ibm.icu.util.ULocale getInstance(com.ibm.icu.impl.locale.BaseLocale,com.ibm.icu.impl.locale.LocaleExtensions)>",
    "<com.ibm.icu.impl.locale.XLikelySubtags: void set(java.util.Map,java.lang.String,java.lang.String,java.lang.String,com.ibm.icu.impl.locale.XLikelySubtags$LSR)>",
    "<org.apache.xmlbeans.impl.store.Saver: java.lang.String getNamespaceForPrefix(java.lang.String)>",
    "<org.apache.xmlbeans.QNameSetBuilder: void removeAllMatchingFirstOnly(java.util.Set,java.util.Set,java.util.Set)>",
    "<org.apache.logging.log4j.status.StatusData: java.lang.String getFormattedStatus()>",
    "<org.apache.tika.eval.reports.XLSXHREFFormatter: void applyStyleAndValue(int,java.sql.ResultSet,org.apache.poi.ss.usermodel.Cell)>",
    "<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection: boolean contains(java.lang.Object)>",
    "<org.apache.logging.log4j.message.ParameterFormatter: void appendMap(java.lang.Object,java.lang.StringBuilder,java.util.Set)>",
    "<com.google.gson.Gson: com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)>",
    "<com.ibm.icu.impl.Relation: com.ibm.icu.impl.Relation freeze()>",
    "<org.apache.tika.eval.reports.ResultsReporter: void execute(java.sql.Connection,java.nio.file.Path)>",
    "<com.ibm.icu.impl.locale.XLocaleMatcher: void <init>(com.ibm.icu.impl.locale.XLocaleMatcher$Builder)>",
    "<com.ibm.icu.impl.ICUBinary: java.nio.ByteBuffer getByteBufferFromInputStreamAndCloseStream(java.io.InputStream)>",
    "<org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>",
    "<com.google.gson.internal.LinkedTreeMap: boolean equal(java.lang.Object,java.lang.Object)>",
    "<org.apache.tika.eval.tools.LeipzigSampler: void execute(java.nio.file.Path,int,java.io.BufferedWriter)>",
    "<org.apache.commons.compress.archivers.sevenz.SevenZOutputFile: void writeFolder(java.io.DataOutput,org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry)>",
    "<com.ibm.icu.impl.ZoneMeta: java.lang.String getCanonicalCountry(java.lang.String,com.ibm.icu.util.Output)>",
    "<org.apache.logging.log4j.core.config.properties.PropertiesConfigurationBuilder: org.apache.logging.log4j.core.config.properties.PropertiesConfiguration build()>",
    "<org.apache.xmlbeans.impl.values.XmlListImpl: void set_list(java.util.List)>",
    "<com.ibm.icu.impl.locale.XLocaleDistance$RegionMapper$Builder: com.ibm.icu.impl.locale.XLocaleDistance$RegionMapper build()>",
    "<com.ibm.icu.impl.locale.XLikelySubtags: java.util.Map init(java.util.Map,boolean)>",
    "<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void fixupContainers()>",
    "<org.apache.tika.eval.util.ContentTagParser$XHTMLContentTagHandler: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>",
    "<com.ibm.icu.impl.number.LongNameHandler: void multiSimpleFormatsToModifiers(java.lang.String[],java.lang.String,com.ibm.icu.text.NumberFormat$Field,java.util.Map)>",
    "<com.ibm.icu.impl.ValidIdentifiers$ValiditySet: boolean contains(java.lang.String,java.lang.String)>",
    "<com.ibm.icu.text.TransliteratorRegistry: void registerSTV(java.lang.String,java.lang.String,java.lang.String)>",
    "<org.apache.tika.eval.reports.Report: void dumpXLSX(java.sql.Connection,java.nio.file.Path)>",
    "<org.apache.logging.log4j.core.impl.JdkMapAdapterStringMap: void clear()>",
    "<org.apache.logging.log4j.core.impl.JdkMapAdapterStringMap: java.lang.Object getValue(java.lang.String)>",
    "<org.apache.tika.eval.reports.Report: void dumpReportToWorkbook(java.sql.Statement,org.apache.poi.xssf.streaming.SXSSFWorkbook)>",
    "<com.ibm.icu.text.UnicodeSet: int compare(java.util.Iterator,java.util.Iterator)>",
    "<org.apache.xmlbeans.impl.common.XmlErrorWatcher: int size()>",
    "<com.ibm.icu.util.LocalePriorityList$Builder: com.ibm.icu.util.LocalePriorityList build(boolean)>",
    "<org.apache.commons.codec.language.bm.PhoneticEngine: java.lang.String encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)>",
    "<com.ibm.icu.util.Currency: boolean isAvailable(java.lang.String,java.util.Date,java.util.Date)>",
    "<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$KeysMultiSet$MapEntryTransformer$1: int getCount()>",
    "<org.apache.commons.compress.archivers.tar.TarArchiveInputStream: void close()>",
    "<org.apache.commons.compress.utils.CountingOutputStream: void write(byte[],int,int)>",
    "<org.apache.commons.collections4.multimap.AbstractMultiValuedMap$ValuesIterator: boolean hasNext()>",
    "<com.ibm.icu.text.DateIntervalInfo: java.util.Map cloneIntervalPatterns(java.util.Map)>",
    "<com.ibm.icu.impl.locale.XLocaleDistance$StringDistanceTable: void addSubtables(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>"
  ]
}